# compiler: R8
# compiler_version: 3.0.41-sc04
# min_api: 21
# pg_map_id: 66abf76
# common_typos_disable
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesCompatParcelizer -> android.support.v4.media.AudioAttributesCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi21Parcelizer -> android.support.v4.media.AudioAttributesImplApi21Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi26Parcelizer -> android.support.v4.media.AudioAttributesImplApi26Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplBaseParcelizer -> android.support.v4.media.AudioAttributesImplBaseParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    2278:2289:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    572:572:void <clinit>() -> <clinit>
    546:548:void <init>(android.os.Parcel) -> <init>
    565:569:java.lang.String toString() -> toString
    558:559:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    573:573:void <init>() -> <init>
    573:573:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    576:576:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    573:573:java.lang.Object[] newArray(int) -> newArray
    581:581:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    2310:2326:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    426:426:void <clinit>() -> <clinit>
    195:203:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    206:216:void <init>(android.os.Parcel) -> <init>
    380:418:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    336:362:java.lang.Object getMediaDescription() -> getMediaDescription
    321:321:java.lang.String toString() -> toString
    305:315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    427:427:void <init>() -> <init>
    427:427:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    430:433:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    427:427:java.lang.Object[] newArray(int) -> newArray
    439:439:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    459:459:void <init>() -> <init>
    560:560:android.support.v4.media.MediaDescriptionCompat build() -> build
    503:503:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    538:538:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    515:515:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    527:527:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    469:469:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    549:549:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    491:491:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    480:480:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    299:632:void <clinit>() -> <clinit>
    364:365:void <init>(android.os.Parcel) -> <init>
    598:604:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    553:553:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    633:633:void <init>() -> <init>
    633:633:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    636:636:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    633:633:java.lang.Object[] newArray(int) -> newArray
    641:641:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    131:131:void <clinit>() -> <clinit>
    109:111:void <init>(int,float) -> <init>
    122:122:int describeContents() -> describeContents
    116:117:java.lang.String toString() -> toString
    127:128:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    140:140:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    145:145:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    67:68:void <init>() -> <init>
    96:233:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    212:216:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    2051:2051:android.support.v4.media.session.IMediaSession getDefaultImpl() -> getDefaultImpl
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    831:832:void <init>(android.os.IBinder) -> <init>
    836:836:android.os.IBinder asBinder() -> asBinder
    906:921:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    696:701:void <init>() -> <init>
    828:828:void binderDied() -> binderDied
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21:
    860:861:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    934:941:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    925:928:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    901:903:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    888:894:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    909:911:void onQueueChanged(java.util.List) -> onQueueChanged
    917:919:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    866:868:void onSessionDestroyed() -> onSessionDestroyed
    874:881:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    949:950:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    1003:1006:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    955:957:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    1034:1036:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    979:981:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    971:973:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    987:989:void onQueueChanged(java.util.List) -> onQueueChanged
    995:997:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    1012:1014:void onRepeatModeChanged(int) -> onRepeatModeChanged
    963:965:void onSessionDestroyed() -> onSessionDestroyed
    1055:1057:void onSessionReady() -> onSessionReady
    1025:1028:void onShuffleModeChanged(int) -> onShuffleModeChanged
    1042:1049:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    2290:2305:void processPendingCallbacksLocked() -> processPendingCallbacksLocked
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    2318:2331:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    2337:2337:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2367:2367:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2349:2349:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2355:2355:void onQueueChanged(java.util.List) -> onQueueChanged
    2361:2361:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2343:2343:void onSessionDestroyed() -> onSessionDestroyed
    2373:2373:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    1384:1384:void <init>(int,int,int,int,int) -> <init>
    1389:1394:void <init>(int,androidx.media.AudioAttributesCompat,int,int,int) -> <init>
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    1059:1059:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
    1076:1082:android.os.Bundle unparcelWithClassLoader(android.os.Bundle) -> unparcelWithClassLoader
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    2270:2270:void <clinit>() -> <clinit>
    2165:2174:void <init>(android.media.session.MediaSession$QueueItem,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    2177:2179:void <init>(android.os.Parcel) -> <init>
    2238:2246:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    2260:2265:java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    2286:2286:java.lang.String toString() -> toString
    2198:2199:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    2271:2271:void <init>() -> <init>
    2271:2271:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2275:2275:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    2271:2271:java.lang.Object[] newArray(int) -> newArray
    2280:2280:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    2310:2310:void <clinit>() -> <clinit>
    2305:2306:void <init>(android.os.Parcel) -> <init>
    2329:2329:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    2310:2310:void <init>() -> <init>
    2310:2310:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2313:2313:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    2310:2310:java.lang.Object[] newArray(int) -> newArray
    2318:2318:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    2115:2115:void <clinit>() -> <clinit>
    1930:1930:void <init>(java.lang.Object) -> <init>
    1921:1940:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,androidx.versionedparcelable.VersionedParcelable) -> <init>
    2010:2021:boolean equals(java.lang.Object) -> equals
    2042:2044:android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    1999:2002:int hashCode() -> hashCode
    2052:2054:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> setExtraBinder
    2072:2074:void setSession2Token(androidx.versionedparcelable.VersionedParcelable) -> setSession2Token
    1990:1993:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    2116:2116:void <init>() -> <init>
    2116:2116:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2120:2125:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    2116:2116:java.lang.Object[] newArray(int) -> newArray
    2130:2130:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    67:67:void <clinit>() -> <clinit>
    44:49:void <init>(android.os.Parcel) -> <init>
    59:63:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    68:68:java.lang.Object[] newArray(int) -> newArray
    76:76:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    871:871:void <clinit>() -> <clinit>
    564:575:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    578:590:void <init>(android.os.Parcel) -> <init>
    807:836:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    595:607:java.lang.String toString() -> toString
    617:628:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    872:872:void <init>() -> <init>
    872:872:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    875:875:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    872:872:java.lang.Object[] newArray(int) -> newArray
    880:880:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    978:978:void <clinit>() -> <clinit>
    900:904:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    907:911:void <init>(android.os.Parcel) -> <init>
    939:953:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    1035:1035:java.lang.String toString() -> toString
    916:919:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    979:979:void <init>() -> <init>
    979:979:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    983:983:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    979:979:java.lang.Object[] newArray(int) -> newArray
    988:988:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    25:26:void <init>() -> <init>
    37:41:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    133:133:android.support.v4.os.IResultReceiver getDefaultImpl() -> getDefaultImpl
    54:74:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    82:83:void <init>(android.os.IBinder) -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
    95:114:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    138:141:void <init>(android.os.Parcel) -> <init>
    96:107:void send(int,android.os.Bundle) -> send
    130:135:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:73:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:58:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:63:void run() -> run
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    111:276:void <init>() -> <init>
    96:96:void access$001(androidx.activity.ComponentActivity) -> access$001
    411:412:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    441:441:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    492:500:void ensureViewModelStore() -> ensureViewModelStore
    689:689:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    466:466:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    550:550:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    556:556:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    482:487:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    418:420:void initViewTreeOwners() -> initViewTreeOwners
    634:635:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    539:539:void onBackPressed() -> onBackPressed
    306:312:void onCreate(android.os.Bundle) -> onCreate
    654:658:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    338:357:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    319:325:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    695:714:void reportFullyDrawn() -> reportFullyDrawn
    389:390:void setContentView(int) -> setContentView
    395:396:void setContentView(android.view.View) -> setContentView
    403:404:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    570:570:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    584:584:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    601:601:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    618:618:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    122:122:void <init>(androidx.activity.ComponentActivity) -> <init>
    129:133:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    144:144:void <init>(androidx.activity.ComponentActivity) -> <init>
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    238:238:void <init>(androidx.activity.ComponentActivity) -> <init>
    242:246:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    252:252:void <init>(androidx.activity.ComponentActivity) -> <init>
    256:261:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    266:266:void <init>(androidx.activity.ComponentActivity) -> <init>
    270:271:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    106:106:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    45:46:void <init>(android.app.Activity) -> <init>
    101:108:void initializeReflectiveFields() -> initializeReflectiveFields
    51:94:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    46:55:void <init>(boolean) -> <init>
    103:103:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:92:void remove() -> remove
    107:107:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:71:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    59:78:void <init>(java.lang.Runnable) -> <init>
    148:153:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    114:116:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    187:197:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    223:226:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    246:250:void cancel() -> cancel
    232:240:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    203:204:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    209:210:void cancel() -> cancel
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
    42:49:void <init>() -> <init>
    73:76:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:108:void clearAvailableContext() -> clearAvailableContext
    97:99:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
    109:109:void <clinit>() -> <clinit>
    45:47:void <init>(int,android.content.Intent) -> <init>
    50:52:void <init>(android.os.Parcel) -> <init>
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    90:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
    34:34:void <init>() -> <init>
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
    51:76:void <init>() -> <init>
    399:400:void bindRcKey(int,java.lang.String) -> bindRcKey
    318:322:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    359:367:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    389:392:int generateRandomNumber() -> generateRandomNumber
    290:302:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    271:277:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    199:216:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    372:377:int registerKey(java.lang.String) -> registerKey
    243:261:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    134:152:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
    216:216:void <init>(androidx.activity.result.ActivityResultRegistry,int,androidx.activity.result.contract.ActivityResultContract,java.lang.String) -> <init>
    224:224:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
    409:411:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$LifecycleContainer:
    430:433:void clearObservers() -> clearObservers
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
    132:132:void <clinit>() -> <clinit>
    124:128:void <init>(android.os.Parcel) -> <init>
    151:154:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
    39:39:void <init>() -> <init>
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
    158:158:void <init>() -> <init>
    158:158:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    229:238:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    93:93:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.appcompat.R$styleable -> androidx.appcompat.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1374:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1374:1386:void <init>(int,int) -> <init>
    1374:1401:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1405:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBarDrawerToggle -> androidx.appcompat.app.ActionBarDrawerToggle:
    184:184:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    120:223:void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int) -> <init>
    503:503:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    258:261:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    444:446:void onDrawerClosed(android.view.View) -> onDrawerClosed
    429:431:void onDrawerOpened(android.view.View) -> onDrawerOpened
    413:416:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    499:499:void setActionBarDescription(int) -> setActionBarDescription
    489:495:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    354:362:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    508:512:void setPosition(float) -> setPosition
    485:485:void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> setToolbarNavigationClickListener
    236:244:void syncState() -> syncState
    282:287:void toggle() -> toggle
androidx.appcompat.app.ActionBarDrawerToggle$1 -> androidx.appcompat.app.ActionBarDrawerToggle$1:
    198:198:void <init>(androidx.appcompat.app.ActionBarDrawerToggle) -> <init>
    201:204:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate:
    519:520:void <init>(android.app.Activity) -> <init>
    538:542:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    525:533:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    547:549:boolean isNavigationVisible() -> isNavigationVisible
    570:576:void setActionBarDescription(int) -> setActionBarDescription
    554:563:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate:
    591:594:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    619:619:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    614:614:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    606:608:void setActionBarDescription(int) -> setActionBarDescription
    599:600:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb:
    45:45:void <clinit>() -> <clinit>
    90:92:android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    71:83:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> setActionBarDescription
    51:63:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    101:133:void <init>(android.app.Activity) -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    82:205:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:222:boolean canTextInput(android.view.View) -> canTextInput
    829:832:void centerButton(android.widget.Button) -> centerButton
    410:414:android.widget.Button getButton(int) -> getButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:233:void installContent() -> installContent
    749:754:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    443:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    324:348:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:257:void setCustomTitle(android.view.View) -> setCustomTitle
    359:367:void setIcon(int) -> setIcon
    378:386:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:263:void setMessage(java.lang.CharSequence) -> setMessage
    560:631:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    271:273:void setView(int) -> setView
    280:282:void setView(android.view.View) -> setView
    290:296:void setView(android.view.View,int,int,int,int) -> setView
    763:824:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:742:void setupContent(android.view.ViewGroup) -> setupContent
    640:668:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:713:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:552:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:146:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:596:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:603:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:615:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:622:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    869:927:void <init>(android.content.Context) -> <init>
    931:975:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1097:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1002:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1016:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1025:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1070:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1082:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:157:void <init>(android.content.DialogInterface) -> <init>
    162:171:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1104:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    840:840:void <init>(android.content.Context) -> <init>
    844:850:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:860:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    98:99:void <init>(android.content.Context,int) -> <init>
    131:131:android.widget.Button getButton(int) -> getButton
    140:140:android.widget.ListView getListView() -> getListView
    278:279:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    114:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:146:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:313:void <init>(android.content.Context) -> <init>
    342:345:void <init>(android.content.Context,int) -> <init>
    983:992:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:660:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:398:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:445:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    459:461:androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    643:644:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    408:408:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    509:510:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    620:620:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:474:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    853:856:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    377:377:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    881:883:androidx.appcompat.app.AlertDialog$Builder setView(int) -> setView
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    94:95:void <init>() -> <init>
    212:213:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    139:139:void attachBaseContext(android.content.Context) -> attachBaseContext
    650:653:void closeOptionsMenu() -> closeOptionsMenu
    593:599:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    259:259:android.view.View findViewById(int) -> findViewById
    583:586:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    553:553:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    189:189:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    604:607:android.content.res.Resources getResources() -> getResources
    163:163:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    500:500:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    116:126:void initDelegate() -> initDelegate
    219:221:void initViewTreeOwners() -> initViewTreeOwners
    314:314:void invalidateOptionsMenu() -> invalidateOptionsMenu
    226:235:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    540:540:void onContentChanged() -> onContentChanged
    417:417:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    278:279:void onDestroy() -> onDestroy
    633:636:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    264:271:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    564:564:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    575:575:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    150:151:void onPostCreate(android.os.Bundle) -> onPostCreate
    240:241:void onPostResume() -> onPostResume
    246:247:void onStart() -> onStart
    252:253:void onStop() -> onStop
    462:481:boolean onSupportNavigateUp() -> onSupportNavigateUp
    284:285:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    641:644:void openOptionsMenu() -> openOptionsMenu
    616:623:boolean performMenuItemShortcut(android.view.KeyEvent) -> performMenuItemShortcut
    194:195:void setContentView(int) -> setContentView
    200:201:void setContentView(android.view.View) -> setContentView
    206:207:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    183:183:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    144:145:void setTheme(int) -> setTheme
    309:309:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    533:533:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    517:517:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatActivity$1 -> androidx.appcompat.app.AppCompatActivity$1:
    117:117:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    121:122:android.os.Bundle saveState() -> saveState
androidx.appcompat.app.AppCompatActivity$2 -> androidx.appcompat.app.AppCompatActivity$2:
    126:126:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    129:132:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    173:175:void <clinit>() -> <clinit>
    271:271:void <init>() -> <init>
    655:661:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate) -> addActiveDelegate
    395:395:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    230:230:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    241:241:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    604:604:int getDefaultNightMode() -> getDefaultNightMode
    665:668:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate) -> removeActivityDelegate
    672:682:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    137:191:void <clinit>() -> <clinit>
    286:286:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    290:290:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    214:336:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    713:716:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2361:2361:boolean applyDayNight() -> applyDayNight
    2366:2388:boolean applyDayNight(boolean) -> applyDayNight
    1021:1054:void applyFixedSizeWindow() -> applyFixedSizeWindow
    343:470:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    780:803:void attachToWindow(android.view.Window) -> attachToWindow
    2449:2449:int calculateNightMode() -> calculateNightMode
    2069:2089:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1951:1961:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    755:759:void cleanupAutoManagers() -> cleanupAutoManagers
    1965:1965:void closePanel(int) -> closePanel
    1969:1996:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    2469:2480:android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration) -> createOverrideConfigurationForDayNight
    841:1005:android.view.ViewGroup createSubDecor() -> createSubDecor
    1522:1556:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2335:2355:void dismissPopups() -> dismissPopups
    1454:1472:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2157:2178:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1393:1394:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    807:835:void ensureSubDecor() -> ensureSubDecor
    771:775:void ensureWindow() -> ensureWindow
    2094:2098:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    632:633:android.view.View findViewById(int) -> findViewById
    3368:3466:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta
    606:612:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2626:2629:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context) -> getAutoBatteryNightModeManager
    2614:2614:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> getAutoTimeNightModeManager
    2618:2622:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context) -> getAutoTimeNightModeManager
    3306:3306:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    2413:2413:int getLocalNightMode() -> getLocalNightMode
    620:625:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2107:2117:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    536:537:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    1140:1144:java.lang.CharSequence getTitle() -> getTitle
    545:545:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    549:561:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1826:1841:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1732:1734:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1783:1820:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1587:1592:void installViewFactory() -> installViewFactory
    1219:1222:void invalidateOptionsMenu() -> invalidateOptionsMenu
    2148:2152:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2633:2667:boolean isActivityManifestHandlingUiMode() -> isActivityManifestHandlingUiMode
    1389:1389:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2426:2442:int mapNightMode(android.content.Context,int) -> mapNightMode
    1400:1407:boolean onBackPressed() -> onBackPressed
    640:654:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    492:523:void onCreate(android.os.Bundle) -> onCreate
    1604:1604:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1613:1613:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    725:750:void onDestroy() -> onDestroy
    1505:1513:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2001:2004:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1417:1443:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1478:1494:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2012:2058:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1174:1178:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1186:1186:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1165:1167:void onMenuOpened(int) -> onMenuOpened
    1149:1158:void onPanelClosed(int) -> onPanelClosed
    529:529:void onPostCreate(android.os.Bundle) -> onPostCreate
    678:680:void onPostResume() -> onPostResume
    659:663:void onStart() -> onStart
    668:672:void onStop() -> onStop
    1634:1728:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    541:541:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    2124:2140:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1847:1945:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1739:1779:void reopenMenu(boolean) -> reopenMenu
    1059:1096:boolean requestWindowFeature(int) -> requestWindowFeature
    2318:2322:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    686:690:void setContentView(android.view.View) -> setContentView
    695:699:void setContentView(int) -> setContentView
    704:708:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    567:599:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    765:765:void setTheme(int) -> setTheme
    1127:1134:void setTitle(java.lang.CharSequence) -> setTitle
    1379:1379:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1565:1581:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1192:1214:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1226:1373:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2310:2311:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1618:1624:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2498:2550:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2561:2601:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration) -> updateResourcesConfigurationForNightMode
    2194:2295:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> updateStatusGuard
    2302:2306:void updateStatusGuardColor(android.view.View) -> updateStatusGuardColor
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$1:
    165:165:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    182:185:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    169:177:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    264:264:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    267:274:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    940:940:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    944:956:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$4:
    962:962:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    965:965:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    1005:1005:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1011:1011:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1281:1281:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1284:1307:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1292:1292:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1300:1302:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1295:1295:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1334:1334:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1347:1349:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1337:1341:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    3310:3310:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3324:3324:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    3315:3318:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    3329:3330:boolean isNavigationVisible() -> isNavigationVisible
    3344:3346:void setActionBarDescription(int) -> setActionBarDescription
    3335:3338:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2765:2765:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2779:2779:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2770:2772:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2676:2677:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2693:2693:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2682:2682:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2698:2726:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2687:2688:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2706:2706:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2709:2718:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl:
    3487:3487:android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration) -> createConfigurationContext
    3480:3481:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_densityDpi
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl:
    3496:3496:boolean isPowerSaveMode(android.os.PowerManager) -> isPowerSaveMode
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl:
    3506:3510:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_locale
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl:
    3521:3529:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_colorMode
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    3051:3052:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    3057:3058:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3063:3064:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    3069:3074:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    3112:3113:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    3119:3120:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    3085:3104:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    3178:3185:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    3126:3135:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    3163:3171:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    3145:3154:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3274:3276:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3295:3297:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3282:3283:int getApplyableNightMode() -> getApplyableNightMode
    3290:3290:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    3195:3195:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3227:3234:void cleanup() -> cleanup
    3204:3220:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    3213:3213:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    3216:3216:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3246:3247:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3263:3266:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3253:3253:int getApplyableNightMode() -> getApplyableNightMode
    3258:3258:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl:
    484:484:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration) -> applyOverrideConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    3015:3016:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3021:3022:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3045:3045:boolean isOutOfBounds(int,int) -> isOutOfBounds
    3027:3036:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3041:3041:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2848:2851:void <init>(int) -> <init>
    2916:2925:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2855:2858:boolean hasPanelItems() -> hasPanelItems
    2904:2911:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2872:2900:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState:
    2995:2995:void <clinit>() -> <clinit>
    2965:2965:void <init>() -> <init>
    2984:2989:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    2975:2979:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1:
    2995:2995:void <init>() -> <init>
    2995:2995:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2995:2995:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2998:2998:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3003:3003:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2995:2995:java.lang.Object[] newArray(int) -> newArray
    3008:3008:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2731:2731:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2736:2746:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2754:2757:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    45:67:void <init>(android.content.Context,int) -> <init>
    129:129:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    140:142:void dismiss() -> dismiss
    213:214:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    176:179:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    185:187:int getThemeResId(android.content.Context,int) -> getThemeResId
    169:169:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:79:void onCreate(android.os.Bundle) -> onCreate
    134:135:void onStop() -> onStop
    95:95:void setContentView(int) -> setContentView
    100:100:void setContentView(android.view.View) -> setContentView
    105:105:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:118:void setTitle(java.lang.CharSequence) -> setTitle
    123:124:void setTitle(int) -> setTitle
    208:208:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    160:160:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    75:87:void <clinit>() -> <clinit>
    73:90:void <init>() -> <init>
    313:328:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    240:240:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    204:204:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    224:224:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    234:234:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    209:209:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    219:219:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    199:199:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    246:246:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    229:229:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    251:251:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    256:256:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    214:214:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    194:194:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    261:261:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    100:186:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    333:347:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    277:304:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    360:381:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    266:266:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    397:399:void <init>(android.view.View,java.lang.String) -> <init>
    404:414:void onClick(android.view.View) -> onClick
    422:447:void resolveMethod(android.content.Context) -> resolveMethod
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    46:54:void flush(android.content.res.Resources) -> flush
    60:77:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:108:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:160:void flushNougats(android.content.res.Resources) -> flushNougats
    166:205:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
    52:74:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    429:429:boolean closeOptionsMenu() -> closeOptionsMenu
    441:442:boolean collapseActionView() -> collapseActionView
    505:512:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    324:324:int getDisplayOptions() -> getDisplayOptions
    544:549:android.view.Menu getMenu() -> getMenu
    147:147:android.content.Context getThemedContext() -> getThemedContext
    78:78:android.view.Window$Callback getWrappedWindowCallback() -> getWrappedWindowCallback
    434:435:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    187:187:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    490:490:void onDestroy() -> onDestroy
    477:482:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    469:470:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    424:424:boolean openOptionsMenu() -> openOptionsMenu
    449:464:void populateOptionsMenu() -> populateOptionsMenu
    276:276:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    260:261:void setDisplayOptions(int,int) -> setDisplayOptions
    177:177:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    157:157:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    219:219:void setTitle(java.lang.CharSequence) -> setTitle
    224:224:void setTitle(int) -> setTitle
    229:229:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
    54:54:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    57:57:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
    62:62:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    65:65:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
    555:555:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    569:578:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    560:561:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
    584:584:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    594:599:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper:
    517:518:void <init>(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    537:539:android.view.View onCreatePanelView(int) -> onCreatePanelView
    523:526:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    95:136:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    66:71:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    110:124:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:138:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:101:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    60:60:void setInstance(androidx.appcompat.app.TwilightManager) -> setInstance
    148:191:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:205:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    85:86:void <clinit>() -> <clinit>
    99:175:void <init>(android.app.Activity,boolean) -> <init>
    99:180:void <init>(android.app.Dialog) -> <init>
    874:905:void animateToMode(boolean) -> animateToMode
    973:974:boolean collapseActionView() -> collapseActionView
    310:313:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    349:356:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    835:861:void doHide(boolean) -> doHide
    786:830:void doShow(boolean) -> doShow
    672:672:void enableContentAnimations(boolean) -> enableContentAnimations
    235:241:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    516:516:int getDisplayOptions() -> getDisplayOptions
    511:511:int getNavigationMode() -> getNavigationMode
    919:931:android.content.Context getThemedContext() -> getThemedContext
    710:715:void hideForActionMode() -> hideForActionMode
    721:723:void hideForSystem() -> hideForSystem
    193:231:void init(android.view.View) -> init
    257:257:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    961:963:void onContentScrollStarted() -> onContentScrollStarted
    1400:1408:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    319:319:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1393:1394:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    378:378:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    472:476:void setDisplayOptions(int,int) -> setDisplayOptions
    247:247:void setElevation(float) -> setElevation
    261:282:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    729:734:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    956:956:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    941:941:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    393:393:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    331:333:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    398:398:void setTitle(int) -> setTitle
    439:439:void setTitle(java.lang.CharSequence) -> setTitle
    444:444:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    914:914:boolean shouldAnimateContextView() -> shouldAnimateContextView
    684:689:void showForActionMode() -> showForActionMode
    695:697:void showForSystem() -> showForSystem
    521:535:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    769:780:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:147:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:156:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:165:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    991:996:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1058:1063:boolean dispatchOnCreate() -> dispatchOnCreate
    1011:1037:void finish() -> finish
    1115:1115:android.view.View getCustomView() -> getCustomView
    1006:1006:android.view.Menu getMenu() -> getMenu
    1001:1001:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1099:1099:java.lang.CharSequence getSubtitle() -> getSubtitle
    1094:1094:java.lang.CharSequence getTitle() -> getTitle
    1042:1054:void invalidate() -> invalidate
    1110:1110:boolean isTitleOptional() -> isTitleOptional
    1120:1121:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1148:1152:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1068:1069:void setCustomView(android.view.View) -> setCustomView
    1074:1074:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1089:1089:void setSubtitle(int) -> setSubtitle
    1079:1079:void setTitle(java.lang.CharSequence) -> setTitle
    1084:1084:void setTitle(int) -> setTitle
    1104:1105:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    50:55:void <clinit>() -> <clinit>
    150:158:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    130:144:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    67:86:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    173:176:android.util.TypedValue getTypedValue() -> getTypedValue
    112:122:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    162:167:boolean isColorInt(android.content.Context,int) -> isColorInt
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry:
    186:188:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    92:92:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    105:121:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:boolean canApplyTheme() -> canApplyTheme
    619:620:void clearMutated() -> clearMutated
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    614:614:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    171:177:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    201:209:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    483:497:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    472:472:void init() -> init
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    264:270:void jumpToCurrentState() -> jumpToCurrentState
    605:607:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    278:286:boolean onStateChange(int[]) -> onStateChange
    564:600:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    510:554:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    293:349:boolean selectTransition(int) -> selectTransition
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    718:720:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    89:89:void setDither(boolean) -> setDither
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    214:220:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    449:467:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    370:371:void <init>(android.graphics.drawable.Animatable) -> <init>
    376:376:void start() -> start
    381:381:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    634:641:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    667:668:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    652:661:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    681:681:int getKeyframeIdAt(int) -> getKeyframeIdAt
    673:677:int indexOfKeyframe(int[]) -> indexOfKeyframe
    685:686:int indexOfTransition(int,int) -> indexOfTransition
    690:691:boolean isTransitionReversed(int,int) -> isTransitionReversed
    647:648:void mutate() -> mutate
    702:702:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    708:708:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    695:696:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    433:434:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    439:439:void start() -> start
    444:444:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    392:406:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    411:411:boolean canReverse() -> canReverse
    421:421:void reverse() -> reverse
    416:416:void start() -> start
    426:426:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    732:733:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    759:772:float getInterpolation(float) -> getInterpolation
    754:754:int getTotalDuration() -> getTotalDuration
    737:749:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    353:353:void <init>() -> <init>
    353:353:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    54:75:void <init>() -> <init>
    535:570:void animate(boolean) -> animate
    594:594:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    600:600:boolean canApplyTheme() -> canApplyTheme
    634:635:void clearMutated() -> clearMutated
    87:91:void draw(android.graphics.Canvas) -> draw
    153:153:int getAlpha() -> getAlpha
    97:98:int getChangingConfigurations() -> getChangingConfigurations
    605:607:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    577:577:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    415:415:int getCurrentIndex() -> getCurrentIndex
    295:298:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    341:344:int getIntrinsicHeight() -> getIntrinsicHeight
    333:336:int getIntrinsicWidth() -> getIntrinsicWidth
    357:360:int getMinimumHeight() -> getMinimumHeight
    349:352:int getMinimumWidth() -> getMinimumWidth
    405:406:int getOpacity() -> getOpacity
    131:132:void getOutline(android.graphics.Outline) -> getOutline
    108:123:boolean getPadding(android.graphics.Rect) -> getPadding
    491:531:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    368:372:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    250:270:void jumpToCurrentState() -> jumpToCurrentState
    614:618:android.graphics.drawable.Drawable mutate() -> mutate
    102:103:boolean needsMirroring() -> needsMirroring
    218:222:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    328:328:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    315:319:boolean onLevelChange(int) -> onLevelChange
    304:308:boolean onStateChange(int[]) -> onStateChange
    1207:1207:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    378:379:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    428:480:boolean selectDrawable(int) -> selectDrawable
    138:145:void setAlpha(int) -> setAlpha
    233:236:void setAutoMirrored(boolean) -> setAutoMirrored
    169:173:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1156:1166:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    159:162:void setDither(boolean) -> setDither
    276:277:void setHotspot(float,float) -> setHotspot
    283:289:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:183:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:192:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    392:397:boolean setVisible(boolean,boolean) -> setVisible
    385:386:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    588:588:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    467:467:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    470:471:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl -> androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl:
    1218:1218:boolean canApplyTheme(android.graphics.drawable.Drawable$ConstantState) -> canApplyTheme
    1226:1226:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
    1222:1222:android.content.res.Resources getResources(android.content.res.Resources$Theme) -> getResources
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1172:1172:void <init>() -> <init>
    1193:1194:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1200:1201:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1181:1182:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1176:1176:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    653:755:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:785:int addChild(android.graphics.drawable.Drawable) -> addChild
    897:907:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    914:924:boolean canApplyTheme() -> canApplyTheme
    1137:1150:boolean canConstantState() -> canConstantState
    953:953:void clearMutated() -> clearMutated
    1045:1060:void computeConstantSize() -> computeConstantSize
    802:809:void createAllFutures() -> createAllFutures
    798:798:int getCapacity() -> getCapacity
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    830:843:android.graphics.drawable.Drawable getChild(int) -> getChild
    823:823:int getChildCount() -> getChildCount
    1018:1021:int getConstantHeight() -> getConstantHeight
    1038:1041:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1028:1031:int getConstantMinimumWidth() -> getConstantMinimumWidth
    969:990:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1008:1011:int getConstantWidth() -> getConstantWidth
    1085:1096:int getOpacity() -> getOpacity
    1126:1130:void growArray(int,int) -> growArray
    793:794:void invalidateCache() -> invalidateCache
    1001:1001:boolean isConstantSize() -> isConstantSize
    814:818:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    994:994:void setConstantSize(boolean) -> setConstantSize
    1065:1065:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1073:1073:void setExitFadeDuration(int) -> setExitFadeDuration
    855:869:boolean setLayoutDirection(int,int) -> setLayoutDirection
    962:962:void setVariablePadding(boolean) -> setVariablePadding
    881:889:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:47:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:52:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    113:113:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    139:139:int getIntrinsicHeight() -> getIntrinsicHeight
    134:134:int getIntrinsicWidth() -> getIntrinsicWidth
    149:149:int getMinimumHeight() -> getMinimumHeight
    144:144:int getMinimumWidth() -> getMinimumWidth
    124:124:int getOpacity() -> getOpacity
    154:154:boolean getPadding(android.graphics.Rect) -> getPadding
    103:103:int[] getState() -> getState
    129:129:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    222:222:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    162:162:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    193:193:boolean isAutoMirrored() -> isAutoMirrored
    93:93:boolean isStateful() -> isStateful
    108:108:void jumpToCurrentState() -> jumpToCurrentState
    57:57:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:183:boolean onLevelChange(int) -> onLevelChange
    170:170:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    83:83:void setAlpha(int) -> setAlpha
    188:188:void setAutoMirrored(boolean) -> setAutoMirrored
    62:62:void setChangingConfigurations(int) -> setChangingConfigurations
    88:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    73:73:void setDither(boolean) -> setDither
    78:78:void setFilterBitmap(boolean) -> setFilterBitmap
    213:213:void setHotspot(float,float) -> setHotspot
    218:218:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    98:98:boolean setState(int[]) -> setState
    198:198:void setTint(int) -> setTint
    203:203:void setTintList(android.content.res.ColorStateList) -> setTintList
    208:208:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    118:118:boolean setVisible(boolean,boolean) -> setVisible
    226:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    178:178:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    100:100:void <clinit>() -> <clinit>
    97:151:void <init>(android.content.Context) -> <init>
    326:400:void draw(android.graphics.Canvas) -> draw
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    405:407:void setAlpha(int) -> setAlpha
    236:239:void setBarThickness(float) -> setBarThickness
    216:218:void setColor(int) -> setColor
    413:414:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    267:269:void setGapSize(float) -> setGapSize
    448:450:void setProgress(float) -> setProgress
    300:302:void setSpinEnabled(boolean) -> setSpinEnabled
    318:320:void setVerticalMirror(boolean) -> setVerticalMirror
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    403:407:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    414:416:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    391:392:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    324:325:void clearMutated() -> clearMutated
    79:79:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    319:319:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    235:252:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    310:312:android.graphics.drawable.Drawable mutate() -> mutate
    113:122:boolean onStateChange(int[]) -> onStateChange
    397:399:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    332:337:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    351:352:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    381:384:void growArray(int,int) -> growArray
    357:360:int indexOfStateSet(int[]) -> indexOfStateSet
    343:347:void mutate() -> mutate
    370:370:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    376:376:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.resources.R$styleable -> androidx.appcompat.resources.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:47:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:59:int getMaxActionButtons() -> getMaxActionButtons
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:81:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:57:void setTag(java.lang.Object) -> setTag
    134:134:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:48:void <init>() -> <init>
    63:64:void <init>(android.content.Context,int) -> <init>
    77:78:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    97:104:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    83:83:void attachBaseContext(android.content.Context) -> attachBaseContext
    200:200:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:126:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    161:167:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    147:156:android.content.res.Resources$Theme getTheme() -> getTheme
    142:142:int getThemeResId() -> getThemeResId
    186:194:void initializeTheme() -> initializeTheme
    182:182:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    131:133:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    51:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    106:112:void finish() -> finish
    132:132:android.view.View getCustomView() -> getCustomView
    117:117:android.view.Menu getMenu() -> getMenu
    137:137:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    127:127:java.lang.CharSequence getSubtitle() -> getSubtitle
    122:122:java.lang.CharSequence getTitle() -> getTitle
    101:101:void invalidate() -> invalidate
    90:90:boolean isTitleOptional() -> isTitleOptional
    142:142:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    162:163:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    95:96:void setCustomView(android.view.View) -> setCustomView
    69:69:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    79:79:void setSubtitle(int) -> setSubtitle
    64:64:void setTitle(java.lang.CharSequence) -> setTitle
    74:74:void setTitle(int) -> setTitle
    84:85:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:51:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:81:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:76:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:116:void setCustomView(android.view.View) -> setCustomView
    71:71:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:106:void setSubtitle(int) -> setSubtitle
    61:61:void setTag(java.lang.Object) -> setTag
    66:66:void setTitle(java.lang.CharSequence) -> setTitle
    96:96:void setTitle(int) -> setTitle
    131:131:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:154:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:203:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:185:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:178:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:104:void <init>(android.content.Context) -> <init>
    231:235:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:136:void inflate(int,android.view.Menu) -> inflate
    145:219:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    337:352:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    530:531:void addItem() -> addItem
    535:537:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    462:462:char getShortcut(java.lang.String) -> getShortcut
    542:542:boolean hasAddedItem() -> hasAddedItem
    549:554:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:379:void readGroup(android.util.AttributeSet) -> readGroup
    386:455:void readItem(android.util.AttributeSet) -> readItem
    356:361:void resetGroup() -> resetGroup
    467:525:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    42:120:void <init>() -> <init>
    90:96:void cancel() -> cancel
    86:86:void onAnimationsEnded() -> onAnimationsEnded
    53:54:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:63:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:101:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:108:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:115:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:82:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:132:void onAnimationStart(android.view.View) -> onAnimationStart
    137:139:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:54:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:171:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:166:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:129:void onAttachedToWindow() -> onAttachedToWindow
    119:119:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:134:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:139:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:184:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:178:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:114:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:124:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    53:84:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    437:446:void applyIconTint() -> applyIconTint
    340:340:android.view.ActionProvider getActionProvider() -> getActionProvider
    94:94:int getAlphabeticModifiers() -> getAlphabeticModifiers
    89:89:char getAlphabeticShortcut() -> getAlphabeticShortcut
    392:392:java.lang.CharSequence getContentDescription() -> getContentDescription
    99:99:int getGroupId() -> getGroupId
    104:104:android.graphics.drawable.Drawable getIcon() -> getIcon
    418:418:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    433:433:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    109:109:android.content.Intent getIntent() -> getIntent
    114:114:int getItemId() -> getItemId
    129:129:int getNumericModifiers() -> getNumericModifiers
    124:124:char getNumericShortcut() -> getNumericShortcut
    134:134:int getOrder() -> getOrder
    144:144:java.lang.CharSequence getTitle() -> getTitle
    149:149:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    403:403:java.lang.CharSequence getTooltipText() -> getTooltipText
    159:159:boolean isCheckable() -> isCheckable
    164:164:boolean isChecked() -> isChecked
    169:169:boolean isEnabled() -> isEnabled
    174:174:boolean isVisible() -> isVisible
    335:335:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    325:325:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    345:345:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    179:179:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    185:186:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    192:192:android.view.MenuItem setCheckable(boolean) -> setCheckable
    203:203:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    386:386:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    209:209:android.view.MenuItem setEnabled(boolean) -> setEnabled
    215:217:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    223:225:android.view.MenuItem setIcon(int) -> setIcon
    408:411:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    423:426:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    231:231:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    237:237:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    243:244:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    381:381:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    250:250:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    256:257:android.view.MenuItem setShortcut(char,char) -> setShortcut
    264:267:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    360:360:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    355:355:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    273:273:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    279:279:android.view.MenuItem setTitle(int) -> setTitle
    285:285:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    397:397:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    291:291:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:151:void onClick(android.view.View) -> onClick
    92:95:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:294:void onMeasure(int,int) -> onMeasure
    333:333:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    215:233:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:156:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:114:void setPadding(int,int,int,int) -> setPadding
    160:160:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    188:209:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:300:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:306:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:316:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:65:void <init>(android.content.Context,int,int) -> <init>
    134:138:void addItemView(android.view.View,int) -> addItemView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    148:148:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:72:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:214:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:222:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:154:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    248:248:void setId(int) -> setId
    91:121:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    34:35:void <init>(android.content.Context) -> <init>
    39:53:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    62:74:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    83:87:void internalClear() -> internalClear
    92:97:void internalRemoveGroup(int) -> internalRemoveGroup
    104:109:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    355:360:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    246:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    288:295:void dismiss() -> dismiss
    656:658:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    517:519:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    538:581:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    316:316:int getInitialMenuPosition() -> getInitialMenuPosition
    766:768:android.widget.ListView getListView() -> getListView
    330:345:int getNextMenuPosition(int) -> getNextMenuPosition
    589:589:boolean isShowing() -> isShowing
    668:721:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    600:611:void onDismiss() -> onDismiss
    303:304:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    630:642:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    750:755:void setAnchorView(android.view.View) -> setAnchorView
    624:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    242:242:void setForceShowIcon(boolean) -> setForceShowIcon
    741:744:void setGravity(int) -> setGravity
    773:774:void setHorizontalOffset(int) -> setHorizontalOffset
    761:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    785:785:void setShowTitle(boolean) -> setShowTitle
    779:780:void setVerticalOffset(int) -> setVerticalOffset
    260:278:void show() -> show
    370:502:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    617:618:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:112:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    127:133:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:193:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:143:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:188:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    801:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    808:808:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    73:73:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:81:void onDetachedFromWindow() -> onDetachedFromWindow
    92:92:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:97:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:138:void addContentView(android.view.View) -> addContentView
    142:145:void addContentView(android.view.View,int) -> addContentView
    347:353:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    327:330:android.view.LayoutInflater getInflater() -> getInflater
    166:166:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    309:313:void insertCheckBox() -> insertCheckBox
    294:297:void insertIconView() -> insertIconView
    301:305:void insertRadioButton() -> insertRadioButton
    102:119:void onFinishInflate() -> onFinishInflate
    282:290:void onMeasure(int,int) -> onMeasure
    171:210:void setCheckable(boolean) -> setCheckable
    150:150:void setForceShowIcon(boolean) -> setForceShowIcon
    339:341:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    256:276:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    242:250:void setShortcut(boolean,char) -> setShortcut
    235:236:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    156:160:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:73:void <init>(android.content.Context,int) -> <init>
    81:83:void <init>(int,int) -> <init>
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:173:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    143:148:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:138:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:133:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    232:235:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:289:void findExpandedIndex() -> findExpandedIndex
    240:242:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    268:272:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:295:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    36:49:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:126:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    94:109:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:132:void notifyDataSetChanged() -> notifyDataSetChanged
    57:57:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:235:void <init>(android.content.Context) -> <init>
    466:466:android.view.MenuItem add(java.lang.CharSequence) -> add
    471:471:android.view.MenuItem add(int) -> add
    476:476:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    481:481:android.view.MenuItem add(int,int,int,int) -> add
    520:540:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    441:452:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    250:250:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    263:265:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    486:486:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    491:491:android.view.SubMenu addSubMenu(int) -> addSubMenu
    496:498:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    505:505:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    841:842:void changeMenuMode() -> changeMenuMode
    604:609:void clear() -> clear
    1213:1217:void clearHeader() -> clearHeader
    1030:1041:void close(boolean) -> close
    1046:1046:void close() -> close
    1373:1389:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    460:460:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    834:834:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    284:295:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    300:314:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1351:1367:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    724:724:int findGroupIndex(int) -> findGroupIndex
    728:737:int findGroupIndex(int,int) -> findGroupIndex
    847:849:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    693:699:android.view.MenuItem findItem(int) -> findItem
    711:715:int findItemIndex(int) -> findItemIndex
    930:956:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    882:911:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1163:1199:void flagActionItems() -> flagActionItems
    1203:1204:java.util.ArrayList getActionItems() -> getActionItems
    830:830:android.content.Context getContext() -> getContext
    1395:1395:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1316:1316:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1312:1312:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1320:1320:android.view.View getHeaderView() -> getHeaderView
    752:752:android.view.MenuItem getItem(int) -> getItem
    1208:1209:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1347:1347:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    781:785:int getOrdering(int) -> getOrdering
    826:826:android.content.res.Resources getResources() -> getResources
    1118:1133:java.util.ArrayList getVisibleItems() -> getVisibleItems
    675:683:boolean hasVisibleItems() -> hasVisibleItems
    514:514:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    792:792:boolean isQwertyMode() -> isQwertyMode
    757:757:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    822:822:boolean isShortcutsVisible() -> isShortcutsVisible
    1112:1113:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1101:1102:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1057:1067:void onItemsChanged(boolean) -> onItemsChanged
    971:971:boolean performIdentifierAction(int,int) -> performIdentifierAction
    975:975:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    979:1014:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    859:868:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    554:565:void removeGroup(int) -> removeGroup
    549:549:void removeItem(int) -> removeItem
    580:584:void removeItemAtInt(int,boolean) -> removeItemAtInt
    275:278:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    404:424:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    375:395:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    434:434:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    239:239:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    613:627:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    632:638:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    510:510:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    663:668:void setGroupEnabled(int,boolean) -> setGroupEnabled
    645:658:void setGroupVisible(int,boolean) -> setGroupVisible
    1283:1283:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1295:1295:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1222:1248:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1259:1259:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1271:1271:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1307:1307:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1404:1404:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    762:764:void setQwertyMode(boolean) -> setQwertyMode
    812:815:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    747:747:int size() -> size
    1086:1090:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1078:1081:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    43:44:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    140:141:void dismiss() -> dismiss
    170:170:void onClick(android.content.DialogInterface,int) -> onClick
    152:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    147:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    96:126:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    162:163:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    54:90:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    68:145:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    403:403:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:582:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    838:848:boolean collapseActionView() -> collapseActionView
    824:830:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:773:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:508:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:477:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:859:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:176:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    716:716:boolean requiresOverflow() -> requiresOverflow
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:756:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:764:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:866:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:254:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:269:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:598:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:624:android.view.MenuItem setChecked(boolean) -> setChecked
    631:634:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:884:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    191:196:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:605:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:519:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:531:android.view.MenuItem setIcon(int) -> setIcon
    539:543:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:559:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:228:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    721:723:void setIsActionButton(boolean) -> setIsActionButton
    682:682:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:296:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:310:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:876:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:672:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:320:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:333:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    742:746:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:818:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:430:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:806:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:458:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:493:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:898:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:665:android.view.MenuItem setVisible(boolean) -> setVisible
    655:656:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:809:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:60:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:314:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:293:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:306:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:272:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:284:android.view.MenuItem setActionView(int) -> setActionView
    171:171:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:177:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:204:android.view.MenuItem setChecked(boolean) -> setChecked
    343:343:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:225:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:393:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:108:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:114:android.view.MenuItem setIcon(int) -> setIcon
    365:365:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:376:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:125:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:149:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:155:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:337:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:247:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:136:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:143:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:258:void setShowAsAction(int) -> setShowAsAction
    263:263:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:80:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:86:android.view.MenuItem setTitle(int) -> setTitle
    97:97:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:354:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:434:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:454:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    463:464:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:496:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:490:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:514:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:524:void onActionViewCollapsed() -> onActionViewCollapsed
    519:519:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:415:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:402:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    147:164:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:131:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:71:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    203:207:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    80:80:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    61:340:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    230:263:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    304:305:void dismiss() -> dismiss
    161:164:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    326:326:boolean isShowing() -> isShowing
    318:321:void onDismiss() -> onDismiss
    106:106:void setAnchorView(android.view.View) -> setAnchorView
    119:121:void setForceShowIcon(boolean) -> setForceShowIcon
    133:133:void setGravity(int) -> setGravity
    95:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    331:333:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    144:145:void show() -> show
    269:296:void showPopup(int,int,boolean,boolean) -> showPopup
    174:182:boolean tryShow() -> tryShow
    210:218:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    340:340:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    343:343:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:45:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    94:102:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:124:void clear() -> clear
    164:164:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:118:void removeGroup(int) -> removeGroup
    111:112:void removeItem(int) -> removeItem
    129:129:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:139:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:134:void setGroupVisible(int,boolean) -> setGroupVisible
    184:184:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:135:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    215:216:void dismiss() -> dismiss
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:305:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:243:void onDismiss() -> onDismiss
    330:331:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:290:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:325:void setAnchorView(android.view.View) -> setAnchorView
    258:258:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:140:void setForceShowIcon(boolean) -> setForceShowIcon
    145:145:void setGravity(int) -> setGravity
    350:350:void setHorizontalOffset(int) -> setHorizontalOffset
    339:339:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:360:void setShowTitle(boolean) -> setShowTitle
    355:355:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:201:boolean tryShow() -> tryShow
    249:252:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:73:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    87:91:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    43:46:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    138:138:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    90:91:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    133:133:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    143:147:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    75:75:android.view.MenuItem getItem() -> getItem
    70:70:android.view.Menu getParentMenu() -> getParentMenu
    85:85:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    157:157:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    56:56:boolean isQwertyMode() -> isQwertyMode
    66:66:boolean isShortcutsVisible() -> isShortcutsVisible
    80:80:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    152:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    108:108:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    113:113:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    118:118:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    123:123:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    128:128:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    96:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    102:102:android.view.SubMenu setIcon(int) -> setIcon
    51:51:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:40:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:75:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:57:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:63:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:45:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:51:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:69:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:80:android.view.SubMenu setIcon(int) -> setIcon
    86:86:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    54:54:void <init>(android.content.Context) -> <init>
    58:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:36:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    36:36:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    248:254:int measureChildView(android.view.View,int,int,int) -> measureChildView
    75:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:134:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    96:109:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    262:269:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    187:191:void setVisibility(int) -> setVisibility
    160:175:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    275:276:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    302:302:void onAnimationCancel(android.view.View) -> onAnimationCancel
    294:297:void onAnimationEnd(android.view.View) -> onAnimationEnd
    288:289:void onAnimationStart(android.view.View) -> onAnimationStart
    281:282:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:33:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:47:void draw(android.graphics.Canvas) -> draw
    68:75:void getOutline(android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    55:55:void <init>(android.content.Context) -> <init>
    59:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:176:void drawableStateChanged() -> drawableStateChanged
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    243:243:android.view.View getTabContainer() -> getTabContainer
    263:263:boolean isCollapsed(android.view.View) -> isCollapsed
    182:190:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:86:void onFinishInflate() -> onFinishInflate
    222:222:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:345:void onLayout(boolean,int,int,int,int) -> onLayout
    273:296:void onMeasure(int,int) -> onMeasure
    214:214:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    229:232:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:203:void setTransitioning(boolean) -> setTransitioning
    153:157:void setVisibility(int) -> setVisibility
    257:257:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:163:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    59:59:void <init>(android.content.Context) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    195:196:void closeMode() -> closeMode
    239:239:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    244:244:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    132:132:java.lang.CharSequence getSubtitle() -> getSubtitle
    128:128:java.lang.CharSequence getTitle() -> getTitle
    163:191:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    136:158:void initTitle() -> initTitle
    384:384:boolean isTitleOptional() -> isTitleOptional
    202:207:void killMode() -> killMode
    90:93:void onDetachedFromWindow() -> onDetachedFromWindow
    42:42:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    365:372:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    329:354:void onLayout(boolean,int,int,int,int) -> onLayout
    249:323:void onMeasure(int,int) -> onMeasure
    42:42:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    99:99:void setContentHeight(int) -> setContentHeight
    103:114:void setCustomView(android.view.View) -> setCustomView
    123:124:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    118:119:void setTitle(java.lang.CharSequence) -> setTitle
    377:380:void setTitleOptional(boolean) -> setTitleOptional
    42:42:void setVisibility(int) -> setVisibility
    42:42:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    213:214:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    172:172:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    175:175:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    147:147:void <clinit>() -> <clinit>
    155:155:void <init>(android.content.Context) -> <init>
    71:162:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    741:742:void addActionBarHideOffset() -> addActionBarHideOffset
    288:303:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    822:823:boolean canShowOverflowMenu() -> canShowOverflowMenu
    404:404:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    876:877:void dismissPopups() -> dismissPopups
    543:550:void draw(android.graphics.Canvas) -> draw
    311:334:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    63:63:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    389:389:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    63:63:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    394:394:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    399:399:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:int getActionBarHideOffset() -> getActionBarHideOffset
    682:688:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    670:670:int getNestedScrollAxes() -> getNestedScrollAxes
    718:721:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    846:847:boolean hideOverflowMenu() -> hideOverflowMenu
    166:175:void init(android.content.Context) -> init
    771:780:void initFeature(int) -> initFeature
    211:211:boolean isInOverlayMode() -> isInOverlayMode
    834:835:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    828:829:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    347:384:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    241:243:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    180:181:void onDetachedFromWindow() -> onDetachedFromWindow
    520:536:void onLayout(boolean,int,int,int,int) -> onLayout
    410:514:void onMeasure(int,int) -> onMeasure
    646:654:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    599:599:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    564:564:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    592:592:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    626:627:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    577:577:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    615:619:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    571:571:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    607:610:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    584:584:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    632:640:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    253:271:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    278:281:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    731:732:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    726:727:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    674:677:void pullChildren() -> pullChildren
    736:737:void removeActionBarHideOffset() -> removeActionBarHideOffset
    711:714:void setActionBarHideOffset(int) -> setActionBarHideOffset
    185:193:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    215:215:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    693:697:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    858:859:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    852:853:void setMenuPrepared() -> setMenuPrepared
    199:206:void setOverlayMode(boolean) -> setOverlayMode
    753:754:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    759:760:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    746:748:boolean shouldHideActionBarOnFling(float) -> shouldHideActionBarOnFling
    840:841:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    114:114:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    123:124:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    117:118:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    128:128:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    131:133:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    137:137:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    140:143:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    882:882:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    886:886:void <init>(int,int) -> <init>
    890:890:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    75:87:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    54:54:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter) -> access$600
    207:216:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    373:374:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:324:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    413:540:boolean flagActionItems() -> flagActionItems
    191:200:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:184:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    354:362:boolean hideOverflowMenu() -> hideOverflowMenu
    384:385:boolean hideSubMenus() -> hideSubMenus
    92:129:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    399:399:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    395:395:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    548:549:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:137:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    281:312:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    158:158:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    586:587:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    148:149:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:341:boolean showOverflowMenu() -> showOverflowMenu
    226:270:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    733:742:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    747:750:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    800:800:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    805:805:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    782:783:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    788:795:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    628:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    671:676:boolean performClick() -> performClick
    692:705:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    638:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    641:645:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    650:650:boolean onForwardingStarted() -> onForwardingStarted
    659:663:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    715:718:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    723:728:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    755:755:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    769:774:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    760:764:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    611:611:void <clinit>() -> <clinit>
    594:594:void <init>() -> <init>
    597:598:void <init>(android.os.Parcel) -> <init>
    608:608:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
    612:612:void <init>() -> <init>
    612:612:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    615:615:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    612:612:java.lang.Object[] newArray(int) -> newArray
    620:620:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    78:78:void <init>(android.content.Context) -> <init>
    82:88:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    609:609:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    722:723:void dismissPopupMenus() -> dismissPopupMenus
    50:50:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    582:584:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    590:590:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:604:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    615:616:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    650:662:android.view.Menu getMenu() -> getMenu
    735:742:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    699:699:boolean hideOverflowMenu() -> hideOverflowMenu
    638:638:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    624:624:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    715:715:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    709:709:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    571:571:boolean isOverflowReserved() -> isOverflowReserved
    406:434:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    130:137:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    543:544:void onDetachedFromWindow() -> onDetachedFromWindow
    441:536:void onLayout(boolean,int,int,int,int) -> onLayout
    149:174:void onMeasure(int,int) -> onMeasure
    180:388:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    681:681:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    755:755:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    671:672:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    143:143:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    577:577:void setOverflowReserved(boolean) -> setOverflowReserved
    99:104:void setPopupTheme(int) -> setPopupTheme
    124:125:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    690:690:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    792:792:void <init>() -> <init>
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    832:832:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    836:836:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    840:841:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    845:846:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    774:774:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    779:780:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    785:786:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    873:873:void <clinit>() -> <clinit>
    878:881:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:55:void <init>(android.content.Context) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:232:void forceUniformWidth(int,int) -> forceUniformWidth
    265:342:void onLayout(boolean,int,int,int,int) -> onLayout
    64:66:void onMeasure(int,int) -> onMeasure
    248:256:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:348:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    75:203:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    59:59:void <clinit>() -> <clinit>
    67:67:void <init>(android.content.Context) -> <init>
    71:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:92:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:179:void drawableStateChanged() -> drawableStateChanged
    140:141:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    168:169:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    193:193:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    110:112:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    102:104:void setBackgroundResource(int) -> setBackgroundResource
    203:204:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    97:97:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    125:126:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    153:154:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    185:187:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    37:45:void <init>(android.view.View) -> <init>
    178:196:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    123:137:void applySupportBackgroundTint() -> applySupportBackgroundTint
    105:105:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    119:119:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    49:76:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:92:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    80:85:void onSetBackgroundResource(int) -> onSetBackgroundResource
    144:152:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    96:101:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    109:115:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    156:160:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    66:66:void <init>(android.content.Context) -> <init>
    70:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:166:void drawableStateChanged() -> drawableStateChanged
    329:333:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    313:317:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    297:301:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    345:349:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    279:285:int getAutoSizeTextType() -> getAutoSizeTextType
    127:128:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    155:156:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    180:181:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    186:187:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    192:194:void onLayout(boolean,int,int,int,int) -> onLayout
    211:213:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    243:248:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    261:265:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    224:228:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    97:99:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    89:91:void setBackgroundResource(int) -> setBackgroundResource
    376:377:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    112:113:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    140:141:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    387:388:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    409:410:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    172:174:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    200:204:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    62:62:void <init>(android.content.Context) -> <init>
    66:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:82:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    229:234:void drawableStateChanged() -> drawableStateChanged
    100:102:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    179:180:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    207:208:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    126:127:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    213:215:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    221:223:void setBackgroundResource(int) -> setBackgroundResource
    87:89:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    95:95:void setButtonDrawable(int) -> setButtonDrawable
    164:165:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    192:193:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    113:114:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    138:139:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    87:89:void drawableStateChanged() -> drawableStateChanged
    95:95:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    74:74:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    105:106:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    79:81:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    39:47:void <init>(android.widget.CompoundButton) -> <init>
    127:143:void applyButtonTint() -> applyButtonTint
    148:153:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    102:102:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    51:91:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    117:123:void onSetButtonDrawable() -> onSetButtonDrawable
    95:98:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    106:109:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    54:54:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:android.graphics.PorterDuff$Mode access$000() -> access$000
    466:469:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    475:475:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    480:480:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    507:507:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    498:498:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    484:485:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    59:460:void preload() -> preload
    502:502:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    62:128:void <init>() -> <init>
    360:360:boolean arrayContains(int[],int) -> arrayContains
    143:143:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    158:181:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    148:149:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    136:137:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    234:251:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    189:228:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    260:308:android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> getRatingBarLayerDrawable
    372:394:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    452:453:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    313:316:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    323:353:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    402:435:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    93:93:void <init>(android.content.Context) -> <init>
    97:97:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    102:117:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    257:257:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener buildOnCommitContentListener(android.view.View) -> buildOnCommitContentListener
    208:213:void drawableStateChanged() -> drawableStateChanged
    174:175:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    202:203:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    82:82:java.lang.CharSequence getText() -> getText
    126:131:android.text.Editable getText() -> getText
    315:318:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    234:242:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    323:326:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
    371:371:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
    337:350:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    144:146:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    136:138:void setBackgroundResource(int) -> setBackgroundResource
    287:288:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    159:160:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    187:188:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    219:221:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    297:301:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatEditText$1 -> androidx.appcompat.widget.AppCompatEditText$1:
    257:257:void <init>(android.view.View) -> <init>
    263:276:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> onCommitContent
androidx.appcompat.widget.AppCompatEditor -> androidx.appcompat.widget.AppCompatEditor:
    44:45:void <init>(android.widget.TextView) -> <init>
    69:74:android.app.Activity getActivity() -> getActivity
    49:64:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
androidx.appcompat.widget.AppCompatEditor$Api24Impl -> androidx.appcompat.widget.AppCompatEditor$Api24Impl:
    85:96:boolean onDrop(android.view.DragEvent,android.widget.TextView,android.app.Activity) -> onDrop
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    28:37:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    66:66:void <init>(android.content.Context) -> <init>
    70:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    245:250:void drawableStateChanged() -> drawableStateChanged
    156:157:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    184:185:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    211:212:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    239:240:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    256:256:boolean hasOverlappingRendering() -> hasOverlappingRendering
    126:128:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    118:120:void setBackgroundResource(int) -> setBackgroundResource
    102:104:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    94:96:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    89:89:void setImageResource(int) -> setImageResource
    110:112:void setImageURI(android.net.Uri) -> setImageURI
    141:142:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    169:170:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    196:197:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    224:225:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    47:48:void <init>(android.widget.ImageView) -> <init>
    200:218:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    141:159:void applySupportImageTint() -> applySupportImageTint
    123:123:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    137:137:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    103:104:boolean hasOverlappingRendering() -> hasOverlappingRendering
    52:85:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    90:99:void setImageResource(int) -> setImageResource
    114:119:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    127:133:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    178:182:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    65:65:void <init>(android.content.Context) -> <init>
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:82:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    256:261:void drawableStateChanged() -> drawableStateChanged
    166:167:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    194:195:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    222:223:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    250:251:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    267:267:boolean hasOverlappingRendering() -> hasOverlappingRendering
    136:138:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    128:130:void setBackgroundResource(int) -> setBackgroundResource
    112:114:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    104:106:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    96:98:void setImageResource(int) -> setImageResource
    120:122:void setImageURI(android.net.Uri) -> setImageURI
    151:152:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    179:180:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    207:208:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    235:236:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    56:56:void <clinit>() -> <clinit>
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:90:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    172:177:void drawableStateChanged() -> drawableStateChanged
    138:139:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    166:167:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    191:191:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    108:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    100:102:void setBackgroundResource(int) -> setBackgroundResource
    95:95:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    123:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    151:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    183:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:59:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:93:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:68:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:77:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:86:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:48:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTile() -> getSampleTile
    52:65:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:109:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:133:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    228:233:void drawableStateChanged() -> drawableStateChanged
    98:100:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    178:179:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    206:207:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    124:125:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    212:214:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    220:222:void setBackgroundResource(int) -> setBackgroundResource
    85:87:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    93:93:void setButtonDrawable(int) -> setButtonDrawable
    163:164:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    191:192:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    111:112:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    136:137:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:69:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:67:void drawableStateChanged() -> drawableStateChanged
    72:73:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    60:62:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    36:43:void <init>(android.widget.SeekBar) -> <init>
    128:142:void applyTickMarkTint() -> applyTickMarkTint
    165:182:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    154:157:void drawableStateChanged() -> drawableStateChanged
    148:149:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:76:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    80:95:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    79:79:void <clinit>() -> <clinit>
    144:144:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    160:160:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    180:180:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    106:301:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    566:595:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    551:553:void drawableStateChanged() -> drawableStateChanged
    373:376:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    347:350:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    392:395:int getDropDownWidth() -> getDropDownWidth
    603:603:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    328:331:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    309:309:android.content.Context getPopupContext() -> getPopupContext
    472:472:java.lang.CharSequence getPrompt() -> getPrompt
    516:517:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    545:546:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    419:422:void onDetachedFromWindow() -> onDetachedFromWindow
    436:443:void onMeasure(int,int) -> onMeasure
    625:648:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    617:619:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    428:431:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    449:458:boolean performClick() -> performClick
    77:77:void setAdapter(android.widget.Adapter) -> setAdapter
    404:413:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    485:487:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    477:479:void setBackgroundResource(int) -> setBackgroundResource
    357:361:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    338:341:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    383:386:void setDropDownWidth(int) -> setDropDownWidth
    314:317:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    323:323:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    463:466:void setPrompt(java.lang.CharSequence) -> setPrompt
    501:502:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    530:531:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    607:610:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    264:264:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    267:267:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    273:274:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    632:632:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    635:643:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    858:858:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    866:868:void dismiss() -> dismiss
    889:889:java.lang.CharSequence getHintText() -> getHintText
    874:874:boolean isShowing() -> isShowing
    913:917:void onClick(android.content.DialogInterface,int) -> onClick
    879:879:void setAdapter(android.widget.ListAdapter) -> setAdapter
    922:922:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    932:932:void setHorizontalOffset(int) -> setHorizontalOffset
    952:952:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    884:884:void setPromptText(java.lang.CharSequence) -> setPromptText
    927:927:void setVerticalOffset(int) -> setVerticalOffset
    894:908:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    703:721:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    778:780:boolean areAllItemsEnabled() -> areAllItemsEnabled
    729:729:int getCount() -> getCount
    749:750:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    734:734:java.lang.Object getItem(int) -> getItem
    739:739:long getItemId(int) -> getItemId
    744:744:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    755:755:boolean hasStableIds() -> hasStableIds
    812:812:boolean isEmpty() -> isEmpty
    792:794:boolean isEnabled(int) -> isEnabled
    760:761:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    767:768:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    965:975:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    962:962:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    1006:1040:void computeContentWidth() -> computeContentWidth
    996:996:java.lang.CharSequence getHintText() -> getHintText
    1112:1112:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1102:1102:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    990:991:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1107:1107:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    1002:1002:void setPromptText(java.lang.CharSequence) -> setPromptText
    1045:1086:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    975:975:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    978:983:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1071:1071:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1074:1081:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1086:1086:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1089:1091:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    671:671:void <clinit>() -> <clinit>
    657:657:void <init>(android.os.Parcelable) -> <init>
    661:662:void <init>(android.os.Parcel) -> <init>
    667:668:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    672:672:void <init>() -> <init>
    672:672:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    675:675:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    672:672:java.lang.Object[] newArray(int) -> newArray
    680:680:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    42:43:void <init>(android.widget.TextView) -> <init>
    62:68:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    51:51:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    73:80:void <init>(android.widget.TextView) -> <init>
    542:542:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    523:535:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    579:579:void autoSizeText() -> autoSizeText
    548:552:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    624:624:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    620:620:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    616:616:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    628:628:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    612:612:int getAutoSizeTextType() -> getAutoSizeTextType
    585:585:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    85:337:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    437:450:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    561:562:void onLayout(boolean,int,int,int,int) -> onLayout
    519:519:void onSetCompoundDrawables() -> onSetCompoundDrawables
    457:510:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    722:723:void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> populateSurroundingTextIfNeeded
    515:515:void setAllCaps(boolean) -> setAllCaps
    601:601:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    607:607:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    593:593:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    637:642:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    651:656:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    672:701:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    660:665:void setCompoundTints() -> setCompoundTints
    569:571:void setTextSize(int,float) -> setTextSize
    589:589:void setTextSizeInternal(int,float) -> setTextSizeInternal
    342:429:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
    362:362:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    365:371:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$2 -> androidx.appcompat.widget.AppCompatTextHelper$2:
    443:443:void <init>(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int) -> <init>
    446:446:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    93:93:void <init>(android.content.Context) -> <init>
    97:97:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:113:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    488:492:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    198:203:void drawableStateChanged() -> drawableStateChanged
    370:374:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    351:355:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    332:336:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    389:393:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    311:317:int getAutoSizeTextType() -> getAutoSizeTextType
    428:428:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    433:433:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    156:157:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    184:185:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    501:502:java.lang.CharSequence getText() -> getText
    529:532:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    401:403:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    209:211:void onLayout(boolean,int,int,int,int) -> onLayout
    556:557:void onMeasure(int,int) -> onMeasure
    228:230:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    268:273:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    290:294:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    245:249:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    126:128:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    118:120:void setBackgroundResource(int) -> setBackgroundResource
    563:565:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    573:575:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    605:607:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    615:622:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    582:584:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    590:597:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    447:448:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    408:411:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    418:421:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    438:438:void setLineHeight(int) -> setLineHeight
    141:142:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    169:170:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    663:664:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    703:704:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    190:192:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    511:515:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    217:221:void setTextSize(int,float) -> setTextSize
    709:726:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    64:79:void <clinit>() -> <clinit>
    87:160:void <init>(android.widget.TextView) -> <init>
    864:871:java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> accessAndReturnWithDefault
    603:636:void autoSizeText() -> autoSizeText
    510:532:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    640:645:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    734:739:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    779:799:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    822:829:android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre16
    805:811:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    697:717:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    467:467:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    451:451:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    435:435:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    480:480:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    421:421:int getAutoSizeTextType() -> getAutoSizeTextType
    899:910:java.lang.reflect.Field getTextViewField(java.lang.String) -> getTextViewField
    879:891:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    722:728:void initTempTextPaint(int) -> initTempTextPaint
    846:855:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    923:923:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    169:241:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    328:341:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    371:398:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    261:287:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    659:687:void setRawTextSize(float) -> setRawTextSize
    651:655:void setTextSizeInternal(int,float) -> setTextSizeInternal
    573:593:boolean setupAutoSizeText() -> setupAutoSizeText
    484:492:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    497:503:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    744:768:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    932:932:boolean supportsAutoSizeText() -> supportsAutoSizeText
    549:569:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl:
    112:112:void <init>() -> <init>
    115:115:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23:
    124:124:void <init>() -> <init>
    129:132:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29:
    138:138:void <init>() -> <init>
    148:148:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    142:142:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    60:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:73:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    150:155:void drawableStateChanged() -> drawableStateChanged
    116:117:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    144:145:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    86:88:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    78:80:void setBackgroundResource(int) -> setBackgroundResource
    101:102:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    129:130:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    47:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:154:int getMinimumHeight() -> getMinimumHeight
    144:145:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    175:175:boolean isStacked() -> isStacked
    72:139:void onMeasure(int,int) -> onMeasure
    158:170:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    60:60:void <init>(android.content.Context) -> <init>
    64:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    78:78:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    197:198:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    202:203:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    187:188:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    192:193:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    177:178:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    182:183:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    208:210:void onAttachedToWindow() -> onAttachedToWindow
    216:218:void onDetachedFromWindow() -> onDetachedFromWindow
    101:172:void onMeasure(int,int) -> onMeasure
    82:82:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    93:95:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    42:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:50:void <init>(android.content.Context) -> <init>
    55:78:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    45:59:void <clinit>() -> <clinit>
    142:173:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    131:133:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    184:193:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    201:206:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    50:127:void <init>(android.content.Context,boolean) -> <init>
    629:641:void clearPressedItem() -> clearPressedItem
    541:542:void clickPressedItem(android.view.View,int) -> clickPressedItem
    201:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    564:568:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    187:194:void drawableStateChanged() -> drawableStateChanged
    165:165:boolean hasFocus() -> hasFocus
    145:145:boolean hasWindowFocus() -> hasWindowFocus
    155:155:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    291:348:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    470:471:void onDetachedFromWindow() -> onDetachedFromWindow
    484:530:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    429:462:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:218:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:624:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    585:598:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    574:578:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    553:553:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:689:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    170:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    372:373:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    557:559:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    381:382:void <init>(android.graphics.drawable.Drawable) -> <init>
    399:400:void draw(android.graphics.Canvas) -> draw
    386:386:void setEnabled(boolean) -> setEnabled
    406:407:void setHotspot(float,float) -> setHotspot
    413:414:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    391:392:boolean setState(int[]) -> setState
    420:421:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:700:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:712:void cancel() -> cancel
    716:716:void post() -> post
    706:707:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:48:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:48:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    66:77:void <init>(android.view.View) -> <init>
    216:221:void clearCallbacks() -> clearCallbacks
    156:158:boolean onForwardingStopped() -> onForwardingStopped
    226:248:void onLongPress() -> onLongPress
    94:111:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:280:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:208:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    121:125:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    289:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:311:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:300:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:316:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:323:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:329:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:334:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    151:151:void <init>(android.content.Context) -> <init>
    155:155:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    102:194:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1761:1761:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    332:368:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    305:327:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    373:375:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    379:381:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1327:1342:void forceUniformHeight(int,int) -> forceUniformHeight
    905:920:void forceUniformWidth(int,int) -> forceUniformWidth
    59:59:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1744:1747:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    59:59:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    59:59:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1731:1731:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1754:1754:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    433:481:int getBaseline() -> getBaseline
    231:231:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    288:288:int getDividerWidth() -> getDividerWidth
    1710:1710:int getGravity() -> getGravity
    515:515:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    528:528:int getVirtualChildCount() -> getVirtualChildCount
    577:583:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1531:1649:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1436:1513:void layoutVertical(int,int,int,int) -> layoutVertical
    1387:1387:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    938:1319:void measureHorizontal(int,int) -> measureHorizontal
    605:899:void measureVertical(int,int) -> measureVertical
    293:300:void onDraw(android.graphics.Canvas) -> onDraw
    1766:1767:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1772:1773:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1416:1419:void onLayout(boolean,int,int,int,int) -> onLayout
    560:563:void onMeasure(int,int) -> onMeasure
    402:402:void setBaselineAligned(boolean) -> setBaselineAligned
    1655:1655:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    242:254:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    1689:1699:void setGravity(int) -> setGravity
    1664:1666:void setOrientation(int) -> setOrientation
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1785:1785:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1792:1792:void <init>(int,int) -> <init>
    1813:1813:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:105:void <clinit>() -> <clinit>
    224:224:void <init>(android.content.Context) -> <init>
    248:248:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    115:277:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1158:1325:int buildDropDown() -> buildDropDown
    846:851:void clearListSelection() -> clearListSelection
    950:950:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    772:776:void dismiss() -> dismiss
    460:460:android.view.View getAnchorView() -> getAnchorView
    423:423:android.graphics.drawable.Drawable getBackground() -> getBackground
    477:477:int getHorizontalOffset() -> getHorizontalOffset
    946:946:android.widget.ListView getListView() -> getListView
    1445:1457:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    895:898:java.lang.Object getSelectedItem() -> getSelectedItem
    921:924:long getSelectedItemId() -> getSelectedItemId
    908:911:int getSelectedItemPosition() -> getSelectedItemPosition
    934:937:android.view.View getSelectedView() -> getSelectedView
    493:496:int getVerticalOffset() -> getVerticalOffset
    545:545:int getWidth() -> getWidth
    868:868:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    345:345:boolean isModal() -> isModal
    860:860:boolean isShowing() -> isShowing
    789:793:void removePromptView() -> removePromptView
    287:298:void setAdapter(android.widget.ListAdapter) -> setAdapter
    470:470:void setAnchorView(android.view.View) -> setAnchorView
    441:441:void setAnimationStyle(int) -> setAnimationStyle
    432:432:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    565:570:void setContentWidth(int) -> setContentWidth
    538:538:void setDropDownGravity(int) -> setDropDownGravity
    517:517:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    486:486:void setHorizontalOffset(int) -> setHorizontalOffset
    811:811:void setInputMethodMode(int) -> setInputMethodMode
    335:336:void setModal(boolean) -> setModal
    785:785:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    619:619:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1338:1339:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1431:1440:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    312:312:void setPromptPosition(int) -> setPromptPosition
    830:836:void setSelection(int) -> setSelection
    505:506:void setVerticalOffset(int) -> setVerticalOffset
    555:555:void setWidth(int) -> setWidth
    663:762:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1167:1167:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1171:1173:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1186:1186:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1192:1195:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1361:1361:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1366:1366:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1343:1343:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1348:1350:void onChanged() -> onChanged
    1356:1356:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1407:1407:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1418:1421:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1386:1386:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1391:1400:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1371:1371:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1376:1380:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    61:66:void <clinit>() -> <clinit>
    74:74:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    80:81:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    122:123:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    130:131:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    86:87:void setEnterTransition(java.lang.Object) -> setEnterTransition
    92:93:void setExitTransition(java.lang.Object) -> setExitTransition
    98:98:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    106:115:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    147:157:void <init>(android.content.Context,boolean) -> <init>
    138:138:boolean hasFocus() -> hasFocus
    138:138:boolean hasWindowFocus() -> hasWindowFocus
    138:138:boolean isFocused() -> isFocused
    138:138:boolean isInTouchMode() -> isInTouchMode
    138:138:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    138:138:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    201:242:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    171:195:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    138:138:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    162:162:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    138:138:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    85:115:void <clinit>() -> <clinit>
    61:121:void <init>() -> <init>
    370:373:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> addDelegate
    339:349:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    405:413:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    485:495:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    170:170:long createCacheKey(android.util.TypedValue) -> createCacheKey
    175:195:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    466:467:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    96:100:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    318:334:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    135:135:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    140:158:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    473:481:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    382:392:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    396:398:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    377:377:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    107:111:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    501:502:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    232:308:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    162:167:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    354:361:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    131:132:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    203:221:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    439:457:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    366:366:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate:
    539:539:void <init>() -> <init>
    545:547:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate:
    523:523:void <init>() -> <init>
    531:533:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    419:419:void <init>(int) -> <init>
    433:433:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    423:423:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    427:427:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate -> androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate:
    553:553:void <init>() -> <init>
    557:571:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate:
    506:506:void <init>() -> <init>
    514:516:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:49:void <init>(android.content.res.Resources) -> <init>
    188:188:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    173:173:boolean getBoolean(int) -> getBoolean
    162:162:int getColor(int) -> getColor
    168:168:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    251:251:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    246:246:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    131:131:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    137:137:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    144:144:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    150:150:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    256:256:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    178:178:int getInteger(int) -> getInteger
    183:183:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    156:156:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    276:276:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    261:261:java.lang.String getResourceName(int) -> getResourceName
    266:266:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    271:271:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    214:214:void getValue(int,android.util.TypedValue,boolean) -> getValue
    227:227:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    221:221:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    193:193:android.content.res.XmlResourceParser getXml(int) -> getXml
    232:232:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    198:198:java.io.InputStream openRawResource(int) -> openRawResource
    203:203:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    208:208:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    288:288:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    282:282:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    238:240:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    47:47:int getStart() -> getStart
    68:70:void setAbsolute(int,int) -> setAbsolute
    74:88:void setDirection(boolean) -> setDirection
    55:63:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    176:176:void <clinit>() -> <clinit>
    267:267:void <init>(android.content.Context) -> <init>
    271:271:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    131:1713:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1364:1383:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    497:501:void clearFocus() -> clearFocus
    1537:1559:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1582:1635:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1567:1570:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1202:1202:void dismissSuggestions() -> dismissSuggestions
    1697:1701:void forceSuggestionQuery() -> forceSuggestionQuery
    851:855:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1088:1097:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    864:865:int getPreferredHeight() -> getPreferredHeight
    859:860:int getPreferredWidth() -> getPreferredWidth
    619:624:java.lang.CharSequence getQueryHint() -> getQueryHint
    683:683:boolean isIconified() -> isIconified
    1706:1706:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    910:910:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1517:1518:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1477:1477:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1279:1283:void onActionViewCollapsed() -> onActionViewCollapsed
    1291:1297:void onActionViewExpanded() -> onActionViewExpanded
    1206:1220:void onCloseClicked() -> onCloseClicked
    964:966:void onDetachedFromWindow() -> onDetachedFromWindow
    1388:1392:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1399:1401:boolean onItemSelected(int) -> onItemSelected
    832:845:void onLayout(boolean,int,int,int,int) -> onLayout
    783:827:void onMeasure(int,int) -> onMeasure
    1353:1360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1345:1347:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1226:1230:void onSearchClicked() -> onSearchClicked
    1188:1196:void onSubmitQuery() -> onSubmitQuery
    1174:1184:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1258:1263:void onTextFocusChanged() -> onTextFocusChanged
    1236:1253:void onVoiceClicked() -> onVoiceClicked
    1269:1271:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    945:945:void postUpdateFocusedState() -> postUpdateFocusedState
    480:491:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1444:1445:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    670:672:void setIconified(boolean) -> setIconified
    642:645:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    441:441:void setImeOptions(int) -> setImeOptions
    464:464:void setInputType(int) -> setInputType
    764:766:void setMaxWidth(int) -> setMaxWidth
    571:579:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    933:940:void updateCloseButton() -> updateCloseButton
    949:959:void updateFocusedState() -> updateFocusedState
    1102:1103:void updateQueryHint() -> updateQueryHint
    924:929:void updateSubmitArea() -> updateSubmitArea
    915:919:void updateSubmitButton(boolean) -> updateSubmitButton
    869:889:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1154:1158:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    178:178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    181:181:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1713:1713:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1720:1720:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    185:185:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    188:188:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    331:331:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    334:335:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    376:376:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    380:380:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    976:976:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    979:988:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    998:998:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1002:1027:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1161:1161:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1168:1168:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1407:1407:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1415:1415:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1419:1419:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1427:1427:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector:
    2037:2063:void <init>() -> <init>
    2080:2083:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2070:2073:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2090:2093:void ensureImeVisible(android.widget.AutoCompleteTextView) -> ensureImeVisible
    2100:2101:void preApi29Check() -> preApi29Check
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1325:1325:void <clinit>() -> <clinit>
    1304:1304:void <init>(android.os.Parcelable) -> <init>
    1308:1309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1320:1321:java.lang.String toString() -> toString
    1314:1315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1325:1325:void <init>() -> <init>
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1328:1328:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object[] newArray(int) -> newArray
    1338:1338:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1842:1842:void <init>(android.content.Context) -> <init>
    1846:1846:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1834:1851:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1931:1931:boolean enoughToFilter() -> enoughToFilter
    2025:2031:void ensureImeVisible() -> ensureImeVisible
    1964:1968:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1876:1876:boolean isEmpty() -> isEmpty
    1983:1986:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1856:1859:void onFinishInflate() -> onFinishInflate
    1921:1922:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1939:1957:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1903:1914:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    2002:2021:void setImeVisibility(boolean) -> setImeVisibility
    1863:1863:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1868:1869:void setThreshold(int) -> setThreshold
    1992:1996:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1834:1834:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1837:1837:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1760:1766:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1778:1817:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1770:1773:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    41:53:void <clinit>() -> <clinit>
    162:175:void checkAppCompatTheme(android.view.View,android.content.Context) -> checkAppCompatTheme
    126:138:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    91:97:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    152:154:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    109:115:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    143:146:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:102:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:116:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:72:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:38:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:36:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:49:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:69:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    158:158:boolean getBoolean(int,boolean) -> getBoolean
    170:170:int getColor(int,int) -> getColor
    174:184:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    192:192:float getDimension(int,float) -> getDimension
    196:196:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    200:200:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    80:86:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    90:93:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    166:166:float getFloat(int,float) -> getFloat
    119:126:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    162:162:int getInt(int,int) -> getInt
    188:188:int getInteger(int,int) -> getInteger
    208:208:int getLayoutDimension(int,int) -> getLayoutDimension
    216:216:int getResourceId(int,int) -> getResourceId
    150:150:java.lang.String getString(int) -> getString
    146:146:java.lang.CharSequence getText(int) -> getText
    220:220:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    76:76:android.content.res.TypedArray getWrappedTypeArray() -> getWrappedTypeArray
    240:240:boolean hasValue(int) -> hasValue
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    252:252:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    229:229:void <init>(android.content.Context) -> <init>
    233:233:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    182:353:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2250:2255:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2142:2164:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1513:1528:void addSystemView(android.view.View,boolean) -> addSystemView
    518:518:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2224:2224:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    726:729:void collapseActionView() -> collapseActionView
    596:597:void dismissPopupMenus() -> dismissPopupMenus
    1494:1503:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2287:2288:void ensureContentInsets() -> ensureContentInsets
    696:697:void ensureLogoView() -> ensureLogoView
    1155:1163:void ensureMenu() -> ensureMenu
    1168:1176:void ensureMenuView() -> ensureMenuView
    1484:1489:void ensureNavButtonView() -> ensureNavButtonView
    146:146:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2219:2219:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    146:146:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    146:146:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2201:2201:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2206:2213:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2171:2172:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2091:2115:int getChildTop(android.view.View,int) -> getChildTop
    2130:2130:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1269:1269:int getContentInsetEnd() -> getContentInsetEnd
    1249:1249:int getContentInsetStart() -> getContentInsetStart
    1444:1450:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1463:1465:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1478:1480:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1429:1431:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2189:2191:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    1129:1130:android.view.Menu getMenu() -> getMenu
    1181:1181:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    918:918:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1010:1010:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    795:795:java.lang.CharSequence getSubtitle() -> getSubtitle
    739:739:java.lang.CharSequence getTitle() -> getTitle
    2195:2196:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2046:2059:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2230:2233:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    712:712:boolean hasExpandedActionView() -> hasExpandedActionView
    552:552:boolean hideOverflowMenu() -> hideOverflowMenu
    1194:1194:void inflateMenu(int) -> inflateMenu
    2259:2259:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    534:534:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    528:528:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2066:2073:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2079:2086:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1655:1672:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1630:1646:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1574:1575:void onDetachedFromWindow() -> onDetachedFromWindow
    1609:1622:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1828:2042:void onLayout(boolean,int,int,int,int) -> onLayout
    1698:1823:void onMeasure(int,int) -> onMeasure
    1546:1563:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    494:499:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1534:1540:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1585:1598:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1568:1569:void postShowOverflowMenu() -> postShowOverflowMenu
    2237:2244:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    2269:2270:void setCollapsible(boolean) -> setCollapsible
    1228:1229:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    633:642:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    678:682:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    558:589:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2279:2282:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    932:932:void setNavigationContentDescription(int) -> setNavigationContentDescription
    946:950:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    969:969:void setNavigationIcon(int) -> setNavigationIcon
    988:997:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1023:1024:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1206:1206:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    364:369:void setPopupTheme(int) -> setPopupTheme
    817:840:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    859:861:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    901:903:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    751:751:void setTitle(int) -> setTitle
    763:786:void setTitle(java.lang.CharSequence) -> setTitle
    848:850:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    880:882:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1679:1685:boolean shouldCollapse() -> shouldCollapse
    2185:2185:boolean shouldLayout(android.view.View) -> shouldLayout
    543:543:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    204:204:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    207:208:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    222:222:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    224:224:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1503:1503:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1506:1506:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2446:2446:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2544:2555:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2507:2534:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2452:2455:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2466:2482:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2350:2353:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2350:2358:void <init>(int,int) -> <init>
    2350:2373:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2350:2377:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2350:2384:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2350:2388:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2392:2395:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2424:2424:void <clinit>() -> <clinit>
    2408:2410:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2414:2414:void <init>(android.os.Parcelable) -> <init>
    2419:2421:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2424:2424:void <init>() -> <init>
    2424:2424:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2424:2424:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2427:2427:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2432:2432:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2424:2424:java.lang.Object[] newArray(int) -> newArray
    2437:2437:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:96:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:182:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:232:void collapseActionView() -> collapseActionView
    208:210:int detectDisplayOptions() -> detectDisplayOptions
    375:375:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    380:380:int getDisplayOptions() -> getDisplayOptions
    677:677:android.view.Menu getMenu() -> getMenu
    458:458:int getNavigationMode() -> getNavigationMode
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:286:void initIndeterminateProgress() -> initIndeterminateProgress
    281:281:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    448:448:void setCollapsible(boolean) -> setCollapsible
    540:545:void setCustomView(android.view.View) -> setCustomView
    196:201:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    385:414:void setDisplayOptions(int) -> setDisplayOptions
    422:425:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    306:307:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    317:318:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:370:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    672:672:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    360:360:void setMenuPrepared() -> setMenuPrepared
    620:621:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:626:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:594:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    273:275:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:256:void setTitle(java.lang.CharSequence) -> setTitle
    260:262:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:661:void setVisibility(int) -> setVisibility
    237:237:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:244:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:634:void updateHomeAccessibility() -> updateHomeAccessibility
    611:614:void updateNavigationIcon() -> updateNavigationIcon
    323:330:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:188:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:586:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:580:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:574:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    41:44:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    54:116:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:224:void cancelPendingShow() -> cancelPendingShow
    250:251:void clearAnchorPos() -> clearAnchorPos
    192:206:void hide() -> hide
    129:145:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:123:boolean onLongClick(android.view.View) -> onLongClick
    159:159:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:220:void scheduleShow() -> scheduleShow
    210:215:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:104:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:188:void show(boolean) -> show
    235:242:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:57:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:63:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    54:72:void <init>(android.content.Context) -> <init>
    105:182:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    188:203:android.view.View getAppRootView(android.view.View) -> getAppRootView
    91:96:void hide() -> hide
    100:100:boolean isShowing() -> isShowing
    78:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    56:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    68:72:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    96:96:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    78:78:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    55:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    198:237:android.view.View inflate() -> inflate
    151:151:void onMeasure(int,int) -> onMeasure
    139:139:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    175:185:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:50:void <clinit>() -> <clinit>
    66:70:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:94:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:45:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:53:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> createAsync
    59:59:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:72:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:49:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    76:77:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    67:67:boolean contains(java.lang.Object) -> contains
    42:42:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    47:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    57:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    151:152:java.util.Iterator descendingIterator() -> descendingIterator
    170:170:java.util.Map$Entry eldest() -> eldest
    185:202:boolean equals(java.lang.Object) -> equals
    47:52:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    208:210:int hashCode() -> hashCode
    141:142:java.util.Iterator iterator() -> iterator
    161:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    177:177:java.util.Map$Entry newest() -> newest
    76:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    67:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    99:124:java.lang.Object remove(java.lang.Object) -> remove
    131:131:int size() -> size
    217:227:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    284:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    294:294:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    289:289:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    301:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    311:311:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    306:306:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    368:370:void <init>(java.lang.Object,java.lang.Object) -> <init>
    401:405:boolean equals(java.lang.Object) -> equals
    376:376:java.lang.Object getKey() -> getKey
    382:382:java.lang.Object getValue() -> getValue
    410:410:int hashCode() -> hashCode
    387:387:java.lang.Object setValue(java.lang.Object) -> setValue
    392:392:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    322:324:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    338:341:boolean hasNext() -> hasNext
    318:318:java.lang.Object next() -> next
    346:352:java.util.Map$Entry next() -> next
    330:332:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    235:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    242:242:boolean hasNext() -> hasNext
    230:230:java.lang.Object next() -> next
    272:273:java.util.Map$Entry next() -> next
    264:267:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    248:258:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> androidx.arch.core.internal.SafeIterableMap$SupportRemove:
    356:356:void <init>() -> <init>
androidx.cardview.R$styleable -> androidx.cardview.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
    82:93:void <clinit>() -> <clinit>
    114:114:void <init>(android.content.Context) -> <init>
    118:118:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    109:450:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    80:80:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> access$001
    80:80:void access$101(androidx.cardview.widget.CardView,int) -> access$101
    80:80:void access$201(androidx.cardview.widget.CardView,int) -> access$201
    427:427:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    186:186:boolean getUseCompatPadding() -> getUseCompatPadding
    235:263:void onMeasure(int,int) -> onMeasure
    275:276:void setMinimumHeight(int) -> setMinimumHeight
    269:270:void setMinimumWidth(int) -> setMinimumWidth
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$1:
    450:450:void <init>(androidx.cardview.widget.CardView) -> <init>
    488:488:android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    493:493:android.view.View getCardView() -> getCardView
    466:466:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    461:461:boolean getUseCompatPadding() -> getUseCompatPadding
    455:456:void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    478:482:void setMinWidthHeightInternal(int,int) -> setMinWidthHeightInternal
    471:472:void setShadowPadding(int,int,int,int) -> setShadowPadding
androidx.cardview.widget.CardViewApi17Impl -> androidx.cardview.widget.CardViewApi17Impl:
    25:25:void <init>() -> <init>
    29:29:void initStatic() -> initStatic
androidx.cardview.widget.CardViewApi17Impl$1 -> androidx.cardview.widget.CardViewApi17Impl$1:
    30:30:void <init>(androidx.cardview.widget.CardViewApi17Impl) -> <init>
    34:34:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
androidx.cardview.widget.CardViewApi21Impl -> androidx.cardview.widget.CardViewApi21Impl:
    26:26:void <init>() -> <init>
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> getCardBackground
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> getRadius
    31:37:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    51:53:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> setMaxElevation
    88:98:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewBaseImpl -> androidx.cardview.widget.CardViewBaseImpl:
    27:29:void <init>() -> <init>
    93:93:androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float) -> createBackground
    167:167:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> getMinHeight
    162:162:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> getMinWidth
    171:171:androidx.cardview.widget.RoundRectDrawableWithShadow getShadowBackground(androidx.cardview.widget.CardViewDelegate) -> getShadowBackground
    37:37:void initStatic() -> initStatic
    83:87:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    99:103:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> updatePadding
androidx.cardview.widget.CardViewBaseImpl$1 -> androidx.cardview.widget.CardViewBaseImpl$1:
    38:38:void <init>(androidx.cardview.widget.CardViewBaseImpl) -> <init>
    43:74:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
androidx.cardview.widget.RoundRectDrawable -> androidx.cardview.widget.RoundRectDrawable:
    47:61:void <init>(android.content.res.ColorStateList,float) -> <init>
    209:210:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:100:void draw(android.graphics.Canvas) -> draw
    127:127:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:122:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:189:boolean onStateChange(int[]) -> onStateChange
    141:141:void setAlpha(int) -> setAlpha
    65:66:void setBackground(android.content.res.ColorStateList) -> setBackground
    146:146:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:78:void setPadding(float,boolean,boolean) -> setPadding
    169:171:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:178:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    106:115:void updateBounds(android.graphics.Rect) -> updateBounds
androidx.cardview.widget.RoundRectDrawableWithShadow -> androidx.cardview.widget.RoundRectDrawableWithShadow:
    41:41:void <clinit>() -> <clinit>
    78:104:void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float) -> <init>
    334:337:void buildComponents(android.graphics.Rect) -> buildComponents
    297:327:void buildShadowCorners() -> buildShadowCorners
    190:190:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    181:181:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    238:245:void draw(android.graphics.Canvas) -> draw
    249:293:void drawShadow(android.graphics.Canvas) -> drawShadow
    345:345:void getMaxShadowAndCornerPadding(android.graphics.Rect) -> getMaxShadowAndCornerPadding
    371:373:float getMinHeight() -> getMinHeight
    365:367:float getMinWidth() -> getMinWidth
    170:174:boolean getPadding(android.graphics.Rect) -> getPadding
    210:210:boolean isStateful() -> isStateful
    137:138:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    198:204:boolean onStateChange(int[]) -> onStateChange
    124:125:void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    130:132:void setAlpha(int) -> setAlpha
    108:109:void setBackground(android.content.res.ColorStateList) -> setBackground
    215:215:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:165:void setShadowSize(float,float) -> setShadowSize
    117:117:int toEven(float) -> toEven
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    62:62:void <init>() -> <init>
    69:69:void <init>(int) -> <init>
    77:77:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    87:88:boolean containsAll(java.util.Collection) -> containsAll
    152:154:java.util.Set entrySet() -> entrySet
    640:644:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    169:171:java.util.Set keySet() -> keySet
    101:103:void putAll(java.util.Map) -> putAll
    113:117:boolean removeAll(java.util.Collection) -> removeAll
    127:133:boolean retainAll(java.util.Collection) -> retainAll
    621:631:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    186:188:java.util.Collection values() -> values
androidx.collection.ArrayMap$EntrySet -> androidx.collection.ArrayMap$EntrySet:
    193:193:void <init>(androidx.collection.ArrayMap) -> <init>
    193:193:boolean add(java.lang.Object) -> add
    197:197:boolean add(java.util.Map$Entry) -> add
    202:206:boolean addAll(java.util.Collection) -> addAll
    211:211:void clear() -> clear
    216:224:boolean contains(java.lang.Object) -> contains
    229:230:boolean containsAll(java.util.Collection) -> containsAll
    282:282:boolean equals(java.lang.Object) -> equals
    288:292:int hashCode() -> hashCode
    239:239:boolean isEmpty() -> isEmpty
    244:244:java.util.Iterator iterator() -> iterator
    250:250:boolean remove(java.lang.Object) -> remove
    256:256:boolean removeAll(java.util.Collection) -> removeAll
    262:262:boolean retainAll(java.util.Collection) -> retainAll
    267:267:int size() -> size
    272:272:java.lang.Object[] toArray() -> toArray
    277:277:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$KeyIterator -> androidx.collection.ArrayMap$KeyIterator:
    495:496:void <init>(androidx.collection.ArrayMap) -> <init>
    501:501:java.lang.Object elementAt(int) -> elementAt
    506:506:void removeAt(int) -> removeAt
androidx.collection.ArrayMap$KeySet -> androidx.collection.ArrayMap$KeySet:
    298:298:void <init>(androidx.collection.ArrayMap) -> <init>
    301:301:boolean add(java.lang.Object) -> add
    306:306:boolean addAll(java.util.Collection) -> addAll
    311:311:void clear() -> clear
    316:316:boolean contains(java.lang.Object) -> contains
    321:321:boolean containsAll(java.util.Collection) -> containsAll
    376:376:boolean equals(java.lang.Object) -> equals
    382:384:int hashCode() -> hashCode
    326:326:boolean isEmpty() -> isEmpty
    331:331:java.util.Iterator iterator() -> iterator
    336:338:boolean remove(java.lang.Object) -> remove
    346:346:boolean removeAll(java.util.Collection) -> removeAll
    351:351:boolean retainAll(java.util.Collection) -> retainAll
    356:356:int size() -> size
    361:364:java.lang.Object[] toArray() -> toArray
    371:371:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$MapIterator -> androidx.collection.ArrayMap$MapIterator:
    531:533:void <init>(androidx.collection.ArrayMap) -> <init>
    589:598:boolean equals(java.lang.Object) -> equals
    562:566:java.lang.Object getKey() -> getKey
    571:575:java.lang.Object getValue() -> getValue
    538:538:boolean hasNext() -> hasNext
    603:610:int hashCode() -> hashCode
    526:526:java.lang.Object next() -> next
    543:545:java.util.Map$Entry next() -> next
    551:557:void remove() -> remove
    580:584:java.lang.Object setValue(java.lang.Object) -> setValue
    615:615:java.lang.String toString() -> toString
androidx.collection.ArrayMap$ValueCollection -> androidx.collection.ArrayMap$ValueCollection:
    390:390:void <init>(androidx.collection.ArrayMap) -> <init>
    393:393:boolean add(java.lang.Object) -> add
    398:398:boolean addAll(java.util.Collection) -> addAll
    403:403:void clear() -> clear
    408:408:boolean contains(java.lang.Object) -> contains
    413:414:boolean containsAll(java.util.Collection) -> containsAll
    423:423:boolean isEmpty() -> isEmpty
    428:428:java.util.Iterator iterator() -> iterator
    433:435:boolean remove(java.lang.Object) -> remove
    443:448:boolean removeAll(java.util.Collection) -> removeAll
    459:464:boolean retainAll(java.util.Collection) -> retainAll
    475:475:int size() -> size
    480:483:java.lang.Object[] toArray() -> toArray
    490:490:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$ValueIterator -> androidx.collection.ArrayMap$ValueIterator:
    511:512:void <init>(androidx.collection.ArrayMap) -> <init>
    517:517:java.lang.Object elementAt(int) -> elementAt
    522:522:void removeAt(int) -> removeAt
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    78:79:void <clinit>() -> <clinit>
    279:279:void <init>() -> <init>
    286:293:void <init>(int) -> <init>
    416:469:boolean add(java.lang.Object) -> add
    752:755:boolean addAll(java.util.Collection) -> addAll
    174:230:void allocArrays(int) -> allocArrays
    89:91:int binarySearch(int) -> binarySearch
    333:343:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    738:739:boolean containsAll(java.util.Collection) -> containsAll
    352:364:void ensureCapacity(int) -> ensureCapacity
    636:645:boolean equals(java.lang.Object) -> equals
    239:270:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    664:667:int hashCode() -> hashCode
    96:123:int indexOf(java.lang.Object,int) -> indexOf
    386:386:int indexOf(java.lang.Object) -> indexOf
    134:161:int indexOfNull() -> indexOfNull
    404:404:boolean isEmpty() -> isEmpty
    711:711:java.util.Iterator iterator() -> iterator
    504:506:boolean remove(java.lang.Object) -> remove
    768:769:boolean removeAll(java.util.Collection) -> removeAll
    519:566:java.lang.Object removeAt(int) -> removeAt
    783:785:boolean retainAll(java.util.Collection) -> retainAll
    596:596:int size() -> size
    602:603:java.lang.Object[] toArray() -> toArray
    610:617:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    681:699:java.lang.String toString() -> toString
    396:396:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$ElementIterator -> androidx.collection.ArraySet$ElementIterator:
    715:716:void <init>(androidx.collection.ArraySet) -> <init>
    721:721:java.lang.Object elementAt(int) -> elementAt
    726:726:void removeAt(int) -> removeAt
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.IndexBasedArrayIterator -> androidx.collection.IndexBasedArrayIterator:
    27:28:void <init>(int) -> <init>
    36:36:boolean hasNext() -> hasNext
    41:44:java.lang.Object next() -> next
    50:56:void remove() -> remove
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    457:483:void append(long,java.lang.Object) -> append
    441:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    218:238:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    400:404:int indexOfKey(long) -> indexOfKey
    354:358:long keyAt(int) -> keyAt
    249:291:void put(long,java.lang.Object) -> put
    139:144:void remove(long) -> remove
    171:173:void removeAt(int) -> removeAt
    328:332:int size() -> size
    495:516:java.lang.String toString() -> toString
    374:378:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:56:void <init>(int) -> <init>
    281:281:void evictAll() -> evictAll
    84:125:java.lang.Object get(java.lang.Object) -> get
    139:156:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    348:351:java.lang.String toString() -> toString
    171:189:void trimToSize(int) -> trimToSize
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    246:253:void <init>(int) -> <init>
    260:262:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    687:721:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    381:382:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    738:743:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    423:423:boolean isEmpty() -> isEmpty
    392:392:java.lang.Object keyAt(int) -> keyAt
    437:494:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    503:513:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    528:530:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    543:545:java.lang.Object remove(java.lang.Object) -> remove
    558:562:boolean remove(java.lang.Object,java.lang.Object) -> remove
    576:626:java.lang.Object removeAt(int) -> removeAt
    639:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    655:659:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    414:415:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    670:670:int size() -> size
    757:782:java.lang.String toString() -> toString
    402:402:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    461:487:void append(int,java.lang.Object) -> append
    445:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    231:251:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    420:425:int indexOfValue(java.lang.Object) -> indexOfValue
    362:366:int keyAt(int) -> keyAt
    262:304:void put(int,java.lang.Object) -> put
    341:345:int size() -> size
    499:520:java.lang.String toString() -> toString
    376:380:java.lang.Object valueAt(int) -> valueAt
androidx.constraintlayout.motion.utils.Easing -> androidx.constraintlayout.motion.utils.Easing:
    29:40:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    73:73:java.lang.String toString() -> toString
androidx.constraintlayout.motion.widget.Debug -> androidx.constraintlayout.motion.widget.Debug:
    84:85:java.lang.String getName(android.view.View) -> getName
androidx.constraintlayout.solver.ArrayLinkedVariables -> androidx.constraintlayout.solver.ArrayLinkedVariables:
    44:104:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    227:338:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> add
    517:570:androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> chooseSubject
    390:403:void clear() -> clear
    413:422:boolean containsKey(androidx.constraintlayout.solver.SolverVariable) -> containsKey
    463:467:void divideByAmount(float) -> divideByAmount
    821:827:float get(androidx.constraintlayout.solver.SolverVariable) -> get
    622:622:int getCurrentSize() -> getCurrentSize
    621:621:int getHead() -> getHead
    625:625:int getId(int) -> getId
    633:633:int getNextIndice(int) -> getNextIndice
    734:771:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(boolean[],androidx.constraintlayout.solver.SolverVariable) -> getPivotCandidate
    629:629:float getValue(int) -> getValue
    786:792:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> getVariable
    804:810:float getVariableValue(int) -> getVariableValue
    448:452:void invert() -> invert
    496:496:boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem) -> isNew
    120:213:void put(androidx.constraintlayout.solver.SolverVariable,float) -> put
    350:381:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> remove
    861:867:java.lang.String toString() -> toString
    588:617:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
    666:701:void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[]) -> updateFromSystem
androidx.constraintlayout.solver.ArrayRow -> androidx.constraintlayout.solver.ArrayRow:
    24:34:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    324:325:androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int) -> addError
    485:496:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    153:153:androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int) -> addSingleError
    407:415:boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> chooseSubject
    459:461:void clear() -> clear
    282:317:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowCentering
    114:117:androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int) -> createRowDefinition
    331:332:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionPercent
    350:353:androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionRatio
    215:240:androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> createRowEqualMatchDimensions
    123:127:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    140:147:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    167:176:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowGreaterThan
    196:205:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowLowerThan
    368:372:androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowWithAngle
    390:393:void ensurePositiveConstant() -> ensurePositiveConstant
    501:501:androidx.constraintlayout.solver.SolverVariable getKey() -> getKey
    454:454:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    38:38:boolean hasKeyVariable() -> hasKeyVariable
    110:110:boolean hasVariable(androidx.constraintlayout.solver.SolverVariable) -> hasVariable
    470:477:void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> initFromRow
    444:444:boolean isEmpty() -> isEmpty
    421:421:androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable) -> pickPivot
    425:437:void pivot(androidx.constraintlayout.solver.SolverVariable) -> pivot
    103:106:void reset() -> reset
    51:94:java.lang.String toReadableString() -> toReadableString
    46:46:java.lang.String toString() -> toString
    449:449:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
androidx.constraintlayout.solver.Cache -> androidx.constraintlayout.solver.Cache:
    21:25:void <init>() -> <init>
androidx.constraintlayout.solver.LinearSystem -> androidx.constraintlayout.solver.LinearSystem:
    43:84:void <init>() -> <init>
    308:320:androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> acquireSolverVariable
    1357:1374:void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> addCenterPoint
    1126:1131:void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addCentering
    495:558:void addConstraint(androidx.constraintlayout.solver.ArrayRow) -> addConstraint
    1156:1161:androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addEquality
    1174:1192:void addEquality(androidx.constraintlayout.solver.SolverVariable,int) -> addEquality
    1067:1071:void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addGreaterBarrier
    1041:1049:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addGreaterThan
    1100:1104:void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> addLowerBarrier
    1085:1093:void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addLowerThan
    1138:1143:void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int) -> addRatio
    563:569:void addRow(androidx.constraintlayout.solver.ArrayRow) -> addRow
    261:262:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int) -> addSingleError
    882:884:void computeValues() -> computeValues
    289:298:androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String) -> createErrorVariable
    232:239:androidx.constraintlayout.solver.SolverVariable createExtraVariable() -> createExtraVariable
    176:196:androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    203:209:androidx.constraintlayout.solver.ArrayRow createRow() -> createRow
    1261:1262:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionPercent
    217:224:androidx.constraintlayout.solver.SolverVariable createSlackVariable() -> createSlackVariable
    748:843:int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row) -> enforceBFS
    1002:1002:androidx.constraintlayout.solver.Cache getCache() -> getCache
    92:92:androidx.constraintlayout.solver.Metrics getMetrics() -> getMetrics
    347:349:int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    115:120:void increaseTableSize() -> increaseTableSize
    386:407:void minimize() -> minimize
    434:444:void minimizeGoal(androidx.constraintlayout.solver.LinearSystem$Row) -> minimizeGoal
    590:695:int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean) -> optimize
    132:137:void releaseRows() -> releaseRows
    145:165:void reset() -> reset
    452:455:void updateRowFromVariables(androidx.constraintlayout.solver.ArrayRow) -> updateRowFromVariables
androidx.constraintlayout.solver.OptimizedPriorityGoalRow -> androidx.constraintlayout.solver.OptimizedPriorityGoalRow:
    26:167:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    22:22:void access$200(androidx.constraintlayout.solver.OptimizedPriorityGoalRow,androidx.constraintlayout.solver.SolverVariable) -> access$200
    197:200:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    204:227:void addToGoal(androidx.constraintlayout.solver.SolverVariable) -> addToGoal
    159:160:void clear() -> clear
    175:192:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    231:237:void removeGoal(androidx.constraintlayout.solver.SolverVariable) -> removeGoal
    273:277:java.lang.String toString() -> toString
    245:267:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,boolean) -> updateFromRow
androidx.constraintlayout.solver.OptimizedPriorityGoalRow$1 -> androidx.constraintlayout.solver.OptimizedPriorityGoalRow$1:
    215:215:void <init>(androidx.constraintlayout.solver.OptimizedPriorityGoalRow) -> <init>
    215:215:int compare(java.lang.Object,java.lang.Object) -> compare
    218:218:int compare(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> compare
androidx.constraintlayout.solver.OptimizedPriorityGoalRow$GoalVariableAccessor -> androidx.constraintlayout.solver.OptimizedPriorityGoalRow$GoalVariableAccessor:
    35:36:void <init>(androidx.constraintlayout.solver.OptimizedPriorityGoalRow,androidx.constraintlayout.solver.OptimizedPriorityGoalRow) -> <init>
    54:78:boolean addToGoal(androidx.constraintlayout.solver.SolverVariable,float) -> addToGoal
    136:137:int compareTo(java.lang.Object) -> compareTo
    40:40:void init(androidx.constraintlayout.solver.SolverVariable) -> init
    98:98:boolean isNegative() -> isNegative
    111:112:boolean isSmallerThan(androidx.constraintlayout.solver.SolverVariable) -> isSmallerThan
    141:141:void reset() -> reset
    146:151:java.lang.String toString() -> toString
androidx.constraintlayout.solver.Pools$SimplePool -> androidx.constraintlayout.solver.Pools$SimplePool:
    96:100:void <init>(int) -> <init>
    106:110:java.lang.Object acquire() -> acquire
    123:125:boolean release(java.lang.Object) -> release
    133:145:void releaseAll(java.lang.Object[],int) -> releaseAll
androidx.constraintlayout.solver.SolverVariable -> androidx.constraintlayout.solver.SolverVariable:
    50:123:void <init>(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> <init>
    166:175:void addToRow(androidx.constraintlayout.solver.ArrayRow) -> addToRow
    92:92:void increaseErrorId() -> increaseErrorId
    179:185:void removeFromRow(androidx.constraintlayout.solver.ArrayRow) -> removeFromRow
    200:209:void reset() -> reset
    223:223:void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> setType
    238:238:java.lang.String toString() -> toString
    192:196:void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow) -> updateReferencesWithNewDefinition
androidx.constraintlayout.solver.SolverVariable$Type -> androidx.constraintlayout.solver.SolverVariable$Type:
    68:88:void <clinit>() -> <clinit>
    68:68:void <init>(java.lang.String,int) -> <init>
    68:68:androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    68:68:androidx.constraintlayout.solver.SolverVariable$Type[] values() -> values
androidx.constraintlayout.solver.widgets.Barrier -> androidx.constraintlayout.solver.widgets.Barrier:
    29:39:void <init>() -> <init>
    79:151:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    54:54:boolean allowsGoneWidget() -> allowsGoneWidget
    46:46:int getBarrierType() -> getBarrierType
    160:160:int getMargin() -> getMargin
    52:52:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    49:49:void setBarrierType(int) -> setBarrierType
    156:156:void setMargin(int) -> setMargin
androidx.constraintlayout.solver.widgets.Chain -> androidx.constraintlayout.solver.widgets.Chain:
    51:64:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int) -> applyChainConstraints
    80:442:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> applyChainConstraints
androidx.constraintlayout.solver.widgets.ChainHead -> androidx.constraintlayout.solver.widgets.ChainHead:
    42:66:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> <init>
    234:237:void define() -> define
    84:198:void defineChainProperties() -> defineChainProperties
    77:77:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> isMatchConstraintEqualityCandidate
androidx.constraintlayout.solver.widgets.ConstraintAnchor -> androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    44:68:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> <init>
    142:156:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,boolean) -> connect
    105:112:int getMargin() -> getMargin
    92:92:androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner() -> getOwner
    75:75:androidx.constraintlayout.solver.SolverVariable getSolverVariable() -> getSolverVariable
    119:119:androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget() -> getTarget
    98:98:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType() -> getType
    176:176:boolean isConnected() -> isConnected
    188:224:boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> isValidConnection
    125:127:void reset() -> reset
    81:84:void resetSolverVariable(androidx.constraintlayout.solver.Cache) -> resetSolverVariable
    331:331:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1 -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$1:
    196:196:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type:
    37:37:void <clinit>() -> <clinit>
    37:37:void <init>(java.lang.String,int) -> <init>
    37:37:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    37:37:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidget -> androidx.constraintlayout.solver.widgets.ConstraintWidget:
    56:357:void <init>() -> <init>
    404:411:void addAnchors() -> addAnchors
    1975:2224:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    1412:1412:boolean allowedInBarrier() -> allowedInBarrier
    2327:2672:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,int,int,int,int,float,boolean) -> applyConstraints
    485:487:void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> connectCircularConstraint
    581:586:void createObjectVariables(androidx.constraintlayout.solver.LinearSystem) -> createObjectVariables
    1738:1766:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    866:866:int getBaselineDistance() -> getBaselineDistance
    843:845:float getBiasPercent(int) -> getBiasPercent
    783:783:int getBottom() -> getBottom
    876:876:java.lang.Object getCompanionWidget() -> getCompanionWidget
    532:532:java.lang.String getDebugName() -> getDebugName
    1795:1797:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> getDimensionBehaviour
    1113:1113:float getDimensionRatio() -> getDimensionRatio
    1122:1122:int getDimensionRatioSide() -> getDimensionRatioSide
    690:693:int getHeight() -> getHeight
    821:821:float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    1385:1385:int getHorizontalChainStyle() -> getHorizontalChainStyle
    1775:1775:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    791:795:int getHorizontalMargin() -> getHorizontalMargin
    704:706:int getLength(int) -> getLength
    136:136:int getMaxHeight() -> getMaxHeight
    140:140:int getMaxWidth() -> getMaxWidth
    747:747:int getMinHeight() -> getMinHeight
    738:738:int getMinWidth() -> getMinWidth
    1861:1866:androidx.constraintlayout.solver.widgets.ConstraintWidget getNextChainMember(int) -> getNextChainMember
    429:429:androidx.constraintlayout.solver.widgets.ConstraintWidget getParent() -> getParent
    1842:1847:androidx.constraintlayout.solver.widgets.ConstraintWidget getPreviousChainMember(int) -> getPreviousChainMember
    774:774:int getRight() -> getRight
    70:72:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun getRun(int) -> getRun
    831:831:float getVerticalBiasPercent() -> getVerticalBiasPercent
    1405:1405:int getVerticalChainStyle() -> getVerticalChainStyle
    1784:1784:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    805:809:int getVerticalMargin() -> getVerticalMargin
    523:523:int getVisibility() -> getVisibility
    642:645:int getWidth() -> getWidth
    618:621:int getX() -> getX
    630:633:int getY() -> getY
    857:857:boolean hasBaseline() -> hasBaseline
    1430:1432:void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    1952:1952:boolean isChainHead(int) -> isChainHead
    1827:1827:boolean isInHorizontalChain() -> isInHorizontalChain
    1908:1908:boolean isInVerticalChain() -> isInVerticalChain
    290:346:void reset() -> reset
    390:397:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
    1311:1312:void setBaselineDistance(int) -> setBaselineDistance
    1322:1322:void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    539:539:void setDebugName(java.lang.String) -> setDebugName
    1041:1093:void setDimensionRatio(java.lang.String) -> setDimensionRatio
    1200:1224:void setFrame(int,int,int,int) -> setFrame
    168:168:void setHasBaseline(boolean) -> setHasBaseline
    979:981:void setHeight(int) -> setHeight
    1132:1132:void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    1375:1375:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    1254:1257:void setHorizontalDimension(int,int) -> setHorizontalDimension
    1809:1809:void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    1008:1013:void setHorizontalMatchStyle(int,int,int,float) -> setHorizontalMatchStyle
    1356:1356:void setHorizontalWeight(float) -> setHorizontalWeight
    180:180:void setInPlaceholder(boolean) -> setInPlaceholder
    132:132:void setInVirtualLayout(boolean) -> setInVirtualLayout
    148:148:void setMaxHeight(int) -> setMaxHeight
    144:144:void setMaxWidth(int) -> setMaxWidth
    1165:1167:void setMinHeight(int) -> setMinHeight
    1152:1154:void setMinWidth(int) -> setMinWidth
    913:914:void setOrigin(int,int) -> setOrigin
    438:438:void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> setParent
    1142:1142:void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    1395:1395:void setVerticalChainStyle(int) -> setVerticalChainStyle
    1268:1271:void setVerticalDimension(int,int) -> setVerticalDimension
    1818:1818:void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    1026:1031:void setVerticalMatchStyle(int,int,int,float) -> setVerticalMatchStyle
    1365:1365:void setVerticalWeight(float) -> setVerticalWeight
    514:514:void setVisibility(int) -> setVisibility
    967:969:void setWidth(int) -> setWidth
    894:894:void setX(int) -> setX
    903:903:void setY(int) -> setY
    2244:2290:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> setupDimensionRatio
    597:597:java.lang.String toString() -> toString
    2812:2864:void updateFromRuns(boolean,boolean) -> updateFromRuns
    2683:2709:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.ConstraintWidget$1 -> androidx.constraintlayout.solver.widgets.ConstraintWidget$1:
    935:2356:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour -> androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour:
    186:187:void <clinit>() -> <clinit>
    186:186:void <init>(java.lang.String,int) -> <init>
    186:186:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    186:186:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer -> androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    42:258:void <init>() -> <init>
    669:671:void addChain(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> addChain
    273:313:boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem) -> addChildrenToSolver
    682:687:void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addHorizontalChain
    697:702:void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> addVerticalChain
    66:66:boolean directMeasure(boolean) -> directMeasure
    85:85:boolean directMeasureSetup(boolean) -> directMeasureSetup
    89:89:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    129:129:androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer getMeasurer() -> getMeasurer
    210:210:int getOptimizationLevel() -> getOptimizationLevel
    54:54:void invalidateGraph() -> invalidateGraph
    61:61:void invalidateMeasures() -> invalidateMeasures
    255:255:boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    373:373:boolean isRtl() -> isRtl
    248:248:boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    392:590:void layout() -> layout
    111:113:void measure(int,int,int,int,int,int,int,int,int) -> measure
    220:220:boolean optimizeFor(int) -> optimizeFor
    235:241:void reset() -> reset
    656:657:void resetChains() -> resetChains
    124:125:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
    201:201:void setOptimizationLevel(int) -> setOptimizationLevel
    364:364:void setRtl(boolean) -> setRtl
    324:329:void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> updateChildrenFromSolver
    335:339:void updateFromRuns(boolean,boolean) -> updateFromRuns
    118:118:void updateHierarchy() -> updateHierarchy
androidx.constraintlayout.solver.widgets.Guideline -> androidx.constraintlayout.solver.widgets.Guideline:
    39:52:void <init>() -> <init>
    199:230:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    126:148:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    117:117:int getOrientation() -> getOrientation
    184:184:int getRelativeBegin() -> getRelativeBegin
    188:188:int getRelativeEnd() -> getRelativeEnd
    180:180:float getRelativePercent() -> getRelativePercent
    165:167:void setGuideBegin(int) -> setGuideBegin
    173:175:void setGuideEnd(int) -> setGuideEnd
    157:159:void setGuidePercent(float) -> setGuidePercent
    85:98:void setOrientation(int) -> setOrientation
    237:250:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.Guideline$1 -> androidx.constraintlayout.solver.widgets.Guideline$1:
    126:126:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.HelperWidget -> androidx.constraintlayout.solver.widgets.HelperWidget:
    9:11:void <init>() -> <init>
    24:28:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    47:48:void removeAllIds() -> removeAllIds
androidx.constraintlayout.solver.widgets.Optimizer -> androidx.constraintlayout.solver.widgets.Optimizer:
    49:49:void <clinit>() -> <clinit>
    62:92:void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> checkMatchParent
androidx.constraintlayout.solver.widgets.VirtualLayout -> androidx.constraintlayout.solver.widgets.VirtualLayout:
    26:202:void <init>() -> <init>
    130:133:void captureWidgets() -> captureWidgets
    113:113:boolean needSolverPass() -> needSolverPass
    126:126:void updateConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateConstraints
androidx.constraintlayout.solver.widgets.WidgetContainer -> androidx.constraintlayout.solver.widgets.WidgetContainer:
    26:35:void <init>() -> <init>
    72:77:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    108:108:java.util.ArrayList getChildren() -> getChildren
    158:165:void layout() -> layout
    98:99:void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> remove
    181:181:void removeAllChildren() -> removeAllChildren
    62:63:void reset() -> reset
    172:176:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.BaselineDimensionDependency:
    22:22:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure:
    50:75:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    376:405:boolean measure(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer,androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> measure
    79:107:void measureChildren(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> measureChildren
    111:122:void solveLinearSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,java.lang.String,int,int) -> solveLinearSystem
    144:363:void solverMeasure(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int,int,int,int,int,int) -> solverMeasure
    54:65:void updateHierarchy(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> updateHierarchy
androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure -> androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure:
    413:413:void <init>() -> <init>
androidx.constraintlayout.solver.widgets.analyzer.ChainRun -> androidx.constraintlayout.solver.widgets.analyzer.ChainRun:
    32:38:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> <init>
    523:579:void apply() -> apply
    494:496:void applyToWidget() -> applyToWidget
    77:102:void build() -> build
    108:110:void clear() -> clear
    501:504:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    511:514:androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    65:71:long getWrapDimension() -> getWrapDimension
    54:57:boolean supportsWrapComputation() -> supportsWrapComputation
    43:47:java.lang.String toString() -> toString
    122:486:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph -> androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph:
    44:625:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> <init>
    711:754:void applyGroup(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,int,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,java.util.ArrayList,androidx.constraintlayout.solver.widgets.analyzer.RunGroup) -> applyGroup
    383:555:boolean basicMeasureWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> basicMeasureWidgets
    629:638:void buildGraph() -> buildGraph
    642:693:void buildGraph(java.util.ArrayList) -> buildGraph
    64:69:int computeWrap(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrap
    111:224:boolean directMeasure(boolean) -> directMeasure
    230:258:boolean directMeasureSetup(boolean) -> directMeasureSetup
    265:354:boolean directMeasureWithOrientation(boolean,int) -> directMeasureWithOrientation
    760:782:void findGroup(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int,java.util.ArrayList) -> findGroup
    615:615:void invalidateGraph() -> invalidateGraph
    622:622:void invalidateMeasures() -> invalidateMeasures
    371:379:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,int) -> measure
    564:606:void measureWidgets() -> measureWidgets
    60:60:void setMeasurer(androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measurer) -> setMeasurer
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode:
    23:41:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    100:102:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> addDependency
    119:124:void clear() -> clear
    50:57:void resolve(int) -> resolve
    45:46:java.lang.String toString() -> toString
    62:95:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type -> androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type:
    27:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String) -> valueOf
    27:27:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values() -> values
androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency -> androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency:
    24:28:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> <init>
    33:39:void resolve(int) -> resolve
androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference -> androidx.constraintlayout.solver.widgets.analyzer.GuidelineReference:
    25:28:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    48:49:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    69:106:void apply() -> apply
    112:116:void applyToWidget() -> applyToWidget
    33:33:void clear() -> clear
    54:64:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HelperReferences -> androidx.constraintlayout.solver.widgets.analyzer.HelperReferences:
    24:24:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    44:45:void addDependency(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode) -> addDependency
    50:114:void apply() -> apply
    144:151:void applyToWidget() -> applyToWidget
    29:30:void clear() -> clear
    122:139:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun:
    37:37:void <clinit>() -> <clinit>
    40:43:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    83:264:void apply() -> apply
    548:549:void applyToWidget() -> applyToWidget
    53:57:void clear() -> clear
    280:297:void computeInsetRatio(int[],int,int,int,int,float,int) -> computeInsetRatio
    62:67:void reset() -> reset
    72:73:boolean supportsWrapComputation() -> supportsWrapComputation
    48:48:java.lang.String toString() -> toString
    305:544:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun$1:
    305:305:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.RunGroup -> androidx.constraintlayout.solver.widgets.analyzer.RunGroup:
    33:48:void <init>(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun,int) -> <init>
    52:53:void add(androidx.constraintlayout.solver.widgets.analyzer.WidgetRun) -> add
    121:179:long computeWrapSize(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int) -> computeWrapSize
    89:114:long traverseEnd(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseEnd
    57:82:long traverseStart(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,long) -> traverseStart
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun:
    34:42:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    200:418:void apply() -> apply
    424:425:void applyToWidget() -> applyToWidget
    52:57:void clear() -> clear
    62:69:void reset() -> reset
    74:75:boolean supportsWrapComputation() -> supportsWrapComputation
    47:47:java.lang.String toString() -> toString
    85:194:void update(androidx.constraintlayout.solver.widgets.analyzer.Dependency) -> update
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun$1:
    85:85:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun:
    34:44:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    280:282:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int) -> addTarget
    286:291:void addTarget(androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,androidx.constraintlayout.solver.widgets.analyzer.DependencyNode,int,androidx.constraintlayout.solver.widgets.analyzer.DimensionDependency) -> addTarget
    234:248:int getLimitedDimension(int,int) -> getLimitedDimension
    95:120:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> getTarget
    258:273:androidx.constraintlayout.solver.widgets.analyzer.DependencyNode getTarget(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> getTarget
    295:296:long getWrapDimension() -> getWrapDimension
    301:301:boolean isResolved() -> isResolved
    171:214:void resolveDimension(int,int) -> resolveDimension
    127:167:void updateRunCenter(androidx.constraintlayout.solver.widgets.analyzer.Dependency,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> updateRunCenter
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1 -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$1:
    101:101:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType -> androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType:
    303:303:void <clinit>() -> <clinit>
    303:303:void <init>(java.lang.String,int) -> <init>
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String) -> valueOf
    303:303:androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values() -> values
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
    118:119:void <init>(android.content.Context) -> <init>
    123:124:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    128:129:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    219:219:boolean allowsGoneWidget() -> allowsGoneWidget
    239:239:int getMargin() -> getMargin
    138:138:int getType() -> getType
    193:211:void init(android.util.AttributeSet) -> init
    184:184:void resolveRtl(androidx.constraintlayout.solver.widgets.ConstraintWidget,boolean) -> resolveRtl
    215:215:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    248:248:void setMargin(int) -> setMargin
    147:147:void setType(int) -> setType
    151:178:void updateType(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> updateType
androidx.constraintlayout.widget.ConstraintAttribute -> androidx.constraintlayout.widget.ConstraintAttribute:
    211:214:void <init>(java.lang.String,androidx.constraintlayout.widget.ConstraintAttribute$AttributeType,java.lang.Object) -> <init>
    217:220:void <init>(androidx.constraintlayout.widget.ConstraintAttribute,java.lang.Object) -> <init>
    250:271:java.util.HashMap extractAttributes(java.util.HashMap,android.view.View) -> extractAttributes
    399:444:void parse(android.content.Context,org.xmlpull.v1.XmlPullParser,java.util.HashMap) -> parse
    278:325:void setAttributes(android.view.View,java.util.HashMap) -> setAttributes
    225:243:void setValue(java.lang.Object) -> setValue
androidx.constraintlayout.widget.ConstraintAttribute$1 -> androidx.constraintlayout.widget.ConstraintAttribute$1:
    88:88:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType -> androidx.constraintlayout.widget.ConstraintAttribute$AttributeType:
    51:58:void <clinit>() -> <clinit>
    51:51:void <init>(java.lang.String,int) -> <init>
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String) -> valueOf
    51:51:androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values() -> values
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
    48:81:void <init>(android.content.Context) -> <init>
    48:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:93:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    227:263:void addID(java.lang.String) -> addID
    181:185:void addRscID(int) -> addRscID
    327:341:void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout) -> applyLayoutFeatures
    351:353:void applyLayoutFeatures() -> applyLayoutFeatures
    279:294:int findId(androidx.constraintlayout.widget.ConstraintLayout,java.lang.String) -> findId
    162:162:int[] getReferencedIds() -> getReferencedIds
    101:107:void init(android.util.AttributeSet) -> init
    201:204:void onMeasure(int,int) -> onMeasure
    305:317:void setIds(java.lang.String) -> setIds
    170:173:void setReferencedIds(int[]) -> setReferencedIds
    364:392:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
    213:219:void validateParams() -> validateParams
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
    490:1423:void <init>(android.content.Context) -> <init>
    490:1423:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    490:1423:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    490:1423:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    479:479:int access$000(androidx.constraintlayout.widget.ConstraintLayout) -> access$000
    479:479:int access$100(androidx.constraintlayout.widget.ConstraintLayout) -> access$100
    479:479:int access$200(androidx.constraintlayout.widget.ConstraintLayout) -> access$200
    479:479:java.util.ArrayList access$300(androidx.constraintlayout.widget.ConstraintLayout) -> access$300
    869:871:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1150:1377:void applyConstraintsFromLayoutParams(boolean,android.view.View,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams,android.util.SparseArray) -> applyConstraintsFromLayoutParams
    1780:1780:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1806:1848:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    3084:3085:void forceLayout() -> forceLayout
    479:479:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1764:1764:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    479:479:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1756:1756:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1772:1772:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    549:552:java.lang.Object getDesignInformation(int,java.lang.Object) -> getDesignInformation
    1566:1570:int getPaddingWidth() -> getPaddingWidth
    1385:1397:androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int) -> getTargetWidget
    1798:1798:android.view.View getViewById(int) -> getViewById
    1408:1410:androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    811:852:void init(android.util.AttributeSet,int,int) -> init
    1554:1556:boolean isRtl() -> isRtl
    3089:3096:void markHierarchyDirty() -> markHierarchyDirty
    1671:1709:void onLayout(boolean,int,int,int,int) -> onLayout
    1523:1542:void onMeasure(int,int) -> onMeasure
    891:913:void onViewAdded(android.view.View) -> onViewAdded
    921:928:void onViewRemoved(android.view.View) -> onViewRemoved
    861:861:void parseLayoutDescription(int) -> parseLayoutDescription
    880:882:void removeView(android.view.View) -> removeView
    3078:3079:void requestLayout() -> requestLayout
    1483:1509:void resolveMeasuredDimension(int,int,int,int,boolean,boolean) -> resolveMeasuredDimension
    1435:1465:void resolveSystem(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int) -> resolveSystem
    1042:1140:void setChildrenConstraints() -> setChildrenConstraints
    1789:1789:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    531:541:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> setDesignInformation
    584:586:void setId(int) -> setId
    1580:1645:void setSelfDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,int,int,int,int) -> setSelfDimensionBehaviour
    1025:1036:boolean updateHierarchy() -> updateHierarchy
androidx.constraintlayout.widget.ConstraintLayout$1 -> androidx.constraintlayout.widget.ConstraintLayout$1:
    632:632:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    2024:2881:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2024:2932:void <init>(int,int) -> <init>
    2024:2936:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2945:3056:void resolveLayoutDirection(int) -> resolveLayoutDirection
    2885:2927:void validate() -> validate
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
    2473:2526:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintLayout$Measurer -> androidx.constraintlayout.widget.ConstraintLayout$Measurer:
    599:600:void <init>(androidx.constraintlayout.widget.ConstraintLayout,androidx.constraintlayout.widget.ConstraintLayout) -> <init>
    790:802:void didMeasures() -> didMeasures
    610:785:void measure(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.analyzer.BasicMeasure$Measure) -> measure
androidx.constraintlayout.widget.ConstraintLayoutStates -> androidx.constraintlayout.widget.ConstraintLayoutStates:
    42:50:void <init>(android.content.Context,androidx.constraintlayout.widget.ConstraintLayout,int) -> <init>
    285:342:void load(android.content.Context,int) -> load
    347:370:void parseConstraintSet(android.content.Context,org.xmlpull.v1.XmlPullParser) -> parseConstraintSet
androidx.constraintlayout.widget.ConstraintLayoutStates$State -> androidx.constraintlayout.widget.ConstraintLayoutStates$State:
    141:167:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
    171:171:void add(androidx.constraintlayout.widget.ConstraintLayoutStates$Variant) -> add
androidx.constraintlayout.widget.ConstraintLayoutStates$Variant -> androidx.constraintlayout.widget.ConstraintLayoutStates$Variant:
    186:235:void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser) -> <init>
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.ConstraintSet:
    220:399:void <clinit>() -> <clinit>
    74:223:void <init>() -> <init>
    74:74:int access$100(android.content.res.TypedArray,int,int) -> access$100
    74:74:int[] access$200() -> access$200
    1581:1583:void applyTo(androidx.constraintlayout.widget.ConstraintLayout) -> applyTo
    1658:1768:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean) -> applyToInternal
    2270:2314:void clear(int,int) -> clear
    1474:1474:void clone(android.content.Context,int) -> clone
    1495:1542:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> clone
    1553:1571:void clone(androidx.constraintlayout.widget.Constraints) -> clone
    2708:2711:void constrainCircle(int,int,int,float) -> constrainCircle
    3714:3744:int[] convertReferenceString(android.view.View,java.lang.String) -> convertReferenceString
    3387:3390:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
    3211:3214:androidx.constraintlayout.widget.ConstraintSet$Constraint get(int) -> get
    3246:3277:void load(android.content.Context,int) -> load
    3291:3374:void load(android.content.Context,org.xmlpull.v1.XmlPullParser) -> load
    3379:3381:int lookupID(android.content.res.TypedArray,int,int) -> lookupID
    3395:3708:void populateConstraint(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> populateConstraint
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.ConstraintSet$Constraint:
    1252:1259:void <init>() -> <init>
    1252:1252:void access$000(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> access$000
    1252:1252:void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$300
    1252:1252:void access$400(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> access$400
    1397:1462:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> applyTo
    1252:1252:java.lang.Object clone() -> clone
    1293:1298:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
    1332:1392:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> fillFrom
    1304:1310:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
    1315:1328:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> fillFromConstraints
androidx.constraintlayout.widget.ConstraintSet$Layout -> androidx.constraintlayout.widget.ConstraintSet$Layout:
    654:767:void <clinit>() -> <clinit>
    517:581:void <init>() -> <init>
    584:651:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Layout) -> copyFrom
    771:966:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Motion -> androidx.constraintlayout.widget.ConstraintSet$Motion:
    1194:1208:void <clinit>() -> <clinit>
    1175:1182:void <init>() -> <init>
    1185:1191:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Motion) -> copyFrom
    1212:1244:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$PropertySet -> androidx.constraintlayout.widget.ConstraintSet$PropertySet:
    1135:1140:void <init>() -> <init>
    1143:1147:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$PropertySet) -> copyFrom
    1151:1168:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.ConstraintSet$Transform -> androidx.constraintlayout.widget.ConstraintSet$Transform:
    1053:1077:void <clinit>() -> <clinit>
    1022:1035:void <init>() -> <init>
    1038:1050:void copyFrom(androidx.constraintlayout.widget.ConstraintSet$Transform) -> copyFrom
    1081:1128:void fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> fillFromAttributeList
androidx.constraintlayout.widget.Constraints -> androidx.constraintlayout.widget.Constraints:
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    135:135:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    147:147:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    151:156:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
androidx.constraintlayout.widget.Constraints$LayoutParams -> androidx.constraintlayout.widget.Constraints$LayoutParams:
    67:82:void <init>(int,int) -> <init>
    67:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
    55:56:void <init>(android.content.Context) -> <init>
    60:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    93:93:void onMeasure(int,int) -> onMeasure
androidx.constraintlayout.widget.Placeholder -> androidx.constraintlayout.widget.Placeholder:
    111:111:android.view.View getContent() -> getContent
    119:136:void onDraw(android.graphics.Canvas) -> onDraw
    192:201:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    145:157:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
androidx.constraintlayout.widget.R$id -> androidx.constraintlayout.widget.R$id:
    10166:10166:void <init>() -> <init>
androidx.constraintlayout.widget.R$styleable -> androidx.constraintlayout.widget.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.VirtualLayout -> androidx.constraintlayout.widget.VirtualLayout:
    48:57:void init(android.util.AttributeSet) -> init
    72:91:void onAttachedToWindow() -> onAttachedToWindow
    114:115:void setElevation(float) -> setElevation
    105:106:void setVisibility(int) -> setVisibility
androidx.coordinatorlayout.R$styleable -> androidx.coordinatorlayout.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    118:152:void <clinit>() -> <clinit>
    206:206:void <init>(android.content.Context) -> <init>
    210:210:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:249:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:158:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1637:1648:void addPreDrawListener() -> addPreDrawListener
    404:419:void cancelInterceptBehaviors() -> cancelInterceptBehaviors
    1782:1782:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1101:1112:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    889:902:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1558:1566:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1288:1312:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    329:340:void drawableStateChanged() -> drawableStateChanged
    1607:1620:void ensurePreDrawListener() -> ensurePreDrawListener
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1777:1777:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1762:1762:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1767:1772:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1014:1021:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1580:1581:java.util.List getDependencies(android.view.View) -> getDependencies
    1598:1599:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1592:1593:java.util.List getDependents(android.view.View) -> getDependents
    767:767:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1125:1130:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    1027:1097:void getDesiredAnchoredChildRectWithoutConstraints(int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    635:645:int getKeyline(int) -> getKeyline
    1000:1001:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    398:398:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    2039:2039:int getNestedScrollAxes() -> getNestedScrollAxes
    689:717:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    777:777:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    772:772:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    458:469:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1629:1629:boolean hasDependencies(android.view.View) -> hasDependencies
    1726:1732:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1228:1251:void layoutChild(android.view.View,int) -> layoutChild
    1141:1150:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1165:1217:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    556:557:android.view.MotionEvent obtainCancelEvent(android.view.MotionEvent) -> obtainCancelEvent
    1448:1525:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1675:1712:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    261:275:void onAttachedToWindow() -> onAttachedToWindow
    1342:1443:void onChildViewsChanged(int) -> onChildViewsChanged
    280:289:void onDetachedFromWindow() -> onDetachedFromWindow
    961:966:void onDraw(android.graphics.Canvas) -> onDraw
    563:576:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    941:954:void onLayout(boolean,int,int,int,int) -> onLayout
    924:934:void onLayoutChild(android.view.View,int) -> onLayoutChild
    802:884:void onMeasure(int,int) -> onMeasure
    795:795:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1986:2006:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    2016:2031:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1935:1935:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1945:1977:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1874:1874:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1881:1881:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1890:1929:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1818:1818:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1824:1837:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3263:3282:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3291:3308:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1787:1787:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1795:1810:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1845:1845:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1851:1868:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    588:614:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    650:684:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    548:552:boolean performEvent(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior,android.view.View,android.view.MotionEvent,int) -> performEvent
    478:537:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    724:756:void prepareChildren() -> prepareChildren
    988:989:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    164:165:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1656:1662:void removePreDrawListener() -> removePreDrawListener
    3315:3323:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    622:630:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    431:450:void resetTouchBehaviors() -> resetTouchBehaviors
    973:974:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1529:1533:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1538:1542:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    256:256:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    351:355:void setVisibility(int) -> setVisibility
    381:388:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3328:3350:void setupForInsets() -> setupForInsets
    346:346:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
    3335:3335:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3339:3339:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    2113:2113:void <init>() -> <init>
    2124:2124:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2251:2251:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2656:2656:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2563:2563:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2605:2607:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    2492:2492:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2800:2800:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2449:2449:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2532:2532:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
    3240:3240:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3245:3246:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3252:3255:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    2831:2891:void <init>(int,int) -> <init>
    2831:2925:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2831:2930:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2831:2934:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2831:2938:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    3025:3025:boolean checkAnchorChanged() -> checkAnchorChanged
    3122:3124:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    3036:3039:boolean didBlockInteraction() -> didBlockInteraction
    3147:3155:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2948:2948:int getAnchorId() -> getAnchorId
    2974:2974:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    3101:3101:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    3017:3017:android.graphics.Rect getLastChildRect() -> getLastChildRect
    3055:3061:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    3093:3095:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    3109:3109:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    3076:3076:void resetNestedScroll(int) -> resetNestedScroll
    3072:3072:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3163:3197:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2987:2999:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    3105:3105:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    3009:3009:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    3082:3085:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3232:3235:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3208:3224:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
    2042:2042:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    2045:2045:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3396:3396:void <clinit>() -> <clinit>
    3358:3369:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3374:3374:void <init>(android.os.Parcelable) -> <init>
    3379:3392:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    3397:3397:void <init>() -> <init>
    3397:3397:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3397:3397:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3400:3400:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3405:3405:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3397:3397:java.lang.Object[] newArray(int) -> newArray
    3410:3410:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    2053:2053:void <init>() -> <init>
    2053:2053:int compare(java.lang.Object,java.lang.Object) -> compare
    2056:2057:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    39:44:void <init>() -> <init>
    76:88:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:55:void addNode(java.lang.Object) -> addNode
    158:164:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    189:208:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    220:222:java.util.ArrayList getEmptyList() -> getEmptyList
    98:102:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    113:113:java.util.ArrayList getIncomingEdgesInternal(java.lang.Object) -> getIncomingEdgesInternal
    125:131:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    177:185:java.util.ArrayList getSortedList() -> getSortedList
    145:147:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    228:229:void poolList(java.util.ArrayList) -> poolList
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
    35:36:void <clinit>() -> <clinit>
    77:78:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:92:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:65:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.R$styleable -> androidx.core.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    290:293:void finishAffinity(android.app.Activity) -> finishAffinity
    580:603:void recreate(android.app.Activity) -> recreate
    498:519:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
    519:519:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    522:533:void run() -> run
androidx.core.app.ActivityCompat$2 -> androidx.core.app.ActivityCompat$2:
    588:588:void <init>(android.app.Activity) -> <init>
    591:595:void run() -> run
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    91:99:void <clinit>() -> <clinit>
    378:378:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    358:359:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    320:322:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    306:308:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    334:349:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    368:369:java.lang.reflect.Field getTokenField() -> getTokenField
    330:330:boolean needsRelaunchCall() -> needsRelaunchCall
    257:296:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity) -> queueOnStopIfNecessary
    109:169:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    143:143:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    146:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    159:159:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    166:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    269:269:void <init>(java.lang.Object,java.lang.Object) -> <init>
    273:290:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    183:195:void <init>(android.app.Activity) -> <init>
    241:246:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    218:226:void onActivityPaused(android.app.Activity) -> onActivityPaused
    207:208:void onActivityStarted(android.app.Activity) -> onActivityStarted
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    175:177:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:76:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    105:108:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    48:64:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:63:void <init>() -> <init>
    136:140:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    127:131:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    85:86:void onCreate(android.os.Bundle) -> onCreate
    92:93:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    122:122:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:81:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    129:148:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    195:204:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:276:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    108:113:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    7193:7196:android.os.Bundle getExtras(android.app.Notification) -> getExtras
androidx.core.app.NotificationCompat$Action -> androidx.core.app.NotificationCompat$Action:
    4510:4510:android.app.PendingIntent getActionIntent() -> getActionIntent
    4525:4525:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    4568:4568:androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    4517:4517:android.os.Bundle getExtras() -> getExtras
    4499:4502:androidx.core.graphics.drawable.IconCompat getIconCompat() -> getIconCompat
    4534:4534:androidx.core.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    4545:4545:int getSemanticAction() -> getSemanticAction
    4576:4576:boolean getShowsUserInterface() -> getShowsUserInterface
    4506:4506:java.lang.CharSequence getTitle() -> getTitle
    4554:4554:boolean isContextual() -> isContextual
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.NotificationCompat$Builder:
    835:1080:void <init>(android.content.Context,java.lang.String) -> <init>
    1089:1089:void <init>(android.content.Context) -> <init>
    2346:2346:android.app.Notification build() -> build
    1855:1858:android.os.Bundle getExtras() -> getExtras
    2351:2352:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    1606:1606:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    2168:2168:androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String) -> setChannelId
    1988:1988:androidx.core.app.NotificationCompat$Builder setColor(int) -> setColor
    1342:1342:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    1222:1222:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    1214:1214:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    1663:1665:void setFlag(int,boolean) -> setFlag
    1562:1562:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1595:1595:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    1319:1321:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    1168:1168:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    1391:1391:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
androidx.core.app.NotificationCompatBuilder -> androidx.core.app.NotificationCompatBuilder:
    59:268:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    349:397:void addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    310:322:android.app.Notification build() -> build
    403:522:android.app.Notification buildInternal() -> buildInternal
    282:285:java.util.List combineLists(java.util.List,java.util.List) -> combineLists
    293:295:java.util.List getPeople(java.util.List) -> getPeople
    527:530:void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.NotificationCompatJellybean:
    59:63:void <clinit>() -> <clinit>
    73:79:android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    254:270:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> getBundleForAction
    90:118:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    293:294:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> toBundle
    326:328:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> toBundleArray
    141:156:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action) -> writeActionAndGetExtras
androidx.core.app.Person -> androidx.core.app.Person:
    197:197:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    224:224:java.lang.String getKey() -> getKey
    191:191:java.lang.CharSequence getName() -> getName
    215:215:java.lang.String getUri() -> getUri
    232:232:boolean isBot() -> isBot
    240:240:boolean isImportant() -> isImportant
    250:254:java.lang.String resolveToLegacyUri() -> resolveToLegacyUri
    175:182:android.app.Person toAndroidPerson() -> toAndroidPerson
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.RemoteInput -> androidx.core.app.RemoteInput:
    552:554:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> fromCompat
    561:562:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> fromCompat
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    79:83:void <init>(android.content.Context) -> <init>
    121:121:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    160:175:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    256:256:java.util.Iterator iterator() -> iterator
    268:268:void startActivities() -> startActivities
    283:294:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    159:162:void <clinit>() -> <clinit>
    552:555:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    535:538:int getColor(android.content.Context,int) -> getColor
    516:516:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    479:496:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    458:461:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    405:408:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    248:251:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
    823:823:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat$Api19Impl -> androidx.core.content.ContextCompat$Api19Impl:
    840:840:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    845:845:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
    862:862:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.ContextCompat$Api23Impl:
    889:889:int getColor(android.content.Context,int) -> getColor
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    361:383:void <clinit>() -> <clinit>
    360:360:void <init>() -> <init>
    406:416:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    876:878:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    885:886:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    891:892:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    596:597:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    631:645:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    548:553:java.lang.String getType(android.net.Uri) -> getType
    441:442:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    568:568:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    851:869:int modeToMode(java.lang.String) -> modeToMode
    620:622:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    657:709:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    508:532:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    578:578:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    754:757:void <init>(java.lang.String) -> <init>
    765:777:void addRoot(java.lang.String,java.io.File) -> addRoot
    820:839:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    784:815:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    97:114:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:135:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    51:51:void <clinit>() -> <clinit>
    90:102:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    117:123:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    212:215:android.util.TypedValue getTypedValue() -> getTypedValue
    69:72:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    132:200:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    204:206:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    229:229:int modulateColorAlpha(int,float) -> modulateColorAlpha
    222:223:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:64:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:171:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:142:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    109:114:boolean onStateChanged(int[]) -> onStateChanged
    90:90:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    253:258:int getType(android.content.res.TypedArray,int) -> getType
    184:192:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    271:295:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    197:202:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    209:249:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    309:337:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    344:344:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    300:302:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    169:170:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    174:174:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    129:135:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    139:139:java.lang.String getFileName() -> getFileName
    159:159:int getResourceId() -> getResourceId
    155:155:int getTtcIndex() -> getTtcIndex
    151:151:java.lang.String getVariationSettings() -> getVariationSettings
    143:143:int getWeight() -> getWeight
    147:147:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    86:90:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String) -> <init>
    103:103:int getFetchStrategy() -> getFetchStrategy
    99:99:androidx.core.provider.FontRequest getRequest() -> getRequest
    113:113:java.lang.String getSystemFontFamilyName() -> getSystemFontFamilyName
    107:107:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    195:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:142:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:185:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    204:209:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:223:void <init>(java.util.List,java.util.List) -> <init>
    227:229:void <init>(int,int) -> <init>
    232:234:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    42:48:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:61:int[] append(int[],int,int) -> append
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    69:72:void <clinit>() -> <clinit>
    258:266:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList) -> addColorStateListToCache
    237:251:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int) -> getCachedColorStateList
    396:399:android.graphics.Typeface getCachedFont(android.content.Context,int) -> getCachedFont
    193:212:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    103:106:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    367:370:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    488:494:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    506:509:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    278:281:android.util.TypedValue getTypedValue() -> getTypedValue
    221:229:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflateColorStateList
    270:272:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    529:535:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    559:617:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry:
    314:316:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey:
    290:292:void <init>(android.content.res.Resources,android.content.res.Resources$Theme) -> <init>
    298:301:boolean equals(java.lang.Object) -> equals
    306:306:int hashCode() -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    406:406:void <init>() -> <init>
    452:452:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    436:436:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
    464:464:android.os.Handler getHandler(android.os.Handler) -> getHandler
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    436:436:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    439:439:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    452:452:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    455:455:void run() -> run
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
    653:656:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23:
    671:671:void <clinit>() -> <clinit>
    677:695:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29:
    664:664:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:180:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    253:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    245:274:void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    444:457:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    159:172:double calculateContrast(int,int) -> calculateContrast
    145:148:double calculateLuminance(int) -> calculateLuminance
    187:210:int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    667:667:float circularInterpolate(float,float,float) -> circularInterpolate
    289:289:void colorToHSL(int,float[]) -> colorToHSL
    421:421:void colorToXYZ(int,double[]) -> colorToXYZ
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    136:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    678:681:double[] getTempDouble3Array() -> getTempDouble3Array
    366:366:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    36:36:void <clinit>() -> <clinit>
    43:47:void <init>(int,int,int,int) -> <init>
    142:149:boolean equals(java.lang.Object) -> equals
    156:159:int hashCode() -> hashCode
    114:115:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    64:66:androidx.core.graphics.Insets of(int,int,int,int) -> of
    77:77:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    188:188:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    198:198:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    165:165:java.lang.String toString() -> toString
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    190:190:void addNode(java.util.ArrayList,char,float[]) -> addNode
    141:146:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    55:64:float[] copyOfRange(float[],int,int) -> copyOfRange
    97:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:79:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    123:125:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    260:299:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    174:175:int nextStart(java.lang.String,int) -> nextStart
    163:166:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    199:199:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:354:void <init>(char,float[]) -> <init>
    357:359:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    399:642:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:780:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:719:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    388:390:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    371:373:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    50:69:void <clinit>() -> <clinit>
    244:244:void clearCache() -> clearCache
    224:235:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    193:193:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    125:162:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    176:180:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    94:94:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    82:82:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
    202:208:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int) -> getBestFontFromFamily
    105:108:android.graphics.Typeface getSystemFontFamily(java.lang.String) -> getSystemFontFamily
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter:
    261:262:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    274:275:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    267:268:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:168:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:104:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:96:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:87:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:114:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:124:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:95:boolean isUsable() -> isUsable
    103:103:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:107:void <init>() -> <init>
    194:194:void abortCreation(java.lang.Object) -> abortCreation
    140:142:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:156:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:172:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:183:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:127:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:351:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:64:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
    44:44:void <init>() -> <init>
    110:139:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    63:97:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    54:54:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    155:160:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    48:48:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    220:222:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) -> addFontFamily
    170:177:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    138:150:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    115:131:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    188:204:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    154:154:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    68:70:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    100:100:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    212:216:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface) -> getFontFamily
    86:94:long getUniqueKey(android.graphics.Typeface) -> getUniqueKey
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    100:100:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    100:100:int getWeight(java.lang.Object) -> getWeight
    103:103:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    100:100:boolean isItalic(java.lang.Object) -> isItalic
    108:108:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.graphics.TypefaceCompatBaseImpl$2:
    154:154:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    154:154:int getWeight(java.lang.Object) -> getWeight
    157:157:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    154:154:boolean isItalic(java.lang.Object) -> isItalic
    162:162:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    183:183:void closeQuietly(java.io.Closeable) -> closeQuietly
    130:141:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    149:164:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    173:177:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    69:78:java.io.File getTempFile(android.content.Context) -> getTempFile
    94:98:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    109:119:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    208:223:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> readFontInfoIntoByteBuffer
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    188:189:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:198:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    221:250:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    177:178:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:211:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:410:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:271:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:62:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:79:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:111:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:124:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:374:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:138:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:152:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:166:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:335:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:316:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    208:208:void <clinit>() -> <clinit>
    155:379:void <init>() -> <init>
    155:383:void <init>(int) -> <init>
    764:812:void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context) -> addToShortcutIntent
    603:624:void checkResource(android.content.Context) -> checkResource
    1211:1245:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    287:290:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
    245:261:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int) -> createWithResource
    436:442:int getResId() -> getResId
    1157:1169:int getResId(android.graphics.drawable.Icon) -> getResId
    410:424:java.lang.String getResPackage() -> getResPackage
    1128:1140:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    736:749:android.content.res.Resources getResources(android.content.Context,java.lang.String) -> getResources
    481:487:android.net.Uri getUri() -> getUri
    1185:1197:android.net.Uri getUri(android.graphics.drawable.Icon) -> getUri
    716:729:java.io.InputStream getUriInputStream(android.content.Context) -> getUriInputStream
    937:973:void onPostParceling() -> onPostParceling
    900:930:void onPreParceling(boolean) -> onPreParceling
    529:529:android.graphics.drawable.Icon toIcon() -> toIcon
    541:593:android.graphics.drawable.Icon toIcon(android.content.Context) -> toIcon
    858:895:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:53:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.RoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawable:
    50:393:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    84:85:void computeBitmapSize() -> computeBitmapSize
    260:269:void draw(android.graphics.Canvas) -> draw
    284:284:int getAlpha() -> getAlpha
    295:295:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    356:356:float getCornerRadius() -> getCornerRadius
    366:366:int getIntrinsicHeight() -> getIntrinsicHeight
    361:361:int getIntrinsicWidth() -> getIntrinsicWidth
    371:378:int getOpacity() -> getOpacity
    345:349:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    275:278:void setAlpha(int) -> setAlpha
    194:195:void setAntiAlias(boolean) -> setAntiAlias
    289:290:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    330:340:void setCornerRadius(float) -> setCornerRadius
    217:218:void setDither(boolean) -> setDither
    211:212:void setFilterBitmap(boolean) -> setFilterBitmap
    315:316:void updateCircularCornerRadius() -> updateCircularCornerRadius
    227:254:void updateDstRect() -> updateDstRect
androidx.core.graphics.drawable.RoundedBitmapDrawable21 -> androidx.core.graphics.drawable.RoundedBitmapDrawable21:
    32:32:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    37:38:void getOutline(android.graphics.Outline) -> getOutline
    57:57:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory:
    73:76:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    43:43:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    62:62:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:65:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    222:224:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    216:216:int getLayoutDirection() -> getLayoutDirection
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    334:334:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    263:263:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:81:void jumpToCurrentState() -> jumpToCurrentState
    232:240:android.graphics.drawable.Drawable mutate() -> mutate
    255:255:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> mutateConstantState
    91:92:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    210:210:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    284:284:boolean onLevelChange(int) -> onLevelChange
    271:271:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:120:void setAlpha(int) -> setAlpha
    198:198:void setAutoMirrored(boolean) -> setAutoMirrored
    98:98:void setChangingConfigurations(int) -> setChangingConfigurations
    125:125:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:110:void setDither(boolean) -> setDither
    115:115:void setFilterBitmap(boolean) -> setFilterBitmap
    138:139:boolean setState(int[]) -> setState
    289:289:void setTint(int) -> setTint
    294:295:void setTintList(android.content.res.ColorStateList) -> setTintList
    300:301:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    342:360:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    279:279:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:75:void updateLocalState(android.content.res.Resources) -> updateLocalState
    305:324:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    43:44:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:49:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    141:145:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:64:void getOutline(android.graphics.Outline) -> getOutline
    113:115:boolean isCompatTintEnabled() -> isCompatTintEnabled
    129:133:boolean isProjected() -> isProjected
    54:54:void setHotspot(float,float) -> setHotspot
    59:59:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:105:boolean setState(int[]) -> setState
    84:87:void setTint(int) -> setTint
    75:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:96:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.WrappedDrawableState:
    32:40:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> canConstantState
    61:62:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:56:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    99:99:boolean isAtLeastO() -> isAtLeastO
    51:57:boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String) -> isAtLeastPreReleaseCodename
    155:155:boolean isAtLeastR() -> isAtLeastR
    166:166:boolean isAtLeastS() -> isAtLeastS
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    37:37:void <init>() -> <init>
    69:91:void cancel() -> cancel
    46:48:boolean isCanceled() -> isCanceled
    111:122:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    153:155:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    50:63:void <clinit>() -> <clinit>
    104:105:void beginSection(java.lang.String) -> beginSection
    117:118:void endSection() -> endSection
androidx.core.provider.CallbackWithHandler -> androidx.core.provider.CallbackWithHandler:
    40:42:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> <init>
    67:68:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    80:83:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult) -> onTypefaceResult
    54:55:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.CallbackWithHandler$1 -> androidx.core.provider.CallbackWithHandler$1:
    55:55:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface) -> <init>
    58:58:void run() -> run
androidx.core.provider.CallbackWithHandler$2 -> androidx.core.provider.CallbackWithHandler$2:
    68:68:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int) -> <init>
    71:71:void run() -> run
androidx.core.provider.CalleeHandler -> androidx.core.provider.CalleeHandler:
    36:39:android.os.Handler create() -> create
androidx.core.provider.FontProvider -> androidx.core.provider.FontProvider:
    197:197:void <clinit>() -> <clinit>
    226:228:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    214:218:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    190:194:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    53:61:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal) -> getFontFamilyResult
    76:101:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    121:186:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> query
androidx.core.provider.FontProvider$1 -> androidx.core.provider.FontProvider$1:
    197:197:void <init>() -> <init>
    197:197:int compare(java.lang.Object,java.lang.Object) -> compare
    200:205:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    57:63:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    93:94:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String) -> createIdentifier
    133:133:java.util.List getCertificates() -> getCertificates
    145:145:int getCertificatesArrayResId() -> getCertificatesArrayResId
    164:164:java.lang.String getId() -> getId
    103:103:java.lang.String getProviderAuthority() -> getProviderAuthority
    112:112:java.lang.String getProviderPackage() -> getProviderPackage
    121:121:java.lang.String getQuery() -> getQuery
    169:188:java.lang.String toString() -> toString
androidx.core.provider.FontRequestWorker -> androidx.core.provider.FontRequestWorker:
    58:72:void <clinit>() -> <clinit>
    221:221:java.lang.String createCacheId(androidx.core.provider.FontRequest,int) -> createCacheId
    263:279:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult) -> getFontFamilyResultStatus
    232:256:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> getFontSync
    164:200:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler) -> requestFontAsync
    102:133:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int) -> requestFontSync
    76:76:void resetTypefaceCache() -> resetTypefaceCache
androidx.core.provider.FontRequestWorker$1 -> androidx.core.provider.FontRequestWorker$1:
    117:117:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    117:117:java.lang.Object call() -> call
    120:120:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$2 -> androidx.core.provider.FontRequestWorker$2:
    171:171:void <init>(androidx.core.provider.CallbackWithHandler) -> <init>
    171:171:void accept(java.lang.Object) -> accept
    174:174:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$3 -> androidx.core.provider.FontRequestWorker$3:
    191:191:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    191:191:java.lang.Object call() -> call
    194:194:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$4 -> androidx.core.provider.FontRequestWorker$4:
    200:200:void <init>(java.lang.String) -> <init>
    200:200:void accept(java.lang.Object) -> accept
    204:212:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$TypefaceResult -> androidx.core.provider.FontRequestWorker$TypefaceResult:
    295:297:void <init>(int) -> <init>
    301:303:void <init>(android.graphics.Typeface) -> <init>
    308:308:boolean isSuccess() -> isSuccess
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    610:610:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    163:169:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> requestFont
    178:178:void resetTypefaceCache() -> resetTypefaceCache
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    390:392:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    407:407:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> create
    400:400:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    396:396:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    292:297:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    308:308:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int) -> create
    345:345:int getResultCode() -> getResultCode
    322:322:int getTtcIndex() -> getTtcIndex
    315:315:android.net.Uri getUri() -> getUri
    329:329:int getWeight() -> getWeight
    336:336:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    478:478:void <init>() -> <init>
androidx.core.provider.RequestExecutor -> androidx.core.provider.RequestExecutor:
    82:93:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int) -> createDefaultExecutor
    56:57:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer) -> execute
    65:73:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int) -> submit
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> androidx.core.provider.RequestExecutor$DefaultThreadFactory:
    164:166:void <init>(java.lang.String,int) -> <init>
    171:171:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread:
    178:179:void <init>(java.lang.Runnable,java.lang.String,int) -> <init>
    184:185:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> androidx.core.provider.RequestExecutor$ReplyRunnable:
    135:138:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer) -> <init>
    145:151:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> androidx.core.provider.RequestExecutor$ReplyRunnable$1:
    151:151:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object) -> <init>
    154:154:void run() -> run
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:265:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:306:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:334:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    392:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    412:427:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    456:456:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:140:void <init>() -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:169:void initialize(boolean) -> initialize
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:586:void <clinit>() -> <clinit>
    628:631:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:859:byte dirTypeBackward() -> dirTypeBackward
    816:829:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:707:int getEntryDir() -> getEntryDir
    744:748:int getExitDir() -> getExitDir
    944:955:byte skipEntityBackward() -> skipEntityBackward
    929:929:byte skipEntityForward() -> skipEntityForward
    901:919:byte skipTagBackward() -> skipTagBackward
    872:887:byte skipTagForward() -> skipTagForward
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
    36:59:void <clinit>() -> <clinit>
    129:140:java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    114:123:java.lang.String getScript(java.lang.String) -> getScript
    89:105:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    73:73:void <clinit>() -> <clinit>
    754:754:char charAt(int) -> charAt
    523:523:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    512:513:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    729:729:int getSpanEnd(java.lang.Object) -> getSpanEnd
    734:734:int getSpanFlags(java.lang.Object) -> getSpanFlags
    724:724:int getSpanStart(java.lang.Object) -> getSpanStart
    714:717:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    749:749:int length() -> length
    739:739:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    695:702:void removeSpan(java.lang.Object) -> removeSpan
    678:685:void setSpan(java.lang.Object,int,int,int) -> setSpan
    759:759:java.lang.CharSequence subSequence(int,int) -> subSequence
    765:765:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    197:210:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    214:219:void <init>(android.text.PrecomputedText$Params) -> <init>
    335:343:boolean equals(java.lang.Object) -> equals
    275:318:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    253:253:int getBreakStrategy() -> getBreakStrategy
    265:265:int getHyphenationFrequency() -> getHyphenationFrequency
    241:241:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    228:228:android.text.TextPaint getTextPaint() -> getTextPaint
    352:373:int hashCode() -> hashCode
    379:400:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    116:127:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:235:void <clinit>() -> <clinit>
    231:232:void <init>(boolean) -> <init>
    208:226:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:190:void <init>() -> <init>
    185:185:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:115:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    130:136:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:157:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    253:253:void <clinit>() -> <clinit>
    244:244:void <init>() -> <init>
    249:249:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    119:119:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    90:100:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    51:54:boolean equals(java.lang.Object,java.lang.Object) -> equals
    93:96:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pair -> androidx.core.util.Pair:
    37:39:void <init>(java.lang.Object,java.lang.Object) -> <init>
    84:84:androidx.core.util.Pair create(java.lang.Object,java.lang.Object) -> create
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:98:void <init>(int) -> <init>
    104:108:java.lang.Object acquire() -> acquire
    128:129:boolean isInPool(java.lang.Object) -> isInPool
    116:121:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    143:153:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    52:52:void checkArgument(boolean,java.lang.Object) -> checkArgument
    228:234:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    207:207:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    173:175:int checkFlagsArgument(int,int) -> checkFlagsArgument
    119:119:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    136:136:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    131:131:void <clinit>() -> <clinit>
    140:140:void <init>() -> <init>
    147:149:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    217:217:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    319:322:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    397:399:java.util.List getActionList(android.view.View) -> getActionList
    156:156:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    384:387:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    257:257:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    276:277:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    237:237:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    301:301:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    346:359:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    366:374:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    174:174:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    196:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    64:65:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    119:122:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:76:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:91:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    97:97:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    103:103:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    127:127:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    108:108:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    113:113:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    133:134:void <init>(android.content.Context) -> <init>
    164:164:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    306:307:void reset() -> reset
    283:283:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    293:298:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.core.view.ContentInfoCompat -> androidx.core.view.ContentInfoCompat:
    137:143:void <init>(androidx.core.view.ContentInfoCompat$Builder) -> <init>
    123:123:java.lang.String flagsToString(int) -> flagsToString
    163:163:android.content.ClipData getClip() -> getClip
    180:180:int getFlags() -> getFlags
    172:172:int getSource() -> getSource
    93:93:java.lang.String sourceToString(int) -> sourceToString
    149:154:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.ContentInfoCompat$Builder:
    293:295:void <init>(android.content.ClipData,int) -> <init>
    365:365:androidx.core.view.ContentInfoCompat build() -> build
    356:356:androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle) -> setExtras
    331:331:androidx.core.view.ContentInfoCompat$Builder setFlags(int) -> setFlags
    344:344:androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    112:113:void <init>(java.lang.Object) -> <init>
    194:198:boolean equals(java.lang.Object) -> equals
    127:128:int getSafeInsetBottom() -> getSafeInsetBottom
    136:137:int getSafeInsetLeft() -> getSafeInsetLeft
    145:146:int getSafeInsetRight() -> getSafeInsetRight
    118:119:int getSafeInsetTop() -> getSafeInsetTop
    203:203:int hashCode() -> hashCode
    208:208:java.lang.String toString() -> toString
    212:212:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> wrap
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    64:67:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    96:106:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:138:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:174:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    83:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:153:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    72:87:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    140:150:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    99:102:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    80:83:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    207:211:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    463:466:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:325:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:506:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:537:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:421:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    351:354:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:57:void <init>(android.view.View) -> <init>
    348:351:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:371:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:332:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    231:231:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:271:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    406:408:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:73:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    416:419:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:161:boolean startNestedScroll(int,int) -> startNestedScroll
    175:175:void stopNestedScroll() -> stopNestedScroll
    186:189:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:50:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:63:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:79:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    103:103:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    115:117:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:46:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:64:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:71:boolean onPreDraw() -> onPreDraw
    90:90:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:95:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:85:void removeListener() -> removeListener
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    470:4480:void <clinit>() -> <clinit>
    4329:4329:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1227:1231:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    1321:1325:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    2068:2074:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    3600:3606:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    3552:3558:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2644:2645:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2565:2571:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    4129:4132:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4121:4124:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    3985:3993:int generateViewId() -> generateViewId
    922:929:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    945:948:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    954:974:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1789:1790:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    4245:4245:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1357:1361:java.util.List getActionList(android.view.View) -> getActionList
    1273:1285:int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence) -> getAvailableActionIdFromResources
    2918:2922:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2963:2967:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3644:3645:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3766:3772:android.view.Display getDisplay(android.view.View) -> getDisplay
    2352:2353:float getElevation(android.view.View) -> getElevation
    491:499:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2819:2822:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View) -> getFallback
    2478:2479:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1101:1102:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    782:783:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1611:1612:int getLayoutDirection(android.view.View) -> getLayoutDirection
    2034:2050:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2000:2016:int getMinimumWidth(android.view.View) -> getMinimumWidth
    2782:2782:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View) -> getOnReceiveContentMimeTypes
    934:938:androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View) -> getOrCreateAccessibilityDelegateCompat
    1856:1859:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1840:1843:int getPaddingStart(android.view.View) -> getPaddingStart
    1649:1652:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2622:2625:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    1399:1399:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2409:2415:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2422:2423:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    3491:3492:float getZ(android.view.View) -> getZ
    3666:3667:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2878:2879:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    988:989:boolean hasTransientState(android.view.View) -> hasTransientState
    4308:4309:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3654:3657:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3460:3463:boolean isLaidOut(android.view.View) -> isLaidOut
    3042:3046:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    2891:2892:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    4172:4173:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    4422:4455:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3569:3595:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3521:3547:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2537:2543:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    694:694:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    4249:4249:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1201:1202:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    2805:2815:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    1017:1020:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1057:1060:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1079:1082:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1338:1340:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1346:1349:void removeActionWithId(int,android.view.View) -> removeActionWithId
    1313:1315:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2433:2436:void requestApplyInsets(android.view.View) -> requestApplyInsets
    522:523:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    4177:4177:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    725:728:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    4325:4325:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1825:1826:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    2904:2907:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2934:2951:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2981:2998:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3629:3630:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2341:2342:void setElevation(android.view.View,float) -> setElevation
    2494:2494:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    1002:1003:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1128:1138:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    826:827:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    2517:2518:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1877:1880:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    3718:3719:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2387:2393:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4462:4476:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    4272:4272:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3083:3086:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3612:3614:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2826:2826:void <init>() -> <init>
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    4178:4178:void <init>(int,java.lang.Class,int) -> <init>
    4178:4178:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4183:4183:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4178:4178:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4189:4189:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4178:4178:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4194:4194:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    4250:4250:void <init>(int,java.lang.Class,int,int) -> <init>
    4250:4250:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4255:4255:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4250:4250:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4261:4261:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4250:4250:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4266:4266:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4273:4273:void <init>(int,java.lang.Class,int,int) -> <init>
    4273:4273:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4278:4278:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4273:4273:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4284:4284:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4273:4273:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4289:4289:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$5 -> androidx.core.view.ViewCompat$5:
    4330:4330:void <init>(int,java.lang.Class,int) -> <init>
    4330:4330:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4335:4335:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4330:4330:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4341:4341:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4330:4330:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4346:4346:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4483:4485:void <init>() -> <init>
    4527:4533:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4490:4492:void onGlobalLayout() -> onGlobalLayout
    4501:4501:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4539:4539:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4359:4359:void <init>(int,java.lang.Class,int) -> <init>
    4364:4368:void <init>(int,java.lang.Class,int,int) -> <init>
    4413:4414:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4402:4402:boolean extrasAvailable() -> extrasAvailable
    4398:4398:boolean frameworkAvailable() -> frameworkAvailable
    4387:4391:java.lang.Object get(android.view.View) -> get
    4373:4381:void set(android.view.View,java.lang.Object) -> set
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4819:4823:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4746:4751:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    4741:4741:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    4760:4774:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
    4774:4775:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4780:4806:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    4836:4843:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
    4857:4857:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4552:4552:void <clinit>() -> <clinit>
    4548:4567:void <init>() -> <init>
    4577:4581:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4587:4598:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4606:4620:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4570:4573:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4665:4670:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4632:4655:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4705:4729:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:44:void <clinit>() -> <clinit>
    106:117:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    424:432:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    461:469:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    384:397:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    329:353:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    248:262:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    207:221:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    282:295:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    30:38:void <init>(android.view.View) -> <init>
    138:139:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    464:465:void cancel() -> cancel
    237:238:long getDuration() -> getDuration
    123:124:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    254:255:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    729:734:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    742:759:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    286:287:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    776:787:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    644:645:void start() -> start
    183:184:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    742:742:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    745:745:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    750:750:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    755:755:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    780:780:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    783:783:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    45:46:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    101:107:void onAnimationCancel(android.view.View) -> onAnimationCancel
    75:95:void onAnimationEnd(android.view.View) -> onAnimationEnd
    52:68:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    78:81:void <clinit>() -> <clinit>
    88:100:void <init>(android.view.WindowInsets) -> <init>
    109:129:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    506:506:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    477:477:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    319:319:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2111:2111:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    721:725:boolean equals(java.lang.Object) -> equals
    490:490:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    668:668:androidx.core.graphics.Insets getInsets(int) -> getInsets
    566:566:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    549:549:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    606:606:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    239:239:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    191:191:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    223:223:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    207:207:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    526:526:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    730:730:int hashCode() -> hashCode
    651:651:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1334:1341:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    286:286:boolean isConsumed() -> isConsumed
    340:342:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    1703:1703:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2107:2107:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2103:2103:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1801:1801:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    741:741:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    148:148:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    168:173:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder:
    2128:2137:void <clinit>() -> <clinit>
    2144:2168:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    1396:1404:void <init>() -> <init>
    1413:1421:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1610:1610:androidx.core.view.WindowInsetsCompat build() -> build
    1584:1584:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1439:1439:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1620:1620:void <init>() -> <init>
    1623:1624:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1669:1691:void applyInsetTypes() -> applyInsetTypes
    1697:1698:androidx.core.view.WindowInsetsCompat build() -> build
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    1717:1718:void <init>() -> <init>
    1722:1723:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1742:1746:androidx.core.view.WindowInsetsCompat build() -> build
    1758:1791:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1736:1736:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1728:1729:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1809:1810:void <init>() -> <init>
    1814:1818:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1854:1857:androidx.core.view.WindowInsetsCompat build() -> build
    1833:1833:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1843:1843:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1828:1828:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1823:1823:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1838:1838:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
    1865:1865:void <init>() -> <init>
    1869:1869:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    746:750:void <clinit>() -> <clinit>
    754:755:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    783:783:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    773:773:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    768:768:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    840:846:boolean equals(java.lang.Object) -> equals
    821:821:androidx.core.graphics.Insets getInsets(int) -> getInsets
    805:805:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    793:793:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    799:799:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    788:788:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    811:811:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    852:853:int hashCode() -> hashCode
    816:816:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    892:899:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    903:903:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1110:1114:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1085:1086:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1184:1186:boolean equals(java.lang.Object) -> equals
    914:914:androidx.core.graphics.Insets getInsets(int) -> getInsets
    940:945:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    955:1041:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    1101:1104:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1063:1070:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1125:1154:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    1077:1080:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    908:908:boolean isRound() -> isRound
    1168:1179:void loadReflectionField() -> loadReflectionField
    1162:1162:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1096:1096:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1091:1091:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    1192:1195:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1192:1200:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1211:1211:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1217:1217:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1223:1230:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1205:1205:boolean isConsumed() -> isConsumed
    1235:1235:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    1243:1243:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1247:1247:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1259:1259:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1265:1269:boolean equals(java.lang.Object) -> equals
    1253:1253:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1274:1274:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    1281:1286:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1281:1290:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1305:1309:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1296:1299:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1315:1318:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    1324:1324:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
    1347:1347:void <clinit>() -> <clinit>
    1350:1350:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1354:1354:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    1360:1361:androidx.core.graphics.Insets getInsets(int) -> getInsets
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
    2043:2043:int indexOf(int) -> indexOf
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
    2072:2093:int toPlatformType(int) -> toPlatformType
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:58:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:71:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    343:344:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    322:323:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1250:1701:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1997:1997:void addAction(int) -> addAction
    2030:2031:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1909:1909:void addChild(android.view.View) -> addChild
    1927:1928:void addChild(android.view.View,int) -> addChild
    2775:2778:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2704:2715:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    2766:2770:void clearExtrasSpans() -> clearExtrasSpans
    4088:4102:boolean equals(java.lang.Object) -> equals
    2001:2008:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    3075:3087:java.util.List getActionList() -> getActionList
    1982:1982:int getActions() -> getActions
    4180:4182:boolean getBooleanProperty(int) -> getBooleanProperty
    2227:2227:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2259:2259:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1877:1877:int getChildCount() -> getChildCount
    2642:2642:java.lang.CharSequence getClassName() -> getClassName
    2741:2743:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2802:2802:java.lang.CharSequence getContentDescription() -> getContentDescription
    3405:3408:android.os.Bundle getExtras() -> getExtras
    2722:2725:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2618:2618:java.lang.CharSequence getPackageName() -> getPackageName
    2732:2732:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2666:2680:java.lang.CharSequence getText() -> getText
    2895:2896:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2762:2762:boolean hasSpans() -> hasSpans
    4077:4077:int hashCode() -> hashCode
    2751:2758:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2410:2411:boolean isAccessibilityFocused() -> isAccessibilityFocused
    2283:2283:boolean isCheckable() -> isCheckable
    2307:2307:boolean isChecked() -> isChecked
    2465:2465:boolean isClickable() -> isClickable
    2513:2513:boolean isEnabled() -> isEnabled
    2331:2331:boolean isFocusable() -> isFocusable
    2355:2355:boolean isFocused() -> isFocused
    2489:2489:boolean isLongClickable() -> isLongClickable
    2537:2537:boolean isPassword() -> isPassword
    2561:2561:boolean isScrollable() -> isScrollable
    2441:2441:boolean isSelected() -> isSelected
    3872:3875:boolean isShowingHintText() -> isShowingHintText
    2379:2380:boolean isVisibleToUser() -> isVisibleToUser
    1739:1739:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1767:1767:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1778:1778:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2092:2093:boolean performAction(int,android.os.Bundle) -> performAction
    2862:2862:void recycle() -> recycle
    2055:2056:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    2782:2791:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2430:2431:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    4170:4175:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2250:2250:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2274:2274:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    2298:2298:void setCheckable(boolean) -> setCheckable
    2322:2322:void setChecked(boolean) -> setChecked
    2657:2657:void setClassName(java.lang.CharSequence) -> setClassName
    2480:2480:void setClickable(boolean) -> setClickable
    2999:3001:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3008:3010:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2832:2832:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    3691:3692:void setDismissable(boolean) -> setDismissable
    2528:2528:void setEnabled(boolean) -> setEnabled
    3201:3202:void setError(java.lang.CharSequence) -> setError
    2346:2346:void setFocusable(boolean) -> setFocusable
    2370:2370:void setFocused(boolean) -> setFocused
    3929:3932:void setHeading(boolean) -> setHeading
    3180:3183:void setHintText(java.lang.CharSequence) -> setHintText
    3460:3461:void setMaxTextLength(int) -> setMaxTextLength
    2633:2633:void setPackageName(java.lang.CharSequence) -> setPackageName
    3805:3808:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2180:2182:void setParent(android.view.View) -> setParent
    2207:2210:void setParent(android.view.View,int) -> setParent
    3857:3860:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2576:2576:void setScrollable(boolean) -> setScrollable
    2456:2456:void setSelected(boolean) -> setSelected
    3892:3895:void setShowingHintText(boolean) -> setShowingHintText
    1787:1789:void setSource(android.view.View) -> setSource
    1814:1817:void setSource(android.view.View,int) -> setSource
    2847:2850:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    2696:2696:void setText(java.lang.CharSequence) -> setText
    3621:3622:void setTraversalAfter(android.view.View) -> setTraversalAfter
    2399:2400:void setVisibleToUser(boolean) -> setVisibleToUser
    4112:4166:java.lang.String toString() -> toString
    1718:1718:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1711:1711:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    105:589:void <clinit>() -> <clinit>
    609:609:void <init>(int,java.lang.CharSequence) -> <init>
    623:623:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    627:627:void <init>(java.lang.Object) -> <init>
    632:632:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    637:645:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    709:709:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    723:732:boolean equals(java.lang.Object) -> equals
    654:655:int getId() -> getId
    668:669:java.lang.CharSequence getLabel() -> getLabel
    715:715:int hashCode() -> hashCode
    684:698:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    809:810:void <init>(java.lang.Object) -> <init>
    779:786:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    933:934:void <init>(java.lang.Object) -> <init>
    900:907:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    119:127:void <init>() -> <init>
    137:138:void <init>(java.lang.Object) -> <init>
    145:145:java.lang.Object getProvider() -> getProvider
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    39:40:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    45:50:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    57:66:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    74:74:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    81:81:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    86:90:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26:
    98:98:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    104:105:void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    508:509:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    558:559:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    139:140:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    46:46:void <init>() -> <init>
    54:54:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    64:64:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    98:98:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    183:183:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    148:148:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    169:169:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    113:113:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    133:133:void <init>() -> <init>
androidx.core.view.animation.PathInterpolatorApi14 -> androidx.core.view.animation.PathInterpolatorApi14:
    36:51:void <init>(android.graphics.Path) -> <init>
    61:61:void <init>(float,float,float,float) -> <init>
    107:109:android.graphics.Path createCubic(float,float,float,float) -> createCubic
    74:93:float getInterpolation(float) -> getInterpolation
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
    81:84:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    91:91:void <clinit>() -> <clinit>
    181:192:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    462:464:boolean isCutOnSurrogate(java.lang.CharSequence,int,int) -> isCutOnSurrogate
    158:165:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
    235:267:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
    212:215:void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence) -> setInitialSurroundingText
    484:492:void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> setSurroundingText
    296:338:void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> trimLongSurroundingText
androidx.core.view.inputmethod.EditorInfoCompat$Impl30 -> androidx.core.view.inputmethod.EditorInfoCompat$Impl30:
    536:536:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    261:288:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    77:114:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
    271:271:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    275:279:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
    288:288:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    291:294:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    169:173:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    177:178:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    186:186:android.net.Uri getContentUri() -> getContentUri
    196:196:android.content.ClipDescription getDescription() -> getDescription
    204:204:android.net.Uri getLinkUri() -> getLinkUri
    247:247:void requestPermission() -> requestPermission
    222:225:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    109:110:void <init>(java.lang.Object) -> <init>
    114:115:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    121:121:android.net.Uri getContentUri() -> getContentUri
    127:127:android.content.ClipDescription getDescription() -> getDescription
    133:133:android.net.Uri getLinkUri() -> getLinkUri
    144:144:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:65:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    83:83:android.net.Uri getLinkUri() -> getLinkUri
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:225:void <init>(android.view.View) -> <init>
    687:691:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    638:645:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:543:void requestStop() -> requestStop
    420:420:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:359:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:240:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:403:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:297:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:316:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:452:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:436:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:380:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:338:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:529:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:761:void <init>() -> <init>
    831:842:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    795:796:boolean isFinished() -> isFinished
    788:791:void requestStop() -> requestStop
    769:769:void setRampDownDuration(int) -> setRampDownDuration
    765:765:void setRampUpDuration(int) -> setRampUpDuration
    852:853:void setTargetVelocity(float,float) -> setTargetVelocity
    776:781:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:695:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:727:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    44:44:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    123:142:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    71:75:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    57:60:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:96:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.ContentLoadingProgressBar -> androidx.core.widget.ContentLoadingProgressBar:
    59:59:void <init>(android.content.Context) -> <init>
    39:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:94:void hide() -> hide
    99:114:void hideOnUiThread() -> hideOnUiThread
    45:47:void lambda$new$0() -> lambda$new$0
    51:54:void lambda$new$1() -> lambda$new$1
    68:69:void onAttachedToWindow() -> onAttachedToWindow
    74:75:void onDetachedFromWindow() -> onDetachedFromWindow
    79:80:void removeCallbacks() -> removeCallbacks
    129:129:void show() -> show
    135:141:void showOnUiThread() -> showOnUiThread
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda0 -> androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda0:
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$0.f$0 -> f$0
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$0.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$0.run() -> run
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda1 -> androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda1:
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$62dfa22687fb51f065c7936f4783bba5467fff0dc677f5b69a6fac416d356031$0.f$0 -> f$0
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$62dfa22687fb51f065c7936f4783bba5467fff0dc677f5b69a6fac416d356031$0.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$62dfa22687fb51f065c7936f4783bba5467fff0dc677f5b69a6fac416d356031$0.run() -> run
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda2 -> androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda2:
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$1.f$0 -> f$0
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$1.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$1.run() -> run
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda3 -> androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda3:
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$2939d8dba2e427d66242a15e0a33cc277afc3f7418786f7828787befa6068a74$0.f$0 -> f$0
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$2939d8dba2e427d66242a15e0a33cc277afc3f7418786f7828787befa6068a74$0.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$2939d8dba2e427d66242a15e0a33cc277afc3f7418786f7828787befa6068a74$0.run() -> run
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    66:70:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    87:88:float getDistance(android.widget.EdgeEffect) -> getDistance
    194:197:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    239:242:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.EdgeEffectCompat$Api31Impl -> androidx.core.widget.EdgeEffectCompat$Api31Impl:
    306:308:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    329:329:float getDistance(android.widget.EdgeEffect) -> getDistance
    319:321:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    37:41:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    74:78:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:65:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    88:103:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:35:void <init>(android.widget.ListView) -> <init>
    51:73:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:40:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    67:85:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    37:53:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    189:191:void <clinit>() -> <clinit>
    203:203:void <init>(android.content.Context) -> <init>
    207:207:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    105:231:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1763:1764:void abortAnimatedScroll() -> abortAnimatedScroll
    488:492:void addView(android.view.View) -> addView
    497:501:void addView(android.view.View,int) -> addView
    506:510:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    515:519:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1382:1426:boolean arrowScroll(int) -> arrowScroll
    539:543:boolean canScroll() -> canScroll
    1626:1626:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1619:1619:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1612:1612:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1662:1714:void computeScroll() -> computeScroll
    1815:1874:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1605:1605:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1598:1598:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1574:1584:int computeVerticalScrollRange() -> computeVerticalScrollRange
    637:637:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    314:314:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    319:319:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    270:270:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    309:309:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    239:239:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    303:303:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1458:1461:void doScrollY(int) -> doScrollY
    2073:2116:void draw(android.graphics.Canvas) -> draw
    1016:1019:boolean edgeEffectFling(int) -> edgeEffectFling
    2039:2045:void endDrag() -> endDrag
    649:682:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1203:1236:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    2027:2034:void fling(int) -> fling
    1319:1334:boolean fullScroll(int) -> fullScroll
    451:459:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    472:472:int getMaxScrollAmount() -> getMaxScrollAmount
    424:424:int getNestedScrollAxes() -> getNestedScrollAxes
    1176:1181:int getScrollRange() -> getScrollRange
    436:441:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1096:1107:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    257:257:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    297:297:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    691:697:boolean inChild(int,int) -> inChild
    703:706:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    476:483:void initScrollView() -> initScrollView
    711:712:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    282:282:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1436:1436:boolean isOffScreen(android.view.View) -> isOffScreen
    2015:2016:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1444:1448:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1632:1642:void measureChild(android.view.View,int,int) -> measureChild
    1648:1656:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1982:1984:void onAttachedToWindow() -> onAttachedToWindow
    1068:1084:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    744:840:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1944:1977:void onLayout(boolean,int,int,int,int) -> onLayout
    601:629:void onMeasure(int,int) -> onMeasure
    410:411:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    419:419:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    373:373:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    403:403:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    327:327:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    367:367:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    398:398:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    354:355:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    387:387:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    331:340:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1113:1113:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1911:1923:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2152:2160:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2165:2167:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    592:595:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1051:1061:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1989:2003:void onSizeChanged(int,int,int,int) -> onSizeChanged
    381:381:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    360:361:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    392:392:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    845:1009:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1121:1169:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1281:1302:boolean pageScroll(int) -> pageScroll
    717:719:void recycleVelocityTracker() -> recycleVelocityTracker
    1731:1747:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    1881:1887:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1930:1933:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    726:728:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1938:1939:void requestLayout() -> requestLayout
    1754:1759:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1352:1369:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    2056:2066:void scrollTo(int,int) -> scrollTo
    1773:1781:void scrollToChild(android.view.View) -> scrollToChild
    1794:1800:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    569:571:void setFillViewport(boolean) -> setFillViewport
    277:277:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    532:532:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    1473:1473:void smoothScrollBy(int,int) -> smoothScrollBy
    1496:1517:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1550:1550:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1563:1563:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    247:247:boolean startNestedScroll(int,int) -> startNestedScroll
    287:287:boolean startNestedScroll(int) -> startNestedScroll
    1039:1044:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    252:252:void stopNestedScroll(int) -> stopNestedScroll
    292:292:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2211:2211:void <init>() -> <init>
    2276:2284:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2251:2267:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2214:2240:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2197:2197:void <clinit>() -> <clinit>
    2175:2175:void <init>(android.os.Parcelable) -> <init>
    2179:2180:void <init>(android.os.Parcel) -> <init>
    2192:2193:java.lang.String toString() -> toString
    2185:2186:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2198:2198:void <init>() -> <init>
    2198:2198:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2198:2198:java.lang.Object[] newArray(int) -> newArray
    2206:2206:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    90:106:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:170:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:79:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    295:310:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    788:788:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    798:798:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    927:974:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    835:847:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1013:1017:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1047:1051:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    151:157:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    713:736:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    758:777:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    816:822:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    904:913:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    283:286:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    519:529:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    564:567:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    691:691:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    679:681:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    650:659:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    685:687:boolean isEditable(android.widget.TextView) -> isEditable
    666:673:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    583:583:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    572:572:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    588:588:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    577:578:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    597:644:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.core.widget.TextViewOnReceiveContentListener -> androidx.core.widget.TextViewOnReceiveContentListener:
    49:49:void <init>() -> <init>
    94:97:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int) -> coerceToText
    56:85:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> onReceiveContent
    103:108:void replaceSelection(android.text.Editable,java.lang.CharSequence) -> replaceSelection
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl -> androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl:
    118:121:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl -> androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl:
    131:133:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:40:void <init>() -> <init>
    48:52:void <init>(android.os.Parcelable) -> <init>
    70:72:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    77:77:android.os.Parcelable getSuperState() -> getSuperState
    87:87:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    90:90:void <init>() -> <init>
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    104:150:void <init>(android.view.View) -> <init>
    969:972:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1021:1029:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    483:483:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    641:643:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    679:702:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    655:656:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    783:857:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    736:749:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:194:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    218:251:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:435:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:329:void getBoundsInScreen(int,android.graphics.Rect) -> getBoundsInScreen
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    452:469:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    903:919:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    722:725:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:280:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    662:665:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    757:760:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    868:870:boolean performAction(int,int,android.os.Bundle) -> performAction
    881:889:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    875:875:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    939:954:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    987:1008:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    507:517:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    1045:1071:void setBoundsInScreenFromBoundsInParent(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> setBoundsInScreenFromBoundsInParent
    614:624:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:339:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1253:1253:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1260:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1273:1277:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1267:1267:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    329:334:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:178:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:55:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:69:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:84:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    203:230:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    299:311:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    345:353:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    372:380:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    400:408:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    427:435:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    95:103:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:129:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    341:341:void <clinit>() -> <clinit>
    123:407:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    543:548:void cancel() -> cancel
    503:511:void captureChildView(android.view.View,int) -> captureChildView
    1317:1330:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1349:1357:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1377:1383:boolean checkTouchSlop(int) -> checkTouchSlop
    1406:1430:boolean checkTouchSlop(int,int) -> checkTouchSlop
    702:702:int clampMag(int,int,int) -> clampMag
    719:719:float clampMag(float,float,float) -> clampMag
    822:832:void clearMotionHistory() -> clearMotionHistory
    836:846:void clearMotionHistory(int) -> clearMotionHistory
    674:688:int computeAxisDuration(int,int,int) -> computeAxisDuration
    649:664:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    767:801:boolean continueSettling(boolean) -> continueSettling
    364:364:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    378:379:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    811:817:void dispatchViewReleased(float,float) -> dispatchViewReleased
    728:728:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1487:1501:void dragTo(int,int,int,int) -> dragTo
    850:875:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1548:1552:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    629:644:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    519:519:android.view.View getCapturedView() -> getCapturedView
    491:491:int getDefaultEdgeSize() -> getDefaultEdgeSize
    465:465:int getEdgeSize() -> getEdgeSize
    1562:1565:int getEdgesTouched(int,int) -> getEdgesTouched
    535:535:int getTouchSlop() -> getTouchSlop
    437:437:int getViewDragState() -> getViewDragState
    1516:1516:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    916:916:boolean isPointerDown(int) -> isPointerDown
    1572:1572:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1532:1535:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1129:1289:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1474:1481:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1297:1312:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    1587:1587:java.lang.Object requireNonNull(java.lang.Object,java.lang.String) -> requireNonNull
    880:884:void saveInitialMotion(float,float,int) -> saveInitialMotion
    888:898:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    920:925:void setDragState(int) -> setDragState
    478:478:void setEdgeSize(int) -> setEdgeSize
    453:453:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    417:417:void setMinVelocity(float) -> setMinVelocity
    609:616:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    995:1119:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    584:591:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    940:946:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    341:341:void <init>() -> <init>
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    349:349:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    352:352:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    160:160:void <init>() -> <init>
androidx.drawerlayout.R$styleable -> androidx.drawerlayout.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    110:255:void <clinit>() -> <clinit>
    327:327:void <init>(android.content.Context) -> <init>
    331:331:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    203:401:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    549:552:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1988:2018:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2134:2152:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2038:2047:void cancelChildViewTouch() -> cancelChildViewTouch
    994:994:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    1978:1978:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1811:1811:void closeDrawer(android.view.View) -> closeDrawer
    1821:1843:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1853:1853:void closeDrawer(int) -> closeDrawer
    1864:1869:void closeDrawer(int,boolean) -> closeDrawer
    1684:1684:void closeDrawers() -> closeDrawers
    1689:1715:void closeDrawers(boolean) -> closeDrawers
    1362:1373:void computeScroll() -> computeScroll
    1588:1610:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    885:907:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    914:931:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    960:965:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    809:819:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> dispatchTransformedGenericPointerEvent
    1455:1512:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1029:1034:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    999:1003:android.view.View findOpenDrawer() -> findOpenDrawer
    2026:2029:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1964:1964:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1969:1973:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1983:1983:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    687:725:int getDrawerLockMode(int) -> getDrawerLockMode
    744:748:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    781:786:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    989:990:int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    981:981:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    829:839:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> getTransformedMotionEvent
    1055:1055:java.lang.String gravityToString(int) -> gravityToString
    1380:1382:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    1952:1955:boolean hasPeekingDrawer() -> hasPeekingDrawer
    2022:2022:boolean hasVisibleDrawer() -> hasVisibleDrawer
    2162:2164:boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    1518:1518:boolean isContentView(android.view.View) -> isContentView
    1883:1887:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1913:1915:boolean isDrawerOpen(int) -> isDrawerOpen
    1522:1524:boolean isDrawerView(android.view.View) -> isDrawerView
    1929:1932:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    1944:1946:boolean isDrawerVisible(int) -> isDrawerVisible
    796:800:boolean isInBoundsOfChild(float,float,android.view.View) -> isInBoundsOfChild
    1246:1247:void mirror(android.graphics.drawable.Drawable,int) -> mirror
    1011:1019:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    1066:1067:void onAttachedToWindow() -> onAttachedToWindow
    1060:1061:void onDetachedFromWindow() -> onDetachedFromWindow
    1438:1448:void onDraw(android.graphics.Canvas) -> onDraw
    1539:1579:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2053:2057:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2063:2069:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1253:1350:void onLayout(boolean,int,int,int,int) -> onLayout
    1075:1190:void onMeasure(int,int) -> onMeasure
    2074:2099:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1433:1433:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2105:2127:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1621:1659:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1733:1733:void openDrawer(android.view.View) -> openDrawer
    1743:1768:void openDrawer(android.view.View,boolean) -> openDrawer
    1778:1778:void openDrawer(int) -> openDrawer
    1789:1794:void openDrawer(int,boolean) -> openDrawer
    566:570:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    1673:1676:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1355:1356:void requestLayout() -> requestLayout
    1206:1221:android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    1225:1239:android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    1198:1202:void resolveShadowDrawables() -> resolveShadowDrawables
    440:443:void setChildInsets(androidx.core.view.WindowInsetsCompat,boolean) -> setChildInsets
    528:536:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    587:588:void setDrawerLockMode(int) -> setDrawerLockMode
    611:644:void setDrawerLockMode(int,int) -> setDrawerLockMode
    971:977:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    1427:1428:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    953:955:void updateChildAccessibilityAction(android.view.View) -> updateChildAccessibilityAction
    937:946:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    849:878:void updateDrawerState(int,android.view.View) -> updateDrawerState
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$1:
    258:258:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    261:262:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
androidx.drawerlayout.widget.DrawerLayout$2 -> androidx.drawerlayout.widget.DrawerLayout$2:
    366:366:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    370:373:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate:
    2427:2428:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2504:2508:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    2520:2535:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    2477:2491:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2465:2467:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2432:2460:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2497:2498:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
    2539:2539:void <init>() -> <init>
    2543:2549:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    2390:2401:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2390:2405:void <init>(int,int) -> <init>
    2390:2415:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2390:2419:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2390:2423:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2201:2201:void <clinit>() -> <clinit>
    2172:2184:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2172:2188:void <init>(android.os.Parcelable) -> <init>
    2193:2198:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2201:2201:void <init>() -> <init>
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2204:2204:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2209:2209:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object[] newArray(int) -> newArray
    2214:2214:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
    2223:2230:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2371:2375:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2381:2381:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2280:2283:void closeOtherDrawer() -> closeOtherDrawer
    2366:2366:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2354:2360:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2308:2308:void onEdgeTouched(int,int) -> onEdgeTouched
    2273:2276:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2251:2251:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2257:2268:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2291:2303:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2314:2334:void peekDrawer() -> peekDrawer
    2238:2238:void removeCallbacks() -> removeCallbacks
    2234:2234:void setDragger(androidx.customview.widget.ViewDragHelper) -> setDragger
    2245:2246:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1:
    2223:2223:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2225:2225:void run() -> run
androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackScheduler14 -> androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackScheduler14:
    275:277:void <init>() -> <init>
androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackScheduler16 -> androidx.dynamicanimation.animation.AnimationHandler$FrameCallbackScheduler16:
    254:257:void <init>() -> <init>
androidx.fragment.R$styleable -> androidx.fragment.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    38:141:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    264:276:void bumpBackStackNesting(int) -> bumpBackStackNesting
    294:294:int commit() -> commit
    299:299:int commitAllowingStateLoss() -> commitAllowingStateLoss
    315:330:int commitInternal(boolean) -> commitInternal
    304:305:void commitNow() -> commitNow
    310:311:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    183:184:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    58:58:void dump(java.lang.String,java.io.PrintWriter) -> dump
    63:130:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    402:458:void executeOps() -> executeOps
    470:525:void executePopOps(boolean) -> executePopOps
    553:613:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    345:352:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    685:685:java.lang.String getName() -> getName
    358:361:boolean interactsWith(int) -> interactsWith
    373:386:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    677:679:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    658:660:boolean isPostponed() -> isPostponed
    190:195:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    284:288:void runOnCommitRunnables() -> runOnCommitRunnables
    668:671:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    42:54:java.lang.String toString() -> toString
    632:650:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackRecordState -> androidx.fragment.app.BackStackRecordState:
    204:204:void <clinit>() -> <clinit>
    50:83:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    86:100:void <init>(android.os.Parcel) -> <init>
    148:178:void fillInBackStackRecord(androidx.fragment.app.BackStackRecord) -> fillInBackStackRecord
    111:120:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    188:201:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackRecordState$1 -> androidx.fragment.app.BackStackRecordState$1:
    205:205:void <init>() -> <init>
    205:205:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    208:208:androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel) -> createFromParcel
    205:205:java.lang.Object[] newArray(int) -> newArray
    213:213:androidx.fragment.app.BackStackRecordState[] newArray(int) -> newArray
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    75:75:void <clinit>() -> <clinit>
    40:42:void <init>(android.os.Parcel) -> <init>
    71:72:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    76:76:void <init>() -> <init>
    76:76:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    79:79:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    76:76:java.lang.Object[] newArray(int) -> newArray
    84:84:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
    52:52:void <init>(android.view.ViewGroup) -> <init>
    721:722:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    680:694:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    61:126:void executeOperations(java.util.List,boolean) -> executeOperations
    703:713:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    662:666:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    132:272:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    287:648:java.util.Map startTransitions(java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
    103:103:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    106:108:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
    181:181:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    184:190:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
    197:197:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator) -> <init>
    200:200:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
    245:245:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    255:255:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
    255:255:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    258:259:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
    272:272:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    275:277:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
    453:453:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    456:457:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
    492:492:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    495:495:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
    577:577:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    580:580:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
    628:628:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo) -> <init>
    631:631:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
    761:766:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    771:777:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
    731:733:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    755:755:void completeSpecialEffect() -> completeSpecialEffect
    738:738:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    743:743:androidx.core.os.CancellationSignal getSignal() -> getSignal
    747:750:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
    792:818:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    842:849:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    862:871:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    837:837:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    824:824:java.lang.Object getTransition() -> getTransition
    832:832:boolean hasSharedElementTransition() -> hasSharedElementTransition
    828:828:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    104:185:void <init>() -> <init>
    57:57:android.app.Dialog access$000(androidx.fragment.app.DialogFragment) -> access$000
    57:57:android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment) -> access$100
    57:57:boolean access$200(androidx.fragment.app.DialogFragment) -> access$200
    502:503:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    304:304:void dismiss() -> dismiss
    318:352:void dismissInternal(boolean,boolean) -> dismissInternal
    364:364:android.app.Dialog getDialog() -> getDialog
    385:385:int getTheme() -> getTheme
    442:447:void onAttach(android.content.Context) -> onAttach
    468:479:void onCreate(android.os.Bundle) -> onCreate
    613:616:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    733:750:void onDestroyView() -> onDestroyView
    454:461:void onDetach() -> onDetach
    625:633:void onDismiss(android.content.DialogInterface) -> onDismiss
    526:527:android.view.View onFindViewById(int) -> onFindViewById
    546:566:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    533:533:boolean onHasView() -> onHasView
    695:714:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    684:688:void onStart() -> onStart
    721:723:void onStop() -> onStop
    672:676:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    486:493:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    638:665:void prepareDialog(android.os.Bundle) -> prepareDialog
    376:378:android.app.Dialog requireDialog() -> requireDialog
    576:584:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
    104:104:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    108:108:void run() -> run
androidx.fragment.app.DialogFragment$2 -> androidx.fragment.app.DialogFragment$2:
    113:113:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    117:118:void onCancel(android.content.DialogInterface) -> onCancel
androidx.fragment.app.DialogFragment$3 -> androidx.fragment.app.DialogFragment$3:
    124:124:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    128:129:void onDismiss(android.content.DialogInterface) -> onDismiss
androidx.fragment.app.DialogFragment$4 -> androidx.fragment.app.DialogFragment$4:
    140:140:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    140:140:void onChanged(java.lang.Object) -> onChanged
    144:155:void onChanged(androidx.lifecycle.LifecycleOwner) -> onChanged
androidx.fragment.app.DialogFragment$5 -> androidx.fragment.app.DialogFragment$5:
    503:503:void <init>(androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentContainer) -> <init>
    507:512:android.view.View onFindViewById(int) -> onFindViewById
    519:519:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    122:122:void <clinit>() -> <clinit>
    134:537:void <init>() -> <init>
    2759:2786:void callStartTransitionListener(boolean) -> callStartTransitionListener
    2886:2886:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2803:2873:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3253:3256:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    665:665:boolean equals(java.lang.Object) -> equals
    2878:2881:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    915:915:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2614:2615:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2639:2640:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3326:3329:android.view.View getAnimatingAway() -> getAnimatingAway
    3341:3344:android.animation.Animator getAnimator() -> getAnimator
    736:736:android.os.Bundle getArguments() -> getArguments
    1075:1078:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    888:888:android.content.Context getContext() -> getContext
    2397:2400:java.lang.Object getEnterTransition() -> getEnterTransition
    3312:3315:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2476:2479:java.lang.Object getExitTransition() -> getExitTransition
    3319:3322:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3363:3366:android.view.View getFocusedView() -> getFocusedView
    942:942:java.lang.Object getHost() -> getHost
    1673:1678:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    319:319:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    410:413:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3260:3263:int getNextAnim() -> getNextAnim
    3274:3277:int getNextTransition() -> getNextTransition
    1087:1087:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1039:1041:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3352:3355:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2514:2517:java.lang.Object getReenterTransition() -> getReenterTransition
    965:965:android.content.res.Resources getResources() -> getResources
    2436:2439:java.lang.Object getReturnTransition() -> getReturnTransition
    456:456:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2547:2550:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2585:2589:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3290:3291:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3298:3299:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    987:987:java.lang.String getString(int) -> getString
    856:862:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    1952:1952:android.view.View getView() -> getView
    381:381:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    397:405:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    672:672:int hashCode() -> hashCode
    568:572:void initLifecycle() -> initLifecycle
    2165:2180:void initState() -> initState
    611:631:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    3377:3380:boolean isHideReplaced() -> isHideReplaced
    658:658:boolean isInBackStack() -> isInBackStack
    1198:1199:boolean isMenuVisible() -> isMenuVisible
    3370:3373:boolean isPostponed() -> isPostponed
    1135:1135:boolean isRemoving() -> isRemoving
    1144:1145:boolean isRemovingParent() -> isRemovingParent
    763:766:boolean isStateSaved() -> isStateSaved
    3042:3042:void noteStateNotSaved() -> noteStateNotSaved
    1997:1997:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1490:1491:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1780:1784:void onAttach(android.content.Context) -> onAttach
    1799:1799:void onAttach(android.app.Activity) -> onAttach
    2086:2086:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1867:1870:void onCreate(android.os.Bundle) -> onCreate
    2296:2296:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1924:1925:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2155:2155:void onDestroy() -> onDestroy
    2145:2145:void onDestroyView() -> onDestroyView
    2190:2190:void onDetach() -> onDetach
    1623:1623:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1728:1732:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1748:1748:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2130:2130:void onLowMemory() -> onLowMemory
    2112:2112:void onPause() -> onPause
    2036:2036:void onResume() -> onResume
    2024:2024:void onStart() -> onStart
    2123:2123:void onStop() -> onStop
    2013:2013:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2983:2992:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2905:2918:void performAttach() -> performAttach
    3067:3068:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3122:3126:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2922:2945:void performCreate(android.os.Bundle) -> performCreate
    3087:3092:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2950:2970:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3204:3211:void performDestroy() -> performDestroy
    3183:3200:void performDestroyView() -> performDestroyView
    3217:3231:void performDetach() -> performDetach
    1655:1655:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3072:3073:void performLowMemory() -> performLowMemory
    3057:3058:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3110:3116:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3132:3136:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3151:3160:void performPause() -> performPause
    3062:3063:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3099:3104:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3046:3052:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3025:3038:void performResume() -> performResume
    3141:3145:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3007:3020:void performStart() -> performStart
    3167:3176:void performStop() -> performStop
    2977:2978:void performViewCreated() -> performViewCreated
    927:929:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    899:901:android.content.Context requireContext() -> requireContext
    1963:1965:android.view.View requireView() -> requireView
    1888:1892:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    638:653:void restoreViewState(android.os.Bundle) -> restoreViewState
    2996:3002:void restoreViewState() -> restoreViewState
    3333:3333:void setAnimatingAway(android.view.View) -> setAnimatingAway
    3337:3337:void setAnimator(android.animation.Animator) -> setAnimator
    724:727:void setArguments(android.os.Bundle) -> setArguments
    3359:3359:void setFocusedView(android.view.View) -> setFocusedView
    3384:3384:void setHideReplaced(boolean) -> setHideReplaced
    3267:3270:void setNextAnim(int) -> setNextAnim
    3281:3285:void setNextTransition(int) -> setNextTransition
    3236:3248:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    3348:3348:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    3306:3308:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    2732:2746:void startPostponedEnterTransition() -> startPostponedEnterTransition
    678:696:java.lang.String toString() -> toString
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    256:256:void <init>(androidx.fragment.app.Fragment) -> <init>
    259:259:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    2739:2739:void <init>(androidx.fragment.app.Fragment) -> <init>
    2742:2742:void run() -> run
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2778:2778:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2781:2781:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2886:2886:void <init>(androidx.fragment.app.Fragment) -> <init>
    2890:2894:android.view.View onFindViewById(int) -> onFindViewById
    2899:2899:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    2926:2926:void <init>(androidx.fragment.app.Fragment) -> <init>
    2930:2932:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    3510:3543:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    516:516:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
    306:306:void <init>() -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    490:490:void <clinit>() -> <clinit>
    472:475:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    486:486:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    491:491:void <init>() -> <init>
    491:491:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    491:491:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    494:494:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    499:499:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    491:491:java.lang.Object[] newArray(int) -> newArray
    504:504:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    84:104:void <init>() -> <init>
    313:313:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    532:545:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    578:578:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    125:140:void init() -> init
    791:791:void markFragmentsCreated() -> markFragmentsCreated
    797:812:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    163:164:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    259:261:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:272:void onCreate(android.os.Bundle) -> onCreate
    281:285:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    292:294:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    303:305:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    321:323:void onDestroy() -> onDestroy
    331:332:void onLowMemory() -> onLowMemory
    340:349:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    235:235:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    391:392:void onNewIntent(android.content.Intent) -> onNewIntent
    362:364:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    372:375:void onPause() -> onPause
    251:251:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    422:423:void onPostResume() -> onPostResume
    459:459:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    444:448:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    603:604:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    411:414:void onResume() -> onResume
    433:434:void onResumeFragments() -> onResumeFragments
    467:482:void onStart() -> onStart
    401:401:void onStateNotSaved() -> onStateNotSaved
    490:496:void onStop() -> onStop
    515:515:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
    126:126:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    130:135:android.os.Bundle saveState() -> saveState
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.FragmentActivity$2:
    140:140:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    143:149:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    692:693:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    784:784:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    703:703:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    715:715:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    709:709:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    766:766:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    772:772:android.view.View onFindViewById(int) -> onFindViewById
    687:687:java.lang.Object onGetHost() -> onGetHost
    737:737:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    732:732:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    777:778:boolean onHasView() -> onHasView
    726:726:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    742:742:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
    130:193:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback) -> animateRemoveFragment
    46:112:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean) -> loadAnimation
    202:208:int transitToAnimResourceId(int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$1 -> androidx.fragment.app.FragmentAnim$1:
    134:134:void <init>(androidx.fragment.app.Fragment) -> <init>
    137:142:void onCancel() -> onCancel
androidx.fragment.app.FragmentAnim$2 -> androidx.fragment.app.FragmentAnim$2:
    150:150:void <init>(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    160:160:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$2$1 -> androidx.fragment.app.FragmentAnim$2$1:
    160:160:void <init>(androidx.fragment.app.FragmentAnim$2) -> <init>
    163:165:void run() -> run
androidx.fragment.app.FragmentAnim$3 -> androidx.fragment.app.FragmentAnim$3:
    179:179:void <init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    182:188:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
    221:225:void <init>(android.view.animation.Animation) -> <init>
    229:233:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
    249:259:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    264:271:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    279:286:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    293:299:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
    105:178:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    373:377:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    286:291:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    304:309:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    229:234:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    239:246:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    262:269:void endViewTransition(android.view.View) -> endViewTransition
    219:222:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    351:355:void removeAllViewsInLayout() -> removeAllViewsInLayout
    361:363:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    327:328:void removeView(android.view.View) -> removeView
    314:316:void removeViewAt(int) -> removeViewAt
    321:322:void removeViewInLayout(android.view.View) -> removeViewInLayout
    334:337:void removeViews(int,int) -> removeViews
    343:346:void removeViewsInLayout(int,int) -> removeViewsInLayout
    274:274:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    197:205:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    251:257:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:61:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:116:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    251:251:void dispatchActivityCreated() -> dispatchActivityCreated
    367:367:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    429:429:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    240:240:void dispatchCreate() -> dispatchCreate
    391:391:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    334:334:void dispatchDestroy() -> dispatchDestroy
    379:379:void dispatchLowMemory() -> dispatchLowMemory
    345:345:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    416:416:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    440:440:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    284:284:void dispatchPause() -> dispatchPause
    356:356:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    403:403:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    273:273:void dispatchResume() -> dispatchResume
    262:262:void dispatchStart() -> dispatchStart
    295:295:void dispatchStop() -> dispatchStop
    451:451:boolean execPendingActions() -> execPendingActions
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    142:142:void noteStateNotSaved() -> noteStateNotSaved
    134:135:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    193:198:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    152:152:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    70:71:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:54:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    91:91:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    81:99:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    242:242:android.app.Activity getActivity() -> getActivity
    247:247:android.content.Context getContext() -> getContext
    252:252:android.os.Handler getHandler() -> getHandler
    128:128:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
    36:37:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    44:44:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    51:173:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
    158:158:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    161:166:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    46:54:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:163:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:115:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:146:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:280:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:294:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:222:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:100:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:130:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:208:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:251:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:194:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:236:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:179:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:266:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    97:524:void <init>() -> <init>
    97:97:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    97:97:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    97:97:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2476:2485:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2591:2594:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    853:856:void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> addCancellationSignal
    1728:1739:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3523:3523:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    1940:1940:int allocBackStackIndex() -> allocBackStackIndex
    2935:3043:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1810:1817:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    578:578:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    1505:1512:void cancelExitAnimation(androidx.fragment.app.Fragment) -> cancelExitAnimation
    3553:3555:boolean checkForMenus() -> checkForMenus
    1863:1864:void checkStateLoss() -> checkStateLoss
    2007:2009:void cleanupExec() -> cleanupExec
    894:894:void clearFragmentResult(java.lang.String) -> clearFragmentResult
    2530:2536:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    2260:2268:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    2366:2396:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1556:1601:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1714:1723:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1530:1538:void destroyFragmentView(androidx.fragment.app.Fragment) -> destroyFragmentView
    1794:1804:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3175:3178:void dispatchActivityCreated() -> dispatchActivityCreated
    3157:3160:void dispatchAttach() -> dispatchAttach
    3264:3266:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3341:3346:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3164:3167:void dispatchCreate() -> dispatchCreate
    3280:3306:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3210:3226:void dispatchDestroy() -> dispatchDestroy
    3206:3206:void dispatchDestroyView() -> dispatchDestroyView
    3272:3274:void dispatchLowMemory() -> dispatchLowMemory
    3248:3250:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3533:3534:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3327:3332:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3355:3360:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3378:3379:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    3196:3196:void dispatchPause() -> dispatchPause
    3256:3258:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3312:3318:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3384:3386:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    3189:3192:void dispatchResume() -> dispatchResume
    3182:3185:void dispatchStart() -> dispatchStart
    3232:3244:void dispatchStateChange(int) -> dispatchStateChange
    3200:3202:void dispatchStop() -> dispatchStop
    3171:3171:void dispatchViewCreated() -> dispatchViewCreated
    2576:2578:void doPendingDeferredStart() -> doPendingDeferredStart
    1228:1307:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2514:2523:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1896:1916:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> enqueueAction
    1950:1979:void ensureExecReady(boolean) -> ensureExecReady
    2016:2031:boolean execPendingActions(boolean) -> execPendingActions
    1983:1999:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    2414:2424:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2140:2254:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    2042:2068:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1859:1859:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    2689:2726:int findBackStackIndex(java.lang.String,int,boolean) -> findBackStackIndex
    1833:1833:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1850:1850:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1854:1854:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2495:2503:void forcePostponedTransactions() -> forcePostponedTransactions
    2555:2571:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    817:817:int getBackStackEntryCount() -> getBackStackEntryCount
    1120:1120:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2923:2923:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    2448:2463:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3440:3450:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    2928:2928:androidx.fragment.app.FragmentStore getFragmentStore() -> getFragmentStore
    1110:1110:java.util.List getFragments() -> getFragments
    2913:2913:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3593:3593:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3488:3488:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2918:2918:androidx.fragment.app.Fragment getParent() -> getParent
    3403:3403:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3473:3483:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    1033:1035:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1115:1115:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    664:675:void handleOnBackPressed() -> handleOnBackPressed
    1767:1773:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3569:3570:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1189:1189:boolean isDestroyed() -> isDestroyed
    142:142:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3565:3565:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    655:655:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    636:643:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1329:1329:boolean isStateAtLeast(int) -> isStateAtLeast
    1884:1884:boolean isStateSaved() -> isStateSaved
    2285:2291:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1611:1642:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1334:1498:void moveToState(androidx.fragment.app.Fragment,int) -> moveToState
    1542:1542:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1656:1693:void moveToState(int,boolean) -> moveToState
    3084:3092:void noteStateNotSaved() -> noteStateNotSaved
    1042:1048:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    1312:1323:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    758:760:void popBackStack(int,int) -> popBackStack
    712:712:boolean popBackStackImmediate() -> popBackStackImmediate
    784:809:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2661:2667:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2313:2341:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    867:874:void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> removeCancellationSignal
    1746:1756:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    2090:2126:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2583:2585:void reportBackStackChanged() -> reportBackStackChanged
    2816:2908:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    2755:2799:android.os.Parcelable saveAllState() -> saveAllState
    1927:1936:void scheduleCommit() -> scheduleCommit
    1521:1524:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3407:3412:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3366:3374:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2436:2442:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1784:1789:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1699:1700:void startPendingDeferredFragments() -> startPendingDeferredFragments
    1195:1215:java.lang.String toString() -> toString
    612:622:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
    434:434:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    437:437:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
    3019:3019:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    3019:3019:void onActivityResult(java.lang.Object) -> onActivityResult
    3022:3039:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.FragmentManager$11:
    3045:3045:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    3045:3045:void onActivityResult(java.lang.Object) -> onActivityResult
    3049:3073:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
    452:452:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    461:462:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onComplete
    456:456:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onStart
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
    479:479:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    484:484:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
    489:489:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    493:493:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
    524:524:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    527:527:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    911:924:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
    1570:1570:void <init>(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1573:1576:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
    2943:2943:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2948:2948:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
    2991:2991:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2991:2991:void onActivityResult(java.lang.Object) -> onActivityResult
    2994:3012:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
    3797:3797:void <init>() -> <init>
    3797:3797:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3828:3828:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
    3783:3783:void <clinit>() -> <clinit>
    3767:3769:void <init>(android.os.Parcel) -> <init>
    3779:3780:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
    3784:3784:void <init>() -> <init>
    3784:3784:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3787:3787:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3784:3784:java.lang.Object[] newArray(int) -> newArray
    3792:3792:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$PopBackStackState -> androidx.fragment.app.FragmentManager$PopBackStackState:
    3645:3648:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int) -> <init>
    3654:3664:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
    3694:3696:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3753:3753:void cancelTransaction() -> cancelTransaction
    3737:3745:void completeTransaction() -> completeTransaction
    3727:3727:boolean isReady() -> isReady
    3706:3710:void onStartEnterTransition() -> onStartEnterTransition
    3720:3720:void startListening() -> startListening
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    68:68:void <clinit>() -> <clinit>
    32:37:void <init>() -> <init>
    32:48:void <init>(android.os.Parcel) -> <init>
    58:65:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    77:77:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    57:87:void <init>(boolean) -> <init>
    112:123:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:200:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    275:281:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:171:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    178:181:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    286:288:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:104:void onCleared() -> onCleared
    154:162:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    96:96:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    295:322:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:45:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    165:165:void <clinit>() -> <clinit>
    44:56:void <init>(androidx.fragment.app.Fragment) -> <init>
    59:72:void <init>(android.os.Parcel) -> <init>
    81:103:androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> instantiate
    111:140:java.lang.String toString() -> toString
    150:162:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    166:166:void <init>() -> <init>
    166:166:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    169:169:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    166:166:java.lang.Object[] newArray(int) -> newArray
    174:174:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
    50:64:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    50:86:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    50:119:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    553:557:void activityCreated() -> activityCreated
    808:809:void addViewToContainer() -> addViewToContainer
    404:441:void attach() -> attach
    146:227:int computeExpectedState() -> computeExpectedState
    445:456:void create() -> create
    461:549:void createView() -> createView
    730:780:void destroy() -> destroy
    709:726:void destroyFragmentView() -> destroyFragmentView
    785:800:void detach() -> detach
    358:371:void ensureInflatedView() -> ensureInflatedView
    125:125:androidx.fragment.app.Fragment getFragment() -> getFragment
    591:599:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    234:354:void moveToExpectedState() -> moveToExpectedState
    605:609:void pause() -> pause
    377:399:void restoreState(java.lang.ClassLoader) -> restoreState
    570:587:void resume() -> resume
    657:686:android.os.Bundle saveBasicState() -> saveBasicState
    622:642:androidx.fragment.app.FragmentState saveState() -> saveState
    693:704:void saveViewState() -> saveViewState
    135:135:void setFragmentManagerState(int) -> setFragmentManagerState
    562:566:void start() -> start
    613:617:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
    510:510:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    513:514:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
    153:153:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
    34:38:void <init>() -> <init>
    90:96:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    164:167:void burpActive() -> burpActive
    292:292:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    100:102:void dispatchStateChange(int) -> dispatchStateChange
    372:398:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    315:317:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    248:258:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    270:282:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    302:305:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    340:362:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    208:211:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    230:235:java.util.List getActiveFragments() -> getActiveFragments
    297:297:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    220:225:java.util.List getFragments() -> getFragments
    47:47:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    71:85:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    139:154:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    109:125:void moveToExpectedState() -> moveToExpectedState
    132:135:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    51:51:void resetActiveFragments() -> resetActiveFragments
    55:65:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    172:181:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    190:203:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    43:43:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    114:114:void <clinit>() -> <clinit>
    96:97:void <init>(android.os.Parcel) -> <init>
    109:110:java.lang.String toString() -> toString
    102:103:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    105:139:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    245:245:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    251:252:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    143:147:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    693:697:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    256:287:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    368:368:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    304:304:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    352:354:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    793:793:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    74:74:void <init>() -> <init>
    77:82:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    85:90:void <init>(int,androidx.fragment.app.Fragment,boolean) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    48:81:void <clinit>() -> <clinit>
    695:698:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1173:1259:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1125:1128:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    187:212:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1142:1148:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    1030:1031:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    518:519:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    889:931:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    831:866:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    472:512:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1054:1064:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    738:783:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    609:671:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    354:414:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsOrdered
    237:294:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsReordered
    1272:1273:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    557:559:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    570:572:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    962:969:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    543:546:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1092:1108:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    307:328:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    86:88:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    1007:1010:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    441:441:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    986:995:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1077:1079:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    127:161:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    275:275:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    278:278:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    328:328:void <init>(java.util.ArrayList) -> <init>
    331:331:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    396:396:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    399:399:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    441:441:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    444:460:void run() -> run
androidx.fragment.app.FragmentTransition$5 -> androidx.fragment.app.FragmentTransition$5:
    671:671:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    674:677:void run() -> run
androidx.fragment.app.FragmentTransition$6 -> androidx.fragment.app.FragmentTransition$6:
    783:783:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    786:804:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1282:1282:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    34:34:void <init>() -> <init>
    332:333:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:111:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:216:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    45:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    189:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    340:341:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    305:323:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:146:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:225:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    79:83:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    348:349:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:271:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:73:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:298:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    55:56:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:165:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    155:156:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    241:241:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    228:235:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    277:277:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    45:45:void <init>() -> <init>
    358:371:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    219:232:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    384:384:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    403:405:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    242:252:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    82:107:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    395:395:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    160:165:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    339:339:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    302:302:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    263:263:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    179:199:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    199:199:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    202:204:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    263:263:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    266:272:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    339:339:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    342:347:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    29:31:void <init>() -> <init>
    53:54:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    68:68:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    62:62:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    37:39:void initialize() -> initialize
    47:47:boolean isInitialized() -> isInitialized
    72:72:void performRestore(android.os.Bundle) -> performRestore
    76:76:void performSave(android.os.Bundle) -> performSave
    58:58:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
    25:31:void <init>(java.lang.String) -> <init>
    35:35:void close() -> close
    39:39:void flush() -> flush
    55:57:void flushBuilder() -> flushBuilder
    44:49:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
    84:93:void <init>(android.view.ViewGroup) -> <init>
    190:221:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    152:157:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    170:175:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    179:184:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    161:166:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    257:297:void executePendingOperations() -> executePendingOperations
    132:133:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    142:143:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    301:331:void forceCompleteAllOperations() -> forceCompleteAllOperations
    250:252:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    118:125:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    55:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:78:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    229:246:void markPostponedState() -> markPostponedState
    335:341:void updateFinalState() -> updateFinalState
    225:225:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
    204:204:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    207:208:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
    214:214:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    217:218:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
    441:604:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
    705:707:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    741:742:void complete() -> complete
    712:735:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
    502:524:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    642:642:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    589:598:void cancel() -> cancel
    683:692:void complete() -> complete
    668:669:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    539:539:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    558:558:androidx.fragment.app.Fragment getFragment() -> getFragment
    549:549:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    562:562:boolean isCanceled() -> isCanceled
    674:674:boolean isComplete() -> isComplete
    656:657:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    604:636:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    568:585:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
    524:524:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    527:527:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
    481:493:void <clinit>() -> <clinit>
    481:481:void <init>(java.lang.String,int) -> <init>
    481:481:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    481:481:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
    382:398:void <clinit>() -> <clinit>
    382:382:void <init>(java.lang.String,int) -> <init>
    441:472:void applyState(android.view.View) -> applyState
    409:412:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    425:431:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    382:382:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    382:382:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:23:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    36:67:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    71:71:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    36:67:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    71:71:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    36:67:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    71:71:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    38:46:float interpolate(float[],float,float) -> interpolate
androidx.legacy.app.FragmentTabHost$SavedState -> androidx.legacy.app.FragmentTabHost$SavedState:
    110:110:void <clinit>() -> <clinit>
    93:94:void <init>(android.os.Parcel) -> <init>
    105:106:java.lang.String toString() -> toString
    99:100:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.legacy.app.FragmentTabHost$SavedState$1 -> androidx.legacy.app.FragmentTabHost$SavedState$1:
    111:111:void <init>() -> <init>
    111:111:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    114:114:androidx.legacy.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    111:111:java.lang.Object[] newArray(int) -> newArray
    119:119:androidx.legacy.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    105:160:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    81:85:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:64:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    91:100:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    169:179:void <init>(java.util.Map) -> <init>
    185:186:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    193:194:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    205:208:void <init>(int,java.lang.reflect.Method) -> <init>
    237:242:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
    214:228:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    26:27:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    32:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    27:29:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    34:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    79:86:void <init>() -> <init>
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.Lifecycle$1:
    169:258:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    128:157:void <clinit>() -> <clinit>
    129:129:void <init>(java.lang.String,int) -> <init>
    169:175:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    258:272:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
    213:219:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    128:128:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    128:128:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    280:320:void <clinit>() -> <clinit>
    281:281:void <init>(java.lang.String,int) -> <init>
    329:329:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    280:280:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    280:280:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    91:91:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    51:97:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    172:206:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    272:285:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    162:167:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    335:335:androidx.lifecycle.LifecycleRegistry createUnsafe(androidx.lifecycle.LifecycleOwner) -> createUnsafe
    315:317:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    253:266:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    249:249:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    133:134:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    153:158:boolean isSynced() -> isSynced
    109:110:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    339:339:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    138:149:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    210:210:void popParentState() -> popParentState
    214:214:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    219:232:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    120:121:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    293:310:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    346:348:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    352:355:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    105:111:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    119:138:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    207:207:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    143:148:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    200:200:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    68:98:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    154:192:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    61:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    60:112:void <init>() -> <init>
    486:487:void assertMainThread(java.lang.String) -> assertMainThread
    378:397:void changeActiveCounter(int) -> changeActiveCounter
    117:133:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:158:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    224:234:void observeForever(androidx.lifecycle.Observer) -> observeForever
    244:250:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    306:309:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:93:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
    475:476:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    437:437:void detachObserver() -> detachObserver
    417:426:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    411:411:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    444:447:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    460:468:void activeStateChanged(boolean) -> activeStateChanged
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    40:40:void <init>() -> <init>
    50:50:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    30:32:void <init>(java.lang.Object) -> <init>
    37:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    37:37:void <init>() -> <init>
    60:68:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch
    140:144:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    82:82:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    94:94:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    88:88:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    42:54:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    100:102:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    133:136:void onDestroy() -> onDestroy
    121:122:void onPause() -> onPause
    114:116:void onResume() -> onResume
    107:109:void onStart() -> onStart
    127:128:void onStop() -> onStop
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
    164:164:void <init>() -> <init>
    178:178:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    196:196:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    187:187:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    224:224:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    201:201:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    210:210:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    167:167:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    98:102:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    45:50:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    41:41:boolean isAttached() -> isAttached
    55:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    107:111:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
    111:111:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    115:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$OnRecreation:
    75:75:void <init>() -> <init>
    79:91:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    25:26:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    31:32:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    107:111:void <init>() -> <init>
    125:138:void clear() -> clear
    186:190:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    177:182:java.lang.Object getTag(java.lang.String) -> getTag
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    125:127:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    146:150:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    171:189:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    65:65:void <init>() -> <init>
    81:81:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
    54:54:void <init>() -> <init>
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:64:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:45:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
    49:49:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
    50:50:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    43:43:void <init>() -> <init>
    131:131:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    381:383:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    518:518:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    44:44:boolean isLoggingEnabled(int) -> isLoggingEnabled
    496:496:void markForRedelivery() -> markForRedelivery
    502:511:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    152:154:androidx.loader.content.Loader destroy(boolean) -> destroy
    220:223:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    79:80:void onActive() -> onActive
    85:86:void onInactive() -> onInactive
    137:139:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    192:192:void setValue(java.lang.Object) -> setValue
    203:209:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    290:290:void <clinit>() -> <clinit>
    289:305:void <init>() -> <init>
    364:371:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    301:301:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    344:347:void markForRedelivery() -> markForRedelivery
    353:359:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    290:290:void <init>() -> <init>
    295:295:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.localbroadcastmanager.content.LocalBroadcastManager -> androidx.localbroadcastmanager.content.LocalBroadcastManager:
    106:106:void <clinit>() -> <clinit>
    96:121:void <init>(android.content.Context) -> <init>
    304:319:void executePendingBroadcasts() -> executePendingBroadcasts
    111:116:androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    146:163:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    219:285:boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    176:201:void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
androidx.localbroadcastmanager.content.LocalBroadcastManager$1 -> androidx.localbroadcastmanager.content.LocalBroadcastManager$1:
    121:121:void <init>(androidx.localbroadcastmanager.content.LocalBroadcastManager,android.os.Looper) -> <init>
    125:130:void handleMessage(android.os.Message) -> handleMessage
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord:
    85:87:void <init>(android.content.Intent,java.util.ArrayList) -> <init>
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord:
    61:63:void <init>(android.content.IntentFilter,android.content.BroadcastReceiver) -> <init>
    68:77:java.lang.String toString() -> toString
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    173:185:void <clinit>() -> <clinit>
    250:250:void <init>() -> <init>
    253:254:void <init>(androidx.media.AudioAttributesImpl) -> <init>
    619:626:boolean equals(java.lang.Object) -> equals
    493:493:int hashCode() -> hashCode
    498:498:java.lang.String toString() -> toString
    609:609:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    536:536:java.lang.String usageToString(int) -> usageToString
    305:311:androidx.media.AudioAttributesCompat wrap(java.lang.Object) -> wrap
androidx.media.AudioAttributesCompat$Builder -> androidx.media.AudioAttributesCompat$Builder:
    373:381:void <init>() -> <init>
    409:409:androidx.media.AudioAttributesCompat build() -> build
    486:486:androidx.media.AudioAttributesCompat$Builder setLegacyStreamType(int) -> setLegacyStreamType
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    11:11:void <init>() -> <init>
    14:15:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    21:22:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21 -> androidx.media.AudioAttributesImplApi21:
    46:56:void <init>() -> <init>
    60:60:void <init>(android.media.AudioAttributes) -> <init>
    46:65:void <init>(android.media.AudioAttributes,int) -> <init>
    116:120:boolean equals(java.lang.Object) -> equals
    111:111:int hashCode() -> hashCode
    126:126:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21$Builder -> androidx.media.AudioAttributesImplApi21$Builder:
    132:133:void <init>() -> <init>
    143:143:androidx.media.AudioAttributesImpl build() -> build
    129:129:androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int) -> setLegacyStreamType
    174:174:androidx.media.AudioAttributesImplApi21$Builder setLegacyStreamType(int) -> setLegacyStreamType
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    11:11:void <init>() -> <init>
    14:16:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:24:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi26 -> androidx.media.AudioAttributesImplApi26:
    41:41:void <init>() -> <init>
    45:45:void <init>(android.media.AudioAttributes) -> <init>
androidx.media.AudioAttributesImplApi26$Builder -> androidx.media.AudioAttributesImplApi26$Builder:
    55:55:void <init>() -> <init>
    65:65:androidx.media.AudioAttributesImpl build() -> build
androidx.media.AudioAttributesImplApi26Parcelizer -> androidx.media.AudioAttributesImplApi26Parcelizer:
    11:11:void <init>() -> <init>
    14:16:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:24:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> androidx.media.AudioAttributesImplBase:
    63:91:void <init>() -> <init>
    63:97:void <init>(int,int,int,int) -> <init>
    156:162:boolean equals(java.lang.Object) -> equals
    126:126:int getContentType() -> getContentType
    136:137:int getFlags() -> getFlags
    113:116:int getLegacyStreamType() -> getLegacyStreamType
    131:131:int getUsage() -> getUsage
    151:151:int hashCode() -> hashCode
    169:180:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplBase$Builder -> androidx.media.AudioAttributesImplBase$Builder:
    184:189:void <init>() -> <init>
    202:202:androidx.media.AudioAttributesImpl build() -> build
    277:313:androidx.media.AudioAttributesImplBase$Builder setInternalLegacyStreamType(int) -> setInternalLegacyStreamType
    183:183:androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int) -> setLegacyStreamType
    266:271:androidx.media.AudioAttributesImplBase$Builder setLegacyStreamType(int) -> setLegacyStreamType
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    11:11:void <init>() -> <init>
    14:18:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    24:28:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.palette.graphics.ColorCutQuantizer -> androidx.palette.graphics.ColorCutQuantizer:
    419:419:void <clinit>() -> <clinit>
    57:108:void <init>(int[],int,androidx.palette.graphics.Palette$Filter[]) -> <init>
    440:442:int approximateToRgb888(int,int,int) -> approximateToRgb888
    446:446:int approximateToRgb888(int) -> approximateToRgb888
    161:167:java.util.List generateAverageColors(java.util.Collection) -> generateAverageColors
    116:116:java.util.List getQuantizedColors() -> getQuantizedColors
    377:389:void modifySignificantOctet(int[],int,int,int) -> modifySignificantOctet
    430:432:int quantizeFromRgb888(int) -> quantizeFromRgb888
    122:132:java.util.List quantizePixels(int) -> quantizePixels
    396:398:boolean shouldIgnoreColor(int) -> shouldIgnoreColor
    402:402:boolean shouldIgnoreColor(androidx.palette.graphics.Palette$Swatch) -> shouldIgnoreColor
    406:408:boolean shouldIgnoreColor(int,float[]) -> shouldIgnoreColor
    145:152:void splitBoxes(java.util.PriorityQueue,int) -> splitBoxes
androidx.palette.graphics.ColorCutQuantizer$1 -> androidx.palette.graphics.ColorCutQuantizer$1:
    419:419:void <init>() -> <init>
    419:419:int compare(java.lang.Object,java.lang.Object) -> compare
    422:422:int compare(androidx.palette.graphics.ColorCutQuantizer$Vbox,androidx.palette.graphics.ColorCutQuantizer$Vbox) -> compare
androidx.palette.graphics.ColorCutQuantizer$Vbox -> androidx.palette.graphics.ColorCutQuantizer$Vbox:
    187:190:void <init>(androidx.palette.graphics.ColorCutQuantizer,int,int) -> <init>
    199:199:boolean canSplit() -> canSplit
    305:330:int findSplitPoint() -> findSplitPoint
    210:253:void fitBox() -> fitBox
    337:358:androidx.palette.graphics.Palette$Swatch getAverageColor() -> getAverageColor
    203:203:int getColorCount() -> getColorCount
    282:284:int getLongestColorDimension() -> getLongestColorDimension
    194:194:int getVolume() -> getVolume
    262:273:androidx.palette.graphics.ColorCutQuantizer$Vbox splitBox() -> splitBox
androidx.palette.graphics.Palette -> androidx.palette.graphics.Palette:
    938:938:void <clinit>() -> <clinit>
    160:167:void <init>(java.util.List,java.util.List) -> <init>
    432:436:androidx.palette.graphics.Palette$Swatch findDominantSwatch() -> findDominantSwatch
    101:101:androidx.palette.graphics.Palette$Builder from(android.graphics.Bitmap) -> from
    129:129:androidx.palette.graphics.Palette generate(android.graphics.Bitmap,int) -> generate
    358:364:void generate() -> generate
    404:422:float generateScore(androidx.palette.graphics.Palette$Swatch,androidx.palette.graphics.Target) -> generateScore
    369:372:androidx.palette.graphics.Palette$Swatch generateScoredTarget(androidx.palette.graphics.Target) -> generateScoredTarget
    381:384:androidx.palette.graphics.Palette$Swatch getMaxScoredSwatchForTarget(androidx.palette.graphics.Target) -> getMaxScoredSwatchForTarget
    318:318:androidx.palette.graphics.Palette$Swatch getSwatchForTarget(androidx.palette.graphics.Target) -> getSwatchForTarget
    193:193:androidx.palette.graphics.Palette$Swatch getVibrantSwatch() -> getVibrantSwatch
    397:400:boolean shouldBeScoredForTarget(androidx.palette.graphics.Palette$Swatch,androidx.palette.graphics.Target) -> shouldBeScoredForTarget
androidx.palette.graphics.Palette$1 -> androidx.palette.graphics.Palette$1:
    938:938:void <init>() -> <init>
    944:944:boolean isAllowed(int,float[]) -> isAllowed
    951:951:boolean isBlack(float[]) -> isBlack
    965:965:boolean isNearRedILine(float[]) -> isNearRedILine
    958:958:boolean isWhite(float[]) -> isWhite
androidx.palette.graphics.Palette$Builder -> androidx.palette.graphics.Palette$Builder:
    596:622:void <init>(android.graphics.Bitmap) -> <init>
    781:823:androidx.palette.graphics.Palette generate() -> generate
    863:880:int[] getPixelsFromBitmap(android.graphics.Bitmap) -> getPixelsFromBitmap
    648:648:androidx.palette.graphics.Palette$Builder maximumColorCount(int) -> maximumColorCount
    893:912:android.graphics.Bitmap scaleBitmapDown(android.graphics.Bitmap) -> scaleBitmapDown
androidx.palette.graphics.Palette$Swatch -> androidx.palette.graphics.Palette$Swatch:
    457:462:void <init>(int,int) -> <init>
    516:552:void ensureTextColorsGenerated() -> ensureTextColorsGenerated
    575:580:boolean equals(java.lang.Object) -> equals
    511:512:int getBodyTextColor() -> getBodyTextColor
    481:485:float[] getHsl() -> getHsl
    492:492:int getPopulation() -> getPopulation
    470:470:int getRgb() -> getRgb
    501:502:int getTitleTextColor() -> getTitleTextColor
    585:585:int hashCode() -> hashCode
    559:566:java.lang.String toString() -> toString
androidx.palette.graphics.Target -> androidx.palette.graphics.Target:
    90:112:void <clinit>() -> <clinit>
    115:123:void <init>() -> <init>
    205:205:float getLightnessWeight() -> getLightnessWeight
    179:179:float getMaximumLightness() -> getMaximumLightness
    155:155:float getMaximumSaturation() -> getMaximumSaturation
    163:163:float getMinimumLightness() -> getMinimumLightness
    139:139:float getMinimumSaturation() -> getMinimumSaturation
    216:216:float getPopulationWeight() -> getPopulationWeight
    192:192:float getSaturationWeight() -> getSaturationWeight
    171:171:float getTargetLightness() -> getTargetLightness
    147:147:float getTargetSaturation() -> getTargetSaturation
    225:225:boolean isExclusive() -> isExclusive
    242:251:void normalizeWeights() -> normalizeWeights
    258:259:void setDefaultDarkLightnessValues(androidx.palette.graphics.Target) -> setDefaultDarkLightnessValues
    269:270:void setDefaultLightLightnessValues(androidx.palette.graphics.Target) -> setDefaultLightLightnessValues
    279:280:void setDefaultMutedSaturationValues(androidx.palette.graphics.Target) -> setDefaultMutedSaturationValues
    263:265:void setDefaultNormalLightnessValues(androidx.palette.graphics.Target) -> setDefaultNormalLightnessValues
    274:275:void setDefaultVibrantSaturationValues(androidx.palette.graphics.Target) -> setDefaultVibrantSaturationValues
    235:237:void setDefaultWeights() -> setDefaultWeights
    229:231:void setTargetDefaultValues(float[]) -> setTargetDefaultValues
androidx.recyclerview.R$styleable -> androidx.recyclerview.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:72:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:78:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:432:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:130:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:613:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:183:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:223:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:422:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:124:void consumePostponedUpdates() -> consumePostponedUpdates
    557:584:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:302:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:324:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:493:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:734:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    439:455:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:115:void preProcess() -> preProcess
    741:743:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:752:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:89:void reset() -> reset
    330:404:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:655:void <init>(int,int,int,java.lang.Object) -> <init>
    659:659:java.lang.String cmdToString() -> cmdToString
    684:709:boolean equals(java.lang.Object) -> equals
    718:720:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:51:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:85:void addView(android.view.View,boolean) -> addView
    99:107:void addView(android.view.View,int,boolean) -> addView
    231:239:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:284:void detachViewFromParent(int) -> detachViewFromParent
    206:212:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    117:123:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:336:void hide(android.view.View) -> hide
    60:61:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:193:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:147:void removeView(android.view.View) -> removeView
    160:168:void removeViewAt(int) -> removeViewAt
    373:386:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:358:void unhide(android.view.View) -> unhide
    70:71:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    422:426:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:416:void ensureNext() -> ensureNext
    433:436:boolean get(int) -> get
    449:464:void insert(int,boolean) -> insert
    471:486:boolean remove(int) -> remove
    441:443:void reset() -> reset
    407:410:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:55:void <init>() -> <init>
    222:224:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:251:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    324:343:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:395:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:273:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:315:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:194:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:217:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:642:void cancelAll(java.util.List) -> cancelAll
    550:551:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:518:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:637:void endAnimations() -> endAnimations
    400:404:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:415:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    420:431:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:526:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:186:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:129:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:152:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:175:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:215:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:206:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:241:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:249:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:236:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:304:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:313:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:295:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:372:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:361:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:393:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:383:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:75:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:84:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:66:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:160:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:172:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:258:void cancelHide() -> cancelHide
    183:186:void destroyCallbacks() -> destroyCallbacks
    316:328:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:311:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:543:int[] getHorizontalRange() -> getHorizontalRange
    516:516:android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> getHorizontalThumbDrawable
    511:511:android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> getHorizontalTrackDrawable
    533:534:int[] getVerticalRange() -> getVerticalRange
    526:526:android.graphics.drawable.Drawable getVerticalThumbDrawable() -> getVerticalThumbDrawable
    521:521:android.graphics.drawable.Drawable getVerticalTrackDrawable() -> getVerticalTrackDrawable
    244:252:void hide(int) -> hide
    461:474:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    224:224:boolean isVisible() -> isVisible
    268:285:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:394:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    409:437:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:191:void requestRedraw() -> requestRedraw
    262:263:void resetHideDelay(int) -> resetHideDelay
    479:479:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:212:void setState(int) -> setState
    177:179:void setupCallbacks() -> setupCallbacks
    228:237:void show() -> show
    339:373:void updateScrollPosition(int,int) -> updateScrollPosition
    446:457:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:126:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:134:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    549:551:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:572:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:566:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    577:577:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:585:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:163:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:261:void buildTaskList() -> buildTaskList
    344:351:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:362:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:270:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:187:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:368:void prefetch(long) -> prefetch
    316:339:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:306:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:167:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:405:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:208:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    65:65:void <init>() -> <init>
    113:135:void addPosition(int,int) -> addPosition
    152:155:void clearPrefetchPositions() -> clearPrefetchPositions
    79:105:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:142:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:75:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    38:38:void <init>() -> <init>
    46:50:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    44:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    44:99:void <init>(android.content.Context,int,int,boolean) -> <init>
    796:799:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    189:194:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    314:314:void calculateItemBorders(int) -> calculateItemBorders
    325:342:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    184:185:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    527:534:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1223:1226:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1205:1208:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1314:1352:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1281:1305:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1232:1235:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1214:1217:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    393:414:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    368:369:void ensureViewSet() -> ensureViewSet
    423:453:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    348:352:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    811:811:int getSpanCount() -> getSpanCount
    467:479:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    483:500:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    504:521:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    760:762:void guessMeasurement(float,int) -> guessMeasurement
    542:713:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    726:746:void measureChild(android.view.View,int,boolean) -> measureChild
    767:775:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    359:364:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1078:1191:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    147:161:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:201:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:207:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:226:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:213:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:220:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    167:174:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    179:180:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    290:307:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    824:834:void setSpanCount(int) -> setSpanCount
    109:113:void setStackFromEnd(boolean) -> setStackFromEnd
    1200:1200:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    280:285:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1358:1358:void <init>() -> <init>
    1367:1367:int getSpanIndex(int,int) -> getSpanIndex
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1385:1390:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1394:void <init>(int,int) -> <init>
    1385:1398:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1385:1402:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1424:1424:int getSpanIndex() -> getSpanIndex
    1434:1434:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    844:850:void <init>() -> <init>
    1008:1023:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    940:948:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    927:935:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1042:1057:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    905:905:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    897:897:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation:
    2477:2477:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2469:2472:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2442:2442:void setFraction(float) -> setFraction
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:99:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    67:171:void <init>(android.content.Context,int,boolean) -> <init>
    67:187:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1413:1414:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    491:499:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    298:298:boolean canScrollHorizontally() -> canScrollHorizontally
    306:306:boolean canScrollVertically() -> canScrollVertically
    1372:1382:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1294:1314:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1283:1285:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1151:1151:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1141:1141:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1161:1161:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1181:1187:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1170:1176:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1192:1198:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    513:521:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1156:1156:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1146:1146:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1166:1166:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1722:1747:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1059:1059:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1048:1049:void ensureLayoutState() -> ensureLayoutState
    1576:1626:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1924:1924:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1805:1809:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1787:1791:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1950:1951:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1928:1928:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    1990:1991:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2039:2061:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    2017:2034:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1912:1913:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1919:1920:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1837:1864:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    410:423:android.view.View findViewByPosition(int) -> findViewByPosition
    969:982:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    994:1007:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1775:1775:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1765:1765:android.view.View getChildClosestToStart() -> getChildClosestToStart
    450:451:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    333:333:int getOrientation() -> getOrientation
    1044:1044:boolean isLayoutRTL() -> isLayoutRTL
    1229:1229:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1631:1699:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    759:805:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    234:237:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2068:2102:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    243:246:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    540:720:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    728:732:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    279:284:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    252:272:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1550:1558:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1433:1437:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1506:1531:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1466:1483:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1277:1278:boolean resolveIsInfinite() -> resolveIsInfinite
    365:368:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1386:1407:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1121:1124:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1078:1083:void scrollToPosition(int) -> scrollToPosition
    1133:1136:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    344:354:void setOrientation(int) -> setOrientation
    397:402:void setReverseLayout(boolean) -> setReverseLayout
    313:318:void setStackFromEnd(boolean) -> setStackFromEnd
    1704:1706:boolean shouldMeasureTwice() -> shouldMeasureTwice
    505:508:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2177:2177:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    838:870:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    883:958:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    810:827:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1235:1273:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1015:1015:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1019:1025:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1029:1029:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1033:1039:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2482:2483:void <init>() -> <init>
    2498:2500:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2567:2574:void assignFromView(android.view.View,int) -> assignFromView
    2520:2560:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2514:2516:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2487:2490:void reset() -> reset
    2505:2505:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2578:2578:void <init>() -> <init>
    2585:2588:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2220:2306:void <init>() -> <init>
    2360:2360:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2364:2369:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2317:2317:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2327:2331:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2343:2352:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2374:2387:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2458:2458:void <clinit>() -> <clinit>
    2422:2422:void <init>() -> <init>
    2426:2429:void <init>(android.os.Parcel) -> <init>
    2432:2435:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2439:2439:boolean hasValidAnchor() -> hasValidAnchor
    2443:2443:void invalidateAnchor() -> invalidateAnchor
    2453:2455:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2459:2459:void <init>() -> <init>
    2459:2459:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2462:2462:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2459:2459:java.lang.Object[] newArray(int) -> newArray
    2467:2467:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    79:94:void <init>(android.content.Context) -> <init>
    296:296:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    339:349:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    314:324:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    191:191:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    205:205:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    218:218:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    170:174:float getSpeedPerPixel() -> getSpeedPerPixel
    232:232:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:141:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    151:152:void onStop() -> onStop
    110:115:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    244:260:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:26:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    214:216:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:34:void reorderOps(java.util.List) -> reorderOps
    157:171:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:49:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    61:149:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    179:208:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:47:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    243:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:64:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    298:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    282:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    290:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    305:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:271:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    396:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    380:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    388:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    403:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:369:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
    38:38:void <init>() -> <init>
    52:61:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    171:174:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    200:202:int distanceToCenter(android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    218:231:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    71:74:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    82:137:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    264:267:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    244:247:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getOrientationHelper
    255:258:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    147:147:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> isForwardFling
    155:161:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> isReverseLayout
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
    174:174:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    189:189:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    194:194:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    177:183:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    221:617:void <clinit>() -> <clinit>
    684:684:void <init>(android.content.Context) -> <init>
    688:688:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    368:760:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2816:2840:void absorbGlows(int,int) -> absorbGlows
    212:212:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    212:212:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    212:212:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    212:212:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1503:1512:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    3156:3157:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1640:1653:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1669:1669:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    3292:3292:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1777:1780:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4651:4653:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4669:4685:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4659:4662:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3261:3274:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4962:4963:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3701:3702:void cancelScroll() -> cancelScroll
    4788:4788:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    6158:6172:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4842:4849:void clearOldPositions() -> clearOldPositions
    2232:2235:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    2207:2210:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2255:2258:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2304:2307:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2280:2283:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2327:2330:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2793:2810:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    2006:2039:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    820:864:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3869:3876:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4615:4616:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7989:7997:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7974:7982:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3938:3944:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    4100:4145:void dispatchLayout() -> dispatchLayout
    4317:4401:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4409:4431:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4439:4522:void dispatchLayoutStep3() -> dispatchLayoutStep3
    12085:12085:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    12090:12090:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    12073:12073:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    12079:12079:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    12053:12053:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    12067:12067:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5484:5498:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5442:5464:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11964:11977:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    4004:4004:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1490:1490:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1482:1482:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3332:3341:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4717:4772:void draw(android.graphics.Canvas) -> draw
    5318:5318:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2885:2893:void ensureBottomGlow() -> ensureBottomGlow
    2845:2853:void ensureLeftGlow() -> ensureLeftGlow
    2858:2866:void ensureRightGlow() -> ensureRightGlow
    2871:2879:void ensureTopGlow() -> ensureTopGlow
    768:771:java.lang.String exceptionLabel() -> exceptionLabel
    4299:4305:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    5077:5080:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    5094:5095:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3361:3366:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4589:4611:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    6136:6146:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    4186:4206:android.view.View findNextViewToFocus() -> findNextViewToFocus
    5212:5222:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    5274:5282:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    5234:5246:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2648:2691:boolean fling(int,int) -> fling
    2960:3034:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4793:4796:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4801:4804:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4809:4812:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1264:1264:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11981:11986:int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionInRecyclerView
    1319:1322:int getBaseline() -> getBaseline
    4646:4646:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    13999:14002:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    5137:5138:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    5056:5061:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    5103:5103:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1135:1135:boolean getClipToPadding() -> getClipToPadding
    5384:5389:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4287:4292:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    872:878:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    5393:5413:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1547:1547:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2723:2723:int getMinFlingVelocity() -> getMinFlingVelocity
    6183:6184:long getNanoTime() -> getNanoTime
    1441:1441:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    1607:1607:int getScrollState() -> getScrollState
    14028:14031:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4543:4569:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    12042:12042:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    5517:5518:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    2047:2053:boolean hasUpdatedView() -> hasUpdatedView
    1005:1005:void initAdapterManager() -> initAdapterManager
    782:783:void initAutofill() -> initAutofill
    882:882:void initChildrenHelper() -> initChildrenHelper
    11995:12005:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2898:2898:void invalidateGlows() -> invalidateGlows
    3934:3934:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    3232:3232:boolean isAttachedToWindow() -> isAttachedToWindow
    3968:3968:boolean isComputingLayout() -> isComputingLayout
    2450:2450:boolean isLayoutSuppressed() -> isLayoutSuppressed
    12017:12017:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    3050:3100:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1827:1835:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4707:4712:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4991:4999:void markKnownViewsInvalid() -> markKnownViewsInvalid
    1911:1954:void nestedScrollByInternal(int,int,android.view.MotionEvent,int) -> nestedScrollByInternal
    5366:5368:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5328:5330:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4887:4900:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4853:4883:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4906:4930:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    3173:3201:void onAttachedToWindow() -> onAttachedToWindow
    3207:3223:void onDetachedFromWindow() -> onDetachedFromWindow
    4778:4782:void onDraw(android.graphics.Canvas) -> onDraw
    3911:3911:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3915:3915:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3919:3928:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3718:3759:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3375:3482:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4691:4694:void onLayout(boolean,int,int,int,int) -> onLayout
    3768:3858:void onMeasure(int,int) -> onMeasure
    3706:3712:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    3163:3168:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1460:1474:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1446:1452:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    3881:3883:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3529:3687:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    4027:4029:void postAnimationRunner() -> postAnimationRunner
    4034:4034:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    4044:4071:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4981:4983:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2742:2764:void pullGlows(float,float,float,float) -> pullGlows
    4579:4585:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    4213:4282:void recoverFocusFromState() -> recoverFocusFromState
    2770:2787:void releaseGlows() -> releaseGlows
    2133:2148:int releaseHorizontalGlow(int,float) -> releaseHorizontalGlow
    2166:2182:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    1208:1220:void removeAndRecycleViews() -> removeAndRecycleViews
    1524:1535:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4622:4638:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1722:1731:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    3301:3303:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1789:1790:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5792:5803:void repositionShadowingViews() -> repositionShadowingViews
    3105:3108:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    3123:3145:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    3151:3151:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3519:3524:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4699:4702:void requestLayout() -> requestLayout
    4170:4172:void resetFocusInfo() -> resetFocusInfo
    3693:3697:void resetScroll() -> resetScroll
    4150:4165:void saveFocusInfo() -> saveFocusInfo
    4828:4836:void saveOldPositions() -> saveOldPositions
    1873:1884:void scrollBy(int,int) -> scrollBy
    2077:2115:boolean scrollByInternal(int,int,android.view.MotionEvent,int) -> scrollByInternal
    1970:1993:void scrollStep(int,int,int[]) -> scrollStep
    1867:1867:void scrollTo(int,int) -> scrollTo
    1813:1823:void scrollToPosition(int) -> scrollToPosition
    3996:3999:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    805:806:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1197:1200:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1235:1253:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    11954:11959:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1112:1118:void setClipToPadding(boolean) -> setClipToPadding
    1099:1099:void setHasFixedSize(boolean) -> setHasFixedSize
    2478:2478:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1381:1419:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2496:2519:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    12012:12012:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1431:1431:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1611:1622:void setScrollState(int) -> setScrollState
    3980:3988:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2532:2532:void smoothScrollBy(int,int) -> smoothScrollBy
    2544:2544:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2563:2563:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2601:2630:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1854:1862:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2345:2347:void startInterceptRequestLayout() -> startInterceptRequestLayout
    12022:12022:boolean startNestedScroll(int) -> startNestedScroll
    12027:12027:boolean startNestedScroll(int,int) -> startNestedScroll
    3498:3511:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    2362:2392:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    12032:12032:void stopNestedScroll() -> stopNestedScroll
    12037:12037:void stopNestedScroll(int) -> stopNestedScroll
    2703:2704:void stopScroll() -> stopScroll
    2711:2713:void stopScrollersInternal() -> stopScrollersInternal
    2422:2437:void suppressLayout(boolean) -> suppressLayout
    4940:4958:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    401:401:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    404:417:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    599:599:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    602:605:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    609:609:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    646:646:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    657:657:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    650:651:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    663:673:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    679:679:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    882:882:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    893:897:void addView(android.view.View,int) -> addView
    953:964:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    969:983:void detachViewFromParent(int) -> detachViewFromParent
    927:927:android.view.View getChildAt(int) -> getChildAt
    885:885:int getChildCount() -> getChildCount
    947:947:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    902:902:int indexOfChild(android.view.View) -> indexOfChild
    988:990:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    996:998:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    932:942:void removeAllViews() -> removeAllViews
    907:919:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    1005:1005:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1050:1062:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    1008:1014:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1040:1041:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1074:1075:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1080:1082:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    1025:1027:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    1033:1034:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1046:1046:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1069:1069:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$7 -> androidx.recyclerview.widget.RecyclerView$7:
    7938:7938:void <clinit>() -> <clinit>
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    7298:7301:void <init>() -> <init>
    7450:7469:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    7938:7942:boolean canRestoreState() -> canRestoreState
    7419:7430:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7624:7624:boolean hasObservers() -> hasObservers
    7532:7532:boolean hasStableIds() -> hasStableIds
    7709:7709:void notifyDataSetChanged() -> notifyDataSetChanged
    7379:7379:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7643:7643:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7498:7502:void setHasStableIds(boolean) -> setHasStableIds
    7656:7656:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy -> androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy:
    7952:7968:void <clinit>() -> <clinit>
    7952:7952:void <init>(java.lang.String,int) -> <init>
    7952:7952:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String) -> valueOf
    7952:7952:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values() -> values
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    12767:12767:void <init>() -> <init>
    12769:12769:boolean hasObservers() -> hasObservers
    12777:12778:void notifyChanged() -> notifyChanged
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    12231:12231:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5885:5885:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    13263:13333:void <init>() -> <init>
    13650:13656:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13866:13866:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    13734:13736:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13874:13878:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    13359:13359:long getAddDuration() -> getAddDuration
    13395:13395:long getChangeDuration() -> getChangeDuration
    13341:13341:long getMoveDuration() -> getMoveDuration
    13377:13377:long getRemoveDuration() -> getRemoveDuration
    13892:13892:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    13482:13482:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    13454:13454:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    13416:13416:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13959:13959:void <init>() -> <init>
    13971:13971:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13987:13991:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    13221:13221:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    13226:13235:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    11100:11100:void <init>() -> <init>
    11149:11149:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    11174:11174:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    11111:11111:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    11132:11132:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    8017:8124:void <init>() -> <init>
    8944:8944:void addDisappearingView(android.view.View) -> addDisappearingView
    8962:8962:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8973:8973:void addView(android.view.View) -> addView
    8985:8985:void addView(android.view.View,int) -> addView
    8989:9038:void addViewInt(android.view.View,int,boolean) -> addViewInt
    8331:8332:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    9228:9234:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    9249:9249:void attachView(android.view.View,int) -> attachView
    10123:10128:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8310:8319:int chooseSize(int,int,int) -> chooseSize
    9615:9618:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    9208:9208:void detachViewAt(int) -> detachViewAt
    9215:9215:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8542:8543:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8547:8548:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    9127:9134:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    9155:9163:android.view.View findViewByPosition(int) -> findViewByPosition
    8771:8776:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8795:8795:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    10158:10158:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    9358:9358:android.view.View getChildAt(int) -> getChildAt
    9347:9347:int getChildCount() -> getChildCount
    9866:9907:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    10252:10281:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8654:8654:boolean getClipToPadding() -> getClipToPadding
    10102:10102:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    10054:10054:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    10066:10066:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9932:9933:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9919:9920:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    10090:10090:int getDecoratedRight(android.view.View) -> getDecoratedRight
    10078:10078:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9512:9516:android.view.View getFocusedChild() -> getFocusedChild
    9422:9422:int getHeight() -> getHeight
    9390:9390:int getHeightMode() -> getHeightMode
    9535:9536:int getItemCount() -> getItemCount
    8915:8915:int getLayoutDirection() -> getLayoutDirection
    10173:10173:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10681:10681:int getMinimumHeight() -> getMinimumHeight
    10673:10673:int getMinimumWidth() -> getMinimumWidth
    9462:9462:int getPaddingBottom() -> getPaddingBottom
    9432:9432:int getPaddingLeft() -> getPaddingLeft
    9452:9452:int getPaddingRight() -> getPaddingRight
    9442:9442:int getPaddingTop() -> getPaddingTop
    9099:9099:int getPosition(android.view.View) -> getPosition
    11030:11038:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    10188:10188:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10143:10143:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    10022:10043:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    9406:9406:int getWidth() -> getWidth
    9374:9374:int getWidthMode() -> getWidthMode
    11064:11068:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    8559:8559:boolean isAttachedToWindow() -> isAttachedToWindow
    8422:8422:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    10390:10401:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8487:8487:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    9762:9763:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8903:8903:boolean isSmoothScrolling() -> isSmoothScrolling
    10369:10371:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    10001:10003:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9791:9806:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    9280:9286:void moveView(int,int) -> moveView
    9546:9547:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9558:9559:void offsetChildrenVertical(int) -> offsetChildrenVertical
    8645:8645:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    10805:10805:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10821:10830:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10756:10756:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10786:10800:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10836:10839:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10524:10524:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8709:8709:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    10654:10654:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    10415:10415:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10437:10437:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10720:10721:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10945:10945:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10961:10986:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10993:10993:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10746:10749:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9651:9676:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    9324:9325:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    9335:9337:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8590:8591:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    9051:9051:void removeView(android.view.View) -> removeView
    9063:9065:void removeViewAt(int) -> removeViewAt
    10304:10304:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    10325:10334:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    8282:8283:void requestLayout() -> requestLayout
    10873:10873:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9623:9637:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    11043:11045:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    8193:8202:void setMeasureSpecs(int,int) -> setMeasureSpecs
    8271:8275:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10665:10665:void setMeasuredDimension(int,int) -> setMeasuredDimension
    8220:8248:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    8178:8189:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9731:9734:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    9716:9718:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8877:8877:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8891:8896:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    10714:10715:void stopSmoothScroller() -> stopSmoothScroller
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    8026:8026:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8029:8029:android.view.View getChildAt(int) -> getChildAt
    8052:8053:int getChildEnd(android.view.View) -> getChildEnd
    8045:8046:int getChildStart(android.view.View) -> getChildStart
    8039:8039:int getParentEnd() -> getParentEnd
    8034:8034:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    8062:8062:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8065:8065:android.view.View getChildAt(int) -> getChildAt
    8089:8090:int getChildEnd(android.view.View) -> getChildEnd
    8082:8083:int getChildStart(android.view.View) -> getChildStart
    8075:8076:int getParentEnd() -> getParentEnd
    8070:8070:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    11078:11078:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    12101:12109:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    12101:12113:void <init>(int,int) -> <init>
    12101:12117:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    12101:12121:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    12101:12125:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    12185:12185:int getViewLayoutPosition() -> getViewLayoutPosition
    12167:12167:boolean isItemChanged() -> isItemChanged
    12156:12156:boolean isItemRemoved() -> isItemRemoved
    12145:12145:boolean isViewInvalid() -> isViewInvalid
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    13199:13199:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    11262:11262:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5941:5967:void <init>() -> <init>
    6089:6089:void attach() -> attach
    5973:5975:void clear() -> clear
    6093:6093:void detach() -> detach
    6073:6074:void factorInBindTime(int,long) -> factorInBindTime
    6067:6068:void factorInCreateTime(int,long) -> factorInCreateTime
    6011:6016:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    6122:6125:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    6111:6117:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6047:6056:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    6063:6063:long runningAverage(long,long) -> runningAverage
    6084:6084:boolean willBindInTime(int,long,long) -> willBindInTime
    6079:6079:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5958:5962:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    6203:6213:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6830:6848:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6605:6622:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    6226:6227:void clear() -> clear
    7225:7237:void clearOldPositions() -> clearOldPositions
    6919:6921:void clearScrap() -> clearScrap
    6395:6402:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    7073:7085:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6928:6947:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    7183:7186:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6911:6911:int getScrapCount() -> getScrapCount
    6258:6258:java.util.List getScrapList() -> getScrapList
    7019:7062:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6964:7005:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6915:6915:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6421:6421:android.view.View getViewForPosition(int) -> getViewForPosition
    6425:6425:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6627:6628:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6633:6649:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    7243:7248:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    7209:7220:void markKnownViewsInvalid() -> markKnownViewsInvalid
    7126:7135:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    7107:7116:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    7148:7162:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    7092:7093:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6857:6861:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6696:6702:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6721:6726:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6666:6691:void recycleView(android.view.View) -> recycleView
    6735:6817:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6874:6889:void scrapView(android.view.View) -> scrapView
    6310:6324:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6448:6600:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6900:6907:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    6241:6247:void updateViewCacheSize() -> updateViewCacheSize
    6272:6291:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    7191:7201:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5810:5810:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5815:5820:void onChanged() -> onChanged
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12866:12866:void <clinit>() -> <clinit>
    12844:12846:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12853:12853:void <init>(android.os.Parcelable) -> <init>
    12863:12863:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12858:12859:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12866:12866:void <init>() -> <init>
    12866:12866:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12866:12866:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12869:12869:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12874:12874:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12866:12866:java.lang.Object[] newArray(int) -> newArray
    12879:12879:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    12282:12299:void <init>() -> <init>
    12356:12362:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    12493:12493:android.view.View findViewByPosition(int) -> findViewByPosition
    12486:12486:int getChildCount() -> getChildCount
    12479:12479:int getChildPosition(android.view.View) -> getChildPosition
    12372:12372:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    12424:12424:int getTargetPosition() -> getTargetPosition
    12406:12406:boolean isPendingInitialRun() -> isPendingInitialRun
    12414:12414:boolean isRunning() -> isRunning
    12520:12523:void normalize(android.graphics.PointF) -> normalize
    12428:12469:void onAnimation(int,int) -> onAnimation
    12506:12507:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    12342:12342:void setTargetPosition(int) -> setTargetPosition
    12317:12338:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    12382:12395:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    12594:12594:void <init>(int,int) -> <init>
    12579:12618:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12641:12641:boolean hasJumpTarget() -> hasJumpTarget
    12637:12637:void jumpTo(int) -> jumpTo
    12645:12664:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    12734:12738:void update(int,int,int,android.view.animation.Interpolator) -> update
    12669:12673:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12894:12966:void <init>() -> <init>
    12900:12903:void assertLayoutStep(int) -> assertLayoutStep
    13147:13149:int getItemCount() -> getItemCount
    13101:13101:int getTargetScrollPosition() -> getTargetScrollPosition
    13111:13111:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    13023:13023:boolean isPreLayout() -> isPreLayout
    12992:12996:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    13176:13176:java.lang.String toString() -> toString
    13034:13034:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory:
    5925:5925:void <init>() -> <init>
    5929:5929:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5526:5535:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5772:5780:int computeScrollDuration(int,int) -> computeScrollDuration
    5704:5715:void fling(int,int) -> fling
    5699:5700:void internalPostOnAnimation() -> internalPostOnAnimation
    5691:5694:void postOnAnimation() -> postOnAnimation
    5540:5686:void run() -> run
    5735:5762:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5784:5785:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    11453:11453:void <clinit>() -> <clinit>
    11347:11487:void <init>(android.view.View) -> <init>
    11787:11790:void addChangePayload(java.lang.Object) -> addChangePayload
    11782:11782:void addFlags(int) -> addFlags
    11513:11514:void clearOldPosition() -> clearOldPosition
    11802:11805:void clearPayload() -> clearPayload
    11729:11729:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    11733:11733:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11795:11797:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11940:11940:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11491:11493:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11666:11669:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    11706:11706:long getItemId() -> getItemId
    11713:11713:int getItemViewType() -> getItemViewType
    11565:11565:int getLayoutPosition() -> getLayoutPosition
    11696:11696:int getOldPosition() -> getOldPosition
    11809:11818:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11762:11762:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11774:11774:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11770:11770:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    11754:11754:boolean isBound() -> isBound
    11746:11746:boolean isInvalid() -> isInvalid
    11923:11924:boolean isRecyclable() -> isRecyclable
    11758:11758:boolean isRemoved() -> isRemoved
    11717:11717:boolean isScrap() -> isScrap
    11766:11766:boolean isTmpDetached() -> isTmpDetached
    11944:11944:boolean isUpdated() -> isUpdated
    11750:11750:boolean needsUpdate() -> needsUpdate
    11497:11508:void offsetPosition(int,boolean) -> offsetPosition
    11842:11848:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11856:11858:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11823:11834:void resetInternal() -> resetInternal
    11518:11519:void saveOldPosition() -> saveOldPosition
    11778:11778:void setFlags(int,int) -> setFlags
    11899:11911:void setIsRecyclable(boolean) -> setIsRecyclable
    11741:11742:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11932:11932:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11524:11524:boolean shouldIgnore() -> shouldIgnore
    11864:11883:java.lang.String toString() -> toString
    11721:11721:void unScrap() -> unScrap
    11725:11725:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    44:50:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:84:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:74:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:64:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    112:120:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    223:227:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:154:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:216:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    128:130:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    179:183:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:194:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:141:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:302:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:344:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:317:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:357:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:292:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:335:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:277:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:326:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    34:42:void <init>() -> <init>
    93:104:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    123:124:void destroyCallbacks() -> destroyCallbacks
    65:75:boolean onFling(int,int) -> onFling
    112:116:void setupCallbacks() -> setupCallbacks
    157:172:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    182:195:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:51:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    58:58:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    106:234:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1780:1781:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    794:825:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1839:1841:boolean areAllEndsEqual() -> areAllEndsEqual
    1849:1851:boolean areAllStartsEqual() -> areAllStartsEqual
    527:528:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1724:1734:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2017:2021:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2001:2001:boolean canScrollHorizontally() -> canScrollHorizontally
    1996:1996:boolean canScrollVertically() -> canScrollVertically
    269:309:boolean checkForGaps() -> checkForGaps
    2247:2247:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    402:413:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2097:2127:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1096:1096:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1076:1076:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1116:1116:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1100:1105:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1080:1085:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1120:1125:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2026:2036:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1111:1111:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1091:1091:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1131:1131:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2368:2393:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1706:1709:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1715:1718:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    257:259:void createOrientationHelpers() -> createOrientationHelpers
    1549:1702:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2192:2195:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1361:1367:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1331:1338:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1319:1321:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2209:2211:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1385:1398:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1404:1417:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2222:2226:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2233:2233:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2238:2241:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2182:2183:int getFirstChildPosition() -> getFirstChildPosition
    2177:2178:int getLastChildPosition() -> getLastChildPosition
    1859:1861:int getMaxEnd(int) -> getMaxEnd
    1817:1819:int getMaxStart(int) -> getMaxStart
    1870:1872:int getMinEnd(int) -> getMinEnd
    1828:1830:int getMinStart(int) -> getMinStart
    1954:1984:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1505:1543:void handleUpdate(int,int,int) -> handleUpdate
    339:391:android.view.View hasGapsToFix() -> hasGapsToFix
    548:549:void invalidateSpanAssignments() -> invalidateSpanAssignments
    253:253:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    567:567:boolean isLayoutRTL() -> isLayoutRTL
    1136:1190:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1201:1211:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1460:1462:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1468:1470:void offsetChildrenVertical(int) -> offsetChildrenVertical
    611:613:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    322:329:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2258:2346:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1294:1308:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1481:1481:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1486:1487:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1492:1492:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1476:1476:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1498:1498:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    604:604:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    619:728:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    734:738:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1230:1236:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1244:1284:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:316:void onScrollStateChanged(int) -> onScrollStateChanged
    1944:1947:boolean preferLastSpan(int) -> preferLastSpan
    2136:2145:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1787:1788:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1740:1772:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1910:1933:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1881:1902:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    742:784:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    559:562:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2149:2172:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2007:2007:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2051:2056:void scrollToPosition(int) -> scrollToPosition
    2013:2013:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1453:1455:void setLayoutStateDirection(int) -> setLayoutStateDirection
    586:599:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:459:void setOrientation(int) -> setOrientation
    476:481:void setReverseLayout(boolean) -> setReverseLayout
    428:437:void setSpanCount(int) -> setSpanCount
    2044:2046:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    943:943:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1793:1797:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    848:851:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    857:929:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    830:840:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1422:1449:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    935:938:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1802:1811:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1220:1223:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    215:215:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    218:218:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3243:3244:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3270:3271:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3275:3278:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3248:3254:void reset() -> reset
    3259:3265:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2424:2424:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2428:2428:void <init>(int,int) -> <init>
    2432:2432:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2436:2436:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2462:2462:boolean isFullSpan() -> isFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2812:2812:void <init>() -> <init>
    2983:3002:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2891:2894:void clear() -> clear
    2879:2886:void ensureSize(int) -> ensureSize
    2823:2831:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3027:3036:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3006:3011:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2858:2861:int getSpan(int) -> getSpan
    2838:2852:int invalidateAfter(int) -> invalidateAfter
    2957:2977:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2928:2936:void offsetForAddition(int,int) -> offsetForAddition
    2898:2906:void offsetForRemoval(int,int) -> offsetForRemoval
    2940:2948:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2910:2922:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2866:2867:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2871:2871:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3105:3105:void <clinit>() -> <clinit>
    3059:3066:void <init>(android.os.Parcel) -> <init>
    3070:3070:void <init>() -> <init>
    3074:3074:int getGapForSpan(int) -> getGapForSpan
    3097:3101:java.lang.String toString() -> toString
    3084:3091:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3106:3106:void <init>() -> <init>
    3106:3106:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3109:3109:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3106:3106:java.lang.Object[] newArray(int) -> newArray
    3114:3114:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3215:3215:void <clinit>() -> <clinit>
    3138:3138:void <init>() -> <init>
    3141:3161:void <init>(android.os.Parcel) -> <init>
    3164:3174:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3186:3189:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3178:3182:void invalidateSpanInfo() -> invalidateSpanInfo
    3199:3212:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3216:3216:void <init>() -> <init>
    3216:3216:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3219:3219:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3216:3216:java.lang.Object[] newArray(int) -> newArray
    3224:3224:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2483:2490:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2574:2582:void appendToSpan(android.view.View) -> appendToSpan
    2590:2605:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2539:2546:void calculateCachedEnd() -> calculateCachedEnd
    2505:2512:void calculateCachedStart() -> calculateCachedStart
    2609:2611:void clear() -> clear
    2674:2676:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2692:2694:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2730:2753:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2767:2767:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2651:2651:int getDeletedSize() -> getDeletedSize
    2527:2535:int getEndLine(int) -> getEndLine
    2553:2557:int getEndLine() -> getEndLine
    2777:2797:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2655:2655:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2494:2501:int getStartLine(int) -> getStartLine
    2519:2523:int getStartLine() -> getStartLine
    2615:2616:void invalidateCache() -> invalidateCache
    2659:2663:void onOffset(int) -> onOffset
    2624:2634:void popEnd() -> popEnd
    2638:2647:void popStart() -> popStart
    2561:2569:void prependToSpan(android.view.View) -> prependToSpan
    2620:2620:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:133:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:233:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:253:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    148:148:void addFlags(int) -> addFlags
    166:185:boolean boundsMatch() -> boundsMatch
    152:152:void resetFlags() -> resetFlags
    141:144:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    36:47:void <init>() -> <init>
    145:151:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:203:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:132:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:188:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:70:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:55:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:273:void onDetach() -> onDetach
    277:277:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:119:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:251:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:215:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:268:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    307:307:void <clinit>() -> <clinit>
    309:309:void <init>() -> <init>
    326:326:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:321:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:43:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:64:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:92:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
    96:100:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    112:112:void add(java.lang.String) -> add
    106:107:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    44:52:void <init>() -> <init>
    76:84:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    190:208:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:229:void performSave(android.os.Bundle) -> performSave
    109:111:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    167:180:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:203:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:38:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:62:void performRestore(android.os.Bundle) -> performRestore
    74:74:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
    53:53:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState:
    1503:1503:void <clinit>() -> <clinit>
    1493:1494:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1499:1500:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1:
    1503:1503:void <init>() -> <init>
    1503:1503:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1503:1503:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1506:1506:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1511:1511:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1503:1503:java.lang.Object[] newArray(int) -> newArray
    1516:1516:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
androidx.swiperefreshlayout.R$styleable -> androidx.swiperefreshlayout.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
androidx.swiperefreshlayout.widget.CircleImageView -> androidx.swiperefreshlayout.widget.CircleImageView:
    58:89:void <init>(android.content.Context) -> <init>
    93:93:boolean elevationSupported() -> elevationSupported
    119:121:void onAnimationEnd() -> onAnimationEnd
    111:113:void onAnimationStart() -> onAnimationStart
    98:100:void onMeasure(int,int) -> onMeasure
    106:106:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    127:129:void setBackgroundColor(int) -> setBackgroundColor
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow -> androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow:
    143:147:void <init>(androidx.swiperefreshlayout.widget.CircleImageView,int) -> <init>
    158:161:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    152:153:void onResize(float,float) -> onResize
    165:165:void updateRadialGradient(int) -> updateRadialGradient
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.CircularProgressDrawable:
    67:97:void <clinit>() -> <clinit>
    138:145:void <init>(android.content.Context) -> <init>
    519:529:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    537:564:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    399:403:void draw(android.graphics.Canvas) -> draw
    414:414:int getAlpha() -> getAlpha
    441:441:boolean isRunning() -> isRunning
    408:409:void setAlpha(int) -> setAlpha
    280:281:void setArrowEnabled(boolean) -> setArrowEnabled
    299:300:void setArrowScale(float) -> setArrowScale
    419:420:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:394:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:351:void setProgressRotation(float) -> setProgressRotation
    424:424:void setRotation(float) -> setRotation
    151:158:void setSizeParameters(float,float,float,float) -> setSizeParameters
    330:332:void setStartEndTrim(float,float) -> setStartEndTrim
    192:193:void setStrokeWidth(float) -> setStrokeWidth
    169:174:void setStyle(int) -> setStyle
    569:618:void setupAnimators() -> setupAnimators
    449:460:void start() -> start
    469:474:void stop() -> stop
    503:507:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> updateRingColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$1:
    571:571:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    574:577:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$2:
    583:583:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    602:614:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    587:587:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring:
    626:661:void <init>() -> <init>
    695:723:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    727:754:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    838:838:int getAlpha() -> getAlpha
    878:878:float getEndTrim() -> getEndTrim
    808:808:int getNextColor() -> getNextColor
    812:812:int getNextColorIndex() -> getNextColorIndex
    858:858:float getStartTrim() -> getStartTrim
    870:870:int getStartingColor() -> getStartingColor
    866:866:float getStartingEndTrim() -> getStartingEndTrim
    930:930:float getStartingRotation() -> getStartingRotation
    862:862:float getStartingStartTrim() -> getStartingStartTrim
    820:820:void goToNextColor() -> goToNextColor
    947:952:void resetOriginals() -> resetOriginals
    831:831:void setAlpha(int) -> setAlpha
    671:672:void setArrowDimensions(float,float) -> setArrowDimensions
    917:918:void setArrowScale(float) -> setArrowScale
    893:893:void setCenterRadius(float) -> setCenterRadius
    781:781:void setColor(int) -> setColor
    824:824:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    800:801:void setColorIndex(int) -> setColorIndex
    764:766:void setColors(int[]) -> setColors
    874:874:void setEndTrim(float) -> setEndTrim
    882:882:void setRotation(float) -> setRotation
    904:905:void setShowArrow(boolean) -> setShowArrow
    854:854:void setStartTrim(float) -> setStartTrim
    845:846:void setStrokeWidth(float) -> setStrokeWidth
    938:940:void storeOriginals() -> storeOriginals
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
    91:149:void <clinit>() -> <clinit>
    403:403:void <init>(android.content.Context) -> <init>
    117:1358:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1308:1316:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1320:1332:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    735:741:boolean canChildScrollUp() -> canChildScrollUp
    461:466:void createProgressView() -> createProgressView
    1119:1119:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    1124:1124:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    1113:1113:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    1039:1039:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    1107:1107:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    650:654:void ensureTarget() -> ensureTarget
    1184:1212:void finishSpinner(float) -> finishSpinner
    446:446:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    996:996:int getNestedScrollAxes() -> getNestedScrollAxes
    1101:1101:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    1128:1128:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    1086:1086:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    644:644:boolean isRefreshing() -> isRefreshing
    1132:1180:void moveSpinner(float) -> moveSpinner
    1353:1355:void moveToStart(float) -> moveToStart
    293:294:void onDetachedFromWindow() -> onDetachedFromWindow
    755:808:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    672:691:void onLayout(boolean,int,int,int,int) -> onLayout
    697:714:void onMeasure(int,int) -> onMeasure
    1029:1029:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1023:1023:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    940:940:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    966:990:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    864:895:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    931:931:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1016:1016:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    915:915:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    955:959:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    286:288:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    280:281:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1392:1398:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    904:904:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    948:948:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    924:924:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    1001:1010:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1218:1288:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    839:847:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    218:228:void reset() -> reset
    523:524:void setAnimationProgress(float) -> setAnimationProgress
    635:636:void setColorSchemeColors(int[]) -> setColorSchemeColors
    619:624:void setColorSchemeResources(int[]) -> setColorSchemeResources
    298:299:void setColorViewAlpha(int) -> setColorViewAlpha
    667:667:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    233:235:void setEnabled(boolean) -> setEnabled
    1081:1081:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    474:474:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    484:497:void setRefreshing(boolean) -> setRefreshing
    528:535:void setRefreshing(boolean,boolean) -> setRefreshing
    1386:1388:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    562:573:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1299:1303:void startDragging(float) -> startDragging
    1091:1091:boolean startNestedScroll(int) -> startNestedScroll
    558:558:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    554:554:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    541:550:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1367:1382:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    502:515:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    1096:1096:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1:
    190:190:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    201:212:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2:
    504:504:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    507:507:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3:
    541:541:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    544:544:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4:
    562:562:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    565:565:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5:
    1192:1192:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1200:1201:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6:
    1336:1336:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1340:1348:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7:
    1358:1358:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1361:1361:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8:
    1369:1369:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1372:1374:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState:
    264:264:void <clinit>() -> <clinit>
    246:247:void <init>(android.os.Parcelable,boolean) -> <init>
    254:255:void <init>(android.os.Parcel) -> <init>
    260:261:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1:
    265:265:void <init>() -> <init>
    265:265:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    268:268:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    265:265:java.lang.Object[] newArray(int) -> newArray
    273:273:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState[] newArray(int) -> newArray
androidx.tracing.Trace -> androidx.tracing.Trace:
    80:81:void beginSection(java.lang.String) -> beginSection
    93:94:void endSection() -> endSection
    229:237:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    159:169:boolean isEnabledFallback() -> isEnabledFallback
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
    49:49:void beginSection(java.lang.String) -> beginSection
    60:60:void endSection() -> endSection
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
    31:32:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    37:45:void pause(android.animation.Animator) -> pause
    53:61:void resume(android.animation.Animator) -> resume
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
    39:40:void <init>() -> <init>
    49:52:void init() -> init
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
    61:168:void <clinit>() -> <clinit>
    164:170:void <init>() -> <init>
    244:244:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    239:239:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    220:232:void captureValues(androidx.transition.TransitionValues) -> captureValues
    267:448:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    188:188:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    249:254:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
    70:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    70:70:java.lang.Object get(java.lang.Object) -> get
    82:83:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
    75:77:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
    448:448:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    451:452:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
    88:88:void <init>(java.lang.Class,java.lang.String) -> <init>
    88:88:java.lang.Object get(java.lang.Object) -> get
    88:88:void set(java.lang.Object,java.lang.Object) -> set
    91:91:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
    101:101:void <init>(java.lang.Class,java.lang.String) -> <init>
    101:101:java.lang.Object get(java.lang.Object) -> get
    101:101:void set(java.lang.Object,java.lang.Object) -> set
    104:104:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
    114:114:void <init>(java.lang.Class,java.lang.String) -> <init>
    114:114:java.lang.Object get(java.lang.Object) -> get
    114:114:void set(java.lang.Object,java.lang.Object) -> set
    117:121:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
    131:131:void <init>(java.lang.Class,java.lang.String) -> <init>
    131:131:java.lang.Object get(java.lang.Object) -> get
    131:131:void set(java.lang.Object,java.lang.Object) -> set
    134:138:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
    148:148:void <init>(java.lang.Class,java.lang.String) -> <init>
    148:148:java.lang.Object get(java.lang.Object) -> get
    148:148:void set(java.lang.Object,java.lang.Object) -> set
    151:155:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
    326:329:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
    370:370:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    375:375:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    380:382:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
    394:395:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    399:400:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    405:408:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    413:413:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    418:418:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
    471:472:void <init>(android.view.View) -> <init>
    485:489:void setBottomRight(android.graphics.PointF) -> setBottomRight
    494:496:void setLeftTopRightBottom() -> setLeftTopRightBottom
    476:480:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.Fade -> androidx.transition.Fade:
    92:93:void <init>(int) -> <init>
    116:118:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    128:136:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    176:178:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    157:161:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    168:170:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
    136:136:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    139:141:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
    187:190:void <init>(android.view.View) -> <init>
    204:206:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    195:198:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
    44:44:void <init>() -> <init>
    335:336:void addTarget(java.lang.Object,android.view.View) -> addTarget
    104:121:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    223:223:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    48:48:boolean canHandle(java.lang.Object) -> canHandle
    55:55:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    128:130:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    196:214:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    136:144:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    343:344:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    308:326:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    152:153:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    231:232:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    89:93:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    351:352:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    267:274:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    73:83:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    297:301:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    65:66:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
    93:93:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
    153:153:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    168:172:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    162:163:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
    232:232:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    248:248:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    235:242:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
    268:268:void <init>(androidx.transition.FragmentTransitionSupport,androidx.transition.Transition) -> <init>
    271:271:void onCancel() -> onCancel
androidx.transition.FragmentTransitionSupport$5 -> androidx.transition.FragmentTransitionSupport$5:
    274:274:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Runnable) -> <init>
    280:280:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.FragmentTransitionSupport$6 -> androidx.transition.FragmentTransitionSupport$6:
    352:352:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
    28:31:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
    45:45:void <init>() -> <init>
androidx.transition.PathProperty -> androidx.transition.PathProperty:
    40:48:void <init>(android.util.Property,android.graphics.Path) -> <init>
    35:35:java.lang.Object get(java.lang.Object) -> get
    53:53:java.lang.Float get(java.lang.Object) -> get
    35:35:void set(java.lang.Object,java.lang.Object) -> set
    58:62:void set(java.lang.Object,java.lang.Float) -> set
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
    38:41:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
    39:39:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
    149:151:void exit() -> exit
    209:209:androidx.transition.Scene getCurrentScene(android.view.ViewGroup) -> getCurrentScene
    196:196:void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene) -> setCurrentScene
androidx.transition.Transition -> androidx.transition.Transition:
    164:205:void <clinit>() -> <clinit>
    181:260:void <init>() -> <init>
    2036:2039:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    994:994:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    644:657:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1526:1559:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    1894:1912:void animate(android.animation.Animator) -> animate
    2011:2021:void cancel() -> cancel
    1596:1644:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    1465:1518:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1572:1578:void clearValues(boolean) -> clearValues
    120:120:java.lang.Object clone() -> clone
    2213:2218:androidx.transition.Transition clone() -> clone
    704:794:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1952:1974:void end() -> end
    354:354:long getDuration() -> getDuration
    2127:2127:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    409:409:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1676:1699:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2239:2239:java.lang.String getName() -> getName
    2097:2097:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    2175:2175:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    853:856:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    381:381:long getStartDelay() -> getStartDelay
    1409:1409:java.util.List getTargetIds() -> getTargetIds
    1438:1438:java.util.List getTargetNames() -> getTargetNames
    1453:1453:java.util.List getTargetTypes() -> getTargetTypes
    1423:1423:java.util.List getTargets() -> getTargets
    1657:1661:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1838:1848:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    810:844:boolean isValidTarget(android.view.View) -> isValidTarget
    1860:1871:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    591:603:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    543:550:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    564:576:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    618:630:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    664:686:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    1713:1732:void pause(android.view.View) -> pause
    1776:1816:void playTransition(android.view.ViewGroup) -> playTransition
    2052:2057:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1092:1092:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1745:1766:void resume(android.view.View) -> resume
    892:904:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    872:885:void runAnimators() -> runAnimators
    341:341:androidx.transition.Transition setDuration(long) -> setDuration
    2112:2112:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    395:395:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    2080:2082:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    368:368:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1925:1936:void start() -> start
    2207:2207:java.lang.String toString() -> toString
    2243:2272:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
    171:171:void <init>() -> <init>
    174:176:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
    892:892:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    900:901:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    895:895:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
    1905:1905:void <init>(androidx.transition.Transition) -> <init>
    1908:1909:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
    2357:2362:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
    2420:2420:void <init>() -> <init>
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
    27:27:void <init>() -> <init>
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
    83:90:void <clinit>() -> <clinit>
    407:419:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    199:209:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    216:218:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    308:323:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
    237:239:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    267:300:boolean onPreDraw() -> onPreDraw
    253:262:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    243:244:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
    286:286:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    289:291:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
    80:110:void <init>() -> <init>
    62:62:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    307:307:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    62:62:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    271:274:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    179:193:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    199:200:void addTransitionInternal(androidx.transition.Transition) -> addTransitionInternal
    577:580:void cancel() -> cancel
    532:536:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    544:547:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    520:524:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    62:62:java.lang.Object clone() -> clone
    635:639:androidx.transition.Transition clone() -> clone
    462:476:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    223:226:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    211:211:int getTransitionCount() -> getTransitionCount
    555:558:void pause(android.view.View) -> pause
    62:62:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    385:385:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    62:62:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    322:325:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    566:569:void resume(android.view.View) -> resume
    487:513:void runAnimators() -> runAnimators
    62:62:androidx.transition.Transition setDuration(long) -> setDuration
    239:243:androidx.transition.TransitionSet setDuration(long) -> setDuration
    616:620:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    62:62:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    258:265:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    137:143:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    390:394:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    606:610:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    62:62:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    252:252:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    418:422:void setupStartEndListeners() -> setupStartEndListeners
    626:628:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
    499:499:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    502:503:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
    433:434:void <init>(androidx.transition.TransitionSet) -> <init>
    447:453:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    439:441:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
    35:39:void <clinit>() -> <clinit>
    51:71:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:138:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    149:150:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
    49:70:void <init>() -> <init>
    52:70:void <init>(android.view.View) -> <init>
    74:76:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    91:95:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
    25:33:void <init>() -> <init>
androidx.transition.ViewGroupOverlayApi14 -> androidx.transition.ViewGroupOverlayApi14:
    28:28:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    37:37:void add(android.view.View) -> add
    32:32:androidx.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup) -> createFrom
    42:42:void remove(android.view.View) -> remove
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
    32:33:void <init>(android.view.ViewGroup) -> <init>
    38:38:void add(android.graphics.drawable.Drawable) -> add
    48:48:void add(android.view.View) -> add
    43:43:void remove(android.graphics.drawable.Drawable) -> remove
    53:53:void remove(android.view.View) -> remove
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
    46:49:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    68:74:void hiddenSuppressLayout(android.view.ViewGroup,boolean) -> hiddenSuppressLayout
    56:61:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtilsApi14 -> androidx.transition.ViewGroupUtilsApi14:
    114:129:void cancelLayoutTransition(android.animation.LayoutTransition) -> cancelLayoutTransition
    46:104:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewGroupUtilsApi14$1 -> androidx.transition.ViewGroupUtilsApi14$1:
    47:47:void <init>() -> <init>
androidx.transition.ViewOverlayApi14 -> androidx.transition.ViewOverlayApi14:
    47:48:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    81:81:void add(android.graphics.drawable.Drawable) -> add
    65:74:androidx.transition.ViewOverlayApi14 createFrom(android.view.View) -> createFrom
    54:58:android.view.ViewGroup getContentView(android.view.View) -> getContentView
    86:86:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewOverlayApi14$OverlayViewGroup -> androidx.transition.ViewOverlayApi14$OverlayViewGroup:
    116:116:void <clinit>() -> <clinit>
    132:148:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,androidx.transition.ViewOverlayApi14) -> <init>
    159:168:void add(android.graphics.drawable.Drawable) -> add
    188:212:void add(android.view.View) -> add
    221:222:void assertNotDisposed() -> assertNotDisposed
    244:253:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    228:230:void disposeIfEmpty() -> disposeIfEmpty
    274:277:void getOffset(int[]) -> getOffset
    303:314:android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect) -> invalidateChildInParent
    237:237:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    174:178:void remove(android.graphics.drawable.Drawable) -> remove
    216:217:void remove(android.view.View) -> remove
    184:184:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
    31:32:void <init>(android.view.View) -> <init>
    37:37:void add(android.graphics.drawable.Drawable) -> add
    42:42:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
    38:71:void <clinit>() -> <clinit>
    128:128:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    90:93:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    111:111:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    100:103:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    119:119:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    199:199:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    107:107:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    145:145:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    161:161:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    177:177:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
    57:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    57:57:java.lang.Object get(java.lang.Object) -> get
    61:61:java.lang.Float get(android.view.View) -> get
    57:57:void set(java.lang.Object,java.lang.Object) -> set
    66:66:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
    72:72:void <init>(java.lang.Class,java.lang.String) -> <init>
    72:72:java.lang.Object get(java.lang.Object) -> get
    76:76:android.graphics.Rect get(android.view.View) -> get
    72:72:void set(java.lang.Object,java.lang.Object) -> set
    81:81:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
    26:26:void <init>() -> <init>
    52:61:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    36:46:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
    28:28:void <init>() -> <init>
    46:52:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    60:66:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
    26:26:void <init>() -> <init>
    36:42:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsApi23 -> androidx.transition.ViewUtilsApi23:
    27:27:void <init>() -> <init>
    38:47:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.ViewUtilsApi29 -> androidx.transition.ViewUtilsApi29:
    27:27:void <init>() -> <init>
    36:36:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    46:46:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    31:31:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    41:41:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    51:51:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    56:56:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
    32:32:void <init>() -> <init>
    72:73:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    179:187:void fetchSetFrame() -> fetchSetFrame
    55:59:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    64:65:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    142:149:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    46:50:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    155:167:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    78:87:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    92:103:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.Visibility -> androidx.transition.Visibility:
    81:81:void <clinit>() -> <clinit>
    98:100:void <init>() -> <init>
    165:165:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    160:160:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    150:155:void captureValues(androidx.transition.TransitionValues) -> captureValues
    250:257:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    146:146:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    195:241:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    515:523:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    284:298:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    343:480:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    127:129:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
    441:441:void <init>(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View) -> <init>
    459:461:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    445:445:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    450:453:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
    536:544:void <init>(android.view.View,int,boolean) -> <init>
    609:617:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    567:567:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    580:580:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    551:552:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    560:561:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    590:591:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    600:600:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    605:605:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    621:623:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
    87:87:void <init>() -> <init>
androidx.transition.WindowIdApi14 -> androidx.transition.WindowIdApi14:
    25:26:void <init>(android.os.IBinder) -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
    29:30:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    24:136:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    170:170:void <init>() -> <init>
    174:174:void <init>(android.content.Context) -> <init>
    158:735:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    524:525:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    534:535:boolean canApplyTheme() -> canApplyTheme
    145:145:void clearColorFilter() -> clearColorFilter
    255:256:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    286:292:void draw(android.graphics.Canvas) -> draw
    323:326:int getAlpha() -> getAlpha
    278:281:int getChangingConfigurations() -> getChangingConfigurations
    349:352:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    267:268:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    145:145:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    422:425:int getIntrinsicHeight() -> getIntrinsicHeight
    414:417:int getIntrinsicWidth() -> getIntrinsicWidth
    145:145:int getMinimumHeight() -> getMinimumHeight
    145:145:int getMinimumWidth() -> getMinimumWidth
    406:409:int getOpacity() -> getOpacity
    145:145:boolean getPadding(android.graphics.Rect) -> getPadding
    145:145:int[] getState() -> getState
    145:145:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    448:513:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    519:519:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    430:433:boolean isAutoMirrored() -> isAutoMirrored
    702:706:boolean isRunning() -> isRunning
    396:399:boolean isStateful() -> isStateful
    145:145:void jumpToCurrentState() -> jumpToCurrentState
    195:196:android.graphics.drawable.Drawable mutate() -> mutate
    298:302:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    315:318:boolean onLevelChange(int) -> onLevelChange
    307:310:boolean onStateChange(int[]) -> onStateChange
    331:335:void setAlpha(int) -> setAlpha
    438:442:void setAutoMirrored(boolean) -> setAutoMirrored
    145:145:void setChangingConfigurations(int) -> setChangingConfigurations
    145:145:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    340:344:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    145:145:void setFilterBitmap(boolean) -> setFilterBitmap
    145:145:void setHotspot(float,float) -> setHotspot
    145:145:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    145:145:boolean setState(int[]) -> setState
    357:362:void setTint(int) -> setTint
    367:372:void setTintList(android.content.res.ColorStateList) -> setTintList
    377:382:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    387:391:boolean setVisible(boolean,boolean) -> setVisible
    684:694:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    663:678:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    711:722:void start() -> start
    727:732:void stop() -> stop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    735:735:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    738:738:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    743:743:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    748:748:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    601:629:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    646:646:int getChangingConfigurations() -> getChangingConfigurations
    636:636:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    641:641:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    650:653:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    550:551:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    583:583:boolean canApplyTheme() -> canApplyTheme
    588:588:int getChangingConfigurations() -> getChangingConfigurations
    556:559:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    565:568:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    574:577:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    105:139:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    65:93:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    498:498:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    511:565:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    762:766:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    792:792:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    204:324:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    652:661:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    633:646:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    97:100:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    116:116:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    128:145:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    873:894:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    801:847:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    855:857:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    679:754:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    576:621:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    342:373:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    387:422:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    433:490:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    163:163:void <init>() -> <init>
    154:154:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    182:196:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    68:68:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:76:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    202:222:float getInterpolation(float) -> getInterpolation
    130:133:void initCubic(float,float,float,float) -> initCubic
    137:178:void initPath(android.graphics.Path) -> initPath
    123:126:void initQuad(float,float) -> initQuad
    82:117:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    31:31:void <init>() -> <init>
    97:98:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    105:109:void clearColorFilter() -> clearColorFilter
    114:117:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    130:133:int getMinimumHeight() -> getMinimumHeight
    122:125:int getMinimumWidth() -> getMinimumWidth
    138:141:boolean getPadding(android.graphics.Rect) -> getPadding
    146:149:int[] getState() -> getState
    155:158:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    88:89:void jumpToCurrentState() -> jumpToCurrentState
    47:50:boolean onLevelChange(int) -> onLevelChange
    163:167:void setChangingConfigurations(int) -> setChangingConfigurations
    38:42:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    80:81:void setFilterBitmap(boolean) -> setFilterBitmap
    64:65:void setHotspot(float,float) -> setHotspot
    72:73:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    172:175:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    282:282:void <clinit>() -> <clinit>
    312:320:void <init>() -> <init>
    312:325:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    690:690:int applyAlpha(int,float) -> applyAlpha
    279:279:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    585:586:boolean canApplyTheme() -> canApplyTheme
    279:279:void clearColorFilter() -> clearColorFilter
    643:648:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    684:685:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    657:671:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createWithoutDelegate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createWithoutDelegate
    358:425:void draw(android.graphics.Canvas) -> draw
    430:434:int getAlpha() -> getAlpha
    928:931:int getChangingConfigurations() -> getChangingConfigurations
    463:466:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    348:353:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    279:279:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    575:579:int getIntrinsicHeight() -> getIntrinsicHeight
    566:570:int getIntrinsicWidth() -> getIntrinsicWidth
    279:279:int getMinimumHeight() -> getMinimumHeight
    279:279:int getMinimumWidth() -> getMinimumWidth
    557:558:int getOpacity() -> getOpacity
    279:279:boolean getPadding(android.graphics.Rect) -> getPadding
    279:279:int[] getState() -> getState
    343:343:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    279:279:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    699:704:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    710:728:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    819:880:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    936:940:void invalidateSelf() -> invalidateSelf
    594:597:boolean isAutoMirrored() -> isAutoMirrored
    526:532:boolean isStateful() -> isStateful
    279:279:void jumpToCurrentState() -> jumpToCurrentState
    330:337:android.graphics.drawable.Drawable mutate() -> mutate
    910:912:boolean needMirroring() -> needMirroring
    921:922:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    537:549:boolean onStateChange(int[]) -> onStateChange
    739:749:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    945:949:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    905:905:void setAllowCaching(boolean) -> setAllowCaching
    439:446:void setAlpha(int) -> setAlpha
    602:606:void setAutoMirrored(boolean) -> setAutoMirrored
    279:279:void setChangingConfigurations(int) -> setChangingConfigurations
    279:279:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    452:458:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    279:279:void setFilterBitmap(boolean) -> setFilterBitmap
    279:279:void setHotspot(float,float) -> setHotspot
    279:279:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    279:279:boolean setState(int[]) -> setState
    486:491:void setTint(int) -> setTint
    496:505:void setTintList(android.content.res.ColorStateList) -> setTintList
    511:520:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    954:957:boolean setVisible(boolean,boolean) -> setVisible
    962:966:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    757:813:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    480:481:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1771:1771:void <init>() -> <init>
    1776:1776:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1781:1788:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1796:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1825:1838:void <init>() -> <init>
    1825:1858:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2031:2031:float getFillAlpha() -> getFillAlpha
    2021:2021:int getFillColor() -> getFillColor
    2010:2010:float getStrokeAlpha() -> getStrokeAlpha
    1990:1990:int getStrokeColor() -> getStrokeColor
    1864:1868:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1877:1881:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    2000:2000:float getStrokeWidth() -> getStrokeWidth
    2051:2051:float getTrimPathEnd() -> getTrimPathEnd
    2061:2061:float getTrimPathOffset() -> getTrimPathOffset
    2041:2041:float getTrimPathStart() -> getTrimPathStart
    1893:1896:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1963:1963:boolean isStateful() -> isStateful
    1968:1969:boolean onStateChanged(int[]) -> onStateChanged
    2036:2036:void setFillAlpha(float) -> setFillAlpha
    2026:2026:void setFillColor(int) -> setFillColor
    2015:2015:void setStrokeAlpha(float) -> setStrokeAlpha
    1995:1995:void setStrokeColor(int) -> setStrokeColor
    2005:2005:void setStrokeWidth(float) -> setStrokeWidth
    2056:2056:void setTrimPathEnd(float) -> setTrimPathEnd
    2066:2066:void setTrimPathOffset(float) -> setTrimPathOffset
    2046:2046:void setTrimPathStart(float) -> setTrimPathStart
    1904:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1448:1503:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1448:1509:void <init>() -> <init>
    1513:1513:java.lang.String getGroupName() -> getGroupName
    1517:1517:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1589:1589:float getPivotX() -> getPivotX
    1602:1602:float getPivotY() -> getPivotY
    1576:1576:float getRotation() -> getRotation
    1615:1615:float getScaleX() -> getScaleX
    1628:1628:float getScaleY() -> getScaleY
    1641:1641:float getTranslateX() -> getTranslateX
    1654:1654:float getTranslateY() -> getTranslateY
    1521:1524:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1667:1668:boolean isStateful() -> isStateful
    1678:1679:boolean onStateChanged(int[]) -> onStateChanged
    1594:1596:void setPivotX(float) -> setPivotX
    1607:1609:void setPivotY(float) -> setPivotY
    1581:1583:void setRotation(float) -> setRotation
    1620:1622:void setScaleX(float) -> setScaleX
    1633:1635:void setScaleY(float) -> setScaleY
    1646:1648:void setTranslateX(float) -> setTranslateX
    1659:1661:void setTranslateY(float) -> setTranslateY
    1566:1570:void updateLocalMatrix() -> updateLocalMatrix
    1532:1560:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1426:1426:void <init>() -> <init>
    1426:1426:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1690:1696:void <init>() -> <init>
    1690:1725:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1753:1753:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1736:1736:java.lang.String getPathName() -> getPathName
    1758:1762:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1729:1731:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1173:1173:void <clinit>() -> <clinit>
    1174:1197:void <init>() -> <init>
    1174:1233:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1267:1267:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1242:1262:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1272:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1216:1216:float getAlpha() -> getAlpha
    1396:1406:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1205:1205:int getRootAlpha() -> getRootAlpha
    1415:1418:boolean isStateful() -> isStateful
    1422:1422:boolean onStateChanged(int[]) -> onStateChanged
    1211:1211:void setAlpha(float) -> setAlpha
    1201:1201:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1018:1048:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1018:1125:void <init>() -> <init>
    1096:1097:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1104:1108:boolean canReuseCache() -> canReuseCache
    1087:1090:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1055:1056:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1142:1142:int getChangingConfigurations() -> getChangingConfigurations
    1067:1077:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1060:1060:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1146:1146:boolean isStateful() -> isStateful
    1131:1131:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1137:1137:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1150:1151:boolean onStateChanged(int[]) -> onStateChanged
    1117:1121:void updateCacheStates() -> updateCacheStates
    1081:1083:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    978:979:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1006:1006:boolean canApplyTheme() -> canApplyTheme
    1011:1011:int getChangingConfigurations() -> getChangingConfigurations
    984:985:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    991:992:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    998:1000:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    38:39:void <init>(android.os.Parcel) -> <init>
    46:46:androidx.versionedparcelable.VersionedParcelable getVersionedParcel() -> getVersionedParcel
    56:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> androidx.versionedparcelable.ParcelUtils:
    40:40:void <init>() -> <init>
    58:61:androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable) -> fromParcelable
    109:114:androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String) -> getVersionedParcelable
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    87:90:void <init>(androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap) -> <init>
    1635:1640:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1613:1617:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1624:1628:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    400:403:boolean readBoolean(boolean,int) -> readBoolean
    473:476:byte[] readByteArray(byte[],int) -> readByteArray
    617:620:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1566:1582:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    410:413:int readInt(int,int) -> readInt
    482:485:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    452:455:java.lang.String readString(java.lang.String,int) -> readString
    1496:1499:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1512:1516:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    295:296:void writeBoolean(boolean,int) -> writeBoolean
    305:306:void writeByteArray(byte[],int) -> writeByteArray
    326:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    335:336:void writeInt(int,int) -> writeInt
    392:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    371:372:void writeString(java.lang.String,int) -> writeString
    1591:1607:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1022:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1030:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1043:1048:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:51:void <init>(android.os.Parcel) -> <init>
    41:65:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap) -> <init>
    99:109:void closeField() -> closeField
    119:120:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:241:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:94:void setOutputField(int) -> setOutputField
    181:181:void writeBoolean(boolean) -> writeBoolean
    127:130:void writeByteArray(byte[]) -> writeByteArray
    196:196:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:146:void writeInt(int) -> writeInt
    176:176:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:166:void writeString(java.lang.String) -> writeString
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1403:1403:void <clinit>() -> <clinit>
    1420:1426:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1398:1399:java.lang.String toString() -> toString
    1391:1393:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1403:1403:void <init>() -> <init>
    1403:1403:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1403:1403:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1406:1406:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1411:1411:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1403:1403:java.lang.Object[] newArray(int) -> newArray
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager2.adapter.FragmentStateAdapter$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$2:
    366:366:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$5 -> androidx.viewpager2.adapter.FragmentStateAdapter$5:
    609:611:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    678:678:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.viewpager2.widget.ViewPager2$SavedState -> androidx.viewpager2.widget.ViewPager2$SavedState:
    418:418:void <clinit>() -> <clinit>
    391:392:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    396:397:void <init>(android.os.Parcel) -> <init>
    405:407:void readValues(android.os.Parcel,java.lang.ClassLoader) -> readValues
    412:415:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager2.widget.ViewPager2$SavedState$1 -> androidx.viewpager2.widget.ViewPager2$SavedState$1:
    418:418:void <init>() -> <init>
    418:418:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    418:418:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    421:423:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    428:428:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    418:418:java.lang.Object[] newArray(int) -> newArray
    433:433:androidx.viewpager2.widget.ViewPager2$SavedState[] newArray(int) -> newArray
com.android.common.widget.CompositeCursorAdapter -> com.android.common.widget.CompositeCursorAdapter:
    71:71:void <init>(android.content.Context) -> <init>
    65:76:void <init>(android.content.Context,int) -> <init>
    89:89:void addPartition(boolean,boolean) -> addPartition
    93:95:void addPartition(com.android.common.widget.CompositeCursorAdapter$Partition) -> addPartition
    99:101:void addPartition(int,com.android.common.widget.CompositeCursorAdapter$Partition) -> addPartition
    484:485:boolean areAllItemsEnabled() -> areAllItemsEnabled
    217:227:void changeCursor(int,android.database.Cursor) -> changeCursor
    121:125:void clearPartitions() -> clearPartitions
    132:140:void close() -> close
    166:188:void ensureCacheValid() -> ensureCacheValid
    80:80:android.content.Context getContext() -> getContext
    202:203:int getCount() -> getCount
    210:210:android.database.Cursor getCursor(int) -> getCursor
    372:373:android.view.View getHeaderView(int,android.database.Cursor,android.view.View,android.view.ViewGroup) -> getHeaderView
    423:436:java.lang.Object getItem(int) -> getItem
    451:471:long getItemId(int) -> getItemId
    312:330:int getItemViewType(int) -> getItemViewType
    260:266:int getOffsetInPartition(int) -> getOffsetInPartition
    154:154:com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int) -> getPartition
    162:162:int getPartitionCount() -> getPartitionCount
    243:246:int getPartitionForPosition(int) -> getPartitionForPosition
    280:283:int getPositionForPartition(int) -> getPositionForPartition
    334:362:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    400:402:android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup) -> getView
    290:290:int getViewTypeCount() -> getViewTypeCount
    195:195:boolean hasHeader(int) -> hasHeader
    158:158:void invalidate() -> invalidate
    497:506:boolean isEnabled(int) -> isEnabled
    235:236:boolean isPartitionEmpty(int) -> isPartitionEmpty
    536:540:void notifyDataSetChanged() -> notifyDataSetChanged
    105:111:void removePartition(int) -> removePartition
    144:145:void setHasHeader(int,boolean) -> setHasHeader
    528:530:void setNotificationsEnabled(boolean) -> setNotificationsEnabled
    149:150:void setShowIfEmpty(int,boolean) -> setShowIfEmpty
com.android.common.widget.CompositeCursorAdapter$Partition -> com.android.common.widget.CompositeCursorAdapter$Partition:
    42:44:void <init>(boolean,boolean) -> <init>
    59:59:boolean isEmpty() -> isEmpty
com.android.contacts.AppCompatContactsActivity -> com.android.contacts.AppCompatContactsActivity:
    36:36:void <init>() -> <init>
    43:52:android.content.ContentResolver getContentResolver() -> getContentResolver
    57:65:android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    70:75:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    115:117:android.view.View getView(int) -> getView
    80:81:void onCreate(android.os.Bundle) -> onCreate
    86:87:void onDestroy() -> onDestroy
    92:92:void onServiceCompleted(android.content.Intent) -> onServiceCompleted
com.android.contacts.CallUtil -> com.android.contacts.CallUtil:
    196:206:java.util.List getCallCapablePhoneAccounts(android.content.Context,java.lang.String) -> getCallCapablePhoneAccounts
    98:100:android.content.Intent getCallIntent(java.lang.String) -> getCallIntent
    116:116:android.content.Intent getCallIntent(android.net.Uri) -> getCallIntent
    108:108:android.content.Intent getCallIntentForEmergencyNumber(android.net.Uri) -> getCallIntentForEmergencyNumber
    137:140:android.net.Uri getCallUri(java.lang.String) -> getCallUri
    85:88:android.content.Intent getCallWithSubjectIntent(java.lang.String,android.telecom.PhoneAccountHandle,java.lang.String) -> getCallWithSubjectIntent
    123:127:android.content.Intent getVideoCallIntent(java.lang.String,java.lang.String) -> getVideoCallIntent
    154:186:int getVideoCallingAvailability(android.content.Context) -> getVideoCallingAvailability
    221:241:boolean isCallWithSubjectSupported(android.content.Context) -> isCallWithSubjectSupported
    258:304:boolean isTachyonEnabled(android.content.Context) -> isTachyonEnabled
com.android.contacts.ClipboardUtils -> com.android.contacts.ClipboardUtils:
    40:49:void copyText(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean) -> copyText
com.android.contacts.Collapser -> com.android.contacts.Collapser:
    35:35:void <init>() -> <init>
    62:91:void collapseList(java.util.List,android.content.Context) -> collapseList
com.android.contacts.ContactPhotoManager -> com.android.contacts.ContactPhotoManager:
    111:435:void <clinit>() -> <clinit>
    86:86:void <init>() -> <init>
    189:192:java.lang.String appendBusinessContactType(java.lang.String) -> appendBusinessContactType
    450:450:com.android.contacts.ContactPhotoManager createContactPhotoManager(android.content.Context) -> createContactPhotoManager
    127:135:android.graphics.drawable.Drawable getDefaultAvatarDrawableForContact(android.content.res.Resources,boolean,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> getDefaultAvatarDrawableForContact
    153:177:android.net.Uri getDefaultAvatarUriForContact(com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> getDefaultAvatarUriForContact
    228:252:com.android.contacts.ContactPhotoManager$DefaultImageRequest getDefaultImageRequestFromUri(android.net.Uri) -> getDefaultImageRequestFromUri
    438:446:com.android.contacts.ContactPhotoManager getInstance(android.content.Context) -> getInstance
    455:455:void injectContactPhotoManagerForTesting(com.android.contacts.ContactPhotoManager) -> injectContactPhotoManagerForTesting
    222:224:boolean isBusinessContactUri(android.net.Uri) -> isBusinessContactUri
    260:260:boolean isDefaultImageUri(android.net.Uri) -> isDefaultImageUri
    522:522:void loadDirectoryPhoto(android.widget.ImageView,android.net.Uri,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> loadDirectoryPhoto
    508:508:void loadPhoto(android.widget.ImageView,android.net.Uri,int,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> loadPhoto
    473:473:void loadThumbnail(android.widget.ImageView,long,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> loadThumbnail
    202:206:android.net.Uri removeContactType(android.net.Uri) -> removeContactType
com.android.contacts.ContactPhotoManager$BlankDefaultImageProvider -> com.android.contacts.ContactPhotoManager$BlankDefaultImageProvider:
    418:418:void <init>() -> <init>
    418:418:void <init>(com.android.contacts.ContactPhotoManager$1) -> <init>
    424:429:void applyDefaultImage(android.widget.ImageView,int,boolean,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> applyDefaultImage
com.android.contacts.ContactPhotoManager$DefaultImageProvider -> com.android.contacts.ContactPhotoManager$DefaultImageProvider:
    368:368:void <init>() -> <init>
com.android.contacts.ContactPhotoManager$DefaultImageRequest -> com.android.contacts.ContactPhotoManager$DefaultImageRequest:
    322:342:void <clinit>() -> <clinit>
    291:345:void <init>() -> <init>
    349:349:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    354:354:void <init>(java.lang.String,java.lang.String,int,boolean) -> <init>
    291:364:void <init>(java.lang.String,java.lang.String,int,float,float,boolean) -> <init>
com.android.contacts.ContactPhotoManager$LetterTileDefaultImageProvider -> com.android.contacts.ContactPhotoManager$LetterTileDefaultImageProvider:
    385:385:void <init>() -> <init>
    385:385:void <init>(com.android.contacts.ContactPhotoManager$1) -> <init>
    389:391:void applyDefaultImage(android.widget.ImageView,int,boolean,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> applyDefaultImage
    396:412:android.graphics.drawable.Drawable getDefaultImageForContact(android.content.res.Resources,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> getDefaultImageForContact
com.android.contacts.ContactPhotoManagerImpl -> com.android.contacts.ContactPhotoManagerImpl:
# {"id":"sourceFile","fileName":"ContactPhotoManager.java"}
    600:612:void <clinit>() -> <clinit>
    646:751:void <init>(android.content.Context) -> <init>
    583:583:java.lang.String access$1000(com.android.contacts.ContactPhotoManagerImpl) -> access$1000
    583:583:android.util.LruCache access$200(com.android.contacts.ContactPhotoManagerImpl) -> access$200
    583:583:int access$300(com.android.contacts.ContactPhotoManagerImpl) -> access$300
    583:583:android.content.Context access$400(com.android.contacts.ContactPhotoManagerImpl) -> access$400
    583:583:void access$500(com.android.contacts.ContactPhotoManagerImpl,java.util.Set,java.util.Set,java.util.Set) -> access$500
    583:583:java.lang.String[] access$600() -> access$600
    583:583:java.lang.String[] access$700() -> access$700
    583:583:void access$800(com.android.contacts.ContactPhotoManagerImpl,java.lang.Object,byte[],boolean,int) -> access$800
    583:583:android.os.Handler access$900(com.android.contacts.ContactPhotoManagerImpl) -> access$900
    1198:1217:void cacheBitmap(java.lang.Object,byte[],boolean,int) -> cacheBitmap
    1222:1231:void cacheBitmap(android.net.Uri,android.graphics.Bitmap,byte[]) -> cacheBitmap
    892:901:void cancelPendingRequests(android.view.View) -> cancelPendingRequests
    1081:1083:void clear() -> clear
    860:862:void createAndApplyDefaultImageForUri(android.widget.ImageView,android.net.Uri,int,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageProvider) -> createAndApplyDefaultImageForUri
    1140:1142:void ensureLoaderThread() -> ensureLoaderThread
    998:1005:android.graphics.drawable.Drawable getDrawableForBitmap(android.content.res.Resources,android.graphics.Bitmap,com.android.contacts.ContactPhotoManagerImpl$Request) -> getDrawableForBitmap
    1118:1130:boolean handleMessage(android.os.Message) -> handleMessage
    1015:1068:void inflateBitmap(com.android.contacts.ContactPhotoManagerImpl$BitmapHolder,int) -> inflateBitmap
    907:909:boolean isChildView(android.view.View,android.view.View) -> isChildView
    933:990:boolean loadCachedPhoto(android.widget.ImageView,com.android.contacts.ContactPhotoManagerImpl$Request,boolean) -> loadCachedPhoto
    843:852:void loadPhoto(android.widget.ImageView,android.net.Uri,int,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageRequest,com.android.contacts.ContactPhotoManager$DefaultImageProvider) -> loadPhoto
    866:873:void loadPhotoByIdOrUri(android.widget.ImageView,com.android.contacts.ContactPhotoManagerImpl$Request) -> loadPhotoByIdOrUri
    828:832:void loadThumbnail(android.widget.ImageView,long,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageRequest,com.android.contacts.ContactPhotoManager$DefaultImageProvider) -> loadThumbnail
    1240:1278:void obtainPhotoIdsAndUrisToLoad(java.util.Set,java.util.Set,java.util.Set) -> obtainPhotoIdsAndUrisToLoad
    813:813:void onTrimMemory(int) -> onTrimMemory
    1088:1088:void pause() -> pause
    819:820:void preloadPhotosInBackground() -> preloadPhotosInBackground
    1151:1165:void processLoadedImages() -> processLoadedImages
    914:922:void refreshCache() -> refreshCache
    880:881:void removePhoto(android.widget.ImageView) -> removePhoto
    1107:1109:void requestLoading() -> requestLoading
    1093:1096:void resume() -> resume
    1174:1175:void softenCache() -> softenCache
com.android.contacts.ContactPhotoManagerImpl$1 -> com.android.contacts.ContactPhotoManagerImpl$1:
# {"id":"sourceFile","fileName":"ContactPhotoManager.java"}
    717:717:void <init>(com.android.contacts.ContactPhotoManagerImpl,int) -> <init>
    717:717:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    717:717:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    719:719:int sizeOf(java.lang.Object,android.graphics.Bitmap) -> sizeOf
com.android.contacts.ContactPhotoManagerImpl$2 -> com.android.contacts.ContactPhotoManagerImpl$2:
# {"id":"sourceFile","fileName":"ContactPhotoManager.java"}
    728:728:void <init>(com.android.contacts.ContactPhotoManagerImpl,int) -> <init>
    728:728:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    728:728:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    730:730:int sizeOf(java.lang.Object,com.android.contacts.ContactPhotoManagerImpl$BitmapHolder) -> sizeOf
com.android.contacts.ContactPhotoManagerImpl$BitmapHolder -> com.android.contacts.ContactPhotoManagerImpl$BitmapHolder:
# {"id":"sourceFile","fileName":"ContactPhotoManager.java"}
    627:630:void <init>(byte[],int) -> <init>
com.android.contacts.ContactPhotoManagerImpl$LoaderThread -> com.android.contacts.ContactPhotoManagerImpl$LoaderThread:
# {"id":"sourceFile","fileName":"ContactPhotoManager.java"}
    1306:1323:void <init>(com.android.contacts.ContactPhotoManagerImpl,android.content.ContentResolver) -> <init>
    1327:1328:void ensureHandler() -> ensureHandler
    1370:1375:boolean handleMessage(android.os.Message) -> handleMessage
    1464:1471:void loadPhotosInBackground() -> loadPhotosInBackground
    1476:1556:void loadThumbnails(boolean) -> loadThumbnails
    1564:1623:void loadUriBasedPhotos() -> loadUriBasedPhotos
    1388:1433:void preloadPhotosInBackground() -> preloadPhotosInBackground
    1439:1460:void queryPhotosForPreload() -> queryPhotosForPreload
    1359:1361:void requestLoading() -> requestLoading
    1340:1349:void requestPreloading() -> requestPreloading
com.android.contacts.ContactPhotoManagerImpl$Request -> com.android.contacts.ContactPhotoManagerImpl$Request:
# {"id":"sourceFile","fileName":"ContactPhotoManager.java"}
    1647:1654:void <init>(long,android.net.Uri,int,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageProvider,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> <init>
    1633:1633:boolean access$000(com.android.contacts.ContactPhotoManagerImpl$Request) -> access$000
    1633:1633:long access$100(com.android.contacts.ContactPhotoManagerImpl$Request) -> access$100
    1733:1746:void applyDefaultImage(android.widget.ImageView,boolean) -> applyDefaultImage
    1659:1659:com.android.contacts.ContactPhotoManagerImpl$Request createFromThumbnailId(long,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageProvider,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> createFromThumbnailId
    1665:1665:com.android.contacts.ContactPhotoManagerImpl$Request createFromUri(android.net.Uri,int,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageProvider) -> createFromUri
    1672:1672:com.android.contacts.ContactPhotoManagerImpl$Request createFromUri(android.net.Uri,int,boolean,boolean,com.android.contacts.ContactPhotoManager$DefaultImageProvider,com.android.contacts.ContactPhotoManager$DefaultImageRequest) -> createFromUri
    1706:1710:boolean equals(java.lang.Object) -> equals
    1685:1685:long getId() -> getId
    1719:1719:java.lang.Object getKey() -> getKey
    1689:1689:int getRequestedExtent() -> getRequestedExtent
    1681:1681:android.net.Uri getUri() -> getUri
    1696:1698:int hashCode() -> hashCode
    1677:1677:boolean isUriRequest() -> isUriRequest
com.android.contacts.ContactPresenceIconUtil -> com.android.contacts.ContactPresenceIconUtil:
    40:41:android.graphics.drawable.Drawable getPresenceIcon(android.content.Context,int) -> getPresenceIcon
com.android.contacts.ContactSaveService -> com.android.contacts.ContactSaveService:
    170:202:void <clinit>() -> <clinit>
    209:211:void <init>() -> <init>
    963:1007:void addMembersToGroup(android.content.ContentResolver,long[],long) -> addMembersToGroup
    683:694:int applyDiffSubset(java.util.ArrayList,int,android.content.ContentProviderResult[],android.content.ContentResolver) -> applyDiffSubset
    1521:1532:boolean applyOperations(android.content.ContentResolver,java.util.ArrayList) -> applyOperations
    1719:1724:void buildJoinContactDiff(java.util.ArrayList,long,long) -> buildJoinContactDiff
    1734:1742:void buildSplitContactDiff(java.util.ArrayList,long,long,boolean) -> buildSplitContactDiff
    1317:1332:boolean buildSplitTwoContacts(java.util.ArrayList,long[],long[],boolean) -> buildSplitTwoContacts
    230:230:boolean canUndo(android.content.Intent) -> canUndo
    1156:1167:void clearPrimary(android.content.Intent) -> clearPrimary
    1149:1151:android.content.Intent createClearPrimaryIntent(android.content.Context,long) -> createClearPrimaryIntent
    1175:1177:android.content.Intent createDeleteContactIntent(android.content.Context,android.net.Uri) -> createDeleteContactIntent
    1186:1189:android.content.Intent createDeleteMultipleContactsIntent(android.content.Context,long[],java.lang.String[]) -> createDeleteMultipleContactsIntent
    777:810:void createGroup(android.content.Intent) -> createGroup
    854:856:android.content.Intent createGroupDeletionIntent(android.content.Context,long) -> createGroupDeletionIntent
    818:826:android.content.Intent createGroupRenameIntent(android.content.Context,long,java.lang.String,java.lang.Class,java.lang.String) -> createGroupRenameIntent
    912:923:android.content.Intent createGroupUpdateIntent(android.content.Context,long,java.lang.String,long[],long[],java.lang.Class,java.lang.String) -> createGroupUpdateIntent
    1259:1262:android.content.Intent createHardSplitContactIntent(android.content.Context,long[][]) -> createHardSplitContactIntent
    1345:1353:android.content.Intent createJoinContactsIntent(android.content.Context,long,long,java.lang.Class,java.lang.String) -> createJoinContactsIntent
    1364:1367:android.content.Intent createJoinSeveralContactsIntent(android.content.Context,long[],android.support.v4.os.ResultReceiver) -> createJoinSeveralContactsIntent
    1376:1376:android.content.Intent createJoinSeveralContactsIntent(android.content.Context,long[]) -> createJoinSeveralContactsIntent
    759:771:android.content.Intent createNewGroupIntent(android.content.Context,com.android.contacts.model.account.AccountWithDataSet,java.lang.String,long[],java.lang.Class,java.lang.String) -> createNewGroupIntent
    372:388:android.content.Intent createNewRawContactIntent(android.content.Context,java.util.ArrayList,com.android.contacts.model.account.AccountWithDataSet,java.lang.Class,java.lang.String) -> createNewRawContactIntent
    393:427:void createRawContact(android.content.Intent) -> createRawContact
    442:444:android.content.Intent createSaveContactIntent(android.content.Context,com.android.contacts.model.RawContactDeltaList,java.lang.String,int,boolean,java.lang.Class,java.lang.String,long,android.net.Uri) -> createSaveContactIntent
    463:484:android.content.Intent createSaveContactIntent(android.content.Context,com.android.contacts.model.RawContactDeltaList,java.lang.String,int,boolean,java.lang.Class,java.lang.String,android.os.Bundle,java.lang.String,java.lang.Long) -> createSaveContactIntent
    1103:1106:android.content.Intent createSetRingtone(android.content.Context,android.net.Uri,java.lang.String) -> createSetRingtone
    1077:1080:android.content.Intent createSetSendToVoicemail(android.content.Context,android.net.Uri,boolean) -> createSetSendToVoicemail
    1032:1035:android.content.Intent createSetStarredIntent(android.content.Context,android.net.Uri,boolean) -> createSetStarredIntent
    1127:1129:android.content.Intent createSetSuperPrimaryIntent(android.content.Context,long) -> createSetSuperPrimaryIntent
    1753:1754:android.content.Intent createSleepIntent(android.content.Context,long) -> createSleepIntent
    1246:1249:android.content.Intent createSplitContactIntent(android.content.Context,long[][],android.support.v4.os.ResultReceiver) -> createSplitContactIntent
    880:882:android.content.Intent createUndoIntent(android.content.Context,android.content.Intent) -> createUndoIntent
    1194:1200:void deleteContact(android.content.Intent) -> deleteContact
    862:876:void deleteGroup(android.content.Intent) -> deleteGroup
    1204:1230:void deleteMultipleContacts(android.content.Intent) -> deleteMultipleContacts
    1802:1802:void deliverCallback(android.content.Intent) -> deliverCallback
    1815:1818:void deliverCallbackOnUiThread(android.content.Intent) -> deliverCallbackOnUiThread
    731:738:long getInsertedRawContactId(java.util.ArrayList,android.content.ContentProviderResult[]) -> getInsertedRawContactId
    715:720:long getRawContactId(com.android.contacts.model.RawContactDeltaList,java.util.ArrayList,android.content.ContentProviderResult[]) -> getRawContactId
    1633:1658:long[] getRawContactIds(long) -> getRawContactIds
    1667:1706:long[] getRawContactIdsForAggregation(long[]) -> getRawContactIdsForAggregation
    1711:1711:long[] getRawContactIdsForAggregation(long,long) -> getRawContactIdsForAggregation
    1620:1622:long[][] getSeparatedRawContactIds(long[]) -> getSeparatedRawContactIds
    238:238:com.android.contacts.ContactSaveService$State getState() -> getState
    287:292:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    1538:1610:void joinContacts(android.content.Intent) -> joinContacts
    1408:1473:void joinSeveralContacts(android.content.Intent) -> joinSeveralContacts
    242:243:void notifyStateChanged() -> notifyStateChanged
    216:218:void onCreate() -> onCreate
    307:362:void onHandleIntent(android.content.Intent) -> onHandleIntent
    299:301:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    1479:1513:java.lang.String queryNameOfLinkedContacts(long[]) -> queryNameOfLinkedContacts
    222:226:void registerListener(com.android.contacts.ContactSaveService$Listener) -> registerListener
    1017:1024:void removeMembersFromGroup(android.content.ContentResolver,long[],long) -> removeMembersFromGroup
    832:847:void renameGroup(android.content.Intent) -> renameGroup
    490:670:void saveContact(android.content.Intent) -> saveContact
    702:706:boolean saveUpdatedPhoto(long,android.net.Uri,int) -> saveUpdatedPhoto
    1112:1120:void setRingtone(android.content.Intent) -> setRingtone
    1086:1095:void setSendToVoicemail(android.content.Intent) -> setSendToVoicemail
    1041:1069:void setStarred(android.content.Intent) -> setStarred
    1134:1140:void setSuperPrimary(android.content.Intent) -> setSuperPrimary
    1778:1779:void showToast(int,java.lang.Object[]) -> showToast
    1792:1792:void showToast(int) -> showToast
    1758:1768:void sleepForDebugging(android.content.Intent) -> sleepForDebugging
    1268:1305:void splitContact(android.content.Intent) -> splitContact
    252:268:boolean startService(android.content.Context,android.content.Intent,int) -> startService
    279:281:void startService(android.content.Context,android.content.Intent) -> startService
    887:889:void undo(android.content.Intent) -> undo
    234:234:void unregisterListener(com.android.contacts.ContactSaveService$Listener) -> unregisterListener
    929:955:void updateGroup(android.content.Intent) -> updateGroup
com.android.contacts.ContactSaveService$1 -> com.android.contacts.ContactSaveService$1:
    1230:1230:void <init>(com.android.contacts.ContactSaveService,java.lang.String) -> <init>
    1233:1234:void run() -> run
com.android.contacts.ContactSaveService$2 -> com.android.contacts.ContactSaveService$2:
    1779:1779:void <init>(com.android.contacts.ContactSaveService,java.lang.String) -> <init>
    1782:1782:void run() -> run
com.android.contacts.ContactSaveService$3 -> com.android.contacts.ContactSaveService$3:
    1792:1792:void <init>(com.android.contacts.ContactSaveService,int) -> <init>
    1796:1796:void run() -> run
com.android.contacts.ContactSaveService$4 -> com.android.contacts.ContactSaveService$4:
    1802:1802:void <init>(com.android.contacts.ContactSaveService,android.content.Intent) -> <init>
    1806:1806:void run() -> run
com.android.contacts.ContactSaveService$ContactEntityQuery -> com.android.contacts.ContactSaveService$ContactEntityQuery:
    1392:1392:void <clinit>() -> <clinit>
com.android.contacts.ContactSaveService$GroupsDaoImpl -> com.android.contacts.ContactSaveService$GroupsDaoImpl:
    1840:1840:void <init>(android.content.Context) -> <init>
    1843:1845:void <init>(android.content.Context,android.content.ContentResolver) -> <init>
    1849:1881:android.os.Bundle captureDeletionUndoData(android.net.Uri) -> captureDeletionUndoData
    1913:1918:android.net.Uri create(java.lang.String,com.android.contacts.model.account.AccountWithDataSet) -> create
    1922:1922:int delete(android.net.Uri) -> delete
    1886:1906:android.net.Uri undoDeletion(android.os.Bundle) -> undoDeletion
com.android.contacts.ContactSaveService$JoinContactQuery -> com.android.contacts.ContactSaveService$JoinContactQuery:
    1380:1380:void <clinit>() -> <clinit>
com.android.contacts.ContactSaveService$State -> com.android.contacts.ContactSaveService$State:
    1933:1934:void <init>() -> <init>
    1937:1938:void <init>(java.util.Collection) -> <init>
    1930:1930:void access$000(com.android.contacts.ContactSaveService$State,android.content.Intent) -> access$000
    1930:1930:void access$100(com.android.contacts.ContactSaveService$State,android.content.Intent) -> access$100
    1946:1946:android.content.Intent getCurrentIntent() -> getCurrentIntent
    1954:1955:android.content.Intent getNextIntentWithAction(java.lang.String) -> getNextIntentWithAction
    1963:1963:boolean isActionPending(java.lang.String) -> isActionPending
    1942:1942:boolean isIdle() -> isIdle
    1967:1972:void onFinish(android.content.Intent) -> onFinish
    1977:1980:void onStart(android.content.Intent) -> onStart
com.android.contacts.ContactStatusUtil -> com.android.contacts.ContactStatusUtil:
    31:39:java.lang.String getStatusString(android.content.Context,int) -> getStatusString
com.android.contacts.ContactsActivity -> com.android.contacts.ContactsActivity:
    34:34:void <init>() -> <init>
    42:51:android.content.ContentResolver getContentResolver() -> getContentResolver
    56:64:android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    69:74:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    79:80:void onCreate(android.os.Bundle) -> onCreate
    85:86:void onDestroy() -> onDestroy
    91:91:void onServiceCompleted(android.content.Intent) -> onServiceCompleted
com.android.contacts.ContactsApplication -> com.android.contacts.ContactsApplication:
    38:38:void <init>() -> <init>
    63:69:android.content.ContentResolver getContentResolver() -> getContentResolver
    58:58:com.android.contacts.testing.InjectedServices getInjectedServices() -> getInjectedServices
    74:81:android.content.SharedPreferences getSharedPreferences(java.lang.String,int) -> getSharedPreferences
    86:93:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    54:54:void injectServices(com.android.contacts.testing.InjectedServices) -> injectServices
    98:120:void onCreate() -> onCreate
com.android.contacts.ContactsApplication$DelayedInitializer -> com.android.contacts.ContactsApplication$DelayedInitializer:
    123:123:void <init>(com.android.contacts.ContactsApplication) -> <init>
    123:123:void <init>(com.android.contacts.ContactsApplication,com.android.contacts.ContactsApplication$1) -> <init>
    123:123:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    126:132:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    138:138:void execute() -> execute
com.android.contacts.ContactsJobService -> com.android.contacts.ContactsJobService:
    24:24:void <init>() -> <init>
    30:32:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
com.android.contacts.ContactsUtils -> com.android.contacts.ContactsUtils:
    49:49:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    136:136:boolean areIntentActionEqual(android.content.Intent,android.content.Intent) -> areIntentActionEqual
    123:123:boolean areObjectsEqual(java.lang.Object,java.lang.Object) -> areObjectsEqual
    189:223:android.util.Pair buildImIntent(android.content.Context,com.android.contacts.model.dataitem.ImDataItem) -> buildImIntent
    258:263:long determineUserType(java.lang.Long,java.lang.Long) -> determineUserType
    163:178:android.content.Intent getCustomImIntent(com.android.contacts.model.dataitem.ImDataItem,int) -> getCustomImIntent
    145:159:int getThumbnailSize(android.content.Context) -> getThumbnailSize
    116:116:boolean isGraphic(java.lang.CharSequence) -> isGraphic
com.android.contacts.DynamicShortcuts -> com.android.contacts.DynamicShortcuts:
    101:101:void <clinit>() -> <clinit>
    117:119:void <init>(android.content.Context) -> <init>
    109:137:void <init>(android.content.Context,android.content.ContentResolver,android.content.pm.ShortcutManager,android.app.job.JobScheduler) -> <init>
    331:334:void addIconForContact(android.database.Cursor,android.content.pm.ShortcutInfo$Builder) -> addIconForContact
    339:350:void addIconForContact(long,java.lang.String,java.lang.String,android.content.pm.ShortcutInfo$Builder) -> addIconForContact
    264:267:android.content.pm.ShortcutInfo$Builder builderForContactShortcut(android.database.Cursor) -> builderForContactShortcut
    275:285:android.content.pm.ShortcutInfo$Builder builderForContactShortcut(long,java.lang.String,java.lang.String) -> builderForContactShortcut
    209:218:android.content.pm.ShortcutInfo createShortcutForUri(android.net.Uri) -> createShortcutForUri
    254:259:android.content.pm.ShortcutInfo createShortcutFromRow(android.database.Cursor) -> createShortcutFromRow
    376:411:android.graphics.Bitmap decodeStreamForShortcut(java.io.InputStream) -> decodeStreamForShortcut
    294:304:android.content.pm.ShortcutInfo getActionShortcutInfo(java.lang.String,java.lang.String,android.content.Intent,android.graphics.drawable.Icon) -> getActionShortcutInfo
    354:372:android.graphics.Bitmap getContactPhoto(long) -> getContactPhoto
    419:434:android.graphics.Bitmap getFallbackAvatar(java.lang.String,java.lang.String) -> getFallbackAvatar
    308:313:android.content.pm.ShortcutInfo getQuickContactShortcutInfo(long,java.lang.String,java.lang.String) -> getQuickContactShortcutInfo
    225:247:java.util.List getStrequentShortcuts() -> getStrequentShortcuts
    440:441:void handleFlagDisabled() -> handleFlagDisabled
    526:526:boolean hasRequiredPermissions() -> hasRequiredPermissions
    480:510:void initialize(android.content.Context) -> initialize
    543:544:boolean isJobScheduled(android.content.Context) -> isJobScheduled
    155:162:void refresh() -> refresh
    445:455:void removeAllShortcuts() -> removeAllShortcuts
    548:551:void reportShortcutUsed(android.content.Context,java.lang.String) -> reportShortcutUsed
    515:521:void reset(android.content.Context) -> reset
    461:472:void scheduleUpdateJob() -> scheduleUpdateJob
    317:326:void setLabel(android.content.pm.ShortcutInfo$Builder,java.lang.String) -> setLabel
    148:148:void setLongLabelMaxLength(int) -> setLongLabelMaxLength
    143:143:void setShortLabelMaxLength(int) -> setShortLabelMaxLength
    530:537:void updateFromJob(android.app.job.JobService,android.app.job.JobParameters) -> updateFromJob
    476:476:void updateInBackground() -> updateInBackground
    167:205:void updatePinned() -> updatePinned
com.android.contacts.DynamicShortcuts$1 -> com.android.contacts.DynamicShortcuts$1:
    530:530:void <init>(com.android.contacts.DynamicShortcuts,android.app.job.JobService,android.app.job.JobParameters) -> <init>
    530:530:void onPostExecute(java.lang.Object) -> onPostExecute
    534:535:void onPostExecute(java.lang.Void) -> onPostExecute
com.android.contacts.DynamicShortcuts$PermissionsGrantedReceiver -> com.android.contacts.DynamicShortcuts$PermissionsGrantedReceiver:
    578:578:void <init>() -> <init>
    578:578:void <init>(com.android.contacts.DynamicShortcuts$1) -> <init>
    582:583:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.DynamicShortcuts$ShortcutUpdateTask -> com.android.contacts.DynamicShortcuts$ShortcutUpdateTask:
    557:558:void <init>(com.android.contacts.DynamicShortcuts) -> <init>
    554:554:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    563:563:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    554:554:void onPostExecute(java.lang.Object) -> onPostExecute
    569:574:void onPostExecute(java.lang.Void) -> onPostExecute
com.android.contacts.GeoUtil -> com.android.contacts.GeoUtil:
    45:45:java.lang.String getCurrentCountryIso(android.content.Context) -> getCurrentCountryIso
    49:55:java.lang.String getGeocodedLocationFor(android.content.Context,java.lang.String) -> getGeocodedLocationFor
com.android.contacts.GroupListLoader -> com.android.contacts.GroupListLoader:
    32:52:void <clinit>() -> <clinit>
    55:60:void <init>(android.content.Context) -> <init>
com.android.contacts.GroupMetaDataLoader -> com.android.contacts.GroupMetaDataLoader:
    31:31:void <clinit>() -> <clinit>
    54:55:void <init>(android.content.Context,android.net.Uri) -> <init>
    59:60:void <init>(android.content.Context,android.net.Uri,java.lang.String) -> <init>
    70:73:android.net.Uri ensureIsGroupUri(android.net.Uri) -> ensureIsGroupUri
com.android.contacts.MoreContactUtils -> com.android.contacts.MoreContactUtils:
    39:39:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    198:199:android.widget.TextView createHeaderView(android.content.Context,int) -> createHeaderView
    229:240:android.content.Intent getInvitableIntent(com.android.contacts.model.account.AccountType,android.net.Uri) -> getInvitableIntent
    183:189:android.graphics.Rect getTargetRectFromView(android.view.View) -> getTargetRectFromView
    211:218:void setHeaderViewBottomPadding(android.content.Context,android.widget.TextView,boolean) -> setHeaderViewBottomPadding
    50:65:boolean shouldCollapse(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence) -> shouldCollapse
    73:168:boolean shouldCollapsePhoneNumbers(java.lang.String,java.lang.String) -> shouldCollapsePhoneNumbers
com.android.contacts.MoreContactUtils$1 -> com.android.contacts.MoreContactUtils$1:
    95:95:void <clinit>() -> <clinit>
com.android.contacts.NfcHandler -> com.android.contacts.NfcHandler:
    59:61:void <init>(android.content.Context,android.net.Uri) -> <init>
    66:98:android.nfc.NdefMessage createNdefMessage(android.nfc.NfcEvent) -> createNdefMessage
    52:56:void register(android.app.Activity,android.net.Uri) -> register
com.android.contacts.NonPhoneActivity -> com.android.contacts.NonPhoneActivity:
    40:40:void <init>() -> <init>
    63:68:java.lang.String getPhoneNumber() -> getPhoneNumber
    46:59:void onCreate(android.os.Bundle) -> onCreate
com.android.contacts.NonPhoneActivity$NonPhoneDialogFragment -> com.android.contacts.NonPhoneActivity$NonPhoneDialogFragment:
    71:71:void <init>() -> <init>
    99:99:java.lang.String getArgumentPhoneNumber() -> getArgumentPhoneNumber
    90:95:void onClick(android.content.DialogInterface,int) -> onClick
    76:83:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    104:108:void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.contacts.R$styleable -> com.android.contacts.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
com.android.contacts.ShortcutIntentBuilder -> com.android.contacts.ShortcutIntentBuilder:
    62:88:void <clinit>() -> <clinit>
    127:139:void <init>(android.content.Context,com.android.contacts.ShortcutIntentBuilder$OnShortcutIntentCreatedListener) -> <init>
    60:60:android.content.Context access$000(com.android.contacts.ShortcutIntentBuilder) -> access$000
    60:60:java.lang.String[] access$100() -> access$100
    60:60:java.lang.String[] access$200() -> access$200
    60:60:void access$300(com.android.contacts.ShortcutIntentBuilder,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,byte[]) -> access$300
    60:60:java.lang.String[] access$400() -> access$400
    60:60:void access$500(com.android.contacts.ShortcutIntentBuilder,android.net.Uri,java.lang.String,java.lang.String,byte[],java.lang.String,int,java.lang.String,java.lang.String) -> access$500
    143:143:void createContactShortcutIntent(android.net.Uri) -> createContactShortcutIntent
    279:310:void createContactShortcutIntent(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,byte[]) -> createContactShortcutIntent
    147:147:void createPhoneNumberShortcutIntent(android.net.Uri,java.lang.String) -> createPhoneNumberShortcutIntent
    316:366:void createPhoneNumberShortcutIntent(android.net.Uri,java.lang.String,java.lang.String,byte[],java.lang.String,int,java.lang.String,java.lang.String) -> createPhoneNumberShortcutIntent
    404:468:android.graphics.Bitmap generatePhoneNumberIcon(android.graphics.drawable.Drawable,int,java.lang.String,int) -> generatePhoneNumberIcon
    371:393:android.graphics.Bitmap generateQuickContactIcon(android.graphics.drawable.Drawable) -> generateQuickContactIcon
    262:271:android.graphics.drawable.Drawable getPhotoDrawable(byte[],java.lang.String,java.lang.String) -> getPhotoDrawable
com.android.contacts.ShortcutIntentBuilder$ContactLoadingAsyncTask -> com.android.contacts.ShortcutIntentBuilder$ContactLoadingAsyncTask:
    196:197:void <init>(com.android.contacts.ShortcutIntentBuilder,android.net.Uri) -> <init>
    202:213:void loadData() -> loadData
    195:195:void onPostExecute(java.lang.Object) -> onPostExecute
    218:218:void onPostExecute(java.lang.Void) -> onPostExecute
com.android.contacts.ShortcutIntentBuilder$LoadingAsyncTask -> com.android.contacts.ShortcutIntentBuilder$LoadingAsyncTask:
    161:162:void <init>(com.android.contacts.ShortcutIntentBuilder,android.net.Uri) -> <init>
    153:153:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    167:169:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    176:190:void loadPhoto() -> loadPhoto
com.android.contacts.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask -> com.android.contacts.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask:
    228:230:void <init>(com.android.contacts.ShortcutIntentBuilder,android.net.Uri,java.lang.String) -> <init>
    235:249:void loadData() -> loadData
    222:222:void onPostExecute(java.lang.Object) -> onPostExecute
    255:255:void onPostExecute(java.lang.Void) -> onPostExecute
com.android.contacts.SimImportFragment -> com.android.contacts.SimImportFragment:
    71:91:void <init>() -> <init>
    71:71:void access$000(com.android.contacts.SimImportFragment) -> access$000
    71:71:com.android.contacts.SimImportFragment$SimContactAdapter access$100(com.android.contacts.SimImportFragment) -> access$100
    71:71:void access$200(com.android.contacts.SimImportFragment) -> access$200
    71:71:void access$300(com.android.contacts.SimImportFragment) -> access$300
    71:71:void access$400(com.android.contacts.SimImportFragment) -> access$400
    314:317:android.content.Context getContext() -> getContext
    291:301:void importCurrentSelections() -> importCurrentSelections
    350:353:com.android.contacts.SimImportFragment newInstance(int) -> newInstance
    111:112:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    97:106:void onCreate(android.os.Bundle) -> onCreate
    242:242:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    119:169:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    305:309:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:71:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    248:258:void onLoadFinished(android.content.Loader,com.android.contacts.SimImportFragment$LoaderResult) -> onLoadFinished
    232:237:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    327:334:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    224:226:void onStart() -> onStart
    175:181:void rememberSelectionsForCurrentAccount() -> rememberSelectionsForCurrentAccount
    266:275:void restoreAdapterSelectedStates(java.util.List) -> restoreAdapterSelectedStates
    279:286:void saveAdapterSelectedStates(android.os.Bundle) -> saveAdapterSelectedStates
    197:198:void selectAll() -> selectAll
    185:192:void showSelectionsForCurrentAccount() -> showSelectionsForCurrentAccount
    206:218:void updateToolbarWithCurrentSelections() -> updateToolbarWithCurrentSelections
com.android.contacts.SimImportFragment$1 -> com.android.contacts.SimImportFragment$1:
    133:133:void <init>(com.android.contacts.SimImportFragment) -> <init>
    136:139:void onChange(com.android.contacts.editor.AccountHeaderPresenter) -> onChange
com.android.contacts.SimImportFragment$2 -> com.android.contacts.SimImportFragment$2:
    150:150:void <init>(com.android.contacts.SimImportFragment) -> <init>
    153:156:void onClick(android.view.View) -> onClick
com.android.contacts.SimImportFragment$3 -> com.android.contacts.SimImportFragment$3:
    161:161:void <init>(com.android.contacts.SimImportFragment) -> <init>
    164:165:void onClick(android.view.View) -> onClick
com.android.contacts.SimImportFragment$LoaderResult -> com.android.contacts.SimImportFragment$LoaderResult:
    497:497:void <init>() -> <init>
com.android.contacts.SimImportFragment$SimContactAdapter -> com.android.contacts.SimImportFragment$SimContactAdapter:
    363:364:void <init>(android.content.Context) -> <init>
    423:423:boolean existsInCurrentAccount(int) -> existsInCurrentAccount
    427:430:boolean existsInCurrentAccount(com.android.contacts.model.SimContact) -> existsInCurrentAccount
    419:419:com.android.contacts.model.account.AccountWithDataSet getAccount() -> getAccount
    371:374:long getItemId(int) -> getItemId
    434:439:java.lang.String getItemLabel(com.android.contacts.model.SimContact) -> getItemLabel
    389:389:int getItemViewType(int) -> getItemViewType
    395:402:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    414:415:void setAccount(com.android.contacts.model.account.AccountWithDataSet) -> setAccount
    408:410:void setData(com.android.contacts.SimImportFragment$LoaderResult) -> setData
com.android.contacts.SimImportFragment$SimContactLoader -> com.android.contacts.SimImportFragment$SimContactLoader:
    454:457:void <init>(android.content.Context,int) -> <init>
    448:448:com.android.contacts.SimImportFragment$LoaderResult access$500(com.android.contacts.SimImportFragment$SimContactLoader) -> access$500
    462:480:com.google.common.util.concurrent.ListenableFuture loadData() -> loadData
    484:492:com.android.contacts.SimImportFragment$LoaderResult loadFromSim() -> loadFromSim
com.android.contacts.SimImportFragment$SimContactLoader$1 -> com.android.contacts.SimImportFragment$SimContactLoader$1:
    466:466:void <init>(com.android.contacts.SimImportFragment$SimContactLoader) -> <init>
    466:466:java.lang.Object call() -> call
    469:469:com.android.contacts.SimImportFragment$LoaderResult call() -> call
com.android.contacts.SimImportFragment$SimContactLoader$2 -> com.android.contacts.SimImportFragment$SimContactLoader$2:
    472:472:void <init>(com.android.contacts.SimImportFragment$SimContactLoader) -> <init>
    472:472:java.lang.Object apply(java.lang.Object) -> apply
    475:477:com.android.contacts.SimImportFragment$LoaderResult apply(java.util.List) -> apply
com.android.contacts.SimImportService -> com.android.contacts.SimImportService:
    82:100:void <clinit>() -> <clinit>
    51:95:void <init>() -> <init>
    51:51:java.util.List access$000() -> access$000
    51:51:boolean access$100(com.android.contacts.model.SimCard) -> access$100
    51:51:android.app.Notification access$300(com.android.contacts.SimImportService) -> access$300
    51:51:android.app.Notification access$400(com.android.contacts.SimImportService) -> access$400
    51:51:android.app.Notification access$500(com.android.contacts.SimImportService) -> access$500
    51:51:void access$600(com.android.contacts.SimImportService) -> access$600
    177:186:com.android.contacts.SimImportService$ImportTask createTaskForIntent(android.content.Intent,int) -> createTaskForIntent
    193:202:android.app.Notification getCompletedNotification() -> getCompletedNotification
    206:216:android.app.Notification getFailedNotification() -> getFailedNotification
    220:228:android.app.Notification getImportingNotification() -> getImportingNotification
    127:127:com.android.contacts.SimImportService$StatusProvider getStatusProvider() -> getStatusProvider
    118:119:boolean isImporting(com.android.contacts.model.SimCard) -> isImporting
    232:232:void notifyStateChanged() -> notifyStateChanged
    172:173:void onDestroy() -> onDestroy
    158:166:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    143:146:void startImport(android.content.Context,int,java.util.ArrayList,com.android.contacts.model.account.AccountWithDataSet) -> startImport
com.android.contacts.SimImportService$1 -> com.android.contacts.SimImportService$1:
    100:100:void <init>() -> <init>
    108:108:boolean isImporting(com.android.contacts.model.SimCard) -> isImporting
    103:103:boolean isRunning() -> isRunning
com.android.contacts.SimImportService$ImportTask -> com.android.contacts.SimImportService$ImportTask:
    270:277:void <init>(com.android.contacts.SimImportService,com.android.contacts.model.SimCard,java.util.List,com.android.contacts.model.account.AccountWithDataSet,com.android.contacts.database.SimContactDao,int) -> <init>
    260:260:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    288:304:java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    308:308:com.android.contacts.model.SimCard getSim() -> getSim
    260:260:void onPostExecute(java.lang.Object) -> onPostExecute
    313:345:void onPostExecute(java.lang.Boolean) -> onPostExecute
    282:283:void onPreExecute() -> onPreExecute
com.android.contacts.SimImportService$StopTask -> com.android.contacts.SimImportService$StopTask:
    239:239:void <init>(android.app.Service,int,com.android.contacts.SimImportService$1) -> <init>
    243:245:void <init>(android.app.Service,int) -> <init>
    239:239:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    239:239:void onPostExecute(java.lang.Object) -> onPostExecute
    255:256:void onPostExecute(java.lang.Void) -> onPostExecute
com.android.contacts.ViewNotificationService -> com.android.contacts.ViewNotificationService:
    35:35:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    34:34:java.lang.String access$000() -> access$000
    45:67:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
com.android.contacts.ViewNotificationService$1 -> com.android.contacts.ViewNotificationService$1:
    46:46:void <init>(com.android.contacts.ViewNotificationService,int) -> <init>
    46:46:void onLoadComplete(android.content.Loader,java.lang.Object) -> onLoadComplete
    50:63:void onLoadComplete(android.content.Loader,com.android.contacts.model.Contact) -> onLoadComplete
com.android.contacts.activities.ActionBarAdapter -> com.android.contacts.activities.ActionBarAdapter:
    116:127:void <init>(android.app.Activity,com.android.contacts.activities.ActionBarAdapter$Listener,androidx.appcompat.app.ActionBar,androidx.appcompat.widget.Toolbar,int) -> <init>
    59:59:com.android.contacts.activities.ActionBarAdapter$Listener access$100(com.android.contacts.activities.ActionBarAdapter) -> access$100
    59:59:boolean access$1000(com.android.contacts.activities.ActionBarAdapter) -> access$1000
    59:59:android.app.Activity access$1100(com.android.contacts.activities.ActionBarAdapter) -> access$1100
    59:59:java.lang.String access$200(com.android.contacts.activities.ActionBarAdapter) -> access$200
    59:59:java.lang.String access$202(com.android.contacts.activities.ActionBarAdapter,java.lang.String) -> access$202
    59:59:boolean access$300(com.android.contacts.activities.ActionBarAdapter) -> access$300
    59:59:android.view.View access$400(com.android.contacts.activities.ActionBarAdapter) -> access$400
    59:59:void access$500(com.android.contacts.activities.ActionBarAdapter,boolean) -> access$500
    59:59:android.view.View access$600(com.android.contacts.activities.ActionBarAdapter) -> access$600
    59:59:android.widget.FrameLayout access$700(com.android.contacts.activities.ActionBarAdapter) -> access$700
    59:59:android.view.View access$800(com.android.contacts.activities.ActionBarAdapter) -> access$800
    59:59:androidx.appcompat.widget.Toolbar access$900(com.android.contacts.activities.ActionBarAdapter) -> access$900
    540:542:void addSearchContainer() -> addSearchContainer
    546:548:void addSelectionContainer() -> addSelectionContainer
    291:291:java.lang.String getQueryString() -> getQueryString
    139:139:android.view.View getSelectionContainer() -> getSelectionContainer
    197:211:void initialize(android.os.Bundle,com.android.contacts.list.ContactsRequest) -> initialize
    252:252:boolean isSearchMode() -> isSearchMode
    259:259:boolean isSelectionMode() -> isSelectionMode
    307:307:boolean isUpShowing() -> isUpShowing
    580:580:boolean onClose() -> onClose
    585:587:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    517:535:void runStatusBarAnimation(int) -> runStatusBarAnimation
    491:494:void setActionBarTitle(java.lang.String) -> setActionBarTitle
    591:592:void setFocusOnSearchView() -> setFocusOnSearchView
    216:216:void setListener(com.android.contacts.activities.ActionBarAdapter$Listener) -> setListener
    295:301:void setQueryString(java.lang.String) -> setQueryString
    263:279:void setSearchMode(boolean) -> setSearchMode
    481:487:void setSelectionCount(int) -> setSelectionCount
    284:286:void setSelectionMode(boolean) -> setSelectionMode
    135:135:void setShowHomeAsUp(boolean) -> setShowHomeAsUp
    131:131:void setShowHomeIcon(boolean) -> setShowHomeIcon
    143:184:void setupSearchAndSelectionViews() -> setupSearchAndSelectionViews
    596:599:void showInputMethod(android.view.View) -> showInputMethod
    364:428:void update(boolean) -> update
    552:575:void updateDisplayOptions(boolean) -> updateDisplayOptions
    316:359:void updateDisplayOptionsInner() -> updateDisplayOptionsInner
    443:447:void updateOverflowButtonColor() -> updateOverflowButtonColor
    498:511:void updateStatusBarColor(boolean) -> updateStatusBarColor
com.android.contacts.activities.ActionBarAdapter$1 -> com.android.contacts.activities.ActionBarAdapter$1:
    159:159:void <init>(com.android.contacts.activities.ActionBarAdapter) -> <init>
    162:163:void onClick(android.view.View) -> onClick
com.android.contacts.activities.ActionBarAdapter$2 -> com.android.contacts.activities.ActionBarAdapter$2:
    171:171:void <init>(com.android.contacts.activities.ActionBarAdapter) -> <init>
    174:174:void onClick(android.view.View) -> onClick
com.android.contacts.activities.ActionBarAdapter$3 -> com.android.contacts.activities.ActionBarAdapter$3:
    185:185:void <init>(com.android.contacts.activities.ActionBarAdapter) -> <init>
    188:189:void onClick(android.view.View) -> onClick
com.android.contacts.activities.ActionBarAdapter$4 -> com.android.contacts.activities.ActionBarAdapter$4:
    408:408:void <init>(com.android.contacts.activities.ActionBarAdapter,boolean) -> <init>
    411:412:void run() -> run
com.android.contacts.activities.ActionBarAdapter$5 -> com.android.contacts.activities.ActionBarAdapter$5:
    428:428:void <init>(com.android.contacts.activities.ActionBarAdapter,boolean) -> <init>
    431:432:void run() -> run
com.android.contacts.activities.ActionBarAdapter$6 -> com.android.contacts.activities.ActionBarAdapter$6:
    448:448:void <init>(com.android.contacts.activities.ActionBarAdapter,android.view.ViewGroup,java.lang.String) -> <init>
    452:475:void onGlobalLayout() -> onGlobalLayout
com.android.contacts.activities.ActionBarAdapter$7 -> com.android.contacts.activities.ActionBarAdapter$7:
    527:527:void <init>(com.android.contacts.activities.ActionBarAdapter,android.view.Window) -> <init>
    530:530:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.contacts.activities.ActionBarAdapter$SearchTextWatcher -> com.android.contacts.activities.ActionBarAdapter$SearchTextWatcher:
    219:219:void <init>(com.android.contacts.activities.ActionBarAdapter) -> <init>
    219:219:void <init>(com.android.contacts.activities.ActionBarAdapter,com.android.contacts.activities.ActionBarAdapter$1) -> <init>
    223:235:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.android.contacts.activities.AppCompatTransactionSafeActivity -> com.android.contacts.activities.AppCompatTransactionSafeActivity:
    27:27:void <init>() -> <init>
    64:64:boolean isSafeToCommitTransactions() -> isSafeToCommitTransactions
    33:34:void onCreate(android.os.Bundle) -> onCreate
    45:46:void onResume() -> onResume
    51:52:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    39:40:void onStart() -> onStart
com.android.contacts.activities.AttachPhotoActivity -> com.android.contacts.activities.AttachPhotoActivity:
    69:69:void <init>() -> <init>
    69:69:void access$000(com.android.contacts.activities.AttachPhotoActivity,com.android.contacts.model.Contact) -> access$000
    69:69:java.lang.String access$100() -> access$100
    69:69:void access$200(com.android.contacts.activities.AttachPhotoActivity,com.android.contacts.model.Contact,com.android.contacts.model.RawContactDeltaList,com.android.contacts.model.RawContactDelta) -> access$200
    391:391:void createNewRawContact(com.android.contacts.model.account.AccountWithDataSet) -> createNewRawContact
    243:246:android.content.pm.ResolveInfo getIntentHandler(android.content.Intent) -> getIntentHandler
    254:268:void loadContact(android.net.Uri,com.android.contacts.activities.AttachPhotoActivity$Listener) -> loadContact
    159:233:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    96:137:void onCreate(android.os.Bundle) -> onCreate
    142:150:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    283:298:void saveContact(com.android.contacts.model.Contact) -> saveContact
    305:356:void saveToContact(com.android.contacts.model.Contact,com.android.contacts.model.RawContactDeltaList,com.android.contacts.model.RawContactDelta) -> saveToContact
    360:381:void selectAccountAndCreateContact() -> selectAccountAndCreateContact
com.android.contacts.activities.AttachPhotoActivity$1 -> com.android.contacts.activities.AttachPhotoActivity$1:
    206:206:void <init>(com.android.contacts.activities.AttachPhotoActivity) -> <init>
    209:209:void onContactLoaded(com.android.contacts.model.Contact) -> onContactLoaded
com.android.contacts.activities.AttachPhotoActivity$2 -> com.android.contacts.activities.AttachPhotoActivity$2:
    233:233:void <init>(com.android.contacts.activities.AttachPhotoActivity) -> <init>
    236:236:void onContactLoaded(com.android.contacts.model.Contact) -> onContactLoaded
com.android.contacts.activities.AttachPhotoActivity$3 -> com.android.contacts.activities.AttachPhotoActivity$3:
    255:255:void <init>(com.android.contacts.activities.AttachPhotoActivity,com.android.contacts.activities.AttachPhotoActivity$Listener) -> <init>
    255:255:void onLoadComplete(android.content.Loader,java.lang.Object) -> onLoadComplete
    260:265:void onLoadComplete(android.content.Loader,com.android.contacts.model.Contact) -> onLoadComplete
com.android.contacts.activities.AttachPhotoActivity$4 -> com.android.contacts.activities.AttachPhotoActivity$4:
    391:391:void <init>(com.android.contacts.activities.AttachPhotoActivity,com.android.contacts.model.account.AccountWithDataSet) -> <init>
    394:403:void onContactLoaded(com.android.contacts.model.Contact) -> onContactLoaded
com.android.contacts.activities.ContactEditorAccountsChangedActivity -> com.android.contacts.activities.ContactEditorAccountsChangedActivity:
    52:70:void <init>() -> <init>
    52:52:com.android.contacts.util.AccountsListAdapter access$000(com.android.contacts.activities.ContactEditorAccountsChangedActivity) -> access$000
    52:52:void access$100(com.android.contacts.activities.ContactEditorAccountsChangedActivity,com.android.contacts.model.account.AccountWithDataSet) -> access$100
    232:232:void onAccountsLoaded(java.util.List) -> onAccountsLoaded
    110:116:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    96:98:void onCreate(android.os.Bundle) -> onCreate
    88:90:void onPause() -> onPause
    80:82:void onResume() -> onResume
    221:227:void saveAccountAndReturnResult(com.android.contacts.model.account.AccountWithDataSet) -> saveAccountAndReturnResult
    121:216:void updateDisplayedAccounts(java.util.List) -> updateDisplayedAccounts
com.android.contacts.activities.ContactEditorAccountsChangedActivity$1 -> com.android.contacts.activities.ContactEditorAccountsChangedActivity$1:
    60:60:void <init>(com.android.contacts.activities.ContactEditorAccountsChangedActivity) -> <init>
    63:66:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.contacts.activities.ContactEditorAccountsChangedActivity$2 -> com.android.contacts.activities.ContactEditorAccountsChangedActivity$2:
    70:70:void <init>(com.android.contacts.activities.ContactEditorAccountsChangedActivity) -> <init>
    73:74:void onClick(android.view.View) -> onClick
com.android.contacts.activities.ContactEditorAccountsChangedActivity$3 -> com.android.contacts.activities.ContactEditorAccountsChangedActivity$3:
    167:167:void <init>(com.android.contacts.activities.ContactEditorAccountsChangedActivity,com.android.contacts.model.account.AccountInfo) -> <init>
    170:170:void onClick(android.view.View) -> onClick
com.android.contacts.activities.ContactEditorAccountsChangedActivity$4 -> com.android.contacts.activities.ContactEditorAccountsChangedActivity$4:
    188:188:void <init>(com.android.contacts.activities.ContactEditorAccountsChangedActivity) -> <init>
    193:194:void onClick(android.view.View) -> onClick
com.android.contacts.activities.ContactEditorAccountsChangedActivity$5 -> com.android.contacts.activities.ContactEditorAccountsChangedActivity$5:
    209:209:void <init>(com.android.contacts.activities.ContactEditorAccountsChangedActivity) -> <init>
    212:212:void onCancel(android.content.DialogInterface) -> onCancel
com.android.contacts.activities.ContactEditorActivity -> com.android.contacts.activities.ContactEditorActivity:
    51:266:void <init>() -> <init>
    51:51:com.android.contacts.editor.ContactEditorFragment access$000(com.android.contacts.activities.ContactEditorActivity) -> access$000
    51:51:android.net.Uri access$100(com.android.contacts.activities.ContactEditorActivity) -> access$100
    51:51:android.net.Uri access$102(com.android.contacts.activities.ContactEditorActivity,android.net.Uri) -> access$102
    51:51:com.android.contacts.activities.ContactEditorActivity$EditorPhotoSelectionHandler access$202(com.android.contacts.activities.ContactEditorActivity,com.android.contacts.activities.ContactEditorActivity$EditorPhotoSelectionHandler) -> access$202
    51:51:boolean access$400(com.android.contacts.activities.ContactEditorActivity) -> access$400
    451:456:void changePhoto(int) -> changePhoto
    416:416:com.android.contacts.util.DialogManager getDialogManager() -> getDialogManager
    487:487:com.android.contacts.editor.ContactEditorFragment getEditorFragment() -> getEditorFragment
    480:483:com.android.contacts.detail.PhotoSelectionHandler getPhotoSelectionHandler() -> getPhotoSelectionHandler
    461:461:androidx.appcompat.widget.Toolbar getToolbar() -> getToolbar
    430:436:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    441:442:void onBackPressed() -> onBackPressed
    315:378:void onCreate(android.os.Bundle) -> onCreate
    407:410:android.app.Dialog onCreateDialog(int,android.os.Bundle) -> onCreateDialog
    384:401:void onNewIntent(android.content.Intent) -> onNewIntent
    476:476:void onPickFromGalleryChosen() -> onPickFromGalleryChosen
    466:466:void onRemovePictureChosen() -> onRemovePictureChosen
    421:425:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    471:471:void onTakePhotoChosen() -> onTakePhotoChosen
com.android.contacts.activities.ContactEditorActivity$1 -> com.android.contacts.activities.ContactEditorActivity$1:
    267:267:void <init>(com.android.contacts.activities.ContactEditorActivity) -> <init>
    299:299:void onContactNotFound() -> onContactNotFound
    293:294:void onContactSplit(android.net.Uri) -> onContactSplit
    271:271:void onDeleteRequested(android.net.Uri) -> onDeleteRequested
    305:309:void onEditOtherRawContactRequested(android.net.Uri,long,java.util.ArrayList) -> onEditOtherRawContactRequested
    277:277:void onReverted() -> onReverted
    282:288:void onSaveFinished(android.content.Intent) -> onSaveFinished
com.android.contacts.activities.ContactEditorActivity$EditorPhotoSelectionHandler -> com.android.contacts.activities.ContactEditorActivity$EditorPhotoSelectionHandler:
    233:241:void <init>(com.android.contacts.activities.ContactEditorActivity,int) -> <init>
    246:246:com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener getListener() -> getListener
    251:252:void startPhotoActivity(android.content.Intent,int,android.net.Uri) -> startPhotoActivity
com.android.contacts.activities.ContactEditorActivity$EditorPhotoSelectionHandler$EditorPhotoActionListener -> com.android.contacts.activities.ContactEditorActivity$EditorPhotoSelectionHandler$EditorPhotoActionListener:
    203:203:void <init>(com.android.contacts.activities.ContactEditorActivity$EditorPhotoSelectionHandler) -> <init>
    203:203:void <init>(com.android.contacts.activities.ContactEditorActivity$EditorPhotoSelectionHandler,com.android.contacts.activities.ContactEditorActivity$1) -> <init>
    223:223:android.net.Uri getCurrentPhotoUri() -> getCurrentPhotoUri
    212:218:void onPhotoSelected(android.net.Uri) -> onPhotoSelected
    207:207:void onRemovePictureChosen() -> onRemovePictureChosen
com.android.contacts.activities.ContactEditorSpringBoardActivity -> com.android.contacts.activities.ContactEditorSpringBoardActivity:
    37:58:void <init>() -> <init>
    37:37:android.net.Uri access$000(com.android.contacts.activities.ContactEditorSpringBoardActivity) -> access$000
    37:37:void access$100(com.android.contacts.activities.ContactEditorSpringBoardActivity) -> access$100
    37:37:com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata access$202(com.android.contacts.activities.ContactEditorSpringBoardActivity,com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata) -> access$202
    37:37:void access$300(com.android.contacts.activities.ContactEditorSpringBoardActivity) -> access$300
    220:222:android.content.Intent getIntentForRawContact(long) -> getIntentForRawContact
    286:288:long[][] getRawContactIds() -> getRawContactIds
    191:202:void loadEditor() -> loadEditor
    150:155:void maybeTrimReadOnly() -> maybeTrimReadOnly
    249:256:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    85:124:void onCreate(android.os.Bundle) -> onCreate
    137:142:void onLoad() -> onLoad
    130:130:void onPickRawContact(long) -> onPickRawContact
    281:282:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    275:276:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    270:270:void onSplitContactCanceled() -> onSplitContactCanceled
    262:265:void onSplitContactConfirmed(boolean) -> onSplitContactConfirmed
    209:211:void setHasWritableAccount() -> setHasWritableAccount
    162:182:void showDialog() -> showDialog
    230:235:void startEditorAndForwardExtras(android.content.Intent) -> startEditorAndForwardExtras
    239:242:void toastErrorAndFinish() -> toastErrorAndFinish
com.android.contacts.activities.ContactEditorSpringBoardActivity$1 -> com.android.contacts.activities.ContactEditorSpringBoardActivity$1:
    59:59:void <init>(com.android.contacts.activities.ContactEditorSpringBoardActivity) -> <init>
    63:63:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    59:59:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    70:74:void onLoadFinished(android.content.Loader,com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata) -> onLoadFinished
com.android.contacts.activities.ContactSelectionActivity -> com.android.contacts.activities.ContactSelectionActivity:
    85:95:void <init>() -> <init>
    73:73:com.android.contacts.list.MultiSelectContactsListFragment access$600(com.android.contacts.activities.ContactSelectionActivity) -> access$600
    73:73:void access$700(com.android.contacts.activities.ContactSelectionActivity,long[]) -> access$700
    73:73:void access$800(com.android.contacts.activities.ContactSelectionActivity) -> access$800
    73:73:com.android.contacts.activities.ActionBarAdapter access$900(com.android.contacts.activities.ContactSelectionActivity) -> access$900
    200:261:void configureActivityTitle() -> configureActivityTitle
    269:387:void configureListFragment() -> configureListFragment
    170:171:void configureSearchMode() -> configureSearchMode
    428:429:com.android.contacts.list.MultiSelectContactsListFragment getMultiSelectListFragment() -> getMultiSelectListFragment
    391:394:com.android.contacts.list.PhoneNumberPickerFragment getPhoneNumberPickerFragment(com.android.contacts.list.ContactsRequest) -> getPhoneNumberPickerFragment
    661:668:long getTargetContactId() -> getTargetContactId
    144:144:boolean isSearchMode() -> isSearchMode
    140:140:boolean isSelectionMode() -> isSelectionMode
    438:457:void onAction(int) -> onAction
    100:102:void onAttachFragment(android.app.Fragment) -> onAttachFragment
    701:714:void onBackPressed() -> onBackPressed
    655:656:void onClick(android.view.View) -> onClick
    108:136:void onCreate(android.os.Bundle) -> onCreate
    683:693:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    634:636:void onFocusChange(android.view.View,boolean) -> onFocusChange
    176:184:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    191:195:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    474:480:void onSelectedContactIdsChanged() -> onSelectedContactIdsChanged
    469:469:void onStartDisplayingCheckBoxes() -> onStartDisplayingCheckBoxes
    505:505:void onStopDisplayingCheckBoxes() -> onStopDisplayingCheckBoxes
    464:464:void onUpButtonPressed() -> onUpButtonPressed
    148:166:void prepareSearchViewAndActionBar(android.os.Bundle) -> prepareSearchViewAndActionBar
    642:644:void returnPickerResult(android.net.Uri) -> returnPickerResult
    648:650:void returnPickerResult(android.content.Intent) -> returnPickerResult
    593:595:void returnSelectedContacts(long[]) -> returnSelectedContacts
    399:423:void setupActionListener() -> setupActionListener
    615:629:void startActivityAndForwardResult(android.content.Intent) -> startActivityAndForwardResult
    675:678:void startCreateNewContactActivity() -> startCreateNewContactActivity
    485:499:void updateAddContactsButton(int) -> updateAddContactsButton
com.android.contacts.activities.ContactSelectionActivity$1 -> com.android.contacts.activities.ContactSelectionActivity$1:
    490:490:void <init>(com.android.contacts.activities.ContactSelectionActivity) -> <init>
    493:495:void onClick(android.view.View) -> onClick
com.android.contacts.activities.ContactSelectionActivity$ContactPickerActionListener -> com.android.contacts.activities.ContactSelectionActivity$ContactPickerActionListener:
    508:508:void <init>(com.android.contacts.activities.ContactSelectionActivity) -> <init>
    508:508:void <init>(com.android.contacts.activities.ContactSelectionActivity,com.android.contacts.activities.ContactSelectionActivity$1) -> <init>
    511:511:void onCreateNewContactAction() -> onCreateNewContactAction
    516:516:void onEditContactAction(android.net.Uri) -> onEditContactAction
    523:523:void onPickContactAction(android.net.Uri) -> onPickContactAction
    528:528:void onShortcutIntentCreated(android.content.Intent) -> onShortcutIntentCreated
com.android.contacts.activities.ContactSelectionActivity$EmailAddressPickerActionListener -> com.android.contacts.activities.ContactSelectionActivity$EmailAddressPickerActionListener:
    606:606:void <init>(com.android.contacts.activities.ContactSelectionActivity) -> <init>
    606:606:void <init>(com.android.contacts.activities.ContactSelectionActivity,com.android.contacts.activities.ContactSelectionActivity$1) -> <init>
    610:610:void onPickEmailAddressAction(android.net.Uri) -> onPickEmailAddressAction
com.android.contacts.activities.ContactSelectionActivity$GroupMemberPickerListener -> com.android.contacts.activities.ContactSelectionActivity$GroupMemberPickerListener:
    577:577:void <init>(com.android.contacts.activities.ContactSelectionActivity) -> <init>
    577:577:void <init>(com.android.contacts.activities.ContactSelectionActivity,com.android.contacts.activities.ContactSelectionActivity$1) -> <init>
    581:583:void onGroupMemberClicked(long) -> onGroupMemberClicked
    588:588:void onSelectGroupMembers() -> onSelectGroupMembers
com.android.contacts.activities.ContactSelectionActivity$JoinContactActionListener -> com.android.contacts.activities.ContactSelectionActivity$JoinContactActionListener:
    556:556:void <init>(com.android.contacts.activities.ContactSelectionActivity) -> <init>
    556:556:void <init>(com.android.contacts.activities.ContactSelectionActivity,com.android.contacts.activities.ContactSelectionActivity$1) -> <init>
    559:561:void onPickContactAction(android.net.Uri) -> onPickContactAction
com.android.contacts.activities.ContactSelectionActivity$PhoneNumberPickerActionListener -> com.android.contacts.activities.ContactSelectionActivity$PhoneNumberPickerActionListener:
    532:532:void <init>(com.android.contacts.activities.ContactSelectionActivity) -> <init>
    532:532:void <init>(com.android.contacts.activities.ContactSelectionActivity,com.android.contacts.activities.ContactSelectionActivity$1) -> <init>
    552:552:void onHomeInActionBarSelected() -> onHomeInActionBarSelected
    536:536:void onPickDataUri(android.net.Uri,boolean,int) -> onPickDataUri
    542:542:void onPickPhoneNumber(java.lang.String,boolean,int) -> onPickPhoneNumber
    547:547:void onShortcutIntentCreated(android.content.Intent) -> onShortcutIntentCreated
com.android.contacts.activities.ContactSelectionActivity$PostalAddressPickerActionListener -> com.android.contacts.activities.ContactSelectionActivity$PostalAddressPickerActionListener:
    598:598:void <init>(com.android.contacts.activities.ContactSelectionActivity) -> <init>
    598:598:void <init>(com.android.contacts.activities.ContactSelectionActivity,com.android.contacts.activities.ContactSelectionActivity$1) -> <init>
    602:602:void onPickPostalAddressAction(android.net.Uri) -> onPickPostalAddressAction
com.android.contacts.activities.LicenseActivity -> com.android.contacts.activities.LicenseActivity:
    29:29:void <init>() -> <init>
    35:41:void onCreate(android.os.Bundle) -> onCreate
    47:48:void onDestroy() -> onDestroy
    53:57:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.android.contacts.activities.PeopleActivity -> com.android.contacts.activities.PeopleActivity:
    179:179:void <clinit>() -> <clinit>
    149:331:void <init>() -> <init>
    110:110:void access$000(com.android.contacts.activities.PeopleActivity) -> access$000
    110:110:android.os.Handler access$100(com.android.contacts.activities.PeopleActivity) -> access$100
    110:110:com.android.contacts.list.ContactListFilterController access$200(com.android.contacts.activities.PeopleActivity) -> access$200
    110:110:void access$300(com.android.contacts.activities.PeopleActivity,com.android.contacts.list.ContactListFilter) -> access$300
    110:110:void access$400(com.android.contacts.activities.PeopleActivity,com.android.contacts.list.ContactListFilter) -> access$400
    110:110:void access$500(com.android.contacts.activities.PeopleActivity,boolean) -> access$500
    110:110:void access$700(com.android.contacts.activities.PeopleActivity,android.content.Intent) -> access$700
    110:110:android.content.Intent access$800(com.android.contacts.activities.PeopleActivity) -> access$800
    341:341:boolean areContactsAvailable() -> areContactsAvailable
    1284:1284:void closeDrawer() -> closeDrawer
    1288:1289:android.content.Intent createPreferenceIntent() -> createPreferenceIntent
    527:556:void createViewsAndFragments() -> createViewsAndFragments
    1045:1045:com.android.contacts.group.GroupMembersFragment getGroupFragment() -> getGroupFragment
    1041:1041:com.android.contacts.list.DefaultContactBrowseListFragment getListFragment() -> getListFragment
    1095:1095:androidx.appcompat.widget.Toolbar getToolbar() -> getToolbar
    1061:1069:void handleFilterChangeForActivity(com.android.contacts.list.ContactListFilter) -> handleFilterChangeForActivity
    1049:1052:void handleFilterChangeForFragment(com.android.contacts.list.ContactListFilter) -> handleFilterChangeForFragment
    659:661:void initializeFabVisibility() -> initializeFabVisibility
    666:669:void initializeHomeVisibility() -> initializeHomeVisibility
    754:757:void invalidateOptionsMenuIfNeeded() -> invalidateOptionsMenuIfNeeded
    1250:1250:boolean isAccountView() -> isAccountView
    1246:1246:boolean isAllContactsView() -> isAllContactsView
    1242:1242:boolean isAssistantView() -> isAssistantView
    475:477:boolean isGroupSaveAction(java.lang.String) -> isGroupSaveAction
    1238:1238:boolean isGroupView() -> isGroupView
    889:890:boolean isGroupsFragmentInSearchMode() -> isGroupsFragmentInSearchMode
    884:885:boolean isGroupsFragmentInSelectionMode() -> isGroupsFragmentInSelectionMode
    1254:1254:boolean isInSecondLevel() -> isInSecondLevel
    1258:1258:boolean isInThirdLevel() -> isInThirdLevel
    1262:1269:boolean isLastBackStackTag(java.lang.String) -> isLastBackStackTag
    879:880:boolean isListFragmentInSearchMode() -> isListFragmentInSearchMode
    874:875:boolean isListFragmentInSelectionMode() -> isListFragmentInSelectionMode
    982:982:void launchAssistant() -> launchAssistant
    846:866:boolean maybeHandleInListFragment() -> maybeHandleInListFragment
    1150:1153:void onAccountChosen(com.android.contacts.model.account.AccountWithDataSet,android.os.Bundle) -> onAccountChosen
    1204:1206:void onAccountViewSelected(com.android.contacts.list.ContactListFilter) -> onAccountViewSelected
    787:819:void onBackPressed() -> onBackPressed
    836:840:void onBackPressedAssistantView() -> onBackPressedAssistantView
    823:831:void onBackPressedGroupView() -> onBackPressedGroupView
    1106:1107:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1168:1173:void onContactsViewSelected(com.android.contacts.activities.PeopleActivity$ContactsView) -> onContactsViewSelected
    346:415:void onCreate(android.os.Bundle) -> onCreate
    1112:1122:void onCreateGroupMenuItemClicked() -> onCreateGroupMenuItemClicked
    1179:1179:void onCreateLabelButtonClicked() -> onCreateLabelButtonClicked
    653:655:void onDestroy() -> onDestroy
    1163:1163:void onDrawerItemClicked() -> onDrawerItemClicked
    1233:1234:void onEmergencyViewSelected() -> onEmergencyViewSelected
    957:968:void onFilterMenuItemClicked(android.content.Intent) -> onFilterMenuItemClicked
    910:932:void onGroupDeleted(android.content.Intent) -> onGroupDeleted
    947:952:void onGroupMenuItemClicked(long) -> onGroupMenuItemClicked
    1199:1199:void onGroupViewSelected(com.android.contacts.group.GroupListItem) -> onGroupViewSelected
    764:782:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1194:1194:void onLaunchHelpFeedback() -> onLaunchHelpFeedback
    602:602:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    420:471:void onNewIntent(android.content.Intent) -> onNewIntent
    1184:1184:void onOpenSettings() -> onOpenSettings
    590:597:void onPause() -> onPause
    1100:1101:void onPostCreate(android.os.Bundle) -> onPostCreate
    1217:1224:void onProfileViewSelected(long) -> onProfileViewSelected
    905:906:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    607:631:void onResume() -> onResume
    895:900:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    208:237:void onSyncStateUpdated() -> onSyncStateUpdated
    1275:1280:void popSecondLevel() -> popSecondLevel
    497:519:boolean processIntent(boolean) -> processIntent
    1026:1029:void resetFilter() -> resetFilter
    1035:1037:void resetToolBarStatusBarColor() -> resetToolBarStatusBarColor
    1129:1142:void selectAccountForNewGroup() -> selectAccountForNewGroup
    562:566:void setContentView(int) -> setContentView
    1080:1090:void setDrawerLockMode(boolean) -> setDrawerLockMode
    571:584:void setUpListFragment(android.app.FragmentManager) -> setUpListFragment
    674:679:boolean shouldHideFab() -> shouldHideFab
    747:750:boolean shouldShowList() -> shouldShowList
    242:242:void showConnectionErrorMsg() -> showConnectionErrorMsg
    683:698:void showFabWithAnimation(boolean) -> showFabWithAnimation
    1015:1022:void switchToAllContacts() -> switchToAllContacts
    974:977:void switchToOrUpdateGroupView(java.lang.String) -> switchToOrUpdateGroupView
    986:1011:void switchView(com.android.contacts.activities.PeopleActivity$ContactsView) -> switchView
    337:337:java.lang.String toString() -> toString
    482:482:void toast(int) -> toast
    1073:1074:void updateDrawerGroupMenu(long) -> updateDrawerGroupMenu
    636:636:void updateStatusBarBackground() -> updateStatusBarBackground
    640:648:void updateStatusBarBackground(int) -> updateStatusBarBackground
    703:743:void updateViewConfiguration(boolean) -> updateViewConfiguration
com.android.contacts.activities.PeopleActivity$1 -> com.android.contacts.activities.PeopleActivity$1:
    196:196:void <init>(com.android.contacts.activities.PeopleActivity) -> <init>
    198:198:void onStatusChanged(int) -> onStatusChanged
com.android.contacts.activities.PeopleActivity$1$1 -> com.android.contacts.activities.PeopleActivity$1$1:
    198:198:void <init>(com.android.contacts.activities.PeopleActivity$1) -> <init>
    200:200:void run() -> run
com.android.contacts.activities.PeopleActivity$2 -> com.android.contacts.activities.PeopleActivity$2:
    245:245:void <init>(com.android.contacts.activities.PeopleActivity) -> <init>
    248:250:void onContactListFilterChanged() -> onContactListFilterChanged
com.android.contacts.activities.PeopleActivity$3 -> com.android.contacts.activities.PeopleActivity$3:
    254:254:void <init>(com.android.contacts.activities.PeopleActivity) -> <init>
    258:258:void onProviderStatusChange() -> onProviderStatusChange
com.android.contacts.activities.PeopleActivity$4 -> com.android.contacts.activities.PeopleActivity$4:
    382:382:void <init>(com.android.contacts.activities.PeopleActivity) -> <init>
    385:385:void onClick(android.view.View) -> onClick
com.android.contacts.activities.PeopleActivity$5 -> com.android.contacts.activities.PeopleActivity$5:
    539:539:void <init>(com.android.contacts.activities.PeopleActivity) -> <init>
    542:543:void onClick(android.view.View) -> onClick
com.android.contacts.activities.PeopleActivity$6 -> com.android.contacts.activities.PeopleActivity$6:
    920:920:void <init>(com.android.contacts.activities.PeopleActivity,android.content.Intent) -> <init>
    923:924:void onClick(android.view.View) -> onClick
com.android.contacts.activities.PeopleActivity$7 -> com.android.contacts.activities.PeopleActivity$7:
    1184:1184:void <init>(com.android.contacts.activities.PeopleActivity) -> <init>
    1187:1187:void run() -> run
com.android.contacts.activities.PeopleActivity$ContactsActionBarDrawerToggle -> com.android.contacts.activities.PeopleActivity$ContactsActionBarDrawerToggle:
    263:268:void <init>(com.android.contacts.activities.PeopleActivity,androidx.appcompat.app.AppCompatActivity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    313:314:void onDrawerClosed(android.view.View) -> onDrawerClosed
    274:285:void onDrawerOpened(android.view.View) -> onDrawerOpened
    319:322:void onDrawerStateChanged(int) -> onDrawerStateChanged
    290:307:void stopSearchAndSelection() -> stopSearchAndSelection
com.android.contacts.activities.PeopleActivity$ContactsView -> com.android.contacts.activities.PeopleActivity$ContactsView:
    115:120:void <clinit>() -> <clinit>
    115:115:void <init>(java.lang.String,int) -> <init>
    115:115:com.android.contacts.activities.PeopleActivity$ContactsView valueOf(java.lang.String) -> valueOf
    115:115:com.android.contacts.activities.PeopleActivity$ContactsView[] values() -> values
com.android.contacts.activities.PeopleActivity$SaveServiceListener -> com.android.contacts.activities.PeopleActivity$SaveServiceListener:
    935:935:void <init>(com.android.contacts.activities.PeopleActivity) -> <init>
    935:935:void <init>(com.android.contacts.activities.PeopleActivity,com.android.contacts.activities.PeopleActivity$1) -> <init>
    938:940:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.activities.RequestImportVCardPermissionsActivity -> com.android.contacts.activities.RequestImportVCardPermissionsActivity:
    27:27:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    38:38:java.lang.String[] getPermissions() -> getPermissions
    50:50:boolean startPermissionActivity(android.app.Activity,boolean) -> startPermissionActivity
com.android.contacts.activities.RequestPermissionsActivity -> com.android.contacts.activities.RequestPermissionsActivity:
    33:33:void <init>() -> <init>
    41:41:java.lang.String[] getPermissions() -> getPermissions
    58:76:java.lang.String[] getPermissions(android.content.pm.PackageManager) -> getPermissions
    48:48:boolean hasRequiredPermissions(android.content.Context) -> hasRequiredPermissions
    82:97:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    52:53:boolean startPermissionActivityIfNeeded(android.app.Activity) -> startPermissionActivityIfNeeded
com.android.contacts.activities.RequestPermissionsActivityBase -> com.android.contacts.activities.RequestPermissionsActivityBase:
    39:39:void <init>() -> <init>
    148:158:boolean hasPermissions(android.content.Context,java.lang.String[]) -> hasPermissions
    111:113:boolean isAllGranted(java.lang.String[],int[]) -> isAllGranted
    121:121:boolean isPermissionRequired(java.lang.String) -> isPermissionRequired
    65:73:void onCreate(android.os.Bundle) -> onCreate
    125:144:void requestPermissions() -> requestPermissions
    85:85:boolean startPermissionActivity(android.app.Activity,java.lang.String[],java.lang.Class) -> startPermissionActivity
    91:105:boolean startPermissionActivity(android.app.Activity,java.lang.String[],boolean,java.lang.Class) -> startPermissionActivity
com.android.contacts.activities.ShowOrCreateActivity -> com.android.contacts.activities.ShowOrCreateActivity:
    63:68:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    88:143:void onCreate(android.os.Bundle) -> onCreate
    215:235:android.app.Dialog onCreateDialog(int) -> onCreateDialog
    159:205:void onQueryComplete(int,java.lang.Object,android.database.Cursor) -> onQueryComplete
    149:151:void onStop() -> onStop
com.android.contacts.activities.ShowOrCreateActivity$1 -> com.android.contacts.activities.ShowOrCreateActivity$1:
    228:228:void <init>(com.android.contacts.activities.ShowOrCreateActivity) -> <init>
    231:231:void onCancel(android.content.DialogInterface) -> onCancel
com.android.contacts.activities.ShowOrCreateActivity$IntentClickListener -> com.android.contacts.activities.ShowOrCreateActivity$IntentClickListener:
    251:253:void <init>(android.app.Activity,android.content.Intent) -> <init>
    257:260:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.activities.SimImportActivity -> com.android.contacts.activities.SimImportActivity:
    33:33:void <init>() -> <init>
    39:46:void onCreate(android.os.Bundle) -> onCreate
com.android.contacts.activities.TransactionSafeActivity -> com.android.contacts.activities.TransactionSafeActivity:
    26:26:void <init>() -> <init>
    32:33:void onCreate(android.os.Bundle) -> onCreate
    44:45:void onResume() -> onResume
    50:51:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    38:39:void onStart() -> onStart
com.android.contacts.compat.AggregationSuggestionsCompat$Builder -> com.android.contacts.compat.AggregationSuggestionsCompat$Builder:
    38:40:void <init>() -> <init>
    62:62:com.android.contacts.compat.AggregationSuggestionsCompat$Builder addNameParameter(java.lang.String) -> addNameParameter
    82:95:android.net.Uri build() -> build
    51:51:com.android.contacts.compat.AggregationSuggestionsCompat$Builder setContactId(long) -> setContactId
    73:73:com.android.contacts.compat.AggregationSuggestionsCompat$Builder setLimit(int) -> setLimit
com.android.contacts.compat.CallableCompat -> com.android.contacts.compat.CallableCompat:
    27:28:void <clinit>() -> <clinit>
    31:34:android.net.Uri getContentFilterUri() -> getContentFilterUri
com.android.contacts.compat.CompatUtils -> com.android.contacts.compat.CompatUtils:
    28:28:void <init>() -> <init>
    86:86:boolean hasPrioritizedMimeType() -> hasPrioritizedMimeType
    255:270:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeMethod
    76:79:boolean isAssertQueryCompat(com.android.contacts.model.CPOWrapper) -> isAssertQueryCompat
    130:130:boolean isCallSubjectCompatible() -> isCallSubjectCompatible
    195:204:boolean isClassAvailable(java.lang.String) -> isClassAvailable
    141:141:boolean isDefaultDialerCompatible() -> isDefaultDialerCompatible
    67:70:boolean isDeleteCompat(com.android.contacts.model.CPOWrapper) -> isDeleteCompat
    47:50:boolean isInsertCompat(com.android.contacts.model.CPOWrapper) -> isInsertCompat
    183:183:boolean isLauncherShortcutCompatible() -> isLauncherShortcutCompatible
    283:283:boolean isLollipopCompatible() -> isLollipopCompatible
    151:151:boolean isLollipopMr1Compatible() -> isLollipopMr1Compatible
    97:97:boolean isMSIMCompatible() -> isMSIMCompatible
    162:162:boolean isMarshmallowCompatible() -> isMarshmallowCompatible
    222:235:boolean isMethodAvailable(java.lang.String,java.lang.String,java.lang.Class[]) -> isMethodAvailable
    173:173:boolean isNCompatible() -> isNCompatible
    178:178:boolean isNougatMr1Compatible() -> isNougatMr1Compatible
    57:60:boolean isUpdateCompat(com.android.contacts.model.CPOWrapper) -> isUpdateCompat
    108:108:boolean isVideoCompatible() -> isVideoCompatible
    119:119:boolean isVideoPresenceCompatible() -> isVideoPresenceCompatible
com.android.contacts.compat.ContactsCompat -> com.android.contacts.compat.ContactsCompat:
    36:37:void <clinit>() -> <clinit>
    43:46:android.net.Uri getContentUri() -> getContentUri
    53:54:boolean isEnterpriseContactId(long) -> isEnterpriseContactId
com.android.contacts.compat.DirectoryCompat -> com.android.contacts.compat.DirectoryCompat:
    27:30:android.net.Uri getContentUri() -> getContentUri
    49:50:boolean isEnterpriseDirectoryId(long) -> isEnterpriseDirectoryId
    34:34:boolean isInvisibleDirectory(long) -> isInvisibleDirectory
    42:43:boolean isRemoteDirectoryId(long) -> isRemoteDirectoryId
com.android.contacts.compat.DirectorySdkCompat -> com.android.contacts.compat.DirectorySdkCompat:
    26:26:void <clinit>() -> <clinit>
    35:35:boolean isEnterpriseDirectoryId(long) -> isEnterpriseDirectoryId
    31:31:boolean isRemoteDirectoryId(long) -> isRemoteDirectoryId
com.android.contacts.compat.EdgeEffectCompat -> com.android.contacts.compat.EdgeEffectCompat:
    32:35:void onPull(android.widget.EdgeEffect,float,float) -> onPull
com.android.contacts.compat.EventCompat -> com.android.contacts.compat.EventCompat:
    39:42:java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence) -> getTypeLabel
    51:54:java.lang.CharSequence getTypeLabelInternal(android.content.res.Resources,int,java.lang.CharSequence) -> getTypeLabelInternal
com.android.contacts.compat.MultiWindowCompat -> com.android.contacts.compat.MultiWindowCompat:
    26:26:boolean isInMultiWindowMode(android.app.Activity) -> isInMultiWindowMode
com.android.contacts.compat.PhoneAccountSdkCompat -> com.android.contacts.compat.PhoneAccountSdkCompat:
    35:35:android.os.Bundle getExtras(android.telecom.PhoneAccount) -> getExtras
com.android.contacts.compat.PhoneCompat -> com.android.contacts.compat.PhoneCompat:
    27:28:void <clinit>() -> <clinit>
    31:34:android.net.Uri getContentFilterUri() -> getContentFilterUri
com.android.contacts.compat.PhoneNumberFormattingTextWatcherCompat -> com.android.contacts.compat.PhoneNumberFormattingTextWatcherCompat:
    22:25:android.telephony.PhoneNumberFormattingTextWatcher newInstance(java.lang.String) -> newInstance
com.android.contacts.compat.PhoneNumberUtilsCompat -> com.android.contacts.compat.PhoneNumberUtilsCompat:
    117:120:void addTtsSpan(android.text.Spannable,int,int) -> addTtsSpan
    128:128:void addTtsSpanInternal(android.text.Spannable,int,int) -> addTtsSpanInternal
    92:95:android.text.style.TtsSpan createTtsSpan(java.lang.String) -> createTtsSpan
    143:165:android.text.style.TtsSpan createTtsSpanLollipop(java.lang.String) -> createTtsSpanLollipop
    84:87:java.lang.CharSequence createTtsSpannable(java.lang.CharSequence) -> createTtsSpannable
    108:109:java.lang.CharSequence createTtsSpannableInternal(java.lang.CharSequence) -> createTtsSpannableInternal
    75:79:java.lang.String formatNumber(java.lang.String,java.lang.String,java.lang.String) -> formatNumber
    42:45:java.lang.String normalizeNumber(java.lang.String) -> normalizeNumber
    53:70:java.lang.String normalizeNumberInternal(java.lang.String) -> normalizeNumberInternal
    176:185:java.lang.String splitAtNonNumerics(java.lang.CharSequence) -> splitAtNonNumerics
com.android.contacts.compat.PinnedPositionsCompat -> com.android.contacts.compat.PinnedPositionsCompat:
    45:50:void undemote(android.content.ContentResolver,long) -> undemote
com.android.contacts.compat.ProviderStatusCompat -> com.android.contacts.compat.ProviderStatusCompat:
    35:41:void <clinit>() -> <clinit>
com.android.contacts.compat.SdkVersionOverride -> com.android.contacts.compat.SdkVersionOverride:
    43:43:int getSdkVersion(int) -> getSdkVersion
com.android.contacts.compat.TelecomManagerUtil -> com.android.contacts.compat.TelecomManagerUtil:
    29:29:android.content.Intent createManageBlockedNumbersIntent(android.telecom.TelecomManager) -> createManageBlockedNumbersIntent
com.android.contacts.compat.TelephonyManagerCompat -> com.android.contacts.compat.TelephonyManagerCompat:
    46:51:boolean isVoiceCapable(android.telephony.TelephonyManager) -> isVoiceCapable
com.android.contacts.compat.telecom.TelecomManagerCompat -> com.android.contacts.compat.telecom.TelecomManagerCompat:
    42:46:void placeCall(android.app.Activity,android.telecom.TelecomManager,android.content.Intent) -> placeCall
com.android.contacts.database.ContactUpdateUtils -> com.android.contacts.database.ContactUpdateUtils:
    34:44:void setSuperPrimary(android.content.Context,long) -> setSuperPrimary
com.android.contacts.database.EmptyCursor -> com.android.contacts.database.EmptyCursor:
    32:33:void <init>(java.lang.String[]) -> <init>
    82:82:android.database.CursorIndexOutOfBoundsException cursorException() -> cursorException
    43:43:java.lang.String[] getColumnNames() -> getColumnNames
    73:73:double getDouble(int) -> getDouble
    68:68:float getFloat(int) -> getFloat
    58:58:int getInt(int) -> getInt
    63:63:long getLong(int) -> getLong
    53:53:short getShort(int) -> getShort
    48:48:java.lang.String getString(int) -> getString
    78:78:boolean isNull(int) -> isNull
com.android.contacts.database.NoNullCursorAsyncQueryHandler -> com.android.contacts.database.NoNullCursorAsyncQueryHandler:
    32:32:void <init>(android.content.ContentResolver) -> <init>
    45:52:void onQueryComplete(int,java.lang.Object,android.database.Cursor) -> onQueryComplete
    38:39:void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> startQuery
com.android.contacts.database.NoNullCursorAsyncQueryHandler$CookieWithProjection -> com.android.contacts.database.NoNullCursorAsyncQueryHandler$CookieWithProjection:
    64:66:void <init>(java.lang.Object,java.lang.String[]) -> <init>
com.android.contacts.database.SimContactDao -> com.android.contacts.database.SimContactDao:
    46:55:void <clinit>() -> <clinit>
    40:40:void <init>() -> <init>
    78:78:com.android.contacts.database.SimContactDao create(android.content.Context) -> create
    58:68:com.android.contacts.database.SimContactDao createDebugInstance(android.content.Context) -> createDebugInstance
    108:108:void persistSimState(com.android.contacts.model.SimCard) -> persistSimState
    87:88:void setFactoryForTest(com.google.common.base.Function) -> setFactoryForTest
com.android.contacts.database.SimContactDao$1 -> com.android.contacts.database.SimContactDao$1:
    47:47:void <init>() -> <init>
    47:47:java.lang.Object apply(java.lang.Object) -> apply
    50:50:com.android.contacts.database.SimContactDao apply(android.content.Context) -> apply
com.android.contacts.database.SimContactDaoImpl -> com.android.contacts.database.SimContactDaoImpl:
    262:262:void <clinit>() -> <clinit>
    84:85:void <init>(android.content.Context) -> <init>
    89:92:void <init>(android.content.Context,android.content.ContentResolver,android.telephony.TelephonyManager) -> <init>
    103:104:boolean canReadSimContacts() -> canReadSimContacts
    380:382:java.util.ArrayList createImportOperations(java.util.List,com.android.contacts.model.account.AccountWithDataSet) -> createImportOperations
    179:182:java.util.Map findAccountsOfExistingSimContacts(java.util.List) -> findAccountsOfExistingSimContacts
    190:229:void findAccountsOfExistingSimContacts(java.util.List,java.util.Map) -> findAccountsOfExistingSimContacts
    255:256:java.util.List getContactsForSim(com.android.contacts.model.SimCard) -> getContactsForSim
    96:96:android.content.Context getContext() -> getContext
    161:166:com.android.contacts.model.SimCard getSimBySubscriptionId(int) -> getSimBySubscriptionId
    109:116:java.util.List getSimCards() -> getSimCards
    243:249:java.util.List getSimCardsFromSubscriptions() -> getSimCardsFromSubscriptions
    392:393:boolean hasPermissions() -> hasPermissions
    388:388:boolean hasTelephony() -> hasTelephony
    237:238:android.content.ContentProviderResult[] importBatch(java.util.List,com.android.contacts.model.account.AccountWithDataSet) -> importBatch
    138:147:android.content.ContentProviderResult[] importContacts(java.util.List,com.android.contacts.model.account.AccountWithDataSet) -> importContacts
    121:125:java.util.ArrayList loadContactsForSim(com.android.contacts.model.SimCard) -> loadContactsForSim
    264:281:java.util.ArrayList loadFrom(android.net.Uri) -> loadFrom
    285:299:java.util.ArrayList loadFromCursor(android.database.Cursor) -> loadFromCursor
    129:130:java.util.ArrayList loadSimContacts(int) -> loadSimContacts
    151:151:void persistSimState(com.android.contacts.model.SimCard) -> persistSimState
    156:156:void persistSimStates(java.util.List) -> persistSimStates
    360:373:android.database.Cursor queryAccountsOfRawContacts(java.util.Set) -> queryAccountsOfRawContacts
    306:355:android.database.Cursor queryRawContactsForSimContacts(java.util.List) -> queryRawContactsForSimContacts
com.android.contacts.database.SimContactDaoImpl$AccountQuery -> com.android.contacts.database.SimContactDaoImpl$AccountQuery:
    459:459:void <clinit>() -> <clinit>
    469:470:com.android.contacts.model.account.AccountWithDataSet getAccount(android.database.Cursor) -> getAccount
    465:465:long getId(android.database.Cursor) -> getId
com.android.contacts.database.SimContactDaoImpl$DataQuery -> com.android.contacts.database.SimContactDaoImpl$DataQuery:
    432:432:void <clinit>() -> <clinit>
    450:450:java.lang.String getDisplayName(android.database.Cursor) -> getDisplayName
    446:446:java.lang.String getPhoneNumber(android.database.Cursor) -> getPhoneNumber
    442:442:long getRawContactId(android.database.Cursor) -> getRawContactId
    454:454:boolean isPhoneNumber(android.database.Cursor) -> isPhoneNumber
com.android.contacts.database.SimContactDaoImpl$DebugImpl -> com.android.contacts.database.SimContactDaoImpl$DebugImpl:
    400:404:void <init>(android.content.Context) -> <init>
    408:409:com.android.contacts.database.SimContactDaoImpl$DebugImpl addSimCard(com.android.contacts.model.SimCard) -> addSimCard
    415:415:java.util.List getSimCards() -> getSimCards
    420:420:java.util.ArrayList loadContactsForSim(com.android.contacts.model.SimCard) -> loadContactsForSim
com.android.contacts.datepicker.DatePicker -> com.android.contacts.datepicker.DatePicker:
    59:59:void <clinit>() -> <clinit>
    95:95:void <init>(android.content.Context) -> <init>
    99:99:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    103:192:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:int access$002(com.android.contacts.datepicker.DatePicker,int) -> access$002
    53:53:void access$100(com.android.contacts.datepicker.DatePicker) -> access$100
    53:53:int access$202(com.android.contacts.datepicker.DatePicker,int) -> access$202
    53:53:void access$300(com.android.contacts.datepicker.DatePicker) -> access$300
    53:53:void access$400(com.android.contacts.datepicker.DatePicker) -> access$400
    53:53:int access$502(com.android.contacts.datepicker.DatePicker,int) -> access$502
    53:53:boolean access$602(com.android.contacts.datepicker.DatePicker,boolean) -> access$602
    53:53:void access$700(com.android.contacts.datepicker.DatePicker) -> access$700
    422:428:void adjustMaxDay() -> adjustMaxDay
    329:329:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    241:241:int getCurrentYear() -> getCurrentYear
    418:418:int getDayOfMonth() -> getDayOfMonth
    414:414:int getMonth() -> getMonth
    406:406:int getYear() -> getYear
    360:360:void init(int,int,int,com.android.contacts.datepicker.DatePicker$OnDateChangedListener) -> init
    373:379:void init(int,int,int,boolean,com.android.contacts.datepicker.DatePicker$OnDateChangedListener) -> init
    410:410:boolean isYearOptional() -> isYearOptional
    433:435:void notifyDateChanged() -> notifyDateChanged
    341:348:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    334:336:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    207:224:void reorderPickers() -> reorderPickers
    198:201:void setEnabled(boolean) -> setEnabled
    396:402:void updateDaySpinner() -> updateDaySpinner
    383:392:void updateSpinners() -> updateSpinners
com.android.contacts.datepicker.DatePicker$1 -> com.android.contacts.datepicker.DatePicker$1:
    113:113:void <init>(com.android.contacts.datepicker.DatePicker) -> <init>
    116:117:void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
com.android.contacts.datepicker.DatePicker$2 -> com.android.contacts.datepicker.DatePicker$2:
    143:143:void <init>(com.android.contacts.datepicker.DatePicker) -> <init>
    150:154:void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
com.android.contacts.datepicker.DatePicker$3 -> com.android.contacts.datepicker.DatePicker$3:
    159:159:void <init>(com.android.contacts.datepicker.DatePicker) -> <init>
    162:166:void onValueChange(android.widget.NumberPicker,int,int) -> onValueChange
com.android.contacts.datepicker.DatePicker$4 -> com.android.contacts.datepicker.DatePicker$4:
    173:173:void <init>(com.android.contacts.datepicker.DatePicker) -> <init>
    176:179:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.android.contacts.datepicker.DatePicker$SavedState -> com.android.contacts.datepicker.DatePicker$SavedState:
    308:308:void <clinit>() -> <clinit>
    244:244:void <init>(android.os.Parcel,com.android.contacts.datepicker.DatePicker$1) -> <init>
    244:244:void <init>(android.os.Parcelable,int,int,int,boolean,boolean,com.android.contacts.datepicker.DatePicker$1) -> <init>
    257:262:void <init>(android.os.Parcelable,int,int,int,boolean,boolean) -> <init>
    269:274:void <init>(android.os.Parcel) -> <init>
    286:286:int getDay() -> getDay
    282:282:int getMonth() -> getMonth
    278:278:int getYear() -> getYear
    290:290:boolean hasYear() -> hasYear
    294:294:boolean isYearOptional() -> isYearOptional
    299:304:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.datepicker.DatePicker$SavedState$1 -> com.android.contacts.datepicker.DatePicker$SavedState$1:
    309:309:void <init>() -> <init>
    309:309:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    313:313:com.android.contacts.datepicker.DatePicker$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    309:309:java.lang.Object[] newArray(int) -> newArray
    318:318:com.android.contacts.datepicker.DatePicker$SavedState[] newArray(int) -> newArray
com.android.contacts.datepicker.DatePickerDialog -> com.android.contacts.datepicker.DatePickerDialog:
    47:47:void <clinit>() -> <clinit>
    94:94:void <init>(android.content.Context,com.android.contacts.datepicker.DatePickerDialog$OnDateSetListener,int,int,int,boolean) -> <init>
    115:136:void <init>(android.content.Context,int,com.android.contacts.datepicker.DatePickerDialog$OnDateSetListener,int,int,int,boolean) -> <init>
    141:144:void onClick(android.content.DialogInterface,int) -> onClick
    150:150:void onDateChanged(com.android.contacts.datepicker.DatePicker,int,int,int) -> onDateChanged
    175:181:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    165:169:android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    154:160:void updateTitle(int,int,int) -> updateTitle
com.android.contacts.datepicker.ICU -> com.android.contacts.datepicker.ICU:
    16:40:char[] getDateFormatOrder(java.lang.String) -> getDateFormatOrder
com.android.contacts.datepicker.TwoDigitFormatter -> com.android.contacts.datepicker.TwoDigitFormatter:
    18:27:void <init>() -> <init>
    53:53:java.util.Formatter createFormatter(java.util.Locale) -> createFormatter
    36:43:java.lang.String format(int) -> format
    49:49:char getZeroDigit(java.util.Locale) -> getZeroDigit
    31:32:void init(java.util.Locale) -> init
com.android.contacts.detail.ContactDisplayUtils -> com.android.contacts.detail.ContactDisplayUtils:
    56:56:void <clinit>() -> <clinit>
    177:185:void configureStarredMenuItem(android.view.MenuItem,boolean,boolean,boolean) -> configureStarredMenuItem
    63:79:java.lang.CharSequence getDisplayName(android.content.Context,com.android.contacts.model.Contact) -> getDisplayName
    145:165:java.lang.String getFormattedCompanyString(android.content.Context,com.android.contacts.model.dataitem.OrganizationDataItem,boolean) -> getFormattedCompanyString
    86:87:java.lang.String getPhoneticName(android.content.Context,com.android.contacts.model.Contact) -> getPhoneticName
com.android.contacts.detail.PhotoSelectionHandler -> com.android.contacts.detail.PhotoSelectionHandler:
    59:59:void <clinit>() -> <clinit>
    81:89:void <init>(android.content.Context,android.view.View,int,boolean,com.android.contacts.model.RawContactDeltaList) -> <init>
    57:57:android.net.Uri access$000(com.android.contacts.detail.PhotoSelectionHandler) -> access$000
    57:57:void access$100(com.android.contacts.detail.PhotoSelectionHandler,android.net.Uri) -> access$100
    57:57:void access$200(com.android.contacts.detail.PhotoSelectionHandler,android.net.Uri) -> access$200
    244:262:void doCropPhoto(android.net.Uri,android.net.Uri) -> doCropPhoto
    338:341:android.content.Intent getCropImageIntent(android.net.Uri,android.net.Uri) -> getCropImageIntent
    328:331:android.content.pm.ResolveInfo getIntentHandler(android.content.Intent) -> getIntentHandler
    321:323:android.content.Intent getPhotoPickIntent(android.net.Uri) -> getPhotoPickIntent
    289:305:int getPhotoPickSize() -> getPhotoPickSize
    312:313:android.content.Intent getTakePhotoIntent(android.net.Uri) -> getTakePhotoIntent
    191:192:int getWritableEntityIndex() -> getWritableEntityIndex
    125:178:boolean handlePhotoActivityResult(int,int,android.content.Intent) -> handlePhotoActivityResult
    100:111:void onClick(android.view.View) -> onClick
    284:285:void startPickFromGalleryActivity(android.net.Uri) -> startPickFromGalleryActivity
    273:274:void startTakePhotoActivity(android.net.Uri) -> startTakePhotoActivity
com.android.contacts.detail.PhotoSelectionHandler$1 -> com.android.contacts.detail.PhotoSelectionHandler$1:
    105:105:void <init>(com.android.contacts.detail.PhotoSelectionHandler,com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener) -> <init>
    108:108:void onDismiss() -> onDismiss
com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener -> com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener:
    345:345:void <init>(com.android.contacts.detail.PhotoSelectionHandler) -> <init>
    366:369:void onPickFromGalleryChosen() -> onPickFromGalleryChosen
    355:358:void onTakePhotoChosen() -> onTakePhotoChosen
com.android.contacts.dialog.CallSubjectDialog -> com.android.contacts.dialog.CallSubjectDialog:
    64:195:void <init>() -> <init>
    64:64:void access$000(com.android.contacts.dialog.CallSubjectDialog) -> access$000
    64:64:android.widget.EditText access$100(com.android.contacts.dialog.CallSubjectDialog) -> access$100
    64:64:android.widget.ListView access$200(com.android.contacts.dialog.CallSubjectDialog) -> access$200
    64:64:void access$300(com.android.contacts.dialog.CallSubjectDialog,boolean) -> access$300
    64:64:java.lang.String access$400(com.android.contacts.dialog.CallSubjectDialog) -> access$400
    64:64:android.telecom.PhoneAccountHandle access$500(com.android.contacts.dialog.CallSubjectDialog) -> access$500
    64:64:java.util.List access$600(com.android.contacts.dialog.CallSubjectDialog) -> access$600
    64:64:void access$700(com.android.contacts.dialog.CallSubjectDialog,java.util.List) -> access$700
    64:64:android.view.View access$800(com.android.contacts.dialog.CallSubjectDialog) -> access$800
    64:64:int access$900(com.android.contacts.dialog.CallSubjectDialog) -> access$900
    471:474:void hideSoftKeyboard(android.content.Context,android.view.View) -> hideSoftKeyboard
    584:620:void loadConfiguration() -> loadConfiguration
    429:435:java.util.List loadSubjectHistory(android.content.SharedPreferences) -> loadSubjectHistory
    276:311:void onCreate(android.os.Bundle) -> onCreate
    338:351:void readArguments() -> readArguments
    450:464:void saveSubjectHistory(java.util.List) -> saveSubjectHistory
    392:417:void setPhoto(long,android.net.Uri,android.net.Uri,java.lang.String,boolean) -> setPhoto
    485:505:void showCallHistory(boolean) -> showCallHistory
    261:263:void start(android.app.Activity,android.os.Bundle) -> start
    359:376:void updateCharacterLimit() -> updateCharacterLimit
    318:330:void updateContactInfo() -> updateContactInfo
com.android.contacts.dialog.CallSubjectDialog$1 -> com.android.contacts.dialog.CallSubjectDialog$1:
    118:118:void <init>(com.android.contacts.dialog.CallSubjectDialog) -> <init>
    126:126:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.android.contacts.dialog.CallSubjectDialog$2 -> com.android.contacts.dialog.CallSubjectDialog$2:
    138:138:void <init>(com.android.contacts.dialog.CallSubjectDialog) -> <init>
    141:141:void onClick(android.view.View) -> onClick
com.android.contacts.dialog.CallSubjectDialog$3 -> com.android.contacts.dialog.CallSubjectDialog$3:
    148:148:void <init>(com.android.contacts.dialog.CallSubjectDialog) -> <init>
    151:152:void onClick(android.view.View) -> onClick
com.android.contacts.dialog.CallSubjectDialog$4 -> com.android.contacts.dialog.CallSubjectDialog$4:
    159:159:void <init>(com.android.contacts.dialog.CallSubjectDialog) -> <init>
    162:173:void onClick(android.view.View) -> onClick
com.android.contacts.dialog.CallSubjectDialog$5 -> com.android.contacts.dialog.CallSubjectDialog$5:
    181:181:void <init>(com.android.contacts.dialog.CallSubjectDialog) -> <init>
    184:185:void onClick(android.view.View) -> onClick
com.android.contacts.dialog.CallSubjectDialog$6 -> com.android.contacts.dialog.CallSubjectDialog$6:
    196:196:void <init>(com.android.contacts.dialog.CallSubjectDialog) -> <init>
    199:200:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.contacts.dialog.CallSubjectDialog$7 -> com.android.contacts.dialog.CallSubjectDialog$7:
    506:506:void <init>(com.android.contacts.dialog.CallSubjectDialog,android.view.ViewTreeObserver,int,boolean) -> <init>
    510:569:boolean onPreDraw() -> onPreDraw
com.android.contacts.dialog.CallSubjectDialog$7$1 -> com.android.contacts.dialog.CallSubjectDialog$7$1:
    536:536:void <init>(com.android.contacts.dialog.CallSubjectDialog$7) -> <init>
    539:539:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    544:545:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.contacts.dialog.CallSubjectDialog$7$2 -> com.android.contacts.dialog.CallSubjectDialog$7$2:
    557:557:void <init>(com.android.contacts.dialog.CallSubjectDialog$7) -> <init>
    560:561:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    566:566:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.contacts.drawer.DrawerAdapter -> com.android.contacts.drawer.DrawerAdapter:
    88:108:void <init>(android.app.Activity) -> <init>
    352:374:android.view.View getAccountItemView(com.android.contacts.drawer.DrawerAdapter$AccountEntryItem,android.view.View,android.view.ViewGroup) -> getAccountItemView
    250:250:android.view.View getBaseItemView(int,android.view.View,android.view.ViewGroup) -> getBaseItemView
    203:203:int getCount() -> getCount
    380:388:android.view.View getDrawerItemView(com.android.contacts.drawer.DrawerAdapter$BaseDrawerItem,android.view.View,android.view.ViewGroup) -> getDrawerItemView
    330:347:android.view.View getGroupEntryView(com.android.contacts.drawer.DrawerAdapter$GroupEntryItem,android.view.View,android.view.ViewGroup) -> getGroupEntryView
    275:279:android.view.View getHeaderItemView(com.android.contacts.drawer.DrawerAdapter$HeaderItem,android.view.View,android.view.ViewGroup) -> getHeaderItemView
    47:47:java.lang.Object getItem(int) -> getItem
    207:207:com.android.contacts.drawer.DrawerAdapter$BaseDrawerItem getItem(int) -> getItem
    212:212:long getItemId(int) -> getItemId
    394:394:int getItemViewType(int) -> getItemViewType
    530:530:com.android.contacts.ContactPhotoManager getPhotoLoader() -> getPhotoLoader
    257:269:android.view.View getPrimaryItemView(com.android.contacts.drawer.DrawerAdapter$PrimaryItem,android.view.View,android.view.ViewGroup) -> getPrimaryItemView
    285:325:android.view.View getProfileEntryView(com.android.contacts.drawer.DrawerAdapter$ProfileEntryItem,android.view.View,android.view.ViewGroup) -> getProfileEntryView
    443:443:com.android.contacts.list.ContactListFilter getSelectedAccount() -> getSelectedAccount
    431:431:long getSelectedGroupId() -> getSelectedGroupId
    222:245:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    113:142:void initializeDrawerMenuItems() -> initializeDrawerMenuItems
    409:410:void notifyChangeAndRebuildList() -> notifyChangeAndRebuildList
    146:169:void rebuildItemsList() -> rebuildItemsList
    189:198:void setAccounts(java.util.List) -> setAccounts
    178:185:void setGroups(java.util.List,boolean) -> setGroups
    173:174:void setProfile(com.android.contacts.profile.ProfileItem) -> setProfile
    435:439:void setSelectedAccount(com.android.contacts.list.ContactListFilter) -> setSelectedAccount
    414:418:void setSelectedContactsView(com.android.contacts.activities.PeopleActivity$ContactsView) -> setSelectedContactsView
    423:427:void setSelectedGroupId(long) -> setSelectedGroupId
    398:404:void updateSelectedStatus(android.widget.TextView,android.widget.ImageView,boolean) -> updateSelectedStatus
com.android.contacts.drawer.DrawerAdapter$AccountEntryItem -> com.android.contacts.drawer.DrawerAdapter$AccountEntryItem:
    524:525:void <init>(int,com.android.contacts.list.ContactListFilter) -> <init>
    520:520:com.android.contacts.list.ContactListFilter access$200(com.android.contacts.drawer.DrawerAdapter$AccountEntryItem) -> access$200
com.android.contacts.drawer.DrawerAdapter$BaseDrawerItem -> com.android.contacts.drawer.DrawerAdapter$BaseDrawerItem:
    452:456:void <init>(int,int,int,int) -> <init>
com.android.contacts.drawer.DrawerAdapter$DividerItem -> com.android.contacts.drawer.DrawerAdapter$DividerItem:
    495:495:void <init>() -> <init>
com.android.contacts.drawer.DrawerAdapter$GroupEntryItem -> com.android.contacts.drawer.DrawerAdapter$GroupEntryItem:
    514:515:void <init>(int,com.android.contacts.group.GroupListItem) -> <init>
    510:510:com.android.contacts.group.GroupListItem access$100(com.android.contacts.drawer.DrawerAdapter$GroupEntryItem) -> access$100
com.android.contacts.drawer.DrawerAdapter$HeaderItem -> com.android.contacts.drawer.DrawerAdapter$HeaderItem:
    481:481:void <init>(int,int) -> <init>
com.android.contacts.drawer.DrawerAdapter$MiscItem -> com.android.contacts.drawer.DrawerAdapter$MiscItem:
    474:474:void <init>(int,int,int) -> <init>
com.android.contacts.drawer.DrawerAdapter$NavSpacerItem -> com.android.contacts.drawer.DrawerAdapter$NavSpacerItem:
    488:488:void <init>(int) -> <init>
com.android.contacts.drawer.DrawerAdapter$PrimaryItem -> com.android.contacts.drawer.DrawerAdapter$PrimaryItem:
    466:467:void <init>(int,int,int,com.android.contacts.activities.PeopleActivity$ContactsView) -> <init>
com.android.contacts.drawer.DrawerAdapter$ProfileEntryItem -> com.android.contacts.drawer.DrawerAdapter$ProfileEntryItem:
    504:505:void <init>(int,com.android.contacts.profile.ProfileItem) -> <init>
    500:500:com.android.contacts.profile.ProfileItem access$000(com.android.contacts.drawer.DrawerAdapter$ProfileEntryItem) -> access$000
com.android.contacts.drawer.DrawerFragment -> com.android.contacts.drawer.DrawerFragment:
    79:257:void <init>() -> <init>
    60:60:com.android.contacts.drawer.DrawerAdapter access$000(com.android.contacts.drawer.DrawerFragment) -> access$000
    60:60:java.util.List access$100(com.android.contacts.drawer.DrawerFragment) -> access$100
    60:60:boolean access$202(com.android.contacts.drawer.DrawerFragment,boolean) -> access$202
    60:60:void access$300(com.android.contacts.drawer.DrawerFragment) -> access$300
    60:60:com.android.contacts.drawer.DrawerFragment$DrawerFragmentListener access$600(com.android.contacts.drawer.DrawerFragment) -> access$600
    60:60:void access$700(com.android.contacts.drawer.DrawerFragment,int) -> access$700
    332:335:void applyTopInset(int) -> applyTopInset
    244:248:void loadGroupsAndFilters() -> loadGroupsAndFilters
    318:326:void notifyIfReady() -> notifyIfReady
    312:314:void onAccountsLoaded(java.util.List) -> onAccountsLoaded
    173:178:void onAttach(android.app.Activity) -> onAttach
    185:211:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    253:254:void onDetach() -> onDetach
    237:239:void onPause() -> onPause
    218:223:void onResume() -> onResume
    229:232:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    299:301:void setNavigationItemChecked(com.android.contacts.activities.PeopleActivity$ContactsView) -> setNavigationItemChecked
    306:307:void updateGroupMenu(long) -> updateGroupMenu
com.android.contacts.drawer.DrawerFragment$1 -> com.android.contacts.drawer.DrawerFragment$1:
    96:96:void <init>(com.android.contacts.drawer.DrawerFragment) -> <init>
    99:99:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    96:96:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    106:109:void onLoadFinished(android.content.Loader,java.util.List) -> onLoadFinished
com.android.contacts.drawer.DrawerFragment$2 -> com.android.contacts.drawer.DrawerFragment$2:
    119:119:void <init>(com.android.contacts.drawer.DrawerFragment) -> <init>
    119:119:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    122:122:android.content.CursorLoader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    119:119:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    130:143:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
com.android.contacts.drawer.DrawerFragment$3 -> com.android.contacts.drawer.DrawerFragment$3:
    151:151:void <init>(com.android.contacts.drawer.DrawerFragment) -> <init>
    151:151:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    154:155:android.content.CursorLoader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    151:151:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    162:162:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
com.android.contacts.drawer.DrawerFragment$4 -> com.android.contacts.drawer.DrawerFragment$4:
    257:257:void <init>(com.android.contacts.drawer.DrawerFragment) -> <init>
    260:294:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.contacts.drawer.DrawerFragment$WelcomeContentObserver -> com.android.contacts.drawer.DrawerFragment$WelcomeContentObserver:
    84:84:void <init>(com.android.contacts.drawer.DrawerFragment,android.os.Handler,com.android.contacts.drawer.DrawerFragment$1) -> <init>
    85:86:void <init>(com.android.contacts.drawer.DrawerFragment,android.os.Handler) -> <init>
    91:91:void onChange(boolean) -> onChange
com.android.contacts.drawer.DrawerFragment$WindowInsetsListener -> com.android.contacts.drawer.DrawerFragment$WindowInsetsListener:
    350:350:void <init>(com.android.contacts.drawer.DrawerFragment) -> <init>
    350:350:void <init>(com.android.contacts.drawer.DrawerFragment,com.android.contacts.drawer.DrawerFragment$1) -> <init>
    353:354:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
com.android.contacts.drawer.ScrimDrawable -> com.android.contacts.drawer.ScrimDrawable:
    32:32:void <init>() -> <init>
    41:41:void <init>(int) -> <init>
    48:48:int getIntrinsicHeight() -> getIntrinsicHeight
    52:52:void setIntrinsicHeight(int) -> setIntrinsicHeight
com.android.contacts.editor.AccountHeaderPresenter -> com.android.contacts.editor.AccountHeaderPresenter:
    69:82:void <init>(android.view.View) -> <init>
    42:42:void access$000(com.android.contacts.editor.AccountHeaderPresenter) -> access$000
    42:42:android.view.View access$100(com.android.contacts.editor.AccountHeaderPresenter) -> access$100
    142:161:void addAccountHeader(java.lang.String) -> addAccountHeader
    166:172:void addAccountSelector(java.lang.CharSequence) -> addAccountSelector
    215:216:java.lang.String getAccountLabel(com.android.contacts.model.account.AccountWithDataSet) -> getAccountLabel
    112:112:com.android.contacts.model.account.AccountWithDataSet getCurrentAccount() -> getCurrentAccount
    121:124:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    116:116:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    101:108:void setAccounts(java.util.List) -> setAccounts
    90:97:void setCurrentAccount(com.android.contacts.model.account.AccountWithDataSet) -> setCurrentAccount
    86:86:void setObserver(com.android.contacts.editor.AccountHeaderPresenter$Observer) -> setObserver
    205:211:void setUpAccountSelector(java.lang.String,android.view.View$OnClickListener) -> setUpAccountSelector
    176:196:void showPopup() -> showPopup
    128:137:void updateDisplayedAccount() -> updateDisplayedAccount
com.android.contacts.editor.AccountHeaderPresenter$1 -> com.android.contacts.editor.AccountHeaderPresenter$1:
    166:166:void <init>(com.android.contacts.editor.AccountHeaderPresenter) -> <init>
    169:169:void onClick(android.view.View) -> onClick
com.android.contacts.editor.AccountHeaderPresenter$2 -> com.android.contacts.editor.AccountHeaderPresenter$2:
    184:184:void <init>(com.android.contacts.editor.AccountHeaderPresenter,android.widget.ListPopupWindow,com.android.contacts.util.AccountsListAdapter) -> <init>
    188:192:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.contacts.editor.AccountHeaderPresenter$3 -> com.android.contacts.editor.AccountHeaderPresenter$3:
    196:196:void <init>(com.android.contacts.editor.AccountHeaderPresenter,android.widget.ListPopupWindow) -> <init>
    199:199:void run() -> run
com.android.contacts.editor.AccountHeaderPresenter$Observer -> com.android.contacts.editor.AccountHeaderPresenter$Observer:
    49:49:void <clinit>() -> <clinit>
com.android.contacts.editor.AccountHeaderPresenter$Observer$1 -> com.android.contacts.editor.AccountHeaderPresenter$Observer$1:
    49:49:void <init>() -> <init>
com.android.contacts.editor.AggregationSuggestionEngine -> com.android.contacts.editor.AggregationSuggestionEngine:
    106:119:void <init>(android.content.Context) -> <init>
    246:251:void appendValue(java.lang.StringBuilder,com.android.contacts.model.ValuesDelta,java.lang.String) -> appendValue
    201:242:android.net.Uri buildAggregationSuggestionUri(com.android.contacts.model.ValuesDelta) -> buildAggregationSuggestionUri
    365:370:void deliverNotification(android.database.Cursor) -> deliverNotification
    128:136:android.os.Handler getHandler() -> getHandler
    375:375:int getSuggestedContactCount() -> getSuggestedContactCount
    379:432:java.util.List getSuggestions() -> getSuggestions
    256:261:void handleMessage(android.os.Message) -> handleMessage
    303:337:void loadAggregationSuggestions(android.net.Uri) -> loadAggregationSuggestions
    174:185:void onNameChange(com.android.contacts.model.ValuesDelta) -> onNameChange
    156:164:boolean quit() -> quit
    168:170:void reset() -> reset
    189:197:void scheduleSuggestionLookup() -> scheduleSuggestionLookup
    147:147:void setAccountFilter(com.android.contacts.model.account.AccountWithDataSet) -> setAccountFilter
    140:142:void setContactId(long) -> setContactId
    151:151:void setListener(com.android.contacts.editor.AggregationSuggestionEngine$Listener) -> setListener
    341:358:boolean updateSuggestedContactIds(android.database.Cursor) -> updateSuggestedContactIds
com.android.contacts.editor.AggregationSuggestionEngine$1 -> com.android.contacts.editor.AggregationSuggestionEngine$1:
    119:119:void <init>(com.android.contacts.editor.AggregationSuggestionEngine) -> <init>
    122:122:void handleMessage(android.os.Message) -> handleMessage
com.android.contacts.editor.AggregationSuggestionEngine$2 -> com.android.contacts.editor.AggregationSuggestionEngine$2:
    129:129:void <init>(com.android.contacts.editor.AggregationSuggestionEngine,android.os.Looper) -> <init>
    132:132:void handleMessage(android.os.Message) -> handleMessage
com.android.contacts.editor.AggregationSuggestionEngine$DataQuery -> com.android.contacts.editor.AggregationSuggestionEngine$DataQuery:
    277:277:void <clinit>() -> <clinit>
com.android.contacts.editor.AggregationSuggestionEngine$Suggestion -> com.android.contacts.editor.AggregationSuggestionEngine$Suggestion:
    60:64:void <init>() -> <init>
    72:81:java.lang.String toString() -> toString
com.android.contacts.editor.AggregationSuggestionEngine$SuggestionContentObserver -> com.android.contacts.editor.AggregationSuggestionEngine$SuggestionContentObserver:
    85:85:void <init>(com.android.contacts.editor.AggregationSuggestionEngine,android.os.Handler,com.android.contacts.editor.AggregationSuggestionEngine$1) -> <init>
    86:87:void <init>(com.android.contacts.editor.AggregationSuggestionEngine,android.os.Handler) -> <init>
    92:92:void onChange(boolean) -> onChange
com.android.contacts.editor.AggregationSuggestionView -> com.android.contacts.editor.AggregationSuggestionView:
    50:50:void <init>(android.content.Context) -> <init>
    54:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:88:void bindSuggestion(com.android.contacts.editor.AggregationSuggestionEngine$Suggestion) -> bindSuggestion
    96:101:boolean handleItemClickEvent() -> handleItemClickEvent
    92:92:void setListener(com.android.contacts.editor.AggregationSuggestionView$Listener) -> setListener
com.android.contacts.editor.CancelEditDialogFragment -> com.android.contacts.editor.CancelEditDialogFragment:
    30:30:void <init>() -> <init>
    46:59:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    39:41:void show(com.android.contacts.editor.ContactEditorFragment) -> show
com.android.contacts.editor.CancelEditDialogFragment$1 -> com.android.contacts.editor.CancelEditDialogFragment$1:
    50:50:void <init>(com.android.contacts.editor.CancelEditDialogFragment) -> <init>
    53:54:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.ContactEditorFragment -> com.android.contacts.editor.ContactEditorFragment:
    135:135:void <clinit>() -> <clinit>
    113:458:void <init>() -> <init>
    113:113:void access$000(com.android.contacts.editor.ContactEditorFragment,com.android.contacts.model.Contact) -> access$000
    1571:1583:void acquireAggregationSuggestions(android.content.Context,long,com.android.contacts.model.ValuesDelta) -> acquireAggregationSuggestions
    1287:1335:void bindEditors() -> bindEditors
    1265:1279:void copyReadOnlyName() -> copyReadOnlyName
    1084:1087:void createContact(com.android.contacts.model.account.AccountWithDataSet) -> createContact
    1252:1257:com.android.contacts.model.RawContactDelta createLocalRawContactDelta() -> createLocalRawContactDelta
    1156:1185:com.android.contacts.model.RawContactDelta createNewRawContactDelta(com.android.contacts.model.account.AccountWithDataSet,com.android.contacts.model.account.AccountType,com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType) -> createNewRawContactDelta
    1668:1672:void doEditSuggestedContact(android.net.Uri,long) -> doEditSuggestedContact
    882:895:boolean doJoinContactAction() -> doJoinContactAction
    1692:1697:boolean doSaveAction(int,java.lang.Long) -> doSaveAction
    875:877:boolean doSplitContactAction() -> doSplitContactAction
    1642:1642:android.view.View getAggregationAnchorView() -> getAggregationAnchorView
    1590:1593:long getContactId() -> getContactId
    1796:1796:com.android.contacts.editor.RawContactEditorView getContent() -> getContent
    464:464:android.content.Context getContext() -> getContext
    1792:1792:com.android.contacts.activities.ContactEditorActivity getEditorActivity() -> getEditorActivity
    1445:1461:java.lang.String getNameToDisplay(android.net.Uri) -> getNameToDisplay
    1787:1787:int getPhotoMode() -> getPhotoMode
    984:1000:boolean hasPendingChanges() -> hasPendingChanges
    974:975:boolean hasPendingRawContactChanges(java.util.Set) -> hasPendingRawContactChanges
    944:944:boolean hasValidState() -> hasValidState
    1841:1845:void hideSoftKeyboard() -> hideSoftKeyboard
    1342:1344:void invalidateOptionsMenu() -> invalidateOptionsMenu
    963:966:boolean isEditingReadOnlyRawContact() -> isEditingReadOnlyRawContact
    956:956:boolean isEditingReadOnlyRawContactWithNewContact() -> isEditingReadOnlyRawContactWithNewContact
    948:948:boolean isEditingUserProfile() -> isEditingUserProfile
    1349:1368:boolean isReadyToBindEditors() -> isReadyToBindEditors
    1717:1720:void joinAggregate(long) -> joinAggregate
    1809:1833:void lambda$maybeRestoreFocus$0(int,boolean) -> lambda$maybeRestoreFocus$0
    1407:1425:void load(java.lang.String,android.net.Uri,android.os.Bundle) -> load
    1801:1807:void maybeRestoreFocus(android.os.Bundle) -> maybeRestoreFocus
    720:745:void onAccountsLoaded(java.util.List) -> onAccountsLoaded
    548:592:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    690:712:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1601:1635:void onAggregationSuggestionChange() -> onAggregationSuggestionChange
    469:472:void onAttach(android.app.Activity) -> onAttach
    1761:1766:void onBindEditorsFailed() -> onBindEditorsFailed
    839:841:void onCancelEditConfirmed() -> onCancelEditConfirmed
    480:532:void onCreate(android.os.Bundle) -> onCreate
    756:756:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    538:542:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    677:679:void onDestroy() -> onDestroy
    1660:1660:void onEditAction(android.net.Uri,long) -> onEditAction
    1772:1776:void onEditorsBound() -> onEditorsBound
    1436:1436:void onJoinCompleted(android.net.Uri) -> onJoinCompleted
    901:901:void onJoinContactConfirmed(long) -> onJoinContactConfirmed
    1745:1749:void onNameFieldChanged(long,com.android.contacts.model.ValuesDelta) -> onNameFieldChanged
    797:819:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1783:1783:void onPhotoEditorViewClicked() -> onPhotoEditorViewClicked
    764:791:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1755:1756:void onRebindEditorsForNewContact(com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountWithDataSet,com.android.contacts.model.account.AccountWithDataSet) -> onRebindEditorsForNewContact
    1476:1539:void onSaveCompleted(boolean,int,boolean,android.net.Uri,java.lang.Long) -> onSaveCompleted
    621:666:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    847:868:void onSplitContactConfirmed(boolean) -> onSplitContactConfirmed
    671:672:void onStop() -> onStop
    598:602:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    1382:1392:void rebindEditorsForNewContact(com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountWithDataSet,com.android.contacts.model.account.AccountWithDataSet) -> rebindEditorsForNewContact
    1724:1725:void removePhoto() -> removePhoto
    828:831:boolean revert() -> revert
    906:932:boolean save(int) -> save
    1050:1074:void selectAccountAndCreateContact() -> selectAccountAndCreateContact
    1230:1243:void setEnabled(boolean) -> setEnabled
    1680:1681:void setGroupMetaData() -> setGroupMetaData
    1431:1431:void setIntentExtras(android.os.Bundle) -> setIntentExtras
    1402:1402:void setListener(com.android.contacts.editor.ContactEditorFragment$Listener) -> setListener
    1096:1120:void setState(com.android.contacts.model.Contact) -> setState
    1196:1223:void setStateForExistingContact(boolean,com.google.common.collect.ImmutableList) -> setStateForExistingContact
    1129:1129:void setStateForNewContact(com.android.contacts.model.account.AccountWithDataSet,com.android.contacts.model.account.AccountType,boolean) -> setStateForNewContact
    1139:1144:void setStateForNewContact(com.android.contacts.model.account.AccountWithDataSet,com.android.contacts.model.account.AccountType,com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType,boolean) -> setStateForNewContact
    1551:1559:void showJoinAggregateActivity(android.net.Uri) -> showJoinAggregateActivity
    1701:1704:boolean startSaveService(android.content.Context,android.content.Intent,int) -> startSaveService
    1015:1040:boolean structuredNamesAreEqual(com.android.contacts.model.ValuesDelta,com.android.contacts.model.ValuesDelta) -> structuredNamesAreEqual
    1729:1736:void updatePhoto(android.net.Uri) -> updatePhoto
    612:615:void validateAction(java.lang.String) -> validateAction
com.android.contacts.editor.ContactEditorFragment$$ExternalSyntheticLambda0 -> com.android.contacts.editor.ContactEditorFragment$$ExternalSyntheticLambda0:
    int com.android.contacts.editor.ContactEditorFragment$$InternalSyntheticLambda$0$caf4296a42dc74609fd76d183fa7f1c352e62c2c86342195c4d74f532e7b958e$0.f$1 -> f$1
    com.android.contacts.editor.ContactEditorFragment com.android.contacts.editor.ContactEditorFragment$$InternalSyntheticLambda$0$caf4296a42dc74609fd76d183fa7f1c352e62c2c86342195c4d74f532e7b958e$0.f$0 -> f$0
    boolean com.android.contacts.editor.ContactEditorFragment$$InternalSyntheticLambda$0$caf4296a42dc74609fd76d183fa7f1c352e62c2c86342195c4d74f532e7b958e$0.f$2 -> f$2
    void com.android.contacts.editor.ContactEditorFragment$$InternalSyntheticLambda$0$caf4296a42dc74609fd76d183fa7f1c352e62c2c86342195c4d74f532e7b958e$0.<init>(com.android.contacts.editor.ContactEditorFragment,int,boolean) -> <init>
    void com.android.contacts.editor.ContactEditorFragment$$InternalSyntheticLambda$0$caf4296a42dc74609fd76d183fa7f1c352e62c2c86342195c4d74f532e7b958e$0.run() -> run
com.android.contacts.editor.ContactEditorFragment$1 -> com.android.contacts.editor.ContactEditorFragment$1:
    135:138:void <init>() -> <init>
com.android.contacts.editor.ContactEditorFragment$2 -> com.android.contacts.editor.ContactEditorFragment$2:
    391:391:void <init>(com.android.contacts.editor.ContactEditorFragment) -> <init>
    397:398:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    391:391:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    405:424:void onLoadFinished(android.content.Loader,com.android.contacts.model.Contact) -> onLoadFinished
com.android.contacts.editor.ContactEditorFragment$3 -> com.android.contacts.editor.ContactEditorFragment$3:
    438:438:void <init>(com.android.contacts.editor.ContactEditorFragment) -> <init>
    438:438:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    442:442:android.content.CursorLoader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    438:438:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    448:449:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
com.android.contacts.editor.ContactEditorFragment$4 -> com.android.contacts.editor.ContactEditorFragment$4:
    778:778:void <init>(com.android.contacts.editor.ContactEditorFragment,android.view.MenuItem) -> <init>
    781:781:void onClick(android.view.View) -> onClick
com.android.contacts.editor.ContactEditorFragment$5 -> com.android.contacts.editor.ContactEditorFragment$5:
    1626:1626:void <init>(com.android.contacts.editor.ContactEditorFragment) -> <init>
    1629:1632:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter -> com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter:
    283:286:void <init>(android.app.Activity,com.android.contacts.editor.AggregationSuggestionView$Listener,java.util.List) -> <init>
    312:312:int getCount() -> getCount
    307:307:java.lang.Object getItem(int) -> getItem
    291:296:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.android.contacts.editor.ContactEditorUtils -> com.android.contacts.editor.ContactEditorUtils:
    44:46:void <init>(android.content.Context) -> <init>
    78:78:void cleanupForTest() -> cleanupForTest
    50:50:com.android.contacts.editor.ContactEditorUtils create(android.content.Context) -> create
    154:160:com.android.contacts.model.account.AccountWithDataSet getCreatedAccount(int,android.content.Intent) -> getCreatedAccount
    110:114:com.android.contacts.model.account.AccountWithDataSet getOnlyOrDefaultAccount(java.util.List) -> getOnlyOrDefaultAccount
    65:71:android.net.Uri maybeConvertToLegacyLookupUri(android.content.Context,android.net.Uri,android.net.Uri) -> maybeConvertToLegacyLookupUri
    125:129:void maybeUpdateDefaultAccount(java.util.List) -> maybeUpdateDefaultAccount
    82:82:void removeDefaultAccountForTest() -> removeDefaultAccountForTest
    94:96:void saveDefaultAccount(com.android.contacts.model.account.AccountWithDataSet) -> saveDefaultAccount
    118:118:boolean shouldShowAccountChangedNotification(java.util.List) -> shouldShowAccountChangedNotification
com.android.contacts.editor.EditorAnimator -> com.android.contacts.editor.EditorAnimator:
    40:40:void <clinit>() -> <clinit>
    47:49:void <init>() -> <init>
    39:39:java.util.List access$000(android.view.View) -> access$000
    39:39:void access$100(java.util.List,java.util.List,float,float,int,int) -> access$100
    39:39:com.android.contacts.editor.EditorAnimator$AnimatorRunner access$200(com.android.contacts.editor.EditorAnimator) -> access$200
    43:43:com.android.contacts.editor.EditorAnimator getInstance() -> getInstance
    221:225:java.util.List getViewsBelowOf(android.view.View) -> getViewsBelowOf
    232:246:void getViewsBelowOfRecursive(java.util.List,android.view.ViewGroup,int,android.view.View) -> getViewsBelowOfRecursive
    52:67:void removeEditorView(android.view.View) -> removeEditorView
    120:125:void showFieldFooter(android.view.View) -> showFieldFooter
    93:96:void slideAndFadeIn(android.view.ViewGroup,int) -> slideAndFadeIn
    205:211:void translateViews(java.util.List,java.util.List,float,float,int,int) -> translateViews
com.android.contacts.editor.EditorAnimator$1 -> com.android.contacts.editor.EditorAnimator$1:
    67:67:void <init>(com.android.contacts.editor.EditorAnimator,java.util.List,android.view.View) -> <init>
    71:79:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.contacts.editor.EditorAnimator$2 -> com.android.contacts.editor.EditorAnimator$2:
    96:96:void <init>(com.android.contacts.editor.EditorAnimator,android.view.ViewGroup,int) -> <init>
    99:114:void run() -> run
com.android.contacts.editor.EditorAnimator$3 -> com.android.contacts.editor.EditorAnimator$3:
    125:125:void <init>(com.android.contacts.editor.EditorAnimator,android.view.View) -> <init>
    129:144:void run() -> run
com.android.contacts.editor.EditorAnimator$AnimatorRunner -> com.android.contacts.editor.EditorAnimator$AnimatorRunner:
    254:254:void <init>() -> <init>
    276:277:void endOldAnimation() -> endOldAnimation
    259:259:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    263:263:void run(java.util.List) -> run
    267:272:void run(java.util.List,android.animation.Animator$AnimatorListener) -> run
com.android.contacts.editor.EditorIntents -> com.android.contacts.editor.EditorIntents:
    47:50:android.content.Intent createEditContactIntent(android.content.Context,android.net.Uri,com.android.contacts.util.MaterialColorMapUtils$MaterialPalette,long) -> createEditContactIntent
    68:72:android.content.Intent createEditContactIntentForRawContact(android.content.Context,android.net.Uri,long,com.android.contacts.util.MaterialColorMapUtils$MaterialPalette) -> createEditContactIntentForRawContact
    97:106:android.content.Intent createEditOtherRawContactIntent(android.content.Context,android.net.Uri,long,java.util.ArrayList) -> createEditOtherRawContactIntent
    56:58:android.content.Intent createViewLinkedContactsIntent(android.content.Context,android.net.Uri,com.android.contacts.util.MaterialColorMapUtils$MaterialPalette) -> createViewLinkedContactsIntent
    113:116:void putMaterialPalette(android.content.Intent,com.android.contacts.util.MaterialColorMapUtils$MaterialPalette) -> putMaterialPalette
    124:124:void putPhotoId(android.content.Intent,long) -> putPhotoId
com.android.contacts.editor.EditorUiUtils -> com.android.contacts.editor.EditorUiUtils:
    71:95:void <clinit>() -> <clinit>
    68:68:void <init>() -> <init>
    115:119:java.lang.String getAccountHeaderLabelForMyProfile(android.content.Context,com.android.contacts.model.account.AccountInfo) -> getAccountHeaderLabelForMyProfile
    143:150:java.lang.String getAccountInfoContentDescription(java.lang.CharSequence,java.lang.CharSequence) -> getAccountInfoContentDescription
    125:133:java.lang.String getAccountTypeHeaderLabel(android.content.Context,com.android.contacts.model.account.AccountDisplayInfo) -> getAccountTypeHeaderLabel
    280:284:byte[] getCompressedThumbnailBitmapBytes(android.content.Context,android.net.Uri) -> getCompressedThumbnailBitmapBytes
    105:109:int getLayoutResourceId(java.lang.String) -> getLayoutResourceId
    157:195:android.graphics.drawable.Drawable getMimeTypeDrawable(android.content.Context,java.lang.String) -> getMimeTypeDrawable
    257:259:android.graphics.Bitmap getPhotoBitmap(com.android.contacts.model.ValuesDelta) -> getPhotoBitmap
    232:233:java.lang.Long getPhotoFileId(com.android.contacts.model.ValuesDelta) -> getPhotoFileId
    206:211:java.lang.String getRingtoneStringFromUri(android.net.Uri,int) -> getRingtoneStringFromUri
    219:222:android.net.Uri getRingtoneUriFromString(java.lang.String,int) -> getRingtoneUriFromString
    241:249:void loadPhoto(com.android.contacts.ContactPhotoManager,android.widget.ImageView,android.net.Uri) -> loadPhoto
    266:273:void setDefaultPhoto(android.widget.ImageView,android.content.res.Resources,com.android.contacts.util.MaterialColorMapUtils$MaterialPalette) -> setDefaultPhoto
com.android.contacts.editor.EditorUiUtils$1 -> com.android.contacts.editor.EditorUiUtils$1:
    241:241:void <init>() -> <init>
com.android.contacts.editor.EventFieldEditorView -> com.android.contacts.editor.EventFieldEditorView:
    61:61:void <init>(android.content.Context) -> <init>
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:49:void access$000(com.android.contacts.editor.EventFieldEditorView) -> access$000
    267:272:void clearAllFields() -> clearAllFields
    198:259:android.app.Dialog createDatePickerDialog() -> createDatePickerDialog
    145:150:android.app.Dialog createDialog(android.os.Bundle) -> createDialog
    156:156:com.android.contacts.model.account.AccountType$EventEditType getType() -> getType
    289:292:boolean isBirthdayType() -> isBirthdayType
    138:140:boolean isEmpty() -> isEmpty
    75:83:void onFinishInflate() -> onFinishInflate
    162:190:void onLabelRebuilt() -> onLabelRebuilt
    121:132:void rebuildDateView() -> rebuildDateView
    98:98:void requestFocusForFirstEditField() -> requestFocusForFirstEditField
    279:280:void restoreBirthday() -> restoreBirthday
    103:105:void setEnabled(boolean) -> setEnabled
    111:117:void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator) -> setValues
com.android.contacts.editor.EventFieldEditorView$1 -> com.android.contacts.editor.EventFieldEditorView$1:
    83:83:void <init>(com.android.contacts.editor.EventFieldEditorView) -> <init>
    86:86:void onClick(android.view.View) -> onClick
com.android.contacts.editor.EventFieldEditorView$2 -> com.android.contacts.editor.EventFieldEditorView$2:
    231:231:void <init>(com.android.contacts.editor.EventFieldEditorView,boolean,com.android.contacts.model.dataitem.DataKind,java.lang.String) -> <init>
    234:256:void onDateSet(com.android.contacts.datepicker.DatePicker,int,int,int) -> onDateSet
com.android.contacts.editor.GroupMembershipView -> com.android.contacts.editor.GroupMembershipView:
    167:184:void <init>(android.content.Context) -> <init>
    167:188:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:58:int access$000(com.android.contacts.editor.GroupMembershipView) -> access$000
    58:58:boolean access$102(com.android.contacts.editor.GroupMembershipView,boolean) -> access$102
    255:255:boolean accountHasGroups() -> accountHasGroups
    479:486:void createNewGroup() -> createNewGroup
    460:469:boolean hasMembership(long) -> hasMembership
    449:453:boolean isGroupChecked(long) -> isGroupChecked
    342:393:void onClick(android.view.View) -> onClick
    398:400:void onDetachedFromWindow() -> onDetachedFromWindow
    193:199:void onFinishInflate() -> onFinishInflate
    405:445:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    213:215:void setEnabled(boolean) -> setEnabled
    226:239:void setGroupMetaData(android.database.Cursor) -> setGroupMetaData
    203:207:void setGroupNameEditDialogFragment() -> setGroupNameEditDialogFragment
    220:222:void setKind(com.android.contacts.model.dataitem.DataKind) -> setKind
    259:266:void setState(com.android.contacts.model.RawContactDelta) -> setState
    270:336:void updateView() -> updateView
    247:247:boolean wasGroupMetaDataBound() -> wasGroupMetaDataBound
com.android.contacts.editor.GroupMembershipView$1 -> com.android.contacts.editor.GroupMembershipView$1:
    168:168:void <init>(com.android.contacts.editor.GroupMembershipView) -> <init>
    175:175:void onGroupNameEditCompleted(java.lang.String) -> onGroupNameEditCompleted
com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter -> com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter:
    104:105:void <init>(com.android.contacts.editor.GroupMembershipView,android.content.Context,int) -> <init>
    110:110:boolean getItemIsCheckable(int) -> getItemIsCheckable
    115:115:int getItemViewType(int) -> getItemViewType
    142:142:int getNewestGroupPosition() -> getNewestGroupPosition
    125:136:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    146:146:void setNewestGroupPosition(int) -> setNewestGroupPosition
com.android.contacts.editor.GroupMembershipView$GroupSelectionItem -> com.android.contacts.editor.GroupMembershipView$GroupSelectionItem:
    70:73:void <init>(long,java.lang.String,boolean) -> <init>
    77:77:long getGroupId() -> getGroupId
    81:81:boolean isChecked() -> isChecked
    85:85:void setChecked(boolean) -> setChecked
    90:90:java.lang.String toString() -> toString
com.android.contacts.editor.JoinContactConfirmationDialogFragment -> com.android.contacts.editor.JoinContactConfirmationDialogFragment:
    30:30:void <init>() -> <init>
    30:30:long access$000(com.android.contacts.editor.JoinContactConfirmationDialogFragment) -> access$000
    66:67:void onCreate(android.os.Bundle) -> onCreate
    72:84:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    52:59:void show(com.android.contacts.editor.ContactEditorFragment,long) -> show
com.android.contacts.editor.JoinContactConfirmationDialogFragment$1 -> com.android.contacts.editor.JoinContactConfirmationDialogFragment$1:
    75:75:void <init>(com.android.contacts.editor.JoinContactConfirmationDialogFragment) -> <init>
    78:79:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.KindSectionData -> com.android.contacts.editor.KindSectionData:
    40:43:void <init>(com.android.contacts.model.account.AccountType,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta) -> <init>
    47:47:com.android.contacts.model.account.AccountType getAccountType() -> getAccountType
    115:115:com.android.contacts.model.dataitem.DataKind getDataKind() -> getDataKind
    123:123:java.lang.String getMimeType() -> getMimeType
    70:73:java.util.List getNonEmptyValuesDeltas() -> getNonEmptyValuesDeltas
    119:119:com.android.contacts.model.RawContactDelta getRawContactDelta() -> getRawContactDelta
    52:53:java.util.List getValuesDeltas() -> getValuesDeltas
    58:62:java.util.List getVisibleValuesDeltas() -> getVisibleValuesDeltas
    104:108:boolean isEmpty(com.android.contacts.model.ValuesDelta) -> isEmpty
com.android.contacts.editor.KindSectionView -> com.android.contacts.editor.KindSectionView:
    166:166:void <init>(android.content.Context) -> <init>
    158:170:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:49:boolean access$000(com.android.contacts.editor.KindSectionView) -> access$000
    49:49:android.view.ViewGroup access$100(com.android.contacts.editor.KindSectionView) -> access$100
    397:406:void addGroupEditorView(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind) -> addGroupEditorView
    330:393:void addNameEditorViews(com.android.contacts.model.account.AccountType,com.android.contacts.model.RawContactDelta) -> addNameEditorViews
    412:422:android.view.View addNonNameEditorView(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.ValuesDelta,com.android.contacts.editor.Editor$EditorListener) -> addNonNameEditorView
    570:573:void deleteView(android.view.View,boolean) -> deleteView
    587:591:java.util.List getEmptyEditors() -> getEmptyEditors
    250:254:com.android.contacts.editor.StructuredNameEditorView getNameEditorView() -> getNameEditorView
    258:264:com.android.contacts.editor.TextFieldsEditorView getPhoneticEditorView() -> getPhoneticEditorView
    565:565:void hideView(android.view.View) -> hideView
    186:194:void onFinishInflate() -> onFinishInflate
    303:324:void rebuildFromState() -> rebuildFromState
    175:179:void setEnabled(boolean) -> setEnabled
    221:224:void setGroupMetaData(android.database.Cursor) -> setGroupMetaData
    216:216:void setHideWhenEmpty(boolean) -> setHideWhenEmpty
    198:198:void setIsUserProfile(boolean) -> setIsUserProfile
    207:207:void setShowOneEmptyEditor(boolean) -> setShowOneEmptyEditor
    282:299:void setState(com.android.contacts.editor.KindSectionData,com.android.contacts.editor.ViewIdGenerator,com.android.contacts.editor.RawContactEditorView$Listener) -> setState
    579:582:void showView(android.view.View,boolean) -> showView
    434:473:void updateEmptyEditors(boolean) -> updateEmptyEditors
    480:512:void updateEmptyNameEditors(boolean) -> updateEmptyNameEditors
    520:560:void updateEmptyNonNameEditors(boolean) -> updateEmptyNonNameEditors
com.android.contacts.editor.KindSectionView$EventEditorListener -> com.android.contacts.editor.KindSectionView$EventEditorListener:
    132:132:void <init>(com.android.contacts.editor.KindSectionView) -> <init>
    132:132:void <init>(com.android.contacts.editor.KindSectionView,com.android.contacts.editor.KindSectionView$1) -> <init>
    141:149:void onDeleteRequested(com.android.contacts.editor.Editor) -> onDeleteRequested
    136:136:void onRequest(int) -> onRequest
com.android.contacts.editor.KindSectionView$NonNameEditorListener -> com.android.contacts.editor.KindSectionView$NonNameEditorListener:
    109:109:void <init>(com.android.contacts.editor.KindSectionView) -> <init>
    109:109:void <init>(com.android.contacts.editor.KindSectionView,com.android.contacts.editor.KindSectionView$1) -> <init>
    122:127:void onDeleteRequested(com.android.contacts.editor.Editor) -> onDeleteRequested
    116:116:void onRequest(int) -> onRequest
com.android.contacts.editor.KindSectionView$OtherNameKindEditorListener -> com.android.contacts.editor.KindSectionView$OtherNameKindEditorListener:
    92:92:void <init>() -> <init>
    92:92:void <init>(com.android.contacts.editor.KindSectionView$1) -> <init>
    100:100:void onDeleteRequested(com.android.contacts.editor.Editor) -> onDeleteRequested
com.android.contacts.editor.KindSectionView$StructuredNameEditorListener -> com.android.contacts.editor.KindSectionView$StructuredNameEditorListener:
    64:67:void <init>(com.android.contacts.model.ValuesDelta,long,com.android.contacts.editor.RawContactEditorView$Listener) -> <init>
    84:84:void onDeleteRequested(com.android.contacts.editor.Editor) -> onDeleteRequested
    73:78:void onRequest(int) -> onRequest
com.android.contacts.editor.LabeledEditorView -> com.android.contacts.editor.LabeledEditorView:
    95:95:void <clinit>() -> <clinit>
    80:112:void <init>(android.content.Context) -> <init>
    80:117:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:122:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:64:boolean access$000(com.android.contacts.editor.LabeledEditorView) -> access$000
    64:64:com.android.contacts.editor.Editor$EditorListener access$100(com.android.contacts.editor.LabeledEditorView) -> access$100
    64:64:com.android.contacts.model.RawContactDelta access$200(com.android.contacts.editor.LabeledEditorView) -> access$200
    64:64:com.android.contacts.model.dataitem.DataKind access$300(com.android.contacts.editor.LabeledEditorView) -> access$300
    64:64:com.android.contacts.model.account.AccountType$EditType access$400(com.android.contacts.editor.LabeledEditorView) -> access$400
    64:64:com.android.contacts.model.account.AccountType$EditType access$402(com.android.contacts.editor.LabeledEditorView,com.android.contacts.model.account.AccountType$EditType) -> access$402
    64:64:com.android.contacts.model.ValuesDelta access$500(com.android.contacts.editor.LabeledEditorView) -> access$500
    442:502:android.app.Dialog createCustomDialog() -> createCustomDialog
    565:571:android.app.Dialog createDialog(android.os.Bundle) -> createDialog
    196:199:void deleteEditor() -> deleteEditor
    551:560:com.android.contacts.util.DialogManager getDialogManager() -> getDialogManager
    255:255:com.android.contacts.editor.Editor$EditorListener getEditorListener() -> getEditorListener
    284:284:com.android.contacts.model.ValuesDelta getEntry() -> getEntry
    280:280:com.android.contacts.model.dataitem.DataKind getKind() -> getKind
    288:288:com.android.contacts.model.account.AccountType$EditType getType() -> getType
    431:431:com.android.contacts.model.ValuesDelta getValues() -> getValues
    130:130:void init(android.content.Context) -> init
    385:390:boolean isFieldChanged(java.lang.String,java.lang.String) -> isFieldChanged
    203:203:boolean isReadOnly() -> isReadOnly
    191:191:void markDeleted() -> markDeleted
    358:379:void notifyEditorListener() -> notifyEditorListener
    176:179:void onAttachedToWindow() -> onAttachedToWindow
    184:185:void onDetachedFromWindow() -> onDetachedFromWindow
    323:331:void onFieldChanged(java.lang.String,java.lang.String) -> onFieldChanged
    138:171:void onFinishInflate() -> onFinishInflate
    244:245:void onOptionalFieldVisibilityChange() -> onOptionalFieldVisibilityChange
    520:539:void onTypeSelectionChange(int) -> onTypeSelectionChange
    296:315:void rebuildLabel() -> rebuildLabel
    394:394:void rebuildValues() -> rebuildValues
    346:346:void saveValue(java.lang.String,java.lang.String) -> saveValue
    260:261:void setDeletable(boolean) -> setDeletable
    238:239:void setDeleteButtonVisible(boolean) -> setDeleteButtonVisible
    251:251:void setEditorListener(com.android.contacts.editor.Editor$EditorListener) -> setEditorListener
    266:268:void setEnabled(boolean) -> setEnabled
    405:427:void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator) -> setValues
    229:233:void setupDeleteButton() -> setupDeleteButton
    218:221:void setupLabelButton(boolean) -> setupLabelButton
    545:547:void showDialog(int) -> showDialog
    509:510:void updateCustomDialogOkButtonState(android.app.AlertDialog,android.widget.EditText) -> updateCustomDialogOkButtonState
    354:354:void updateEmptiness() -> updateEmptiness
com.android.contacts.editor.LabeledEditorView$1 -> com.android.contacts.editor.LabeledEditorView$1:
    97:97:void <init>(com.android.contacts.editor.LabeledEditorView) -> <init>
    102:102:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
com.android.contacts.editor.LabeledEditorView$2 -> com.android.contacts.editor.LabeledEditorView$2:
    146:146:void <init>(com.android.contacts.editor.LabeledEditorView) -> <init>
    150:150:void onClick(android.view.View) -> onClick
com.android.contacts.editor.LabeledEditorView$2$1 -> com.android.contacts.editor.LabeledEditorView$2$1:
    150:150:void <init>(com.android.contacts.editor.LabeledEditorView$2) -> <init>
    156:163:void run() -> run
com.android.contacts.editor.LabeledEditorView$3 -> com.android.contacts.editor.LabeledEditorView$3:
    454:454:void <init>(com.android.contacts.editor.LabeledEditorView,android.widget.EditText) -> <init>
    457:474:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.LabeledEditorView$4 -> com.android.contacts.editor.LabeledEditorView$4:
    482:482:void <init>(com.android.contacts.editor.LabeledEditorView,android.app.AlertDialog,android.widget.EditText) -> <init>
    485:485:void onShow(android.content.DialogInterface) -> onShow
com.android.contacts.editor.LabeledEditorView$5 -> com.android.contacts.editor.LabeledEditorView$5:
    488:488:void <init>(com.android.contacts.editor.LabeledEditorView,android.app.AlertDialog,android.widget.EditText) -> <init>
    499:499:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.android.contacts.editor.LabeledEditorView$EditTypeAdapter -> com.android.contacts.editor.LabeledEditorView$EditTypeAdapter:
    584:602:void <init>(com.android.contacts.editor.LabeledEditorView,android.content.Context) -> <init>
    641:656:android.widget.TextView createViewFromResource(int,android.view.View,android.view.ViewGroup,int) -> createViewFromResource
    629:632:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    611:622:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    606:606:boolean hasCustomSelection() -> hasCustomSelection
    661:661:void setSelectedIndex(int) -> setSelectedIndex
com.android.contacts.editor.PhotoActionPopup -> com.android.contacts.editor.PhotoActionPopup:
    99:133:android.widget.ListPopupWindow createPopupMenu(android.content.Context,android.view.View,com.android.contacts.editor.PhotoActionPopup$Listener,int) -> createPopupMenu
    76:92:java.util.ArrayList getChoices(android.content.Context,int) -> getChoices
com.android.contacts.editor.PhotoActionPopup$1 -> com.android.contacts.editor.PhotoActionPopup$1:
    105:105:void <init>(java.util.ArrayList,com.android.contacts.editor.PhotoActionPopup$Listener,android.widget.ListPopupWindow) -> <init>
    108:121:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.contacts.editor.PhotoActionPopup$ChoiceListItem -> com.android.contacts.editor.PhotoActionPopup$ChoiceListItem:
    146:148:void <init>(int,java.lang.String) -> <init>
    157:157:int getId() -> getId
    153:153:java.lang.String toString() -> toString
com.android.contacts.editor.PhotoEditorView -> com.android.contacts.editor.PhotoEditorView:
    68:68:void <init>(android.content.Context) -> <init>
    72:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:boolean access$000(com.android.contacts.editor.PhotoEditorView) -> access$000
    39:39:float access$100(com.android.contacts.editor.PhotoEditorView) -> access$100
    39:39:float access$200(com.android.contacts.editor.PhotoEditorView) -> access$200
    149:149:void adjustDimensions() -> adjustDimensions
    80:82:float getTypedFloat(int) -> getTypedFloat
    173:173:boolean isWritablePhotoSet() -> isWritablePhotoSet
    215:216:void onClick(android.view.View) -> onClick
    87:91:void onFinishInflate() -> onFinishInflate
    210:210:void removePhoto() -> removePhoto
    186:188:void setDefaultPhoto(com.android.contacts.util.MaterialColorMapUtils$MaterialPalette) -> setDefaultPhoto
    201:203:void setFullSizedPhoto(android.net.Uri) -> setFullSizedPhoto
    96:96:void setListener(com.android.contacts.editor.PhotoEditorView$Listener) -> setListener
    116:116:void setPalette(com.android.contacts.util.MaterialColorMapUtils$MaterialPalette) -> setPalette
    126:144:void setPhoto(com.android.contacts.model.ValuesDelta) -> setPhoto
    180:182:void setPhoto(android.graphics.Bitmap) -> setPhoto
    100:111:void setReadOnly(boolean) -> setReadOnly
    192:193:void updatePhotoDescription() -> updatePhotoDescription
com.android.contacts.editor.PhotoEditorView$1 -> com.android.contacts.editor.PhotoEditorView$1:
    149:149:void <init>(com.android.contacts.editor.PhotoEditorView) -> <init>
    153:164:void run() -> run
com.android.contacts.editor.PhotoSourceDialogFragment -> com.android.contacts.editor.PhotoSourceDialogFragment:
    37:37:void <init>() -> <init>
    66:102:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    51:60:void show(android.app.Activity,int) -> show
com.android.contacts.editor.PhotoSourceDialogFragment$1 -> com.android.contacts.editor.PhotoSourceDialogFragment$1:
    75:75:void <init>(com.android.contacts.editor.PhotoSourceDialogFragment,java.util.ArrayList) -> <init>
    78:91:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.PickRawContactDialogFragment -> com.android.contacts.editor.PickRawContactDialogFragment:
    41:153:void <init>() -> <init>
    41:41:boolean access$002(com.android.contacts.editor.PickRawContactDialogFragment,boolean) -> access$002
    41:41:android.widget.ListAdapter access$100(com.android.contacts.editor.PickRawContactDialogFragment) -> access$100
    242:243:void finishActivity() -> finishActivity
    238:238:android.content.Context getContext() -> getContext
    156:159:com.android.contacts.editor.PickRawContactDialogFragment getInstance(com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata) -> getInstance
    165:225:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    230:232:void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.contacts.editor.PickRawContactDialogFragment$1 -> com.android.contacts.editor.PickRawContactDialogFragment$1:
    186:186:void <init>(com.android.contacts.editor.PickRawContactDialogFragment,com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata) -> <init>
    189:195:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.PickRawContactDialogFragment$2 -> com.android.contacts.editor.PickRawContactDialogFragment$2:
    199:199:void <init>(com.android.contacts.editor.PickRawContactDialogFragment) -> <init>
    202:205:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.PickRawContactDialogFragment$3 -> com.android.contacts.editor.PickRawContactDialogFragment$3:
    213:213:void <init>(com.android.contacts.editor.PickRawContactDialogFragment) -> <init>
    216:217:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.PickRawContactDialogFragment$RawContactAccountListAdapter -> com.android.contacts.editor.PickRawContactDialogFragment$RawContactAccountListAdapter:
    60:65:void <init>(com.android.contacts.editor.PickRawContactDialogFragment,android.content.Context,com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata) -> <init>
    70:70:int getCount() -> getCount
    75:75:java.lang.Object getItem(int) -> getItem
    80:80:long getItemId(int) -> getItemId
    88:136:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.android.contacts.editor.PickRawContactDialogFragment$RawContactAccountListAdapter$RawContactViewHolder -> com.android.contacts.editor.PickRawContactDialogFragment$RawContactAccountListAdapter$RawContactViewHolder:
    144:144:void <init>(com.android.contacts.editor.PickRawContactDialogFragment$RawContactAccountListAdapter) -> <init>
com.android.contacts.editor.PickRawContactLoader -> com.android.contacts.editor.PickRawContactLoader:
    32:32:void <clinit>() -> <clinit>
    56:57:void <init>(android.content.Context,android.net.Uri) -> <init>
    27:27:void deliverResult(java.lang.Object) -> deliverResult
    158:160:void deliverResult(com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata) -> deliverResult
    180:184:android.net.Uri ensureIsContactUri(android.net.Uri) -> ensureIsContactUri
    27:27:java.lang.Object loadInBackground() -> loadInBackground
    62:151:com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata loadInBackground() -> loadInBackground
    166:170:void onStartLoading() -> onStartLoading
com.android.contacts.editor.PickRawContactLoader$RawContact -> com.android.contacts.editor.PickRawContactLoader$RawContact:
    262:262:void <clinit>() -> <clinit>
    261:261:void <init>(android.os.Parcel,com.android.contacts.editor.PickRawContactLoader$1) -> <init>
    283:283:void <init>() -> <init>
    285:292:void <init>(android.os.Parcel) -> <init>
    302:308:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.editor.PickRawContactLoader$RawContact$1 -> com.android.contacts.editor.PickRawContactLoader$RawContact$1:
    263:263:void <init>() -> <init>
    263:263:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    266:266:com.android.contacts.editor.PickRawContactLoader$RawContact createFromParcel(android.os.Parcel) -> createFromParcel
    263:263:java.lang.Object[] newArray(int) -> newArray
    271:271:com.android.contacts.editor.PickRawContactLoader$RawContact[] newArray(int) -> newArray
com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata -> com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata:
    190:190:void <clinit>() -> <clinit>
    189:189:void <init>(android.os.Parcel,com.android.contacts.editor.PickRawContactLoader$1) -> <init>
    205:208:void <init>() -> <init>
    205:214:void <init>(android.os.Parcel) -> <init>
    235:239:int getIndexOfFirstWritableAccount(com.android.contacts.model.AccountTypeManager) -> getIndexOfFirstWritableAccount
    221:226:void trimReadOnly(com.android.contacts.model.AccountTypeManager) -> trimReadOnly
    254:257:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata$1 -> com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata$1:
    191:191:void <init>() -> <init>
    191:191:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    194:194:com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata createFromParcel(android.os.Parcel) -> createFromParcel
    191:191:java.lang.Object[] newArray(int) -> newArray
    199:199:com.android.contacts.editor.PickRawContactLoader$RawContactsMetadata[] newArray(int) -> newArray
com.android.contacts.editor.RawContactDeltaComparator -> com.android.contacts.editor.RawContactDeltaComparator:
    36:37:void <init>(android.content.Context) -> <init>
    32:32:int compare(java.lang.Object,java.lang.Object) -> compare
    43:131:int compare(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta) -> compare
com.android.contacts.editor.RawContactEditorView -> com.android.contacts.editor.RawContactEditorView:
    205:231:void <init>(android.content.Context) -> <init>
    205:235:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    83:83:java.util.List access$300(com.android.contacts.editor.RawContactEditorView) -> access$300
    83:83:android.view.View access$400(com.android.contacts.editor.RawContactEditorView) -> access$400
    83:83:com.android.contacts.editor.RawContactEditorView$Listener access$500(com.android.contacts.editor.RawContactEditorView) -> access$500
    83:83:com.android.contacts.model.account.AccountWithDataSet access$600(com.android.contacts.editor.RawContactEditorView) -> access$600
    83:83:boolean access$702(com.android.contacts.editor.RawContactEditorView,boolean) -> access$702
    806:841:void addAccountSelector(com.android.contacts.model.RawContactDelta) -> addAccountSelector
    876:891:void addKindSectionViews() -> addKindSectionViews
    845:870:void addPhotoView() -> addPhotoView
    644:720:void addReadOnlyRawContactEditorViews() -> addReadOnlyRawContactEditorViews
    576:583:void applyIntentExtras() -> applyIntentExtras
    725:725:void bindData(android.graphics.drawable.Drawable,java.lang.String,java.lang.CharSequence,java.lang.CharSequence,boolean) -> bindData
    730:752:void bindData(android.graphics.drawable.Drawable,java.lang.String,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean) -> bindData
    948:948:void elog(java.lang.String) -> elog
    419:420:android.view.View getAggregationAnchorView() -> getAggregationAnchorView
    398:398:com.android.contacts.model.RawContactDelta getCurrentRawContactDelta() -> getCurrentRawContactDelta
    384:387:com.android.contacts.editor.StructuredNameEditorView getNameEditorView() -> getNameEditorView
    391:394:com.android.contacts.editor.TextFieldsEditorView getPhoneticEditorView() -> getPhoneticEditorView
    380:380:long getPhotoRawContactId() -> getPhotoRawContactId
    933:934:boolean hasMoreFields() -> hasMoreFields
    897:913:com.android.contacts.editor.KindSectionView inflateKindSectionView(android.view.ViewGroup,com.android.contacts.editor.KindSectionData,java.lang.String) -> inflateKindSectionView
    539:539:boolean isReadOnlyRawContact() -> isReadOnlyRawContact
    373:373:boolean isWritablePhotoSet() -> isWritablePhotoSet
    268:269:void onClick(android.view.View) -> onClick
    247:263:void onFinishInflate() -> onFinishInflate
    292:300:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    284:286:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    587:637:void parseRawContactDelta() -> parseRawContactDelta
    543:569:void pickRawContactDelta() -> pickRawContactDelta
    312:316:void removePhoto() -> removePhoto
    791:801:void setAccountHeader(java.lang.String,java.lang.String) -> setAccountHeader
    756:786:void setAccountInfo() -> setAccountInfo
    524:527:void setAccounts(java.util.List) -> setAccounts
    275:278:void setEnabled(boolean) -> setEnabled
    323:323:void setFullSizePhoto(android.net.Uri) -> setFullSizePhoto
    424:432:void setGroupMetaData(android.database.Cursor) -> setGroupMetaData
    437:437:void setIntentExtras(android.os.Bundle) -> setIntentExtras
    242:242:void setListener(com.android.contacts.editor.RawContactEditorView$Listener) -> setListener
    308:308:void setPhotoListener(com.android.contacts.editor.PhotoEditorView$Listener) -> setPhotoListener
    445:520:void setState(com.android.contacts.model.RawContactDeltaList,com.android.contacts.util.MaterialColorMapUtils$MaterialPalette,com.android.contacts.editor.ViewIdGenerator,boolean,boolean,com.android.contacts.model.account.AccountWithDataSet,long) -> setState
    531:535:void setupEditorNormally() -> setupEditorNormally
    920:929:void showAllFields() -> showAllFields
    353:364:void unsetSuperPrimaryFromAllPhotos() -> unsetSuperPrimaryFromAllPhotos
    327:349:void updatePhoto(android.net.Uri) -> updatePhoto
    942:943:void wlog(java.lang.String) -> wlog
com.android.contacts.editor.RawContactEditorView$1 -> com.android.contacts.editor.RawContactEditorView$1:
    807:807:void <init>(com.android.contacts.editor.RawContactEditorView,com.android.contacts.model.RawContactDelta) -> <init>
    810:835:void onClick(android.view.View) -> onClick
com.android.contacts.editor.RawContactEditorView$1$1 -> com.android.contacts.editor.RawContactEditorView$1$1:
    820:820:void <init>(com.android.contacts.editor.RawContactEditorView$1,android.widget.ListPopupWindow,com.android.contacts.util.AccountsListAdapter) -> <init>
    824:830:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.contacts.editor.RawContactEditorView$MimeTypeComparator -> com.android.contacts.editor.RawContactEditorView$MimeTypeComparator:
    131:131:void <clinit>() -> <clinit>
    129:129:void <init>() -> <init>
    129:129:void <init>(com.android.contacts.editor.RawContactEditorView$1) -> <init>
    129:129:int compare(java.lang.Object,java.lang.Object) -> compare
    153:157:int compare(java.lang.String,java.lang.String) -> compare
com.android.contacts.editor.RawContactEditorView$SavedState -> com.android.contacts.editor.RawContactEditorView$SavedState:
    167:167:void <clinit>() -> <clinit>
    165:165:void <init>(android.os.Parcel,com.android.contacts.editor.RawContactEditorView$1) -> <init>
    180:180:void <init>(android.os.Parcelable) -> <init>
    184:185:void <init>(android.os.Parcel) -> <init>
    165:165:boolean access$200(com.android.contacts.editor.RawContactEditorView$SavedState) -> access$200
    165:165:boolean access$202(com.android.contacts.editor.RawContactEditorView$SavedState,boolean) -> access$202
    190:191:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.editor.RawContactEditorView$SavedState$1 -> com.android.contacts.editor.RawContactEditorView$SavedState$1:
    168:168:void <init>() -> <init>
    168:168:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:com.android.contacts.editor.RawContactEditorView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    168:168:java.lang.Object[] newArray(int) -> newArray
    173:173:com.android.contacts.editor.RawContactEditorView$SavedState[] newArray(int) -> newArray
com.android.contacts.editor.SelectAccountDialogFragment -> com.android.contacts.editor.SelectAccountDialogFragment:
    44:44:void <init>() -> <init>
    44:44:com.android.contacts.util.AccountsListAdapter access$000(com.android.contacts.editor.SelectAccountDialogFragment) -> access$000
    44:44:void access$100(com.android.contacts.editor.SelectAccountDialogFragment,com.android.contacts.model.account.AccountWithDataSet) -> access$100
    144:146:com.android.contacts.editor.SelectAccountDialogFragment$Listener getListener() -> getListener
    136:138:void onAccountSelected(com.android.contacts.model.account.AccountWithDataSet) -> onAccountSelected
    153:155:void onAccountsLoaded(java.util.List) -> onAccountsLoaded
    119:120:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    125:128:void onCancel(android.content.DialogInterface) -> onCancel
    83:87:void onCreate(android.os.Bundle) -> onCreate
    93:113:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    66:66:void show(android.app.FragmentManager,int,com.android.contacts.model.AccountTypeManager$AccountFilter,android.os.Bundle) -> show
    71:78:void show(android.app.FragmentManager,int,com.android.contacts.model.AccountTypeManager$AccountFilter,android.os.Bundle,java.lang.String) -> show
com.android.contacts.editor.SelectAccountDialogFragment$1 -> com.android.contacts.editor.SelectAccountDialogFragment$1:
    100:100:void <init>(com.android.contacts.editor.SelectAccountDialogFragment) -> <init>
    103:105:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.SplitContactConfirmationDialogFragment -> com.android.contacts.editor.SplitContactConfirmationDialogFragment:
    34:34:void <init>() -> <init>
    34:34:boolean access$000(com.android.contacts.editor.SplitContactConfirmationDialogFragment) -> access$000
    34:34:com.android.contacts.editor.SplitContactConfirmationDialogFragment$Listener access$100(com.android.contacts.editor.SplitContactConfirmationDialogFragment) -> access$100
    104:106:com.android.contacts.editor.SplitContactConfirmationDialogFragment$Listener getListener() -> getListener
    111:112:void onCancel(android.content.DialogInterface) -> onCancel
    73:75:void onCreate(android.os.Bundle) -> onCreate
    80:100:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    59:66:void show(com.android.contacts.editor.ContactEditorFragment,boolean) -> show
com.android.contacts.editor.SplitContactConfirmationDialogFragment$1 -> com.android.contacts.editor.SplitContactConfirmationDialogFragment$1:
    87:87:void <init>(com.android.contacts.editor.SplitContactConfirmationDialogFragment) -> <init>
    90:90:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.SplitContactConfirmationDialogFragment$2 -> com.android.contacts.editor.SplitContactConfirmationDialogFragment$2:
    93:93:void <init>(com.android.contacts.editor.SplitContactConfirmationDialogFragment) -> <init>
    96:96:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.StructuredNameEditorView -> com.android.contacts.editor.StructuredNameEditorView:
    50:50:void <init>(android.content.Context) -> <init>
    54:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    127:139:java.lang.String getPhonetic(java.lang.String) -> getPhonetic
    90:99:void onFieldChanged(java.lang.String,java.lang.String) -> onFieldChanged
    63:68:void onFinishInflate() -> onFinishInflate
    167:171:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    159:161:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    146:146:void setPhoneticView(com.android.contacts.editor.TextFieldsEditorView) -> setPhoneticView
    74:85:void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator) -> setValues
    105:117:void updatePhonetic(java.lang.String,java.lang.String) -> updatePhonetic
com.android.contacts.editor.StructuredNameEditorView$SavedState -> com.android.contacts.editor.StructuredNameEditorView$SavedState:
    200:200:void <clinit>() -> <clinit>
    174:174:void <init>(android.os.Parcel,com.android.contacts.editor.StructuredNameEditorView$1) -> <init>
    179:180:void <init>(android.os.Parcelable) -> <init>
    183:188:void <init>(android.os.Parcel) -> <init>
    193:196:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.editor.StructuredNameEditorView$SavedState$1 -> com.android.contacts.editor.StructuredNameEditorView$SavedState$1:
    201:201:void <init>() -> <init>
    201:201:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    204:204:com.android.contacts.editor.StructuredNameEditorView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    201:201:java.lang.Object[] newArray(int) -> newArray
    209:209:com.android.contacts.editor.StructuredNameEditorView$SavedState[] newArray(int) -> newArray
com.android.contacts.editor.SuggestionEditConfirmationDialogFragment -> com.android.contacts.editor.SuggestionEditConfirmationDialogFragment:
    28:28:void <init>() -> <init>
    47:65:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    34:42:void show(com.android.contacts.editor.ContactEditorFragment,android.net.Uri,long) -> show
com.android.contacts.editor.SuggestionEditConfirmationDialogFragment$1 -> com.android.contacts.editor.SuggestionEditConfirmationDialogFragment$1:
    51:51:void <init>(com.android.contacts.editor.SuggestionEditConfirmationDialogFragment) -> <init>
    54:60:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.editor.TextFieldsEditorView -> com.android.contacts.editor.TextFieldsEditorView:
    59:59:void <clinit>() -> <clinit>
    61:175:void <init>(android.content.Context) -> <init>
    61:175:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:175:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    58:58:int access$000(com.android.contacts.editor.TextFieldsEditorView) -> access$000
    58:58:int access$002(com.android.contacts.editor.TextFieldsEditorView,int) -> access$002
    58:58:android.view.ViewGroup access$100(com.android.contacts.editor.TextFieldsEditorView) -> access$100
    58:58:boolean access$200(com.android.contacts.editor.TextFieldsEditorView) -> access$200
    58:58:boolean access$202(com.android.contacts.editor.TextFieldsEditorView,boolean) -> access$202
    58:58:boolean access$300(com.android.contacts.editor.TextFieldsEditorView) -> access$300
    58:58:boolean access$302(com.android.contacts.editor.TextFieldsEditorView,boolean) -> access$302
    58:58:java.lang.String access$400(com.android.contacts.editor.TextFieldsEditorView) -> access$400
    58:58:java.lang.String access$402(com.android.contacts.editor.TextFieldsEditorView,java.lang.String) -> access$402
    58:58:boolean access$500(com.android.contacts.editor.TextFieldsEditorView,android.text.Editable) -> access$500
    58:58:java.lang.String access$600(com.android.contacts.editor.TextFieldsEditorView) -> access$600
    58:58:java.lang.String access$602(com.android.contacts.editor.TextFieldsEditorView,java.lang.String) -> access$602
    58:58:java.lang.String access$700(com.android.contacts.editor.TextFieldsEditorView,java.lang.String) -> access$700
    520:523:void clearAllFields() -> clearAllFields
    244:253:java.lang.String getNameField(java.lang.String) -> getNameField
    409:411:boolean isEmpty() -> isEmpty
    229:232:boolean isUnFixed(android.text.Editable) -> isUnFixed
    94:115:void onFinishInflate() -> onFinishInflate
    469:479:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    450:458:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    205:218:void requestFocusForFirstEditField() -> requestFocusForFirstEditField
    163:171:void setEnabled(boolean) -> setEnabled
    262:404:void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator) -> setValues
    194:200:void setupExpansionView(boolean,boolean) -> setupExpansionView
com.android.contacts.editor.TextFieldsEditorView$1 -> com.android.contacts.editor.TextFieldsEditorView$1:
    115:115:void <init>(com.android.contacts.editor.TextFieldsEditorView) -> <init>
    118:139:void onClick(android.view.View) -> onClick
com.android.contacts.editor.TextFieldsEditorView$2 -> com.android.contacts.editor.TextFieldsEditorView$2:
    175:175:void <init>(com.android.contacts.editor.TextFieldsEditorView) -> <init>
    178:185:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.android.contacts.editor.TextFieldsEditorView$3 -> com.android.contacts.editor.TextFieldsEditorView$3:
    324:325:void <init>(com.android.contacts.editor.TextFieldsEditorView,java.lang.String) -> <init>
    329:345:void afterTextChanged(android.text.Editable) -> afterTextChanged
    351:357:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    363:373:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.android.contacts.editor.TextFieldsEditorView$SavedState -> com.android.contacts.editor.TextFieldsEditorView$SavedState:
    504:504:void <clinit>() -> <clinit>
    482:482:void <init>(android.os.Parcel,com.android.contacts.editor.TextFieldsEditorView$1) -> <init>
    487:487:void <init>(android.os.Parcelable) -> <init>
    491:493:void <init>(android.os.Parcel) -> <init>
    498:500:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.editor.TextFieldsEditorView$SavedState$1 -> com.android.contacts.editor.TextFieldsEditorView$SavedState$1:
    505:505:void <init>() -> <init>
    505:505:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    508:508:com.android.contacts.editor.TextFieldsEditorView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    505:505:java.lang.Object[] newArray(int) -> newArray
    513:513:com.android.contacts.editor.TextFieldsEditorView$SavedState[] newArray(int) -> newArray
com.android.contacts.editor.ViewIdGenerator -> com.android.contacts.editor.ViewIdGenerator:
    51:119:void <clinit>() -> <clinit>
    47:54:void <init>() -> <init>
    35:35:void access$000(com.android.contacts.editor.ViewIdGenerator,android.os.Parcel) -> access$000
    73:79:int getId(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.ValuesDelta,int) -> getId
    86:105:java.lang.String getMapKey(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.ValuesDelta,int) -> getMapKey
    115:116:void readFromParcel(android.os.Parcel) -> readFromParcel
    110:111:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.editor.ViewIdGenerator$1 -> com.android.contacts.editor.ViewIdGenerator$1:
    120:120:void <init>() -> <init>
    120:120:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    122:123:com.android.contacts.editor.ViewIdGenerator createFromParcel(android.os.Parcel) -> createFromParcel
    120:120:java.lang.Object[] newArray(int) -> newArray
    128:128:com.android.contacts.editor.ViewIdGenerator[] newArray(int) -> newArray
com.android.contacts.editor.ViewSelectedFilter -> com.android.contacts.editor.ViewSelectedFilter:
    31:32:void <init>(android.view.View) -> <init>
    48:51:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    41:42:void suppressViewSelectedEvent(android.view.View) -> suppressViewSelectedEvent
com.android.contacts.extensions.ExtensionsFactory -> com.android.contacts.extensions.ExtensionsFactory:
    93:93:com.android.contacts.extensions.ExtendedPhoneDirectoriesManager getExtendedPhoneDirectoriesManager() -> getExtendedPhoneDirectoriesManager
com.android.contacts.format.FormatUtils -> com.android.contacts.format.FormatUtils:
    30:30:void <init>() -> <init>
    105:108:java.lang.CharSequence applyStyleToSpan(int,java.lang.CharSequence,int,int,int) -> applyStyleToSpan
    130:130:java.lang.String charArrayBufferToString(android.database.CharArrayBuffer) -> charArrayBufferToString
    115:123:void copyToCharArrayBuffer(java.lang.String,android.database.CharArrayBuffer) -> copyToCharArrayBuffer
    146:176:int indexOfWordPrefix(java.lang.CharSequence,java.lang.String) -> indexOfWordPrefix
    40:41:int overlapPoint(android.database.CharArrayBuffer,android.database.CharArrayBuffer) -> overlapPoint
    53:53:int overlapPoint(java.lang.String,java.lang.String) -> overlapPoint
    64:80:int overlapPoint(char[],char[]) -> overlapPoint
com.android.contacts.format.TextHighlighter -> com.android.contacts.format.TextHighlighter:
    28:37:void <init>(int) -> <init>
    63:63:void applyMaskingHighlight(android.text.SpannableString,int,int) -> applyMaskingHighlight
    79:88:java.lang.CharSequence applyPrefixHighlight(java.lang.CharSequence,java.lang.String) -> applyPrefixHighlight
    52:52:android.text.style.CharacterStyle getStyleSpan() -> getStyleSpan
    48:48:void setPrefixText(android.widget.TextView,java.lang.String,java.lang.String) -> setPrefixText
com.android.contacts.group.GroupListItem -> com.android.contacts.group.GroupListItem:
    35:44:void <init>(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,boolean,int,boolean,java.lang.String) -> <init>
    60:60:long getGroupId() -> getGroupId
    68:68:int getMemberCount() -> getMemberCount
    84:84:java.lang.String getSystemId() -> getSystemId
    64:64:java.lang.String getTitle() -> getTitle
    80:80:boolean isReadOnly() -> isReadOnly
com.android.contacts.group.GroupMembersAdapter -> com.android.contacts.group.GroupMembersAdapter:
    74:76:void <init>(android.content.Context) -> <init>
    173:176:void bindDeleteButton(com.android.contacts.list.ContactListItemView,int) -> bindDeleteButton
    168:169:void bindName(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindName
    158:163:void bindSectionHeaderAndDivider(com.android.contacts.list.ContactListItemView,int) -> bindSectionHeaderAndDivider
    148:154:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    109:128:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    94:95:long getContactId(int) -> getContactId
    86:89:android.net.Uri getContactUri(int) -> getContactUri
    36:36:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    141:142:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    99:100:void setDisplayDeleteButtons(boolean) -> setDisplayDeleteButtons
    81:81:void setGroupId(long) -> setGroupId
com.android.contacts.group.GroupMembersAdapter$GroupMembersQuery -> com.android.contacts.group.GroupMembersAdapter$GroupMembersQuery:
    40:50:void <clinit>() -> <clinit>
    38:38:java.lang.String[] access$000() -> access$000
    38:38:java.lang.String[] access$100() -> access$100
com.android.contacts.group.GroupMembersFragment -> com.android.contacts.group.GroupMembersFragment:
    195:560:void <init>() -> <init>
    79:79:java.util.Set access$000(com.android.contacts.group.GroupMembersFragment) -> access$000
    79:79:com.android.contacts.activities.PeopleActivity access$100(com.android.contacts.group.GroupMembersFragment) -> access$100
    79:79:android.net.Uri access$200(com.android.contacts.group.GroupMembersFragment) -> access$200
    79:79:android.os.Handler access$300(com.android.contacts.group.GroupMembersFragment) -> access$300
    79:79:com.android.contacts.group.GroupMetaData access$400(com.android.contacts.group.GroupMembersFragment) -> access$400
    79:79:com.android.contacts.group.GroupMetaData access$402(com.android.contacts.group.GroupMembersFragment,com.android.contacts.group.GroupMetaData) -> access$402
    79:79:void access$500(com.android.contacts.group.GroupMembersFragment) -> access$500
    79:79:boolean access$700(com.android.contacts.group.GroupMembersFragment) -> access$700
    79:79:com.android.contacts.activities.ActionBarAdapter access$800(com.android.contacts.group.GroupMembersFragment) -> access$800
    692:703:void bindMembersCount(int) -> bindMembersCount
    750:752:void configureAdapter() -> configureAdapter
    79:79:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    741:744:com.android.contacts.group.GroupMembersAdapter createListAdapter() -> createListAdapter
    595:601:void deleteGroup() -> deleteGroup
    631:631:void displayDeleteButtons(boolean) -> displayDeleteButtons
    896:898:void exitEditMode() -> exitEditMode
    627:627:com.android.contacts.activities.ActionBarAdapter getActionBarAdapter() -> getActionBarAdapter
    892:892:int getGroupCount() -> getGroupCount
    635:635:java.util.ArrayList getMemberContactIds() -> getMemberContactIds
    639:639:int getMemberCount() -> getMemberCount
    758:775:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    827:827:boolean isCurrentGroup(long) -> isCurrentGroup
    643:643:boolean isEditMode() -> isEditMode
    286:286:boolean isGroupEmpty() -> isGroupEmpty
    834:834:boolean isInactive() -> isInactive
    586:591:void logListEvent() -> logListEvent
    734:735:void maybeAttachCheckBoxListener() -> maybeAttachCheckBoxListener
    241:245:com.android.contacts.group.GroupMembersFragment newInstance(android.net.Uri) -> newInstance
    608:620:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    511:524:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    648:656:void onCreate(android.os.Bundle) -> onCreate
    258:262:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    839:842:void onDestroy() -> onDestroy
    720:729:void onGroupMetadataLoaded() -> onGroupMetadataLoaded
    787:799:void onItemClick(int,long) -> onItemClick
    804:807:boolean onItemLongClick(int,long) -> onItemLongClick
    79:79:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    680:687:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    456:490:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    267:281:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    661:664:void onResume() -> onResume
    709:716:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    496:501:void removeSelectedContacts() -> removeSelectedContacts
    364:440:void sendToGroup(long[],java.lang.String,java.lang.String) -> sendToGroup
    290:295:void setVisible(android.content.Context,android.view.Menu,int,boolean) -> setVisible
    450:451:void startGroupAddMemberActivity() -> startGroupAddMemberActivity
    669:672:void startLoading() -> startLoading
    445:445:void startSendToSelectionPickerActivity(long[],long[],java.lang.String,java.lang.String) -> startSendToSelectionPickerActivity
    887:887:void toast(int) -> toast
    861:882:void toastForSaveAction(java.lang.String) -> toastForSaveAction
    846:855:void updateExistingGroupFragment(android.net.Uri,java.lang.String) -> updateExistingGroupFragment
com.android.contacts.group.GroupMembersFragment$1 -> com.android.contacts.group.GroupMembersFragment$1:
    195:195:void <init>(com.android.contacts.group.GroupMembersFragment) -> <init>
    195:195:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    199:199:android.content.CursorLoader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    195:195:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    204:212:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
com.android.contacts.group.GroupMembersFragment$2 -> com.android.contacts.group.GroupMembersFragment$2:
    231:231:void <init>(com.android.contacts.group.GroupMembersFragment) -> <init>
    234:235:void handleMessage(android.os.Message) -> handleMessage
com.android.contacts.group.GroupMembersFragment$3 -> com.android.contacts.group.GroupMembersFragment$3:
    527:527:void <init>(com.android.contacts.group.GroupMembersFragment) -> <init>
    532:547:void onAction(int) -> onAction
    556:556:void onUpButtonPressed() -> onUpButtonPressed
com.android.contacts.group.GroupMembersFragment$4 -> com.android.contacts.group.GroupMembersFragment$4:
    561:561:void <init>(com.android.contacts.group.GroupMembersFragment) -> <init>
    569:575:void onSelectedContactIdsChanged() -> onSelectedContactIdsChanged
    564:564:void onStartDisplayingCheckBoxes() -> onStartDisplayingCheckBoxes
    581:581:void onStopDisplayingCheckBoxes() -> onStopDisplayingCheckBoxes
com.android.contacts.group.GroupMembersFragment$5 -> com.android.contacts.group.GroupMembersFragment$5:
    775:775:void <init>(com.android.contacts.group.GroupMembersFragment) -> <init>
    778:779:void onClick(android.view.View) -> onClick
com.android.contacts.group.GroupMembersFragment$ContactDataHelperClass -> com.android.contacts.group.GroupMembersFragment$ContactDataHelperClass:
    336:340:void <init>(com.android.contacts.group.GroupMembersFragment) -> <init>
    336:336:void <init>(com.android.contacts.group.GroupMembersFragment,com.android.contacts.group.GroupMembersFragment$1) -> <init>
    343:349:void addItem(java.lang.String,boolean) -> addItem
    357:359:java.lang.String getDefaultSelectionItemId() -> getDefaultSelectionItemId
    353:353:boolean hasDefaultItem() -> hasDefaultItem
com.android.contacts.group.GroupMembersFragment$DeletionListener -> com.android.contacts.group.GroupMembersFragment$DeletionListener:
    810:810:void <init>(com.android.contacts.group.GroupMembersFragment) -> <init>
    810:810:void <init>(com.android.contacts.group.GroupMembersFragment,com.android.contacts.group.GroupMembersFragment$1) -> <init>
    813:818:void onContactDeleteClicked(int) -> onContactDeleteClicked
com.android.contacts.group.GroupMembersFragment$FilterCursorWrapper -> com.android.contacts.group.GroupMembersFragment$FilterCursorWrapper:
    99:142:void <init>(com.android.contacts.group.GroupMembersFragment,android.database.Cursor) -> <init>
    186:186:int getCount() -> getCount
    191:191:int getPosition() -> getPosition
    148:148:boolean move(int) -> move
    163:163:boolean moveToFirst() -> moveToFirst
    168:168:boolean moveToLast() -> moveToLast
    153:153:boolean moveToNext() -> moveToNext
    173:181:boolean moveToPosition(int) -> moveToPosition
    158:158:boolean moveToPrevious() -> moveToPrevious
com.android.contacts.group.GroupMembersFragment$Query -> com.android.contacts.group.GroupMembersFragment$Query:
    313:320:void <clinit>() -> <clinit>
com.android.contacts.group.GroupMetaData -> com.android.contacts.group.GroupMetaData:
    36:36:void <clinit>() -> <clinit>
    34:34:void <init>(android.os.Parcel,com.android.contacts.group.GroupMetaData$1) -> <init>
    61:81:void <init>(android.content.Context,android.database.Cursor) -> <init>
    88:98:void <init>(android.os.Parcel) -> <init>
    85:85:boolean getBoolean(android.database.Cursor,int) -> getBoolean
    117:117:boolean isValid() -> isValid
    127:138:java.lang.String toString() -> toString
    103:112:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.group.GroupMetaData$1 -> com.android.contacts.group.GroupMetaData$1:
    36:36:void <init>() -> <init>
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    39:39:com.android.contacts.group.GroupMetaData createFromParcel(android.os.Parcel) -> createFromParcel
    36:36:java.lang.Object[] newArray(int) -> newArray
    43:43:com.android.contacts.group.GroupMetaData[] newArray(int) -> newArray
com.android.contacts.group.GroupNameEditDialogFragment -> com.android.contacts.group.GroupNameEditDialogFragment:
    56:94:void <init>() -> <init>
    56:56:void access$000(com.android.contacts.group.GroupNameEditDialogFragment) -> access$000
    56:56:com.android.contacts.group.GroupNameEditDialogFragment$Listener access$100(com.android.contacts.group.GroupNameEditDialogFragment) -> access$100
    56:56:android.widget.EditText access$200(com.android.contacts.group.GroupNameEditDialogFragment) -> access$200
    56:56:android.widget.EditText access$202(com.android.contacts.group.GroupNameEditDialogFragment,android.widget.EditText) -> access$202
    56:56:com.google.android.material.textfield.TextInputLayout access$300(com.android.contacts.group.GroupNameEditDialogFragment) -> access$300
    56:56:com.google.android.material.textfield.TextInputLayout access$302(com.android.contacts.group.GroupNameEditDialogFragment,com.google.android.material.textfield.TextInputLayout) -> access$302
    56:56:java.lang.String access$400(com.android.contacts.group.GroupNameEditDialogFragment) -> access$400
    56:56:void access$500(com.android.contacts.group.GroupNameEditDialogFragment,android.view.View) -> access$500
    56:56:java.lang.String access$600(com.android.contacts.group.GroupNameEditDialogFragment) -> access$600
    56:56:void access$700(com.android.contacts.group.GroupNameEditDialogFragment,android.view.View) -> access$700
    354:355:java.lang.String getGroupName() -> getGroupName
    344:349:com.android.contacts.group.GroupNameEditDialogFragment$Listener getListener() -> getListener
    359:367:java.lang.String getSelection() -> getSelection
    371:379:java.lang.String[] getSelectionArgs() -> getSelectionArgs
    230:232:boolean hasNameChanged() -> hasNameChanged
    336:339:void hideInputMethod() -> hideInputMethod
    236:267:void maybePersistCurrentGroupName(android.view.View) -> maybePersistCurrentGroupName
    109:120:com.android.contacts.group.GroupNameEditDialogFragment newInstance(com.android.contacts.model.account.AccountWithDataSet,java.lang.String,long,java.lang.String) -> newInstance
    98:98:com.android.contacts.group.GroupNameEditDialogFragment newInstanceForCreation(com.android.contacts.model.account.AccountWithDataSet,java.lang.String) -> newInstanceForCreation
    103:103:com.android.contacts.group.GroupNameEditDialogFragment newInstanceForUpdate(com.android.contacts.model.account.AccountWithDataSet,java.lang.String,long,java.lang.String) -> newInstanceForUpdate
    272:273:void onCancel(android.content.DialogInterface) -> onCancel
    126:140:void onCreate(android.os.Bundle) -> onCreate
    146:169:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    285:288:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    56:56:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    293:316:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    278:279:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    226:226:void setListener(com.android.contacts.group.GroupNameEditDialogFragment$Listener) -> setListener
    325:331:void showInputMethod(android.view.View) -> showInputMethod
com.android.contacts.group.GroupNameEditDialogFragment$1 -> com.android.contacts.group.GroupNameEditDialogFragment$1:
    153:153:void <init>(com.android.contacts.group.GroupNameEditDialogFragment) -> <init>
    156:158:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.group.GroupNameEditDialogFragment$2 -> com.android.contacts.group.GroupNameEditDialogFragment$2:
    169:169:void <init>(com.android.contacts.group.GroupNameEditDialogFragment,androidx.appcompat.app.AlertDialog) -> <init>
    172:195:void onShow(android.content.DialogInterface) -> onShow
com.android.contacts.group.GroupNameEditDialogFragment$2$1 -> com.android.contacts.group.GroupNameEditDialogFragment$2$1:
    189:189:void <init>(com.android.contacts.group.GroupNameEditDialogFragment$2) -> <init>
    192:192:void onClick(android.view.View) -> onClick
com.android.contacts.group.GroupNameEditDialogFragment$2$2 -> com.android.contacts.group.GroupNameEditDialogFragment$2$2:
    195:195:void <init>(com.android.contacts.group.GroupNameEditDialogFragment$2,android.widget.Button) -> <init>
    206:207:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.android.contacts.group.GroupNameEditDialogFragment$Listener -> com.android.contacts.group.GroupNameEditDialogFragment$Listener:
    76:76:void <clinit>() -> <clinit>
com.android.contacts.group.GroupNameEditDialogFragment$Listener$1 -> com.android.contacts.group.GroupNameEditDialogFragment$Listener$1:
    76:76:void <init>() -> <init>
com.android.contacts.group.GroupUtil -> com.android.contacts.group.GroupUtil:
    64:65:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    47:47:boolean access$000(java.lang.String) -> access$000
    267:273:java.lang.String[] clearEmptyString(java.lang.String[]) -> clearEmptyString
    277:285:int[] clearZeros(int[]) -> clearZeros
    179:180:java.lang.String convertArrayToString(long[]) -> convertArrayToString
    184:187:long[] convertLongSetToLongArray(java.util.Set) -> convertLongSetToLongArray
    193:199:long[] convertStringSetToLongArray(java.util.Set) -> convertStringSetToLongArray
    168:174:android.content.Intent createPickMemberIntent(android.content.Context,com.android.contacts.group.GroupMetaData,java.util.ArrayList) -> createPickMemberIntent
    152:160:android.content.Intent createSendToSelectionPickerIntent(android.content.Context,long[],long[],java.lang.String,java.lang.String) -> createSendToSelectionPickerIntent
    72:101:com.android.contacts.group.GroupListItem getGroupListItem(android.database.Cursor,int) -> getGroupListItem
    106:135:java.util.List getSendToDataForIds(android.content.Context,long[],java.lang.String) -> getSendToDataForIds
    210:212:boolean isEmptyFFCGroup(com.android.contacts.group.GroupListItem) -> isEmptyFFCGroup
    223:223:boolean isGroupUri(android.net.Uri) -> isGroupUri
    216:216:boolean isSystemIdFFC(java.lang.String) -> isSystemIdFFC
    242:242:boolean needTrimming(int,int[],int[]) -> needTrimming
    143:146:void startSendToSelectionActivity(android.app.Fragment,java.lang.String,java.lang.String,java.lang.String) -> startSendToSelectionActivity
    251:263:void updateBundle(android.os.Bundle,com.android.contacts.list.ContactsSectionIndexer,java.util.List,java.lang.String[],int[]) -> updateBundle
com.android.contacts.group.GroupUtil$GroupsProjection -> com.android.contacts.group.GroupUtil$GroupsProjection:
    306:317:void <init>(android.database.Cursor) -> <init>
    336:336:java.lang.String getTitle(android.database.Cursor) -> getTitle
    352:359:boolean isEmptyFFCGroup(android.database.Cursor) -> isEmptyFFCGroup
com.android.contacts.group.UpdateGroupMembersAsyncTask -> com.android.contacts.group.UpdateGroupMembersAsyncTask:
    49:56:void <init>(int,android.content.Context,long[],long,java.lang.String,java.lang.String,java.lang.String) -> <init>
    36:36:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    61:79:android.content.Intent doInBackground(java.lang.Void[]) -> doInBackground
    87:118:long[] getRawContactIds() -> getRawContactIds
    36:36:void onPostExecute(java.lang.Object) -> onPostExecute
    125:127:void onPostExecute(android.content.Intent) -> onPostExecute
com.android.contacts.interactions.ContactDeletionInteraction -> com.android.contacts.interactions.ContactDeletionInteraction:
    66:66:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    348:362:void doDeleteContact(android.net.Uri) -> doDeleteContact
    152:156:android.app.LoaderManager getLoaderManager() -> getLoaderManager
    200:200:boolean isStarted() -> isStarted
    339:343:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    169:170:void onAttach(android.app.Activity) -> onAttach
    223:225:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    175:179:void onDestroyView() -> onDestroyView
    325:326:void onDismiss(android.content.DialogInterface) -> onDismiss
    54:54:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    231:297:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    331:334:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    205:210:void onStart() -> onStart
    215:217:void onStop() -> onStop
    184:189:void setContactUri(android.net.Uri) -> setContactUri
    194:194:void setFinishActivityWhenDone(boolean) -> setFinishActivityWhenDone
    164:164:void setTestLoaderManager(com.android.contacts.interactions.TestLoaderManagerBase) -> setTestLoaderManager
    305:320:void showDialog(int,int,android.net.Uri) -> showDialog
    109:109:com.android.contacts.interactions.ContactDeletionInteraction start(android.app.Activity,android.net.Uri,boolean) -> start
    127:144:com.android.contacts.interactions.ContactDeletionInteraction startWithTestLoaderManager(android.app.Activity,android.net.Uri,boolean,com.android.contacts.interactions.TestLoaderManagerBase) -> startWithTestLoaderManager
com.android.contacts.interactions.ContactDeletionInteraction$1 -> com.android.contacts.interactions.ContactDeletionInteraction$1:
    310:310:void <init>(com.android.contacts.interactions.ContactDeletionInteraction,android.net.Uri) -> <init>
    313:313:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.interactions.ContactInteractionUtil -> com.android.contacts.interactions.ContactInteractionUtil:
    23:23:void <init>() -> <init>
    29:34:java.lang.String questionMarks(int) -> questionMarks
com.android.contacts.interactions.ContactMultiDeletionInteraction -> com.android.contacts.interactions.ContactMultiDeletionInteraction:
    65:65:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
    52:52:boolean access$002(com.android.contacts.interactions.ContactMultiDeletionInteraction,boolean) -> access$002
    52:52:android.app.AlertDialog access$102(com.android.contacts.interactions.ContactMultiDeletionInteraction,android.app.AlertDialog) -> access$102
    314:316:void doDeleteContact(long[],java.lang.String[]) -> doDeleteContact
    142:142:boolean isStarted() -> isStarted
    306:309:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    116:117:void onAttach(android.app.Activity) -> onAttach
    166:180:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    122:126:void onDestroyView() -> onDestroyView
    52:52:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    185:264:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    299:301:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    147:153:void onStart() -> onStart
    158:160:void onStop() -> onStop
    131:136:void setContactIds(java.util.TreeSet) -> setContactIds
    320:320:void setListener(com.android.contacts.interactions.ContactMultiDeletionInteraction$MultiContactDeleteListener) -> setListener
    273:294:void showDialog(int,int,long[],java.lang.String[]) -> showDialog
    100:109:com.android.contacts.interactions.ContactMultiDeletionInteraction start(android.app.Fragment,java.util.TreeSet) -> start
com.android.contacts.interactions.ContactMultiDeletionInteraction$1 -> com.android.contacts.interactions.ContactMultiDeletionInteraction$1:
    278:278:void <init>(com.android.contacts.interactions.ContactMultiDeletionInteraction,long[],java.lang.String[]) -> <init>
    281:281:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.interactions.ContactMultiDeletionInteraction$2 -> com.android.contacts.interactions.ContactMultiDeletionInteraction$2:
    287:287:void <init>(com.android.contacts.interactions.ContactMultiDeletionInteraction) -> <init>
    290:291:void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.contacts.interactions.ExportDialogFragment -> com.android.contacts.interactions.ExportDialogFragment:
    50:59:void <init>() -> <init>
    50:50:int access$000() -> access$000
    50:50:void access$100(com.android.contacts.interactions.ExportDialogFragment) -> access$100
    173:207:void doShareFavoriteContacts() -> doShareFavoriteContacts
    78:78:android.content.Context getContext() -> getContext
    83:83:void onAttach(android.app.Activity) -> onAttach
    89:168:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    68:73:void show(android.app.FragmentManager,java.lang.Class,int) -> show
com.android.contacts.interactions.ExportDialogFragment$1 -> com.android.contacts.interactions.ExportDialogFragment$1:
    97:97:void <init>(com.android.contacts.interactions.ExportDialogFragment,android.content.Context,int,android.view.LayoutInflater) -> <init>
    101:107:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.android.contacts.interactions.ExportDialogFragment$2 -> com.android.contacts.interactions.ExportDialogFragment$2:
    130:130:void <init>(com.android.contacts.interactions.ExportDialogFragment,android.widget.ArrayAdapter,java.lang.String) -> <init>
    134:159:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.interactions.ExportDialogFragment$3 -> com.android.contacts.interactions.ExportDialogFragment$3:
    207:207:void <init>(com.android.contacts.interactions.ExportDialogFragment) -> <init>
    210:211:void run() -> run
com.android.contacts.interactions.ExportDialogFragment$AdapterEntry -> com.android.contacts.interactions.ExportDialogFragment$AdapterEntry:
    222:225:void <init>(java.lang.CharSequence,int,int) -> <init>
    231:231:void <init>(java.lang.String,int) -> <init>
com.android.contacts.interactions.GroupDeletionDialogFragment -> com.android.contacts.interactions.GroupDeletionDialogFragment:
    32:32:void <init>() -> <init>
    67:71:void deleteGroup() -> deleteGroup
    48:63:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    38:43:void show(android.app.FragmentManager,long,java.lang.String) -> show
com.android.contacts.interactions.GroupDeletionDialogFragment$1 -> com.android.contacts.interactions.GroupDeletionDialogFragment$1:
    55:55:void <init>(com.android.contacts.interactions.GroupDeletionDialogFragment) -> <init>
    58:58:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.interactions.ImportDialogFragment -> com.android.contacts.interactions.ImportDialogFragment:
    74:74:void <clinit>() -> <clinit>
    59:69:void <init>() -> <init>
    59:59:int access$000(com.android.contacts.interactions.ImportDialogFragment,com.android.contacts.model.SimCard) -> access$000
    59:59:androidx.core.text.BidiFormatter access$100() -> access$100
    59:59:void access$200(com.android.contacts.interactions.ImportDialogFragment,com.android.contacts.model.SimCard) -> access$200
    59:59:void access$300(com.android.contacts.interactions.ImportDialogFragment,int,int) -> access$300
    235:249:void addItems(android.widget.ArrayAdapter) -> addItems
    121:121:android.content.Context getContext() -> getContext
    224:231:int getSimContactCount(com.android.contacts.model.SimCard) -> getSimContactCount
    289:293:java.lang.CharSequence getSimDescription(com.android.contacts.model.SimCard,int) -> getSimDescription
    265:284:void handleImportRequest(int,int) -> handleImportRequest
    254:255:void handleSimImportRequest(com.android.contacts.model.SimCard) -> handleSimImportRequest
    126:126:void onAttach(android.app.Activity) -> onAttach
    101:107:void onCreate(android.os.Bundle) -> onCreate
    132:220:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    112:116:void onResume() -> onResume
    78:79:void show(android.app.FragmentManager) -> show
com.android.contacts.interactions.ImportDialogFragment$1 -> com.android.contacts.interactions.ImportDialogFragment$1:
    136:136:void <init>(com.android.contacts.interactions.ImportDialogFragment,android.content.Context,int,android.view.LayoutInflater) -> <init>
    160:184:java.lang.CharSequence getSimSecondaryText(com.android.contacts.model.SimCard) -> getSimSecondaryText
    141:155:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.android.contacts.interactions.ImportDialogFragment$2 -> com.android.contacts.interactions.ImportDialogFragment$2:
    194:194:void <init>(com.android.contacts.interactions.ImportDialogFragment,android.widget.ArrayAdapter) -> <init>
    197:206:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.interactions.ImportDialogFragment$AdapterEntry -> com.android.contacts.interactions.ImportDialogFragment$AdapterEntry:
    302:305:void <init>(java.lang.CharSequence,int,com.android.contacts.model.SimCard) -> <init>
    311:311:void <init>(java.lang.String,int) -> <init>
com.android.contacts.interactions.OnBootOrUpgradeReceiver -> com.android.contacts.interactions.OnBootOrUpgradeReceiver:
    25:25:void <init>() -> <init>
    29:32:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.interactions.TestLoaderManagerBase -> com.android.contacts.interactions.TestLoaderManagerBase:
    77:77:void <init>() -> <init>
com.android.contacts.interactions.TouchPointManager -> com.android.contacts.interactions.TouchPointManager:
    13:13:void <clinit>() -> <clinit>
    15:20:void <init>() -> <init>
    24:24:com.android.contacts.interactions.TouchPointManager getInstance() -> getInstance
    28:28:android.graphics.Point getPoint() -> getPoint
    44:44:boolean hasValidPoint() -> hasValidPoint
    32:32:void setPoint(int,int) -> setPoint
com.android.contacts.lettertiles.LetterTileDrawable -> com.android.contacts.lettertiles.LetterTileDrawable:
    57:59:void <clinit>() -> <clinit>
    43:98:void <init>(android.content.res.Resources) -> <init>
    103:108:void draw(android.graphics.Canvas) -> draw
    118:135:void drawBitmap(android.graphics.Bitmap,int,int,android.graphics.Canvas) -> drawBitmap
    140:173:void drawLetterTile(android.graphics.Canvas) -> drawLetterTile
    293:293:float getAdaptiveIconScale() -> getAdaptiveIconScale
    199:205:android.graphics.Bitmap getBitmapForContactType(int) -> getBitmapForContactType
    179:179:int getColor() -> getColor
    186:193:int pickColor(java.lang.String) -> pickColor
    215:215:void setAlpha(int) -> setAlpha
    220:220:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    280:280:com.android.contacts.lettertiles.LetterTileDrawable setContactType(int) -> setContactType
    285:285:com.android.contacts.lettertiles.LetterTileDrawable setIsCircular(boolean) -> setIsCircular
    269:275:com.android.contacts.lettertiles.LetterTileDrawable setLetterAndColorFromContactDetails(java.lang.String,java.lang.String) -> setLetterAndColorFromContactDetails
    252:253:com.android.contacts.lettertiles.LetterTileDrawable setOffset(float) -> setOffset
    235:235:com.android.contacts.lettertiles.LetterTileDrawable setScale(float) -> setScale
com.android.contacts.list.AccountFilterActivity -> com.android.contacts.list.AccountFilterActivity:
    42:42:void <init>() -> <init>
    114:131:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    60:82:void onCreate(android.os.Bundle) -> onCreate
    87:108:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    187:197:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.android.contacts.list.AccountFilterActivity$FilterListAdapter -> com.android.contacts.list.AccountFilterActivity$FilterListAdapter:
    144:149:void <init>(android.content.Context,java.util.List,int) -> <init>
    154:154:int getCount() -> getCount
    137:137:java.lang.Object getItem(int) -> getItem
    164:164:com.android.contacts.list.ContactListFilter getItem(int) -> getItem
    170:180:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.android.contacts.list.AutoScrollListView -> com.android.contacts.list.AutoScrollListView:
    36:40:void <init>(android.content.Context) -> <init>
    36:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:115:void layoutChildren() -> layoutChildren
    121:126:void onLayout(boolean,int,int,int,int) -> onLayout
    59:61:void requestPositionToScreen(int,boolean) -> requestPositionToScreen
com.android.contacts.list.ContactBrowseListFragment -> com.android.contacts.list.ContactBrowseListFragment:
    46:91:void <init>() -> <init>
    420:520:void checkSelection() -> checkSelection
    386:403:void configureAdapter() -> configureAdapter
    46:46:com.android.contacts.list.ContactEntryListAdapter getAdapter() -> getAdapter
    381:381:com.android.contacts.list.ContactListAdapter getAdapter() -> getAdapter
    159:171:android.os.Handler getHandler() -> getHandler
    661:664:java.lang.String getPersistentSelectionKey() -> getPersistentSelectionKey
    573:573:boolean isLoading() -> isLoading
    612:612:void notifyInvalidSelection() -> notifyInvalidSelection
    176:179:void onAttach(android.app.Activity) -> onAttach
    270:273:void onContactUriQueryFinished(android.net.Uri) -> onContactUriQueryFinished
    408:412:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    237:241:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    351:375:void parseSelectedContactUri() -> parseSelectedContactUri
    245:265:void refreshSelectedContactUri() -> refreshSelectedContactUri
    590:593:void reloadData() -> reloadData
    564:567:void requestSelectionToScreen(int) -> requestSelectionToScreen
    657:657:void restoreFilter() -> restoreFilter
    222:232:void restoreSavedState(android.os.Bundle) -> restoreSavedState
    640:648:void restoreSelectedUri(boolean) -> restoreSelectedUri
    622:634:void saveSelectedUri(android.net.Uri) -> saveSelectedUri
    545:559:void selectDefaultContact() -> selectDefaultContact
    530:539:void selectFirstFoundContactAfterDelay() -> selectFirstFoundContactAfterDelay
    598:598:void setOnContactListActionListener(com.android.contacts.list.OnContactBrowserActionListener) -> setOnContactListActionListener
    289:290:void setQueryString(java.lang.String,boolean) -> setQueryString
    184:188:void setSearchMode(boolean) -> setSearchMode
    284:284:void setSelectedContactUri(android.net.Uri) -> setSelectedContactUri
    323:346:void setSelectedContactUri(android.net.Uri,boolean,boolean,boolean,boolean) -> setSelectedContactUri
    578:580:void startLoading() -> startLoading
    193:213:void updateListFilter(com.android.contacts.list.ContactListFilter,boolean) -> updateListFilter
    602:603:void viewContact(int,android.net.Uri,boolean) -> viewContact
com.android.contacts.list.ContactBrowseListFragment$1 -> com.android.contacts.list.ContactBrowseListFragment$1:
    160:160:void <init>(com.android.contacts.list.ContactBrowseListFragment) -> <init>
    163:165:void handleMessage(android.os.Message) -> handleMessage
com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask -> com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask:
    101:102:void <init>(com.android.contacts.list.ContactBrowseListFragment,android.net.Uri) -> <init>
    135:140:void cancel() -> cancel
    96:96:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    109:131:android.net.Uri doInBackground(java.lang.Void[]) -> doInBackground
    96:96:void onPostExecute(java.lang.Object) -> onPostExecute
    149:152:void onPostExecute(android.net.Uri) -> onPostExecute
com.android.contacts.list.ContactEntryListAdapter -> com.android.contacts.list.ContactEntryListAdapter:
    65:102:void <init>(android.content.Context) -> <init>
    144:144:void addPartitions() -> addPartitions
    575:577:boolean areAllPartitionsEmpty() -> areAllPartitionsEmpty
    631:656:void bindHeaderView(android.view.View,int,android.database.Cursor) -> bindHeaderView
    710:735:void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int,int) -> bindQuickContact
    128:130:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    752:753:void bindViewId(com.android.contacts.list.ContactListItemView,android.database.Cursor,int) -> bindViewId
    620:625:void bindWorkProfileIcon(com.android.contacts.list.ContactListItemView,int) -> bindWorkProfileIcon
    460:481:void changeCursor(int,android.database.Cursor) -> changeCursor
    397:455:void changeDirectories(android.database.Cursor) -> changeDirectories
    232:240:void clearPartitions() -> clearPartitions
    589:600:void configureDefaultPartition(boolean,boolean) -> configureDefaultPartition
    148:153:com.android.contacts.list.DirectoryPartition createDefaultDirectoryPartition() -> createDefaultDirectoryPartition
    135:135:android.view.View createPinnedSectionHeaderView(android.content.Context,android.view.ViewGroup) -> createPinnedSectionHeaderView
    323:323:boolean getCircularPhotos() -> getCircularPhotos
    291:291:int getContactNameDisplayOrder() -> getContactNameDisplayOrder
    759:765:android.net.Uri getContactUri(int,android.database.Cursor,int,int) -> getContactUri
    782:784:com.android.contacts.ContactPhotoManager$DefaultImageRequest getDefaultImageRequestFromCursor(android.database.Cursor,int,int) -> getDefaultImageRequestFromCursor
    193:198:com.android.contacts.list.DirectoryPartition getDirectoryById(long) -> getDirectoryById
    282:283:int getDirectoryResultLimit(com.android.contacts.list.DirectoryPartition) -> getDirectoryResultLimit
    270:270:int getDirectorySearchMode() -> getDirectorySearchMode
    315:315:boolean getDisplayPhotos() -> getDisplayPhotos
    689:689:com.android.contacts.list.ContactListFilter getFilter() -> getFilter
    537:540:int getItemViewType(int,int) -> getItemViewType
    378:378:int getNumberOfFavorites() -> getNumberOfFavorites
    180:184:int getPartitionByDirectoryId(long) -> getPartitionByDirectoryId
    311:311:com.android.contacts.ContactPhotoManager getPhotoLoader() -> getPhotoLoader
    252:252:java.lang.String getQueryString() -> getQueryString
    299:299:int getSortOrder() -> getSortOrder
    266:266:java.lang.String getUpperCaseQueryString() -> getUpperCaseQueryString
    532:532:int getViewTypeCount() -> getViewTypeCount
    355:355:boolean isAdjustSelectionBoundsEnabled() -> isAdjustSelectionBoundsEnabled
    553:558:boolean isEmpty() -> isEmpty
    563:567:boolean isLoading() -> isLoading
    678:680:boolean isPhotoSupported(int) -> isPhotoSupported
    347:347:boolean isQuickContactEnabled() -> isQuickContactEnabled
    244:244:boolean isSearchMode() -> isSearchMode
    339:339:boolean isSelectionVisible() -> isSelectionVisible
    607:614:android.view.View newHeaderView(android.content.Context,int,android.database.Cursor,android.view.ViewGroup) -> newHeaderView
    51:51:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    120:122:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    214:226:void onDataReload() -> onDataReload
    167:174:void removeDirectoriesAfterDefault() -> removeDirectoriesAfterDefault
    359:359:void setAdjustSelectionBoundsEnabled(boolean) -> setAdjustSelectionBoundsEnabled
    295:295:void setContactNameDisplayOrder(int) -> setContactNameDisplayOrder
    389:389:void setDarkTheme(boolean) -> setDarkTheme
    114:114:void setDefaultFilterHeaderText(int) -> setDefaultFilterHeaderText
    287:287:void setDirectoryResultLimit(int) -> setDirectoryResultLimit
    274:274:void setDirectorySearchMode(int) -> setDirectorySearchMode
    319:319:void setDisplayPhotos(boolean) -> setDisplayPhotos
    371:373:void setFavoritesSectionHeader(int) -> setFavoritesSectionHeader
    693:693:void setFilter(com.android.contacts.list.ContactListFilter) -> setFilter
    110:110:void setFragmentRootView(android.view.View) -> setFragmentRootView
    367:367:void setIncludeFavorites(boolean) -> setIncludeFavorites
    307:307:void setPhotoLoader(com.android.contacts.ContactPhotoManager) -> setPhotoLoader
    140:140:void setPinnedSectionTitle(android.view.View,java.lang.String) -> setPinnedSectionTitle
    256:261:void setQueryString(java.lang.String) -> setQueryString
    351:351:void setQuickContactEnabled(boolean) -> setQuickContactEnabled
    248:248:void setSearchMode(boolean) -> setSearchMode
    382:384:void setSectionHeader(int) -> setSectionHeader
    343:343:void setSelectionVisible(boolean) -> setSelectionVisible
    303:303:void setSortOrder(int) -> setSortOrder
    363:363:boolean shouldIncludeFavorites() -> shouldIncludeFavorites
    492:520:void updateIndexer(android.database.Cursor) -> updateIndexer
com.android.contacts.list.ContactEntryListFragment -> com.android.contacts.list.ContactEntryListFragment:
    60:955:void <init>() -> <init>
    937:939:void completeRestoreInstanceState() -> completeRestoreInstanceState
    833:848:void configureAdapter() -> configureAdapter
    819:827:void configurePhotoLoader() -> configurePhotoLoader
    569:574:void configureVerticalScrollbar() -> configureVerticalScrollbar
    370:370:android.content.CursorLoader createCursorLoader(android.content.Context) -> createCursorLoader
    242:242:com.android.contacts.list.ContactEntryListAdapter getAdapter() -> getAdapter
    720:720:int getContactNameDisplayOrder() -> getContactNameDisplayOrder
    213:213:android.content.Context getContext() -> getContext
    965:966:int getDefaultVerticalScrollbarPosition() -> getDefaultVerticalScrollbarPosition
    704:704:int getDirectorySearchMode() -> getDirectorySearchMode
    981:981:int getListType() -> getListType
    251:251:android.widget.ListView getListView() -> getListView
    238:238:android.app.LoaderManager getLoaderManager() -> getLoaderManager
    669:669:java.lang.String getQueryString() -> getQueryString
    731:731:int getSortOrder() -> getSortOrder
    247:247:android.view.View getView() -> getView
    887:889:void hideSoftKeyboard() -> hideSoftKeyboard
    712:712:boolean isLegacyCompatibilityMode() -> isLegacyCompatibilityMode
    492:496:boolean isLoading() -> isLoading
    504:504:boolean isLoadingDirectoryList() -> isLoadingDirectoryList
    584:584:boolean isPhotoLoaderEnabled() -> isPhotoLoaderEnabled
    665:665:boolean isSearchMode() -> isSearchMode
    547:547:boolean isSectionHeaderDisplayEnabled() -> isSectionHeaderDisplayEnabled
    591:591:boolean isSelectionVisible() -> isSelectionVisible
    558:558:boolean isVisibleScrollbarEnabled() -> isVisibleScrollbarEnabled
    418:420:void loadDirectoryPartition(int,com.android.contacts.list.DirectoryPartition) -> loadDirectoryPartition
    408:411:void loadDirectoryPartitionDelayed(int,com.android.contacts.list.DirectoryPartition) -> loadDirectoryPartitionDelayed
    747:753:boolean loadPreferences() -> loadPreferences
    465:469:void maybeLogListEvent() -> maybeLogListEvent
    199:201:void onAttach(android.app.Activity) -> onAttach
    281:284:void onCreate(android.os.Bundle) -> onCreate
    354:364:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    763:781:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    785:815:void onCreateView(android.view.LayoutInflater,android.view.ViewGroup) -> onCreateView
    897:898:void onFocusChange(android.view.View,boolean) -> onFocusChange
    867:871:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    877:880:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    60:60:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    432:459:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    477:487:void onPartitionLoaded(int,android.database.Cursor) -> onPartitionLoaded
    916:921:void onPause() -> onPause
    952:952:void onPickerResult(android.content.Intent) -> onPickerResult
    926:930:void onResume() -> onResume
    256:275:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    859:861:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    313:322:void onStart() -> onStart
    511:513:void onStop() -> onStop
    907:908:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    517:521:void reloadData() -> reloadData
    427:427:void removePendingDirectorySearchRequests() -> removePendingDirectorySearchRequests
    292:308:void restoreSavedState(android.os.Bundle) -> restoreSavedState
    724:726:void setContactNameDisplayOrder(int) -> setContactNameDisplayOrder
    208:209:void setContext(android.content.Context) -> setContext
    742:742:void setDirectoryResultLimit(int) -> setDirectoryResultLimit
    708:708:void setDirectorySearchMode(int) -> setDirectorySearchMode
    614:614:void setDisplayDirectoryHeader(boolean) -> setDisplayDirectoryHeader
    217:223:void setEnabled(boolean) -> setEnabled
    607:609:void setIncludeFavorites(boolean) -> setIncludeFavorites
    716:716:void setLegacyCompatibilityMode(boolean) -> setLegacyCompatibilityMode
    977:977:void setListType(int) -> setListType
    233:233:void setLoaderManager(android.app.LoaderManager) -> setLoaderManager
    985:985:void setLogListEvents(boolean) -> setLogListEvents
    579:580:void setPhotoLoaderEnabled(boolean) -> setPhotoLoaderEnabled
    674:690:void setQueryString(java.lang.String,boolean) -> setQueryString
    599:599:void setQuickContactEnabled(boolean) -> setQuickContactEnabled
    624:647:void setSearchMode(boolean) -> setSearchMode
    537:542:void setSectionHeaderDisplayEnabled(boolean) -> setSectionHeaderDisplayEnabled
    595:595:void setSelectionVisible(boolean) -> setSelectionVisible
    735:737:void setSortOrder(int) -> setSortOrder
    562:564:void setVerticalScrollbarPosition(int) -> setVerticalScrollbarPosition
    551:553:void setVisibleScrollbarEnabled(boolean) -> setVisibleScrollbarEnabled
    658:661:boolean shouldDisplayDirectoryHeader() -> shouldDisplayDirectoryHeader
    326:348:void startLoading() -> startLoading
    386:398:void startLoadingDirectoryPartition(int) -> startLoadingDirectoryPartition
com.android.contacts.list.ContactEntryListFragment$1 -> com.android.contacts.list.ContactEntryListFragment$1:
    168:168:void <init>(com.android.contacts.list.ContactEntryListFragment) -> <init>
    171:172:void handleMessage(android.os.Message) -> handleMessage
com.android.contacts.list.ContactEntryListFragment$2 -> com.android.contacts.list.ContactEntryListFragment$2:
    370:370:void <init>(com.android.contacts.list.ContactEntryListFragment,android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    370:370:java.lang.Object onLoadInBackground() -> onLoadInBackground
    374:378:android.database.Cursor onLoadInBackground() -> onLoadInBackground
com.android.contacts.list.ContactEntryListFragment$3 -> com.android.contacts.list.ContactEntryListFragment$3:
    956:956:void <init>(com.android.contacts.list.ContactEntryListFragment) -> <init>
    959:960:void onChange() -> onChange
com.android.contacts.list.ContactListAdapter -> com.android.contacts.list.ContactListAdapter:
    114:116:void <init>(android.content.Context) -> <init>
    274:278:void bindNameAndViewId(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindNameAndViewId
    245:269:void bindPhoto(com.android.contacts.list.ContactListItemView,int,android.database.Cursor) -> bindPhoto
    282:282:void bindPresenceAndStatusMessage(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindPresenceAndStatusMessage
    287:287:void bindSearchSnippet(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindSearchSnippet
    235:240:void bindSectionHeaderAndDivider(com.android.contacts.list.ContactListItemView,int,android.database.Cursor) -> bindSectionHeaderAndDivider
    150:151:android.net.Uri buildSectionIndexerUri(android.net.Uri) -> buildSectionIndexerUri
    373:390:void changeCursor(int,android.database.Cursor) -> changeCursor
    185:186:long getContactId(int) -> getContactId
    164:166:android.net.Uri getContactUri(int) -> getContactUri
    170:176:android.net.Uri getContactUri(int,android.database.Cursor) -> getContactUri
    419:430:java.lang.String[] getDataProjectionForContacts(boolean) -> getDataProjectionForContacts
    349:365:android.net.Uri getFirstContactUri() -> getFirstContactUri
    399:410:java.lang.String[] getProjection(boolean) -> getProjection
    132:132:long getSelectedContactDirectoryId() -> getSelectedContactDirectoryId
    140:140:long getSelectedContactId() -> getSelectedContactId
    136:136:java.lang.String getSelectedContactLookupKey() -> getSelectedContactLookupKey
    291:338:int getSelectedContactPosition() -> getSelectedContactPosition
    190:193:boolean isEnterpriseContact(int) -> isEnterpriseContact
    205:216:boolean isSelectedContact(int,android.database.Cursor) -> isSelectedContact
    41:41:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    222:228:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    440:441:java.lang.String[] replaceFirstString(java.lang.String[]) -> replaceFirstString
    120:120:void setPhotoPosition(com.android.contacts.list.ContactListItemView$PhotoPosition) -> setPhotoPosition
    144:146:void setSelectedContact(long,java.lang.String,long) -> setSelectedContact
com.android.contacts.list.ContactListAdapter$ContactQuery -> com.android.contacts.list.ContactListAdapter$ContactQuery:
    44:81:void <clinit>() -> <clinit>
    43:43:java.lang.String[] access$000() -> access$000
    43:43:java.lang.String[] access$100() -> access$100
    43:43:java.lang.String[] access$200() -> access$200
com.android.contacts.list.ContactListFilter -> com.android.contacts.list.ContactListFilter:
    290:290:void <clinit>() -> <clinit>
    73:78:void <init>(int,java.lang.String,java.lang.String,java.lang.String,android.graphics.drawable.Drawable) -> <init>
    340:351:android.net.Uri$Builder addAccountQueryParameterToUrl(android.net.Uri$Builder) -> addAccountQueryParameterToUrl
    38:38:int compareTo(java.lang.Object) -> compareTo
    185:195:int compareTo(com.android.contacts.list.ContactListFilter) -> compareTo
    87:87:com.android.contacts.list.ContactListFilter createAccountFilter(java.lang.String,java.lang.String,java.lang.String,android.graphics.drawable.Drawable) -> createAccountFilter
    98:98:com.android.contacts.list.ContactListFilter createDeviceContactsFilter(android.graphics.drawable.Drawable) -> createDeviceContactsFilter
    104:104:com.android.contacts.list.ContactListFilter createDeviceContactsFilter(android.graphics.drawable.Drawable,com.android.contacts.model.account.AccountWithDataSet) -> createDeviceContactsFilter
    82:82:com.android.contacts.list.ContactListFilter createFilterWithType(int) -> createFilterWithType
    93:93:com.android.contacts.list.ContactListFilter createGroupMembersFilter(java.lang.String,java.lang.String,java.lang.String) -> createGroupMembersFilter
    110:110:com.android.contacts.list.ContactListFilter createSimContactsFilter(android.graphics.drawable.Drawable,com.android.contacts.model.account.AccountWithDataSet) -> createSimContactsFilter
    219:227:boolean equals(java.lang.Object) -> equals
    316:330:java.lang.String getId() -> getId
    446:457:java.util.List getSyncableAccounts(java.util.List) -> getSyncableAccounts
    200:208:int hashCode() -> hashCode
    119:119:boolean isContactsFilterType() -> isContactsFilterType
    470:470:boolean isGoogleAccountType() -> isGoogleAccountType
    404:404:boolean isSyncable() -> isSyncable
    256:264:com.android.contacts.list.ContactListFilter restoreDefaultPreferences(android.content.SharedPreferences) -> restoreDefaultPreferences
    270:278:com.android.contacts.list.ContactListFilter restoreFromPreferences(android.content.SharedPreferences) -> restoreFromPreferences
    436:436:boolean shouldShowSyncState() -> shouldShowSyncState
    240:248:void storeToPreferences(android.content.SharedPreferences,com.android.contacts.list.ContactListFilter) -> storeToPreferences
    357:362:com.android.contacts.model.account.AccountWithDataSet toAccountWithDataSet() -> toAccountWithDataSet
    126:126:int toListType() -> toListType
    159:180:java.lang.String toString() -> toString
    284:287:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.list.ContactListFilter$1 -> com.android.contacts.list.ContactListFilter$1:
    291:291:void <init>() -> <init>
    291:291:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    294:298:com.android.contacts.list.ContactListFilter createFromParcel(android.os.Parcel) -> createFromParcel
    291:291:java.lang.Object[] newArray(int) -> newArray
    303:303:com.android.contacts.list.ContactListFilter[] newArray(int) -> newArray
com.android.contacts.list.ContactListFilterController -> com.android.contacts.list.ContactListFilterController:
    32:32:void <init>() -> <init>
    43:46:com.android.contacts.list.ContactListFilterController getInstance(android.content.Context) -> getInstance
com.android.contacts.list.ContactListFilterControllerImpl -> com.android.contacts.list.ContactListFilterControllerImpl:
# {"id":"sourceFile","fileName":"ContactListFilterController.java"}
    92:99:void <init>(android.content.Context) -> <init>
    104:104:void addListener(com.android.contacts.list.ContactListFilterController$ContactListFilterListener) -> addListener
    169:183:void checkFilterValidity(boolean) -> checkFilterValidity
    194:197:boolean filterAccountExists() -> filterAccountExists
    114:114:com.android.contacts.list.ContactListFilter getFilter() -> getFilter
    119:119:int getFilterListType() -> getFilterListType
    130:130:com.android.contacts.list.ContactListFilter getPersistedFilter() -> getPersistedFilter
    134:134:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    124:125:boolean isCustomFilterPersisted() -> isCustomFilterPersisted
    162:163:void notifyContactListFilterChanged() -> notifyContactListFilterChanged
    109:109:void removeListener(com.android.contacts.list.ContactListFilterController$ContactListFilterListener) -> removeListener
    157:157:void selectCustomFilter() -> selectCustomFilter
    139:139:void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean) -> setContactListFilter
    144:150:void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean,boolean) -> setContactListFilter
com.android.contacts.list.ContactListFilterView -> com.android.contacts.list.ContactListFilterView:
    38:38:void <clinit>() -> <clinit>
    48:48:void <init>(android.content.Context) -> <init>
    52:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    86:136:void bindView(com.android.contacts.model.AccountTypeManager) -> bindView
    141:147:void bindView(int,int) -> bindView
    151:162:java.lang.String generateContentDescription() -> generateContentDescription
    82:82:boolean isChecked() -> isChecked
    69:78:void setActivated(boolean) -> setActivated
    56:56:void setContactListFilter(com.android.contacts.list.ContactListFilter) -> setContactListFilter
    64:64:void setSingleAccount(boolean) -> setSingleAccount
com.android.contacts.list.ContactListItemView -> com.android.contacts.list.ContactListItemView:
    1802:1802:void <clinit>() -> <clinit>
    91:265:void <init>(android.content.Context) -> <init>
    269:271:void <init>(android.content.Context,android.util.AttributeSet,boolean) -> <init>
    91:361:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:84:com.android.contacts.list.PhoneNumberListAdapter$Listener access$000(com.android.contacts.list.ContactListItemView) -> access$000
    84:84:int access$100(com.android.contacts.list.ContactListItemView) -> access$100
    1139:1139:void addNameHighlightSequence(int,int) -> addNameHighlightSequence
    1148:1148:void addNumberHighlightSequence(int,int) -> addNumberHighlightSequence
    1029:1039:void addStarImageHeader() -> addStarImageHeader
    1008:1013:void addTextHeader(java.lang.String) -> addTextHeader
    900:904:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    1128:1130:void clearHighlightSequences() -> clearHighlightSequences
    970:974:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    949:951:void drawableStateChanged() -> drawableStateChanged
    916:927:void ensurePhotoViewSize() -> ensurePhotoViewSize
    1323:1329:androidx.appcompat.widget.AppCompatCheckBox getCheckBox() -> getCheckBox
    1370:1383:android.widget.TextView getDataView() -> getDataView
    941:943:android.view.ViewGroup$LayoutParams getDefaultPhotoLayoutParams() -> getDefaultPhotoLayoutParams
    162:169:com.android.contacts.list.ContactListItemView$PhotoPosition getDefaultPhotoPosition(boolean) -> getDefaultPhotoPosition
    932:932:int getDefaultPhotoViewSize() -> getDefaultPhotoViewSize
    1338:1363:androidx.appcompat.widget.AppCompatImageButton getDeleteImageButton(com.android.contacts.list.MultiSelectEntryContactListAdapter$DeleteContactListener,int) -> getDeleteImageButton
    1228:1245:android.widget.TextView getLabelView() -> getLabelView
    1155:1173:android.widget.TextView getNameTextView() -> getNameTextView
    1195:1206:android.widget.TextView getPhoneticNameTextView() -> getPhoneticNameTextView
    1852:1852:com.android.contacts.list.ContactListItemView$PhotoPosition getPhotoPosition() -> getPhotoPosition
    1074:1082:android.widget.ImageView getPhotoView() -> getPhotoView
    1050:1067:android.widget.QuickContactBadge getQuickContact() -> getQuickContact
    1411:1420:android.widget.TextView getSnippetView() -> getSnippetView
    1427:1437:android.widget.TextView getStatusView() -> getStatusView
    1492:1492:android.text.TextUtils$TruncateAt getTextEllipsis() -> getTextEllipsis
    1547:1549:void hideCheckBox() -> hideCheckBox
    1554:1556:void hideDeleteImageButton() -> hideDeleteImageButton
    1561:1563:void hideDisplayName() -> hideDisplayName
    1578:1580:void hidePhoneticName() -> hidePhoneticName
    909:909:boolean isVisible(android.view.View) -> isVisible
    962:964:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    615:891:void onLayout(boolean,int,int,int,int) -> onLayout
    429:604:void onMeasure(int,int) -> onMeasure
    1878:1884:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1891:1892:boolean pointIsInView(float,float) -> pointIsInView
    1089:1089:void removePhotoView() -> removePhotoView
    1101:1110:void removePhotoView(boolean,boolean) -> removePhotoView
    1844:1844:void requestLayout() -> requestLayout
    1832:1832:void setActivatedStateSupported(boolean) -> setActivatedStateSupported
    1836:1836:void setAdjustSelectionBoundsEnabled(boolean) -> setAdjustSelectionBoundsEnabled
    1253:1259:void setData(char[],int) -> setData
    1509:1513:void setDisplayName(java.lang.CharSequence,boolean) -> setDisplayName
    1517:1542:void setDisplayName(java.lang.CharSequence) -> setDisplayName
    1861:1872:void setDrawableResource(int) -> setDrawableResource
    1121:1121:void setHighlightedPrefix(java.lang.String) -> setHighlightedPrefix
    1043:1043:void setIsSectionHeaderEnabled(boolean) -> setIsSectionHeaderEnabled
    1213:1220:void setLabel(java.lang.CharSequence) -> setLabel
    1299:1302:void setMarqueeText(android.widget.TextView,char[],int) -> setMarqueeText
    1307:1315:void setMarqueeText(android.widget.TextView,java.lang.CharSequence) -> setMarqueeText
    1269:1294:void setPhoneNumber(java.lang.String,java.lang.String) -> setPhoneNumber
    1181:1187:void setPhoneticName(char[],int) -> setPhoneticName
    1848:1848:void setPhotoPosition(com.android.contacts.list.ContactListItemView$PhotoPosition) -> setPhotoPosition
    1460:1469:void setPresence(android.graphics.drawable.Drawable) -> setPresence
    369:369:void setQuickContactEnabled(boolean) -> setQuickContactEnabled
    983:1003:void setSectionHeader(java.lang.String) -> setSectionHeader
    383:408:void setShowVideoCallIcon(boolean,com.android.contacts.list.PhoneNumberListAdapter$Listener,int) -> setShowVideoCallIcon
    1390:1402:void setSnippet(java.lang.String) -> setSnippet
    1444:1451:void setStatus(java.lang.CharSequence) -> setStatus
    422:422:void setSupportVideoCallIcon(boolean) -> setSupportVideoCallIcon
    365:365:void setUnknownNameText(java.lang.CharSequence) -> setUnknownNameText
    1480:1487:void setWorkProfileIconEnabled(boolean) -> setWorkProfileIconEnabled
    1827:1828:void showData(android.database.Cursor,int) -> showData
    1496:1504:void showDisplayName(android.database.Cursor,int,int) -> showDisplayName
    1568:1573:void showPhoneticName(android.database.Cursor,int) -> showPhoneticName
    1591:1606:void showPresenceAndStatusMessage(android.database.Cursor,int,int) -> showPresenceAndStatusMessage
    1617:1631:void showSnippet(android.database.Cursor,java.lang.String,int) -> showSnippet
    1638:1693:void showSnippet(android.database.Cursor,int) -> showSnippet
    1757:1799:java.lang.String snippetize(java.lang.String,int,int) -> snippetize
    1815:1818:java.util.List split(java.lang.String) -> split
    1017:1025:void updateHeaderText(android.widget.TextView,java.lang.String) -> updateHeaderText
    1707:1737:java.lang.String updateSnippet(java.lang.String,java.lang.String,java.lang.String) -> updateSnippet
    957:957:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.android.contacts.list.ContactListItemView$1 -> com.android.contacts.list.ContactListItemView$1:
    397:397:void <init>(com.android.contacts.list.ContactListItemView) -> <init>
    401:402:void onClick(android.view.View) -> onClick
com.android.contacts.list.ContactListItemView$2 -> com.android.contacts.list.ContactListItemView$2:
    1354:1354:void <init>(com.android.contacts.list.ContactListItemView,com.android.contacts.list.MultiSelectEntryContactListAdapter$DeleteContactListener,int) -> <init>
    1358:1359:void onClick(android.view.View) -> onClick
com.android.contacts.list.ContactListItemView$HighlightSequence -> com.android.contacts.list.ContactListItemView$HighlightSequence:
    124:126:void <init>(int,int) -> <init>
    120:120:int access$200(com.android.contacts.list.ContactListItemView$HighlightSequence) -> access$200
    120:120:int access$300(com.android.contacts.list.ContactListItemView$HighlightSequence) -> access$300
com.android.contacts.list.ContactListItemView$PhotoPosition -> com.android.contacts.list.ContactListItemView$PhotoPosition:
    156:158:void <clinit>() -> <clinit>
    156:156:void <init>(java.lang.String,int) -> <init>
    156:156:com.android.contacts.list.ContactListItemView$PhotoPosition valueOf(java.lang.String) -> valueOf
    156:156:com.android.contacts.list.ContactListItemView$PhotoPosition[] values() -> values
com.android.contacts.list.ContactListPinnedHeaderView -> com.android.contacts.list.ContactListPinnedHeaderView:
    36:65:void <init>(android.content.Context,android.util.AttributeSet,android.view.View) -> <init>
    73:76:void setSectionHeaderTitle(java.lang.String) -> setSectionHeaderTitle
com.android.contacts.list.ContactPickerFragment -> com.android.contacts.list.ContactPickerFragment:
    46:51:void <init>() -> <init>
    135:148:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    122:123:void editContact(android.net.Uri) -> editContact
    155:155:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    93:96:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    103:117:void onItemClick(int,long) -> onItemClick
    72:75:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    160:161:void onShortcutIntentCreated(android.net.Uri,android.content.Intent) -> onShortcutIntentCreated
    128:129:void pickContact(android.net.Uri) -> pickContact
    80:88:void restoreSavedState(android.os.Bundle) -> restoreSavedState
    59:59:void setCreateContactEnabled(boolean) -> setCreateContactEnabled
    63:63:void setEditMode(boolean) -> setEditMode
    55:55:void setOnContactPickerActionListener(com.android.contacts.list.OnContactPickerActionListener) -> setOnContactPickerActionListener
    67:67:void setShortcutRequested(boolean) -> setShortcutRequested
com.android.contacts.list.ContactsIntentResolver -> com.android.contacts.list.ContactsIntentResolver:
    51:52:void <init>(android.app.Activity) -> <init>
    56:190:com.android.contacts.list.ContactsRequest resolveIntent(android.content.Intent) -> resolveIntent
com.android.contacts.list.ContactsRequest -> com.android.contacts.list.ContactsRequest:
    28:109:void <init>() -> <init>
    147:147:int getActionCode() -> getActionCode
    143:143:java.lang.CharSequence getActivityTitle() -> getActivityTitle
    199:199:android.net.Uri getContactUri() -> getContactUri
    163:163:java.lang.String getQueryString() -> getQueryString
    191:191:boolean isDirectorySearchEnabled() -> isDirectorySearchEnabled
    179:179:boolean isLegacyCompatibilityMode() -> isLegacyCompatibilityMode
    155:155:boolean isSearchMode() -> isSearchMode
    131:131:boolean isValid() -> isValid
    211:211:void setAccountWithDataSet(com.android.contacts.model.account.AccountWithDataSet) -> setAccountWithDataSet
    151:151:void setActionCode(int) -> setActionCode
    139:139:void setActivityTitle(java.lang.CharSequence) -> setActivityTitle
    203:203:void setContactUri(android.net.Uri) -> setContactUri
    183:183:void setLegacyCompatibilityMode(boolean) -> setLegacyCompatibilityMode
    167:167:void setQueryString(java.lang.String) -> setQueryString
    219:219:void setRawContactIds(java.util.ArrayList) -> setRawContactIds
    159:159:void setSearchMode(boolean) -> setSearchMode
    171:171:boolean shouldIncludeFavorites() -> shouldIncludeFavorites
    116:116:java.lang.String toString() -> toString
com.android.contacts.list.ContactsSectionIndexer -> com.android.contacts.list.ContactsSectionIndexer:
    42:68:void <init>(java.lang.String[],int[]) -> <init>
    80:84:int getPositionForSection(int) -> getPositionForSection
    76:76:int[] getPositions() -> getPositions
    88:92:int getSectionForPosition(int) -> getSectionForPosition
    72:72:java.lang.Object[] getSections() -> getSections
    106:125:void setFavoritesHeader(int) -> setFavoritesHeader
com.android.contacts.list.ContactsUnavailableFragment -> com.android.contacts.list.ContactsUnavailableFragment:
    45:45:void <init>() -> <init>
    156:156:android.content.Context getContext() -> getContext
    132:138:void onClick(android.view.View) -> onClick
    60:94:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    144:150:void updateButtonVisibility(int) -> updateButtonVisibility
    98:107:void updateStatus(int) -> updateStatus
    124:127:void updateViewsForBusyStatus() -> updateViewsForBusyStatus
    115:117:void updateViewsForEmptyStatus() -> updateViewsForEmptyStatus
com.android.contacts.list.CustomContactListFilterActivity -> com.android.contacts.list.CustomContactListFilterActivity:
    417:417:void <clinit>() -> <clinit>
    87:87:void <init>() -> <init>
    87:87:android.widget.ExpandableListView access$000(com.android.contacts.list.CustomContactListFilterActivity) -> access$000
    87:87:android.net.Uri access$300(android.net.Uri) -> access$300
    87:87:java.util.Comparator access$400() -> access$400
    87:87:com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter access$500(com.android.contacts.list.CustomContactListFilterActivity) -> access$500
    409:411:android.net.Uri addCallerIsSyncAdapterParameter(android.net.Uri) -> addCallerIsSyncAdapterParameter
    964:969:void confirmFinish() -> confirmFinish
    852:865:void doSaveAction() -> doSaveAction
    974:974:int getCurrentListFilterType() -> getCurrentListFilterType
    735:735:int getSyncMode(com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay) -> getSyncMode
    787:809:void handleRemoveSync(com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay,com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,int,java.lang.CharSequence) -> handleRemoveSync
    837:844:boolean hasUnsavedChanges() -> hasUnsavedChanges
    958:958:void onBackPressed() -> onBackPressed
    713:722:boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
    101:131:void onCreate(android.os.Bundle) -> onCreate
    745:767:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    221:221:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    933:937:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    87:87:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    226:226:void onLoadFinished(android.content.Loader,com.android.contacts.list.CustomContactListFilterActivity$AccountSet) -> onLoadFinished
    231:231:void onLoaderReset(android.content.Loader) -> onLoaderReset
    944:953:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    215:216:void onStart() -> onStart
    814:820:void showAddSync(android.view.ContextMenu,com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay,int) -> showAddSync
    773:776:void showRemoveSync(android.view.ContextMenu,com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay,com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,int) -> showRemoveSync
com.android.contacts.list.CustomContactListFilterActivity$1 -> com.android.contacts.list.CustomContactListFilterActivity$1:
    109:109:void <init>(com.android.contacts.list.CustomContactListFilterActivity) -> <init>
    114:117:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.contacts.list.CustomContactListFilterActivity$2 -> com.android.contacts.list.CustomContactListFilterActivity$2:
    417:417:void <init>() -> <init>
    417:417:int compare(java.lang.Object,java.lang.Object) -> compare
    419:429:int compare(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,com.android.contacts.list.CustomContactListFilterActivity$GroupDelta) -> compare
com.android.contacts.list.CustomContactListFilterActivity$3 -> com.android.contacts.list.CustomContactListFilterActivity$3:
    777:777:void <init>(com.android.contacts.list.CustomContactListFilterActivity,com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay,com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,int,java.lang.CharSequence) -> <init>
    779:779:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.contacts.list.CustomContactListFilterActivity$4 -> com.android.contacts.list.CustomContactListFilterActivity$4:
    797:797:void <init>(com.android.contacts.list.CustomContactListFilterActivity,com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay,com.android.contacts.list.CustomContactListFilterActivity$GroupDelta) -> <init>
    800:802:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.list.CustomContactListFilterActivity$5 -> com.android.contacts.list.CustomContactListFilterActivity$5:
    820:820:void <init>(com.android.contacts.list.CustomContactListFilterActivity,com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,int,com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay) -> <init>
    823:828:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay -> com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay:
    461:480:void <init>(android.content.ContentResolver,com.android.contacts.model.account.AccountInfo) -> <init>
    454:454:void access$200(com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay,com.android.contacts.list.CustomContactListFilterActivity$GroupDelta) -> access$200
    488:491:void addGroup(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta) -> addGroup
    538:544:void buildDiff(java.util.ArrayList) -> buildDiff
    465:469:com.android.contacts.list.CustomContactListFilterActivity$GroupDelta getGroup(int) -> getGroup
    501:505:void setShouldSync(boolean) -> setShouldSync
    510:510:void setShouldSync(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,boolean) -> setShouldSync
    518:529:void setShouldSync(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,boolean,boolean) -> setShouldSync
com.android.contacts.list.CustomContactListFilterActivity$AccountSet -> com.android.contacts.list.CustomContactListFilterActivity$AccountSet:
    440:440:void <init>() -> <init>
    442:444:java.util.ArrayList buildDiff() -> buildDiff
com.android.contacts.list.CustomContactListFilterActivity$ConfirmNavigationDialogFragment -> com.android.contacts.list.CustomContactListFilterActivity$ConfirmNavigationDialogFragment:
    978:978:void <init>() -> <init>
    993:994:void onClick(android.content.DialogInterface,int) -> onClick
    983:987:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader -> com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader:
    140:141:void <init>(android.content.Context) -> <init>
    135:135:com.android.contacts.list.CustomContactListFilterActivity$AccountSet access$100(com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader,java.util.List) -> access$100
    157:206:com.android.contacts.list.CustomContactListFilterActivity$AccountSet createAccountSet(java.util.List) -> createAccountSet
    146:153:com.google.common.util.concurrent.ListenableFuture loadData() -> loadData
com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader$1 -> com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader$1:
    147:147:void <init>(com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader) -> <init>
    147:147:java.lang.Object apply(java.lang.Object) -> apply
    151:151:com.android.contacts.list.CustomContactListFilterActivity$AccountSet apply(java.util.List) -> apply
com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter -> com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter:
    560:565:void <init>(android.content.Context) -> <init>
    554:554:com.android.contacts.list.CustomContactListFilterActivity$AccountSet access$700(com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter) -> access$700
    648:653:java.lang.Object getChild(int,int) -> getChild
    661:664:long getChildId(int,int) -> getChildId
    613:641:android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    673:674:int getChildrenCount(int) -> getChildrenCount
    679:679:java.lang.Object getGroup(int) -> getGroup
    684:687:int getGroupCount() -> getGroupCount
    585:604:android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    569:570:void setAccounts(com.android.contacts.list.CustomContactListFilterActivity$AccountSet) -> setAccounts
com.android.contacts.list.CustomContactListFilterActivity$GroupDelta -> com.android.contacts.list.CustomContactListFilterActivity$GroupDelta:
    242:246:void <init>() -> <init>
    241:241:boolean access$600(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta) -> access$600
    310:310:boolean beforeExists() -> beforeExists
    365:400:android.content.ContentProviderOperation buildDiff() -> buildDiff
    296:298:com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromAfter(android.content.ContentValues) -> fromAfter
    289:291:com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromBefore(android.content.ContentValues) -> fromBefore
    256:285:com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean) -> fromSettings
    332:332:java.lang.String getAccountType() -> getAccountType
    314:315:boolean getShouldSync() -> getShouldSync
    336:355:java.lang.CharSequence getTitle(android.content.Context) -> getTitle
    319:320:boolean getVisible() -> getVisible
    324:324:void putShouldSync(boolean) -> putShouldSync
    328:328:void putVisible(boolean) -> putVisible
    303:304:com.android.contacts.list.CustomContactListFilterActivity$GroupDelta setUngrouped(boolean) -> setUngrouped
com.android.contacts.list.CustomContactListFilterActivity$UpdateTask -> com.android.contacts.list.CustomContactListFilterActivity$UpdateTask:
    877:877:void <init>(android.app.Activity) -> <init>
    872:872:java.lang.Object doInBackground(java.lang.Object,java.lang.Object[]) -> doInBackground
    898:907:java.lang.Void doInBackground(android.app.Activity,java.util.ArrayList[]) -> doInBackground
    872:872:void onPostExecute(java.lang.Object,java.lang.Object) -> onPostExecute
    919:927:void onPostExecute(android.app.Activity,java.lang.Void) -> onPostExecute
    872:872:void onPreExecute(java.lang.Object) -> onPreExecute
    885:890:void onPreExecute(android.app.Activity) -> onPreExecute
com.android.contacts.list.DefaultContactBrowseListFragment -> com.android.contacts.list.DefaultContactBrowseListFragment:
    109:253:void <init>() -> <init>
    91:91:androidx.swiperefreshlayout.widget.SwipeRefreshLayout access$000(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$000
    91:91:boolean access$100(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$100
    91:91:void access$1000(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$1000
    91:91:void access$1100(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$1100
    91:91:java.lang.Runnable access$1200(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$1200
    91:91:android.os.Handler access$1300(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$1300
    91:91:void access$1400(com.android.contacts.list.DefaultContactBrowseListFragment,com.android.contacts.list.ContactListFilter) -> access$1400
    91:91:boolean access$1600(com.android.contacts.list.DefaultContactBrowseListFragment,com.android.contacts.list.ContactListFilter) -> access$1600
    91:91:int access$1700(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$1700
    91:91:void access$1800(com.android.contacts.list.DefaultContactBrowseListFragment,com.android.contacts.list.ContactListFilter,boolean) -> access$1800
    91:91:void access$1900(com.android.contacts.list.DefaultContactBrowseListFragment,com.android.contacts.list.ContactListFilter) -> access$1900
    91:91:com.android.contacts.activities.PeopleActivity access$200(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$200
    91:91:boolean access$2102(com.android.contacts.list.DefaultContactBrowseListFragment,boolean) -> access$2102
    91:91:void access$300(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$300
    91:91:void access$400(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$400
    91:91:void access$500(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$500
    91:91:void access$600(com.android.contacts.list.DefaultContactBrowseListFragment,com.android.contacts.list.ContactListFilter) -> access$600
    91:91:com.android.contacts.activities.ActionBarAdapter access$700(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$700
    91:91:void access$800(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$800
    91:91:boolean access$900(com.android.contacts.list.DefaultContactBrowseListFragment) -> access$900
    91:91:boolean access$902(com.android.contacts.list.DefaultContactBrowseListFragment,boolean) -> access$902
    311:333:void bindListHeader(int) -> bindListHeader
    1247:1247:boolean canSetActionBar() -> canSetActionBar
    800:801:void checkHeaderViewVisibility() -> checkHeaderViewVisibility
    897:900:void configureContactListFragment() -> configureContactListFragment
    742:748:void configureContactListFragmentForRequest() -> configureContactListFragmentForRequest
    693:704:void configureFragment() -> configureFragment
    709:738:void configureFragmentForRequest() -> configureFragmentForRequest
    274:274:android.content.CursorLoader createCursorLoader(android.content.Context) -> createCursorLoader
    91:91:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    404:408:com.android.contacts.list.ContactListAdapter createListAdapter() -> createListAdapter
    1145:1147:void deleteSelectedContacts() -> deleteSelectedContacts
    559:565:void dismiss() -> dismiss
    781:781:com.android.contacts.activities.ActionBarAdapter getActionBarAdapter() -> getActionBarAdapter
    453:469:android.view.View getEmptyAccountView(android.view.LayoutInflater) -> getEmptyAccountView
    434:448:android.view.View getEmptyHomeView(android.view.LayoutInflater) -> getEmptyHomeView
    414:414:com.android.contacts.list.ContactListFilter getFilter() -> getFilter
    1164:1164:int getListTypeIncludingSearch() -> getListTypeIncludingSearch
    1198:1198:boolean getOptionsMenuContactsAvailable() -> getOptionsMenuContactsAvailable
    904:906:int getScrollBarPosition() -> getScrollBarPosition
    834:834:androidx.swiperefreshlayout.widget.SwipeRefreshLayout getSwipeRefreshLayout() -> getSwipeRefreshLayout
    1044:1049:boolean hasExportIntentHandler() -> hasExportIntentHandler
    419:428:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    569:599:void initSwipeRefreshLayout() -> initSwipeRefreshLayout
    687:688:void initializeActionBarAdapter(android.os.Bundle) -> initializeActionBarAdapter
    978:978:boolean isAllContactsFilter(com.android.contacts.list.ContactListFilter) -> isAllContactsFilter
    305:307:boolean isTalkbackOnAndOnPreLollipopMr1() -> isTalkbackOnAndOnPreLollipopMr1
    1135:1140:void joinSelectedContacts() -> joinSelectedContacts
    1037:1039:void makeMenuItemVisible(android.view.Menu,int,boolean) -> makeMenuItemVisible
    372:374:void makeViewVisible(android.view.View) -> makeViewVisible
    775:776:void maybeHideCheckBoxes() -> maybeHideCheckBoxes
    292:297:void maybeShowHamburgerFeatureHighlight() -> maybeShowHamburgerFeatureHighlight
    661:683:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1179:1185:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    475:485:void onCreate(android.os.Bundle) -> onCreate
    995:1000:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    490:521:void onCreateView(android.view.LayoutInflater,android.view.ViewGroup) -> onCreateView
    1224:1227:void onDestroy() -> onDestroy
    542:555:void onEnableAutoSync(com.android.contacts.list.ContactListFilter) -> onEnableAutoSync
    386:399:void onItemClick(int,long) -> onItemClick
    1231:1239:boolean onKeyDown(int) -> onKeyDown
    91:91:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    279:287:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    1054:1089:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1218:1219:void onPause() -> onPause
    1005:1030:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    761:771:void onResume() -> onResume
    1203:1213:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    269:269:void resetSearchResultClicked() -> resetSearchResultClicked
    379:380:void scrollToTop() -> scrollToTop
    989:990:void setContactListFilter(com.android.contacts.list.ContactListFilter) -> setContactListFilter
    982:982:void setContactsAvailable(boolean) -> setContactsAvailable
    752:755:void setDirectorySearchMode() -> setDirectorySearchMode
    858:858:void setFilterAndUpdateTitle(com.android.contacts.list.ContactListFilter) -> setFilterAndUpdateTitle
    862:870:void setFilterAndUpdateTitle(com.android.contacts.list.ContactListFilter,boolean) -> setFilterAndUpdateTitle
    807:828:void setListHeader() -> setListHeader
    1168:1169:void setParameters(com.android.contacts.list.ContactsRequest,boolean) -> setParameters
    786:788:void setSearchMode(boolean) -> setSearchMode
    874:890:void setSwipeRefreshLayoutEnabledOrNot(com.android.contacts.list.ContactListFilter) -> setSwipeRefreshLayoutEnabledOrNot
    630:642:void setSyncOffAlert() -> setSyncOffAlert
    647:653:void setSyncOffMsg(int) -> setSyncOffMsg
    1097:1130:void shareSelectedContacts() -> shareSelectedContacts
    347:365:boolean shouldShowEmptyView(com.android.contacts.list.ContactListFilter) -> shouldShowEmptyView
    793:794:void showSearchProgress(boolean) -> showSearchProgress
    611:623:void syncContacts(com.android.contacts.list.ContactListFilter) -> syncContacts
    525:535:void turnSyncOn() -> turnSyncOn
    262:262:boolean wasSearchResultClicked() -> wasSearchResultClicked
com.android.contacts.list.DefaultContactBrowseListFragment$1 -> com.android.contacts.list.DefaultContactBrowseListFragment$1:
    110:110:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment) -> <init>
    113:114:void run() -> run
com.android.contacts.list.DefaultContactBrowseListFragment$2 -> com.android.contacts.list.DefaultContactBrowseListFragment$2:
    162:162:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment) -> <init>
    167:204:void onAction(int) -> onAction
    234:234:void onUpButtonPressed() -> onUpButtonPressed
    228:229:void setQueryTextToFragment(java.lang.String) -> setQueryTextToFragment
    209:216:void startSearchOrSelectionMode() -> startSearchOrSelectionMode
    221:223:void updateDebugOptionsVisibility(boolean) -> updateDebugOptionsVisibility
com.android.contacts.list.DefaultContactBrowseListFragment$3 -> com.android.contacts.list.DefaultContactBrowseListFragment$3:
    238:238:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment) -> <init>
    241:241:void onClick(android.view.View) -> onClick
com.android.contacts.list.DefaultContactBrowseListFragment$4 -> com.android.contacts.list.DefaultContactBrowseListFragment$4:
    508:508:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment) -> <init>
    511:511:void onClick(android.view.View) -> onClick
com.android.contacts.list.DefaultContactBrowseListFragment$5 -> com.android.contacts.list.DefaultContactBrowseListFragment$5:
    514:514:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment) -> <init>
    517:517:void onClick(android.view.View) -> onClick
com.android.contacts.list.DefaultContactBrowseListFragment$6 -> com.android.contacts.list.DefaultContactBrowseListFragment$6:
    576:576:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment) -> <init>
    579:590:void onRefresh() -> onRefresh
com.android.contacts.list.DefaultContactBrowseListFragment$CheckBoxListListener -> com.android.contacts.list.DefaultContactBrowseListFragment$CheckBoxListListener:
    837:837:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment) -> <init>
    837:837:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment,com.android.contacts.list.DefaultContactBrowseListFragment$1) -> <init>
    846:848:void onSelectedContactIdsChanged() -> onSelectedContactIdsChanged
    840:841:void onStartDisplayingCheckBoxes() -> onStartDisplayingCheckBoxes
    853:853:void onStopDisplayingCheckBoxes() -> onStopDisplayingCheckBoxes
com.android.contacts.list.DefaultContactBrowseListFragment$ContactBrowserActionListener -> com.android.contacts.list.DefaultContactBrowseListFragment$ContactBrowserActionListener:
    911:911:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment) -> <init>
    963:973:void onInvalidSelection() -> onInvalidSelection
    922:946:void onViewContactAction(int,android.net.Uri,boolean) -> onViewContactAction
com.android.contacts.list.DefaultContactBrowseListFragment$MultiDeleteListener -> com.android.contacts.list.DefaultContactBrowseListFragment$MultiDeleteListener:
    1150:1150:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment) -> <init>
    1150:1150:void <init>(com.android.contacts.list.DefaultContactBrowseListFragment,com.android.contacts.list.DefaultContactBrowseListFragment$1) -> <init>
    1154:1159:void onDeletionFinished() -> onDeletionFinished
com.android.contacts.list.DefaultContactListAdapter -> com.android.contacts.list.DefaultContactListAdapter:
    49:49:void <init>(android.content.Context) -> <init>
    124:131:void appendSearchParameters(android.net.Uri$Builder,java.lang.String,long) -> appendSearchParameters
    237:264:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    54:115:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    178:232:void configureSelection(android.content.CursorLoader,long,com.android.contacts.list.ContactListFilter) -> configureSelection
    135:165:void configureUri(android.content.CursorLoader,long,com.android.contacts.list.ContactListFilter) -> configureUri
    270:271:boolean isCustomFilterForPhoneNumbersOnly() -> isCustomFilterForPhoneNumbersOnly
    119:120:boolean isGroupMembersFilter() -> isGroupMembersFilter
com.android.contacts.list.DirectoryListLoader -> com.android.contacts.list.DirectoryListLoader:
    74:74:void <clinit>() -> <clinit>
    81:94:void <init>(android.content.Context) -> <init>
    195:210:android.database.Cursor getDefaultDirectories() -> getDefaultDirectories
    36:36:java.lang.Object loadInBackground() -> loadInBackground
    124:189:android.database.Cursor loadInBackground() -> loadInBackground
    215:215:void onReset() -> onReset
    111:114:void onStartLoading() -> onStartLoading
    119:119:void onStopLoading() -> onStopLoading
    98:98:void setDirectorySearchMode(int) -> setDirectorySearchMode
    106:106:void setLocalInvisibleDirectoryEnabled(boolean) -> setLocalInvisibleDirectoryEnabled
com.android.contacts.list.DirectoryListLoader$1 -> com.android.contacts.list.DirectoryListLoader$1:
    81:81:void <init>(com.android.contacts.list.DirectoryListLoader,android.os.Handler) -> <init>
    84:84:void onChange(boolean) -> onChange
com.android.contacts.list.DirectoryListLoader$DirectoryQuery -> com.android.contacts.list.DirectoryListLoader$DirectoryQuery:
    48:48:void <clinit>() -> <clinit>
    64:66:android.net.Uri getDirectoryUri(int) -> getDirectoryUri
com.android.contacts.list.DirectoryPartition -> com.android.contacts.list.DirectoryPartition:
    40:46:void <init>(boolean,boolean) -> <init>
    135:135:java.lang.String getContentUri() -> getContentUri
    53:53:long getDirectoryId() -> getDirectoryId
    65:65:java.lang.String getDirectoryType() -> getDirectoryType
    76:76:java.lang.String getDisplayName() -> getDisplayName
    146:146:java.lang.String getLabel() -> getLabel
    123:123:int getResultLimit() -> getResultLimit
    84:84:int getStatus() -> getStatus
    173:173:boolean isDisplayNumber() -> isDisplayNumber
    92:92:boolean isLoading() -> isLoading
    110:110:boolean isPhotoSupported() -> isPhotoSupported
    99:99:boolean isPriorityDirectory() -> isPriorityDirectory
    57:57:void setDirectoryId(long) -> setDirectoryId
    69:69:void setDirectoryType(java.lang.String) -> setDirectoryType
    80:80:void setDisplayName(java.lang.String) -> setDisplayName
    150:150:void setLabel(java.lang.String) -> setLabel
    114:114:void setPhotoSupported(boolean) -> setPhotoSupported
    103:103:void setPriorityDirectory(boolean) -> setPriorityDirectory
    88:88:void setStatus(int) -> setStatus
    155:155:java.lang.String toString() -> toString
com.android.contacts.list.EmailAddressListAdapter -> com.android.contacts.list.EmailAddressListAdapter:
    72:74:void <init>(android.content.Context) -> <init>
    144:152:void bindEmailAddress(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindEmailAddress
    166:166:void bindName(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindName
    171:179:void bindPhoto(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindPhoto
    156:161:void bindSectionHeaderAndDivider(com.android.contacts.list.ContactListItemView,int) -> bindSectionHeaderAndDivider
    133:139:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    80:104:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    118:119:android.net.Uri getDataUri(int) -> getDataUri
    37:37:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    125:127:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
com.android.contacts.list.EmailAddressListAdapter$EmailQuery -> com.android.contacts.list.EmailAddressListAdapter$EmailQuery:
    40:50:void <clinit>() -> <clinit>
    39:39:java.lang.String[] access$000() -> access$000
    39:39:java.lang.String[] access$100() -> access$100
com.android.contacts.list.EmailAddressPickerFragment -> com.android.contacts.list.EmailAddressPickerFragment:
    31:35:void <init>() -> <init>
    53:55:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    61:61:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    66:68:void onCreateView(android.view.LayoutInflater,android.view.ViewGroup) -> onCreateView
    44:48:void onItemClick(int,long) -> onItemClick
    72:72:void pickEmailAddress(android.net.Uri) -> pickEmailAddress
    39:39:void setOnEmailAddressPickerActionListener(com.android.contacts.list.OnEmailAddressPickerActionListener) -> setOnEmailAddressPickerActionListener
com.android.contacts.list.EnableGlobalSyncDialogFragment -> com.android.contacts.list.EnableGlobalSyncDialogFragment:
    30:30:void <init>() -> <init>
    30:30:com.android.contacts.list.ContactListFilter access$000(com.android.contacts.list.EnableGlobalSyncDialogFragment) -> access$000
    61:62:void onCreate(android.os.Bundle) -> onCreate
    67:82:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    49:56:void show(com.android.contacts.list.DefaultContactBrowseListFragment,com.android.contacts.list.ContactListFilter) -> show
com.android.contacts.list.EnableGlobalSyncDialogFragment$1 -> com.android.contacts.list.EnableGlobalSyncDialogFragment$1:
    72:72:void <init>(com.android.contacts.list.EnableGlobalSyncDialogFragment,com.android.contacts.list.EnableGlobalSyncDialogFragment$Listener) -> <init>
    75:76:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.list.FavoritesAndContactsLoader -> com.android.contacts.list.FavoritesAndContactsLoader:
    42:42:void <init>(android.content.Context) -> <init>
    76:76:android.database.Cursor loadContacts() -> loadContacts
    85:94:android.database.Cursor loadFavoritesContacts() -> loadFavoritesContacts
    34:34:java.lang.Object loadInBackground() -> loadInBackground
    57:63:android.database.Cursor loadInBackground() -> loadInBackground
    47:47:void setLoadFavorites(boolean) -> setLoadFavorites
    51:52:void setProjection(java.lang.String[]) -> setProjection
com.android.contacts.list.FavoritesAndContactsLoader$1 -> com.android.contacts.list.FavoritesAndContactsLoader$1:
    63:63:void <init>(com.android.contacts.list.FavoritesAndContactsLoader,android.database.Cursor[],android.database.Cursor) -> <init>
    67:67:android.os.Bundle getExtras() -> getExtras
com.android.contacts.list.GroupMemberPickerFragment -> com.android.contacts.list.GroupMemberPickerFragment:
    186:190:void <init>() -> <init>
    44:44:java.util.ArrayList access$000(com.android.contacts.list.GroupMemberPickerFragment) -> access$000
    44:44:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    247:255:com.android.contacts.list.DefaultContactListAdapter createListAdapter() -> createListAdapter
    292:294:com.android.contacts.activities.ContactSelectionActivity getContactSelectionActivity() -> getContactSelectionActivity
    224:224:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    175:182:com.android.contacts.list.GroupMemberPickerFragment newInstance(java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList) -> newInstance
    196:206:void onCreate(android.os.Bundle) -> onCreate
    275:276:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    261:268:void onItemClick(int,long) -> onItemClick
    44:44:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    231:241:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    308:321:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    281:288:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    211:215:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    219:219:void setListener(com.android.contacts.list.GroupMemberPickerFragment$Listener) -> setListener
    300:302:void setVisible(android.view.Menu,int,boolean) -> setVisible
com.android.contacts.list.GroupMemberPickerFragment$FilterCursorWrapper -> com.android.contacts.list.GroupMemberPickerFragment$FilterCursorWrapper:
    73:114:void <init>(com.android.contacts.list.GroupMemberPickerFragment,android.database.Cursor) -> <init>
    158:158:int getCount() -> getCount
    163:163:int getPosition() -> getPosition
    120:120:boolean move(int) -> move
    135:135:boolean moveToFirst() -> moveToFirst
    140:140:boolean moveToLast() -> moveToLast
    125:125:boolean moveToNext() -> moveToNext
    145:153:boolean moveToPosition(int) -> moveToPosition
    130:130:boolean moveToPrevious() -> moveToPrevious
com.android.contacts.list.HeaderEntryContactListAdapter -> com.android.contacts.list.HeaderEntryContactListAdapter:
    37:37:void <init>(android.content.Context) -> <init>
    93:93:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    54:54:int getCount() -> getCount
    112:112:boolean getExtraStartingSection() -> getExtraStartingSection
    41:41:int getHeaderEntryCount() -> getHeaderEntryCount
    77:77:java.lang.Object getItem(int) -> getItem
    98:101:int getItemViewType(int) -> getItemViewType
    88:88:int getPartitionForPosition(int) -> getPartitionForPosition
    59:72:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    107:107:int getViewTypeCount() -> getViewTypeCount
    82:83:boolean isEnabled(int) -> isEnabled
    48:49:void setShowCreateContact(boolean) -> setShowCreateContact
com.android.contacts.list.IndexerListAdapter -> com.android.contacts.list.IndexerListAdapter:
    31:59:void <init>(android.content.Context) -> <init>
    151:192:void configurePinnedHeaders(com.android.contacts.list.PinnedHeaderListView) -> configurePinnedHeaders
    82:82:int getIndexedPartition() -> getIndexedPartition
    90:90:android.widget.SectionIndexer getIndexer() -> getIndexer
    223:244:com.android.contacts.list.IndexerListAdapter$Placement getItemPlacementInSection(int) -> getItemPlacementInSection
    130:133:int getPinnedHeaderCount() -> getPinnedHeaderCount
    139:145:android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup) -> getPinnedHeaderView
    110:114:int getPositionForSection(int) -> getPositionForSection
    121:125:int getSectionForPosition(int) -> getSectionForPosition
    99:102:java.lang.Object[] getSections() -> getSections
    206:211:android.view.View getViewAtVisiblePosition(android.widget.ListView,int) -> getViewAtVisiblePosition
    74:74:boolean isSectionHeaderDisplayEnabled() -> isSectionHeaderDisplayEnabled
    86:86:void setIndexedPartition(int) -> setIndexedPartition
    94:95:void setIndexer(android.widget.SectionIndexer) -> setIndexer
    78:78:void setSectionHeaderDisplayEnabled(boolean) -> setSectionHeaderDisplayEnabled
com.android.contacts.list.IndexerListAdapter$Placement -> com.android.contacts.list.IndexerListAdapter$Placement:
    41:42:void <init>() -> <init>
    41:41:int access$000(com.android.contacts.list.IndexerListAdapter$Placement) -> access$000
    41:41:int access$002(com.android.contacts.list.IndexerListAdapter$Placement,int) -> access$002
    48:48:void invalidate() -> invalidate
com.android.contacts.list.JoinContactListAdapter -> com.android.contacts.list.JoinContactListAdapter:
    47:51:void <init>(android.content.Context) -> <init>
    57:60:void addPartitions() -> addPartitions
    182:195:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    126:126:void configureDefaultPartition(boolean,boolean) -> configureDefaultPartition
    69:105:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    203:205:android.net.Uri getContactUri(int,android.database.Cursor) -> getContactUri
    136:136:int getItemViewType(int,int) -> getItemViewType
    131:131:int getViewTypeCount() -> getViewTypeCount
    177:177:android.view.View inflate(int,android.view.ViewGroup) -> inflate
    144:151:android.view.View newHeaderView(android.content.Context,int,android.database.Cursor,android.view.ViewGroup) -> newHeaderView
    36:36:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    171:171:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    115:115:void setSuggestionsCursor(android.database.Cursor) -> setSuggestionsCursor
    64:64:void setTargetContactId(long) -> setTargetContactId
com.android.contacts.list.JoinContactListFragment -> com.android.contacts.list.JoinContactListFragment:
    50:105:void <init>() -> <init>
    41:41:long access$000(com.android.contacts.list.JoinContactListFragment) -> access$000
    41:41:void access$100(com.android.contacts.list.JoinContactListFragment,java.lang.String) -> access$100
    41:41:void access$200(com.android.contacts.list.JoinContactListFragment,android.database.Cursor,android.database.Cursor) -> access$200
    153:155:void configureAdapter() -> configureAdapter
    41:41:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    146:147:com.android.contacts.list.JoinContactListAdapter createListAdapter() -> createListAdapter
    160:160:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    125:128:void onContactListLoaded(android.database.Cursor,android.database.Cursor) -> onContactListLoaded
    165:166:void onItemClick(int,long) -> onItemClick
    177:178:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    183:185:void restoreSavedState(android.os.Bundle) -> restoreSavedState
    109:109:void setOnContactPickerActionListener(com.android.contacts.list.OnContactPickerActionListener) -> setOnContactPickerActionListener
    191:193:void setQueryString(java.lang.String,boolean) -> setQueryString
    141:141:void setTargetContactId(long) -> setTargetContactId
    132:137:void showTargetContactName(java.lang.String) -> showTargetContactName
    114:120:void startLoading() -> startLoading
com.android.contacts.list.JoinContactListFragment$1 -> com.android.contacts.list.JoinContactListFragment$1:
    50:50:void <init>(com.android.contacts.list.JoinContactListFragment) -> <init>
    57:70:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    50:50:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    75:87:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
com.android.contacts.list.JoinContactLoader -> com.android.contacts.list.JoinContactLoader:
    67:67:void <init>(android.content.Context) -> <init>
    31:31:java.lang.Object loadInBackground() -> loadInBackground
    84:102:android.database.Cursor loadInBackground() -> loadInBackground
    76:77:void setProjection(java.lang.String[]) -> setProjection
    71:71:void setSuggestionUri(android.net.Uri) -> setSuggestionUri
com.android.contacts.list.JoinContactLoader$JoinContactLoaderResult -> com.android.contacts.list.JoinContactLoader$JoinContactLoaderResult:
    48:49:void <init>(android.database.Cursor,android.database.Cursor) -> <init>
    55:62:void close() -> close
com.android.contacts.list.LegacyContactListAdapter -> com.android.contacts.list.LegacyContactListAdapter:
    33:33:void <clinit>() -> <clinit>
    50:51:void <init>(android.content.Context) -> <init>
    90:92:void bindName(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindName
    96:96:void bindPresence(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindPresence
    82:86:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    56:58:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    67:69:android.net.Uri getPersonUri(int) -> getPersonUri
    30:30:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    75:76:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
com.android.contacts.list.LegacyPhoneNumberListAdapter -> com.android.contacts.list.LegacyPhoneNumberListAdapter:
    35:35:void <clinit>() -> <clinit>
    54:55:void <init>(android.content.Context) -> <init>
    95:96:void bindName(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindName
    101:109:void bindPhoneNumber(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindPhoneNumber
    87:91:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    60:62:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    71:73:android.net.Uri getPhoneUri(int) -> getPhoneUri
    32:32:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    80:81:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
com.android.contacts.list.LegacyPhoneNumberPickerFragment -> com.android.contacts.list.LegacyPhoneNumberPickerFragment:
    25:25:void <init>() -> <init>
    48:49:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    36:37:android.net.Uri getPhoneUri(int) -> getPhoneUri
    60:60:void startPhoneNumberShortcutIntent(android.net.Uri,boolean) -> startPhoneNumberShortcutIntent
com.android.contacts.list.LegacyPostalAddressListAdapter -> com.android.contacts.list.LegacyPostalAddressListAdapter:
    35:35:void <clinit>() -> <clinit>
    54:55:void <init>(android.content.Context) -> <init>
    95:97:void bindName(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindName
    102:110:void bindPostalAddress(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindPostalAddress
    87:91:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    60:63:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    72:74:android.net.Uri getContactMethodUri(int) -> getContactMethodUri
    32:32:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    80:81:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
com.android.contacts.list.MultiSelectContactsListFragment -> com.android.contacts.list.MultiSelectContactsListFragment:
    56:56:void <init>() -> <init>
    335:391:void bindListHeader(android.content.Context,android.view.View,android.view.View,com.android.contacts.model.account.AccountWithDataSet,int) -> bindListHeader
    411:412:void bindListHeaderCommon(android.view.View,android.view.View) -> bindListHeaderCommon
    317:326:void bindListHeaderCustom(android.view.View,android.view.View) -> bindListHeaderCustom
    144:144:void clearCheckBoxes() -> clearCheckBoxes
    124:125:void configureAdapter() -> configureAdapter
    210:210:com.android.contacts.logging.SearchState createSearchState() -> createSearchState
    222:267:com.android.contacts.logging.SearchState createSearchState(int) -> createSearchState
    218:218:com.android.contacts.logging.SearchState createSearchStateForSearchResultClick(int) -> createSearchStateForSearchResultClick
    135:138:void displayCheckBoxes(boolean) -> displayCheckBoxes
    193:202:long getContactId(int) -> getContactId
    115:115:java.util.TreeSet getSelectedContactIds() -> getSelectedContactIds
    119:119:long[] getSelectedContactIdsArray() -> getSelectedContactIdsArray
    420:422:void hideHeaderAndAddPadding(android.content.Context,android.view.View,android.view.View) -> hideHeaderAndAddPadding
    98:102:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    89:93:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    180:188:void onItemClick(int,long) -> onItemClick
    149:173:boolean onItemLongClick(int,long) -> onItemLongClick
    130:131:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    297:312:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    83:83:void onSelectedContactsChanged() -> onSelectedContactsChanged
    108:110:void onStart() -> onStart
    78:78:void setAnimateOnLoad(boolean) -> setAnimateOnLoad
    74:74:void setCheckBoxListListener(com.android.contacts.list.MultiSelectContactsListFragment$OnCheckBoxListActionListener) -> setCheckBoxListListener
    277:291:void setLayoutAnimation(android.view.ViewGroup,int) -> setLayoutAnimation
    427:428:void setListViewPaddingTop(android.view.View,int) -> setListViewPaddingTop
    400:405:void setMargins(android.view.View,int,int) -> setMargins
    395:396:boolean shouldShowAccountName(com.android.contacts.model.account.AccountType) -> shouldShowAccountName
com.android.contacts.list.MultiSelectContactsListFragment$1 -> com.android.contacts.list.MultiSelectContactsListFragment$1:
    277:277:void <init>(com.android.contacts.list.MultiSelectContactsListFragment,android.view.ViewGroup) -> <init>
    284:284:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.android.contacts.list.MultiSelectEmailAddressesListAdapter -> com.android.contacts.list.MultiSelectEmailAddressesListAdapter:
    74:79:void <init>(android.content.Context) -> <init>
    177:185:void bindEmailAddress(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindEmailAddress
    189:189:void bindName(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindName
    145:168:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    89:117:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    35:35:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    137:139:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    83:83:void setArguments(android.os.Bundle) -> setArguments
    172:172:void unbindName(com.android.contacts.list.ContactListItemView) -> unbindName
com.android.contacts.list.MultiSelectEmailAddressesListAdapter$EmailQuery -> com.android.contacts.list.MultiSelectEmailAddressesListAdapter$EmailQuery:
    38:50:void <clinit>() -> <clinit>
com.android.contacts.list.MultiSelectEmailAddressesListFragment -> com.android.contacts.list.MultiSelectEmailAddressesListFragment:
    39:44:void <init>() -> <init>
    36:36:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    49:51:com.android.contacts.list.MultiSelectEmailAddressesListAdapter createListAdapter() -> createListAdapter
    138:138:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    75:75:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    57:58:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    97:107:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    80:91:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    63:65:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    112:127:void onStart() -> onStart
com.android.contacts.list.MultiSelectEmailAddressesListFragment$1 -> com.android.contacts.list.MultiSelectEmailAddressesListFragment$1:
    65:65:void <init>(com.android.contacts.list.MultiSelectEmailAddressesListFragment,android.view.MenuItem) -> <init>
    68:68:void onClick(android.view.View) -> onClick
com.android.contacts.list.MultiSelectEntryContactListAdapter -> com.android.contacts.list.MultiSelectEntryContactListAdapter:
    38:57:void <init>(android.content.Context,int) -> <init>
    182:193:void bindCheckBox(com.android.contacts.list.ContactListItemView,android.database.Cursor,boolean) -> bindCheckBox
    169:175:void bindPhoto(com.android.contacts.list.ContactListItemView,android.database.Cursor,int,int,int) -> bindPhoto
    155:158:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    66:66:int getContactColumnIdIndex() -> getContactColumnIdIndex
    70:70:com.android.contacts.list.MultiSelectEntryContactListAdapter$DeleteContactListener getDeleteContactListener() -> getDeleteContactListener
    146:148:long getItemId(int) -> getItemId
    85:85:java.util.TreeSet getSelectedContactIds() -> getSelectedContactIds
    96:96:long[] getSelectedContactIdsArray() -> getSelectedContactIdsArray
    89:89:boolean hasSelectedItems() -> hasSelectedItems
    126:126:boolean isDisplayingCheckBoxes() -> isDisplayingCheckBoxes
    74:74:void setDeleteContactListener(com.android.contacts.list.MultiSelectEntryContactListAdapter$DeleteContactListener) -> setDeleteContactListener
    115:118:void setDisplayCheckBoxes(boolean) -> setDisplayCheckBoxes
    103:106:void setSelectedContactIds(java.util.TreeSet) -> setSelectedContactIds
    78:78:void setSelectedContactsListener(com.android.contacts.list.MultiSelectEntryContactListAdapter$SelectedContactsListener) -> setSelectedContactsListener
    133:140:void toggleSelectionOfContactId(long) -> toggleSelectionOfContactId
com.android.contacts.list.MultiSelectPhoneNumbersListAdapter -> com.android.contacts.list.MultiSelectPhoneNumbersListAdapter:
    74:79:void <init>(android.content.Context) -> <init>
    189:189:void bindName(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindName
    177:185:void bindPhoneNumber(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindPhoneNumber
    145:168:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    89:117:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    35:35:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    137:139:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    83:83:void setArguments(android.os.Bundle) -> setArguments
    172:172:void unbindName(com.android.contacts.list.ContactListItemView) -> unbindName
com.android.contacts.list.MultiSelectPhoneNumbersListAdapter$PhoneQuery -> com.android.contacts.list.MultiSelectPhoneNumbersListAdapter$PhoneQuery:
    38:50:void <clinit>() -> <clinit>
com.android.contacts.list.MultiSelectPhoneNumbersListFragment -> com.android.contacts.list.MultiSelectPhoneNumbersListFragment:
    39:44:void <init>() -> <init>
    36:36:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    49:51:com.android.contacts.list.MultiSelectPhoneNumbersListAdapter createListAdapter() -> createListAdapter
    123:123:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    75:75:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    57:58:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    97:107:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    80:91:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    63:65:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    112:113:void onStart() -> onStart
com.android.contacts.list.MultiSelectPhoneNumbersListFragment$1 -> com.android.contacts.list.MultiSelectPhoneNumbersListFragment$1:
    65:65:void <init>(com.android.contacts.list.MultiSelectPhoneNumbersListFragment,android.view.MenuItem) -> <init>
    68:68:void onClick(android.view.View) -> onClick
com.android.contacts.list.PhoneNumberListAdapter -> com.android.contacts.list.PhoneNumberListAdapter:
    65:65:void <clinit>() -> <clinit>
    77:187:void <init>(android.content.Context) -> <init>
    293:319:void applyFilter(android.content.CursorLoader,android.net.Uri$Builder,long,com.android.contacts.list.ContactListFilter) -> applyFilter
    513:513:void bindName(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindName
    469:499:void bindPhoneNumber(com.android.contacts.list.ContactListItemView,android.database.Cursor,boolean,int) -> bindPhoneNumber
    534:558:void bindPhoto(com.android.contacts.list.ContactListItemView,int,android.database.Cursor) -> bindPhoto
    504:508:void bindSectionHeaderAndDivider(com.android.contacts.list.ContactListItemView,int) -> bindSectionHeaderAndDivider
    409:463:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    523:530:void bindWorkProfileIcon(com.android.contacts.list.ContactListItemView,int) -> bindWorkProfileIcon
    591:627:void changeDirectories(android.database.Cursor) -> changeDirectories
    196:269:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    636:647:android.net.Uri getContactUri(int,android.database.Cursor,int,int) -> getContactUri
    338:340:android.net.Uri getDataUri(int) -> getDataUri
    345:358:android.net.Uri getDataUri(int,android.database.Cursor) -> getDataUri
    279:280:com.android.contacts.list.DirectoryPartition getExtendedDirectoryFromId(long) -> getExtendedDirectoryFromId
    328:329:java.lang.String getPhoneNumber(int) -> getPhoneNumber
    275:275:boolean isExtendedDirectory(long) -> isExtendedDirectory
    63:63:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    376:379:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    384:384:void setHighlight(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> setHighlight
    563:563:void setPhotoPosition(com.android.contacts.list.ContactListItemView$PhotoPosition) -> setPhotoPosition
    571:571:void setUseCallableUri(boolean) -> setUseCallableUri
    518:518:void unbindName(com.android.contacts.list.ContactListItemView) -> unbindName
com.android.contacts.list.PhoneNumberListAdapter$PhoneQuery -> com.android.contacts.list.PhoneNumberListAdapter$PhoneQuery:
    99:140:void <clinit>() -> <clinit>
com.android.contacts.list.PhoneNumberPickerFragment -> com.android.contacts.list.PhoneNumberPickerFragment:
    56:75:void <init>() -> <init>
    154:165:void callNumber(int,boolean) -> callNumber
    222:233:void configureAdapter() -> configureAdapter
    214:216:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    176:177:java.lang.String getPhoneNumber(int) -> getPhoneNumber
    181:182:android.net.Uri getPhoneUri(int) -> getPhoneUri
    242:242:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    93:95:void onCreateView(android.view.LayoutInflater,android.view.ViewGroup) -> onCreateView
    143:143:void onItemClick(int,long) -> onItemClick
    37:37:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    198:201:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
    123:130:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    116:118:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    261:261:void onShortcutIntentCreated(android.net.Uri,android.content.Intent) -> onShortcutIntentCreated
    65:65:void onVideoCallIconClicked(int) -> onVideoCallIconClicked
    246:250:void pickPhoneNumber(android.net.Uri,boolean) -> pickPhoneNumber
    104:111:void restoreSavedState(android.os.Bundle) -> restoreSavedState
    84:84:void setOnPhoneNumberPickerActionListener(com.android.contacts.list.OnPhoneNumberPickerActionListener) -> setOnPhoneNumberPickerActionListener
    237:237:void setPhotoPosition(com.android.contacts.list.ContactEntryListAdapter) -> setPhotoPosition
    138:138:void setShortcutAction(java.lang.String) -> setShortcutAction
    192:193:void startLoading() -> startLoading
    255:256:void startPhoneNumberShortcutIntent(android.net.Uri,boolean) -> startPhoneNumberShortcutIntent
com.android.contacts.list.PinnedHeaderListAdapter -> com.android.contacts.list.PinnedHeaderListAdapter:
    36:36:void <init>(android.content.Context) -> <init>
    95:160:void configurePinnedHeaders(com.android.contacts.list.PinnedHeaderListView) -> configurePinnedHeaders
    53:54:int getPinnedHeaderCount() -> getPinnedHeaderCount
    71:86:android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup) -> getPinnedHeaderView
    44:44:boolean getPinnedPartitionHeadersEnabled() -> getPinnedPartitionHeadersEnabled
    167:167:int getScrollPositionForHeader(int) -> getScrollPositionForHeader
    61:62:boolean isPinnedPartitionHeaderVisible(int) -> isPinnedPartitionHeaderVisible
    48:48:void setPinnedPartitionHeadersEnabled(boolean) -> setPinnedPartitionHeadersEnabled
com.android.contacts.list.PinnedHeaderListView -> com.android.contacts.list.PinnedHeaderListView:
    116:116:void <init>(android.content.Context) -> <init>
    120:120:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:126:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    492:551:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    555:578:void drawHeader(android.graphics.Canvas,com.android.contacts.list.PinnedHeaderListView$PinnedHeader,long) -> drawHeader
    360:383:void ensurePinnedHeaderLayout(int) -> ensurePinnedHeaderLayout
    249:250:int getPinnedHeaderHeight(int) -> getPinnedHeaderHeight
    405:405:int getPositionAt(int) -> getPositionAt
    193:193:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    391:394:int getTotalTopPinnedHeaderHeight() -> getTotalTopPinnedHeaderHeight
    480:484:void invalidateIfAnimating() -> invalidateIfAnimating
    418:436:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    210:237:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    131:133:void onLayout(boolean,int,int,int,int) -> onLayout
    243:244:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    161:186:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    198:200:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    449:455:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    39:39:void setAdapter(android.widget.Adapter) -> setAdapter
    138:139:void setAdapter(android.widget.ListAdapter) -> setAdapter
    310:332:void setFadingHeader(int,int,boolean) -> setFadingHeader
    344:355:void setHeaderInvisible(int,boolean) -> setHeaderInvisible
    279:299:void setHeaderPinnedAtBottom(int,int,boolean) -> setHeaderPinnedAtBottom
    261:268:void setHeaderPinnedAtTop(int,int,boolean) -> setHeaderPinnedAtTop
    150:151:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    144:145:void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    459:474:boolean smoothScrollToPartition(int) -> smoothScrollToPartition
com.android.contacts.list.PinnedHeaderListView$PinnedHeader -> com.android.contacts.list.PinnedHeaderListView$PinnedHeader:
    83:83:void <init>() -> <init>
    83:83:void <init>(com.android.contacts.list.PinnedHeaderListView$1) -> <init>
com.android.contacts.list.PostalAddressListAdapter -> com.android.contacts.list.PostalAddressListAdapter:
    71:73:void <init>(android.content.Context) -> <init>
    157:157:void bindName(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindName
    162:172:void bindPhoto(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindPhoto
    135:143:void bindPostalAddress(com.android.contacts.list.ContactListItemView,android.database.Cursor) -> bindPostalAddress
    147:152:void bindSectionHeaderAndDivider(com.android.contacts.list.ContactListItemView,int) -> bindSectionHeaderAndDivider
    124:130:void bindView(android.view.View,int,android.database.Cursor,int) -> bindView
    78:94:void configureLoader(android.content.CursorLoader,long) -> configureLoader
    108:109:android.net.Uri getDataUri(int) -> getDataUri
    36:36:android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
    115:118:com.android.contacts.list.ContactListItemView newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup) -> newView
com.android.contacts.list.PostalAddressListAdapter$PostalQuery -> com.android.contacts.list.PostalAddressListAdapter$PostalQuery:
    39:49:void <clinit>() -> <clinit>
    38:38:java.lang.String[] access$000() -> access$000
    38:38:java.lang.String[] access$100() -> access$100
com.android.contacts.list.PostalAddressPickerFragment -> com.android.contacts.list.PostalAddressPickerFragment:
    32:36:void <init>() -> <init>
    60:69:com.android.contacts.list.ContactEntryListAdapter createListAdapter() -> createListAdapter
    76:76:android.view.View inflateView(android.view.LayoutInflater,android.view.ViewGroup) -> inflateView
    81:83:void onCreateView(android.view.LayoutInflater,android.view.ViewGroup) -> onCreateView
    46:54:void onItemClick(int,long) -> onItemClick
    87:87:void pickPostalAddress(android.net.Uri) -> pickPostalAddress
    41:41:void setOnPostalAddressPickerActionListener(com.android.contacts.list.OnPostalAddressPickerActionListener) -> setOnPostalAddressPickerActionListener
com.android.contacts.list.ProviderStatusWatcher -> com.android.contacts.list.ProviderStatusWatcher:
    52:52:void <clinit>() -> <clinit>
    64:97:void <init>(android.content.Context) -> <init>
    41:41:void access$000(com.android.contacts.list.ProviderStatusWatcher) -> access$000
    41:41:java.lang.String[] access$200() -> access$200
    41:41:android.content.Context access$300(com.android.contacts.list.ProviderStatusWatcher) -> access$300
    41:41:java.lang.Integer access$402(com.android.contacts.list.ProviderStatusWatcher,java.lang.Integer) -> access$402
    41:41:java.lang.Object access$500(com.android.contacts.list.ProviderStatusWatcher) -> access$500
    41:41:void access$600(com.android.contacts.list.ProviderStatusWatcher) -> access$600
    41:41:com.android.contacts.list.ProviderStatusWatcher$LoaderTask access$702(com.android.contacts.list.ProviderStatusWatcher,com.android.contacts.list.ProviderStatusWatcher$LoaderTask) -> access$702
    102:102:void addListener(com.android.contacts.list.ProviderStatusWatcher$ProviderStatusListener) -> addListener
    89:92:com.android.contacts.list.ProviderStatusWatcher getInstance(android.content.Context) -> getInstance
    178:184:int getProviderStatus() -> getProviderStatus
    122:122:boolean isStarted() -> isStarted
    114:116:void notifyListeners() -> notifyListeners
    270:276:void onChange(boolean,android.net.Uri) -> onChange
    107:107:void removeListener(com.android.contacts.list.ProviderStatusWatcher$ProviderStatusListener) -> removeListener
    130:133:void start() -> start
    203:212:void startLoading() -> startLoading
    145:153:void stop() -> stop
    188:198:void waitForLoaded() -> waitForLoaded
com.android.contacts.list.ProviderStatusWatcher$1 -> com.android.contacts.list.ProviderStatusWatcher$1:
    78:78:void <init>(com.android.contacts.list.ProviderStatusWatcher) -> <init>
    81:81:void run() -> run
com.android.contacts.list.ProviderStatusWatcher$LoaderTask -> com.android.contacts.list.ProviderStatusWatcher$LoaderTask:
    215:215:void <init>(com.android.contacts.list.ProviderStatusWatcher) -> <init>
    215:215:void <init>(com.android.contacts.list.ProviderStatusWatcher,com.android.contacts.list.ProviderStatusWatcher$1) -> <init>
    259:259:void cleanUp() -> cleanUp
    215:215:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    219:242:java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    215:215:void onCancelled(java.lang.Object) -> onCancelled
    247:247:void onCancelled(java.lang.Boolean) -> onCancelled
    215:215:void onPostExecute(java.lang.Object) -> onPostExecute
    252:254:void onPostExecute(java.lang.Boolean) -> onPostExecute
com.android.contacts.location.CountryDetector -> com.android.contacts.location.CountryDetector:
    48:48:void <init>(android.content.Context) -> <init>
    35:56:void <init>(android.content.Context,android.telephony.TelephonyManager,com.android.contacts.location.CountryDetector$LocaleProvider) -> <init>
    82:94:java.lang.String getCurrentCountryIso() -> getCurrentCountryIso
    74:77:com.android.contacts.location.CountryDetector getInstance(android.content.Context) -> getInstance
    64:64:com.android.contacts.location.CountryDetector getInstanceForTest(android.content.Context,android.telephony.TelephonyManager,com.android.contacts.location.CountryDetector$LocaleProvider) -> getInstanceForTest
    115:117:java.lang.String getLocaleBasedCountryIso() -> getLocaleBasedCountryIso
    101:101:java.lang.String getNetworkBasedCountryIso() -> getNetworkBasedCountryIso
    108:108:java.lang.String getSimBasedCountryIso() -> getSimBasedCountryIso
    124:124:boolean isNetworkCountryCodeAvailable() -> isNetworkCountryCodeAvailable
com.android.contacts.location.CountryDetector$LocaleProvider -> com.android.contacts.location.CountryDetector$LocaleProvider:
    41:41:void <init>() -> <init>
    43:43:java.util.Locale getDefaultLocale() -> getDefaultLocale
com.android.contacts.logging.ListEvent -> com.android.contacts.logging.ListEvent:
    35:81:void <init>() -> <init>
    86:92:java.lang.String toString() -> toString
com.android.contacts.logging.Logger -> com.android.contacts.logging.Logger:
    30:30:com.android.contacts.logging.Logger getInstance() -> getInstance
    100:100:void logEditorEvent(int,int) -> logEditorEvent
    69:76:void logListEvent(int,int,int,int,int) -> logListEvent
    87:87:void logQuickContactEvent(java.lang.String,int,int,int,java.lang.String) -> logQuickContactEvent
    40:40:void logScreenView(android.app.Activity,int) -> logScreenView
    47:47:void logScreenView(android.app.Activity,int,int) -> logScreenView
    57:57:void logSearchEvent(com.android.contacts.logging.SearchState) -> logSearchEvent
com.android.contacts.logging.SearchState -> com.android.contacts.logging.SearchState:
    52:52:void <clinit>() -> <clinit>
    38:64:void <init>() -> <init>
    38:68:void <init>(android.os.Parcel) -> <init>
    101:107:void readFromParcel(android.os.Parcel) -> readFromParcel
    73:81:java.lang.String toString() -> toString
    91:97:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.logging.SearchState$1 -> com.android.contacts.logging.SearchState$1:
    52:52:void <init>() -> <init>
    52:52:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    55:55:com.android.contacts.logging.SearchState createFromParcel(android.os.Parcel) -> createFromParcel
    52:52:java.lang.Object[] newArray(int) -> newArray
    60:60:com.android.contacts.logging.SearchState[] newArray(int) -> newArray
com.android.contacts.model.AccountTypeManager -> com.android.contacts.model.AccountTypeManager:
    78:145:void <clinit>() -> <clinit>
    75:75:void <init>() -> <init>
    197:198:java.util.List blockForWritableAccounts() -> blockForWritableAccounts
    338:338:com.google.common.base.Predicate drawerDisplayableFilter() -> drawerDisplayableFilter
    307:308:boolean exists(com.android.contacts.model.account.AccountWithDataSet) -> exists
    283:283:com.android.contacts.model.account.AccountType getAccountType(java.lang.String,java.lang.String) -> getAccountType
    288:290:com.android.contacts.model.account.AccountType getAccountTypeForAccount(com.android.contacts.model.account.AccountWithDataSet) -> getAccountTypeForAccount
    184:185:java.util.List getAccounts(boolean) -> getAccounts
    255:277:android.accounts.Account getDefaultGoogleAccount(android.accounts.AccountManager,android.content.SharedPreferences,java.lang.String) -> getDefaultGoogleAccount
    118:129:com.android.contacts.model.AccountTypeManager getInstance(android.content.Context) -> getInstance
    299:299:com.android.contacts.model.dataitem.DataKind getKindOrFallback(com.android.contacts.model.account.AccountType,java.lang.String) -> getKindOrFallback
    228:228:java.util.List getWritableGoogleAccounts() -> getWritableGoogleAccounts
    342:342:com.google.common.base.Predicate groupWritableFilter() -> groupWritableFilter
    322:322:boolean hasGoogleAccount() -> hasGoogleAccount
    242:249:boolean hasNonLocalAccount() -> hasNonLocalAccount
    326:328:boolean hasRequiredPermissions(android.content.Context) -> hasRequiredPermissions
    318:318:boolean isWritable(com.android.contacts.model.account.AccountWithDataSet) -> isWritable
    140:142:void setInstanceForTest(com.android.contacts.model.AccountTypeManager) -> setInstanceForTest
    334:334:com.google.common.base.Predicate writableFilter() -> writableFilter
com.android.contacts.model.AccountTypeManager$1 -> com.android.contacts.model.AccountTypeManager$1:
    145:145:void <init>() -> <init>
    155:155:com.google.common.util.concurrent.ListenableFuture filterAccountsAsync(com.google.common.base.Predicate) -> filterAccountsAsync
    149:149:com.google.common.util.concurrent.ListenableFuture getAccountsAsync() -> getAccountsAsync
com.android.contacts.model.AccountTypeManager$2 -> com.android.contacts.model.AccountTypeManager$2:
    228:228:void <init>(com.android.contacts.model.AccountTypeManager) -> <init>
    228:228:boolean apply(java.lang.Object) -> apply
    231:232:boolean apply(com.android.contacts.model.account.AccountInfo) -> apply
com.android.contacts.model.AccountTypeManager$AccountFilter -> com.android.contacts.model.AccountTypeManager$AccountFilter:
    85:105:void <clinit>() -> <clinit>
    85:85:void <init>(java.lang.String,int) -> <init>
    85:85:void <init>(java.lang.String,int,com.android.contacts.model.AccountTypeManager$1) -> <init>
    85:85:com.android.contacts.model.AccountTypeManager$AccountFilter valueOf(java.lang.String) -> valueOf
    85:85:com.android.contacts.model.AccountTypeManager$AccountFilter[] values() -> values
com.android.contacts.model.AccountTypeManager$AccountFilter$1 -> com.android.contacts.model.AccountTypeManager$AccountFilter$1:
    86:86:void <init>(java.lang.String,int) -> <init>
    86:86:boolean apply(java.lang.Object) -> apply
com.android.contacts.model.AccountTypeManager$AccountFilter$2 -> com.android.contacts.model.AccountTypeManager$AccountFilter$2:
    92:92:void <init>(java.lang.String,int) -> <init>
    92:92:boolean apply(java.lang.Object) -> apply
    95:95:boolean apply(com.android.contacts.model.account.AccountInfo) -> apply
com.android.contacts.model.AccountTypeManager$AccountFilter$3 -> com.android.contacts.model.AccountTypeManager$AccountFilter$3:
    98:98:void <init>(java.lang.String,int) -> <init>
    98:98:boolean apply(java.lang.Object) -> apply
    101:102:boolean apply(com.android.contacts.model.account.AccountInfo) -> apply
com.android.contacts.model.AccountTypeManager$AccountFilter$4 -> com.android.contacts.model.AccountTypeManager$AccountFilter$4:
    105:105:void <init>(java.lang.String,int) -> <init>
    105:105:boolean apply(java.lang.Object) -> apply
    108:108:boolean apply(com.android.contacts.model.account.AccountInfo) -> apply
com.android.contacts.model.AccountTypeManagerImpl -> com.android.contacts.model.AccountTypeManagerImpl:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    362:435:void <init>(android.content.Context) -> <init>
    346:346:android.accounts.AccountManager access$000(com.android.contacts.model.AccountTypeManagerImpl) -> access$000
    346:346:java.util.List access$100(com.android.contacts.model.AccountTypeManagerImpl,android.accounts.Account[],com.android.contacts.model.account.AccountTypeProvider) -> access$100
    346:346:void access$200(com.android.contacts.model.AccountTypeManagerImpl) -> access$200
    346:346:void access$300(com.android.contacts.model.AccountTypeManagerImpl) -> access$300
    346:346:com.android.contacts.model.account.AccountTypeProvider access$400(com.android.contacts.model.AccountTypeManagerImpl) -> access$400
    346:346:void access$500(com.android.contacts.model.AccountTypeManagerImpl,java.util.List,java.util.List) -> access$500
    346:346:com.android.contacts.model.DeviceLocalAccountLocator access$600(com.android.contacts.model.AccountTypeManagerImpl) -> access$600
    346:346:android.content.Context access$700(com.android.contacts.model.AccountTypeManagerImpl) -> access$700
    741:744:boolean exists(com.android.contacts.model.account.AccountWithDataSet) -> exists
    609:609:com.google.common.util.concurrent.ListenableFuture filterAccountsAsync(com.google.common.base.Predicate) -> filterAccountsAsync
    623:627:com.android.contacts.model.account.AccountInfo getAccountInfoForAccount(com.android.contacts.model.account.AccountWithDataSet) -> getAccountInfoForAccount
    755:757:com.android.contacts.model.account.AccountType getAccountType(com.android.contacts.model.account.AccountTypeWithDataSet) -> getAccountType
    560:560:com.google.common.util.concurrent.ListenableFuture getAccountsAsync() -> getAccountsAsync
    632:637:java.util.List getAccountsWithDataSets(android.accounts.Account[],com.android.contacts.model.account.AccountTypeProvider) -> getAccountsWithDataSets
    564:603:com.google.common.util.concurrent.ListenableFuture getAllAccountsAsyncInternal() -> getAllAccountsAsyncInternal
    657:661:android.accounts.Account getDefaultGoogleAccount() -> getDefaultGoogleAccount
    713:723:com.android.contacts.model.dataitem.DataKind getKindOrFallback(com.android.contacts.model.account.AccountType,java.lang.String) -> getKindOrFallback
    666:675:java.util.List getWritableGoogleAccounts() -> getWritableGoogleAccounts
    690:695:boolean hasNonLocalAccount() -> hasNonLocalAccount
    479:489:void loadAccountTypes() -> loadAccountTypes
    522:528:void loadLocalAccounts() -> loadLocalAccounts
    537:550:void loadSimAccounts() -> loadSimAccounts
    452:457:void maybeNotifyAccountsUpdated(java.util.List,java.util.List) -> maybeNotifyAccountsUpdated
    493:493:com.google.common.util.concurrent.FutureCallback newAccountsUpdatedCallback(java.util.List) -> newAccountsUpdatedCallback
    461:462:void notifyAccountsChanged() -> notifyAccountsChanged
    445:447:void onAccountsUpdated(android.accounts.Account[]) -> onAccountsUpdated
    440:440:void onStatusChanged(int) -> onStatusChanged
    644:646:void populateAccountsDataSet(com.android.contacts.model.account.AccountTypeProvider,android.accounts.Account,java.util.List) -> populateAccountsDataSet
    513:519:void reloadAccountTypes() -> reloadAccountTypes
    506:510:void reloadAccountTypesIfNeeded() -> reloadAccountTypesIfNeeded
    531:534:void reloadLocalAccounts() -> reloadLocalAccounts
    553:556:void reloadSimAccounts() -> reloadSimAccounts
    467:476:void startLoadingIfNeeded() -> startLoadingIfNeeded
com.android.contacts.model.AccountTypeManagerImpl$1 -> com.android.contacts.model.AccountTypeManagerImpl$1:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    369:369:void <init>(com.android.contacts.model.AccountTypeManagerImpl) -> <init>
    369:369:java.lang.Object apply(java.lang.Object) -> apply
    373:373:java.util.List apply(com.android.contacts.model.account.AccountTypeProvider) -> apply
com.android.contacts.model.AccountTypeManagerImpl$2 -> com.android.contacts.model.AccountTypeManagerImpl$2:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    378:378:void <init>(com.android.contacts.model.AccountTypeManagerImpl) -> <init>
    383:383:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.model.AccountTypeManagerImpl$3 -> com.android.contacts.model.AccountTypeManagerImpl$3:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    387:387:void <init>(com.android.contacts.model.AccountTypeManagerImpl) -> <init>
    390:392:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.model.AccountTypeManagerImpl$4 -> com.android.contacts.model.AccountTypeManagerImpl$4:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    481:481:void <init>(com.android.contacts.model.AccountTypeManagerImpl) -> <init>
    481:481:java.lang.Object call() -> call
    485:486:com.android.contacts.model.account.AccountTypeProvider call() -> call
com.android.contacts.model.AccountTypeManagerImpl$5 -> com.android.contacts.model.AccountTypeManagerImpl$5:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    493:493:void <init>(com.android.contacts.model.AccountTypeManagerImpl,java.util.List) -> <init>
    493:493:void onSuccess(java.lang.Object) -> onSuccess
    496:496:void onSuccess(java.util.List) -> onSuccess
com.android.contacts.model.AccountTypeManagerImpl$6 -> com.android.contacts.model.AccountTypeManagerImpl$6:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    522:522:void <init>(com.android.contacts.model.AccountTypeManagerImpl) -> <init>
    522:522:java.lang.Object call() -> call
    525:525:java.util.List call() -> call
com.android.contacts.model.AccountTypeManagerImpl$7 -> com.android.contacts.model.AccountTypeManagerImpl$7:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    537:537:void <init>(com.android.contacts.model.AccountTypeManagerImpl) -> <init>
    537:537:java.lang.Object call() -> call
    540:545:java.util.List call() -> call
com.android.contacts.model.AccountTypeManagerImpl$8 -> com.android.contacts.model.AccountTypeManagerImpl$8:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    575:575:void <init>(com.android.contacts.model.AccountTypeManagerImpl,com.android.contacts.model.account.AccountTypeProvider) -> <init>
    575:575:java.lang.Object apply(java.lang.Object) -> apply
    582:600:java.util.List apply(java.util.List) -> apply
com.android.contacts.model.AccountTypeManagerImpl$9 -> com.android.contacts.model.AccountTypeManagerImpl$9:
# {"id":"sourceFile","fileName":"AccountTypeManager.java"}
    610:610:void <init>(com.android.contacts.model.AccountTypeManagerImpl,com.google.common.base.Predicate) -> <init>
    610:610:java.lang.Object apply(java.lang.Object) -> apply
    613:613:java.util.List apply(java.util.List) -> apply
com.android.contacts.model.BuilderWrapper -> com.android.contacts.model.BuilderWrapper:
    32:34:void <init>(android.content.ContentProviderOperation$Builder,int) -> <init>
    46:46:android.content.ContentProviderOperation$Builder getBuilder() -> getBuilder
    38:38:int getType() -> getType
    50:50:void setBuilder(android.content.ContentProviderOperation$Builder) -> setBuilder
    42:42:void setType(int) -> setType
com.android.contacts.model.CPOWrapper -> com.android.contacts.model.CPOWrapper:
    29:31:void <init>(android.content.ContentProviderOperation,int) -> <init>
    43:43:android.content.ContentProviderOperation getOperation() -> getOperation
    35:35:int getType() -> getType
    47:47:void setOperation(android.content.ContentProviderOperation) -> setOperation
    39:39:void setType(int) -> setType
com.android.contacts.model.Contact -> com.android.contacts.model.Contact:
    102:127:void <init>(android.net.Uri,com.android.contacts.model.Contact$Status,java.lang.Exception) -> <init>
    145:167:void <init>(android.net.Uri,android.net.Uri,android.net.Uri,long,java.lang.String,long,long,int,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer,boolean,java.lang.String,boolean) -> <init>
    170:203:void <init>(android.net.Uri,com.android.contacts.model.Contact) -> <init>
    470:474:boolean areAllRawContactsSimAccounts(android.content.Context) -> areAllRawContactsSimAccounts
    260:260:com.android.contacts.model.RawContactDeltaList createRawContactDeltaList() -> createRawContactDeltaList
    131:131:com.android.contacts.model.Contact forError(android.net.Uri,java.lang.Exception) -> forError
    135:135:com.android.contacts.model.Contact forNotFound(android.net.Uri) -> forNotFound
    333:333:java.lang.String getAltDisplayName() -> getAltDisplayName
    421:435:java.util.ArrayList getContentValues() -> getContentValues
    455:455:java.lang.String getCustomRingtone() -> getCustomRingtone
    409:409:java.lang.String getDirectoryAccountName() -> getDirectoryAccountName
    405:405:java.lang.String getDirectoryAccountType() -> getDirectoryAccountType
    397:397:java.lang.String getDirectoryDisplayName() -> getDirectoryDisplayName
    393:393:int getDirectoryExportSupport() -> getDirectoryExportSupport
    357:357:long getDirectoryId() -> getDirectoryId
    401:401:java.lang.String getDirectoryType() -> getDirectoryType
    329:329:java.lang.String getDisplayName() -> getDisplayName
    309:309:int getDisplayNameSource() -> getDisplayNameSource
    283:283:java.lang.Exception getException() -> getException
    379:385:long getFirstWritableRawContactId(android.content.Context) -> getFirstWritableRawContactId
    447:447:com.google.common.collect.ImmutableList getGroupMetaData() -> getGroupMetaData
    268:268:long getId() -> getId
    236:236:java.lang.String getLookupKey() -> getLookupKey
    232:232:android.net.Uri getLookupUri() -> getLookupUri
    305:305:long getNameRawContactId() -> getNameRawContactId
    337:337:java.lang.String getPhoneticName() -> getPhoneticName
    413:413:byte[] getPhotoBinaryData() -> getPhotoBinaryData
    321:321:long getPhotoId() -> getPhotoId
    325:325:java.lang.String getPhotoUri() -> getPhotoUri
    345:345:java.lang.Integer getPresence() -> getPresence
    349:349:com.google.common.collect.ImmutableList getRawContacts() -> getRawContacts
    253:253:android.net.Uri getRequestedUri() -> getRequestedUri
    341:341:boolean getStarred() -> getStarred
    353:353:com.google.common.collect.ImmutableMap getStatuses() -> getStatuses
    417:417:byte[] getThumbnailPhotoBinaryData() -> getThumbnailPhotoBinaryData
    246:246:android.net.Uri getUri() -> getUri
    361:361:boolean isDirectoryEntry() -> isDirectoryEntry
    317:317:boolean isDisplayNameFromOrganization() -> isDisplayNameFromOrganization
    279:279:boolean isError() -> isError
    301:301:boolean isLoaded() -> isLoaded
    463:463:boolean isMultipleRawContacts() -> isMultipleRawContacts
    293:293:boolean isNotFound() -> isNotFound
    451:451:boolean isSendToVoicemail() -> isSendToVoicemail
    459:459:boolean isUserProfile() -> isUserProfile
    370:370:boolean isWritableContact(android.content.Context) -> isWritableContact
    211:215:void setDirectoryMetaData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> setDirectoryMetaData
    494:494:void setGroupMetaData(com.google.common.collect.ImmutableList) -> setGroupMetaData
    219:219:void setPhotoBinaryData(byte[]) -> setPhotoBinaryData
    486:486:void setRawContacts(com.google.common.collect.ImmutableList) -> setRawContacts
    490:490:void setStatuses(com.google.common.collect.ImmutableMap) -> setStatuses
    223:223:void setThumbnailPhotoBinaryData(byte[]) -> setThumbnailPhotoBinaryData
    481:481:java.lang.String toString() -> toString
com.android.contacts.model.Contact$Status -> com.android.contacts.model.Contact$Status:
    51:57:void <clinit>() -> <clinit>
    51:51:void <init>(java.lang.String,int) -> <init>
    51:51:com.android.contacts.model.Contact$Status valueOf(java.lang.String) -> valueOf
    51:51:com.android.contacts.model.Contact$Status[] values() -> values
com.android.contacts.model.ContactLoader -> com.android.contacts.model.ContactLoader:
    77:82:void <clinit>() -> <clinit>
    94:94:void <init>(android.content.Context,android.net.Uri,boolean) -> <init>
    99:99:void <init>(android.content.Context,android.net.Uri,boolean,boolean) -> <init>
    91:109:void <init>(android.content.Context,android.net.Uri,boolean,boolean,boolean) -> <init>
    951:954:void cacheResult() -> cacheResult
    823:834:void computeFormattedPhoneNumbers(com.android.contacts.model.Contact) -> computeFormattedPhoneNumbers
    683:697:void cursorColumnToContentValues(android.database.Cursor,android.content.ContentValues,int) -> cursorColumnToContentValues
    75:75:void deliverResult(java.lang.Object) -> deliverResult
    842:869:void deliverResult(com.android.contacts.model.Contact) -> deliverResult
    919:919:android.net.Uri getLookupUri() -> getLookupUri
    451:504:com.android.contacts.model.Contact loadContactEntity(android.content.ContentResolver,android.net.Uri) -> loadContactEntity
    581:610:com.android.contacts.model.Contact loadContactHeaderData(android.database.Cursor,android.net.Uri) -> loadContactHeaderData
    645:675:android.content.ContentValues loadDataValues(android.database.Cursor) -> loadDataValues
    702:735:void loadDirectoryMetaData(com.android.contacts.model.Contact) -> loadDirectoryMetaData
    358:427:com.android.contacts.model.Contact loadEncodedContactEntity(android.net.Uri,android.net.Uri) -> loadEncodedContactEntity
    771:814:void loadGroupMetaData(com.android.contacts.model.Contact) -> loadGroupMetaData
    75:75:java.lang.Object loadInBackground() -> loadInBackground
    297:338:com.android.contacts.model.Contact loadInBackground() -> loadInBackground
    512:551:void loadPhotoBinaryData(com.android.contacts.model.Contact) -> loadPhotoBinaryData
    620:636:android.content.ContentValues loadRawContactValues(android.database.Cursor) -> loadRawContactValues
    555:569:void loadThumbnailBinaryData(com.android.contacts.model.Contact) -> loadThumbnailBinaryData
    940:943:void onReset() -> onReset
    924:929:void onStartLoading() -> onStartLoading
    935:935:void onStopLoading() -> onStopLoading
    351:351:com.android.contacts.model.Contact parseEncodedContactEntity(android.net.Uri) -> parseEncodedContactEntity
    877:905:void postViewNotificationToSyncAdapter() -> postViewNotificationToSyncAdapter
    433:447:void processOneRecord(com.android.contacts.model.RawContact,org.json.JSONObject,java.lang.String) -> processOneRecord
    290:291:void setNewLookup(android.net.Uri) -> setNewLookup
    912:914:void unregisterObserver() -> unregisterObserver
com.android.contacts.model.ContactLoader$AccountKey -> com.android.contacts.model.ContactLoader$AccountKey:
    743:746:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    756:762:boolean equals(java.lang.Object) -> equals
    751:751:int hashCode() -> hashCode
com.android.contacts.model.ContactLoader$ContactQuery -> com.android.contacts.model.ContactLoader$ContactQuery:
    117:194:void <clinit>() -> <clinit>
com.android.contacts.model.ContactLoader$DirectoryQuery -> com.android.contacts.model.ContactLoader$DirectoryQuery:
    272:272:void <clinit>() -> <clinit>
com.android.contacts.model.DeviceLocalAccountLocator -> com.android.contacts.model.DeviceLocalAccountLocator:
    36:38:void <init>(android.content.Context) -> <init>
    45:48:java.util.List getDeviceLocalAccounts() -> getDeviceLocalAccounts
com.android.contacts.model.RawContact -> com.android.contacts.model.RawContact:
    171:171:void <clinit>() -> <clinit>
    50:50:void <init>(android.os.Parcel,com.android.contacts.model.RawContact$1) -> <init>
    138:138:void <init>() -> <init>
    141:143:void <init>(android.content.ContentValues) -> <init>
    151:154:void <init>(android.os.Parcel) -> <init>
    315:315:void addDataItemValues(android.content.ContentValues) -> addDataItemValues
    319:320:com.android.contacts.model.RawContact$NamedDataItem addNamedDataItemValues(android.net.Uri,android.content.ContentValues) -> addNamedDataItemValues
    124:129:com.android.contacts.model.RawContact createFrom(android.content.Entity) -> createFrom
    362:366:boolean equals(java.lang.Object) -> equals
    207:207:java.lang.String getAccountName() -> getAccountName
    261:261:com.android.contacts.model.account.AccountType getAccountType(android.content.Context) -> getAccountType
    186:189:com.android.contacts.model.AccountTypeManager getAccountTypeManager(android.content.Context) -> getAccountTypeManager
    214:214:java.lang.String getAccountTypeString() -> getAccountTypeString
    253:253:long getContactId() -> getContactId
    325:328:java.util.ArrayList getContentValues() -> getContentValues
    335:338:java.util.List getDataItems() -> getDataItems
    221:221:java.lang.String getDataSet() -> getDataSet
    200:200:java.lang.Long getId() -> getId
    229:229:java.lang.String getSourceId() -> getSourceId
    233:233:java.lang.String getSync1() -> getSync1
    237:237:java.lang.String getSync2() -> getSync2
    241:241:java.lang.String getSync3() -> getSync3
    245:245:java.lang.String getSync4() -> getSync4
    193:193:android.content.ContentValues getValues() -> getValues
    356:356:int hashCode() -> hashCode
    249:249:boolean isDeleted() -> isDeleted
    225:225:boolean isDirty() -> isDirty
    257:257:boolean isStarred() -> isStarred
    272:294:void setAccount(java.lang.String,java.lang.String,java.lang.String) -> setAccount
    300:303:void setAccount(com.android.contacts.model.account.AccountWithDataSet) -> setAccount
    308:308:void setAccountToLocal() -> setAccountToLocal
    345:351:java.lang.String toString() -> toString
    164:165:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.model.RawContact$1 -> com.android.contacts.model.RawContact$1:
    172:172:void <init>() -> <init>
    172:172:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    176:176:com.android.contacts.model.RawContact createFromParcel(android.os.Parcel) -> createFromParcel
    172:172:java.lang.Object[] newArray(int) -> newArray
    181:181:com.android.contacts.model.RawContact[] newArray(int) -> newArray
com.android.contacts.model.RawContact$NamedDataItem -> com.android.contacts.model.RawContact$NamedDataItem:
    93:93:void <clinit>() -> <clinit>
    72:74:void <init>(android.net.Uri,android.content.ContentValues) -> <init>
    77:79:void <init>(android.os.Parcel) -> <init>
    115:119:boolean equals(java.lang.Object) -> equals
    109:109:int hashCode() -> hashCode
    89:90:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.model.RawContact$NamedDataItem$1 -> com.android.contacts.model.RawContact$NamedDataItem$1:
    94:94:void <init>() -> <init>
    94:94:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    98:98:com.android.contacts.model.RawContact$NamedDataItem createFromParcel(android.os.Parcel) -> createFromParcel
    94:94:java.lang.Object[] newArray(int) -> newArray
    103:103:com.android.contacts.model.RawContact$NamedDataItem[] newArray(int) -> newArray
com.android.contacts.model.RawContactDelta -> com.android.contacts.model.RawContactDelta:
    647:647:void <clinit>() -> <clinit>
    70:78:void <init>() -> <init>
    70:82:void <init>(com.android.contacts.model.ValuesDelta) -> <init>
    280:281:com.android.contacts.model.ValuesDelta addEntry(com.android.contacts.model.ValuesDelta) -> addEntry
    417:419:void buildAssert(java.util.ArrayList) -> buildAssert
    435:444:android.content.ContentProviderOperation$Builder buildAssertHelper() -> buildAssertHelper
    428:430:void buildAssertWrapper(java.util.ArrayList) -> buildAssertWrapper
    455:521:void buildDiff(java.util.ArrayList) -> buildDiff
    530:595:void buildDiffWrapper(java.util.ArrayList) -> buildDiffWrapper
    604:606:android.content.ContentProviderOperation$Builder buildSetAggregationMode(java.lang.Long,int) -> buildSetAggregationMode
    350:353:boolean containsEntry(com.android.contacts.model.ValuesDelta) -> containsEntry
    330:339:boolean equals(java.lang.Object) -> equals
    90:94:com.android.contacts.model.RawContactDelta fromBefore(com.android.contacts.model.RawContact) -> fromBefore
    222:222:java.lang.String getAccountName() -> getAccountName
    226:226:java.lang.String getAccountType() -> getAccountType
    234:234:com.android.contacts.model.account.AccountType getAccountType(com.android.contacts.model.AccountTypeManager) -> getAccountType
    238:238:com.android.contacts.model.account.AccountWithDataSet getAccountWithDataSet() -> getAccountWithDataSet
    286:290:java.util.ArrayList getContentValues() -> getContentValues
    230:230:java.lang.String getDataSet() -> getDataSet
    307:309:com.android.contacts.model.ValuesDelta getEntry(java.lang.Long) -> getEntry
    322:323:int getEntryCount(boolean) -> getEntryCount
    250:253:java.util.ArrayList getMimeEntries(java.lang.String,boolean) -> getMimeEntries
    259:259:java.util.ArrayList getMimeEntries(java.lang.String) -> getMimeEntries
    263:269:int getMimeEntriesCount(java.lang.String,boolean) -> getMimeEntriesCount
    156:166:com.android.contacts.model.ValuesDelta getPrimaryEntry(java.lang.String) -> getPrimaryEntry
    211:214:com.android.contacts.model.account.AccountType getRawContactAccountType(android.content.Context) -> getRawContactAccountType
    218:218:java.lang.Long getRawContactId() -> getRawContactId
    174:174:com.android.contacts.model.ValuesDelta getSuperPrimaryEntry(java.lang.String) -> getSuperPrimaryEntry
    184:204:com.android.contacts.model.ValuesDelta getSuperPrimaryEntry(java.lang.String,boolean) -> getSuperPrimaryEntry
    144:144:com.android.contacts.model.ValuesDelta getValues() -> getValues
    276:276:boolean hasMimeEntries(java.lang.String) -> hasMimeEntries
    148:148:boolean isContactInsert() -> isContactInsert
    242:242:boolean isVisible() -> isVisible
    363:366:void markDeleted() -> markDeleted
    107:135:com.android.contacts.model.RawContactDelta mergeAfter(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta) -> mergeAfter
    397:397:void possibleAdd(java.util.ArrayList,android.content.ContentProviderOperation$Builder) -> possibleAdd
    406:407:void possibleAddWrapper(java.util.ArrayList,com.android.contacts.model.BuilderWrapper) -> possibleAddWrapper
    630:636:void readFromParcel(android.os.Parcel) -> readFromParcel
    644:644:void setProfileQueryUri() -> setProfileQueryUri
    373:387:java.lang.String toString() -> toString
    618:624:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.model.RawContactDelta$1 -> com.android.contacts.model.RawContactDelta$1:
    648:648:void <init>() -> <init>
    648:648:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    650:651:com.android.contacts.model.RawContactDelta createFromParcel(android.os.Parcel) -> createFromParcel
    648:648:java.lang.Object[] newArray(int) -> newArray
    656:656:com.android.contacts.model.RawContactDelta[] newArray(int) -> newArray
com.android.contacts.model.RawContactDeltaList -> com.android.contacts.model.RawContactDeltaList:
    47:435:void <clinit>() -> <clinit>
    53:53:void <init>() -> <init>
    85:92:void addAll(java.util.Iterator) -> addAll
    239:241:android.content.ContentProviderOperation$Builder beginKeepTogether() -> beginKeepTogether
    129:207:java.util.ArrayList buildDiffWrapper() -> buildDiffWrapper
    265:284:android.content.ContentProviderOperation$Builder buildSplitContactDiffHelper(int,int,int[]) -> buildSplitContactDiffHelper
    250:258:void buildSplitContactDiffWrapper(java.util.ArrayList,int[]) -> buildSplitContactDiffWrapper
    213:220:java.lang.String diffToString(java.util.ArrayList) -> diffToString
    227:231:java.lang.String diffToStringWrapper(java.util.ArrayList) -> diffToStringWrapper
    297:300:long findRawContactId() -> findRawContactId
    78:79:com.android.contacts.model.RawContactDeltaList fromIterator(java.util.Iterator) -> fromIterator
    63:69:com.android.contacts.model.RawContactDeltaList fromQuery(android.net.Uri,android.content.ContentResolver,java.lang.String,java.lang.String[],java.lang.String) -> fromQuery
    324:325:com.android.contacts.model.RawContactDelta getByRawContactId(java.lang.Long) -> getByRawContactId
    358:359:com.android.contacts.model.RawContactDelta getFirstWritableRawContact(android.content.Context) -> getFirstWritableRawContact
    310:314:java.lang.Long getRawContactId(int) -> getRawContactId
    365:372:com.android.contacts.model.ValuesDelta getSuperPrimaryEntry(java.lang.String) -> getSuperPrimaryEntry
    349:350:int indexOfFirstWritableRawContact(android.content.Context) -> indexOfFirstWritableRawContact
    333:336:int indexOfRawContactId(java.lang.Long) -> indexOfRawContactId
    402:402:boolean isMarkedForJoining() -> isMarkedForJoining
    394:394:boolean isMarkedForSplitting() -> isMarkedForSplitting
    390:390:void markRawContactsForSplitting() -> markRawContactsForSplitting
    103:115:com.android.contacts.model.RawContactDeltaList mergeAfter(com.android.contacts.model.RawContactDeltaList,com.android.contacts.model.RawContactDeltaList) -> mergeAfter
    426:432:void readFromParcel(android.os.Parcel) -> readFromParcel
    398:398:void setJoinWithRawContacts(long[]) -> setJoinWithRawContacts
    452:461:java.lang.String toString() -> toString
    415:421:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.model.RawContactDeltaList$1 -> com.android.contacts.model.RawContactDeltaList$1:
    436:436:void <init>() -> <init>
    436:436:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    439:440:com.android.contacts.model.RawContactDeltaList createFromParcel(android.os.Parcel) -> createFromParcel
    436:436:java.lang.Object[] newArray(int) -> newArray
    446:446:com.android.contacts.model.RawContactDeltaList[] newArray(int) -> newArray
com.android.contacts.model.RawContactModifier -> com.android.contacts.model.RawContactModifier:
    935:944:void <clinit>() -> <clinit>
    77:77:void <init>() -> <init>
    793:810:boolean adjustType(com.android.contacts.model.ValuesDelta,java.util.ArrayList,com.android.contacts.model.dataitem.DataKind) -> adjustType
    500:505:boolean areEqual(com.android.contacts.model.ValuesDelta,android.content.ContentValues,com.android.contacts.model.dataitem.DataKind) -> areEqual
    90:92:boolean canInsert(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind) -> canInsert
    1020:1024:java.util.ArrayList ensureEntryMaxSize(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,java.util.ArrayList) -> ensureEntryMaxSize
    113:124:com.android.contacts.model.ValuesDelta ensureKindExists(com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType,java.lang.String) -> ensureKindExists
    873:882:void fixupLegacyImType(android.os.Bundle) -> fixupLegacyImType
    289:319:com.android.contacts.model.account.AccountType$EditType getBestValidType(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,boolean,int) -> getBestValidType
    227:229:com.android.contacts.model.account.AccountType$EditType getCurrentType(com.android.contacts.model.ValuesDelta,com.android.contacts.model.dataitem.DataKind) -> getCurrentType
    237:240:com.android.contacts.model.account.AccountType$EditType getCurrentType(android.content.ContentValues,com.android.contacts.model.dataitem.DataKind) -> getCurrentType
    248:252:com.android.contacts.model.account.AccountType$EditType getCurrentType(android.database.Cursor,com.android.contacts.model.dataitem.DataKind) -> getCurrentType
    857:859:int getEntryCountByType(java.util.ArrayList,java.lang.String,int) -> getEntryCountByType
    259:260:com.android.contacts.model.account.AccountType$EditType getType(com.android.contacts.model.dataitem.DataKind,int) -> getType
    191:209:android.util.SparseIntArray getTypeFrequencies(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind) -> getTypeFrequencies
    272:274:int getTypePrecedence(com.android.contacts.model.dataitem.DataKind,int) -> getTypePrecedence
    150:175:java.util.ArrayList getValidTypes(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.account.AccountType$EditType,boolean,android.util.SparseIntArray,boolean) -> getValidTypes
    386:386:boolean hasChanges(com.android.contacts.model.RawContactDeltaList,com.android.contacts.model.AccountTypeManager) -> hasChanges
    391:400:boolean hasChanges(com.android.contacts.model.RawContactDeltaList,com.android.contacts.model.AccountTypeManager,java.util.Set) -> hasChanges
    454:464:boolean hasChanges(com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType,java.util.Set) -> hasChanges
    218:218:boolean hasEditTypes(com.android.contacts.model.dataitem.DataKind) -> hasEditTypes
    98:99:boolean hasValidTypes(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind) -> hasValidTypes
    334:339:com.android.contacts.model.ValuesDelta insertChild(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind) -> insertChild
    349:365:com.android.contacts.model.ValuesDelta insertChild(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.account.AccountType$EditType) -> insertChild
    477:487:boolean isEmpty(com.android.contacts.model.ValuesDelta,com.android.contacts.model.dataitem.DataKind) -> isEmpty
    825:844:boolean isTypeAllowed(int,java.util.ArrayList,com.android.contacts.model.dataitem.DataKind) -> isTypeAllowed
    1183:1229:void migrateEvent(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,java.lang.Integer) -> migrateEvent
    1256:1352:void migrateGenericWithTypeColumn(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind) -> migrateGenericWithTypeColumn
    1239:1248:void migrateGenericWithoutTypeColumn(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind) -> migrateGenericWithoutTypeColumn
    1072:1176:void migratePostal(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind) -> migratePostal
    966:1004:void migrateStateForNewContact(android.content.Context,com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType,com.android.contacts.model.account.AccountType) -> migrateStateForNewContact
    1036:1066:void migrateStructuredName(android.content.Context,com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind) -> migrateStructuredName
    519:587:void parseExtras(android.content.Context,com.android.contacts.model.account.AccountType,com.android.contacts.model.RawContactDelta,android.os.Bundle) -> parseExtras
    901:924:com.android.contacts.model.ValuesDelta parseExtras(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,android.os.Bundle,java.lang.String,java.lang.String,java.lang.String) -> parseExtras
    594:647:void parseStructuredNameExtra(android.content.Context,com.android.contacts.model.account.AccountType,com.android.contacts.model.RawContactDelta,android.os.Bundle) -> parseStructuredNameExtra
    654:672:void parseStructuredPostalExtra(com.android.contacts.model.account.AccountType,com.android.contacts.model.RawContactDelta,android.os.Bundle) -> parseStructuredPostalExtra
    680:779:void parseValues(com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType,java.util.ArrayList) -> parseValues
    376:381:void trimEmpty(com.android.contacts.model.RawContactDeltaList,com.android.contacts.model.AccountTypeManager) -> trimEmpty
    417:448:void trimEmpty(com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType) -> trimEmpty
com.android.contacts.model.SimCard -> com.android.contacts.model.SimCard:
    53:68:void <init>(com.android.contacts.model.SimCard) -> <init>
    53:79:void <init>(java.lang.String,int,java.lang.CharSequence,java.lang.CharSequence,java.lang.String,java.lang.String) -> <init>
    121:121:boolean areContactsAvailable() -> areContactsAvailable
    237:239:com.android.contacts.model.SimCard create(android.telephony.SubscriptionInfo) -> create
    243:249:com.android.contacts.model.SimCard create(android.telephony.TelephonyManager,java.lang.String) -> create
    201:208:boolean equals(java.lang.Object) -> equals
    142:145:int getContactCount() -> getContactCount
    168:168:java.util.List getContacts() -> getContacts
    114:114:java.lang.String getCountryCode() -> getCountryCode
    95:95:java.lang.CharSequence getDisplayName() -> getDisplayName
    103:106:java.lang.CharSequence getFormattedPhone() -> getFormattedPhone
    99:99:java.lang.String getPhone() -> getPhone
    83:83:java.lang.String getSimId() -> getSimId
    87:87:int getSubscriptionId() -> getSubscriptionId
    130:133:boolean hasContacts() -> hasContacts
    110:110:boolean hasPhone() -> hasPhone
    91:91:boolean hasValidSubscriptionId() -> hasValidSubscriptionId
    213:216:int hashCode() -> hashCode
    149:149:boolean isDismissed() -> isDismissed
    157:161:boolean isImportable() -> isImportable
    153:153:boolean isImported() -> isImported
    222:222:java.lang.String toString() -> toString
    187:188:com.android.contacts.model.SimCard withContacts(java.util.List) -> withContacts
    193:194:com.android.contacts.model.SimCard withContacts(com.android.contacts.model.SimContact[]) -> withContacts
    183:183:com.android.contacts.model.SimCard withDismissedState(boolean) -> withDismissedState
    172:174:com.android.contacts.model.SimCard withImportAndDismissStates(boolean,boolean) -> withImportAndDismissStates
    179:179:com.android.contacts.model.SimCard withImportedState(boolean) -> withImportedState
com.android.contacts.model.SimContact -> com.android.contacts.model.SimContact:
    195:195:void <clinit>() -> <clinit>
    52:52:void <init>(int,java.lang.String,java.lang.String) -> <init>
    55:59:void <init>(int,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    63:63:void <init>(com.android.contacts.model.SimContact) -> <init>
    45:45:java.lang.String access$000(com.android.contacts.model.SimContact) -> access$000
    45:45:java.lang.String access$100(com.android.contacts.model.SimContact) -> access$100
    45:45:int access$200(com.android.contacts.model.SimContact) -> access$200
    120:122:void appendAsContactRow(android.database.MatrixCursor) -> appendAsContactRow
    85:104:void appendCreateContactOperations(java.util.List,com.android.contacts.model.account.AccountWithDataSet) -> appendCreateContactOperations
    252:252:java.util.Comparator compareById() -> compareById
    240:240:java.util.Comparator compareByPhoneThenName() -> compareByPhoneThenName
    220:222:android.database.MatrixCursor convertToContactsCursor(java.util.Collection,java.lang.String[]) -> convertToContactsCursor
    112:116:android.content.ContentProviderOperation createInsertOp(int,java.lang.String,java.lang.String,java.lang.String) -> createInsertOp
    165:170:boolean equals(java.lang.Object) -> equals
    235:236:int findByPhoneAndName(java.util.List,java.lang.String,java.lang.String) -> findByPhoneAndName
    79:79:java.lang.String[] getEmails() -> getEmails
    143:146:java.lang.String getLookupKey() -> getLookupKey
    71:71:java.lang.String getName() -> getName
    75:75:java.lang.String getPhone() -> getPhone
    67:67:int getRecordNumber() -> getRecordNumber
    134:134:boolean hasEmails() -> hasEmails
    126:126:boolean hasName() -> hasName
    130:130:boolean hasPhone() -> hasPhone
    175:178:int hashCode() -> hashCode
    154:158:java.lang.String toString() -> toString
    189:192:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.model.SimContact$1 -> com.android.contacts.model.SimContact$1:
    195:195:void <init>() -> <init>
    195:195:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    198:202:com.android.contacts.model.SimContact createFromParcel(android.os.Parcel) -> createFromParcel
    195:195:java.lang.Object[] newArray(int) -> newArray
    207:207:com.android.contacts.model.SimContact[] newArray(int) -> newArray
com.android.contacts.model.SimContact$2 -> com.android.contacts.model.SimContact$2:
    240:240:void <init>() -> <init>
    240:240:int compare(java.lang.Object,java.lang.Object) -> compare
    243:246:int compare(com.android.contacts.model.SimContact,com.android.contacts.model.SimContact) -> compare
com.android.contacts.model.SimContact$3 -> com.android.contacts.model.SimContact$3:
    252:252:void <init>() -> <init>
    252:252:int compare(java.lang.Object,java.lang.Object) -> compare
    256:256:int compare(com.android.contacts.model.SimContact,com.android.contacts.model.SimContact) -> compare
com.android.contacts.model.ValuesDelta -> com.android.contacts.model.ValuesDelta:
    475:475:void <clinit>() -> <clinit>
    43:54:void <init>() -> <init>
    185:185:boolean beforeExists() -> beforeExists
    416:416:android.content.ContentProviderOperation$Builder buildDiff(android.net.Uri) -> buildDiff
    437:450:android.content.ContentProviderOperation$Builder buildDiffHelper(android.net.Uri) -> buildDiffHelper
    423:430:com.android.contacts.model.BuilderWrapper buildDiffWrapper(android.net.Uri) -> buildDiffWrapper
    91:92:boolean containsKey(java.lang.String) -> containsKey
    283:285:void copyStringFrom(com.android.contacts.model.ValuesDelta,java.lang.String) -> copyStringFrom
    548:561:void copyStructuredNameFieldsFrom(com.android.contacts.model.ValuesDelta) -> copyStructuredNameFieldsFrom
    252:253:void ensureUpdate() -> ensureUpdate
    355:358:boolean equals(java.lang.Object) -> equals
    73:78:com.android.contacts.model.ValuesDelta fromAfter(android.content.ContentValues) -> fromAfter
    62:64:com.android.contacts.model.ValuesDelta fromBefore(android.content.ContentValues) -> fromBefore
    83:83:android.content.ContentValues getAfter() -> getAfter
    106:109:byte[] getAsByteArray(java.lang.String) -> getAsByteArray
    126:126:java.lang.Integer getAsInteger(java.lang.String) -> getAsInteger
    130:133:java.lang.Integer getAsInteger(java.lang.String,java.lang.Integer) -> getAsInteger
    116:119:java.lang.Long getAsLong(java.lang.String) -> getAsLong
    96:99:java.lang.String getAsString(java.lang.String) -> getAsString
    87:87:android.content.ContentValues getBefore() -> getBefore
    315:324:android.content.ContentValues getCompleteValues() -> getCompleteValues
    536:536:java.lang.String getDisplayName() -> getDisplayName
    585:585:java.lang.String getEmailData() -> getEmailData
    597:597:java.lang.String getEmailLabel() -> getEmailLabel
    593:593:java.lang.Integer getEmailType() -> getEmailType
    492:492:java.lang.Long getGroupRowId() -> getGroupRowId
    159:159:java.lang.Long getId() -> getId
    155:155:java.lang.String getMimetype() -> getMimetype
    581:581:java.lang.String getPhoneLabel() -> getPhoneLabel
    569:569:java.lang.String getPhoneNormalizedNumber() -> getPhoneNormalizedNumber
    565:565:java.lang.String getPhoneNumber() -> getPhoneNumber
    577:577:java.lang.Integer getPhoneType() -> getPhoneType
    524:524:java.lang.String getPhoneticFamilyName() -> getPhoneticFamilyName
    532:532:java.lang.String getPhoneticGivenName() -> getPhoneticGivenName
    528:528:java.lang.String getPhoneticMiddleName() -> getPhoneticMiddleName
    500:500:byte[] getPhoto() -> getPhoto
    589:589:boolean hasEmailType() -> hasEmailType
    573:573:boolean hasPhoneType() -> hasPhoneType
    140:151:boolean isChanged(java.lang.String) -> isChanged
    199:199:boolean isDelete() -> isDelete
    176:176:boolean isFromTemplate() -> isFromTemplate
    241:241:boolean isInsert() -> isInsert
    234:234:boolean isNoop() -> isNoop
    167:168:boolean isPrimary() -> isPrimary
    180:181:boolean isSuperPrimary() -> isSuperPrimary
    206:206:boolean isTransient() -> isTransient
    213:223:boolean isUpdate() -> isUpdate
    192:192:boolean isVisible() -> isVisible
    293:303:java.util.Set keySet() -> keySet
    245:245:void markDeleted() -> markDeleted
    337:347:com.android.contacts.model.ValuesDelta mergeAfter(com.android.contacts.model.ValuesDelta,com.android.contacts.model.ValuesDelta) -> mergeAfter
    258:259:void put(java.lang.String,java.lang.String) -> put
    263:264:void put(java.lang.String,byte[]) -> put
    268:269:void put(java.lang.String,int) -> put
    273:274:void put(java.lang.String,long) -> put
    278:279:void putNull(java.lang.String) -> putNull
    469:472:void readFromParcel(android.os.Parcel) -> readFromParcel
    541:543:void setDisplayName(java.lang.String) -> setDisplayName
    172:172:void setFromTemplate(boolean) -> setFromTemplate
    488:488:void setGroupRowId(long) -> setGroupRowId
    163:163:void setIdColumn(java.lang.String) -> setIdColumn
    512:512:void setPhoneticFamilyName(java.lang.String) -> setPhoneticFamilyName
    520:520:void setPhoneticGivenName(java.lang.String) -> setPhoneticGivenName
    516:516:void setPhoneticMiddleName(java.lang.String) -> setPhoneticMiddleName
    496:496:void setPhoto(byte[]) -> setPhoto
    505:507:void setSuperPrimary(boolean) -> setSuperPrimary
    395:403:boolean subsetEquals(com.android.contacts.model.ValuesDelta) -> subsetEquals
    365:367:java.lang.String toString() -> toString
    375:387:void toString(java.lang.StringBuilder) -> toString
    463:465:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.model.ValuesDelta$1 -> com.android.contacts.model.ValuesDelta$1:
    475:475:void <init>() -> <init>
    475:475:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    477:478:com.android.contacts.model.ValuesDelta createFromParcel(android.os.Parcel) -> createFromParcel
    475:475:java.lang.Object[] newArray(int) -> newArray
    483:483:com.android.contacts.model.ValuesDelta[] newArray(int) -> newArray
com.android.contacts.model.account.AccountComparator -> com.android.contacts.model.account.AccountComparator:
    28:29:void <init>(com.android.contacts.model.account.AccountWithDataSet) -> <init>
    25:25:int compare(java.lang.Object,java.lang.Object) -> compare
    34:61:int compare(com.android.contacts.model.account.AccountWithDataSet,com.android.contacts.model.account.AccountWithDataSet) -> compare
    69:69:boolean isWritableGoogleAccount(com.android.contacts.model.account.AccountWithDataSet) -> isWritableGoogleAccount
com.android.contacts.model.account.AccountDisplayInfo -> com.android.contacts.model.account.AccountDisplayInfo:
    39:44:void <init>(com.android.contacts.model.account.AccountWithDataSet,java.lang.CharSequence,java.lang.CharSequence,android.graphics.drawable.Drawable,boolean) -> <init>
    93:94:com.android.contacts.model.account.AccountDisplayInfo formatted(android.content.Context,int,int) -> formatted
    60:60:android.graphics.drawable.Drawable getIcon() -> getIcon
    52:52:java.lang.CharSequence getNameLabel() -> getNameLabel
    48:48:com.android.contacts.model.account.AccountWithDataSet getSource() -> getSource
    56:56:java.lang.CharSequence getTypeLabel() -> getTypeLabel
    76:76:boolean hasDistinctName() -> hasDistinctName
    64:64:boolean hasGoogleAccountType() -> hasGoogleAccountType
    72:72:boolean isDeviceAccount() -> isDeviceAccount
    68:68:boolean isGoogleAccount() -> isGoogleAccount
    98:98:com.android.contacts.model.account.AccountDisplayInfo withFormattedName(android.content.Context,int) -> withFormattedName
    80:80:com.android.contacts.model.account.AccountDisplayInfo withName(java.lang.CharSequence) -> withName
    88:88:com.android.contacts.model.account.AccountDisplayInfo withNameAndType(java.lang.CharSequence,java.lang.CharSequence) -> withNameAndType
    84:84:com.android.contacts.model.account.AccountDisplayInfo withType(java.lang.CharSequence) -> withType
com.android.contacts.model.account.AccountDisplayInfoFactory -> com.android.contacts.model.account.AccountDisplayInfoFactory:
    47:48:void <init>(android.content.Context,java.util.List) -> <init>
    53:59:void <init>(android.content.Context,com.android.contacts.model.AccountTypeManager,com.android.contacts.util.DeviceLocalAccountTypeFactory,java.util.List) -> <init>
    103:104:int countOfType(int,java.util.List) -> countOfType
    85:89:com.android.contacts.model.account.AccountDisplayInfoFactory fromListFilters(android.content.Context,java.util.List) -> fromListFilters
    63:69:com.android.contacts.model.account.AccountDisplayInfo getAccountDisplayInfo(com.android.contacts.model.account.AccountWithDataSet) -> getAccountDisplayInfo
    74:74:com.android.contacts.model.account.AccountDisplayInfo getAccountDisplayInfoFor(com.android.contacts.list.ContactListFilter) -> getAccountDisplayInfoFor
    78:80:com.android.contacts.model.account.AccountDisplayInfo getAccountDisplayInfoFor(com.android.contacts.model.RawContactDelta) -> getAccountDisplayInfoFor
    93:94:boolean shouldUseTypeLabelForName(com.android.contacts.model.account.AccountWithDataSet) -> shouldUseTypeLabelForName
com.android.contacts.model.account.AccountInfo -> com.android.contacts.model.account.AccountInfo:
    149:149:void <clinit>() -> <clinit>
    37:39:void <init>(com.android.contacts.model.account.AccountDisplayInfo,com.android.contacts.model.account.AccountType) -> <init>
    98:98:boolean contains(java.util.List,com.android.contacts.model.account.AccountInfo) -> contains
    108:108:boolean contains(java.util.List,com.android.contacts.model.account.AccountWithDataSet) -> contains
    136:136:java.util.List extractAccounts(java.util.List) -> extractAccounts
    47:47:com.android.contacts.model.account.AccountWithDataSet getAccount() -> getAccount
    115:118:com.android.contacts.model.account.AccountInfo getAccount(java.util.List,com.android.contacts.model.account.AccountWithDataSet) -> getAccount
    68:68:android.graphics.drawable.Drawable getIcon() -> getIcon
    54:54:java.lang.CharSequence getNameLabel() -> getNameLabel
    43:43:com.android.contacts.model.account.AccountType getType() -> getType
    61:61:java.lang.CharSequence getTypeLabel() -> getTypeLabel
    72:72:boolean hasDistinctName() -> hasDistinctName
    80:80:boolean hasGoogleAccountType() -> hasGoogleAccountType
    76:76:boolean isDeviceAccount() -> isDeviceAccount
    84:84:boolean sameAccount(com.android.contacts.model.account.AccountInfo) -> sameAccount
    88:88:boolean sameAccount(com.android.contacts.model.account.AccountWithDataSet) -> sameAccount
    129:129:void sortAccounts(com.android.contacts.model.account.AccountWithDataSet,java.util.List) -> sortAccounts
    140:141:java.util.Comparator sourceComparator(com.android.contacts.model.account.AccountWithDataSet) -> sourceComparator
com.android.contacts.model.account.AccountInfo$1 -> com.android.contacts.model.account.AccountInfo$1:
    141:141:void <init>(com.android.contacts.model.account.AccountComparator) -> <init>
    141:141:int compare(java.lang.Object,java.lang.Object) -> compare
    144:144:int compare(com.android.contacts.model.account.AccountInfo,com.android.contacts.model.account.AccountInfo) -> compare
com.android.contacts.model.account.AccountInfo$2 -> com.android.contacts.model.account.AccountInfo$2:
    150:150:void <init>() -> <init>
    150:150:java.lang.Object apply(java.lang.Object) -> apply
    153:153:com.android.contacts.model.account.AccountWithDataSet apply(com.android.contacts.model.account.AccountInfo) -> apply
com.android.contacts.model.account.AccountType -> com.android.contacts.model.account.AccountType:
    300:300:void <clinit>() -> <clinit>
    54:99:void <init>() -> <init>
    335:345:com.android.contacts.model.dataitem.DataKind addKind(com.android.contacts.model.dataitem.DataKind) -> addKind
    220:220:com.android.contacts.model.account.AccountTypeWithDataSet getAccountTypeAndDataSet() -> getAccountTypeAndDataSet
    277:277:android.graphics.drawable.Drawable getDisplayIcon(android.content.Context) -> getDisplayIcon
    283:286:android.graphics.drawable.Drawable getDisplayIcon(android.content.Context,int,int,java.lang.String) -> getDisplayIcon
    184:184:java.lang.CharSequence getDisplayLabel(android.content.Context) -> getDisplayLabel
    230:230:java.util.List getExtensionPackageNames() -> getExtensionPackageNames
    239:239:java.lang.CharSequence getInviteContactActionLabel(android.content.Context) -> getInviteContactActionLabel
    322:322:com.android.contacts.model.dataitem.DataKind getKindForMimetype(java.lang.String) -> getKindForMimetype
    267:270:java.lang.CharSequence getResourceText(android.content.Context,java.lang.String,int,java.lang.String) -> getResourceText
    313:314:java.util.ArrayList getSortedDataKinds() -> getSortedDataKinds
    174:174:java.lang.String getViewContactNotifyServicePackageName() -> getViewContactNotifyServicePackageName
    248:252:java.lang.CharSequence getViewGroupLabel(android.content.Context) -> getViewGroupLabel
    326:328:void initializeFieldsFromAuthenticator(android.accounts.AuthenticatorDescription) -> initializeFieldsFromAuthenticator
    118:118:boolean isInitialized() -> isInitialized
    193:199:com.android.contacts.model.account.AccountInfo wrapAccount(android.content.Context,com.android.contacts.model.account.AccountWithDataSet) -> wrapAccount
com.android.contacts.model.account.AccountType$1 -> com.android.contacts.model.account.AccountType$1:
    300:300:void <init>() -> <init>
    300:300:int compare(java.lang.Object,java.lang.Object) -> compare
    303:303:int compare(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.dataitem.DataKind) -> compare
com.android.contacts.model.account.AccountType$DefinitionException -> com.android.contacts.model.account.AccountType$DefinitionException:
    105:105:void <init>(java.lang.String) -> <init>
    109:109:void <init>(java.lang.String,java.lang.Exception) -> <init>
com.android.contacts.model.account.AccountType$DisplayLabelComparator -> com.android.contacts.model.account.AccountType$DisplayLabelComparator:
    519:522:void <init>(android.content.Context) -> <init>
    516:516:int compare(java.lang.Object,java.lang.Object) -> compare
    532:532:int compare(com.android.contacts.model.account.AccountType,com.android.contacts.model.account.AccountType) -> compare
    526:527:java.lang.String getDisplayLabel(com.android.contacts.model.account.AccountType) -> getDisplayLabel
com.android.contacts.model.account.AccountType$EditField -> com.android.contacts.model.account.AccountType$EditField:
    449:451:void <init>(java.lang.String,int) -> <init>
    455:456:void <init>(java.lang.String,int,int) -> <init>
    485:485:boolean isMultiLine() -> isMultiLine
    470:470:com.android.contacts.model.account.AccountType$EditField setLongForm(boolean) -> setLongForm
    480:480:com.android.contacts.model.account.AccountType$EditField setMinLines(int) -> setMinLines
    460:460:com.android.contacts.model.account.AccountType$EditField setOptional(boolean) -> setOptional
    475:475:com.android.contacts.model.account.AccountType$EditField setPhoneticsColumn(java.lang.String) -> setPhoneticsColumn
    465:465:com.android.contacts.model.account.AccountType$EditField setShortForm(boolean) -> setShortForm
    491:491:java.lang.String toString() -> toString
com.android.contacts.model.account.AccountType$EditType -> com.android.contacts.model.account.AccountType$EditType:
    366:369:void <init>(int,int) -> <init>
    389:391:boolean equals(java.lang.Object) -> equals
    398:398:int hashCode() -> hashCode
    383:383:com.android.contacts.model.account.AccountType$EditType setCustomColumn(java.lang.String) -> setCustomColumn
    373:373:com.android.contacts.model.account.AccountType$EditType setSecondary(boolean) -> setSecondary
    378:378:com.android.contacts.model.account.AccountType$EditType setSpecificMax(int) -> setSpecificMax
    403:403:java.lang.String toString() -> toString
com.android.contacts.model.account.AccountType$EventEditType -> com.android.contacts.model.account.AccountType$EventEditType:
    416:416:void <init>(int,int) -> <init>
    420:420:boolean isYearOptional() -> isYearOptional
    424:424:com.android.contacts.model.account.AccountType$EventEditType setYearOptional(boolean) -> setYearOptional
    430:430:java.lang.String toString() -> toString
com.android.contacts.model.account.AccountTypeProvider -> com.android.contacts.model.account.AccountTypeProvider:
    60:64:void <init>(android.content.Context) -> <init>
    57:73:void <init>(android.content.Context,com.android.contacts.util.DeviceLocalAccountTypeFactory,android.content.SyncAdapterType[],android.accounts.AuthenticatorDescription[]) -> <init>
    271:272:boolean deepEquals(android.accounts.AuthenticatorDescription,android.accounts.AuthenticatorDescription) -> deepEquals
    85:102:java.util.List getAccountTypes(java.lang.String) -> getAccountTypes
    127:129:com.android.contacts.model.account.AccountType getType(java.lang.String,java.lang.String) -> getType
    141:141:com.android.contacts.model.account.AccountType getTypeForAccount(com.android.contacts.model.account.AccountWithDataSet) -> getTypeForAccount
    162:243:java.util.List loadTypes(java.lang.String) -> loadTypes
    248:262:com.google.common.collect.ImmutableMap onlyContactSyncable(android.accounts.AuthenticatorDescription[],android.content.SyncAdapterType[]) -> onlyContactSyncable
    145:150:boolean shouldUpdate(android.accounts.AuthenticatorDescription[],android.content.SyncAdapterType[]) -> shouldUpdate
    158:158:boolean supportsContactsSyncing(java.lang.String) -> supportsContactsSyncing
com.android.contacts.model.account.AccountTypeWithDataSet -> com.android.contacts.model.account.AccountTypeWithDataSet:
    35:37:void <clinit>() -> <clinit>
    45:47:void <init>(java.lang.String,java.lang.String) -> <init>
    82:86:boolean equals(java.lang.Object) -> equals
    51:51:com.android.contacts.model.account.AccountTypeWithDataSet get(java.lang.String,java.lang.String) -> get
    62:77:boolean hasData(android.content.Context) -> hasData
    91:92:int hashCode() -> hashCode
    97:97:java.lang.String toString() -> toString
com.android.contacts.model.account.AccountWithDataSet -> com.android.contacts.model.account.AccountWithDataSet:
    47:117:void <clinit>() -> <clinit>
    64:68:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    75:79:void <init>(android.os.Parcel) -> <init>
    186:190:java.lang.StringBuilder addStringified(java.lang.StringBuilder,com.android.contacts.model.account.AccountWithDataSet) -> addStringified
    72:72:java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    164:168:boolean equals(java.lang.Object) -> equals
    100:101:android.accounts.Account getAccountOrNull() -> getAccountOrNull
    128:128:com.android.contacts.model.account.AccountTypeWithDataSet getAccountTypeWithDataSet() -> getAccountTypeWithDataSet
    91:95:com.android.contacts.model.account.AccountWithDataSet getLocalAccount(android.content.Context) -> getLocalAccount
    87:87:com.android.contacts.model.account.AccountWithDataSet getNullAccount() -> getNullAccount
    138:160:boolean hasData(android.content.Context) -> hasData
    175:177:int hashCode() -> hashCode
    83:83:boolean isNullAccount() -> isNullAccount
    206:213:android.content.ContentProviderOperation newRawContactOperation() -> newRawContactOperation
    199:199:java.lang.String stringify() -> stringify
    234:243:java.lang.String stringifyList(java.util.List) -> stringifyList
    182:182:java.lang.String toString() -> toString
    222:227:com.android.contacts.model.account.AccountWithDataSet unstringify(java.lang.String) -> unstringify
    252:260:java.util.List unstringifyList(java.lang.String) -> unstringifyList
    111:113:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.model.account.AccountWithDataSet$1 -> com.android.contacts.model.account.AccountWithDataSet$1:
    117:117:void <init>() -> <init>
    117:117:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    119:119:com.android.contacts.model.account.AccountWithDataSet createFromParcel(android.os.Parcel) -> createFromParcel
    117:117:java.lang.Object[] newArray(int) -> newArray
    123:123:com.android.contacts.model.account.AccountWithDataSet[] newArray(int) -> newArray
com.android.contacts.model.account.AccountsLoader -> com.android.contacts.model.account.AccountsLoader:
    47:49:void <init>(android.content.Context,com.google.common.base.Predicate) -> <init>
    38:38:boolean isSameData(java.lang.Object,java.lang.Object) -> isSameData
    59:60:boolean isSameData(java.util.List,java.util.List) -> isSameData
    79:80:void loadAccounts(android.app.Fragment,int,com.google.common.base.Predicate) -> loadAccounts
    88:88:void loadAccounts(android.app.Activity,int,com.google.common.base.Predicate) -> loadAccounts
    93:93:void loadAccounts(android.content.Context,android.app.LoaderManager,int,com.google.common.base.Predicate,com.android.contacts.model.account.AccountsLoader$AccountsListener) -> loadAccounts
    54:54:com.google.common.util.concurrent.ListenableFuture loadData() -> loadData
com.android.contacts.model.account.AccountsLoader$1 -> com.android.contacts.model.account.AccountsLoader$1:
    94:94:void <init>(android.content.Context,com.google.common.base.Predicate,com.android.contacts.model.account.AccountsLoader$AccountsListener) -> <init>
    97:97:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    94:94:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    103:103:void onLoadFinished(android.content.Loader,java.util.List) -> onLoadFinished
com.android.contacts.model.account.BaseAccountType -> com.android.contacts.model.account.BaseAccountType:
    635:635:void <clinit>() -> <clinit>
    121:125:void <init>() -> <init>
    60:60:java.lang.String access$1400(android.util.AttributeSet,java.lang.String) -> access$1400
    60:60:int access$1500(android.util.AttributeSet,java.lang.String,int) -> access$1500
    60:60:boolean access$1700(android.util.AttributeSet,java.lang.String,boolean) -> access$1700
    444:446:com.android.contacts.model.dataitem.DataKind addDataKindCustomField(android.content.Context) -> addDataKindCustomField
    289:303:com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context) -> addDataKindEmail
    431:438:com.android.contacts.model.dataitem.DataKind addDataKindGroupMembership(android.content.Context) -> addDataKindGroupMembership
    332:357:com.android.contacts.model.dataitem.DataKind addDataKindIm(android.content.Context) -> addDataKindIm
    181:209:com.android.contacts.model.dataitem.DataKind addDataKindName(android.content.Context) -> addDataKindName
    234:243:com.android.contacts.model.dataitem.DataKind addDataKindNickname(android.content.Context) -> addDataKindNickname
    389:397:com.android.contacts.model.dataitem.DataKind addDataKindNote(android.content.Context) -> addDataKindNote
    363:374:com.android.contacts.model.dataitem.DataKind addDataKindOrganization(android.content.Context) -> addDataKindOrganization
    250:283:com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context) -> addDataKindPhone
    215:227:com.android.contacts.model.dataitem.DataKind addDataKindPhoneticName(android.content.Context) -> addDataKindPhoneticName
    381:384:com.android.contacts.model.dataitem.DataKind addDataKindPhoto(android.content.Context) -> addDataKindPhoto
    417:425:com.android.contacts.model.dataitem.DataKind addDataKindSipAddress(android.content.Context) -> addDataKindSipAddress
    153:174:com.android.contacts.model.dataitem.DataKind addDataKindStructuredName(android.content.Context) -> addDataKindStructuredName
    309:326:com.android.contacts.model.dataitem.DataKind addDataKindStructuredPostal(android.content.Context) -> addDataKindStructuredPostal
    403:411:com.android.contacts.model.dataitem.DataKind addDataKindWebsite(android.content.Context) -> addDataKindWebsite
    133:133:com.android.contacts.model.account.AccountType$EditType buildEmailType(int) -> buildEmailType
    145:145:com.android.contacts.model.account.AccountType$EditType buildEventType(int,boolean) -> buildEventType
    141:141:com.android.contacts.model.account.AccountType$EditType buildImType(int) -> buildImType
    129:129:com.android.contacts.model.account.AccountType$EditType buildPhoneType(int) -> buildPhoneType
    137:137:com.android.contacts.model.account.AccountType$EditType buildPostalType(int) -> buildPostalType
    149:149:com.android.contacts.model.account.AccountType$EditType buildRelationType(int) -> buildRelationType
    689:689:boolean getAttr(android.util.AttributeSet,java.lang.String,boolean) -> getAttr
    693:693:int getAttr(android.util.AttributeSet,java.lang.String,int) -> getAttr
    697:697:java.lang.String getAttr(android.util.AttributeSet,java.lang.String) -> getAttr
    637:650:java.lang.CharSequence lambda$static$0(android.content.Context,android.content.ContentValues) -> lambda$static$0
    666:682:void parseEditSchema(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseEditSchema
com.android.contacts.model.account.BaseAccountType$$ExternalSyntheticLambda0 -> com.android.contacts.model.account.BaseAccountType$$ExternalSyntheticLambda0:
    com.android.contacts.model.account.BaseAccountType$$InternalSyntheticLambda$0$a08ed6a546f89d3fa5419a0e7068ce70e44f030a1438fb0bc237e14eb8d6ab0a$0 com.android.contacts.model.account.BaseAccountType$$InternalSyntheticLambda$0$a08ed6a546f89d3fa5419a0e7068ce70e44f030a1438fb0bc237e14eb8d6ab0a$0.INSTANCE -> INSTANCE
    void com.android.contacts.model.account.BaseAccountType$$InternalSyntheticLambda$0$a08ed6a546f89d3fa5419a0e7068ce70e44f030a1438fb0bc237e14eb8d6ab0a$0.<clinit>() -> <clinit>
    void com.android.contacts.model.account.BaseAccountType$$InternalSyntheticLambda$0$a08ed6a546f89d3fa5419a0e7068ce70e44f030a1438fb0bc237e14eb8d6ab0a$0.<init>() -> <init>
    java.lang.CharSequence com.android.contacts.model.account.BaseAccountType$$InternalSyntheticLambda$0$a08ed6a546f89d3fa5419a0e7068ce70e44f030a1438fb0bc237e14eb8d6ab0a$0.inflateUsing(android.content.Context,android.content.ContentValues) -> inflateUsing
com.android.contacts.model.account.BaseAccountType$CommonInflater -> com.android.contacts.model.account.BaseAccountType$CommonInflater:
    502:502:void <init>() -> <init>
    518:524:java.lang.CharSequence getTypeLabel(android.content.res.Resources,java.lang.Integer,java.lang.CharSequence) -> getTypeLabel
    530:532:java.lang.CharSequence inflateUsing(android.content.Context,android.content.ContentValues) -> inflateUsing
    506:506:boolean isCustom(java.lang.Integer) -> isCustom
    537:537:java.lang.String toString() -> toString
com.android.contacts.model.account.BaseAccountType$EmailActionInflater -> com.android.contacts.model.account.BaseAccountType$EmailActionInflater:
    565:565:void <init>() -> <init>
    569:569:int getTypeLabelResource(java.lang.Integer) -> getTypeLabelResource
com.android.contacts.model.account.BaseAccountType$EmailKindBuilder -> com.android.contacts.model.account.BaseAccountType$EmailKindBuilder:
    1079:1079:void <init>() -> <init>
    1079:1079:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1100:1106:com.android.contacts.model.account.AccountType$EditType buildEditTypeForTypeTag(android.util.AttributeSet,java.lang.String) -> buildEditTypeForTypeTag
    1089:1094:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$EventActionInflater -> com.android.contacts.model.account.BaseAccountType$EventActionInflater:
    579:579:void <init>() -> <init>
    582:582:int getTypeLabelResource(java.lang.Integer) -> getTypeLabelResource
com.android.contacts.model.account.BaseAccountType$EventKindBuilder -> com.android.contacts.model.account.BaseAccountType$EventKindBuilder:
    1376:1376:void <init>() -> <init>
    1376:1376:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1405:1414:com.android.contacts.model.account.AccountType$EditType buildEditTypeForTypeTag(android.util.AttributeSet,java.lang.String) -> buildEditTypeForTypeTag
    1386:1400:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$GroupMembershipKindBuilder -> com.android.contacts.model.account.BaseAccountType$GroupMembershipKindBuilder:
    1348:1348:void <init>() -> <init>
    1348:1348:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1358:1367:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$ImActionInflater -> com.android.contacts.model.account.BaseAccountType$ImActionInflater:
    606:606:void <init>() -> <init>
    620:620:int getTypeLabelResource(java.lang.Integer) -> getTypeLabelResource
com.android.contacts.model.account.BaseAccountType$ImKindBuilder -> com.android.contacts.model.account.BaseAccountType$ImKindBuilder:
    1178:1178:void <init>() -> <init>
    1178:1178:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1207:1217:com.android.contacts.model.account.AccountType$EditType buildEditTypeForTypeTag(android.util.AttributeSet,java.lang.String) -> buildEditTypeForTypeTag
    1193:1202:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$KindBuilder -> com.android.contacts.model.account.BaseAccountType$KindBuilder:
    747:747:void <init>() -> <init>
    747:747:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    766:794:com.android.contacts.model.dataitem.DataKind newDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,boolean,java.lang.String,java.lang.String,int,int,com.android.contacts.model.account.AccountType$StringInflater,com.android.contacts.model.account.AccountType$StringInflater) -> newDataKind
    840:847:com.android.contacts.model.account.AccountType$EditType parseTypeTag(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.android.contacts.model.dataitem.DataKind) -> parseTypeTag
    809:827:void parseTypes(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.android.contacts.model.dataitem.DataKind,boolean) -> parseTypes
    862:863:void throwIfList(com.android.contacts.model.dataitem.DataKind) -> throwIfList
com.android.contacts.model.account.BaseAccountType$KindParser -> com.android.contacts.model.account.BaseAccountType$KindParser:
    702:702:void <clinit>() -> <clinit>
    704:720:void <init>() -> <init>
    724:724:void addBuilder(com.android.contacts.model.account.BaseAccountType$KindBuilder) -> addBuilder
    737:742:java.util.List parseDataKindTag(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKindTag
com.android.contacts.model.account.BaseAccountType$NameKindBuilder -> com.android.contacts.model.account.BaseAccountType$NameKindBuilder:
    872:872:void <init>() -> <init>
    872:872:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    881:881:void checkAttributeTrue(boolean,java.lang.String) -> checkAttributeTrue
    896:988:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$NicknameKindBuilder -> com.android.contacts.model.account.BaseAccountType$NicknameKindBuilder:
    994:994:void <init>() -> <init>
    994:994:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1004:1016:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$NoteKindBuilder -> com.android.contacts.model.account.BaseAccountType$NoteKindBuilder:
    1275:1275:void <init>() -> <init>
    1275:1275:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1285:1294:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$OrganizationKindBuilder -> com.android.contacts.model.account.BaseAccountType$OrganizationKindBuilder:
    1223:1223:void <init>() -> <init>
    1223:1223:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1233:1248:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$PhoneActionAltInflater -> com.android.contacts.model.account.BaseAccountType$PhoneActionAltInflater:
    553:553:void <init>() -> <init>
    561:561:int getTypeLabelResource(java.lang.Integer) -> getTypeLabelResource
    556:556:boolean isCustom(java.lang.Integer) -> isCustom
com.android.contacts.model.account.BaseAccountType$PhoneActionInflater -> com.android.contacts.model.account.BaseAccountType$PhoneActionInflater:
    541:541:void <init>() -> <init>
    549:549:int getTypeLabelResource(java.lang.Integer) -> getTypeLabelResource
    544:544:boolean isCustom(java.lang.Integer) -> isCustom
com.android.contacts.model.account.BaseAccountType$PhoneKindBuilder -> com.android.contacts.model.account.BaseAccountType$PhoneKindBuilder:
    1020:1020:void <init>() -> <init>
    1020:1020:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1045:1045:com.android.contacts.model.account.AccountType$EditType build(int,boolean) -> build
    1050:1073:com.android.contacts.model.account.AccountType$EditType buildEditTypeForTypeTag(android.util.AttributeSet,java.lang.String) -> buildEditTypeForTypeTag
    1030:1040:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$PhotoKindBuilder -> com.android.contacts.model.account.BaseAccountType$PhotoKindBuilder:
    1252:1252:void <init>() -> <init>
    1252:1252:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1262:1271:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$PostalActionInflater -> com.android.contacts.model.account.BaseAccountType$PostalActionInflater:
    593:593:void <init>() -> <init>
    597:597:int getTypeLabelResource(java.lang.Integer) -> getTypeLabelResource
com.android.contacts.model.account.BaseAccountType$RelationActionInflater -> com.android.contacts.model.account.BaseAccountType$RelationActionInflater:
    586:586:void <init>() -> <init>
    589:589:int getTypeLabelResource(java.lang.Integer) -> getTypeLabelResource
com.android.contacts.model.account.BaseAccountType$RelationshipKindBuilder -> com.android.contacts.model.account.BaseAccountType$RelationshipKindBuilder:
    1426:1426:void <init>() -> <init>
    1426:1426:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1453:1471:com.android.contacts.model.account.AccountType$EditType buildEditTypeForTypeTag(android.util.AttributeSet,java.lang.String) -> buildEditTypeForTypeTag
    1436:1447:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$SimpleInflater -> com.android.contacts.model.account.BaseAccountType$SimpleInflater:
    459:459:void <init>(int) -> <init>
    463:463:void <init>(java.lang.String) -> <init>
    466:468:void <init>(int,java.lang.String) -> <init>
    498:498:java.lang.String getColumnNameForTest() -> getColumnNameForTest
    473:480:java.lang.CharSequence inflateUsing(android.content.Context,android.content.ContentValues) -> inflateUsing
    492:492:java.lang.String toString() -> toString
com.android.contacts.model.account.BaseAccountType$SipAddressKindBuilder -> com.android.contacts.model.account.BaseAccountType$SipAddressKindBuilder:
    1323:1323:void <init>() -> <init>
    1323:1323:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1333:1344:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$StructuredPostalKindBuilder -> com.android.contacts.model.account.BaseAccountType$StructuredPostalKindBuilder:
    1112:1112:void <init>() -> <init>
    1112:1112:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1167:1172:com.android.contacts.model.account.AccountType$EditType buildEditTypeForTypeTag(android.util.AttributeSet,java.lang.String) -> buildEditTypeForTypeTag
    1122:1161:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.BaseAccountType$WebsiteKindBuilder -> com.android.contacts.model.account.BaseAccountType$WebsiteKindBuilder:
    1298:1298:void <init>() -> <init>
    1298:1298:void <init>(com.android.contacts.model.account.BaseAccountType$1) -> <init>
    1308:1319:java.util.List parseDataKind(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> parseDataKind
com.android.contacts.model.account.DeviceLocalAccountType -> com.android.contacts.model.account.DeviceLocalAccountType:
    37:46:void <init>(android.content.Context,boolean) -> <init>
    50:50:void <init>(android.content.Context) -> <init>
    103:122:com.android.contacts.model.dataitem.DataKind addDataKindEvent(android.content.Context) -> addDataKindEvent
    68:96:com.android.contacts.model.dataitem.DataKind addDataKindRelation(android.content.Context) -> addDataKindRelation
    55:55:boolean isGroupMembershipEditable() -> isGroupMembershipEditable
    62:64:com.android.contacts.model.account.AccountInfo wrapAccount(android.content.Context,com.android.contacts.model.account.AccountWithDataSet) -> wrapAccount
com.android.contacts.model.account.ExchangeAccountType -> com.android.contacts.model.account.ExchangeAccountType:
    49:73:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    174:179:com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context) -> addDataKindEmail
    280:294:com.android.contacts.model.dataitem.DataKind addDataKindEvent(android.content.Context) -> addDataKindEvent
    226:235:com.android.contacts.model.dataitem.DataKind addDataKindIm(android.content.Context) -> addDataKindIm
    131:136:com.android.contacts.model.dataitem.DataKind addDataKindNickname(android.content.Context) -> addDataKindNickname
    271:274:com.android.contacts.model.dataitem.DataKind addDataKindNote(android.content.Context) -> addDataKindNote
    242:251:com.android.contacts.model.dataitem.DataKind addDataKindOrganization(android.content.Context) -> addDataKindOrganization
    144:167:com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context) -> addDataKindPhone
    113:123:com.android.contacts.model.dataitem.DataKind addDataKindPhoneticName(android.content.Context) -> addDataKindPhoneticName
    259:264:com.android.contacts.model.dataitem.DataKind addDataKindPhoto(android.content.Context) -> addDataKindPhoto
    84:105:com.android.contacts.model.dataitem.DataKind addDataKindStructuredName(android.content.Context) -> addDataKindStructuredName
    186:218:com.android.contacts.model.dataitem.DataKind addDataKindStructuredPostal(android.content.Context) -> addDataKindStructuredPostal
    301:306:com.android.contacts.model.dataitem.DataKind addDataKindWebsite(android.content.Context) -> addDataKindWebsite
    78:79:boolean isExchangeType(java.lang.String) -> isExchangeType
com.android.contacts.model.account.ExternalAccountType -> com.android.contacts.model.account.ExternalAccountType:
    65:65:void <clinit>() -> <clinit>
    106:106:void <init>(android.content.Context,java.lang.String,boolean) -> <init>
    116:183:void <init>(android.content.Context,java.lang.String,boolean,android.content.res.XmlResourceParser) -> <init>
    253:253:boolean areContactsWritable() -> areContactsWritable
    236:237:void checkKindExists(java.lang.String) -> checkKindExists
    290:290:java.util.List getExtensionPackageNames() -> getExtensionPackageNames
    270:270:int getInviteContactActionResId() -> getInviteContactActionResId
    265:265:java.lang.String getInviteContactActivityClassName() -> getInviteContactActivityClassName
    275:275:java.lang.String getViewContactNotifyServiceClassName() -> getViewContactNotifyServiceClassName
    280:280:java.lang.String getViewGroupActivity() -> getViewGroupActivity
    285:285:int getViewGroupLabelResId() -> getViewGroupLabelResId
    260:260:boolean hasContactsMetadata() -> hasContactsMetadata
    232:232:boolean hasContactsXml(android.content.Context,java.lang.String) -> hasContactsXml
    303:399:void inflate(android.content.Context,org.xmlpull.v1.XmlPullParser) -> inflate
    248:248:boolean isExtension() -> isExtension
    448:448:boolean isFromTestApp(java.lang.String) -> isFromTestApp
    295:295:boolean isGroupMembershipEditable() -> isGroupMembershipEditable
    198:214:android.content.res.XmlResourceParser loadContactsXml(android.content.Context,java.lang.String) -> loadContactsXml
    417:439:int resolveExternalResId(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> resolveExternalResId
com.android.contacts.model.account.FallbackAccountType -> com.android.contacts.model.account.FallbackAccountType:
    37:65:void <init>(android.content.Context,java.lang.String) -> <init>
    78:78:void <init>(android.content.Context) -> <init>
    140:151:com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context) -> addDataKindEmail
    117:133:com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context) -> addDataKindPhone
    87:87:com.android.contacts.model.account.AccountType createWithPackageNameForTest(android.content.Context,java.lang.String) -> createWithPackageNameForTest
    71:72:android.graphics.drawable.Drawable getDisplayIcon(android.content.Context) -> getDisplayIcon
    110:112:com.android.contacts.model.account.AccountInfo wrapAccount(android.content.Context,com.android.contacts.model.account.AccountWithDataSet) -> wrapAccount
com.android.contacts.model.account.GoogleAccountType -> com.android.contacts.model.account.GoogleAccountType:
    51:52:void <clinit>() -> <clinit>
    54:80:void <init>(android.content.Context,java.lang.String) -> <init>
    114:125:com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context) -> addDataKindEmail
    166:185:com.android.contacts.model.dataitem.DataKind addDataKindEvent(android.content.Context) -> addDataKindEvent
    91:107:com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context) -> addDataKindPhone
    131:159:com.android.contacts.model.dataitem.DataKind addDataKindRelation(android.content.Context) -> addDataKindRelation
    86:86:java.util.List getExtensionPackageNames() -> getExtensionPackageNames
    218:231:void handleRawContactViewed(android.content.Context,android.net.Uri) -> handleRawContactViewed
com.android.contacts.model.account.SamsungAccountType -> com.android.contacts.model.account.SamsungAccountType:
    50:74:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    154:165:com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context) -> addDataKindEmail
    206:225:com.android.contacts.model.dataitem.DataKind addDataKindEvent(android.content.Context) -> addDataKindEvent
    130:147:com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context) -> addDataKindPhone
    171:199:com.android.contacts.model.dataitem.DataKind addDataKindRelation(android.content.Context) -> addDataKindRelation
    90:122:com.android.contacts.model.dataitem.DataKind addDataKindStructuredPostal(android.content.Context) -> addDataKindStructuredPostal
    84:85:boolean isSamsungAccountType(android.content.Context,java.lang.String,java.lang.String) -> isSamsungAccountType
com.android.contacts.model.account.SimAccountType -> com.android.contacts.model.account.SimAccountType:
    40:57:void <init>(android.content.Context) -> <init>
    96:114:com.android.contacts.model.dataitem.DataKind addDataKindName(android.content.Context) -> addDataKindName
    78:88:com.android.contacts.model.dataitem.DataKind addDataKindStructuredName(android.content.Context) -> addDataKindStructuredName
    123:124:android.graphics.drawable.Drawable getDisplayIcon(android.content.Context) -> getDisplayIcon
    133:135:com.android.contacts.model.account.AccountInfo wrapAccount(android.content.Context,com.android.contacts.model.account.AccountWithDataSet) -> wrapAccount
com.android.contacts.model.dataitem.CustomDataItem -> com.android.contacts.model.dataitem.CustomDataItem:
    33:33:void <init>(android.content.ContentValues) -> <init>
    40:40:java.lang.String getContent() -> getContent
    36:36:java.lang.String getSummary() -> getSummary
com.android.contacts.model.dataitem.DataItem -> com.android.contacts.model.dataitem.DataItem:
    49:50:void <init>(android.content.ContentValues) -> <init>
    164:168:java.lang.String buildDataString(android.content.Context,com.android.contacts.model.dataitem.DataKind) -> buildDataString
    179:179:java.lang.String buildDataStringForDisplay(android.content.Context,com.android.contacts.model.dataitem.DataKind) -> buildDataStringForDisplay
    44:44:void collapseWith(java.lang.Object) -> collapseWith
    192:217:void collapseWith(com.android.contacts.model.dataitem.DataItem) -> collapseWith
    58:94:com.android.contacts.model.dataitem.DataItem createFrom(android.content.ContentValues) -> createFrom
    155:156:int getCarrierPresence() -> getCarrierPresence
    98:98:android.content.ContentValues getContentValues() -> getContentValues
    187:187:com.android.contacts.model.dataitem.DataKind getDataKind() -> getDataKind
    113:113:long getId() -> getId
    144:145:int getKindTypeColumn(com.android.contacts.model.dataitem.DataKind) -> getKindTypeColumn
    120:120:java.lang.String getMimeType() -> getMimeType
    106:106:java.lang.Long getRawContactId() -> getRawContactId
    138:140:boolean hasKindTypeColumn(com.android.contacts.model.dataitem.DataKind) -> hasKindTypeColumn
    128:129:boolean isPrimary() -> isPrimary
    133:134:boolean isSuperPrimary() -> isSuperPrimary
    183:183:void setDataKind(com.android.contacts.model.dataitem.DataKind) -> setDataKind
    124:124:void setMimeType(java.lang.String) -> setMimeType
    102:102:void setRawContactId(long) -> setRawContactId
    44:44:boolean shouldCollapseWith(java.lang.Object,android.content.Context) -> shouldCollapseWith
    223:227:boolean shouldCollapseWith(com.android.contacts.model.dataitem.DataItem,android.content.Context) -> shouldCollapseWith
com.android.contacts.model.dataitem.DataKind -> com.android.contacts.model.dataitem.DataKind:
    87:88:void <init>() -> <init>
    91:97:void <init>(java.lang.String,int,int,boolean) -> <init>
    101:101:java.lang.String getKindString(android.content.Context) -> getKindString
    106:126:java.lang.String toString() -> toString
    130:130:java.lang.String toString(java.text.SimpleDateFormat) -> toString
    137:137:java.lang.String toString(java.lang.Iterable) -> toString
com.android.contacts.model.dataitem.EmailDataItem -> com.android.contacts.model.dataitem.EmailDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
    34:34:java.lang.String getAddress() -> getAddress
    42:42:java.lang.String getData() -> getData
    38:38:java.lang.String getDisplayName() -> getDisplayName
    46:46:java.lang.String getLabel() -> getLabel
com.android.contacts.model.dataitem.EventDataItem -> com.android.contacts.model.dataitem.EventDataItem:
    32:32:void <init>(android.content.ContentValues) -> <init>
    40:40:java.lang.String getLabel() -> getLabel
    36:36:java.lang.String getStartDate() -> getStartDate
    29:29:boolean shouldCollapseWith(java.lang.Object,android.content.Context) -> shouldCollapseWith
    45:57:boolean shouldCollapseWith(com.android.contacts.model.dataitem.DataItem,android.content.Context) -> shouldCollapseWith
com.android.contacts.model.dataitem.GroupMembershipDataItem -> com.android.contacts.model.dataitem.GroupMembershipDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
    34:34:java.lang.Long getGroupRowId() -> getGroupRowId
com.android.contacts.model.dataitem.IdentityDataItem -> com.android.contacts.model.dataitem.IdentityDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
com.android.contacts.model.dataitem.ImDataItem -> com.android.contacts.model.dataitem.ImDataItem:
    35:36:void <init>(android.content.ContentValues) -> <init>
    40:41:void <init>(android.content.ContentValues,boolean) -> <init>
    45:46:com.android.contacts.model.dataitem.ImDataItem createFromEmail(com.android.contacts.model.dataitem.EmailDataItem) -> createFromEmail
    78:79:int getChatCapability() -> getChatCapability
    74:74:java.lang.String getCustomProtocol() -> getCustomProtocol
    51:54:java.lang.String getData() -> getData
    59:59:java.lang.String getLabel() -> getLabel
    66:66:java.lang.Integer getProtocol() -> getProtocol
    83:83:boolean isCreatedFromEmail() -> isCreatedFromEmail
    70:70:boolean isProtocolValid() -> isProtocolValid
    30:30:boolean shouldCollapseWith(java.lang.Object,android.content.Context) -> shouldCollapseWith
    88:107:boolean shouldCollapseWith(com.android.contacts.model.dataitem.DataItem,android.content.Context) -> shouldCollapseWith
com.android.contacts.model.dataitem.NicknameDataItem -> com.android.contacts.model.dataitem.NicknameDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
    38:38:java.lang.String getLabel() -> getLabel
    34:34:java.lang.String getName() -> getName
com.android.contacts.model.dataitem.NoteDataItem -> com.android.contacts.model.dataitem.NoteDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
    34:34:java.lang.String getNote() -> getNote
com.android.contacts.model.dataitem.OrganizationDataItem -> com.android.contacts.model.dataitem.OrganizationDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
    34:34:java.lang.String getCompany() -> getCompany
    46:46:java.lang.String getDepartment() -> getDepartment
    50:50:java.lang.String getJobDescription() -> getJobDescription
    38:38:java.lang.String getLabel() -> getLabel
    62:62:java.lang.String getOfficeLocation() -> getOfficeLocation
    58:58:java.lang.String getPhoneticName() -> getPhoneticName
    54:54:java.lang.String getSymbol() -> getSymbol
    42:42:java.lang.String getTitle() -> getTitle
com.android.contacts.model.dataitem.PhoneDataItem -> com.android.contacts.model.dataitem.PhoneDataItem:
    40:40:void <init>(android.content.ContentValues) -> <init>
    93:97:java.lang.String buildDataStringForDisplay(android.content.Context,com.android.contacts.model.dataitem.DataKind) -> buildDataStringForDisplay
    79:83:void computeFormattedPhoneNumber(java.lang.String) -> computeFormattedPhoneNumber
    55:55:java.lang.String getFormattedPhoneNumber() -> getFormattedPhoneNumber
    59:59:java.lang.String getLabel() -> getLabel
    51:51:java.lang.String getNormalizedNumber() -> getNormalizedNumber
    44:44:java.lang.String getNumber() -> getNumber
    71:71:com.android.contacts.model.dataitem.DataItem getReachableDataItem() -> getReachableDataItem
    67:67:boolean isTachyonReachable() -> isTachyonReachable
    75:75:void setReachableDataItem(com.android.contacts.model.dataitem.DataItem) -> setReachableDataItem
    63:63:void setTachyonReachable(boolean) -> setTachyonReachable
com.android.contacts.model.dataitem.PhotoDataItem -> com.android.contacts.model.dataitem.PhotoDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
    38:38:byte[] getPhoto() -> getPhoto
com.android.contacts.model.dataitem.RelationDataItem -> com.android.contacts.model.dataitem.RelationDataItem:
    32:32:void <init>(android.content.ContentValues) -> <init>
    40:40:java.lang.String getLabel() -> getLabel
    36:36:java.lang.String getName() -> getName
    29:29:boolean shouldCollapseWith(java.lang.Object,android.content.Context) -> shouldCollapseWith
    45:57:boolean shouldCollapseWith(com.android.contacts.model.dataitem.DataItem,android.content.Context) -> shouldCollapseWith
com.android.contacts.model.dataitem.SipAddressDataItem -> com.android.contacts.model.dataitem.SipAddressDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
    38:38:java.lang.String getLabel() -> getLabel
    34:34:java.lang.String getSipAddress() -> getSipAddress
com.android.contacts.model.dataitem.StructuredNameDataItem -> com.android.contacts.model.dataitem.StructuredNameDataItem:
    31:32:void <init>() -> <init>
    36:36:void <init>(android.content.ContentValues) -> <init>
    40:40:java.lang.String getDisplayName() -> getDisplayName
    52:52:java.lang.String getFamilyName() -> getFamilyName
    80:80:java.lang.String getFullNameStyle() -> getFullNameStyle
    48:48:java.lang.String getGivenName() -> getGivenName
    60:60:java.lang.String getMiddleName() -> getMiddleName
    76:76:java.lang.String getPhoneticFamilyName() -> getPhoneticFamilyName
    68:68:java.lang.String getPhoneticGivenName() -> getPhoneticGivenName
    72:72:java.lang.String getPhoneticMiddleName() -> getPhoneticMiddleName
    56:56:java.lang.String getPrefix() -> getPrefix
    64:64:java.lang.String getSuffix() -> getSuffix
    96:98:boolean isSuperPrimary() -> isSuperPrimary
    44:44:void setDisplayName(java.lang.String) -> setDisplayName
    84:84:void setPhoneticFamilyName(java.lang.String) -> setPhoneticFamilyName
    92:92:void setPhoneticGivenName(java.lang.String) -> setPhoneticGivenName
    88:88:void setPhoneticMiddleName(java.lang.String) -> setPhoneticMiddleName
com.android.contacts.model.dataitem.StructuredPostalDataItem -> com.android.contacts.model.dataitem.StructuredPostalDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
    54:54:java.lang.String getCity() -> getCity
    66:66:java.lang.String getCountry() -> getCountry
    34:34:java.lang.String getFormattedAddress() -> getFormattedAddress
    38:38:java.lang.String getLabel() -> getLabel
    50:50:java.lang.String getNeighborhood() -> getNeighborhood
    46:46:java.lang.String getPOBox() -> getPOBox
    62:62:java.lang.String getPostcode() -> getPostcode
    58:58:java.lang.String getRegion() -> getRegion
    42:42:java.lang.String getStreet() -> getStreet
com.android.contacts.model.dataitem.WebsiteDataItem -> com.android.contacts.model.dataitem.WebsiteDataItem:
    30:30:void <init>(android.content.ContentValues) -> <init>
    38:38:java.lang.String getLabel() -> getLabel
    34:34:java.lang.String getUrl() -> getUrl
com.android.contacts.preference.AboutPreferenceFragment -> com.android.contacts.preference.AboutPreferenceFragment:
    36:36:void <init>() -> <init>
    36:36:void access$000(com.android.contacts.preference.AboutPreferenceFragment,java.lang.String) -> access$000
    94:94:android.content.Context getContext() -> getContext
    42:42:com.android.contacts.preference.AboutPreferenceFragment newInstance() -> newInstance
    47:89:void onCreate(android.os.Bundle) -> onCreate
    98:101:void startActivityForUrl(java.lang.String) -> startActivityForUrl
com.android.contacts.preference.AboutPreferenceFragment$1 -> com.android.contacts.preference.AboutPreferenceFragment$1:
    71:71:void <init>(com.android.contacts.preference.AboutPreferenceFragment,android.preference.Preference,android.preference.Preference) -> <init>
    75:82:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.android.contacts.preference.ContactsPreferenceActivity -> com.android.contacts.preference.ContactsPreferenceActivity:
    49:49:void <init>() -> <init>
    135:135:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    115:115:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    164:164:void invalidateOptionsMenu() -> invalidateOptionsMenu
    223:224:void onAccountChosen(com.android.contacts.model.account.AccountWithDataSet,android.os.Bundle) -> onAccountChosen
    186:190:void onBackPressed() -> onBackPressed
    152:153:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    66:97:void onCreate(android.os.Bundle) -> onCreate
    158:159:void onDestroy() -> onDestroy
    177:178:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    104:105:void onPostCreate(android.os.Bundle) -> onPostCreate
    140:141:void onPostResume() -> onPostResume
    207:218:void onProfileLoaded(android.database.Cursor) -> onProfileLoaded
    146:147:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    195:197:void setActivityTitle(int) -> setActivityTitle
    120:120:void setContentView(int) -> setContentView
    125:125:void setContentView(android.view.View) -> setContentView
    130:130:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    168:172:void showAboutFragment() -> showAboutFragment
com.android.contacts.preference.ContactsPreferences -> com.android.contacts.preference.ContactsPreferences:
    93:94:void <init>(android.content.Context) -> <init>
    80:109:void <init>(android.content.Context,boolean) -> <init>
    227:228:void clearDefaultAccount() -> clearDefaultAccount
    213:223:com.android.contacts.model.account.AccountWithDataSet getDefaultAccount() -> getDefaultAccount
    147:147:int getDefaultDisplayOrder() -> getDefaultDisplayOrder
    173:173:int getDefaultPhoneticNameDisplayPreference() -> getDefaultPhoneticNameDisplayPreference
    117:117:int getDefaultSortOrder() -> getDefaultSortOrder
    155:161:int getDisplayOrder() -> getDisplayOrder
    194:201:int getPhoneticNameDisplayPreference() -> getPhoneticNameDisplayPreference
    125:131:int getSortOrder() -> getSortOrder
    241:241:boolean isDefaultAccountSet() -> isDefaultAccountSet
    209:209:boolean isDefaultAccountUserChangeable() -> isDefaultAccountUserChangeable
    143:143:boolean isDisplayOrderUserChangeable() -> isDisplayOrderUserChangeable
    181:181:boolean isPhoneticNameDisplayPreferenceChangeable() -> isPhoneticNameDisplayPreferenceChangeable
    113:113:boolean isSortOrderUserChangeable() -> isSortOrderUserChangeable
    354:391:void maybeMigrateSystemSettings() -> maybeMigrateSystemSettings
    311:311:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    326:339:void refreshValue(java.lang.String) -> refreshValue
    285:296:void registerChangeListener(com.android.contacts.preference.ContactsPreferences$ChangeListener) -> registerChangeListener
    233:237:void setDefaultAccount(com.android.contacts.model.account.AccountWithDataSet) -> setDefaultAccount
    165:169:void setDisplayOrder(int) -> setDisplayOrder
    186:190:void setPhoneticNameDisplayPreference(int) -> setPhoneticNameDisplayPreference
    135:139:void setSortOrder(int) -> setSortOrder
    205:205:boolean shouldHidePhoneticNamesIfEmpty() -> shouldHidePhoneticNamesIfEmpty
    257:276:boolean shouldShowAccountChangedNotification(java.util.List) -> shouldShowAccountChangedNotification
    300:304:void unregisterChangeListener() -> unregisterChangeListener
com.android.contacts.preference.ContactsPreferences$1 -> com.android.contacts.preference.ContactsPreferences$1:
    311:311:void <init>(com.android.contacts.preference.ContactsPreferences,java.lang.String) -> <init>
    314:314:void run() -> run
com.android.contacts.preference.DefaultAccountPreference -> com.android.contacts.preference.DefaultAccountPreference:
    36:40:void <init>(android.content.Context) -> <init>
    36:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    32:32:int access$002(com.android.contacts.preference.DefaultAccountPreference,int) -> access$002
    77:82:java.lang.CharSequence getSummary() -> getSummary
    58:59:android.view.View onCreateDialogView() -> onCreateDialogView
    102:108:void onDialogClosed(boolean) -> onDialogClosed
    88:92:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    63:66:void prepare() -> prepare
    49:52:void setAccounts(java.util.List) -> setAccounts
com.android.contacts.preference.DefaultAccountPreference$1 -> com.android.contacts.preference.DefaultAccountPreference$1:
    92:92:void <init>(com.android.contacts.preference.DefaultAccountPreference) -> <init>
    95:95:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.preference.DisplayOptionsPreferenceFragment -> com.android.contacts.preference.DisplayOptionsPreferenceFragment:
    71:146:void <init>() -> <init>
    71:71:android.content.CursorLoader access$000(com.android.contacts.preference.DisplayOptionsPreferenceFragment,android.content.Context) -> access$000
    71:71:java.lang.String[] access$100(com.android.contacts.preference.DisplayOptionsPreferenceFragment,android.content.Context) -> access$100
    71:71:com.android.contacts.preference.DisplayOptionsPreferenceFragment$ProfileListener access$200(com.android.contacts.preference.DisplayOptionsPreferenceFragment) -> access$200
    71:71:android.view.ViewGroup access$600(com.android.contacts.preference.DisplayOptionsPreferenceFragment) -> access$600
    324:324:android.content.CursorLoader createCursorLoader(android.content.Context) -> createCursorLoader
    320:320:android.content.Context getContext() -> getContext
    337:342:java.lang.String[] getProjection(android.content.Context) -> getProjection
    170:174:com.android.contacts.preference.DisplayOptionsPreferenceFragment newInstance(java.lang.String,boolean) -> newInstance
    314:315:void onAccountsLoaded(java.util.List) -> onAccountsLoaded
    252:254:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    391:395:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    180:184:void onAttach(android.app.Activity) -> onAttach
    209:246:void onCreate(android.os.Bundle) -> onCreate
    191:194:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    259:261:void onDestroyView() -> onDestroyView
    347:381:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    199:202:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    279:306:void removeUnsupportedPreferences() -> removeUnsupportedPreferences
    400:411:void setCustomContactsFilterSummary() -> setCustomContactsFilterSummary
    267:274:void updateMyInfoPreference(boolean,java.lang.String,long,int) -> updateMyInfoPreference
com.android.contacts.preference.DisplayOptionsPreferenceFragment$1 -> com.android.contacts.preference.DisplayOptionsPreferenceFragment$1:
    147:147:void <init>(com.android.contacts.preference.DisplayOptionsPreferenceFragment) -> <init>
    147:147:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    151:153:android.content.CursorLoader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    147:147:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    159:160:void onLoadFinished(android.content.Loader,android.database.Cursor) -> onLoadFinished
com.android.contacts.preference.DisplayOptionsPreferenceFragment$2 -> com.android.contacts.preference.DisplayOptionsPreferenceFragment$2:
    324:324:void <init>(com.android.contacts.preference.DisplayOptionsPreferenceFragment,android.content.Context) -> <init>
    324:324:java.lang.Object onLoadInBackground() -> onLoadInBackground
    328:328:android.database.Cursor onLoadInBackground() -> onLoadInBackground
com.android.contacts.preference.DisplayOptionsPreferenceFragment$ProfileQuery -> com.android.contacts.preference.DisplayOptionsPreferenceFragment$ProfileQuery:
    113:120:void <clinit>() -> <clinit>
    107:107:java.lang.String[] access$400() -> access$400
    107:107:java.lang.String[] access$500() -> access$500
com.android.contacts.preference.DisplayOptionsPreferenceFragment$SaveServiceResultListener -> com.android.contacts.preference.DisplayOptionsPreferenceFragment$SaveServiceResultListener:
    417:417:void <init>(com.android.contacts.preference.DisplayOptionsPreferenceFragment) -> <init>
    417:417:void <init>(com.android.contacts.preference.DisplayOptionsPreferenceFragment,com.android.contacts.preference.DisplayOptionsPreferenceFragment$1) -> <init>
    420:437:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.preference.DisplayOrderPreference -> com.android.contacts.preference.DisplayOrderPreference:
    35:36:void <init>(android.content.Context) -> <init>
    40:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:69:java.lang.CharSequence getSummary() -> getSummary
    87:88:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    76:79:boolean persistString(java.lang.String) -> persistString
    45:55:void prepare() -> prepare
com.android.contacts.preference.PhoneticNameDisplayPreference -> com.android.contacts.preference.PhoneticNameDisplayPreference:
    38:39:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:72:java.lang.CharSequence getSummary() -> getSummary
    90:91:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    79:82:boolean persistString(java.lang.String) -> persistString
    48:58:void prepare() -> prepare
com.android.contacts.preference.SortOrderPreference -> com.android.contacts.preference.SortOrderPreference:
    35:36:void <init>(android.content.Context) -> <init>
    40:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:69:java.lang.CharSequence getSummary() -> getSummary
    87:88:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    76:79:boolean persistString(java.lang.String) -> persistString
    45:55:void prepare() -> prepare
com.android.contacts.profile.ProfileItem -> com.android.contacts.profile.ProfileItem:
    16:22:void <init>(java.lang.String,long,long,java.lang.String,int,boolean) -> <init>
    46:46:boolean HasProfile() -> HasProfile
    30:30:long getContactId() -> getContactId
    26:26:java.lang.String getDisplayName() -> getDisplayName
    42:42:int getDisplayNameSource() -> getDisplayNameSource
    34:34:long getPhotoId() -> getPhotoId
    38:38:java.lang.String getPhotoUri() -> getPhotoUri
com.android.contacts.profile.ProfileLoader -> com.android.contacts.profile.ProfileLoader:
    91:91:void <init>(android.content.Context,java.lang.String[]) -> <init>
    75:86:com.android.contacts.profile.ProfileItem getProfileItem(android.content.Context,android.database.Cursor) -> getProfileItem
    59:64:java.lang.String[] getProjection(android.content.Context) -> getProjection
    16:16:java.lang.Object loadInBackground() -> loadInBackground
    102:102:android.database.Cursor loadInBackground() -> loadInBackground
com.android.contacts.profile.ProfileLoader$ProfileQuery -> com.android.contacts.profile.ProfileLoader$ProfileQuery:
    27:36:void <clinit>() -> <clinit>
com.android.contacts.quickcontact.DirectoryContactUtil -> com.android.contacts.quickcontact.DirectoryContactUtil:
    42:45:boolean isDirectoryContact(com.android.contacts.model.Contact) -> isDirectoryContact
com.android.contacts.quickcontact.ExpandingEntryCardView -> com.android.contacts.quickcontact.ExpandingEntryCardView:
    72:72:void <clinit>() -> <clinit>
    292:292:void <init>(android.content.Context) -> <init>
    254:310:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    62:62:boolean access$000(com.android.contacts.quickcontact.ExpandingEntryCardView) -> access$000
    62:62:void access$100(com.android.contacts.quickcontact.ExpandingEntryCardView) -> access$100
    62:62:void access$200(com.android.contacts.quickcontact.ExpandingEntryCardView) -> access$200
    62:62:com.android.contacts.quickcontact.ExpandingEntryCardView$ExpandingEntryCardViewListener access$300(com.android.contacts.quickcontact.ExpandingEntryCardView) -> access$300
    62:62:void access$400(com.android.contacts.quickcontact.ExpandingEntryCardView) -> access$400
    62:62:android.util.Property access$500() -> access$500
    62:62:int access$600(com.android.contacts.quickcontact.ExpandingEntryCardView) -> access$600
    593:626:void applyColor() -> applyColor
    364:366:java.util.List calculateEntriesToRemoveDuringCollapse() -> calculateEntriesToRemoveDuringCollapse
    829:883:void collapse() -> collapse
    632:757:android.view.View createEntryView(android.view.LayoutInflater,com.android.contacts.quickcontact.ExpandingEntryCardView$Entry,int) -> createEntryView
    778:824:void expand() -> expand
    445:454:void formatEntryIfFirst(java.util.List) -> formatEntryIfFirst
    459:478:android.view.View generateSeparator(android.view.View) -> generateSeparator
    489:489:java.lang.CharSequence getCollapseButtonText() -> getCollapseButtonText
    484:484:java.lang.CharSequence getExpandButtonText() -> getExpandButtonText
    389:439:java.util.List getViewsToDisplay(boolean) -> getViewsToDisplay
    528:549:void inflateAllEntries(android.view.LayoutInflater) -> inflateAllEntries
    497:515:void inflateInitialEntries(android.view.LayoutInflater) -> inflateInitialEntries
    321:350:void initialize(java.util.List,int,boolean,boolean,com.android.contacts.quickcontact.ExpandingEntryCardView$ExpandingEntryCardViewListener,android.view.ViewGroup) -> initialize
    371:380:void insertEntriesIntoViewGroup() -> insertEntriesIntoViewGroup
    891:891:boolean isExpanded() -> isExpanded
    553:555:void setColorAndFilter(int,android.graphics.ColorFilter) -> setColorAndFilter
    559:564:void setEntryHeaderColor(int) -> setEntryHeaderColor
    355:355:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    360:360:void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener) -> setOnCreateContextMenuListener
    899:924:void setTitle(java.lang.String) -> setTitle
    763:774:void updateExpandCollapseButton(java.lang.CharSequence,long) -> updateExpandCollapseButton
com.android.contacts.quickcontact.ExpandingEntryCardView$1 -> com.android.contacts.quickcontact.ExpandingEntryCardView$1:
    73:73:void <init>(java.lang.Class,java.lang.String) -> <init>
    73:73:java.lang.Object get(java.lang.Object) -> get
    84:84:java.lang.Integer get(android.view.View) -> get
    73:73:void set(java.lang.Object,java.lang.Object) -> set
    77:79:void set(android.view.View,java.lang.Integer) -> set
com.android.contacts.quickcontact.ExpandingEntryCardView$2 -> com.android.contacts.quickcontact.ExpandingEntryCardView$2:
    280:280:void <init>(com.android.contacts.quickcontact.ExpandingEntryCardView) -> <init>
    283:286:void onClick(android.view.View) -> onClick
com.android.contacts.quickcontact.ExpandingEntryCardView$3 -> com.android.contacts.quickcontact.ExpandingEntryCardView$3:
    735:735:void <init>(com.android.contacts.quickcontact.ExpandingEntryCardView,com.android.contacts.quickcontact.ExpandingEntryCardView$Entry) -> <init>
    738:745:void onClick(android.view.View) -> onClick
com.android.contacts.quickcontact.ExpandingEntryCardView$4 -> com.android.contacts.quickcontact.ExpandingEntryCardView$4:
    794:794:void <init>(com.android.contacts.quickcontact.ExpandingEntryCardView) -> <init>
    802:802:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    797:797:void onTransitionStart(android.transition.Transition) -> onTransitionStart
com.android.contacts.quickcontact.ExpandingEntryCardView$5 -> com.android.contacts.quickcontact.ExpandingEntryCardView$5:
    850:850:void <init>(com.android.contacts.quickcontact.ExpandingEntryCardView,java.util.List) -> <init>
    860:868:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.contacts.quickcontact.ExpandingEntryCardView$Entry -> com.android.contacts.quickcontact.ExpandingEntryCardView$Entry:
    129:151:void <init>(int,android.graphics.drawable.Drawable,java.lang.String,java.lang.String,android.graphics.drawable.Drawable,java.lang.String,android.graphics.drawable.Drawable,android.text.Spannable,android.content.Intent,android.graphics.drawable.Drawable,android.content.Intent,android.text.Spannable,boolean,boolean,com.android.contacts.quickcontact.ExpandingEntryCardView$EntryContextMenuInfo,android.graphics.drawable.Drawable,android.content.Intent,java.lang.String,int,android.os.Bundle,boolean,int) -> <init>
    195:195:android.text.Spannable getAlternateContentDescription() -> getAlternateContentDescription
    187:187:android.graphics.drawable.Drawable getAlternateIcon() -> getAlternateIcon
    191:191:android.content.Intent getAlternateIntent() -> getAlternateIntent
    211:211:com.android.contacts.quickcontact.ExpandingEntryCardView$EntryContextMenuInfo getEntryContextMenuInfo() -> getEntryContextMenuInfo
    159:159:java.lang.String getHeader() -> getHeader
    155:155:android.graphics.drawable.Drawable getIcon() -> getIcon
    207:207:int getId() -> getId
    183:183:android.content.Intent getIntent() -> getIntent
    179:179:android.text.Spannable getPrimaryContentDescription() -> getPrimaryContentDescription
    163:163:java.lang.String getSubHeader() -> getSubHeader
    167:167:android.graphics.drawable.Drawable getSubHeaderIcon() -> getSubHeaderIcon
    171:171:java.lang.String getText() -> getText
    175:175:android.graphics.drawable.Drawable getTextIcon() -> getTextIcon
    231:231:int getThirdAction() -> getThirdAction
    223:223:java.lang.String getThirdContentDescription() -> getThirdContentDescription
    235:235:android.os.Bundle getThirdExtras() -> getThirdExtras
    215:215:android.graphics.drawable.Drawable getThirdIcon() -> getThirdIcon
    219:219:android.content.Intent getThirdIntent() -> getThirdIntent
    199:199:boolean shouldApplyColor() -> shouldApplyColor
    239:239:boolean shouldApplyThirdIconColor() -> shouldApplyThirdIconColor
com.android.contacts.quickcontact.ExpandingEntryCardView$EntryContextMenuInfo -> com.android.contacts.quickcontact.ExpandingEntryCardView$EntryContextMenuInfo:
    961:966:void <init>(java.lang.String,java.lang.String,java.lang.String,long,boolean) -> <init>
    974:974:java.lang.String getCopyLabel() -> getCopyLabel
    970:970:java.lang.String getCopyText() -> getCopyText
    982:982:long getId() -> getId
    978:978:java.lang.String getMimeType() -> getMimeType
    986:986:boolean isSuperPrimary() -> isSuperPrimary
com.android.contacts.quickcontact.ExpandingEntryCardView$EntryTag -> com.android.contacts.quickcontact.ExpandingEntryCardView$EntryTag:
    994:996:void <init>(int,android.content.Intent) -> <init>
    1000:1000:int getId() -> getId
    1004:1004:android.content.Intent getIntent() -> getIntent
com.android.contacts.quickcontact.ExpandingEntryCardView$EntryTouchListener -> com.android.contacts.quickcontact.ExpandingEntryCardView$EntryTouchListener:
    1022:1026:void <init>(android.view.View,android.widget.ImageView,android.widget.ImageView) -> <init>
    1095:1102:boolean hitAlternateIcon(android.view.MotionEvent) -> hitAlternateIcon
    1081:1086:boolean hitThirdIcon(android.view.MotionEvent) -> hitThirdIcon
    1031:1075:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.contacts.quickcontact.ExpandingEntryCardView$EntryView -> com.android.contacts.quickcontact.ExpandingEntryCardView$EntryView:
    936:936:void <init>(android.content.Context) -> <init>
    940:940:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    949:949:android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    944:944:void setContextMenuInfo(com.android.contacts.quickcontact.ExpandingEntryCardView$EntryContextMenuInfo) -> setContextMenuInfo
com.android.contacts.quickcontact.InvisibleContactUtil -> com.android.contacts.quickcontact.InvisibleContactUtil:
    73:82:void addToDefaultGroup(com.android.contacts.model.Contact,android.content.Context) -> addToDefaultGroup
    111:115:long getDefaultGroupId(java.util.List) -> getDefaultGroupId
    34:63:boolean isInvisibleAndAddable(com.android.contacts.model.Contact,android.content.Context) -> isInvisibleAndAddable
    88:104:boolean markAddToDefaultGroup(com.android.contacts.model.Contact,com.android.contacts.model.RawContactDeltaList,android.content.Context) -> markAddToDefaultGroup
com.android.contacts.quickcontact.QuickContactActivity -> com.android.contacts.quickcontact.QuickContactActivity:
    216:352:void <clinit>() -> <clinit>
    186:2091:void <init>() -> <init>
    186:186:void access$000(com.android.contacts.quickcontact.QuickContactActivity) -> access$000
    186:186:boolean access$1000(com.android.contacts.quickcontact.QuickContactActivity) -> access$1000
    186:186:boolean access$1002(com.android.contacts.quickcontact.QuickContactActivity,boolean) -> access$1002
    186:186:boolean access$102(com.android.contacts.quickcontact.QuickContactActivity,boolean) -> access$102
    186:186:android.graphics.drawable.ColorDrawable access$1100(com.android.contacts.quickcontact.QuickContactActivity) -> access$1100
    186:186:java.lang.String access$1200(com.android.contacts.quickcontact.QuickContactActivity) -> access$1200
    186:186:java.util.List access$1300() -> access$1300
    186:186:boolean access$1500(com.android.contacts.quickcontact.QuickContactActivity) -> access$1500
    186:186:int access$1600(com.android.contacts.quickcontact.QuickContactActivity) -> access$1600
    186:186:com.android.contacts.util.MaterialColorMapUtils access$1700(com.android.contacts.quickcontact.QuickContactActivity) -> access$1700
    186:186:void access$1800(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.util.MaterialColorMapUtils$MaterialPalette) -> access$1800
    186:186:com.android.contacts.quickcontact.QuickContactActivity$Cp2DataCardModel access$1900(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.model.Contact) -> access$1900
    186:186:java.lang.String access$200(com.android.contacts.quickcontact.QuickContactActivity) -> access$200
    186:186:com.android.contacts.model.Contact access$2000(com.android.contacts.quickcontact.QuickContactActivity) -> access$2000
    186:186:com.android.contacts.model.Contact access$2002(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.model.Contact) -> access$2002
    186:186:void access$2100(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.quickcontact.QuickContactActivity$Cp2DataCardModel) -> access$2100
    186:186:void access$2200(com.android.contacts.quickcontact.QuickContactActivity) -> access$2200
    186:186:void access$2300(com.android.contacts.quickcontact.QuickContactActivity) -> access$2300
    186:186:int access$2600(com.android.contacts.quickcontact.QuickContactActivity,android.graphics.Bitmap) -> access$2600
    186:186:boolean access$2700(com.android.contacts.quickcontact.QuickContactActivity) -> access$2700
    186:186:boolean access$2702(com.android.contacts.quickcontact.QuickContactActivity,boolean) -> access$2702
    186:186:com.android.contacts.widget.QuickContactImageView access$2800(com.android.contacts.quickcontact.QuickContactActivity) -> access$2800
    186:186:boolean access$2900(com.android.contacts.quickcontact.QuickContactActivity) -> access$2900
    186:186:int access$300(com.android.contacts.quickcontact.QuickContactActivity) -> access$300
    186:186:boolean access$3000(com.android.contacts.quickcontact.QuickContactActivity) -> access$3000
    186:186:boolean access$3002(com.android.contacts.quickcontact.QuickContactActivity,boolean) -> access$3002
    186:186:void access$3100(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.model.Contact) -> access$3100
    186:186:android.net.Uri access$3200(com.android.contacts.quickcontact.QuickContactActivity) -> access$3200
    186:186:void access$3300(com.android.contacts.quickcontact.QuickContactActivity) -> access$3300
    186:186:com.android.contacts.widget.MultiShrinkScroller access$400(com.android.contacts.quickcontact.QuickContactActivity) -> access$400
    186:186:boolean access$500(com.android.contacts.quickcontact.QuickContactActivity) -> access$500
    186:186:boolean access$600(com.android.contacts.quickcontact.QuickContactActivity) -> access$600
    186:186:boolean access$700(com.android.contacts.quickcontact.QuickContactActivity) -> access$700
    186:186:void access$800(com.android.contacts.quickcontact.QuickContactActivity) -> access$800
    186:186:boolean access$902(com.android.contacts.quickcontact.QuickContactActivity,boolean) -> access$902
    953:1019:void bindContactData(com.android.contacts.model.Contact) -> bindContactData
    1023:1031:void bindDataToCards(com.android.contacts.quickcontact.QuickContactActivity$Cp2DataCardModel) -> bindDataToCards
    1354:1363:void bindReachability(java.util.Map) -> bindReachability
    1048:1059:java.util.List buildAboutCardEntries(java.util.Map) -> buildAboutCardEntries
    2084:2086:int colorFromBitmap(android.graphics.Bitmap) -> colorFromBitmap
    2268:2304:void createLauncherShortcutWithContact() -> createLauncherShortcutWithContact
    1413:1814:com.android.contacts.quickcontact.ExpandingEntryCardView$Entry dataItemToEntry(com.android.contacts.model.dataitem.DataItem,com.android.contacts.model.dataitem.DataItem,android.content.Context,com.android.contacts.model.Contact,com.android.contacts.quickcontact.QuickContactActivity$MutableString) -> dataItemToEntry
    1844:1851:java.util.Map dataItemsToBucket(java.util.List) -> dataItemsToBucket
    1823:1833:java.util.List dataItemsToEntries(java.util.List,com.android.contacts.quickcontact.QuickContactActivity$MutableString) -> dataItemsToEntries
    2222:2223:void deleteContact() -> deleteContact
    2585:2586:void dismissProgressBar() -> dismissProgressBar
    636:639:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    2539:2545:boolean doJoinContactAction() -> doJoinContactAction
    2562:2580:void doPickRingtone() -> doPickRingtone
    2216:2218:void editContact() -> editContact
    1994:2046:void extractAndApplyTintFromPhotoViewAsynchronously() -> extractAndApplyTintFromPhotoViewAsynchronously
    2168:2171:void finish() -> finish
    1861:1870:java.util.List gPlusDataItemsToEntries(java.util.List) -> gPlusDataItemsToEntries
    1253:1345:com.android.contacts.quickcontact.QuickContactActivity$Cp2DataCardModel generateDataModelFromContact(com.android.contacts.model.Contact) -> generateDataModelFromContact
    2208:2212:android.content.Intent getEditContactIntent() -> getEditContactIntent
    1969:1985:java.lang.String getIntentResolveLabel(android.content.Intent,android.content.Context) -> getIntentResolveLabel
    1885:1903:java.util.List hangoutsDataItemsToEntries(java.util.List) -> hangoutsDataItemsToEntries
    1188:1241:void initializeNoContactDetailCard(boolean) -> initializeNoContactDetailCard
    2197:2197:boolean isContactEditable() -> isContactEditable
    2204:2204:boolean isContactShareable() -> isContactShareable
    940:942:boolean isMimeExcluded(java.lang.String) -> isMimeExcluded
    915:915:boolean isMultiWindowOnPhone() -> isMultiWindowOnPhone
    2309:2324:boolean isShortcutCreatable() -> isShortcutCreatable
    2553:2557:void joinAggregate(long) -> joinAggregate
    2601:2606:void maybeShowProgressDialog() -> maybeShowProgressDialog
    799:816:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    2150:2162:void onBackPressed() -> onBackPressed
    503:528:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    644:791:void onCreate(android.os.Bundle) -> onCreate
    2338:2339:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    2189:2190:void onDestroy() -> onDestroy
    829:833:void onNewIntent(android.content.Intent) -> onNewIntent
    2409:2521:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1080:1081:void onPause() -> onPause
    2345:2400:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1067:1074:void onResume() -> onResume
    821:824:void onRingtonePicked(android.net.Uri) -> onRingtonePicked
    838:847:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    2176:2183:void onStop() -> onStop
    1086:1180:void populateContactAndAboutCard(com.android.contacts.quickcontact.QuickContactActivity$Cp2DataCardModel,boolean) -> populateContactAndAboutCard
    1941:1964:void populateHangoutsDataItemModel(com.android.contacts.quickcontact.QuickContactActivity$HangoutsDataItemModel) -> populateHangoutsDataItemModel
    852:902:void processIntent(android.content.Intent) -> processIntent
    906:910:void runEntranceAnimation() -> runEntranceAnimation
    920:921:void setHeaderNameText(int) -> setHeaderNameText
    928:930:void setHeaderNameText(java.lang.String,boolean) -> setHeaderNameText
    2329:2332:void setStateForPhoneMenuItems(com.android.contacts.model.Contact) -> setStateForPhoneMenuItems
    2051:2059:void setThemeColor(com.android.contacts.util.MaterialColorMapUtils$MaterialPalette) -> setThemeColor
    2245:2260:void shareContact() -> shareContact
    1035:1037:void showActivity() -> showActivity
    2591:2592:void showLinkProgressBar() -> showLinkProgressBar
    2527:2532:boolean showRawContactPickerDialog() -> showRawContactPickerDialog
    2596:2597:void showUnlinkProgressBar() -> showUnlinkProgressBar
    2228:2241:void toggleStar(android.view.MenuItem,boolean) -> toggleStar
    2063:2078:void updateStatusBarColor() -> updateStatusBarColor
com.android.contacts.quickcontact.QuickContactActivity$1 -> com.android.contacts.quickcontact.QuickContactActivity$1:
    356:356:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    359:406:void onClick(android.view.View) -> onClick
com.android.contacts.quickcontact.QuickContactActivity$10 -> com.android.contacts.quickcontact.QuickContactActivity$10:
    998:998:void <init>(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.model.Contact) -> <init>
    998:998:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1003:1003:com.android.contacts.quickcontact.QuickContactActivity$Cp2DataCardModel doInBackground(java.lang.Void[]) -> doInBackground
    998:998:void onPostExecute(java.lang.Object) -> onPostExecute
    1008:1014:void onPostExecute(com.android.contacts.quickcontact.QuickContactActivity$Cp2DataCardModel) -> onPostExecute
com.android.contacts.quickcontact.QuickContactActivity$11 -> com.android.contacts.quickcontact.QuickContactActivity$11:
    1038:1038:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    1041:1041:void run() -> run
com.android.contacts.quickcontact.QuickContactActivity$12 -> com.android.contacts.quickcontact.QuickContactActivity$12:
    1998:1998:void <init>(com.android.contacts.quickcontact.QuickContactActivity,android.graphics.drawable.Drawable) -> <init>
    1998:1998:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    2002:2025:com.android.contacts.util.MaterialColorMapUtils$MaterialPalette doInBackground(java.lang.Void[]) -> doInBackground
    1998:1998:void onPostExecute(java.lang.Object) -> onPostExecute
    2030:2043:void onPostExecute(com.android.contacts.util.MaterialColorMapUtils$MaterialPalette) -> onPostExecute
com.android.contacts.quickcontact.QuickContactActivity$13 -> com.android.contacts.quickcontact.QuickContactActivity$13:
    2092:2092:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    2137:2142:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    2092:2092:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
    2100:2132:void onLoadFinished(android.content.Loader,com.android.contacts.model.Contact) -> onLoadFinished
    2095:2095:void onLoaderReset(android.content.Loader) -> onLoaderReset
com.android.contacts.quickcontact.QuickContactActivity$14 -> com.android.contacts.quickcontact.QuickContactActivity$14:
    2284:2284:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    2290:2301:void onShortcutIntentCreated(android.net.Uri,android.content.Intent) -> onShortcutIntentCreated
com.android.contacts.quickcontact.QuickContactActivity$2 -> com.android.contacts.quickcontact.QuickContactActivity$2:
    412:412:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    415:415:void onCollapse(int) -> onCollapse
    420:420:void onExpand() -> onExpand
    425:425:void onExpandDone() -> onExpandDone
com.android.contacts.quickcontact.QuickContactActivity$3 -> com.android.contacts.quickcontact.QuickContactActivity$3:
    437:437:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    481:494:void addPhoneAccountsToMenu(android.content.Context,android.view.Menu,com.android.contacts.quickcontact.ExpandingEntryCardView$EntryContextMenuInfo) -> addPhoneAccountsToMenu
    443:475:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
com.android.contacts.quickcontact.QuickContactActivity$4 -> com.android.contacts.quickcontact.QuickContactActivity$4:
    533:533:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    541:541:void onEnterFullscreen() -> onEnterFullscreen
    556:556:void onEntranceAnimationDone() -> onEntranceAnimationDone
    546:546:void onExitFullscreen() -> onExitFullscreen
    536:536:void onScrolledOffBottom() -> onScrolledOffBottom
    551:551:void onStartScrollOffBottom() -> onStartScrollOffBottom
    561:562:void onTransparentViewHeightChange(float) -> onTransparentViewHeightChange
com.android.contacts.quickcontact.QuickContactActivity$5 -> com.android.contacts.quickcontact.QuickContactActivity$5:
    574:574:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    574:574:int compare(java.lang.Object,java.lang.Object) -> compare
    577:589:int compare(com.android.contacts.model.dataitem.DataItem,com.android.contacts.model.dataitem.DataItem) -> compare
com.android.contacts.quickcontact.QuickContactActivity$6 -> com.android.contacts.quickcontact.QuickContactActivity$6:
    602:602:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    602:602:int compare(java.lang.Object,java.lang.Object) -> compare
    605:625:int compare(java.util.List,java.util.List) -> compare
com.android.contacts.quickcontact.QuickContactActivity$7 -> com.android.contacts.quickcontact.QuickContactActivity$7:
    715:715:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    718:718:void onClick(android.view.View) -> onClick
com.android.contacts.quickcontact.QuickContactActivity$8 -> com.android.contacts.quickcontact.QuickContactActivity$8:
    749:749:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    752:763:void run() -> run
com.android.contacts.quickcontact.QuickContactActivity$9 -> com.android.contacts.quickcontact.QuickContactActivity$9:
    771:771:void <init>(com.android.contacts.quickcontact.QuickContactActivity,int) -> <init>
    776:785:void run() -> run
com.android.contacts.quickcontact.QuickContactActivity$Cp2DataCardModel -> com.android.contacts.quickcontact.QuickContactActivity$Cp2DataCardModel:
    1375:1375:void <init>() -> <init>
    1375:1375:void <init>(com.android.contacts.quickcontact.QuickContactActivity$1) -> <init>
com.android.contacts.quickcontact.QuickContactActivity$HangoutsDataItemModel -> com.android.contacts.quickcontact.QuickContactActivity$HangoutsDataItemModel:
    1927:1935:void <init>(android.content.Intent,android.content.Intent,com.android.contacts.model.dataitem.DataItem,com.android.contacts.model.dataitem.DataItem,java.lang.StringBuilder,java.lang.String,java.lang.String,android.content.Context) -> <init>
com.android.contacts.quickcontact.QuickContactActivity$MutableString -> com.android.contacts.quickcontact.QuickContactActivity$MutableString:
    1387:1387:void <init>() -> <init>
    1387:1387:void <init>(com.android.contacts.quickcontact.QuickContactActivity$1) -> <init>
com.android.contacts.quickcontact.QuickContactActivity$SaveServiceListener -> com.android.contacts.quickcontact.QuickContactActivity$SaveServiceListener:
    2610:2610:void <init>(com.android.contacts.quickcontact.QuickContactActivity) -> <init>
    2610:2610:void <init>(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.quickcontact.QuickContactActivity$1) -> <init>
    2613:2620:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.quickcontact.QuickContactBroadcastReceiver -> com.android.contacts.quickcontact.QuickContactBroadcastReceiver:
    32:32:void <init>() -> <init>
    35:40:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.quickcontact.ResolveCache -> com.android.contacts.quickcontact.ResolveCache:
    51:51:void <clinit>() -> <clinit>
    96:117:void <init>(android.content.Context) -> <init>
    42:42:void access$000() -> access$000
    90:91:void flush() -> flush
    170:193:android.content.pm.ResolveInfo getBestResolve(android.content.Intent,java.util.List) -> getBestResolve
    125:155:com.android.contacts.quickcontact.ResolveCache$Entry getEntry(java.lang.String,android.content.Intent) -> getEntry
    210:210:android.graphics.drawable.Drawable getIcon(java.lang.String,android.content.Intent) -> getIcon
    74:86:com.android.contacts.quickcontact.ResolveCache getInstance(android.content.Context) -> getInstance
com.android.contacts.quickcontact.ResolveCache$1 -> com.android.contacts.quickcontact.ResolveCache$1:
    96:96:void <init>(com.android.contacts.quickcontact.ResolveCache) -> <init>
    99:99:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.quickcontact.ResolveCache$Entry -> com.android.contacts.quickcontact.ResolveCache$Entry:
    107:107:void <init>() -> <init>
    107:107:void <init>(com.android.contacts.quickcontact.ResolveCache$1) -> <init>
com.android.contacts.quickcontact.WebAddress -> com.android.contacts.quickcontact.WebAddress:
    56:56:void <clinit>() -> <clinit>
    65:120:void <init>(java.lang.String) -> <init>
    126:135:java.lang.String toString() -> toString
com.android.contacts.quickcontact.WebAddress$ParseException -> com.android.contacts.quickcontact.WebAddress$ParseException:
    141:142:void <init>(com.android.contacts.quickcontact.WebAddress,java.lang.String) -> <init>
com.android.contacts.testing.InjectedServices -> com.android.contacts.testing.InjectedServices:
    31:31:void <init>() -> <init>
    42:42:android.content.ContentResolver getContentResolver() -> getContentResolver
    50:50:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    62:63:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    38:38:void setContentResolver(android.content.ContentResolver) -> setContentResolver
    46:46:void setSharedPreferences(android.content.SharedPreferences) -> setSharedPreferences
    54:58:void setSystemService(java.lang.String,java.lang.Object) -> setSystemService
com.android.contacts.util.AccountFilterUtil -> com.android.contacts.util.AccountFilterUtil:
    57:57:com.android.contacts.model.account.AccountWithDataSet access$100(android.content.Context) -> access$100
    170:173:com.android.contacts.list.ContactListFilter createContactsFilter(android.content.Context) -> createContactsFilter
    228:238:java.lang.String getActionBarTitleForAccount(android.content.Context,com.android.contacts.list.ContactListFilter) -> getActionBarTitleForAccount
    216:224:java.lang.String getActionBarTitleForFilter(android.content.Context,com.android.contacts.list.ContactListFilter) -> getActionBarTitleForFilter
    160:160:com.android.contacts.model.account.AccountWithDataSet getDefaultAccount(android.content.Context) -> getDefaultAccount
    88:95:void handleAccountFilterResult(com.android.contacts.list.ContactListFilterController,int,android.content.Intent) -> handleAccountFilterResult
    205:205:boolean isAllContactsFilter(com.android.contacts.list.ContactListFilter) -> isAllContactsFilter
    209:209:boolean isDeviceContactsFilter(com.android.contacts.list.ContactListFilter) -> isDeviceContactsFilter
    69:74:void startAccountFilterActivityForResult(android.app.Fragment,int,com.android.contacts.list.ContactListFilter) -> startAccountFilterActivityForResult
    181:200:void startEditorIntent(android.content.Context,android.content.Intent,com.android.contacts.list.ContactListFilter) -> startEditorIntent
com.android.contacts.util.AccountFilterUtil$FilterLoader -> com.android.contacts.util.AccountFilterUtil$FilterLoader:
    109:111:void <init>(android.content.Context) -> <init>
    104:104:java.util.List access$000(com.android.contacts.util.AccountFilterUtil$FilterLoader,java.util.List) -> access$000
    128:150:java.util.List getFiltersForAccounts(java.util.List) -> getFiltersForAccounts
    117:124:com.google.common.util.concurrent.ListenableFuture loadData() -> loadData
com.android.contacts.util.AccountFilterUtil$FilterLoader$1 -> com.android.contacts.util.AccountFilterUtil$FilterLoader$1:
    119:119:void <init>(com.android.contacts.util.AccountFilterUtil$FilterLoader) -> <init>
    119:119:java.lang.Object apply(java.lang.Object) -> apply
    122:122:java.util.List apply(java.util.List) -> apply
com.android.contacts.util.AccountSelectionUtil -> com.android.contacts.util.AccountSelectionUtil:
    162:164:void doImport(android.app.Activity,int,com.android.contacts.model.account.AccountWithDataSet,int) -> doImport
    170:179:void doImportFromSim(android.content.Context,com.android.contacts.model.account.AccountWithDataSet,int) -> doImportFromSim
    183:196:void doImportFromVcfFile(android.app.Activity,com.android.contacts.model.account.AccountWithDataSet) -> doImportFromVcfFile
    94:155:android.app.Dialog getSelectAccountDialog(android.app.Activity,int,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener) -> getSelectAccountDialog
com.android.contacts.util.AccountSelectionUtil$1 -> com.android.contacts.util.AccountSelectionUtil$1:
    109:109:void <init>(android.content.Context,int,java.util.List,android.view.LayoutInflater,com.android.contacts.model.AccountTypeManager) -> <init>
    113:131:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.android.contacts.util.AccountSelectionUtil$2 -> com.android.contacts.util.AccountSelectionUtil$2:
    143:143:void <init>() -> <init>
    145:145:void onCancel(android.content.DialogInterface) -> onCancel
com.android.contacts.util.AccountSelectionUtil$AccountSelectedListener -> com.android.contacts.util.AccountSelectionUtil$AccountSelectedListener:
    64:71:void <init>(android.app.Activity,java.util.List,int,int) -> <init>
    78:78:void <init>(android.app.Activity,java.util.List,int) -> <init>
    82:83:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.util.AccountsListAdapter -> com.android.contacts.util.AccountsListAdapter:
    45:45:void <init>(android.content.Context) -> <init>
    49:49:void <init>(android.content.Context,java.util.List) -> <init>
    42:61:void <init>(android.content.Context,java.util.List,com.android.contacts.model.account.AccountWithDataSet) -> <init>
    108:108:int getCount() -> getCount
    39:39:java.lang.Object getItem(int) -> getItem
    113:113:com.android.contacts.model.account.AccountWithDataSet getItem(int) -> getItem
    89:101:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    66:79:void setAccounts(java.util.List,com.android.contacts.model.account.AccountWithDataSet) -> setAccounts
    83:83:void setCustomLayout(int) -> setCustomLayout
com.android.contacts.util.BitmapUtil -> com.android.contacts.util.BitmapUtil:
    34:34:void <init>() -> <init>
    86:89:android.graphics.Bitmap decodeBitmapFromBytes(byte[],int) -> decodeBitmapFromBytes
    169:178:android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable,int) -> drawableToBitmap
    104:113:android.graphics.drawable.Drawable getRotatedDrawable(android.content.res.Resources,int,float) -> getRotatedDrawable
    130:161:android.graphics.Bitmap getRoundedBitmap(android.graphics.Bitmap,int,int) -> getRoundedBitmap
    41:48:int getSmallerExtentFromBytes(byte[]) -> getSmallerExtentFromBytes
com.android.contacts.util.CommonDateUtils -> com.android.contacts.util.CommonDateUtils:
    28:34:void <clinit>() -> <clinit>
com.android.contacts.util.ContactDisplayUtils -> com.android.contacts.util.ContactDisplayUtils:
    35:35:void <init>() -> <init>
    57:57:int getPhoneLabelResourceId(java.lang.Integer) -> getPhoneLabelResourceId
    217:222:java.lang.String getPreferredDisplayName(java.lang.String,java.lang.String,com.android.contacts.preference.ContactsPreferences) -> getPreferredDisplayName
    245:250:java.lang.String getPreferredSortName(java.lang.String,java.lang.String,com.android.contacts.preference.ContactsPreferences) -> getPreferredSortName
    112:112:int getSmsLabelResourceId(java.lang.Integer) -> getSmsLabelResourceId
    176:182:android.text.Spannable getTelephoneTtsSpannable(java.lang.String,java.lang.String) -> getTelephoneTtsSpannable
    198:199:java.lang.CharSequence getTtsSpannedPhoneNumber(android.content.res.Resources,int,java.lang.String) -> getTtsSpannedPhoneNumber
    46:46:boolean isCustomPhoneType(java.lang.Integer) -> isCustomPhoneType
    165:165:boolean isPossiblePhoneNumber(java.lang.CharSequence) -> isPossiblePhoneNumber
com.android.contacts.util.ContactLoaderUtils -> com.android.contacts.util.ContactLoaderUtils:
    44:76:android.net.Uri ensureIsContactUri(android.content.ContentResolver,android.net.Uri) -> ensureIsContactUri
com.android.contacts.util.ContactPhotoUtils -> com.android.contacts.util.ContactPhotoUtils:
    123:129:void addCropExtras(android.content.Intent,int) -> addCropExtras
    139:142:void addPhotoPickerExtras(android.content.Intent,android.net.Uri) -> addPhotoPickerExtras
    109:117:byte[] compressBitmap(android.graphics.Bitmap) -> compressBitmap
    66:69:android.net.Uri generateTempCroppedImageUri(android.content.Context) -> generateTempCroppedImageUri
    86:88:java.lang.String generateTempCroppedPhotoFileName() -> generateTempCroppedPhotoFileName
    59:62:android.net.Uri generateTempImageUri(android.content.Context) -> generateTempImageUri
    80:82:java.lang.String generateTempPhotoFileName() -> generateTempPhotoFileName
    96:101:android.graphics.Bitmap getBitmapFromUri(android.content.Context,android.net.Uri) -> getBitmapFromUri
    183:186:boolean isFilePathAndNotStorage(android.net.Uri) -> isFilePathAndNotStorage
    73:76:java.lang.String pathForTempPhoto(android.content.Context,java.lang.String) -> pathForTempPhoto
    150:174:boolean savePhotoFromUriToUri(android.content.Context,android.net.Uri,android.net.Uri,boolean) -> savePhotoFromUriToUri
com.android.contacts.util.ContactsNotificationChannelsUtil -> com.android.contacts.util.ContactsNotificationChannelsUtil:
    35:42:void createDefaultChannel(android.content.Context) -> createDefaultChannel
com.android.contacts.util.DataStatus -> com.android.contacts.util.DataStatus:
    35:48:void <init>(android.database.Cursor) -> <init>
    77:82:void fromCursor(android.database.Cursor) -> fromCursor
    153:154:int getInt(android.database.Cursor,java.lang.String,int) -> getInt
    158:159:long getLong(android.database.Cursor,java.lang.String,long) -> getLong
    145:145:java.lang.String getString(android.database.Cursor,java.lang.String) -> getString
com.android.contacts.util.DateUtils -> com.android.contacts.util.DateUtils:
    34:59:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    139:139:java.lang.String formatDate(android.content.Context,java.lang.String) -> formatDate
    157:180:java.lang.String formatDate(android.content.Context,java.lang.String,boolean) -> formatDate
    204:215:java.text.DateFormat getLocalizedDateFormatWithoutYear(android.content.Context) -> getLocalizedDateFormatWithoutYear
    231:268:java.util.Date getNextAnnualDate(java.util.Calendar) -> getNextAnnualDate
    104:107:java.util.Calendar getUtcDate(java.util.Date,boolean) -> getUtcDate
    113:117:java.util.Calendar getUtcDate(int,int,int) -> getUtcDate
    184:189:boolean isMonthBeforeDay(android.content.Context) -> isMonthBeforeDay
    125:125:boolean isYearSet(java.util.Calendar) -> isYearSet
    72:98:java.util.Calendar parseDate(java.lang.String,boolean) -> parseDate
com.android.contacts.util.DeviceLocalAccountTypeFactory$Default -> com.android.contacts.util.DeviceLocalAccountTypeFactory$Default:
    67:68:void <init>(android.content.Context) -> <init>
    74:82:int classifyAccount(java.lang.String) -> classifyAccount
    88:95:com.android.contacts.model.account.AccountType getAccountType(java.lang.String) -> getAccountType
com.android.contacts.util.DeviceLocalAccountTypeFactory$Util -> com.android.contacts.util.DeviceLocalAccountTypeFactory$Util:
    51:51:void <init>() -> <init>
    60:60:boolean isLocalAccountType(com.android.contacts.util.DeviceLocalAccountTypeFactory,java.lang.String) -> isLocalAccountType
com.android.contacts.util.DialogManager -> com.android.contacts.util.DialogManager:
    46:59:void <init>(android.app.Activity) -> <init>
    44:44:android.app.Activity access$000(com.android.contacts.util.DialogManager) -> access$000
    87:107:android.app.Dialog onCreateDialog(int,android.os.Bundle) -> onCreateDialog
    69:78:void showDialogInView(android.view.View,android.os.Bundle) -> showDialogInView
com.android.contacts.util.DialogManager$1 -> com.android.contacts.util.DialogManager$1:
    107:107:void <init>(com.android.contacts.util.DialogManager,int) -> <init>
    109:109:void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.contacts.util.EmptyService -> com.android.contacts.util.EmptyService:
    28:28:void <init>() -> <init>
com.android.contacts.util.ImageViewDrawableSetter -> com.android.contacts.util.ImageViewDrawableSetter:
    44:48:void <init>() -> <init>
    166:176:android.graphics.drawable.BitmapDrawable decodedBitmapDrawable(byte[]) -> decodedBitmapDrawable
    144:159:android.graphics.drawable.Drawable defaultDrawable() -> defaultDrawable
    132:134:android.graphics.Bitmap previousBitmap() -> previousBitmap
    87:128:android.graphics.Bitmap setCompressedImage(byte[]) -> setCompressedImage
    75:78:void setTarget(android.widget.ImageView) -> setTarget
    56:58:android.graphics.Bitmap setupContactPhoto(com.android.contacts.model.Contact,android.widget.ImageView) -> setupContactPhoto
com.android.contacts.util.ImplicitIntentsUtil -> com.android.contacts.util.ImplicitIntentsUtil:
    117:117:android.content.Intent composeQuickContactIntent(android.content.Context,android.net.Uri,int) -> composeQuickContactIntent
    126:132:android.content.Intent composeQuickContactIntent(android.content.Context,android.net.Uri,int,int) -> composeQuickContactIntent
    141:143:android.content.Intent getIntentForAddingAccount() -> getIntentForAddingAccount
    152:154:android.content.Intent getIntentForAddingGoogleAccount() -> getIntentForAddingGoogleAccount
    185:192:android.content.Intent getIntentForEmergencyInfo(android.content.Context) -> getIntentForEmergencyInfo
    160:176:android.content.Intent getIntentForQuickContactLauncherShortcut(android.content.Context,android.net.Uri) -> getIntentForQuickContactLauncherShortcut
    204:218:android.content.Intent getIntentInAppIfExists(android.content.Context,android.content.Intent) -> getIntentInAppIfExists
    80:82:void startActivityInApp(android.content.Context,android.content.Intent) -> startActivityInApp
    67:71:void startActivityInAppIfPossible(android.content.Context,android.content.Intent) -> startActivityInAppIfPossible
    89:97:void startActivityOutsideApp(android.content.Context,android.content.Intent) -> startActivityOutsideApp
    105:108:void startQuickContact(android.app.Activity,android.net.Uri,int) -> startQuickContact
com.android.contacts.util.LocalizedNameResolver -> com.android.contacts.util.LocalizedNameResolver:
    52:55:java.lang.String getAllContactsName(android.content.Context,java.lang.String) -> getAllContactsName
    88:142:java.lang.String loadAllContactsNameFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,java.lang.String) -> loadAllContactsNameFromXml
    62:66:java.lang.String resolveAllContactsName(android.content.Context,java.lang.String) -> resolveAllContactsName
    78:80:java.lang.String resolveAllContactsNameFromMetaData(android.content.Context,java.lang.String) -> resolveAllContactsNameFromMetaData
com.android.contacts.util.MaterialColorMapUtils -> com.android.contacts.util.MaterialColorMapUtils:
    34:37:void <init>(android.content.res.Resources) -> <init>
    113:133:com.android.contacts.util.MaterialColorMapUtils$MaterialPalette calculatePrimaryAndSecondaryColor(int) -> calculatePrimaryAndSecondaryColor
    137:141:com.android.contacts.util.MaterialColorMapUtils$MaterialPalette getDefaultPrimaryAndSecondaryColors(android.content.res.Resources) -> getDefaultPrimaryAndSecondaryColors
    188:192:int getStatusBarColor(android.app.Activity) -> getStatusBarColor
    199:203:int getToolBarColor(android.app.Activity) -> getToolBarColor
    154:155:float hue(int) -> hue
com.android.contacts.util.MaterialColorMapUtils$MaterialPalette -> com.android.contacts.util.MaterialColorMapUtils$MaterialPalette:
    95:95:void <clinit>() -> <clinit>
    41:41:void <init>(android.os.Parcel,com.android.contacts.util.MaterialColorMapUtils$1) -> <init>
    42:44:void <init>(int,int) -> <init>
    90:92:void <init>(android.os.Parcel) -> <init>
    57:64:boolean equals(java.lang.Object) -> equals
    74:75:int hashCode() -> hashCode
    86:87:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.contacts.util.MaterialColorMapUtils$MaterialPalette$1 -> com.android.contacts.util.MaterialColorMapUtils$MaterialPalette$1:
    95:95:void <init>() -> <init>
    95:95:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    98:98:com.android.contacts.util.MaterialColorMapUtils$MaterialPalette createFromParcel(android.os.Parcel) -> createFromParcel
    95:95:java.lang.Object[] newArray(int) -> newArray
    103:103:com.android.contacts.util.MaterialColorMapUtils$MaterialPalette[] newArray(int) -> newArray
com.android.contacts.util.NameConverter -> com.android.contacts.util.NameConverter:
    39:39:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    85:86:void appendQueryParameter(android.net.Uri$Builder,java.lang.String,java.lang.String) -> appendQueryParameter
    140:153:java.lang.String buildPhoneticName(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneticName
    68:79:java.lang.String fetchDisplayName(android.content.Context,android.net.Uri) -> fetchDisplayName
    109:132:com.android.contacts.model.dataitem.StructuredNameDataItem parsePhoneticName(java.lang.String,com.android.contacts.model.dataitem.StructuredNameDataItem) -> parsePhoneticName
    54:60:java.lang.String structuredNameToDisplayName(android.content.Context,android.content.ContentValues) -> structuredNameToDisplayName
com.android.contacts.util.NotifyingAsyncQueryHandler -> com.android.contacts.util.NotifyingAsyncQueryHandler:
    44:45:void <init>(android.content.Context,com.android.contacts.util.NotifyingAsyncQueryHandler$AsyncQueryListener) -> <init>
    59:63:void onQueryComplete(int,java.lang.Object,android.database.Cursor) -> onQueryComplete
    53:53:void setQueryListener(com.android.contacts.util.NotifyingAsyncQueryHandler$AsyncQueryListener) -> setQueryListener
com.android.contacts.util.PermissionsUtil -> com.android.contacts.util.PermissionsUtil:
    33:33:void <init>() -> <init>
    62:64:boolean hasAppOp(android.content.Context,java.lang.String) -> hasAppOp
    48:48:boolean hasContactsPermissions(android.content.Context) -> hasContactsPermissions
    52:52:boolean hasLocationPermissions(android.content.Context) -> hasLocationPermissions
    56:56:boolean hasPermission(android.content.Context,java.lang.String) -> hasPermission
    44:44:boolean hasPhonePermissions(android.content.Context) -> hasPhonePermissions
    105:106:void notifyPermissionGranted(android.content.Context,java.lang.String) -> notifyPermissionGranted
    96:97:void registerPermissionReceiver(android.content.Context,android.content.BroadcastReceiver,java.lang.String) -> registerPermissionReceiver
    101:101:void unregisterPermissionReceiver(android.content.Context,android.content.BroadcastReceiver) -> unregisterPermissionReceiver
com.android.contacts.util.PhoneCapabilityTester -> com.android.contacts.util.PhoneCapabilityTester:
    65:68:void initialize(android.content.Context) -> initialize
    102:103:boolean isCameraIntentRegistered(android.content.Context) -> isCameraIntentRegistered
    49:52:boolean isIntentRegistered(android.content.Context,android.content.Intent) -> isIntentRegistered
    59:61:boolean isPhone(android.content.Context) -> isPhone
    75:76:boolean isSipPhone(android.content.Context) -> isSipPhone
com.android.contacts.util.PhoneNumberFormatter -> com.android.contacts.util.PhoneNumberFormatter:
    85:87:void setPhoneNumberFormattingTextWatcher(android.content.Context,android.widget.TextView,boolean) -> setPhoneNumberFormattingTextWatcher
com.android.contacts.util.PhoneNumberFormatter$TextWatcherLoadAsyncTask -> com.android.contacts.util.PhoneNumberFormatter$TextWatcherLoadAsyncTask:
    40:43:void <init>(java.lang.String,android.widget.TextView,boolean) -> <init>
    33:33:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    48:48:android.telephony.PhoneNumberFormattingTextWatcher doInBackground(java.lang.Void[]) -> doInBackground
    33:33:void onPostExecute(java.lang.Object) -> onPostExecute
    53:62:void onPostExecute(android.telephony.PhoneNumberFormattingTextWatcher) -> onPostExecute
com.android.contacts.util.PhoneNumberHelper -> com.android.contacts.util.PhoneNumberHelper:
    44:44:boolean isUriNumber(java.lang.String) -> isUriNumber
com.android.contacts.util.SchedulingUtils -> com.android.contacts.util.SchedulingUtils:
    29:37:void doAfterLayout(android.view.View,java.lang.Runnable) -> doAfterLayout
    43:51:void doOnPreDraw(android.view.View,boolean,java.lang.Runnable) -> doOnPreDraw
com.android.contacts.util.SchedulingUtils$1 -> com.android.contacts.util.SchedulingUtils$1:
    29:29:void <init>(android.view.View,java.lang.Runnable) -> <init>
    33:34:void onGlobalLayout() -> onGlobalLayout
com.android.contacts.util.SchedulingUtils$2 -> com.android.contacts.util.SchedulingUtils$2:
    43:43:void <init>(android.view.View,java.lang.Runnable,boolean) -> <init>
    46:48:boolean onPreDraw() -> onPreDraw
com.android.contacts.util.SearchUtil -> com.android.contacts.util.SearchUtil:
    24:24:void <init>() -> <init>
    175:202:java.lang.String cleanStartAndEndOfSearchQuery(java.lang.String) -> cleanStartAndEndOfSearchQuery
    92:117:int contains(java.lang.String,java.lang.String) -> contains
    50:72:com.android.contacts.util.SearchUtil$MatchedLine findMatchingLine(java.lang.String,java.lang.String) -> findMatchingLine
    139:160:int findNextTokenStart(java.lang.String,int) -> findNextTokenStart
com.android.contacts.util.SearchUtil$MatchedLine -> com.android.contacts.util.SearchUtil$MatchedLine:
    26:28:void <init>() -> <init>
    33:33:java.lang.String toString() -> toString
com.android.contacts.util.SharedPreferenceUtil -> com.android.contacts.util.SharedPreferenceUtil:
    145:145:java.lang.String buildSharedPrefsName(java.lang.String) -> buildSharedPrefsName
    210:211:java.util.Set getDismissedSims(android.content.Context) -> getDismissedSims
    77:78:boolean getHamburgerMenuClickedBefore(android.content.Context) -> getHamburgerMenuClickedBefore
    65:66:boolean getHamburgerPromoDisplayedBefore(android.content.Context) -> getHamburgerPromoDisplayedBefore
    89:90:boolean getHamburgerPromoTriggerActionHappenedBefore(android.content.Context) -> getHamburgerPromoTriggerActionHappenedBefore
    205:206:java.util.Set getImportedSims(android.content.Context) -> getImportedSims
    125:125:int getNumOfDismissesForAutoSyncOff(android.content.Context) -> getNumOfDismissesForAutoSyncOff
    149:149:int getNumOfDismissesforAccountSyncOff(android.content.Context,java.lang.String) -> getNumOfDismissesforAccountSyncOff
    116:116:android.content.SharedPreferences getSharedPreferences(android.content.Context) -> getSharedPreferences
    121:121:java.lang.String getSharedPreferencesFilename(android.content.Context) -> getSharedPreferencesFilename
    110:112:boolean getShouldShowHamburgerPromo(android.content.Context) -> getShouldShowHamburgerPromo
    162:165:void incNumOfDismissesForAccountSyncOff(android.content.Context,java.lang.String) -> incNumOfDismissesForAccountSyncOff
    138:141:void incNumOfDismissesForAutoSyncOff(android.content.Context) -> incNumOfDismissesForAutoSyncOff
    249:249:boolean isWelcomeCardDismissed(android.content.Context) -> isWelcomeCardDismissed
    169:190:void persistSimStates(android.content.Context,java.util.Collection) -> persistSimStates
    153:157:void resetNumOfDismissesForAccountSyncOff(android.content.Context,java.lang.String) -> resetNumOfDismissesForAccountSyncOff
    129:133:void resetNumOfDismissesForAutoSyncOff(android.content.Context) -> resetNumOfDismissesForAutoSyncOff
    194:199:java.util.List restoreSimStates(android.content.Context,java.util.List) -> restoreSimStates
    82:85:void setHamburgerMenuClickedBefore(android.content.Context) -> setHamburgerMenuClickedBefore
    70:73:void setHamburgerPromoDisplayedBefore(android.content.Context) -> setHamburgerPromoDisplayedBefore
    94:97:void setHamburgerPromoTriggerActionHappenedBefore(android.content.Context) -> setHamburgerPromoTriggerActionHappenedBefore
com.android.contacts.util.StructuredPostalUtils -> com.android.contacts.util.StructuredPostalUtils:
    39:39:android.net.Uri getPostalAddressDirectionsUri(java.lang.String) -> getPostalAddressDirectionsUri
    31:31:android.net.Uri getPostalAddressUri(java.lang.String) -> getPostalAddressUri
    35:35:android.content.Intent getViewPostalAddressDirectionsIntent(java.lang.String) -> getViewPostalAddressDirectionsIntent
    27:27:android.content.Intent getViewPostalAddressIntent(java.lang.String) -> getViewPostalAddressIntent
com.android.contacts.util.SyncUtil -> com.android.contacts.util.SyncUtil:
    41:41:void <init>() -> <init>
    91:109:int calculateReasonSyncOff(android.content.Context,android.accounts.Account) -> calculateReasonSyncOff
    76:76:boolean hasSyncableAccount(com.android.contacts.model.AccountTypeManager) -> hasSyncableAccount
    81:83:boolean isAlertVisible(android.content.Context,android.accounts.Account,int) -> isAlertVisible
    57:58:boolean isAnySyncing(java.util.List) -> isAnySyncing
    117:119:boolean isNetworkConnected(android.content.Context) -> isNetworkConnected
    48:49:boolean isSyncStatusPendingOrActive(android.accounts.Account) -> isSyncStatusPendingOrActive
    69:72:boolean isUnsyncableGoogleAccount(android.accounts.Account) -> isUnsyncableGoogleAccount
com.android.contacts.util.UiClosables -> com.android.contacts.util.UiClosables:
    33:34:boolean closeQuietly(android.widget.ListPopupWindow) -> closeQuietly
com.android.contacts.util.UriUtils -> com.android.contacts.util.UriUtils:
    39:39:boolean areEqual(android.net.Uri,android.net.Uri) -> areEqual
    85:89:java.lang.String getLookupKeyFromUri(android.net.Uri) -> getLookupKeyFromUri
    59:63:boolean isEncodedContactUri(android.net.Uri) -> isEncodedContactUri
    47:47:android.net.Uri parseUriOrNull(java.lang.String) -> parseUriOrNull
com.android.contacts.util.ViewUtil -> com.android.contacts.util.ViewUtil:
    62:84:void <clinit>() -> <clinit>
    95:96:void addRectangularOutlineProvider(android.view.View,android.content.res.Resources) -> addRectangularOutlineProvider
    57:57:boolean isViewLayoutRtl(android.view.View) -> isViewLayoutRtl
    106:109:void setupFloatingActionButton(android.view.View,android.content.res.Resources) -> setupFloatingActionButton
com.android.contacts.util.ViewUtil$1 -> com.android.contacts.util.ViewUtil$1:
    63:63:void <init>() -> <init>
    66:66:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.contacts.util.ViewUtil$2 -> com.android.contacts.util.ViewUtil$2:
    77:77:void <init>() -> <init>
    80:80:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.contacts.util.WeakAsyncTask -> com.android.contacts.util.WeakAsyncTask:
    27:28:void <init>(java.lang.Object) -> <init>
    43:45:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    54:56:void onPostExecute(java.lang.Object) -> onPostExecute
    34:36:void onPreExecute() -> onPreExecute
com.android.contacts.util.concurrent.ContactsExecutors -> com.android.contacts.util.concurrent.ContactsExecutors:
    37:47:void <clinit>() -> <clinit>
    56:56:com.google.common.util.concurrent.ListeningExecutorService getDefaultThreadPoolExecutor() -> getDefaultThreadPoolExecutor
    84:90:com.google.common.util.concurrent.ListeningExecutorService getSimReadExecutor() -> getSimReadExecutor
    70:70:java.util.concurrent.ScheduledExecutorService newHandlerExecutor(android.os.Handler) -> newHandlerExecutor
    63:63:java.util.concurrent.ScheduledExecutorService newUiThreadExecutor() -> newUiThreadExecutor
com.android.contacts.util.concurrent.ContactsExecutors$HandlerExecutorService -> com.android.contacts.util.concurrent.ContactsExecutors$HandlerExecutorService:
    101:101:void <init>(android.os.Handler,com.android.contacts.util.concurrent.ContactsExecutors$1) -> <init>
    105:106:void <init>(android.os.Handler) -> <init>
    161:161:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    166:166:void execute(java.lang.Runnable) -> execute
    112:114:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    121:122:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    130:130:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    137:137:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
com.android.contacts.util.concurrent.ContactsExecutors$HandlerFuture -> com.android.contacts.util.concurrent.ContactsExecutors$HandlerFuture:
    170:170:void <init>(android.os.Handler,long,java.util.concurrent.TimeUnit,java.util.concurrent.Callable,com.android.contacts.util.concurrent.ContactsExecutors$1) -> <init>
    176:183:void <init>(android.os.Handler,long,java.util.concurrent.TimeUnit,java.util.concurrent.Callable) -> <init>
    214:215:boolean cancel(boolean) -> cancel
    170:170:int compareTo(java.lang.Object) -> compareTo
    203:204:int compareTo(java.util.concurrent.Delayed) -> compareTo
    170:170:java.lang.Object delegate() -> delegate
    209:209:java.util.concurrent.Future delegate() -> delegate
    233:233:com.android.contacts.util.concurrent.ContactsExecutors$HandlerFuture fromRunnable(android.os.Handler,long,java.util.concurrent.TimeUnit,java.lang.Runnable) -> fromRunnable
    193:198:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    220:227:void run() -> run
com.android.contacts.util.concurrent.ContactsExecutors$HandlerFuture$1 -> com.android.contacts.util.concurrent.ContactsExecutors$HandlerFuture$1:
    233:233:void <init>(java.lang.Runnable) -> <init>
    233:233:java.lang.Object call() -> call
    236:236:java.lang.Void call() -> call
com.android.contacts.util.concurrent.ListenableFutureLoader -> com.android.contacts.util.concurrent.ListenableFutureLoader:
    67:70:void <init>(android.content.Context,android.content.IntentFilter) -> <init>
    40:40:java.lang.Object access$000(com.android.contacts.util.concurrent.ListenableFutureLoader) -> access$000
    40:40:java.lang.Object access$002(com.android.contacts.util.concurrent.ListenableFutureLoader,java.lang.Object) -> access$002
    93:94:void onForceLoad() -> onForceLoad
    126:129:void onReset() -> onReset
    75:87:void onStartLoading() -> onStartLoading
    118:120:void onStopLoading() -> onStopLoading
com.android.contacts.util.concurrent.ListenableFutureLoader$1 -> com.android.contacts.util.concurrent.ListenableFutureLoader$1:
    94:94:void <init>(com.android.contacts.util.concurrent.ListenableFutureLoader) -> <init>
    106:110:void onFailure(java.lang.Throwable) -> onFailure
    97:101:void onSuccess(java.lang.Object) -> onSuccess
com.android.contacts.util.concurrent.ListenableFutureLoader$ForceLoadReceiver -> com.android.contacts.util.concurrent.ListenableFutureLoader$ForceLoadReceiver:
    150:150:void <init>(com.android.contacts.util.concurrent.ListenableFutureLoader) -> <init>
    153:153:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.contacts.vcard.CancelActivity -> com.android.contacts.vcard.CancelActivity:
    36:68:void <init>() -> <init>
    75:80:void onCreate(android.os.Bundle) -> onCreate
    87:108:android.app.Dialog onCreateDialog(int,android.os.Bundle) -> onCreateDialog
    114:123:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.android.contacts.vcard.CancelActivity$CancelListener -> com.android.contacts.vcard.CancelActivity$CancelListener:
    56:56:void <init>(com.android.contacts.vcard.CancelActivity) -> <init>
    56:56:void <init>(com.android.contacts.vcard.CancelActivity,com.android.contacts.vcard.CancelActivity$1) -> <init>
    64:64:void onCancel(android.content.DialogInterface) -> onCancel
    60:60:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.vcard.CancelActivity$RequestCancelListener -> com.android.contacts.vcard.CancelActivity$RequestCancelListener:
    48:48:void <init>(com.android.contacts.vcard.CancelActivity) -> <init>
    48:48:void <init>(com.android.contacts.vcard.CancelActivity,com.android.contacts.vcard.CancelActivity$1) -> <init>
    51:51:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.vcard.CancelRequest -> com.android.contacts.vcard.CancelRequest:
    28:30:void <init>(int,java.lang.String) -> <init>
com.android.contacts.vcard.ExportProcessor -> com.android.contacts.vcard.ExportProcessor:
    63:83:void <init>(com.android.contacts.vcard.VCardService,com.android.contacts.vcard.ExportRequest,int,java.lang.String) -> <init>
    49:49:com.android.contacts.vcard.VCardService access$000(com.android.contacts.vcard.ExportProcessor) -> access$000
    320:324:boolean cancel(boolean) -> cancel
    277:281:void doCancelNotification() -> doCancelNotification
    287:292:void doFinishNotification(java.lang.String,java.lang.String) -> doFinishNotification
    303:313:void doFinishNotificationWithShareAction(java.lang.String,java.lang.String,android.net.Uri) -> doFinishNotificationWithShareAction
    263:272:void doProgressNotification(android.net.Uri,int,int) -> doProgressNotification
    338:338:com.android.contacts.vcard.ExportRequest getRequest() -> getRequest
    329:329:boolean isCancelled() -> isCancelled
    334:334:boolean isDone() -> isDone
    245:246:boolean isLocalFile(android.net.Uri) -> isLocalFile
    95:107:void run() -> run
    112:241:void runInternal() -> runInternal
    250:256:java.lang.String translateComposerError(java.lang.String) -> translateComposerError
com.android.contacts.vcard.ExportProcessor$1 -> com.android.contacts.vcard.ExportProcessor$1:
    64:64:void <init>(com.android.contacts.vcard.ExportProcessor) -> <init>
    66:69:void handleMessage(android.os.Message) -> handleMessage
com.android.contacts.vcard.ExportRequest -> com.android.contacts.vcard.ExportRequest:
    37:40:void <init>(android.net.Uri,java.lang.String,java.lang.String) -> <init>
com.android.contacts.vcard.ExportVCardActivity -> com.android.contacts.vcard.ExportVCardActivity:
    70:70:void <clinit>() -> <clinit>
    49:67:void <init>() -> <init>
    93:106:void connectVCardService() -> connectVCardService
    119:123:android.content.Intent getCreateDocIntent() -> getCreateDocIntent
    235:244:java.lang.String getOpenableUriDisplayName(android.content.Context,android.net.Uri) -> getOpenableUriDisplayName
    112:115:boolean hasExportIntentHandler() -> hasExportIntentHandler
    135:151:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    212:213:void onCancel(android.content.DialogInterface) -> onCancel
    206:206:void onClick(android.content.DialogInterface,int) -> onClick
    77:89:void onCreate(android.os.Bundle) -> onCreate
    181:191:android.app.Dialog onCreateDialog(int,android.os.Bundle) -> onCreateDialog
    224:228:void onDestroy() -> onDestroy
    197:199:void onPrepareDialog(int,android.app.Dialog,android.os.Bundle) -> onPrepareDialog
    158:163:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    169:176:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    128:129:void showErrorDialog() -> showErrorDialog
    218:219:void unbindService(android.content.ServiceConnection) -> unbindService
com.android.contacts.vcard.ImportProcessor -> com.android.contacts.vcard.ImportProcessor:
    58:75:void <init>(com.android.contacts.vcard.VCardService,com.android.contacts.vcard.VCardImportExportListener,com.android.contacts.vcard.ImportRequest,int) -> <init>
    281:290:boolean cancel(boolean) -> cancel
    295:295:boolean isCancelled() -> isCancelled
    301:301:boolean isDone() -> isDone
    90:95:void onEntryCreated(com.android.vcard.VCardEntry) -> onEntryCreated
    220:272:boolean readOneVCard(java.io.InputStream,int,java.lang.String,com.android.vcard.VCardInterpreter,int[]) -> readOneVCard
    109:120:void run() -> run
    124:212:void runInternal() -> runInternal
com.android.contacts.vcard.ImportRequest -> com.android.contacts.vcard.ImportRequest:
    101:109:void <init>(com.android.contacts.model.account.AccountWithDataSet,byte[],android.net.Uri,java.lang.String,int,java.lang.String,int,int) -> <init>
com.android.contacts.vcard.ImportVCardActivity -> com.android.contacts.vcard.ImportVCardActivity:
    78:144:void <init>() -> <init>
    78:78:java.lang.String access$002(com.android.contacts.vcard.ImportVCardActivity,java.lang.String) -> access$002
    78:78:com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread access$200(com.android.contacts.vcard.ImportVCardActivity) -> access$200
    78:78:com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread access$202(com.android.contacts.vcard.ImportVCardActivity,com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread) -> access$202
    78:78:com.android.contacts.vcard.ImportVCardActivity$ImportRequestConnection access$300(com.android.contacts.vcard.ImportVCardActivity) -> access$300
    78:78:android.app.ProgressDialog access$400(com.android.contacts.vcard.ImportVCardActivity) -> access$400
    78:78:android.app.ProgressDialog access$402(com.android.contacts.vcard.ImportVCardActivity,android.app.ProgressDialog) -> access$402
    78:78:com.android.contacts.model.account.AccountWithDataSet access$500(com.android.contacts.vcard.ImportVCardActivity) -> access$500
    454:490:android.net.Uri copyTo(android.net.Uri,java.lang.String) -> copyTo
    420:445:java.lang.String getDisplayName(android.net.Uri) -> getDisplayName
    400:400:void importVCard(android.net.Uri,java.lang.String) -> importVCard
    404:404:void importVCard(android.net.Uri[],java.lang.String[]) -> importVCard
    635:639:boolean isCallerSelf(android.app.Activity) -> isCallerSelf
    542:542:boolean isStorageUri(android.net.Uri) -> isStorageUri
    656:725:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    547:618:void onCreate(android.os.Bundle) -> onCreate
    748:774:android.app.Dialog onCreateDialog(int,android.os.Bundle) -> onCreateDialog
    644:644:void onImportVCardConfirmed(android.net.Uri,java.lang.String) -> onImportVCardConfirmed
    649:649:void onImportVCardDenied() -> onImportVCardDenied
    790:793:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    504:525:java.lang.String readUriToLocalFile(android.net.Uri) -> readUriToLocalFile
    533:537:android.net.Uri readUriToLocalUri(android.net.Uri) -> readUriToLocalUri
    799:806:void showFailureNotification(int) -> showFailureNotification
    733:741:void startImport(android.net.Uri,java.lang.String) -> startImport
    778:784:void startVCardService() -> startVCardService
com.android.contacts.vcard.ImportVCardActivity$1 -> com.android.contacts.vcard.ImportVCardActivity$1:
    404:404:void <init>(com.android.contacts.vcard.ImportVCardActivity,android.net.Uri[],java.lang.String[]) -> <init>
    407:410:void run() -> run
com.android.contacts.vcard.ImportVCardActivity$2 -> com.android.contacts.vcard.ImportVCardActivity$2:
    806:806:void <init>(com.android.contacts.vcard.ImportVCardActivity) -> <init>
    809:810:void run() -> run
com.android.contacts.vcard.ImportVCardActivity$CancelListener -> com.android.contacts.vcard.ImportVCardActivity$CancelListener:
    132:132:void <init>(com.android.contacts.vcard.ImportVCardActivity) -> <init>
    132:132:void <init>(com.android.contacts.vcard.ImportVCardActivity,com.android.contacts.vcard.ImportVCardActivity$1) -> <init>
    140:140:void onCancel(android.content.DialogInterface) -> onCancel
    136:136:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.vcard.ImportVCardActivity$DialogDisplayer -> com.android.contacts.vcard.ImportVCardActivity$DialogDisplayer:
    120:122:void <init>(com.android.contacts.vcard.ImportVCardActivity,java.lang.String) -> <init>
    126:127:void run() -> run
com.android.contacts.vcard.ImportVCardActivity$ImportRequestConnection -> com.android.contacts.vcard.ImportVCardActivity$ImportRequestConnection:
    146:146:void <init>(com.android.contacts.vcard.ImportVCardActivity) -> <init>
    146:146:void <init>(com.android.contacts.vcard.ImportVCardActivity,com.android.contacts.vcard.ImportVCardActivity$1) -> <init>
    156:160:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    165:165:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    150:151:void sendImportRequest(java.util.List) -> sendImportRequest
com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread -> com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread:
    187:197:void <init>(com.android.contacts.vcard.ImportVCardActivity,android.net.Uri[],java.lang.String[]) -> <init>
    386:388:void cancel() -> cancel
    318:378:com.android.contacts.vcard.ImportRequest constructImportRequest(byte[],android.net.Uri,java.lang.String) -> constructImportRequest
    202:204:void finalize() -> finalize
    382:382:android.net.Uri[] getSourceUris() -> getSourceUris
    394:395:void onCancel(android.content.DialogInterface) -> onCancel
    210:302:void run() -> run
com.android.contacts.vcard.ImportVCardDialogFragment -> com.android.contacts.vcard.ImportVCardDialogFragment:
    29:29:void <init>() -> <init>
    65:89:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    49:60:void show(android.app.Activity,android.net.Uri,java.lang.String) -> show
com.android.contacts.vcard.ImportVCardDialogFragment$1 -> com.android.contacts.vcard.ImportVCardDialogFragment$1:
    80:80:void <init>(com.android.contacts.vcard.ImportVCardDialogFragment) -> <init>
    83:85:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.vcard.ImportVCardDialogFragment$2 -> com.android.contacts.vcard.ImportVCardDialogFragment$2:
    71:71:void <init>(com.android.contacts.vcard.ImportVCardDialogFragment,android.net.Uri,java.lang.String) -> <init>
    74:76:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.vcard.NfcImportVCardActivity -> com.android.contacts.vcard.NfcImportVCardActivity:
    59:67:void <init>() -> <init>
    109:155:com.android.contacts.vcard.ImportRequest createImportRequest() -> createImportRequest
    214:220:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    171:207:void onCreate(android.os.Bundle) -> onCreate
    260:265:void onImportFailed(com.android.contacts.vcard.ImportRequest) -> onImportFailed
    245:254:void onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri) -> onImportFinished
    160:161:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    290:297:void showFailureNotification(int) -> showFailureNotification
    227:229:void startImport() -> startImport
com.android.contacts.vcard.NfcImportVCardActivity$1 -> com.android.contacts.vcard.NfcImportVCardActivity$1:
    297:297:void <init>(com.android.contacts.vcard.NfcImportVCardActivity) -> <init>
    300:301:void run() -> run
com.android.contacts.vcard.NfcImportVCardActivity$ImportTask -> com.android.contacts.vcard.NfcImportVCardActivity$ImportTask:
    74:74:void <init>(com.android.contacts.vcard.NfcImportVCardActivity) -> <init>
    74:74:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    77:84:com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[]) -> doInBackground
    90:90:void onCancelled() -> onCancelled
    74:74:void onPostExecute(java.lang.Object) -> onPostExecute
    97:99:void onPostExecute(com.android.contacts.vcard.ImportRequest) -> onPostExecute
com.android.contacts.vcard.NotificationImportExportListener -> com.android.contacts.vcard.NotificationImportExportListener:
    58:62:void <init>(android.app.Activity) -> <init>
    250:258:android.app.Notification constructCancelNotification(android.content.Context,java.lang.String) -> constructCancelNotification
    270:279:android.app.Notification constructFinishNotification(android.content.Context,java.lang.String,java.lang.String,android.content.Intent) -> constructFinishNotification
    290:298:android.app.Notification constructImportFailureNotification(android.content.Context,java.lang.String) -> constructImportFailureNotification
    213:239:android.app.Notification constructProgressNotification(android.content.Context,int,java.lang.String,java.lang.String,int,java.lang.String,int,int) -> constructProgressNotification
    67:68:boolean handleMessage(android.os.Message) -> handleMessage
    181:184:void onCancelRequest(com.android.contacts.vcard.CancelRequest,int) -> onCancelRequest
    174:175:void onExportFailed(com.android.contacts.vcard.ExportRequest) -> onExportFailed
    163:168:android.app.Notification onExportProcessed(com.android.contacts.vcard.ExportRequest,int) -> onExportProcessed
    153:157:void onImportCanceled(com.android.contacts.vcard.ImportRequest,int) -> onImportCanceled
    147:148:void onImportFailed(com.android.contacts.vcard.ImportRequest) -> onImportFailed
    122:139:void onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri) -> onImportFinished
    102:115:android.app.Notification onImportParsed(com.android.contacts.vcard.ImportRequest,int,com.android.vcard.VCardEntry,int,int) -> onImportParsed
    77:95:android.app.Notification onImportProcessed(com.android.contacts.vcard.ImportRequest,int,int) -> onImportProcessed
com.android.contacts.vcard.ProcessorBase -> com.android.contacts.vcard.ProcessorBase:
    34:34:void <init>() -> <init>
    65:65:java.lang.Object get() -> get
    73:73:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
com.android.contacts.vcard.SelectAccountActivity -> com.android.contacts.vcard.SelectAccountActivity:
    32:32:void <init>() -> <init>
    53:98:void onCreate(android.os.Bundle) -> onCreate
    105:113:android.app.Dialog onCreateDialog(int,android.os.Bundle) -> onCreateDialog
com.android.contacts.vcard.SelectAccountActivity$1 -> com.android.contacts.vcard.SelectAccountActivity$1:
    85:85:void <init>(com.android.contacts.vcard.SelectAccountActivity,android.app.Activity,java.util.List,int) -> <init>
    88:95:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.vcard.SelectAccountActivity$CancelListener -> com.android.contacts.vcard.SelectAccountActivity$CancelListener:
    39:39:void <init>(com.android.contacts.vcard.SelectAccountActivity) -> <init>
    39:39:void <init>(com.android.contacts.vcard.SelectAccountActivity,com.android.contacts.vcard.SelectAccountActivity$1) -> <init>
    45:45:void onCancel(android.content.DialogInterface) -> onCancel
    42:42:void onClick(android.content.DialogInterface,int) -> onClick
com.android.contacts.vcard.ShareVCardActivity -> com.android.contacts.vcard.ShareVCardActivity:
    37:40:void <init>() -> <init>
    79:82:void clearExportFiles() -> clearExportFiles
    88:91:java.io.File getLocalFile() -> getLocalFile
    45:68:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.android.contacts.vcard.VCardService -> com.android.contacts.vcard.VCardService:
    46:109:void <init>() -> <init>
    46:46:void access$000(com.android.contacts.vcard.VCardService,com.android.contacts.vcard.VCardService$CustomMediaScannerConnectionClient) -> access$000
    377:382:void cancelAllRequestsAndShutdown() -> cancelAllRequestsAndShutdown
    388:392:void clearCache() -> clearCache
    236:261:void handleCancelRequest(com.android.contacts.vcard.CancelRequest,com.android.contacts.vcard.VCardImportExportListener) -> handleCancelRequest
    188:213:void handleExportRequest(com.android.contacts.vcard.ExportRequest,com.android.contacts.vcard.VCardImportExportListener) -> handleExportRequest
    354:368:void handleFinishExportNotification(int,boolean) -> handleFinishExportNotification
    344:346:void handleFinishImportNotification(int,boolean) -> handleFinishImportNotification
    163:184:void handleImportRequest(java.util.List,com.android.contacts.vcard.VCardImportExportListener) -> handleImportRequest
    138:138:android.os.IBinder onBind(android.content.Intent) -> onBind
    120:121:void onCreate() -> onCreate
    144:147:void onDestroy() -> onDestroy
    127:131:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    334:336:void removeConnectionClient(com.android.contacts.vcard.VCardService$CustomMediaScannerConnectionClient) -> removeConnectionClient
    269:311:void stopServiceIfAppropriate() -> stopServiceIfAppropriate
    225:230:boolean tryExecute(com.android.contacts.vcard.ProcessorBase) -> tryExecute
    318:327:void updateMediaScanner(java.lang.String) -> updateMediaScanner
com.android.contacts.vcard.VCardService$CustomMediaScannerConnectionClient -> com.android.contacts.vcard.VCardService$CustomMediaScannerConnectionClient:
    66:68:void <init>(com.android.contacts.vcard.VCardService,java.lang.String) -> <init>
    78:78:void onMediaScannerConnected() -> onMediaScannerConnected
    84:85:void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
    72:72:void start() -> start
com.android.contacts.vcard.VCardService$MyBinder -> com.android.contacts.vcard.VCardService$MyBinder:
    112:112:void <init>(com.android.contacts.vcard.VCardService) -> <init>
    114:114:com.android.contacts.vcard.VCardService getService() -> getService
com.android.contacts.widget.ActivityTouchLinearLayout -> com.android.contacts.widget.ActivityTouchLinearLayout:
    34:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:40:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.android.contacts.widget.CompositeListAdapter -> com.android.contacts.widget.CompositeListAdapter:
    60:60:void <init>() -> <init>
    38:66:void <init>(int) -> <init>
    71:99:void addAdapter(android.widget.ListAdapter) -> addAdapter
    206:207:boolean areAllItemsEnabled() -> areAllItemsEnabled
    115:131:void ensureCacheValid() -> ensureCacheValid
    135:136:int getCount() -> getCount
    140:150:java.lang.Object getItem(int) -> getItem
    154:164:long getItemId(int) -> getItemId
    175:187:int getItemViewType(int) -> getItemViewType
    191:201:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    169:170:int getViewTypeCount() -> getViewTypeCount
    111:111:void invalidate() -> invalidate
    212:223:boolean isEnabled(int) -> isEnabled
    103:106:void notifyDataChanged() -> notifyDataChanged
com.android.contacts.widget.CompositeListAdapter$1 -> com.android.contacts.widget.CompositeListAdapter$1:
    44:44:void <init>(com.android.contacts.widget.CompositeListAdapter) -> <init>
    48:49:void onChanged() -> onChanged
    54:55:void onInvalidated() -> onInvalidated
com.android.contacts.widget.FloatingActionButtonController -> com.android.contacts.widget.FloatingActionButtonController:
    51:63:void <init>(android.app.Activity,android.view.View,android.widget.ImageButton) -> <init>
    179:182:void resetIn() -> resetIn
    169:171:void scaleIn(int) -> scaleIn
    190:193:void scaleOut() -> scaleOut
    82:82:void setVisible(boolean) -> setVisible
com.android.contacts.widget.MultiShrinkScroller -> com.android.contacts.widget.MultiShrinkScroller:
    225:225:void <clinit>() -> <clinit>
    238:238:void <init>(android.content.Context) -> <init>
    242:242:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    97:286:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:66:int access$000(com.android.contacts.widget.MultiShrinkScroller) -> access$000
    66:66:com.android.contacts.widget.MultiShrinkScroller$MultiShrinkScrollerListener access$100(com.android.contacts.widget.MultiShrinkScroller) -> access$100
    66:66:android.view.View access$1000(com.android.contacts.widget.MultiShrinkScroller) -> access$1000
    66:66:com.android.contacts.widget.MultiShrinkScroller$MultiShrinkScrollerListener access$102(com.android.contacts.widget.MultiShrinkScroller,com.android.contacts.widget.MultiShrinkScroller$MultiShrinkScrollerListener) -> access$102
    66:66:int access$1100(com.android.contacts.widget.MultiShrinkScroller) -> access$1100
    66:66:int access$1102(com.android.contacts.widget.MultiShrinkScroller,int) -> access$1102
    66:66:android.widget.TextView access$1200(com.android.contacts.widget.MultiShrinkScroller) -> access$1200
    66:66:int access$1302(com.android.contacts.widget.MultiShrinkScroller,int) -> access$1302
    66:66:int access$1402(com.android.contacts.widget.MultiShrinkScroller,int) -> access$1402
    66:66:float access$1500(com.android.contacts.widget.MultiShrinkScroller) -> access$1500
    66:66:int access$1600(com.android.contacts.widget.MultiShrinkScroller) -> access$1600
    66:66:android.widget.TextView access$1700(com.android.contacts.widget.MultiShrinkScroller) -> access$1700
    66:66:void access$1800(com.android.contacts.widget.MultiShrinkScroller) -> access$1800
    66:66:void access$1900(com.android.contacts.widget.MultiShrinkScroller) -> access$1900
    66:66:void access$200(com.android.contacts.widget.MultiShrinkScroller) -> access$200
    66:66:void access$2000(com.android.contacts.widget.MultiShrinkScroller) -> access$2000
    66:66:boolean access$300(com.android.contacts.widget.MultiShrinkScroller) -> access$300
    66:66:int access$400(com.android.contacts.widget.MultiShrinkScroller) -> access$400
    66:66:int access$402(com.android.contacts.widget.MultiShrinkScroller,int) -> access$402
    66:66:android.view.View access$500(com.android.contacts.widget.MultiShrinkScroller) -> access$500
    66:66:int access$602(com.android.contacts.widget.MultiShrinkScroller,int) -> access$602
    66:66:int access$702(com.android.contacts.widget.MultiShrinkScroller,int) -> access$702
    66:66:int access$800(com.android.contacts.widget.MultiShrinkScroller) -> access$800
    66:66:int access$902(com.android.contacts.widget.MultiShrinkScroller,int) -> access$902
    1240:1247:android.graphics.ColorMatrix alphaMatrix(float,int) -> alphaMatrix
    1101:1109:void calculateCollapsedLargeTitlePadding() -> calculateCollapsedLargeTitlePadding
    1227:1229:float calculateHeightRatioToBlendingStartHeight(int) -> calculateHeightRatioToBlendingStartHeight
    1222:1222:float calculateHeightRatioToFullyOpen(int) -> calculateHeightRatioToFullyOpen
    860:883:void computeScroll() -> computeScroll
    403:414:void configureGradientViewHeights() -> configureGradientViewHeights
    890:934:void draw(android.graphics.Canvas) -> draw
    578:585:void expandHeader() -> expandHeader
    949:954:void fling(float) -> fling
    939:943:float getCurrentVelocity() -> getCurrentVelocity
    1006:1007:int getFullyCompressedHeaderHeight() -> getFullyCompressedHeaderHeight
    802:802:int getHeaderHeight() -> getHeaderHeight
    958:968:int getMaximumScrollUpwards() -> getMaximumScrollUpwards
    822:822:int getMaximumScrollableHeaderHeight() -> getMaximumScrollableHeaderHeight
    1014:1015:int getOverflowingChildViewSize() -> getOverflowingChildViewSize
    816:818:int getScroll() -> getScroll
    846:846:int getScrollNeededToBeFullScreen() -> getScrollNeededToBeFullScreen
    854:854:int getScrollUntilOffBottom() -> getScrollUntilOffBottom
    837:839:int getScroll_ignoreOversizedHeaderForSnapping() -> getScroll_ignoreOversizedHeaderForSnapping
    687:687:float getStartingTransparentHeightRatio() -> getStartingTransparentHeightRatio
    784:784:int getToolbarHeight() -> getToolbarHeight
    691:693:float getTransparentHeightRatio(int) -> getTransparentHeightRatio
    973:973:int getTransparentViewHeight() -> getTransparentViewHeight
    294:340:void initialize(com.android.contacts.widget.MultiShrinkScroller$MultiShrinkScrollerListener,boolean,int,boolean) -> initialize
    1273:1274:boolean motionShouldStartDrag(android.view.MotionEvent) -> motionShouldStartDrag
    1256:1260:android.graphics.ColorMatrix multiplyBlendMatrix(int,float) -> multiplyBlendMatrix
    618:625:void onDragFinished(int) -> onDragFinished
    459:465:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    506:556:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1355:1360:void prepareForShrinkingScrollChild(int) -> prepareForShrinkingScrollChild
    1019:1036:void scrollDown(int) -> scrollDown
    697:710:void scrollOffBottom() -> scrollOffBottom
    743:762:void scrollTo(int,int) -> scrollTo
    982:998:void scrollUp(int) -> scrollUp
    720:738:void scrollUpForEntranceAnimation(boolean) -> scrollUpForEntranceAnimation
    1371:1371:void setDisableTouchesForSuppressLayout(boolean) -> setDisableTouchesForSuppressLayout
    792:797:void setHeaderHeight(int) -> setHeaderHeight
    564:570:void setHeaderTintColor(int) -> setHeaderTintColor
    1118:1139:void setInterpolatedTitleMargins(float) -> setInterpolatedTitleMargins
    428:440:void setPhoneticName(java.lang.String) -> setPhoneticName
    446:453:void setPhoneticNameGone() -> setPhoneticNameGone
    807:807:void setScroll(int) -> setScroll
    418:423:void setTitle(java.lang.String,boolean) -> setTitle
    773:779:void setToolbarHeight(int) -> setToolbarHeight
    977:978:void setTransparentViewHeight(int) -> setTransparentViewHeight
    680:680:boolean shouldDismissOnScroll() -> shouldDismissOnScroll
    469:495:boolean shouldStartDrag(android.view.MotionEvent) -> shouldStartDrag
    1294:1298:void smoothScrollBy(int) -> smoothScrollBy
    664:671:void snapToBottomOnDragFinished() -> snapToBottomOnDragFinished
    635:654:boolean snapToTopOnDragFinished(int) -> snapToTopOnDragFinished
    591:592:void startDrag() -> startDrag
    596:614:void stopDrag(boolean) -> stopDrag
    1053:1091:void updateHeaderTextSizeAndMargin() -> updateHeaderTextSizeAndMargin
    1268:1269:void updateLastEventPosition(android.view.MotionEvent) -> updateLastEventPosition
    1144:1218:void updatePhotoTintAndDropShadow() -> updatePhotoTintAndDropShadow
    1279:1287:float updatePositionAndComputeDelta(android.view.MotionEvent) -> updatePositionAndComputeDelta
com.android.contacts.widget.MultiShrinkScroller$1 -> com.android.contacts.widget.MultiShrinkScroller$1:
    208:208:void <init>(com.android.contacts.widget.MultiShrinkScroller) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.contacts.widget.MultiShrinkScroller$2 -> com.android.contacts.widget.MultiShrinkScroller$2:
    225:225:void <init>() -> <init>
com.android.contacts.widget.MultiShrinkScroller$3 -> com.android.contacts.widget.MultiShrinkScroller$3:
    306:306:void <init>(com.android.contacts.widget.MultiShrinkScroller) -> <init>
    309:309:void onClick(android.view.View) -> onClick
com.android.contacts.widget.MultiShrinkScroller$4 -> com.android.contacts.widget.MultiShrinkScroller$4:
    312:312:void <init>(com.android.contacts.widget.MultiShrinkScroller) -> <init>
    315:315:void onClick(android.view.View) -> onClick
com.android.contacts.widget.MultiShrinkScroller$5 -> com.android.contacts.widget.MultiShrinkScroller$5:
    332:332:void <init>(com.android.contacts.widget.MultiShrinkScroller) -> <init>
    335:335:void onClick(android.view.View) -> onClick
com.android.contacts.widget.MultiShrinkScroller$6 -> com.android.contacts.widget.MultiShrinkScroller$6:
    340:340:void <init>(com.android.contacts.widget.MultiShrinkScroller,boolean,int) -> <init>
    343:397:void run() -> run
com.android.contacts.widget.MultiShrinkScroller$7 -> com.android.contacts.widget.MultiShrinkScroller$7:
    730:730:void <init>(com.android.contacts.widget.MultiShrinkScroller,int) -> <init>
    733:734:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.contacts.widget.MultiShrinkScroller$8 -> com.android.contacts.widget.MultiShrinkScroller$8:
    1036:1036:void <init>(com.android.contacts.widget.MultiShrinkScroller) -> <init>
    1039:1042:void run() -> run
com.android.contacts.widget.MultiShrinkScroller$AcceleratingFlingInterpolator -> com.android.contacts.widget.MultiShrinkScroller$AcceleratingFlingInterpolator:
    1316:1320:void <init>(com.android.contacts.widget.MultiShrinkScroller,int,float,int) -> <init>
    1346:1346:long getFrameIntervalMs() -> getFrameIntervalMs
    1325:1335:float getInterpolation(float) -> getInterpolation
    1340:1342:float getRefreshRate() -> getRefreshRate
com.android.contacts.widget.QuickContactImageView -> com.android.contacts.widget.QuickContactImageView:
    30:30:void <init>(android.content.Context) -> <init>
    34:34:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    87:87:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    53:53:boolean isBasedOffLetterTile() -> isBasedOffLetterTile
    65:82:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    57:57:void setIsBusiness(boolean) -> setIsBusiness
    42:49:void setTint(int) -> setTint
com.android.contacts.widget.SelectPhoneAccountDialogFragment$SelectPhoneAccountListener -> com.android.contacts.widget.SelectPhoneAccountDialogFragment$SelectPhoneAccountListener:
    123:123:void <init>() -> <init>
    129:134:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.android.contacts.widget.TouchlessScrollView -> com.android.contacts.widget.TouchlessScrollView:
    18:18:void <init>(android.content.Context) -> <init>
    22:22:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:26:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    33:36:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.android.contactsbind.FeedbackHelper -> com.android.contactsbind.FeedbackHelper:
    22:22:void sendFeedback(android.content.Context,java.lang.String,java.lang.String,java.lang.Throwable) -> sendFeedback
com.android.contactsbind.ObjectFactory -> com.android.contactsbind.ObjectFactory:
    33:33:com.android.contacts.util.DeviceLocalAccountTypeFactory getDeviceLocalAccountTypeFactory(android.content.Context) -> getDeviceLocalAccountTypeFactory
com.android.contactsbind.experiments.Flags -> com.android.contactsbind.experiments.Flags:
    38:39:void <init>() -> <init>
    43:43:boolean getBoolean(java.lang.String) -> getBoolean
    32:35:com.android.contactsbind.experiments.Flags getInstance() -> getInstance
    47:47:int getInteger(java.lang.String) -> getInteger
com.android.ex.editstyledtext.EditStyledText$SavedStyledTextState -> com.android.ex.editstyledtext.EditStyledText$SavedStyledTextState:
    2008:2009:java.lang.String toString() -> toString
    2002:2003:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.ex.editstyledtext.EditStyledText$SoftKeyReceiver -> com.android.ex.editstyledtext.EditStyledText$SoftKeyReceiver:
    1988:1988:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.android.phone.common.R$styleable -> com.android.phone.common.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
com.android.phone.common.animation.AnimUtils -> com.android.phone.common.animation.AnimUtils:
    34:38:void <clinit>() -> <clinit>
    90:119:void fadeIn(android.view.View,int,int,com.android.phone.common.animation.AnimUtils$AnimationCallback) -> fadeIn
    57:81:void fadeOut(android.view.View,int,com.android.phone.common.animation.AnimUtils$AnimationCallback) -> fadeOut
    129:141:void scaleIn(android.view.View,int,int) -> scaleIn
    173:190:void scaleInternal(android.view.View,int,int,int,int,android.animation.AnimatorListenerAdapter,android.view.animation.Interpolator) -> scaleInternal
    152:166:void scaleOut(android.view.View,int) -> scaleOut
com.android.phone.common.animation.AnimUtils$1 -> com.android.phone.common.animation.AnimUtils$1:
    60:60:void <init>(android.view.View,com.android.phone.common.animation.AnimUtils$AnimationCallback) -> <init>
    71:72:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    63:63:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.phone.common.animation.AnimUtils$2 -> com.android.phone.common.animation.AnimUtils$2:
    95:95:void <init>(android.view.View,com.android.phone.common.animation.AnimUtils$AnimationCallback) -> <init>
    103:103:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    98:98:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.phone.common.animation.AnimUtils$3 -> com.android.phone.common.animation.AnimUtils$3:
    129:129:void <init>(android.view.View) -> <init>
    137:138:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    132:132:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.phone.common.animation.AnimUtils$4 -> com.android.phone.common.animation.AnimUtils$4:
    152:152:void <init>(android.view.View) -> <init>
    160:162:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    155:155:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.phone.common.compat.PathInterpolatorCompat -> com.android.phone.common.compat.PathInterpolatorCompat:
    28:31:android.view.animation.Interpolator create(float,float,float,float) -> create
com.android.phone.common.compat.PathInterpolatorCompat$PathInterpolatorBase -> com.android.phone.common.compat.PathInterpolatorCompat$PathInterpolatorBase:
    43:58:void <init>(android.graphics.Path) -> <init>
    68:68:void <init>(float,float,float,float) -> <init>
    114:116:android.graphics.Path createCubic(float,float,float,float) -> createCubic
    81:100:float getInterpolation(float) -> getInterpolation
com.android.phone.common.dialpad.DialpadKeyButton -> com.android.phone.common.dialpad.DialpadKeyButton:
    48:48:void <clinit>() -> <clinit>
    54:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:91:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:46:void access$000(com.android.phone.common.dialpad.DialpadKeyButton,boolean) -> access$000
    46:46:java.lang.CharSequence access$100(com.android.phone.common.dialpad.DialpadKeyButton) -> access$100
    228:231:void cancelLongHover() -> cancelLongHover
    95:95:void initForAccessibility(android.content.Context) -> initForAccessibility
    148:191:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    126:131:void onSizeChanged(int,int,int,int) -> onSizeChanged
    137:141:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    109:112:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    100:103:void setLongHoverContentDescription(java.lang.CharSequence) -> setLongHoverContentDescription
    214:222:void setLongHovered(boolean) -> setLongHovered
    118:120:void setPressed(boolean) -> setPressed
    200:210:void simulateClickForAccessibility() -> simulateClickForAccessibility
com.android.phone.common.dialpad.DialpadKeyButton$1 -> com.android.phone.common.dialpad.DialpadKeyButton$1:
    157:157:void <init>(com.android.phone.common.dialpad.DialpadKeyButton) -> <init>
    160:161:void run() -> run
com.android.phone.common.dialpad.DialpadTextView -> com.android.phone.common.dialpad.DialpadTextView:
    35:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:55:void draw(android.graphics.Canvas) -> draw
    64:70:void onMeasure(int,int) -> onMeasure
com.android.phone.common.dialpad.DialpadView -> com.android.phone.common.dialpad.DialpadView:
    54:54:void <clinit>() -> <clinit>
    90:90:void <init>(android.content.Context) -> <init>
    94:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:109:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    219:222:android.graphics.drawable.Drawable getDrawableCompat(android.content.Context,int) -> getDrawableCompat
    115:127:void onFinishInflate() -> onFinishInflate
    132:214:void setupKeypad() -> setupKeypad
com.android.phone.common.dialpad.DigitsEditText -> com.android.phone.common.dialpad.DigitsEditText:
    39:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:50:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    56:61:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.phone.common.util.ViewUtil -> com.android.phone.common.util.ViewUtil:
    62:62:void <clinit>() -> <clinit>
    96:103:void resizeText(android.widget.TextView,int,int) -> resizeText
com.android.phone.common.util.ViewUtil$1 -> com.android.phone.common.util.ViewUtil$1:
    62:62:void <init>() -> <init>
    65:65:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.phone.common.widget.ResizingTextEditText -> com.android.phone.common.widget.ResizingTextEditText:
    33:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:56:void onSizeChanged(int,int,int,int) -> onSizeChanged
    46:48:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.android.vcard.JapaneseUtils -> com.android.vcard.JapaneseUtils:
    26:364:void <clinit>() -> <clinit>
    373:374:java.lang.String tryGetHalfWidthText(char) -> tryGetHalfWidthText
com.android.vcard.VCardBuilder -> com.android.vcard.VCardBuilder:
    75:991:void <clinit>() -> <clinit>
    134:186:void <init>(int,java.lang.String) -> <init>
    1826:1869:void appendAndroidSpecificProperty(java.lang.String,android.content.ContentValues) -> appendAndroidSpecificProperty
    1527:1568:void appendEmailLine(int,java.lang.String,java.lang.String,boolean) -> appendEmailLine
    933:958:com.android.vcard.VCardBuilder appendEmails(java.util.List) -> appendEmails
    1377:1423:com.android.vcard.VCardBuilder appendEvents(java.util.List) -> appendEvents
    1180:1232:com.android.vcard.VCardBuilder appendIms(java.util.List) -> appendIms
    1909:1909:void appendLine(java.lang.String,java.lang.String) -> appendLine
    1919:1919:void appendLine(java.lang.String,java.lang.String,boolean,boolean) -> appendLine
    1930:1953:void appendLine(java.lang.String,java.util.List,java.lang.String,boolean,boolean) -> appendLine
    1874:1874:void appendLineWithCharsetAndQPDetection(java.lang.String,java.lang.String) -> appendLineWithCharsetAndQPDetection
    1885:1889:void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List,java.lang.String) -> appendLineWithCharsetAndQPDetection
    377:524:com.android.vcard.VCardBuilder appendNameProperties(java.util.List) -> appendNameProperties
    272:367:com.android.vcard.VCardBuilder appendNamePropertiesV40(java.util.List) -> appendNamePropertiesV40
    762:779:com.android.vcard.VCardBuilder appendNickNames(java.util.List) -> appendNickNames
    1326:1362:com.android.vcard.VCardBuilder appendNotes(java.util.List) -> appendNotes
    1258:1292:com.android.vcard.VCardBuilder appendOrganizations(java.util.List) -> appendOrganizations
    790:879:com.android.vcard.VCardBuilder appendPhones(java.util.List,com.android.vcard.VCardPhoneNumberTranslationCallback) -> appendPhones
    562:755:void appendPhoneticNameFields(android.content.ContentValues) -> appendPhoneticNameFields
    1735:1768:void appendPhotoLine(java.lang.String,java.lang.String) -> appendPhotoLine
    1301:1317:com.android.vcard.VCardBuilder appendPhotos(java.util.List) -> appendPhotos
    1451:1519:void appendPostalLine(int,java.lang.String,android.content.ContentValues,boolean,boolean) -> appendPostalLine
    965:977:com.android.vcard.VCardBuilder appendPostals(java.util.List) -> appendPostals
    1002:1026:void appendPostalsForDoCoMo(java.util.List) -> appendPostalsForDoCoMo
    1030:1042:void appendPostalsForGeneric(java.util.List) -> appendPostalsForGeneric
    1430:1435:com.android.vcard.VCardBuilder appendRelation(java.util.List) -> appendRelation
    1780:1817:com.android.vcard.VCardBuilder appendSipAddresses(java.util.List) -> appendSipAddresses
    1574:1709:void appendTelLine(java.lang.Integer,java.lang.String,java.lang.String,boolean) -> appendTelLine
    2042:2042:void appendTypeParameter(java.lang.String) -> appendTypeParameter
    2050:2054:void appendTypeParameter(java.lang.StringBuilder,java.lang.String) -> appendTypeParameter
    2009:2033:void appendTypeParameters(java.util.List) -> appendTypeParameters
    1716:1725:void appendUncommonPhoneType(java.lang.StringBuilder,java.lang.Integer) -> appendUncommonPhoneType
    1240:1249:com.android.vcard.VCardBuilder appendWebsites(java.util.List) -> appendWebsites
    529:550:void buildSinglePartNameField(java.lang.String,java.lang.String) -> buildSinglePartNameField
    190:201:void clear() -> clear
    206:222:boolean containsNonEmptyName(android.content.ContentValues) -> containsNonEmptyName
    2083:2117:java.lang.String encodeQuotedPrintable(java.lang.String) -> encodeQuotedPrintable
    2128:2192:java.lang.String escapeCharacters(java.lang.String) -> escapeCharacters
    229:260:android.content.ContentValues getPrimaryContentValueWithStructuredName(java.util.List) -> getPrimaryContentValueWithStructuredName
    2071:2075:boolean shouldAppendCharsetParam(java.lang.String[]) -> shouldAppendCharsetParam
    911:925:java.util.List splitPhoneNumbers(java.lang.String) -> splitPhoneNumbers
    2197:2207:java.lang.String toString() -> toString
    1065:1174:com.android.vcard.VCardBuilder$PostalStruct tryConstructPostalStruct(android.content.ContentValues) -> tryConstructPostalStruct
com.android.vcard.VCardBuilder$PostalStruct -> com.android.vcard.VCardBuilder$PostalStruct:
    1051:1054:void <init>(boolean,boolean,java.lang.String) -> <init>
com.android.vcard.VCardComposer -> com.android.vcard.VCardComposer:
    121:159:void <clinit>() -> <clinit>
    183:183:void <init>(android.content.Context,int,boolean) -> <init>
    196:196:void <init>(android.content.Context,int,java.lang.String,boolean) -> <init>
    149:238:void <init>(android.content.Context,android.content.ContentResolver,int,java.lang.String,boolean) -> <init>
    598:618:java.lang.String buildVCard(java.util.Map) -> buildVCard
    628:634:void closeCursorIfAppropriate() -> closeCursorIfAppropriate
    452:452:java.lang.String createOneEntry() -> createOneEntry
    459:471:java.lang.String createOneEntry(java.lang.reflect.Method) -> createOneEntry
    503:571:java.lang.String createOneEntryInternal(long,java.lang.reflect.Method) -> createOneEntryInternal
    641:646:void finalize() -> finalize
    655:659:int getCount() -> getCount
    678:678:java.lang.String getErrorReason() -> getErrorReason
    353:369:boolean init(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.net.Uri) -> init
    415:420:boolean initInterCursorCreationPart(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> initInterCursorCreationPart
    404:406:boolean initInterFirstPart(android.net.Uri) -> initInterFirstPart
    443:444:boolean initInterLastPart() -> initInterLastPart
    427:439:boolean initInterMainPart() -> initInterMainPart
    667:671:boolean isAfterLast() -> isAfterLast
    623:624:void terminate() -> terminate
com.android.vcard.VCardConfig -> com.android.vcard.VCardConfig:
    391:405:void <clinit>() -> <clinit>
    458:458:boolean appendTypeParamName(int) -> appendTypeParamName
    409:416:int getVCardTypeFromString(java.lang.String) -> getVCardTypeFromString
    469:469:boolean isJapaneseDevice(int) -> isJapaneseDevice
    453:453:boolean shouldRefrainQPToNameProperties(int) -> shouldRefrainQPToNameProperties
    433:433:boolean shouldUseQuotedPrintable(int) -> shouldUseQuotedPrintable
com.android.vcard.VCardEntry -> com.android.vcard.VCardEntry:
    73:1863:void <clinit>() -> <clinit>
    1767:1767:void <init>() -> <init>
    1771:1771:void <init>(int) -> <init>
    90:1776:void <init>(int,android.accounts.Account) -> <init>
    2475:2478:void addChild(com.android.vcard.VCardEntry) -> addChild
    1835:1838:void addEmail(int,java.lang.String,java.lang.String,boolean) -> addEmail
    1978:1981:void addIm(int,java.lang.String,java.lang.String,int,boolean) -> addIm
    1855:1858:void addNewOrganization(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean) -> addNewOrganization
    1828:1831:void addNickName(java.lang.String) -> addNickName
    1985:1988:void addNote(java.lang.String) -> addNote
    1780:1817:void addPhone(int,java.lang.String,java.lang.String,boolean) -> addPhone
    1992:1996:void addPhotoBytes(java.lang.String,byte[],boolean) -> addPhotoBytes
    1842:1845:void addPostal(int,java.util.List,java.lang.String,boolean) -> addPostal
    2139:2425:void addProperty(com.android.vcard.VCardProperty) -> addProperty
    1821:1824:void addSip(java.lang.String,int,java.lang.String,boolean) -> addSip
    1866:1879:java.lang.String buildSinglePhoneticNameFromSortAsParam(java.util.Map) -> buildSinglePhoneticNameFromSortAsParam
    2522:2522:void consolidateFields() -> consolidateFields
    2495:2510:java.lang.String constructDisplayName() -> constructDisplayName
    2557:2585:java.util.ArrayList constructInsertOperations(android.content.ContentResolver,java.util.ArrayList) -> constructInsertOperations
    2669:2672:java.lang.String getDisplayName() -> getDisplayName
    96:96:boolean getStarred() -> getStarred
    2482:2486:void handleAndroidCustomProperty(java.util.List) -> handleAndroidCustomProperty
    2045:2067:void handleNProperty(java.util.List,java.util.Map) -> handleNProperty
    1894:1948:void handleOrgValue(int,java.util.List,java.util.Map,boolean) -> handleOrgValue
    2079:2134:void handlePhoneticNameFromSound(java.util.List) -> handlePhoneticNameFromSound
    2436:2471:void handleSipCase(java.lang.String,java.util.Collection) -> handleSipCase
    1959:1973:void handleTitleValue(java.lang.String) -> handleTitleValue
    2534:2536:boolean isIgnorable() -> isIgnorable
    1599:1626:void iterateAllData(com.android.vcard.VCardEntry$EntryElementIterator) -> iterateAllData
    1631:1636:void iterateOneList(java.util.List,com.android.vcard.VCardEntry$EntryElementIterator) -> iterateOneList
    2599:2611:java.lang.String listToString(java.util.List) -> listToString
    1761:1763:java.lang.String toString() -> toString
    2009:2035:void tryHandleSortAsName(java.util.Map) -> tryHandleSortAsName
com.android.vcard.VCardEntry$AndroidCustomData -> com.android.vcard.VCardEntry$AndroidCustomData:
    1451:1453:void <init>(java.lang.String,java.util.List) -> <init>
    1463:1473:com.android.vcard.VCardEntry$AndroidCustomData constructAndroidCustomData(java.util.List) -> constructAndroidCustomData
    1479:1490:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    1503:1518:boolean equals(java.lang.Object) -> equals
    1547:1547:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1528:1531:int hashCode() -> hashCode
    1495:1495:boolean isEmpty() -> isEmpty
    1539:1542:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$AnniversaryData -> com.android.vcard.VCardEntry$AnniversaryData:
    1304:1305:void <init>(java.lang.String) -> <init>
    1311:1317:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    1330:1334:boolean equals(java.lang.Object) -> equals
    1349:1349:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1339:1339:int hashCode() -> hashCode
    1322:1322:boolean isEmpty() -> isEmpty
    1344:1344:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$BirthdayData -> com.android.vcard.VCardEntry$BirthdayData:
    1248:1249:void <init>(java.lang.String) -> <init>
    1255:1261:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    1274:1278:boolean equals(java.lang.Object) -> equals
    1293:1293:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1283:1283:int hashCode() -> hashCode
    1266:1266:boolean isEmpty() -> isEmpty
    1288:1288:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$EmailData -> com.android.vcard.VCardEntry$EmailData:
    415:419:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    408:408:java.lang.String access$1500(com.android.vcard.VCardEntry$EmailData) -> access$1500
    425:438:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    451:457:boolean equals(java.lang.Object) -> equals
    478:478:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    463:466:int hashCode() -> hashCode
    443:443:boolean isEmpty() -> isEmpty
    472:473:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$EntryLabel -> com.android.vcard.VCardEntry$EntryLabel:
    99:113:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:com.android.vcard.VCardEntry$EntryLabel valueOf(java.lang.String) -> valueOf
    99:99:com.android.vcard.VCardEntry$EntryLabel[] values() -> values
com.android.vcard.VCardEntry$ImData -> com.android.vcard.VCardEntry$ImData:
    891:896:void <init>(int,java.lang.String,java.lang.String,int,boolean) -> <init>
    902:915:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    928:935:boolean equals(java.lang.Object) -> equals
    958:958:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    941:945:int hashCode() -> hashCode
    920:920:boolean isEmpty() -> isEmpty
    951:953:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$InsertOperationConstrutor -> com.android.vcard.VCardEntry$InsertOperationConstrutor:
    1724:1726:void <init>(com.android.vcard.VCardEntry,java.util.List,int) -> <init>
    1747:1748:boolean onElement(com.android.vcard.VCardEntry$EntryElement) -> onElement
com.android.vcard.VCardEntry$IsIgnorableIterator -> com.android.vcard.VCardEntry$IsIgnorableIterator:
    1640:1641:void <init>(com.android.vcard.VCardEntry) -> <init>
    1640:1640:void <init>(com.android.vcard.VCardEntry,com.android.vcard.VCardEntry$1) -> <init>
    1671:1671:boolean getResult() -> getResult
    1661:1662:boolean onElement(com.android.vcard.VCardEntry$EntryElement) -> onElement
com.android.vcard.VCardEntry$NameData -> com.android.vcard.VCardEntry$NameData:
    133:133:void <init>() -> <init>
    133:133:java.lang.String access$1000(com.android.vcard.VCardEntry$NameData) -> access$1000
    133:133:java.lang.String access$1002(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1002
    133:133:java.lang.String access$1100(com.android.vcard.VCardEntry$NameData) -> access$1100
    133:133:java.lang.String access$1102(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1102
    133:133:java.lang.String access$1200(com.android.vcard.VCardEntry$NameData) -> access$1200
    133:133:java.lang.String access$1202(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1202
    133:133:java.lang.String access$1300(com.android.vcard.VCardEntry$NameData) -> access$1300
    133:133:java.lang.String access$1302(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1302
    133:133:java.lang.String access$1402(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1402
    133:133:java.lang.String access$500(com.android.vcard.VCardEntry$NameData) -> access$500
    133:133:java.lang.String access$502(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$502
    133:133:java.lang.String access$600(com.android.vcard.VCardEntry$NameData) -> access$600
    133:133:java.lang.String access$602(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$602
    133:133:java.lang.String access$700(com.android.vcard.VCardEntry$NameData) -> access$700
    133:133:java.lang.String access$702(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$702
    133:133:java.lang.String access$800(com.android.vcard.VCardEntry$NameData) -> access$800
    133:133:java.lang.String access$802(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$802
    133:133:java.lang.String access$900(com.android.vcard.VCardEntry$NameData) -> access$900
    133:133:java.lang.String access$902(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$902
    175:218:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    168:169:boolean emptyPhoneticStructuredName() -> emptyPhoneticStructuredName
    162:164:boolean emptyStructuredName() -> emptyStructuredName
    235:249:boolean equals(java.lang.Object) -> equals
    272:272:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    254:259:int hashCode() -> hashCode
    223:227:boolean isEmpty() -> isEmpty
    266:266:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$NicknameData -> com.android.vcard.VCardEntry$NicknameData:
    1082:1083:void <init>(java.lang.String) -> <init>
    1089:1095:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    1105:1109:boolean equals(java.lang.Object) -> equals
    1124:1124:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1114:1114:int hashCode() -> hashCode
    1100:1100:boolean isEmpty() -> isEmpty
    1119:1119:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$NoteData -> com.android.vcard.VCardEntry$NoteData:
    1135:1136:void <init>(java.lang.String) -> <init>
    1142:1147:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    1160:1164:boolean equals(java.lang.Object) -> equals
    1179:1179:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1169:1169:int hashCode() -> hashCode
    1152:1152:boolean isEmpty() -> isEmpty
    1174:1174:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$OrganizationData -> com.android.vcard.VCardEntry$OrganizationData:
    756:762:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean) -> <init>
    743:743:java.lang.String access$100(com.android.vcard.VCardEntry$OrganizationData) -> access$100
    743:743:java.lang.String access$102(com.android.vcard.VCardEntry$OrganizationData,java.lang.String) -> access$102
    743:743:java.lang.String access$200(com.android.vcard.VCardEntry$OrganizationData) -> access$200
    743:743:java.lang.String access$202(com.android.vcard.VCardEntry$OrganizationData,java.lang.String) -> access$202
    743:743:boolean access$302(com.android.vcard.VCardEntry$OrganizationData,boolean) -> access$302
    743:743:java.lang.String access$400(com.android.vcard.VCardEntry$OrganizationData) -> access$400
    743:743:java.lang.String access$402(com.android.vcard.VCardEntry$OrganizationData,java.lang.String) -> access$402
    791:811:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    825:832:boolean equals(java.lang.Object) -> equals
    855:855:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    766:785:java.lang.String getFormattedString() -> getFormattedString
    838:842:int hashCode() -> hashCode
    816:817:boolean isEmpty() -> isEmpty
    848:850:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$PhoneData -> com.android.vcard.VCardEntry$PhoneData:
    325:329:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    315:315:java.lang.String access$1600(com.android.vcard.VCardEntry$PhoneData) -> access$1600
    335:348:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    361:367:boolean equals(java.lang.Object) -> equals
    388:388:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    373:376:int hashCode() -> hashCode
    353:353:boolean isEmpty() -> isEmpty
    382:383:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$PhotoData -> com.android.vcard.VCardEntry$PhotoData:
    995:1000:void <init>(java.lang.String,byte[],boolean) -> <init>
    1006:1014:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    1027:1032:boolean equals(java.lang.Object) -> equals
    1063:1063:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1038:1051:int hashCode() -> hashCode
    1019:1019:boolean isEmpty() -> isEmpty
    1057:1058:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$PostalData -> com.android.vcard.VCardEntry$PostalData:
    519:530:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,boolean,int) -> <init>
    568:603:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    540:561:com.android.vcard.VCardEntry$PostalData constructPostalData(java.util.List,int,java.lang.String,boolean,int) -> constructPostalData
    658:672:boolean equals(java.lang.Object) -> equals
    699:699:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    607:639:java.lang.String getFormattedAddress(int) -> getFormattedAddress
    677:684:int hashCode() -> hashCode
    644:650:boolean isEmpty() -> isEmpty
    691:693:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$SipData -> com.android.vcard.VCardEntry$SipData:
    1366:1374:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    1380:1392:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    1405:1411:boolean equals(java.lang.Object) -> equals
    1431:1431:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1417:1420:int hashCode() -> hashCode
    1397:1397:boolean isEmpty() -> isEmpty
    1426:1426:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$ToStringIterator -> com.android.vcard.VCardEntry$ToStringIterator:
    1675:1675:void <init>(com.android.vcard.VCardEntry) -> <init>
    1675:1675:void <init>(com.android.vcard.VCardEntry,com.android.vcard.VCardEntry$1) -> <init>
    1694:1698:boolean onElement(com.android.vcard.VCardEntry$EntryElement) -> onElement
    1704:1704:void onElementGroupEnded() -> onElementGroupEnded
    1688:1689:void onElementGroupStarted(com.android.vcard.VCardEntry$EntryLabel) -> onElementGroupStarted
    1709:1709:void onIterationEnded() -> onIterationEnded
    1682:1683:void onIterationStarted() -> onIterationStarted
    1714:1714:java.lang.String toString() -> toString
com.android.vcard.VCardEntry$WebsiteData -> com.android.vcard.VCardEntry$WebsiteData:
    1190:1191:void <init>(java.lang.String) -> <init>
    1197:1205:void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    1218:1222:boolean equals(java.lang.Object) -> equals
    1237:1237:com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    1227:1227:int hashCode() -> hashCode
    1210:1210:boolean isEmpty() -> isEmpty
    1232:1232:java.lang.String toString() -> toString
com.android.vcard.VCardEntryCommitter -> com.android.vcard.VCardEntryCommitter:
    47:50:void <init>(android.content.ContentResolver) -> <init>
    105:105:java.util.ArrayList getCreatedUris() -> getCreatedUris
    59:64:void onEnd() -> onEnd
    70:78:void onEntryCreated(com.android.vcard.VCardEntry) -> onEntryCreated
    83:95:android.net.Uri pushIntoContentResolver(java.util.ArrayList) -> pushIntoContentResolver
com.android.vcard.VCardEntryConstructor -> com.android.vcard.VCardEntryConstructor:
    59:59:void <init>() -> <init>
    50:78:void <init>(int,android.accounts.Account,java.lang.String) -> <init>
    82:82:void addEntryHandler(com.android.vcard.VCardEntryHandler) -> addEntryHandler
    100:101:void clear() -> clear
    112:125:void onEntryEnded() -> onEntryEnded
    106:107:void onEntryStarted() -> onEntryStarted
    130:130:void onPropertyCreated(com.android.vcard.VCardProperty) -> onPropertyCreated
    94:95:void onVCardEnded() -> onVCardEnded
    87:88:void onVCardStarted() -> onVCardStarted
com.android.vcard.VCardEntryCounter -> com.android.vcard.VCardEntryCounter:
    21:21:void <init>() -> <init>
    25:25:int getCount() -> getCount
    42:42:void onEntryEnded() -> onEntryEnded
com.android.vcard.VCardParser -> com.android.vcard.VCardParser:
    23:23:void <init>() -> <init>
    83:84:void parse(java.io.InputStream,com.android.vcard.VCardInterpreter) -> parse
com.android.vcard.VCardParserImpl_V21 -> com.android.vcard.VCardParserImpl_V21:
    157:157:void <init>() -> <init>
    104:161:void <init>(int) -> <init>
    998:998:void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    1051:1053:void cancel() -> cancel
    365:433:com.android.vcard.VCardProperty constructPropertyData(java.lang.String) -> constructPropertyData
    982:982:java.util.Set getAvailableEncodingSet() -> getAvailableEncodingSet
    834:872:java.lang.String getBase64(java.lang.String) -> getBase64
    970:970:java.util.Set getKnownPropertyNameSet() -> getKnownPropertyNameSet
    974:974:java.util.Set getKnownTypeSet() -> getKnownTypeSet
    978:978:java.util.Set getKnownValueSet() -> getKnownValueSet
    182:182:java.lang.String getLine() -> getLine
    197:200:java.lang.String getNonEmptyLine() -> getNonEmptyLine
    808:830:java.lang.String getPotentialMultiline(java.lang.String) -> getPotentialMultiline
    889:902:java.lang.String getPropertyNameUpperCase(java.lang.String) -> getPropertyNameUpperCase
    767:793:java.lang.String getQuotedPrintablePart(java.lang.String) -> getQuotedPrintablePart
    701:735:void handleAdrOrgN(com.android.vcard.VCardProperty,java.lang.String,java.lang.String,java.lang.String) -> handleAdrOrgN
    916:923:void handleAgent(com.android.vcard.VCardProperty) -> handleAgent
    568:568:void handleAnyParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String) -> handleAnyParam
    526:527:void handleCharset(com.android.vcard.VCardProperty,java.lang.String) -> handleCharset
    508:514:void handleEncoding(com.android.vcard.VCardProperty,java.lang.String) -> handleEncoding
    535:553:void handleLanguage(com.android.vcard.VCardProperty,java.lang.String) -> handleLanguage
    349:354:void handleNest() -> handleNest
    473:473:void handleParamWithoutName(com.android.vcard.VCardProperty,java.lang.String) -> handleParamWithoutName
    445:465:void handleParams(com.android.vcard.VCardProperty,java.lang.String) -> handleParams
    573:694:void handlePropertyValue(com.android.vcard.VCardProperty,java.lang.String) -> handlePropertyValue
    480:486:void handleType(com.android.vcard.VCardProperty,java.lang.String) -> handleType
    493:500:void handleValue(com.android.vcard.VCardProperty,java.lang.String) -> handleValue
    168:172:boolean isValidPropertyName(java.lang.String) -> isValidPropertyName
    1003:1028:void parse(java.io.InputStream) -> parse
    305:326:boolean parseItem() -> parseItem
    333:344:void parseItemInter(com.android.vcard.VCardProperty,java.lang.String) -> parseItemInter
    283:292:void parseItems() -> parseItems
    216:229:boolean parseOneVCard() -> parseOneVCard
    186:186:java.lang.String peekLine() -> peekLine
    244:267:boolean readBeginVCard(boolean) -> readBeginVCard
    949:949:java.lang.String unescapeCharacter(char) -> unescapeCharacter
com.android.vcard.VCardParserImpl_V21$CustomBufferedReader -> com.android.vcard.VCardParserImpl_V21$CustomBufferedReader:
    58:58:void <init>(java.io.Reader) -> <init>
    81:91:java.lang.String peekLine() -> peekLine
    63:73:java.lang.String readLine() -> readLine
com.android.vcard.VCardParserImpl_V30 -> com.android.vcard.VCardParserImpl_V30:
    42:45:void <init>() -> <init>
    42:49:void <init>(int) -> <init>
    272:272:java.lang.String encodeParamValue(java.lang.String) -> encodeParamValue
    361:361:java.util.Set getKnownPropertyNameSet() -> getKnownPropertyNameSet
    74:79:java.lang.String getLine() -> getLine
    91:123:java.lang.String getNonEmptyLine() -> getNonEmptyLine
    296:298:void handleAgent(com.android.vcard.VCardProperty) -> handleAgent
    164:164:void handleAnyParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String) -> handleAnyParam
    169:169:void handleParamWithoutName(com.android.vcard.VCardProperty,java.lang.String) -> handleParamWithoutName
    147:155:void handleParams(com.android.vcard.VCardProperty,java.lang.String) -> handleParams
    186:186:void handleType(com.android.vcard.VCardProperty,java.lang.String) -> handleType
    324:324:java.lang.String maybeUnescapeText(java.lang.String) -> maybeUnescapeText
    64:68:java.lang.String peekLine() -> peekLine
    137:137:boolean readBeginVCard(boolean) -> readBeginVCard
    212:263:void splitAndPutParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String) -> splitAndPutParam
    355:355:java.lang.String unescapeCharacter(char) -> unescapeCharacter
    328:343:java.lang.String unescapeText(java.lang.String) -> unescapeText
com.android.vcard.VCardParserImpl_V40 -> com.android.vcard.VCardParserImpl_V40:
    84:84:java.lang.String unescapeCharacter(char) -> unescapeCharacter
com.android.vcard.VCardParser_V21 -> com.android.vcard.VCardParser_V21:
    47:85:void <clinit>() -> <clinit>
    93:94:void <init>() -> <init>
    97:98:void <init>(int) -> <init>
    103:103:void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    118:118:void cancel() -> cancel
    108:108:void parse(java.io.InputStream) -> parse
com.android.vcard.VCardParser_V30 -> com.android.vcard.VCardParser_V30:
    42:64:void <clinit>() -> <clinit>
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    82:82:void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    97:97:void cancel() -> cancel
    87:87:void parse(java.io.InputStream) -> parse
com.android.vcard.VCardProperty -> com.android.vcard.VCardProperty:
    60:65:void <init>() -> <init>
    81:84:void addGroup(java.lang.String) -> addGroup
    94:104:void addParameter(java.lang.String,java.lang.String) -> addParameter
    167:167:byte[] getByteValue() -> getByteValue
    143:143:java.lang.String getName() -> getName
    151:151:java.util.Map getParameterMap() -> getParameterMap
    155:155:java.util.Collection getParameters(java.lang.String) -> getParameters
    159:159:java.lang.String getRawValue() -> getRawValue
    163:163:java.util.List getValueList() -> getValueList
    139:139:void setByteValue(byte[]) -> setByteValue
    73:77:void setName(java.lang.String) -> setName
    108:108:void setRawValue(java.lang.String) -> setRawValue
    115:115:void setValues(java.lang.String[]) -> setValues
    119:119:void setValues(java.util.List) -> setValues
com.android.vcard.VCardSourceDetector -> com.android.vcard.VCardSourceDetector:
    45:60:void <clinit>() -> <clinit>
    42:80:void <init>() -> <init>
    172:175:java.lang.String getEstimatedCharset() -> getEstimatedCharset
    143:151:int getEstimatedType() -> getEstimatedType
    103:134:void onPropertyCreated(com.android.vcard.VCardProperty) -> onPropertyCreated
com.android.vcard.VCardUtils -> com.android.vcard.VCardUtils:
    129:578:void <clinit>() -> <clinit>
    709:714:boolean appearsLikeAndroidVCardQuotedPrintable(java.lang.String) -> appearsLikeAndroidVCardQuotedPrintable
    689:690:boolean areAllEmpty(java.lang.String[]) -> areAllEmpty
    376:409:java.util.List constructListFromValue(java.lang.String,int) -> constructListFromValue
    336:336:java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String) -> constructNameFromElements
    343:366:java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> constructNameFromElements
    491:491:boolean containsOnlyAlphaDigitHyphen(java.lang.String[]) -> containsOnlyAlphaDigitHyphen
    505:511:boolean containsOnlyAlphaDigitHyphen(java.util.Collection) -> containsOnlyAlphaDigitHyphen
    448:448:boolean containsOnlyNonCrLfPrintableAscii(java.lang.String[]) -> containsOnlyNonCrLfPrintableAscii
    457:463:boolean containsOnlyNonCrLfPrintableAscii(java.util.Collection) -> containsOnlyNonCrLfPrintableAscii
    417:417:boolean containsOnlyPrintableAscii(java.lang.String[]) -> containsOnlyPrintableAscii
    424:428:boolean containsOnlyPrintableAscii(java.util.Collection) -> containsOnlyPrintableAscii
    527:527:boolean containsOnlyWhiteSpaces(java.lang.String[]) -> containsOnlyWhiteSpaces
    534:540:boolean containsOnlyWhiteSpaces(java.util.Collection) -> containsOnlyWhiteSpaces
    834:846:java.lang.String convertStringCharset(java.lang.String,java.lang.String,java.lang.String) -> convertStringCharset
    327:327:int getPhoneNumberFormat(int) -> getPhoneNumberFormat
    202:272:java.lang.Object getPhoneTypeFromStrings(java.util.Collection,java.lang.String) -> getPhoneTypeFromStrings
    184:184:java.lang.String getPhoneTypeString(java.lang.Integer) -> getPhoneTypeString
    289:289:java.lang.String getPropertyNameForIm(int) -> getPropertyNameForIm
    665:673:java.lang.String guessImageType(byte[]) -> guessImageType
    281:281:boolean isMobilePhoneLabel(java.lang.String) -> isMobilePhoneLabel
    558:567:boolean isV21Word(java.lang.String) -> isV21Word
    285:285:boolean isValidInV21ButUnknownToContactsPhoteType(java.lang.String) -> isValidInV21ButUnknownToContactsPhoteType
    733:815:java.lang.String parseQuotedPrintable(java.lang.String,boolean,java.lang.String,java.lang.String) -> parseQuotedPrintable
    295:299:java.lang.String[] sortNameElements(int,java.lang.String,java.lang.String,java.lang.String) -> sortNameElements
    635:651:java.lang.String toHalfWidthString(java.lang.String) -> toHalfWidthString
    604:630:java.lang.String toStringAsParamValue(java.lang.String,int[]) -> toStringAsParamValue
    596:596:java.lang.String toStringAsV30ParamValue(java.lang.String) -> toStringAsV30ParamValue
    600:600:java.lang.String toStringAsV40ParamValue(java.lang.String) -> toStringAsV40ParamValue
com.android.vcard.VCardUtils$DecoderException -> com.android.vcard.VCardUtils$DecoderException:
    51:51:void <init>(java.lang.String) -> <init>
com.android.vcard.VCardUtils$PhoneNumberUtilsPort -> com.android.vcard.VCardUtils$PhoneNumberUtilsPort:
    92:94:java.lang.String formatNumber(java.lang.String,int) -> formatNumber
com.android.vcard.VCardUtils$QuotedPrintableCodecPort -> com.android.vcard.VCardUtils$QuotedPrintableCodecPort:
    65:83:byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
com.android.vcard.VCardUtils$TextUtilsPort -> com.android.vcard.VCardUtils$TextUtilsPort:
    109:111:boolean isPrintableAsciiOnly(java.lang.CharSequence) -> isPrintableAsciiOnly
com.android.vcard.exception.VCardAgentNotSupportedException -> com.android.vcard.exception.VCardAgentNotSupportedException:
    20:20:void <init>() -> <init>
    24:24:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardException -> com.android.vcard.exception.VCardException:
    23:23:void <init>() -> <init>
    32:32:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardInvalidCommentLineException -> com.android.vcard.exception.VCardInvalidCommentLineException:
    26:26:void <init>() -> <init>
    30:30:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardInvalidLineException -> com.android.vcard.exception.VCardInvalidLineException:
    25:25:void <init>() -> <init>
    29:29:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardNestedException -> com.android.vcard.exception.VCardNestedException:
    24:24:void <init>() -> <init>
    27:27:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardNotSupportedException -> com.android.vcard.exception.VCardNotSupportedException:
    28:28:void <init>() -> <init>
    31:31:void <init>(java.lang.String) -> <init>
com.android.vcard.exception.VCardVersionException -> com.android.vcard.exception.VCardVersionException:
    23:23:void <init>() -> <init>
    26:26:void <init>(java.lang.String) -> <init>
com.google.android.material.R$styleable -> com.google.android.material.R$styleable:
    14617:41277:void <clinit>() -> <clinit>
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
    37:44:void <clinit>() -> <clinit>
    73:73:float lerp(float,float,float,float,float) -> lerp
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
    39:47:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.animation.ArgbEvaluatorCompat:
    29:29:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    28:28:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    58:91:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    40:40:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> getInstance
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
    38:38:void <clinit>() -> <clinit>
    42:42:void <init>(java.lang.String) -> <init>
    33:33:java.lang.Object get(java.lang.Object) -> get
    48:52:java.lang.Float get(android.view.ViewGroup) -> get
    33:33:void set(java.lang.Object,java.lang.Object) -> set
    58:64:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.animation.DrawableAlphaProperty:
    36:36:void <clinit>() -> <clinit>
    39:42:void <init>() -> <init>
    30:30:java.lang.Object get(java.lang.Object) -> get
    48:54:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    30:30:void set(java.lang.Object,java.lang.Object) -> set
    59:63:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
    28:31:void <init>() -> <init>
    27:27:java.lang.Object get(java.lang.Object) -> get
    42:43:android.graphics.Matrix get(android.widget.ImageView) -> get
    27:27:void set(java.lang.Object,java.lang.Object) -> set
    36:36:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
    26:29:void <init>() -> <init>
    34:41:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
    66:71:void <init>() -> <init>
    215:220:void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addInfoFromAnimator
    175:178:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    188:200:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    207:209:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    229:235:boolean equals(java.lang.Object) -> equals
    84:87:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    161:163:long getTotalDuration() -> getTotalDuration
    76:76:boolean hasTiming(java.lang.String) -> hasTiming
    240:240:int hashCode() -> hashCode
    123:123:void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[]) -> setPropertyValues
    92:92:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    246:254:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
    30:41:void <init>(long,long) -> <init>
    30:47:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:56:void apply(android.animation.Animator) -> apply
    83:87:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    119:137:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    70:70:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    102:108:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    74:74:int getRepeatCount() -> getRepeatCount
    78:78:int getRepeatMode() -> getRepeatMode
    142:146:int hashCode() -> hashCode
    153:169:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
    34:37:void <init>(int,float,float) -> <init>
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
    165:165:void <clinit>() -> <clinit>
    585:585:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    948:951:void clearLiftOnScrollTargetView() -> clearLiftOnScrollTargetView
    387:394:void draw(android.graphics.Canvas) -> draw
    400:406:void drawableStateChanged() -> drawableStateChanged
    930:944:android.view.View findLiftOnScrollTargetView(android.view.View) -> findLiftOnScrollTargetView
    130:130:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    130:130:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    590:590:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    130:130:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    130:130:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    130:130:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    130:130:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    595:595:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    600:605:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    534:534:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    672:710:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    715:746:int getDownNestedScrollRange() -> getDownNestedScrollRange
    769:786:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    978:978:int getPendingAction() -> getPendingAction
    987:987:int getTopInset() -> getTopInset
    625:658:int getTotalScrollRange() -> getTotalScrollRange
    667:667:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    616:616:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    500:501:boolean hasCollapsibleChild() -> hasCollapsibleChild
    662:662:boolean hasScrollableChildren() -> hasScrollableChildren
    510:512:void invalidateScrollRanges() -> invalidateScrollRanges
    897:897:boolean isLiftOnScroll() -> isLiftOnScroll
    526:528:void onAttachedToWindow() -> onAttachedToWindow
    791:807:int[] onCreateDrawableState(int) -> onCreateDrawableState
    610:612:void onDetachedFromWindow() -> onDetachedFromWindow
    457:487:void onLayout(boolean,int,int,int,int) -> onLayout
    427:452:void onMeasure(int,int) -> onMeasure
    750:762:void onOffsetChanged(int) -> onOffsetChanged
    982:982:void resetPendingAction() -> resetPendingAction
    540:542:void setElevation(float) -> setElevation
    557:557:void setExpanded(boolean) -> setExpanded
    572:572:void setExpanded(boolean,boolean) -> setExpanded
    576:580:void setExpanded(boolean,boolean,boolean) -> setExpanded
    822:824:boolean setLiftableState(boolean) -> setLiftableState
    848:852:boolean setLiftedState(boolean) -> setLiftedState
    518:521:void setOrientation(int) -> setOrientation
    417:421:void setVisibility(int) -> setVisibility
    496:496:boolean shouldDrawStatusBarForeground() -> shouldDrawStatusBarForeground
    920:925:boolean shouldLift(android.view.View) -> shouldLift
    995:997:boolean shouldOffsetFirstChild() -> shouldOffsetFirstChild
    861:880:void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> startLiftOnScrollElevationOverlayAnimation
    412:412:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.AppBarLayout$2 -> com.google.android.material.appbar.AppBarLayout$2:
    874:874:void <init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    877:877:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    1246:1253:void <init>() -> <init>
    1246:1256:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1222:1222:int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$000
    1611:1648:void addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> addAccessibilityScrollActions
    1658:1658:void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,boolean) -> addActionToExpand
    1382:1393:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1401:1426:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    1222:1222:boolean canDragView(android.view.View) -> canDragView
    1679:1684:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    1290:1291:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    1896:1898:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    1884:1887:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1430:1439:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    1222:1222:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    1702:1702:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    1222:1222:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    1707:1707:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    1909:1909:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    1771:1805:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    1767:1767:boolean isOffsetAnimatorRunning() -> isOffsetAnimatorRunning
    1222:1222:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    1694:1696:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    1222:1222:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1531:1583:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1222:1222:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1508:1524:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1222:1222:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1308:1320:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1222:1222:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1339:1345:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1222:1222:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    1939:1947:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1222:1222:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    1914:1927:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1222:1222:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1271:1282:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1222:1222:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1356:1365:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1222:1222:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    1717:1761:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    1867:1875:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1450:1490:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    1589:1604:void updateAccessibilityActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> updateAccessibilityActions
    1824:1859:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
    1413:1413:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1416:1417:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$2 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$2:
    1630:1630:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> <init>
    1633:1633:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$3 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$3:
    1662:1662:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,com.google.android.material.appbar.AppBarLayout,boolean) -> <init>
    1665:1665:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
    1976:1976:void <clinit>() -> <clinit>
    1958:1961:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1965:1965:void <init>(android.os.Parcelable) -> <init>
    1970:1973:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    1977:1977:void <init>() -> <init>
    1977:1977:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1977:1977:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1981:1981:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1987:1987:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1977:1977:java.lang.Object[] newArray(int) -> newArray
    1993:1993:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
    1209:1209:void <init>() -> <init>
    1213:1213:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1203:1203:int getTopAndBottomOffset() -> getTopAndBottomOffset
    1203:1203:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1203:1203:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1203:1203:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1203:1203:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1203:1203:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1203:1203:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1203:1203:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1203:1203:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1203:1203:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
    1099:1110:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1099:1114:void <init>(int,int) -> <init>
    1099:1122:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1099:1126:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1099:1132:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    1166:1166:int getScrollFlags() -> getScrollFlags
    1188:1188:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    1193:1193:boolean isCollapsible() -> isCollapsible
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    2005:2005:void <init>() -> <init>
    2008:2014:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2003:2003:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    2114:2117:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    2104:2106:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> getAppBarLayoutOffset
    2082:2086:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    2125:2128:int getScrollRange(android.view.View) -> getScrollRange
    2020:2020:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2066:2076:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    2026:2027:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2034:2036:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2003:2003:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2003:2003:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2046:2057:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2133:2136:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
    45:50:void <init>() -> <init>
    45:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    254:255:void ensureVelocityTracker() -> ensureVelocityTracker
    202:226:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    59:102:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    112:154:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    188:191:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    158:158:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
    263:265:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    270:276:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
    41:47:void <init>() -> <init>
    41:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    166:168:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    204:204:int getOverlayTop() -> getOverlayTop
    179:179:int getScrollRange(android.view.View) -> getScrollRange
    186:186:int getVerticalLayoutGap() -> getVerticalLayoutGap
    113:153:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    61:99:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    196:196:void setOverlayTop(int) -> setOverlayTop
com.google.android.material.appbar.MaterialToolbar -> com.google.android.material.appbar.MaterialToolbar:
    70:70:void <clinit>() -> <clinit>
    77:77:void <init>(android.content.Context) -> <init>
    81:81:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    85:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    137:154:android.util.Pair calculateTitleBoundLimits(android.widget.TextView,android.widget.TextView) -> calculateTitleBoundLimits
    264:274:void initBackground(android.content.Context) -> initBackground
    159:178:void layoutTitleCenteredHorizontally(android.view.View,android.util.Pair) -> layoutTitleCenteredHorizontally
    113:131:void maybeCenterTitleViews() -> maybeCenterTitleViews
    279:281:android.graphics.drawable.Drawable maybeTintNavigationIcon(android.graphics.drawable.Drawable) -> maybeTintNavigationIcon
    183:185:void onAttachedToWindow() -> onAttachedToWindow
    107:109:void onLayout(boolean,int,int,int,int) -> onLayout
    191:193:void setElevation(float) -> setElevation
    198:198:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    207:211:void setNavigationIconTint(int) -> setNavigationIconTint
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
    30:33:void <init>() -> <init>
    30:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:88:int getTopAndBottomOffset() -> getTopAndBottomOffset
    66:66:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    43:57:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    70:73:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
    37:41:void <init>(android.view.View) -> <init>
    51:52:void applyOffsets() -> applyOffsets
    86:86:int getTopAndBottomOffset() -> getTopAndBottomOffset
    46:47:void onViewLayout() -> onViewLayout
    77:79:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    62:64:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
com.google.android.material.badge.BadgeDrawable$SavedState -> com.google.android.material.badge.BadgeDrawable$SavedState:
    255:255:void <clinit>() -> <clinit>
    204:252:void <init>(android.os.Parcel) -> <init>
    277:289:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.badge.BadgeDrawable$SavedState$1 -> com.google.android.material.badge.BadgeDrawable$SavedState$1:
    256:256:void <init>() -> <init>
    256:256:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    260:260:com.google.android.material.badge.BadgeDrawable$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    256:256:java.lang.Object[] newArray(int) -> newArray
    266:266:com.google.android.material.badge.BadgeDrawable$SavedState[] newArray(int) -> newArray
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    47:52:void <init>() -> <init>
    47:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    153:157:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    62:64:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    104:106:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    74:77:void setAdditionalHiddenOffsetY(android.view.View,int) -> setAdditionalHiddenOffsetY
    133:142:void slideDown(android.view.View) -> slideDown
    115:124:void slideUp(android.view.View) -> slideUp
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
    158:158:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    161:161:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
    43:231:void <init>() -> <init>
    439:439:float clamp(float,float,float) -> clamp
    443:443:int clamp(int,int,int) -> clamp
    379:383:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    123:123:com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener getListener() -> getListener
    190:207:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    178:182:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    214:215:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    160:160:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    117:117:void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener) -> setListener
    151:151:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    133:133:void setSwipeDirection(int) -> setSwipeDirection
    409:411:void updateAccessibilityActions(android.view.View) -> updateAccessibilityActions
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
    232:236:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    326:351:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    356:356:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    320:320:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    247:254:void onViewCaptured(android.view.View,int) -> onViewCaptured
    260:261:void onViewDragStateChanged(int) -> onViewDragStateChanged
    361:373:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    268:288:void onViewReleased(android.view.View,float,float) -> onViewReleased
    295:312:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    241:242:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$2 -> com.google.android.material.behavior.SwipeDismissBehavior$2:
    415:415:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    418:428:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
    391:393:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    398:402:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
    111:111:void <clinit>() -> <clinit>
    109:109:void access$1300(com.google.android.material.bottomappbar.BottomAppBar) -> access$1300
    109:109:com.google.android.material.floatingactionbutton.FloatingActionButton access$2200(com.google.android.material.bottomappbar.BottomAppBar) -> access$2200
    109:109:float access$2300(com.google.android.material.bottomappbar.BottomAppBar) -> access$2300
    109:109:int access$2700(com.google.android.material.bottomappbar.BottomAppBar) -> access$2700
    109:109:int access$2800(com.google.android.material.bottomappbar.BottomAppBar) -> access$2800
    109:109:int access$2900(com.google.android.material.bottomappbar.BottomAppBar) -> access$2900
    109:109:int access$3000(com.google.android.material.bottomappbar.BottomAppBar) -> access$3000
    109:109:android.view.View access$3100(com.google.android.material.bottomappbar.BottomAppBar) -> access$3100
    109:109:void access$3200(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$3200
    936:950:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> addFabAnimationListeners
    872:876:void cancelAnimations() -> cancelAnimations
    599:600:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> findDependentFab
    605:612:android.view.View findDependentView() -> findDependentView
    783:786:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    845:865:int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean) -> getActionMenuViewTranslationX
    109:109:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    978:981:com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior() -> getBehavior
    954:954:int getBottomInset() -> getBottomInset
    767:771:float getFabTranslationX(int) -> getFabTranslationX
    778:778:float getFabTranslationX() -> getFabTranslationX
    763:763:float getFabTranslationY() -> getFabTranslationY
    462:462:boolean getHideOnScroll() -> getHideOnScroll
    962:962:int getLeftInset() -> getLeftInset
    958:958:int getRightInset() -> getRightInset
    900:901:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment() -> getTopEdgeTreatment
    621:622:boolean isFabVisibleOrWillBeShown() -> isFabVisibleOrWillBeShown
    986:993:void onAttachedToWindow() -> onAttachedToWindow
    882:895:void onLayout(boolean,int,int,int,int) -> onLayout
    1144:1151:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1135:1138:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    916:924:void setActionMenuViewPosition() -> setActionMenuViewPosition
    906:911:void setCutoutState() -> setCutoutState
    486:490:void setElevation(float) -> setElevation
    555:557:void setFabCornerSize(float) -> setFabCornerSize
    545:547:boolean setFabDiameter(int) -> setFabDiameter
    797:797:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> translateActionMenuView
    815:827:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean,boolean) -> translateActionMenuView
com.google.android.material.bottomappbar.BottomAppBar$8 -> com.google.android.material.bottomappbar.BottomAppBar$8:
    815:815:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    818:819:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar$9 -> com.google.android.material.bottomappbar.BottomAppBar$9:
    938:938:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    941:946:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    1009:1073:void <init>() -> <init>
    1009:1078:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1001:1001:java.lang.ref.WeakReference access$2400(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2400
    1001:1001:android.graphics.Rect access$2500(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2500
    1001:1001:int access$2600(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$2600
    1001:1001:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1084:1114:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    1001:1001:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1126:1127:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1 -> com.google.android.material.bottomappbar.BottomAppBar$Behavior$1:
    1010:1010:void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> <init>
    1022:1066:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
    1175:1175:void <clinit>() -> <clinit>
    1159:1159:void <init>(android.os.Parcelable) -> <init>
    1163:1165:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1170:1172:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    1176:1176:void <init>() -> <init>
    1176:1176:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1176:1176:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1180:1180:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1186:1186:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1176:1176:java.lang.Object[] newArray(int) -> newArray
    1192:1192:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment -> com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    223:223:float getCradleVerticalOffset() -> getCradleVerticalOffset
    74:179:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    255:255:float getFabCornerRadius() -> getFabCornerRadius
    189:189:float getFabDiameter() -> getFabDiameter
    259:259:void setFabCornerSize(float) -> setFabCornerSize
    199:199:void setFabDiameter(float) -> setFabDiameter
    204:204:void setHorizontalOffset(float) -> setHorizontalOffset
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
    244:244:void <clinit>() -> <clinit>
    188:1470:void <init>() -> <init>
    188:1470:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    83:83:com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$000
    83:83:boolean access$1000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1000
    83:83:int access$102(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$102
    83:83:int access$1100(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1100
    83:83:boolean access$1200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$1200
    83:83:boolean access$200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$200
    83:83:int access$300(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$300
    83:83:int access$302(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$302
    83:83:boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$400
    83:83:boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$500
    83:83:int access$602(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> access$602
    83:83:void access$700(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> access$700
    83:83:boolean access$900(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$900
    1900:1903:int addAccessibilityActionForState(android.view.View,int,int) -> addAccessibilityActionForState
    1235:1240:void calculateCollapsedOffset() -> calculateCollapsedOffset
    1245:1245:void calculateHalfExpandedOffset() -> calculateHalfExpandedOffset
    1222:1231:int calculatePeekHeight() -> calculatePeekHeight
    1907:1907:androidx.core.view.accessibility.AccessibilityViewCommand createAccessibilityViewCommandForState(int) -> createAccessibilityViewCommandForState
    1309:1309:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean) -> createMaterialShapeDrawable
    1317:1331:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean,android.content.res.ColorStateList) -> createMaterialShapeDrawable
    1341:1343:void createShapeValueAnimator() -> createShapeValueAnimator
    1648:1648:void disableShapeAnimations() -> disableShapeAnimations
    1620:1627:void dispatchOnSlide(int) -> dispatchOnSlide
    1292:1298:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    960:962:int getExpandedOffset() -> getExpandedOffset
    1634:1634:int getPeekHeightMin() -> getPeekHeightMin
    1414:1418:float getYVelocity() -> getYVelocity
    1136:1136:boolean isGestureInsetBottomIgnored() -> isGestureInsetBottomIgnored
    396:400:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    405:408:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    501:558:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    414:494:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    766:769:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    618:659:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    382:390:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    376:376:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    600:601:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    668:742:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    564:589:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    1895:1896:void replaceAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> replaceAccessibilityActionForState
    1249:1252:void reset() -> reset
    1257:1272:void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) -> restoreOptionalState
    1024:1024:void setDraggable(boolean) -> setDraggable
    947:949:void setExpandedOffset(int) -> setExpandedOffset
    792:805:void setFitToContents(boolean) -> setFitToContents
    1129:1129:void setGestureInsetBottomIgnored(boolean) -> setGestureInsetBottomIgnored
    914:920:void setHalfExpandedRatio(float) -> setHalfExpandedRatio
    972:978:void setHideable(boolean) -> setHideable
    818:818:void setMaxWidth(int) -> setMaxWidth
    841:841:void setPeekHeight(int) -> setPeekHeight
    857:869:void setPeekHeight(int,boolean) -> setPeekHeight
    1040:1040:void setSaveFlags(int) -> setSaveFlags
    1001:1001:void setSkipCollapsed(boolean) -> setSkipCollapsed
    1103:1116:void setState(int) -> setState
    1172:1196:void setStateInternal(int) -> setStateInternal
    1358:1368:void setWindowInsetsListener(android.view.View) -> setWindowInsetsListener
    1424:1439:void settleToState(android.view.View,int) -> settleToState
    1140:1156:void settleToStatePendingLayout(int) -> settleToStatePendingLayout
    1277:1286:boolean shouldHide(android.view.View,float) -> shouldHide
    1443:1466:void startSettlingAnimation(android.view.View,int,int,boolean) -> startSettlingAnimation
    1841:1885:void updateAccessibilityActions() -> updateAccessibilityActions
    1206:1215:void updateDrawableForTargetState(int) -> updateDrawableForTargetState
    1786:1836:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
    874:882:void updatePeekHeight(boolean) -> updatePeekHeight
com.google.android.material.bottomsheet.BottomSheetBehavior$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$1:
    449:449:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,android.view.ViewGroup$LayoutParams) -> <init>
    452:452:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
    1149:1149:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1152:1152:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$3 -> com.google.android.material.bottomsheet.BottomSheetBehavior$3:
    1344:1344:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1347:1349:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomsheet.BottomSheetBehavior$4 -> com.google.android.material.bottomsheet.BottomSheetBehavior$4:
    1370:1370:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> <init>
    1374:1406:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomsheet.BottomSheetBehavior$5 -> com.google.android.material.bottomsheet.BottomSheetBehavior$5:
    1471:1471:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1606:1606:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1600:1601:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1611:1614:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    1499:1500:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1494:1494:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1514:1595:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1506:1506:boolean releasedLow(android.view.View) -> releasedLow
    1475:1488:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$6 -> com.google.android.material.bottomsheet.BottomSheetBehavior$6:
    1907:1907:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> <init>
    1910:1910:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback -> com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback:
    87:87:void <init>() -> <init>
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    1730:1730:void <clinit>() -> <clinit>
    1688:1694:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1698:1703:void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1722:1727:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    1731:1731:void <init>() -> <init>
    1731:1731:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1731:1731:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1735:1735:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1741:1741:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1731:1731:java.lang.Object[] newArray(int) -> newArray
    1747:1747:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable -> com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable:
    1659:1661:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1651:1651:boolean access$800(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable) -> access$800
    1651:1651:boolean access$802(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean) -> access$802
    1666:1671:void run() -> run
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
    130:195:void <clinit>() -> <clinit>
    216:216:void <init>(android.content.Context) -> <init>
    220:220:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:254:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1068:1068:void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener) -> addOnCheckedChangeListener
    260:260:java.lang.String getA11yClassName() -> getA11yClassName
    382:382:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    393:393:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    682:682:android.graphics.drawable.Drawable getIcon() -> getIcon
    637:637:int getIconSize() -> getIconSize
    1170:1173:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    932:932:int getStrokeWidth() -> getStrokeWidth
    327:333:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    365:370:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    555:566:int getTextHeight() -> getTextHeight
    543:551:int getTextWidth() -> getTextWidth
    1129:1129:boolean isCheckable() -> isCheckable
    1107:1107:boolean isChecked() -> isChecked
    802:802:boolean isIconEnd() -> isIconEnd
    798:798:boolean isIconStart() -> isIconStart
    806:806:boolean isIconTop() -> isIconTop
    570:570:boolean isLayoutRTL() -> isLayoutRTL
    1196:1196:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    468:472:void onAttachedToWindow() -> onAttachedToWindow
    1045:1052:int[] onCreateDrawableState(int) -> onCreateDrawableState
    274:276:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    265:269:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    447:450:void onLayout(boolean,int,int,int,int) -> onLayout
    290:296:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    282:284:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    456:457:void onSizeChanged(int,int,int,int) -> onSizeChanged
    462:463:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    1117:1119:boolean performClick() -> performClick
    1078:1078:void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener) -> removeOnCheckedChangeListener
    788:793:void resetIconDrawable() -> resetIconDrawable
    409:409:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    398:403:void setBackgroundColor(int) -> setBackgroundColor
    423:441:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    416:418:void setBackgroundResource(int) -> setBackgroundResource
    376:376:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    387:387:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1139:1140:void setCheckable(boolean) -> setCheckable
    1088:1101:void setChecked(boolean) -> setChecked
    479:481:void setElevation(float) -> setElevation
    581:581:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    1184:1184:void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener) -> setOnPressedChangeListenerInternal
    1189:1192:void setPressed(boolean) -> setPressed
    1151:1154:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1200:1201:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    308:313:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    346:351:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    1112:1112:void toggle() -> toggle
    754:783:void updateIcon(boolean) -> updateIcon
    486:537:void updateIconPosition(int,int) -> updateIconPosition
com.google.android.material.button.MaterialButton$SavedState -> com.google.android.material.button.MaterialButton$SavedState:
    1231:1231:void <clinit>() -> <clinit>
    1210:1210:void <init>(android.os.Parcelable) -> <init>
    1214:1218:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1228:1228:void readFromParcel(android.os.Parcel) -> readFromParcel
    1223:1224:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.button.MaterialButton$SavedState$1 -> com.google.android.material.button.MaterialButton$SavedState$1:
    1232:1232:void <init>() -> <init>
    1232:1232:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1232:1232:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1236:1236:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1242:1242:com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1232:1232:java.lang.Object[] newArray(int) -> newArray
    1248:1248:com.google.android.material.button.MaterialButton$SavedState[] newArray(int) -> newArray
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
    53:53:void <clinit>() -> <clinit>
    70:79:void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    203:239:android.graphics.drawable.Drawable createBackground() -> createBackground
    375:381:com.google.android.material.shape.Shapeable getMaskDrawable() -> getMaskDrawable
    328:336:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean) -> getMaterialShapeDrawable
    345:345:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> getMaterialShapeDrawable
    394:394:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    293:293:int getStrokeWidth() -> getStrokeWidth
    176:176:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    189:189:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    358:358:com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable() -> getSurfaceColorStrokeDrawable
    158:158:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    353:353:boolean isCheckable() -> isCheckable
    83:128:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    250:251:void setBackgroundColor(int) -> setBackgroundColor
    150:154:void setBackgroundOverwritten() -> setBackgroundOverwritten
    349:349:void setCheckable(boolean) -> setCheckable
    388:389:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    193:194:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    167:170:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    180:183:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    137:140:void updateBackground() -> updateBackground
    362:369:void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel) -> updateButtonShape
    244:245:void updateMaskBounds(int,int) -> updateMaskBounds
    297:305:void updateStroke() -> updateStroke
    163:163:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.button.MaterialButtonToggleGroup -> com.google.android.material.button.MaterialButtonToggleGroup:
    139:140:void <clinit>() -> <clinit>
    176:176:void <init>(android.content.Context) -> <init>
    180:180:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    143:201:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    122:122:int access$200(com.google.android.material.button.MaterialButtonToggleGroup,android.view.View) -> access$200
    122:122:boolean access$300(com.google.android.material.button.MaterialButtonToggleGroup) -> access$300
    122:122:boolean access$400(com.google.android.material.button.MaterialButtonToggleGroup) -> access$400
    122:122:int access$502(com.google.android.material.button.MaterialButtonToggleGroup,int) -> access$502
    122:122:boolean access$600(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> access$600
    122:122:void access$700(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> access$700
    426:426:void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> addOnButtonCheckedListener
    226:252:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    526:554:void adjustChildMarginsAndUpdateLayout() -> adjustChildMarginsAndUpdateLayout
    763:768:android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View) -> buildLayoutParams
    729:731:void checkForced(int,boolean) -> checkForced
    360:369:void clearChecked() -> clearChecked
    216:217:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    723:724:void dispatchOnButtonChecked(int,boolean) -> dispatchOnButtonChecked
    300:300:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    405:409:java.util.List getCheckedButtonIds() -> getCheckedButtonIds
    558:558:com.google.android.material.button.MaterialButton getChildButton(int) -> getChildButton
    777:782:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    601:603:int getFirstVisibleChildIndex() -> getFirstVisibleChildIndex
    638:646:int getIndexWithinVisibleButtons(android.view.View) -> getIndexWithinVisibleButtons
    612:614:int getLastVisibleChildIndex() -> getLastVisibleChildIndex
    656:669:com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int) -> getNewCornerData
    629:630:int getVisibleButtonCount() -> getVisibleButtonCount
    623:624:boolean isChildVisible(int) -> isChildVisible
    451:451:boolean isSingleSelection() -> isSingleSelection
    206:210:void onFinishInflate() -> onFinishInflate
    305:312:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    291:294:void onMeasure(int,int) -> onMeasure
    273:286:void onViewRemoved(android.view.View) -> onViewRemoved
    562:577:void resetChildMargins(int) -> resetChildMargins
    509:511:void setCheckedId(int) -> setCheckedId
    500:504:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    737:738:void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton) -> setGeneratedIdIfNeeded
    463:465:void setSingleSelection(boolean) -> setSingleSelection
    750:758:void setupButtonChild(com.google.android.material.button.MaterialButton) -> setupButtonChild
    678:686:void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> updateBuilderWithCornerData
    703:716:boolean updateCheckedStates(int,boolean) -> updateCheckedStates
    786:792:void updateChildOrder() -> updateChildOrder
    583:596:void updateChildShapes() -> updateChildShapes
com.google.android.material.button.MaterialButtonToggleGroup$1 -> com.google.android.material.button.MaterialButtonToggleGroup$1:
    150:150:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    150:150:int compare(java.lang.Object,java.lang.Object) -> compare
    153:164:int compare(com.google.android.material.button.MaterialButton,com.google.android.material.button.MaterialButton) -> compare
com.google.android.material.button.MaterialButtonToggleGroup$2 -> com.google.android.material.button.MaterialButtonToggleGroup$2:
    254:254:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    258:266:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker:
    795:795:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    795:795:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    799:813:void onCheckedChanged(com.google.android.material.button.MaterialButton,boolean) -> onCheckedChanged
com.google.android.material.button.MaterialButtonToggleGroup$CornerData -> com.google.android.material.button.MaterialButtonToggleGroup$CornerData:
    827:827:void <clinit>() -> <clinit>
    835:839:void <init>(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize) -> <init>
    869:869:com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> bottom
    849:849:com.google.android.material.button.MaterialButtonToggleGroup$CornerData end(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> end
    854:854:com.google.android.material.button.MaterialButtonToggleGroup$CornerData left(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> left
    859:859:com.google.android.material.button.MaterialButtonToggleGroup$CornerData right(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> right
    844:844:com.google.android.material.button.MaterialButtonToggleGroup$CornerData start(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> start
    864:864:com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> top
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker:
    817:817:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    817:817:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    821:821:void onPressedChanged(com.google.android.material.button.MaterialButton,boolean) -> onPressedChanged
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.canvas.CanvasCompat:
    58:61:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> saveLayerAlpha
com.google.android.material.checkbox.MaterialCheckBox -> com.google.android.material.checkbox.MaterialCheckBox:
    44:46:void <clinit>() -> <clinit>
    61:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    117:134:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    90:93:void onAttachedToWindow() -> onAttachedToWindow
    103:107:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
    133:140:void <clinit>() -> <clinit>
    187:187:void <init>(android.content.Context) -> <init>
    191:191:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    170:247:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    129:129:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> access$000
    129:129:boolean access$100(com.google.android.material.chip.Chip) -> access$100
    129:129:android.graphics.RectF access$200(com.google.android.material.chip.Chip) -> access$200
    129:129:android.view.View$OnClickListener access$300(com.google.android.material.chip.Chip) -> access$300
    129:129:boolean access$402(com.google.android.material.chip.Chip,boolean) -> access$402
    129:129:android.graphics.Rect access$500(com.google.android.material.chip.Chip) -> access$500
    129:129:android.graphics.Rect access$600() -> access$600
    485:485:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> applyChipDrawable
    920:956:int[] createCloseIconDrawableState() -> createCloseIconDrawableState
    851:853:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    858:869:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    904:913:void drawableStateChanged() -> drawableStateChanged
    2288:2336:boolean ensureAccessibleTouchTarget(int) -> ensureAccessibleTouchTarget
    450:453:void ensureChipDrawableHasCallback() -> ensureChipDrawableHasCallback
    459:460:android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    1130:1130:float getChipMinHeight() -> getChipMinHeight
    1755:1755:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    968:975:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    980:982:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    637:637:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    880:884:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1414:1414:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    819:843:boolean handleAccessibilityExit(android.view.MotionEvent) -> handleAccessibilityExit
    963:963:boolean hasCloseIcon() -> hasCloseIcon
    309:325:void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int) -> initMinTouchTarget
    404:405:void initOutlineProvider() -> initOutlineProvider
    2351:2351:void insetChipBackgroundDrawable(int,int,int,int) -> insetChipBackgroundDrawable
    1765:1765:boolean isCheckable() -> isCheckable
    1587:1587:boolean isCloseIconVisible() -> isCloseIconVisible
    252:254:void onAttachedToWindow() -> onAttachedToWindow
    696:699:void onChipDrawableSizeChange() -> onChipDrawableSizeChange
    490:495:int[] onCreateDrawableState(int) -> onCreateDrawableState
    874:875:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    799:810:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    268:292:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    989:990:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    360:366:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    765:794:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    744:754:boolean performCloseIconClick() -> performCloseIconClick
    2341:2345:void removeBackgroundInset() -> removeBackgroundInset
    530:533:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    520:520:void setBackgroundColor(int) -> setBackgroundColor
    539:542:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    525:525:void setBackgroundResource(int) -> setBackgroundResource
    510:510:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    515:515:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    705:714:void setChecked(boolean) -> setChecked
    427:434:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    896:898:void setCloseIconHovered(boolean) -> setCloseIconHovered
    889:891:void setCloseIconPressed(boolean) -> setCloseIconPressed
    553:559:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    597:603:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    610:616:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    626:631:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    565:571:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    581:587:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    260:262:void setElevation(float) -> setElevation
    642:650:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    503:505:void setGravity(int) -> setGravity
    1326:1330:void setLayoutDirection(int) -> setLayoutDirection
    665:667:void setLines(int) -> setLines
    681:683:void setMaxLines(int) -> setMaxLines
    688:690:void setMaxWidth(int) -> setMaxWidth
    673:675:void setMinLines(int) -> setMinLines
    725:725:void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListenerInternal
    1182:1182:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    657:659:void setSingleLine(boolean) -> setSingleLine
    1336:1344:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1385:1389:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1394:1398:void setTextAppearance(int) -> setTextAppearance
    2265:2265:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    480:480:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> unapplyChipDrawable
    299:303:void updateAccessibilityDelegate() -> updateAccessibilityDelegate
    439:445:void updateBackgroundDrawable() -> updateBackgroundDrawable
    467:475:void updateFrameworkRippleBackground() -> updateFrameworkRippleBackground
    333:354:void updatePaddingInternal() -> updatePaddingInternal
    1402:1408:void updateTextPaintDrawState() -> updateTextPaintDrawState
    374:399:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$1:
    173:173:void <init>(com.google.android.material.chip.Chip) -> <init>
    177:179:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$2:
    406:406:void <init>(com.google.android.material.chip.Chip) -> <init>
    410:413:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$ChipTouchHelper:
    998:999:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    1004:1004:int getVirtualViewAt(float,float) -> getVirtualViewAt
    1011:1013:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    1077:1079:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    1052:1068:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    1029:1046:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    1020:1021:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.ChipDrawable:
    165:169:void <clinit>() -> <clinit>
    175:331:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1319:1335:void applyChildDrawable(android.graphics.drawable.Drawable) -> applyChildDrawable
    813:829:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipIconBounds
    528:529:float calculateChipIconWidth() -> calculateChipIconWidth
    923:936:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipTouchBounds
    904:918:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconBounds
    942:961:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconTouchBounds
    568:569:float calculateCloseIconWidth() -> calculateCloseIconWidth
    878:895:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> calculateTextBounds
    869:870:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    836:850:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> calculateTextOriginAndAlignment
    523:523:boolean canShowCheckedIcon() -> canShowCheckedIcon
    279:280:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    580:625:void draw(android.graphics.Canvas) -> draw
    699:709:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCheckedIcon
    639:644:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> drawChipBackground
    684:694:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> drawChipIcon
    653:667:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> drawChipStroke
    630:634:void drawChipSurface(android.graphics.Canvas,android.graphics.Rect) -> drawChipSurface
    750:767:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCloseIcon
    672:679:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> drawCompatRipple
    772:804:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> drawDebug
    715:744:void drawText(android.graphics.Canvas,android.graphics.Rect) -> drawText
    1228:1228:int getAlpha() -> getAlpha
    1467:1467:float getChipCornerRadius() -> getChipCornerRadius
    2410:2410:float getChipEndPadding() -> getChipEndPadding
    1696:1696:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1433:1433:float getChipMinHeight() -> getChipMinHeight
    2158:2158:float getChipStartPadding() -> getChipStartPadding
    1846:1846:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1936:1936:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    1003:1003:int[] getCloseIconState() -> getCloseIconState
    482:482:void getCloseIconTouchBounds(android.graphics.RectF) -> getCloseIconTouchBounds
    1242:1242:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    551:555:float getCurrentChipIconHeight() -> getCurrentChipIconHeight
    539:541:float getCurrentChipIconWidth() -> getCurrentChipIconWidth
    1641:1641:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    503:503:int getIntrinsicHeight() -> getIntrinsicHeight
    488:497:int getIntrinsicWidth() -> getIntrinsicWidth
    1270:1281:void getOutline(android.graphics.Outline) -> getOutline
    1579:1579:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1608:1608:java.lang.CharSequence getText() -> getText
    1629:1629:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2304:2304:float getTextEndPadding() -> getTextEndPadding
    2270:2270:float getTextStartPadding() -> getTextStartPadding
    1345:1345:android.graphics.ColorFilter getTintColorFilter() -> getTintColorFilter
    1366:1366:boolean hasState(int[],int) -> hasState
    1286:1288:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1940:1940:boolean isCheckable() -> isCheckable
    983:983:boolean isCloseIconStateful() -> isCloseIconStateful
    1799:1799:boolean isCloseIconVisible() -> isCloseIconVisible
    969:977:boolean isStateful() -> isStateful
    1141:1141:boolean isStateful(android.content.res.ColorStateList) -> isStateful
    1145:1145:boolean isStateful(android.graphics.drawable.Drawable) -> isStateful
    1149:1151:boolean isStateful(com.google.android.material.resources.TextAppearance) -> isStateful
    337:439:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    1156:1169:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1176:1189:boolean onLevelChange(int) -> onLevelChange
    463:465:void onSizeChange() -> onSizeChange
    1014:1017:boolean onStateChange(int[]) -> onStateChange
    1023:1135:boolean onStateChange(int[],int[]) -> onStateChange
    1008:1009:void onTextSizeChange() -> onTextSizeChange
    1294:1296:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1220:1222:void setAlpha(int) -> setAlpha
    1948:1959:void setCheckable(boolean) -> setCheckable
    2038:2049:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    2078:2085:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    1979:1993:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1420:1422:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1489:1492:void setChipCornerRadius(float) -> setChipCornerRadius
    2430:2433:void setChipEndPadding(float) -> setChipEndPadding
    1704:1717:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1786:1793:void setChipIconSize(float) -> setChipIconSize
    1745:1752:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1663:1677:void setChipIconVisible(boolean) -> setChipIconVisible
    1453:1456:void setChipMinHeight(float) -> setChipMinHeight
    2178:2181:void setChipStartPadding(float) -> setChipStartPadding
    1524:1529:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1560:1567:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1354:1356:void setChipSurfaceColor(android.content.res.ColorStateList) -> setChipSurfaceColor
    1854:1870:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    2394:2398:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    1916:1920:void setCloseIconSize(float) -> setCloseIconSize
    2358:2362:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    991:994:boolean setCloseIconState(int[]) -> setCloseIconState
    1896:1903:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1813:1827:void setCloseIconVisible(boolean) -> setCloseIconVisible
    1233:1235:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    458:458:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> setDelegate
    1645:1645:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2148:2148:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    2251:2258:void setIconEndPadding(float) -> setIconEndPadding
    2212:2219:void setIconStartPadding(float) -> setIconStartPadding
    2453:2453:void setMaxWidth(int) -> setMaxWidth
    1599:1602:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    2467:2467:void setShouldDrawText(boolean) -> setShouldDrawText
    2117:2117:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1619:1623:void setText(java.lang.CharSequence) -> setText
    1637:1637:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1633:1633:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2324:2327:void setTextEndPadding(float) -> setTextEndPadding
    2290:2293:void setTextStartPadding(float) -> setTextStartPadding
    1247:1249:void setTintList(android.content.res.ColorStateList) -> setTintList
    1255:1258:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    444:447:void setUseCompatRipple(boolean) -> setUseCompatRipple
    1196:1209:boolean setVisible(boolean,boolean) -> setVisible
    2457:2457:boolean shouldDrawText() -> shouldDrawText
    513:513:boolean showsCheckedIcon() -> showsCheckedIcon
    508:508:boolean showsChipIcon() -> showsChipIcon
    518:518:boolean showsCloseIcon() -> showsCloseIcon
    1310:1310:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> unapplyChildDrawable
    1302:1304:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1349:1350:void updateCompatRippleColor() -> updateCompatRippleColor
    1877:1879:void updateFrameworkCloseIconRipple() -> updateFrameworkCloseIconRipple
com.google.android.material.chip.ChipGroup -> com.google.android.material.chip.ChipGroup:
    91:91:void <clinit>() -> <clinit>
    110:110:void <init>(android.content.Context) -> <init>
    114:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:142:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:com.google.android.material.chip.ChipGroup$CheckedStateTracker access$1000(com.google.android.material.chip.ChipGroup) -> access$1000
    56:56:boolean access$300(com.google.android.material.chip.ChipGroup) -> access$300
    56:56:boolean access$400(com.google.android.material.chip.ChipGroup) -> access$400
    56:56:void access$500(com.google.android.material.chip.ChipGroup,int,boolean) -> access$500
    56:56:void access$600(com.google.android.material.chip.ChipGroup,int,boolean) -> access$600
    56:56:int access$700(com.google.android.material.chip.ChipGroup) -> access$700
    56:56:boolean access$800(com.google.android.material.chip.ChipGroup) -> access$800
    56:56:void access$900(com.google.android.material.chip.ChipGroup,int) -> access$900
    203:213:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    264:276:void check(int) -> check
    181:181:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    332:341:void clearCheck() -> clearCheck
    176:176:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    164:164:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    170:170:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    307:313:java.util.List getCheckedChipIds() -> getCheckedChipIds
    377:378:int getChipCount() -> getChipCount
    391:397:int getIndexOfChip(android.view.View) -> getIndexOfChip
    462:462:boolean isSingleLine() -> isSingleLine
    479:479:boolean isSingleSelection() -> isSingleSelection
    192:197:void onFinishInflate() -> onFinishInflate
    147:156:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    355:355:void setCheckedId(int) -> setCheckedId
    359:362:void setCheckedId(int,boolean) -> setCheckedId
    367:371:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    426:429:void setChipSpacingHorizontal(int) -> setChipSpacingHorizontal
    446:449:void setChipSpacingVertical(int) -> setChipSpacingVertical
    187:187:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    511:511:void setSelectionRequired(boolean) -> setSelectionRequired
    469:469:void setSingleLine(boolean) -> setSingleLine
    488:491:void setSingleSelection(boolean) -> setSingleSelection
com.google.android.material.chip.ChipGroup$CheckedStateTracker -> com.google.android.material.chip.ChipGroup$CheckedStateTracker:
    525:525:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    525:525:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    529:548:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.google.android.material.chip.ChipGroup$LayoutParams -> com.google.android.material.chip.ChipGroup$LayoutParams:
    75:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:79:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    83:83:void <init>(int,int) -> <init>
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener -> com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    558:558:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    558:558:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    558:558:android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> access$202
    563:578:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    584:589:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.CircularRevealCompat:
    57:76:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    123:123:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> createCircularRevealListener
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.CircularRevealCompat$1:
    123:123:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    131:131:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    126:126:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.CircularRevealHelper:
    127:132:void <clinit>() -> <clinit>
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    209:209:void <clinit>() -> <clinit>
    207:210:void <init>() -> <init>
    207:207:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    216:220:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    181:181:void <clinit>() -> <clinit>
    185:185:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    191:191:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    196:196:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    230:230:void <clinit>() -> <clinit>
    234:234:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object get(java.lang.Object) -> get
    240:240:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    228:228:void set(java.lang.Object,java.lang.Object) -> set
    245:245:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:149:void <init>(float,float,float) -> <init>
    157:159:void set(float,float,float) -> set
com.google.android.material.color.MaterialColors -> com.google.android.material.color.MaterialColors:
    55:55:int getColor(android.view.View,int) -> getColor
    66:66:int getColor(android.content.Context,int,java.lang.String) -> getColor
    76:76:int getColor(android.view.View,int,int) -> getColor
    86:88:int getColor(android.content.Context,int,int) -> getColor
    116:118:int layer(android.view.View,int,int,float) -> layer
    130:132:int layer(int,int,float) -> layer
    141:141:int layer(int,int) -> layer
com.google.android.material.datepicker.CalendarConstraints -> com.google.android.material.datepicker.CalendarConstraints:
    149:149:void <clinit>() -> <clinit>
    33:33:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$1) -> <init>
    60:72:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.Month) -> <init>
    33:33:com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints) -> access$100
    33:33:com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints) -> access$200
    33:33:com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints) -> access$300
    33:33:com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints) -> access$400
    185:190:com.google.android.material.datepicker.Month clamp(com.google.android.material.datepicker.Month) -> clamp
    130:137:boolean equals(java.lang.Object) -> equals
    83:83:com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator() -> getDateValidator
    95:95:com.google.android.material.datepicker.Month getEnd() -> getEnd
    114:114:int getMonthSpan() -> getMonthSpan
    101:101:com.google.android.material.datepicker.Month getOpenAt() -> getOpenAt
    89:89:com.google.android.material.datepicker.Month getStart() -> getStart
    122:122:int getYearSpan() -> getYearSpan
    142:143:int hashCode() -> hashCode
    76:76:boolean isWithinBounds(long) -> isWithinBounds
    175:178:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CalendarConstraints$1 -> com.google.android.material.datepicker.CalendarConstraints$1:
    150:150:void <init>() -> <init>
    150:150:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    154:158:com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel) -> createFromParcel
    150:150:java.lang.Object[] newArray(int) -> newArray
    164:164:com.google.android.material.datepicker.CalendarConstraints[] newArray(int) -> newArray
com.google.android.material.datepicker.CalendarConstraints$Builder -> com.google.android.material.datepicker.CalendarConstraints$Builder:
    204:210:void <clinit>() -> <clinit>
    214:225:void <init>(com.google.android.material.datepicker.CalendarConstraints) -> <init>
    322:328:com.google.android.material.datepicker.CalendarConstraints build() -> build
    305:305:com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long) -> setOpenAt
com.google.android.material.datepicker.CalendarItemStyle -> com.google.android.material.datepicker.CalendarItemStyle:
    66:77:void <init>(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect) -> <init>
    87:130:com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int) -> create
    166:166:int getBottomInset() -> getBottomInset
    162:162:int getTopInset() -> getTopInset
    136:149:void styleItem(android.widget.TextView) -> styleItem
com.google.android.material.datepicker.CalendarStyle -> com.google.android.material.datepicker.CalendarStyle:
    74:115:void <init>(android.content.Context) -> <init>
com.google.android.material.datepicker.CompositeDateValidator -> com.google.android.material.datepicker.CompositeDateValidator:
    42:108:void <clinit>() -> <clinit>
    27:27:void <init>(java.util.List,com.google.android.material.datepicker.CompositeDateValidator$Operator,com.google.android.material.datepicker.CompositeDateValidator$1) -> <init>
    88:90:void <init>(java.util.List,com.google.android.material.datepicker.CompositeDateValidator$Operator) -> <init>
    27:27:com.google.android.material.datepicker.CompositeDateValidator$Operator access$000() -> access$000
    27:27:com.google.android.material.datepicker.CompositeDateValidator$Operator access$100() -> access$100
    166:172:boolean equals(java.lang.Object) -> equals
    177:177:int hashCode() -> hashCode
    146:146:boolean isValid(long) -> isValid
    156:157:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CompositeDateValidator$1 -> com.google.android.material.datepicker.CompositeDateValidator$1:
    43:43:void <init>() -> <init>
    47:51:boolean isValid(java.util.List,long) -> isValid
com.google.android.material.datepicker.CompositeDateValidator$2 -> com.google.android.material.datepicker.CompositeDateValidator$2:
    66:66:void <init>() -> <init>
    70:74:boolean isValid(java.util.List,long) -> isValid
com.google.android.material.datepicker.CompositeDateValidator$3 -> com.google.android.material.datepicker.CompositeDateValidator$3:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    114:126:com.google.android.material.datepicker.CompositeDateValidator createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    132:132:com.google.android.material.datepicker.CompositeDateValidator[] newArray(int) -> newArray
com.google.android.material.datepicker.DateFormatTextWatcher -> com.google.android.material.datepicker.DateFormatTextWatcher:
    48:54:void <init>(java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints) -> <init>
    31:31:com.google.android.material.textfield.TextInputLayout access$000(com.google.android.material.datepicker.DateFormatTextWatcher) -> access$000
    31:31:java.text.DateFormat access$100(com.google.android.material.datepicker.DateFormatTextWatcher) -> access$100
    31:31:java.lang.String access$200(com.google.android.material.datepicker.DateFormatTextWatcher) -> access$200
    107:107:java.lang.Runnable createRangeErrorCallback(long) -> createRangeErrorCallback
    81:102:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    118:118:void runValidation(android.view.View,java.lang.Runnable) -> runValidation
com.google.android.material.datepicker.DateFormatTextWatcher$1 -> com.google.android.material.datepicker.DateFormatTextWatcher$1:
    55:55:void <init>(com.google.android.material.datepicker.DateFormatTextWatcher,java.lang.String) -> <init>
    58:70:void run() -> run
com.google.android.material.datepicker.DateFormatTextWatcher$2 -> com.google.android.material.datepicker.DateFormatTextWatcher$2:
    107:107:void <init>(com.google.android.material.datepicker.DateFormatTextWatcher,long) -> <init>
    110:112:void run() -> run
com.google.android.material.datepicker.DateStrings -> com.google.android.material.datepicker.DateStrings:
    136:136:androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long) -> getDateRangeString
    158:186:androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long,java.text.SimpleDateFormat) -> getDateRangeString
    107:107:java.lang.String getDateString(long) -> getDateString
    122:132:java.lang.String getDateString(long,java.text.SimpleDateFormat) -> getDateString
    64:64:java.lang.String getMonthDay(long) -> getMonthDay
    78:81:java.lang.String getMonthDay(long,java.util.Locale) -> getMonthDay
    85:85:java.lang.String getMonthDayOfWeekDay(long) -> getMonthDayOfWeekDay
    89:92:java.lang.String getMonthDayOfWeekDay(long,java.util.Locale) -> getMonthDayOfWeekDay
    38:39:java.lang.String getYearMonth(android.content.Context,long) -> getYearMonth
    43:43:java.lang.String getYearMonthDay(long) -> getYearMonthDay
    57:60:java.lang.String getYearMonthDay(long,java.util.Locale) -> getYearMonthDay
    96:96:java.lang.String getYearMonthDayOfWeekDay(long) -> getYearMonthDayOfWeekDay
    100:103:java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale) -> getYearMonthDayOfWeekDay
com.google.android.material.datepicker.DateValidatorPointBackward -> com.google.android.material.datepicker.DateValidatorPointBackward:
    58:58:void <clinit>() -> <clinit>
    31:31:void <init>(long,com.google.android.material.datepicker.DateValidatorPointBackward$1) -> <init>
    35:36:void <init>(long) -> <init>
    93:98:boolean equals(java.lang.Object) -> equals
    103:104:int hashCode() -> hashCode
    75:75:boolean isValid(long) -> isValid
    85:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointBackward$1 -> com.google.android.material.datepicker.DateValidatorPointBackward$1:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:com.google.android.material.datepicker.DateValidatorPointBackward createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    69:69:com.google.android.material.datepicker.DateValidatorPointBackward[] newArray(int) -> newArray
com.google.android.material.datepicker.DateValidatorPointForward -> com.google.android.material.datepicker.DateValidatorPointForward:
    57:57:void <clinit>() -> <clinit>
    30:30:void <init>(long,com.google.android.material.datepicker.DateValidatorPointForward$1) -> <init>
    34:35:void <init>(long) -> <init>
    92:96:boolean equals(java.lang.Object) -> equals
    44:44:com.google.android.material.datepicker.DateValidatorPointForward from(long) -> from
    101:102:int hashCode() -> hashCode
    74:74:boolean isValid(long) -> isValid
    84:84:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointForward$1 -> com.google.android.material.datepicker.DateValidatorPointForward$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    68:68:com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int) -> newArray
com.google.android.material.datepicker.DaysOfWeekAdapter -> com.google.android.material.datepicker.DaysOfWeekAdapter:
    49:49:void <clinit>() -> <clinit>
    52:55:void <init>() -> <init>
    75:75:int getCount() -> getCount
    41:41:java.lang.Object getItem(int) -> getItem
    61:64:java.lang.Integer getItem(int) -> getItem
    82:95:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    101:102:int positionToDayOfWeek(int) -> positionToDayOfWeek
com.google.android.material.datepicker.MaterialCalendar -> com.google.android.material.datepicker.MaterialCalendar:
    74:80:void <clinit>() -> <clinit>
    60:60:void <init>() -> <init>
    60:60:androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar) -> access$000
    60:60:com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar) -> access$100
    60:60:com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar) -> access$200
    60:60:androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar) -> access$300
    60:60:com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar) -> access$400
    60:60:android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar) -> access$500
    60:60:com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month) -> access$602
    366:437:void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter) -> addActionsToMonthNavigation
    466:466:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    232:232:androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration() -> createItemDecoration
    290:290:com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints() -> getCalendarConstraints
    324:324:com.google.android.material.datepicker.CalendarStyle getCalendarStyle() -> getCalendarStyle
    284:284:com.google.android.material.datepicker.Month getCurrentMonth() -> getCurrentMonth
    320:320:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    335:335:int getDayHeight(android.content.Context) -> getDayHeight
    461:461:androidx.recyclerview.widget.LinearLayoutManager getLayoutManager() -> getLayoutManager
    98:104:com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    119:124:void onCreate(android.os.Bundle) -> onCreate
    133:226:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    110:114:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    450:450:void postSmoothRecyclerViewScroll(int) -> postSmoothRecyclerViewScroll
    300:313:void setCurrentMonth(com.google.android.material.datepicker.Month) -> setCurrentMonth
    339:352:void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector) -> setSelector
    357:360:void toggleVisibleSelector() -> toggleVisibleSelector
com.google.android.material.datepicker.MaterialCalendar$1 -> com.google.android.material.datepicker.MaterialCalendar$1:
    153:153:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    157:159:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$10 -> com.google.android.material.datepicker.MaterialCalendar$10:
    451:451:void <init>(com.google.android.material.datepicker.MaterialCalendar,int) -> <init>
    454:454:void run() -> run
com.google.android.material.datepicker.MaterialCalendar$2 -> com.google.android.material.datepicker.MaterialCalendar$2:
    169:169:void <init>(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int) -> <init>
    172:177:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
com.google.android.material.datepicker.MaterialCalendar$3 -> com.google.android.material.datepicker.MaterialCalendar$3:
    189:189:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    193:201:void onDayClick(long) -> onDayClick
com.google.android.material.datepicker.MaterialCalendar$4 -> com.google.android.material.datepicker.MaterialCalendar$4:
    232:235:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    240:275:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
com.google.android.material.datepicker.MaterialCalendar$5 -> com.google.android.material.datepicker.MaterialCalendar$5:
    370:370:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    375:379:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$6 -> com.google.android.material.datepicker.MaterialCalendar$6:
    393:393:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton) -> <init>
    409:413:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    398:403:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.google.android.material.datepicker.MaterialCalendar$7 -> com.google.android.material.datepicker.MaterialCalendar$7:
    420:420:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    423:423:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$8 -> com.google.android.material.datepicker.MaterialCalendar$8:
    428:428:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    431:433:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$9 -> com.google.android.material.datepicker.MaterialCalendar$9:
    438:438:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    441:443:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector -> com.google.android.material.datepicker.MaterialCalendar$CalendarSelector:
    63:65:void <clinit>() -> <clinit>
    63:63:void <init>(java.lang.String,int) -> <init>
    63:63:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String) -> valueOf
    63:63:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values() -> values
com.google.android.material.datepicker.MaterialCalendarGridView -> com.google.android.material.datepicker.MaterialCalendarGridView:
    46:46:void <init>(android.content.Context) -> <init>
    50:50:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:60:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    222:226:void gainFocus(int,android.graphics.Rect) -> gainFocus
    40:40:android.widget.Adapter getAdapter() -> getAdapter
    40:40:android.widget.ListAdapter getAdapter() -> getAdapter
    108:108:com.google.android.material.datepicker.MonthAdapter getAdapter() -> getAdapter
    242:242:int horizontalMidPoint(android.view.View) -> horizontalMidPoint
    75:76:void onAttachedToWindow() -> onAttachedToWindow
    125:192:void onDraw(android.graphics.Canvas) -> onDraw
    214:216:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    90:99:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    199:207:void onMeasure(int,int) -> onMeasure
    40:40:void setAdapter(android.widget.Adapter) -> setAdapter
    113:120:void setAdapter(android.widget.ListAdapter) -> setAdapter
    81:84:void setSelection(int) -> setSelection
    238:238:boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long) -> skipMonth
com.google.android.material.datepicker.MaterialCalendarGridView$1 -> com.google.android.material.datepicker.MaterialCalendarGridView$1:
    62:62:void <init>(com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    66:68:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker -> com.google.android.material.datepicker.MaterialDatePicker:
    71:73:void <clinit>() -> <clinit>
    62:114:void <init>() -> <init>
    62:62:java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker) -> access$000
    62:62:java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker) -> access$100
    62:62:void access$200(com.google.android.material.datepicker.MaterialDatePicker) -> access$200
    62:62:com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker) -> access$300
    62:62:android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker) -> access$400
    62:62:com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker) -> access$500
    62:62:void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton) -> access$600
    62:62:void access$700(com.google.android.material.datepicker.MaterialDatePicker) -> access$700
    395:401:android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context) -> createHeaderToggleDrawable
    425:437:int getDialogPickerHeight(android.content.Context) -> getDialogPickerHeight
    105:105:java.lang.String getHeaderText() -> getHeaderText
    442:447:int getPaddedPickerWidth(android.content.Context) -> getPaddedPickerWidth
    323:323:java.lang.Object getSelection() -> getSelection
    175:178:int getThemeResId(android.content.Context) -> getThemeResId
    362:370:void initHeaderToggle(android.content.Context) -> initHeaderToggle
    406:406:boolean isFullscreen(android.content.Context) -> isFullscreen
    410:410:boolean isNestedScrollable(android.content.Context) -> isNestedScrollable
    299:302:void onCancel(android.content.DialogInterface) -> onCancel
    164:171:void onCreate(android.os.Bundle) -> onCreate
    184:198:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    208:257:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    307:314:void onDismiss(android.content.DialogInterface) -> onDismiss
    148:159:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    272:288:void onStart() -> onStart
    293:294:void onStop() -> onStop
    414:420:boolean readMaterialCalendarStyleBoolean(android.content.Context,int) -> readMaterialCalendarStyleBoolean
    334:346:void startPickerFragment() -> startPickerFragment
    327:330:void updateHeader() -> updateHeader
    385:389:void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton) -> updateToggleContentDescription
com.google.android.material.datepicker.MaterialDatePicker$1 -> com.google.android.material.datepicker.MaterialDatePicker$1:
    244:244:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    248:251:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$2 -> com.google.android.material.datepicker.MaterialDatePicker$2:
    258:258:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    261:264:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$3 -> com.google.android.material.datepicker.MaterialDatePicker$3:
    347:347:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    356:356:void onIncompleteSelectionChanged() -> onIncompleteSelectionChanged
    350:351:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.MaterialDatePicker$4 -> com.google.android.material.datepicker.MaterialDatePicker$4:
    371:371:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    375:379:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialTextInputPicker -> com.google.android.material.datepicker.MaterialTextInputPicker:
    35:35:void <init>() -> <init>
    50:55:com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    69:73:void onCreate(android.os.Bundle) -> onCreate
    82:84:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    61:64:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.material.datepicker.MaterialTextInputPicker$1 -> com.google.android.material.datepicker.MaterialTextInputPicker$1:
    89:89:void <init>(com.google.android.material.datepicker.MaterialTextInputPicker) -> <init>
    99:100:void onIncompleteSelectionChanged() -> onIncompleteSelectionChanged
    92:93:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.Month -> com.google.android.material.datepicker.Month:
    202:202:void <clinit>() -> <clinit>
    60:67:void <init>(java.util.Calendar) -> <init>
    31:31:int compareTo(java.lang.Object) -> compareTo
    134:134:int compareTo(com.google.android.material.datepicker.Month) -> compareTo
    76:78:com.google.android.material.datepicker.Month create(long) -> create
    91:94:com.google.android.material.datepicker.Month create(int,int) -> create
    103:103:com.google.android.material.datepicker.Month current() -> current
    107:109:int daysFromStartOfWeekToFirstOfMonth() -> daysFromStartOfWeekToFirstOfMonth
    119:123:boolean equals(java.lang.Object) -> equals
    168:170:long getDay(int) -> getDay
    174:176:int getDayOfMonth(long) -> getDayOfMonth
    193:196:java.lang.String getLongName(android.content.Context) -> getLongName
    155:155:long getStableId() -> getStableId
    128:129:int hashCode() -> hashCode
    185:187:com.google.android.material.datepicker.Month monthsLater(int) -> monthsLater
    147:150:int monthsUntil(com.google.android.material.datepicker.Month) -> monthsUntil
    226:227:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.Month$1 -> com.google.android.material.datepicker.Month$1:
    203:203:void <init>() -> <init>
    203:203:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    207:209:com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel) -> createFromParcel
    203:203:java.lang.Object[] newArray(int) -> newArray
    215:215:com.google.android.material.datepicker.Month[] newArray(int) -> newArray
com.google.android.material.datepicker.MonthAdapter -> com.google.android.material.datepicker.MonthAdapter:
    43:43:void <clinit>() -> <clinit>
    56:60:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints) -> <init>
    240:240:int dayToPosition(int) -> dayToPosition
    212:212:int firstPositionInMonth() -> firstPositionInMonth
    100:100:int getCount() -> getCount
    38:38:java.lang.Object getItem(int) -> getItem
    79:82:java.lang.Long getItem(int) -> getItem
    87:87:long getItemId(int) -> getItemId
    38:38:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    106:136:android.widget.TextView getView(int,android.view.View,android.view.ViewGroup) -> getView
    199:200:void initializeStyles(android.content.Context) -> initializeStyles
    253:253:boolean isFirstInRow(int) -> isFirstInRow
    261:261:boolean isLastInRow(int) -> isLastInRow
    190:191:boolean isSelected(long) -> isSelected
    223:223:int lastPositionInMonth() -> lastPositionInMonth
    234:234:int positionToDay(int) -> positionToDay
    173:186:void updateSelectedState(android.widget.TextView,long) -> updateSelectedState
    157:163:void updateSelectedStateForDate(com.google.android.material.datepicker.MaterialCalendarGridView,long) -> updateSelectedStateForDate
    142:152:void updateSelectedStates(com.google.android.material.datepicker.MaterialCalendarGridView) -> updateSelectedStates
    245:245:boolean withinMonth(int) -> withinMonth
com.google.android.material.datepicker.MonthsPagerAdapter -> com.google.android.material.datepicker.MonthsPagerAdapter:
    50:71:void <init>(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener) -> <init>
    38:38:com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter) -> access$000
    139:139:int getItemCount() -> getItemCount
    134:134:long getItemId(int) -> getItemId
    149:149:com.google.android.material.datepicker.Month getPageMonth(int) -> getPageMonth
    144:144:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    153:153:int getPosition(com.google.android.material.datepicker.Month) -> getPosition
    38:38:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    108:121:void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int) -> onBindViewHolder
    38:38:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    95:102:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.MonthsPagerAdapter$1 -> com.google.android.material.datepicker.MonthsPagerAdapter$1:
    122:122:void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    125:126:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder -> com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder:
    80:85:void <init>(android.widget.LinearLayout,boolean) -> <init>
com.google.android.material.datepicker.OnSelectionChangedListener -> com.google.android.material.datepicker.OnSelectionChangedListener:
    24:24:void <init>() -> <init>
com.google.android.material.datepicker.PickerFragment -> com.google.android.material.datepicker.PickerFragment:
    21:23:void <init>() -> <init>
    30:30:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    40:40:void clearOnSelectionChangedListeners() -> clearOnSelectionChangedListeners
com.google.android.material.datepicker.RangeDateSelector -> com.google.android.material.datepicker.RangeDateSelector:
    280:280:void <clinit>() -> <clinit>
    52:60:void <init>() -> <init>
    52:52:java.lang.Long access$002(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$002
    52:52:void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> access$100
    52:52:java.lang.Long access$202(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$202
    52:52:java.lang.Long access$302(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$302
    52:52:java.lang.Long access$402(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$402
    264:268:void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout) -> clearInvalidRange
    125:135:int getDefaultThemeResId(android.content.Context) -> getDefaultThemeResId
    113:118:java.util.Collection getSelectedDays() -> getSelectedDays
    101:106:java.util.Collection getSelectedRanges() -> getSelectedRanges
    51:51:java.lang.Object getSelection() -> getSelection
    95:95:androidx.core.util.Pair getSelection() -> getSelection
    141:157:java.lang.String getSelectionDisplayString(android.content.Context) -> getSelectionDisplayString
    76:78:boolean isSelectionComplete() -> isSelectionComplete
    175:235:android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> onCreateTextInputView
    64:70:void select(long) -> select
    273:274:void setInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout) -> setInvalidRange
    248:259:void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> updateIfValidTextProposal
    306:307:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.RangeDateSelector$1 -> com.google.android.material.datepicker.RangeDateSelector$1:
    207:207:void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    217:218:void onInvalidDate() -> onInvalidDate
    211:212:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.RangeDateSelector$2 -> com.google.android.material.datepicker.RangeDateSelector$2:
    223:223:void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    230:231:void onInvalidDate() -> onInvalidDate
    225:226:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.RangeDateSelector$3 -> com.google.android.material.datepicker.RangeDateSelector$3:
    281:281:void <init>() -> <init>
    281:281:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    285:288:com.google.android.material.datepicker.RangeDateSelector createFromParcel(android.os.Parcel) -> createFromParcel
    281:281:java.lang.Object[] newArray(int) -> newArray
    295:295:com.google.android.material.datepicker.RangeDateSelector[] newArray(int) -> newArray
com.google.android.material.datepicker.SingleDateSelector -> com.google.android.material.datepicker.SingleDateSelector:
    166:166:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    49:49:void access$000(com.google.android.material.datepicker.SingleDateSelector) -> access$000
    49:49:java.lang.Long access$102(com.google.android.material.datepicker.SingleDateSelector,java.lang.Long) -> access$102
    59:59:void clearSelection() -> clearSelection
    143:144:int getDefaultThemeResId(android.content.Context) -> getDefaultThemeResId
    81:83:java.util.Collection getSelectedDays() -> getSelectedDays
    75:75:java.util.Collection getSelectedRanges() -> getSelectedRanges
    48:48:java.lang.Object getSelection() -> getSelection
    91:91:java.lang.Long getSelection() -> getSelection
    150:155:java.lang.String getSelectionDisplayString(android.content.Context) -> getSelectionDisplayString
    69:69:boolean isSelectionComplete() -> isSelectionComplete
    101:136:android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> onCreateTextInputView
    55:55:void select(long) -> select
    190:190:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.SingleDateSelector$1 -> com.google.android.material.datepicker.SingleDateSelector$1:
    118:118:void <init>(com.google.android.material.datepicker.SingleDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    132:132:void onInvalidDate() -> onInvalidDate
    123:127:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.SingleDateSelector$2 -> com.google.android.material.datepicker.SingleDateSelector$2:
    167:167:void <init>() -> <init>
    167:167:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    171:172:com.google.android.material.datepicker.SingleDateSelector createFromParcel(android.os.Parcel) -> createFromParcel
    167:167:java.lang.Object[] newArray(int) -> newArray
    179:179:com.google.android.material.datepicker.SingleDateSelector[] newArray(int) -> newArray
com.google.android.material.datepicker.SmoothCalendarLayoutManager -> com.google.android.material.datepicker.SmoothCalendarLayoutManager:
    34:34:void <init>(android.content.Context,int,boolean) -> <init>
    40:49:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1 -> com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
    41:41:void <init>(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context) -> <init>
    45:45:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
com.google.android.material.datepicker.TimeSource -> com.google.android.material.datepicker.TimeSource:
    25:25:void <clinit>() -> <clinit>
    31:33:void <init>(java.lang.Long,java.util.TimeZone) -> <init>
    80:80:java.util.Calendar now() -> now
    90:92:java.util.Calendar now(java.util.TimeZone) -> now
    43:43:com.google.android.material.datepicker.TimeSource system() -> system
com.google.android.material.datepicker.UtcDates -> com.google.android.material.datepicker.UtcDates:
    40:40:void <clinit>() -> <clinit>
    130:133:long canonicalYearMonthDay(long) -> canonicalYearMonthDay
    261:267:int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int) -> findCharactersInDateFormatPattern
    187:187:android.icu.text.DateFormat getAbbrMonthDayFormat(java.util.Locale) -> getAbbrMonthDayFormat
    192:192:android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale) -> getAbbrMonthWeekdayDayFormat
    139:140:android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale) -> getAndroidFormat
    113:118:java.util.Calendar getDayCopy(java.util.Calendar) -> getDayCopy
    145:146:java.text.DateFormat getFormat(int,java.util.Locale) -> getFormat
    223:223:java.text.DateFormat getFullFormat(java.util.Locale) -> getFullFormat
    205:205:java.text.DateFormat getMediumFormat(java.util.Locale) -> getMediumFormat
    213:214:java.text.DateFormat getMediumNoYear(java.util.Locale) -> getMediumNoYear
    152:157:java.text.SimpleDateFormat getTextInputFormat() -> getTextInputFormat
    162:167:java.lang.String getTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat) -> getTextInputHint
    47:48:com.google.android.material.datepicker.TimeSource getTimeSource() -> getTimeSource
    54:54:java.util.TimeZone getTimeZone() -> getTimeZone
    66:71:java.util.Calendar getTodayCalendar() -> getTodayCalendar
    59:59:android.icu.util.TimeZone getUtcAndroidTimeZone() -> getUtcAndroidTimeZone
    83:83:java.util.Calendar getUtcCalendar() -> getUtcCalendar
    95:99:java.util.Calendar getUtcCalendarOf(java.util.Calendar) -> getUtcCalendarOf
    182:182:android.icu.text.DateFormat getYearAbbrMonthDayFormat(java.util.Locale) -> getYearAbbrMonthDayFormat
    197:197:android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale) -> getYearAbbrMonthWeekdayDayFormat
    230:250:java.lang.String removeYearFromDateFormatPattern(java.lang.String) -> removeYearFromDateFormatPattern
com.google.android.material.datepicker.YearGridAdapter -> com.google.android.material.datepicker.YearGridAdapter:
    45:46:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    31:31:com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter) -> access$000
    84:84:android.view.View$OnClickListener createYearClickListener(int) -> createYearClickListener
    98:98:int getItemCount() -> getItemCount
    102:102:int getPositionForYear(int) -> getPositionForYear
    106:106:int getYearForPosition(int) -> getYearForPosition
    31:31:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    61:79:void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int) -> onBindViewHolder
    31:31:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    54:56:com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.YearGridAdapter$1 -> com.google.android.material.datepicker.YearGridAdapter$1:
    84:84:void <init>(com.google.android.material.datepicker.YearGridAdapter,int) -> <init>
    87:91:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.YearGridAdapter$ViewHolder -> com.google.android.material.datepicker.YearGridAdapter$ViewHolder:
    40:41:void <init>(android.widget.TextView) -> <init>
com.google.android.material.dialog.InsetDialogOnTouchListener -> com.google.android.material.dialog.InsetDialogOnTouchListener:
    45:49:void <init>(android.app.Dialog,android.graphics.Rect) -> <init>
    54:76:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.drawable.DrawableUtils:
    65:66:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.google.android.material.elevation.ElevationOverlayProvider -> com.google.android.material.elevation.ElevationOverlayProvider:
    42:48:void <init>(android.content.Context) -> <init>
    138:144:float calculateOverlayAlphaFraction(float) -> calculateOverlayAlphaFraction
    117:122:int compositeOverlay(int,float) -> compositeOverlay
    94:95:int compositeOverlayIfNeeded(int,float) -> compositeOverlayIfNeeded
    149:149:boolean isThemeElevationOverlayEnabled() -> isThemeElevationOverlayEnabled
    173:173:boolean isThemeSurfaceColor(int) -> isThemeSurfaceColor
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    76:769:void <clinit>() -> <clinit>
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$200(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$200
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$300
    74:74:void access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> access$400
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$500
    74:74:com.google.android.material.floatingactionbutton.MotionStrategy access$600(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$600
    298:298:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    794:795:int getCollapsedSize() -> getCollapsedSize
    680:685:boolean isOrWillBeShown() -> isOrWillBeShown
    287:291:void onAttachedToWindow() -> onAttachedToWindow
    634:676:void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> performMotion
    274:274:void saveOriginalTextCsl() -> saveOriginalTextCsl
    344:347:void setPadding(int,int,int,int) -> setPadding
    335:338:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    263:264:void setTextColor(int) -> setTextColor
    269:270:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    700:701:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3:
    648:648:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> <init>
    659:660:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    665:667:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    653:654:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4:
    709:709:void <init>(java.lang.Class,java.lang.String) -> <init>
    709:709:java.lang.Object get(java.lang.Object) -> get
    719:719:java.lang.Float get(android.view.View) -> get
    709:709:void set(java.lang.Object,java.lang.Object) -> set
    712:713:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
    728:728:void <init>(java.lang.Class,java.lang.String) -> <init>
    728:728:java.lang.Object get(java.lang.Object) -> get
    738:738:java.lang.Float get(android.view.View) -> get
    728:728:void set(java.lang.Object,java.lang.Object) -> set
    731:732:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$6:
    747:747:void <init>(java.lang.Class,java.lang.String) -> <init>
    747:747:java.lang.Object get(java.lang.Object) -> get
    761:761:java.lang.Float get(android.view.View) -> get
    747:747:void set(java.lang.Object,java.lang.Object) -> set
    750:755:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$7:
    770:770:void <init>(java.lang.Class,java.lang.String) -> <init>
    770:770:java.lang.Object get(java.lang.Object) -> get
    784:784:java.lang.Float get(android.view.View) -> get
    770:770:void set(java.lang.Object,java.lang.Object) -> set
    773:778:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    821:823:void <init>() -> <init>
    830:842:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1041:1048:void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> extendOrShow
    808:808:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    905:905:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    931:933:boolean isBottomSheet(android.view.View) -> isBottomSheet
    910:913:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    808:808:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    920:925:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View) -> onDependentViewChanged
    808:808:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1057:1071:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> onLayoutChild
    951:956:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shouldUpdateVisibility
    1018:1025:void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shrinkOrHide
    969:986:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForAppBarLayout
    993:1000:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
    110:110:void <clinit>() -> <clinit>
    101:101:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    101:101:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    627:627:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    595:595:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1359:1359:void addTransformationCallback(com.google.android.material.animation.TransformationCallback) -> addTransformationCallback
    1452:1455:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    823:824:void drawableStateChanged() -> drawableStateChanged
    363:363:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    389:389:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    351:351:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    873:875:boolean getContentRect(android.graphics.Rect) -> getContentRect
    651:651:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1444:1447:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    887:888:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    538:538:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    784:784:int getSizeDimension() -> getSizeDimension
    788:805:int getSizeDimension(int) -> getSizeDimension
    423:423:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    442:442:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    456:456:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    470:470:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    623:623:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    641:641:boolean isExpanded() -> isExpanded
    739:739:boolean isOrWillBeShown() -> isOrWillBeShown
    829:830:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    892:895:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    474:492:void onApplySupportImageTint() -> onApplySupportImageTint
    811:812:void onAttachedToWindow() -> onAttachedToWindow
    817:818:void onDetachedFromWindow() -> onDetachedFromWindow
    276:289:void onMeasure(int,int) -> onMeasure
    851:860:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    835:842:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    932:938:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    906:925:int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    507:507:void setBackgroundColor(int) -> setBackgroundColor
    497:497:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    502:502:void setBackgroundResource(int) -> setBackgroundResource
    374:376:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    401:403:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1196:1197:void setElevation(float) -> setElevation
    519:523:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    513:514:void setImageResource(int) -> setImageResource
    1422:1423:void setScaleX(float) -> setScaleX
    1428:1429:void setScaleY(float) -> setScaleY
    1440:1440:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    531:531:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    413:413:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    432:432:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    447:449:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    461:463:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    1404:1405:void setTranslationX(float) -> setTranslationX
    1410:1411:void setTranslationY(float) -> setTranslationY
    1416:1417:void setTranslationZ(float) -> setTranslationZ
    567:567:void setVisibility(int) -> setVisibility
    591:591:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    973:974:void <init>() -> <init>
    978:985:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    964:964:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1143:1148:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1035:1037:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1159:1187:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    1014:1017:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    964:964:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1024:1029:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    964:964:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1116:1132:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    1050:1062:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    1074:1091:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1098:1105:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    950:950:void <init>() -> <init>
    954:954:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    947:947:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    947:947:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    947:947:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    947:947:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    947:947:void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> setInternalAutoHideListener
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    1460:1460:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1483:1483:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1477:1477:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1469:1471:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper -> com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper:
    1376:1377:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback) -> <init>
    1392:1393:boolean equals(java.lang.Object) -> equals
    1398:1398:int hashCode() -> hashCode
    1387:1387:void onScaleChanged() -> onScaleChanged
    1382:1382:void onTranslationChanged() -> onTranslationChanged
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    68:141:void <clinit>() -> <clinit>
    92:181:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    66:66:int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int) -> access$002
    66:66:android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator) -> access$102
    66:66:float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float) -> access$202
    401:404:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    385:388:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    623:626:void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) -> addTransformationCallback
    293:305:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    563:599:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    769:774:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    552:557:com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec() -> getDefaultHideMotionSpec
    543:548:com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec() -> getDefaultShowMotionSpec
    246:246:float getElevation() -> getElevation
    728:739:android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener() -> getOrCreatePreDrawListener
    671:678:void getPadding(android.graphics.Rect) -> getPadding
    326:326:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> getShapeAppearance
    417:474:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    758:763:boolean isOrWillBeHidden() -> isOrWillBeHidden
    748:753:boolean isOrWillBeShown() -> isOrWillBeShown
    381:381:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    697:702:void onAttachedToWindow() -> onAttachedToWindow
    707:710:void onDetachedFromWindow() -> onDetachedFromWindow
    377:377:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    682:688:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    719:722:void onPreDraw() -> onPreDraw
    647:649:void onScaleChanged() -> onScaleChanged
    639:641:void onTranslationChanged() -> onTranslationChanged
    213:214:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    222:223:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    285:289:void setImageMatrixScale(float) -> setImageMatrixScale
    360:361:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    310:316:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearance
    846:846:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    348:348:boolean shouldExpandBoundsForA11y() -> shouldExpandBoundsForA11y
    480:537:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    850:866:void updateFromViewRotation() -> updateFromViewRotation
    281:281:void updateImageMatrixScale() -> updateImageMatrixScale
    664:667:void updatePadding() -> updatePadding
    371:372:void updateShapeElevation(float) -> updateShapeElevation
    608:612:void workAroundOreoBug(android.animation.ObjectAnimator) -> workAroundOreoBug
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
    434:434:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    448:448:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    453:459:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    439:443:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
    505:505:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    516:520:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    508:511:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    584:584:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    584:584:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    590:591:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
    612:613:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    612:612:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    616:617:java.lang.Float evaluate(float,java.lang.Float,java.lang.Float) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5:
    730:730:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    733:733:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    837:837:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
    819:819:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    823:823:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
    828:828:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    832:832:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
    810:810:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    814:814:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    778:778:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    778:778:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    801:802:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    787:796:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    53:53:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    167:167:float getElevation() -> getElevation
    237:243:void getPadding(android.graphics.Rect) -> getPadding
    182:194:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    177:177:boolean shouldAddPadding() -> shouldAddPadding
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
    31:34:void <init>(android.content.Context) -> <init>
    31:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:108:void onLayout(boolean,int,int,int,int) -> onLayout
    47:79:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
    41:41:void <clinit>() -> <clinit>
    48:48:void <init>(android.content.Context) -> <init>
    52:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    144:144:boolean isCheckable() -> isCheckable
    88:88:boolean isChecked() -> isChecked
    105:110:int[] onCreateDrawableState(int) -> onCreateDrawableState
    125:131:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    117:119:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    136:138:void setCheckable(boolean) -> setCheckable
    79:82:void setChecked(boolean) -> setChecked
    149:149:void setPressable(boolean) -> setPressable
    98:99:void setPressed(boolean) -> setPressed
    93:93:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
    60:60:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    63:64:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:72:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.CheckableImageButton$SavedState -> com.google.android.material.internal.CheckableImageButton$SavedState:
    180:180:void <clinit>() -> <clinit>
    162:162:void <init>(android.os.Parcelable) -> <init>
    166:167:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    177:177:void readFromParcel(android.os.Parcel) -> readFromParcel
    172:173:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.CheckableImageButton$SavedState$1 -> com.google.android.material.internal.CheckableImageButton$SavedState$1:
    181:181:void <init>() -> <init>
    181:181:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    185:185:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    191:191:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object[] newArray(int) -> newArray
    197:197:com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int) -> newArray
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.CollapsingTextHelper:
    70:80:void <clinit>() -> <clinit>
    99:173:void <init>(android.view.View) -> <init>
    1119:1123:int blendColors(int,int,float) -> blendColors
    654:745:void calculateBaseOffsets(boolean) -> calculateBaseOffsets
    271:275:float calculateCollapsedTextWidth() -> calculateCollapsedTextWidth
    542:542:void calculateCurrentOffsets() -> calculateCurrentOffsets
    615:623:float calculateFadeModeTextAlpha(float) -> calculateFadeModeTextAlpha
    306:306:float calculateFadeModeThresholdFraction() -> calculateFadeModeThresholdFraction
    858:860:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    546:610:void calculateOffsets(float) -> calculateOffsets
    890:890:void calculateUsingTextSize(float) -> calculateUsingTextSize
    895:963:void calculateUsingTextSize(float,boolean) -> calculateUsingTextSize
    1043:1045:void clearTexture() -> clearTexture
    970:984:android.text.StaticLayout createStaticLayout(int,float,boolean) -> createStaticLayout
    773:813:void draw(android.graphics.Canvas) -> draw
    822:850:void drawMultilineTransition(android.graphics.Canvas,float,float) -> drawMultilineTransition
    988:1006:void ensureExpandedTexture() -> ensureExpandedTexture
    239:243:void getCollapsedTextActualBounds(android.graphics.RectF,int,int) -> getCollapsedTextActualBounds
    1108:1108:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    291:293:float getCollapsedTextHeight() -> getCollapsedTextHeight
    249:254:float getCollapsedTextLeftBound(int,int) -> getCollapsedTextLeftBound
    261:266:float getCollapsedTextRightBound(android.graphics.RectF,int,int) -> getCollapsedTextRightBound
    639:639:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    647:650:int getCurrentColor(android.content.res.ColorStateList) -> getCurrentColor
    634:634:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    279:281:float getExpandedTextHeight() -> getExpandedTextHeight
    522:522:float getExpansionFraction() -> getExpansionFraction
    323:326:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    315:318:void getTextPaintExpanded(android.text.TextPaint) -> getTextPaintExpanded
    749:758:void interpolateBounds(float) -> interpolateBounds
    1100:1100:boolean isClose(float,float) -> isClose
    865:865:boolean isDefaultIsRtl() -> isDefaultIsRtl
    513:514:boolean isStateful() -> isStateful
    869:872:boolean isTextDirectionHeuristicsIsRtl(java.lang.CharSequence,boolean) -> isTextDirectionHeuristicsIsRtl
    1129:1131:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    331:335:void onBoundsChanged() -> onBoundsChanged
    1011:1011:void recalculate() -> recalculate
    1015:1019:void recalculate(boolean) -> recalculate
    1135:1135:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    227:230:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    235:235:void setCollapsedBounds(android.graphics.Rect) -> setCollapsedBounds
    361:392:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    763:764:void setCollapsedTextBlend(float) -> setCollapsedTextBlend
    201:203:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    350:352:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    430:431:void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    453:457:boolean setCollapsedTypefaceInternal(android.graphics.Typeface) -> setCollapsedTypefaceInternal
    215:218:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    223:223:void setExpandedBounds(android.graphics.Rect) -> setExpandedBounds
    768:769:void setExpandedTextBlend(float) -> setExpandedTextBlend
    208:210:void setExpandedTextColor(android.content.res.ColorStateList) -> setExpandedTextColor
    339:341:void setExpandedTextGravity(int) -> setExpandedTextGravity
    187:189:void setExpandedTextSize(float) -> setExpandedTextSize
    467:471:boolean setExpandedTypefaceInternal(android.graphics.Typeface) -> setExpandedTypefaceInternal
    493:497:void setExpansionFraction(float) -> setExpansionFraction
    876:886:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    182:183:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    502:505:boolean setState(int[]) -> setState
    1029:1033:void setText(java.lang.CharSequence) -> setText
    177:178:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    442:445:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    818:818:boolean shouldDrawMultiline() -> shouldDrawMultiline
com.google.android.material.internal.CollapsingTextHelper$1 -> com.google.android.material.internal.CollapsingTextHelper$1:
    383:383:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    386:386:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
    37:38:void <clinit>() -> <clinit>
    83:84:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    89:99:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    50:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.FlowLayout -> com.google.android.material.internal.FlowLayout:
    50:50:void <init>(android.content.Context) -> <init>
    54:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:60:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:68:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    182:182:int getMeasuredDimension(int,int,int) -> getMeasuredDimension
    248:248:int getRowCount() -> getRowCount
    253:257:int getRowIndex(android.view.View) -> getRowIndex
    97:97:boolean isSingleLine() -> isSingleLine
    73:76:void loadFromAttributes(android.content.Context,android.util.AttributeSet) -> loadFromAttributes
    190:243:void onLayout(boolean,int,int,int,int) -> onLayout
    107:174:void onMeasure(int,int) -> onMeasure
    92:92:void setItemSpacing(int) -> setItemSpacing
    84:84:void setLineSpacing(int) -> setLineSpacing
    102:102:void setSingleLine(boolean) -> setSingleLine
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
    54:54:void <init>(android.content.Context) -> <init>
    58:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    205:234:void draw(android.graphics.Canvas) -> draw
    242:244:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    138:140:void drawableStateChanged() -> drawableStateChanged
    188:188:android.graphics.drawable.Drawable getForeground() -> getForeground
    91:91:int getForegroundGravity() -> getForegroundGravity
    130:132:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    193:194:void onLayout(boolean,int,int,int,int) -> onLayout
    199:200:void onSizeChanged(int,int,int,int) -> onSizeChanged
    153:175:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    102:118:void setForegroundGravity(int) -> setForegroundGravity
    124:124:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.ManufacturerUtils -> com.google.android.material.internal.ManufacturerUtils:
    53:53:boolean isDateInputKeyboardMissingSeparatorCharacters() -> isDateInputKeyboardMissingSeparatorCharacters
    41:41:boolean isLGEDevice() -> isLGEDevice
    36:36:boolean isMeizuDevice() -> isMeizuDevice
    46:46:boolean isSamsungDevice() -> isSamsungDevice
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
    55:55:void <clinit>() -> <clinit>
    87:87:void <init>(android.content.Context) -> <init>
    91:91:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    136:149:void adjustAppearance() -> adjustAppearance
    175:181:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    189:189:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    107:126:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    255:257:int[] onCreateDrawableState(int) -> onCreateDrawableState
    163:169:void setActionView(android.view.View) -> setActionView
    199:202:void setCheckable(boolean) -> setCheckable
    209:210:void setChecked(boolean) -> setChecked
    219:236:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    240:240:void setIconSize(int) -> setIconSize
    194:194:void setTitle(java.lang.CharSequence) -> setTitle
    130:132:boolean shouldExpandActionArea() -> shouldExpandActionArea
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
    76:76:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    81:82:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
    34:34:void <init>(android.content.Context) -> <init>
    38:38:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
com.google.android.material.internal.ParcelableSparseArray -> com.google.android.material.internal.ParcelableSparseArray:
    66:66:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    37:43:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    54:63:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseArray$1 -> com.google.android.material.internal.ParcelableSparseArray$1:
    67:67:void <init>() -> <init>
    67:67:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    71:71:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    77:77:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object[] newArray(int) -> newArray
    83:83:com.google.android.material.internal.ParcelableSparseArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseBooleanArray -> com.google.android.material.internal.ParcelableSparseBooleanArray:
    70:70:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    40:40:void <init>(int) -> <init>
    57:67:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseBooleanArray$1 -> com.google.android.material.internal.ParcelableSparseBooleanArray$1:
    71:71:void <init>() -> <init>
    71:71:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    75:85:com.google.android.material.internal.ParcelableSparseBooleanArray createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:java.lang.Object[] newArray(int) -> newArray
    94:94:com.google.android.material.internal.ParcelableSparseBooleanArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseIntArray -> com.google.android.material.internal.ParcelableSparseIntArray:
    70:70:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    40:40:void <init>(int) -> <init>
    57:67:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseIntArray$1 -> com.google.android.material.internal.ParcelableSparseIntArray$1:
    71:71:void <init>() -> <init>
    71:71:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    75:85:com.google.android.material.internal.ParcelableSparseIntArray createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:java.lang.Object[] newArray(int) -> newArray
    94:94:com.google.android.material.internal.ParcelableSparseIntArray[] newArray(int) -> newArray
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
    37:44:void <init>() -> <init>
    62:64:void addState(int[],android.animation.ValueAnimator) -> addState
    98:100:void cancel() -> cancel
    110:112:void jumpToCurrentState() -> jumpToCurrentState
    70:88:void setState(int[]) -> setState
    93:94:void start(com.google.android.material.internal.StateListAnimator$Tuple) -> start
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
    45:45:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    48:49:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
    120:122:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.StaticLayoutBuilderCompat -> com.google.android.material.internal.StaticLayoutBuilderCompat:
    56:56:void <clinit>() -> <clinit>
    88:100:void <init>(java.lang.CharSequence,android.text.TextPaint,int) -> <init>
    224:284:android.text.StaticLayout build() -> build
    309:348:void createConstructorWithReflection() -> createConstructorWithReflection
    114:114:com.google.android.material.internal.StaticLayoutBuilderCompat obtain(java.lang.CharSequence,android.text.TextPaint,int) -> obtain
    125:125:com.google.android.material.internal.StaticLayoutBuilderCompat setAlignment(android.text.Layout$Alignment) -> setAlignment
    218:218:com.google.android.material.internal.StaticLayoutBuilderCompat setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    204:204:com.google.android.material.internal.StaticLayoutBuilderCompat setHyphenationFrequency(int) -> setHyphenationFrequency
    139:139:com.google.android.material.internal.StaticLayoutBuilderCompat setIncludePad(boolean) -> setIncludePad
    353:353:com.google.android.material.internal.StaticLayoutBuilderCompat setIsRtl(boolean) -> setIsRtl
    190:191:com.google.android.material.internal.StaticLayoutBuilderCompat setLineSpacing(float,float) -> setLineSpacing
    176:176:com.google.android.material.internal.StaticLayoutBuilderCompat setMaxLines(int) -> setMaxLines
com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException -> com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException:
    360:360:void <init>(java.lang.Throwable) -> <init>
com.google.android.material.internal.TextDrawableHelper -> com.google.android.material.internal.TextDrawableHelper:
    41:77:void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> <init>
    39:39:boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean) -> access$002
    39:39:java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper) -> access$100
    113:113:float calculateTextWidth(java.lang.CharSequence) -> calculateTextWidth
    123:123:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    87:87:android.text.TextPaint getTextPaint() -> getTextPaint
    100:105:float getTextWidth(java.lang.String) -> getTextWidth
    82:82:void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> setDelegate
    134:150:void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context) -> setTextAppearance
    91:91:void setTextWidthDirty(boolean) -> setTextWidthDirty
    156:156:void updateTextPaintDrawState(android.content.Context) -> updateTextPaintDrawState
com.google.android.material.internal.TextDrawableHelper$1 -> com.google.android.material.internal.TextDrawableHelper$1:
    44:44:void <init>(com.google.android.material.internal.TextDrawableHelper) -> <init>
    59:63:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    50:53:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.internal.TextWatcherAdapter -> com.google.android.material.internal.TextWatcherAdapter:
    33:33:void <init>() -> <init>
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
    43:46:void <clinit>() -> <clinit>
    213:213:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    129:148:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    217:217:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    158:187:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    242:243:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    201:208:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    229:236:boolean isTheme(android.content.Context,int[]) -> isTheme
    76:82:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    115:121:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
com.google.android.material.internal.ToolbarUtils -> com.google.android.material.internal.ToolbarUtils:
    52:52:android.widget.TextView getSubtitleTextView(androidx.appcompat.widget.Toolbar) -> getSubtitleTextView
    57:61:android.widget.TextView getTextView(androidx.appcompat.widget.Toolbar,java.lang.CharSequence) -> getTextView
    47:47:android.widget.TextView getTitleTextView(androidx.appcompat.widget.Toolbar) -> getTitleTextView
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
    218:235:void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    81:82:float dpToPx(android.content.Context,int) -> dpToPx
    265:268:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    77:77:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    60:70:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    240:245:void requestApplyInsetsWhenAttached(android.view.View) -> requestApplyInsetsWhenAttached
    86:87:void requestFocusAndShowKeyboard(android.view.View) -> requestFocusAndShowKeyboard
com.google.android.material.internal.ViewUtils$1 -> com.google.android.material.internal.ViewUtils$1:
    88:88:void <init>(android.view.View) -> <init>
    91:94:void run() -> run
com.google.android.material.internal.ViewUtils$3 -> com.google.android.material.internal.ViewUtils$3:
    228:228:void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    231:231:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$4 -> com.google.android.material.internal.ViewUtils$4:
    246:246:void <init>() -> <init>
    249:250:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
com.google.android.material.internal.ViewUtils$RelativePadding -> com.google.android.material.internal.ViewUtils$RelativePadding:
    124:128:void <init>(int,int,int,int) -> <init>
    131:135:void <init>(com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
    64:64:int getUserSetVisibility() -> getUserSetVisibility
    57:59:void internalSetVisibility(int,boolean) -> internalSetVisibility
    53:53:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
    30:30:float dist(float,float,float,float) -> dist
    65:69:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
com.google.android.material.navigation.NavigationBarPresenter$SavedState -> com.google.android.material.navigation.NavigationBarPresenter$SavedState:
    160:160:void <clinit>() -> <clinit>
    142:142:void <init>() -> <init>
    144:146:void <init>(android.os.Parcel) -> <init>
    156:157:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationBarPresenter$SavedState$1 -> com.google.android.material.navigation.NavigationBarPresenter$SavedState$1:
    161:161:void <init>() -> <init>
    161:161:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    165:165:com.google.android.material.navigation.NavigationBarPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    161:161:java.lang.Object[] newArray(int) -> newArray
    171:171:com.google.android.material.navigation.NavigationBarPresenter$SavedState[] newArray(int) -> newArray
com.google.android.material.navigation.NavigationBarView$SavedState -> com.google.android.material.navigation.NavigationBarView$SavedState:
    778:778:void <clinit>() -> <clinit>
    761:765:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    775:775:void readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    770:771:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationBarView$SavedState$1 -> com.google.android.material.navigation.NavigationBarView$SavedState$1:
    779:779:void <init>() -> <init>
    779:779:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    779:779:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    783:783:com.google.android.material.navigation.NavigationBarView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    789:789:com.google.android.material.navigation.NavigationBarView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    779:779:java.lang.Object[] newArray(int) -> newArray
    795:795:com.google.android.material.navigation.NavigationBarView$SavedState[] newArray(int) -> newArray
com.google.android.material.navigation.NavigationView$SavedState -> com.google.android.material.navigation.NavigationView$SavedState:
    736:736:void <clinit>() -> <clinit>
    722:723:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    732:733:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationView$SavedState$1 -> com.google.android.material.navigation.NavigationView$SavedState$1:
    737:737:void <init>() -> <init>
    737:737:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    737:737:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    741:741:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    747:747:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    737:737:java.lang.Object[] newArray(int) -> newArray
    753:753:com.google.android.material.navigation.NavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.radiobutton.MaterialRadioButton -> com.google.android.material.radiobutton.MaterialRadioButton:
    45:47:void <clinit>() -> <clinit>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:136:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    92:95:void onAttachedToWindow() -> onAttachedToWindow
    105:109:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.resources.CancelableFontCallback -> com.google.android.material.resources.CancelableFontCallback:
    42:44:void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface) -> <init>
    64:64:void cancel() -> cancel
    54:54:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    49:49:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
    68:69:void updateIfNotCancelled(android.graphics.Typeface) -> updateIfNotCancelled
com.google.android.material.resources.MaterialAttributes -> com.google.android.material.resources.MaterialAttributes:
    46:47:android.util.TypedValue resolve(android.content.Context,int) -> resolve
    106:107:boolean resolveBoolean(android.content.Context,int,boolean) -> resolveBoolean
    62:74:int resolveOrThrow(android.content.Context,int,java.lang.String) -> resolveOrThrow
    84:85:int resolveOrThrow(android.view.View,int) -> resolveOrThrow
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
    57:76:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    86:105:android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int) -> getColorStateList
    168:175:int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int) -> getDimensionPixelSize
    117:126:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    200:200:int getIndexWithValue(android.content.res.TypedArray,int,int) -> getIndexWithValue
    137:140:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> getTextAppearance
    183:183:boolean isFontScaleAtLeast1_3(android.content.Context) -> isFontScaleAtLeast1_3
    190:190:boolean isFontScaleAtLeast2_0(android.content.Context) -> isFontScaleAtLeast2_0
com.google.android.material.resources.TextAppearance -> com.google.android.material.resources.TextAppearance:
    76:119:void <init>(android.content.Context,int) -> <init>
    48:48:android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance) -> access$000
    48:48:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> access$002
    48:48:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> access$102
    268:288:void createFallbackFont() -> createFallbackFont
    262:263:android.graphics.Typeface getFallbackFont() -> getFallbackFont
    131:153:android.graphics.Typeface getFont(android.content.Context) -> getFont
    171:215:void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    234:236:void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    357:362:boolean shouldLoadFontSynchronously(android.content.Context) -> shouldLoadFontSynchronously
    302:313:void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateDrawState
    327:330:void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateMeasureState
    341:351:void updateTextPaintMeasureState(android.text.TextPaint,android.graphics.Typeface) -> updateTextPaintMeasureState
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.resources.TextAppearance$1:
    193:193:void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    203:204:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    196:198:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.resources.TextAppearance$2 -> com.google.android.material.resources.TextAppearance$2:
    238:238:void <init>(com.google.android.material.resources.TextAppearance,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    248:248:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    242:243:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.resources.TextAppearanceConfig:
    43:43:boolean shouldLoadFontSynchronously() -> shouldLoadFontSynchronously
com.google.android.material.resources.TextAppearanceFontCallback -> com.google.android.material.resources.TextAppearanceFontCallback:
    30:30:void <init>() -> <init>
com.google.android.material.ripple.RippleDrawableCompat -> com.google.android.material.ripple.RippleDrawableCompat:
    47:47:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1) -> <init>
    58:58:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    62:63:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    126:127:void draw(android.graphics.Canvas) -> draw
    140:140:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    163:163:int getOpacity() -> getOpacity
    46:46:android.graphics.drawable.Drawable mutate() -> mutate
    146:147:com.google.android.material.ripple.RippleDrawableCompat mutate() -> mutate
    133:134:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:117:boolean onStateChange(int[]) -> onStateChange
    153:153:void setAlpha(int) -> setAlpha
    158:158:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    83:83:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    68:68:void setTint(int) -> setTint
    78:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    73:73:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState -> com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState:
    175:177:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    180:182:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    170:170:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    188:188:com.google.android.material.ripple.RippleDrawableCompat newDrawable() -> newDrawable
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
    42:77:void <clinit>() -> <clinit>
    84:84:void <init>() -> <init>
    204:213:android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList) -> sanitizeRippleDrawableColor
    224:224:boolean shouldDrawRippleCompat(int[]) -> shouldDrawRippleCompat
com.google.android.material.shadow.ShadowRenderer -> com.google.android.material.shadow.ShadowRenderer:
    60:66:void <clinit>() -> <clinit>
    72:72:void <init>() -> <init>
    68:83:void <init>(int) -> <init>
    132:182:void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float) -> drawCornerShadow
    96:116:void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int) -> drawEdgeShadow
    187:187:android.graphics.Paint getShadowPaint() -> getShadowPaint
    87:90:void setShadowColor(int) -> setShadowColor
com.google.android.material.shape.AbsoluteCornerSize -> com.google.android.material.shape.AbsoluteCornerSize:
    28:29:void <init>(float) -> <init>
    49:53:boolean equals(java.lang.Object) -> equals
    34:34:float getCornerSize(android.graphics.RectF) -> getCornerSize
    58:59:int hashCode() -> hashCode
com.google.android.material.shape.AdjustedCornerSize -> com.google.android.material.shape.AdjustedCornerSize:
    37:45:void <init>(float,com.google.android.material.shape.CornerSize) -> <init>
    58:62:boolean equals(java.lang.Object) -> equals
    50:50:float getCornerSize(android.graphics.RectF) -> getCornerSize
    67:68:int hashCode() -> hashCode
com.google.android.material.shape.CornerTreatment -> com.google.android.material.shape.CornerTreatment:
    30:30:void <init>() -> <init>
    98:98:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize) -> getCornerPath
com.google.android.material.shape.CutCornerTreatment -> com.google.android.material.shape.CutCornerTreatment:
    24:26:void <init>() -> <init>
    47:52:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.shape.EdgeTreatment:
    29:29:void <init>() -> <init>
    64:64:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.shape.MaterialShapeDrawable:
    77:109:void <clinit>() -> <clinit>
    75:75:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1) -> <init>
    181:181:void <init>() -> <init>
    189:189:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    202:202:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    114:214:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    75:75:java.util.BitSet access$000(com.google.android.material.shape.MaterialShapeDrawable) -> access$000
    75:75:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable) -> access$100
    75:75:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$200(com.google.android.material.shape.MaterialShapeDrawable) -> access$200
    75:75:boolean access$402(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> access$402
    1252:1255:android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean) -> calculatePaintColorTintFilter
    1201:1211:void calculatePath(android.graphics.RectF,android.graphics.Path) -> calculatePath
    1140:1140:void calculatePathForSize(android.graphics.RectF,android.graphics.Path) -> calculatePathForSize
    1152:1171:void calculateStrokePath() -> calculateStrokePath
    1266:1270:android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> calculateTintColorTintFilter
    1244:1245:android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean) -> calculateTintFilter
    606:608:int compositeElevationOverlayIfNeeded(int) -> compositeElevationOverlayIfNeeded
    170:176:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float) -> createWithElevationOverlay
    942:967:void draw(android.graphics.Canvas) -> draw
    1087:1109:void drawCompatShadow(android.graphics.Canvas) -> drawCompatShadow
    1049:1049:void drawFillShape(android.graphics.Canvas) -> drawFillShape
    1028:1028:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF) -> drawShape
    1038:1044:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> drawShape
    1053:1054:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
    473:474:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    1327:1330:android.graphics.RectF getBoundsInsetByStroke() -> getBoundsInsetByStroke
    234:234:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    657:657:float getElevation() -> getElevation
    317:317:android.content.res.ColorStateList getFillColor() -> getFillColor
    1178:1192:void getOutline(android.graphics.Outline) -> getOutline
    507:511:boolean getPadding(android.graphics.Rect) -> getPadding
    640:640:float getParentAbsoluteElevation() -> getParentAbsoluteElevation
    1115:1117:int getShadowOffsetX() -> getShadowOffsetX
    1122:1124:int getShadowOffsetY() -> getShadowOffsetY
    808:808:int getShadowRadius() -> getShadowRadius
    271:271:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1319:1320:float getStrokeInsetLength() -> getStrokeInsetLength
    1335:1338:float getTopLeftCornerResolvedSize() -> getTopLeftCornerResolvedSize
    678:678:float getTranslationZ() -> getTranslationZ
    463:468:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    699:699:float getZ() -> getZ
    916:918:boolean hasCompatShadow() -> hasCompatShadow
    923:923:boolean hasFill() -> hasFill
    929:931:boolean hasStroke() -> hasStroke
    599:600:void initializeElevationOverlay(android.content.Context) -> initializeElevationOverlay
    854:855:void invalidateSelf() -> invalidateSelf
    863:863:void invalidateSelfIgnoreShape() -> invalidateSelfIgnoreShape
    583:584:boolean isElevationOverlayEnabled() -> isElevationOverlayEnabled
    1373:1373:boolean isRoundRect() -> isRoundRect
    1275:1279:boolean isStateful() -> isStateful
    971:1014:void maybeDrawCompatShadow(android.graphics.Canvas) -> maybeDrawCompatShadow
    240:241:android.graphics.drawable.Drawable mutate() -> mutate
    936:937:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1284:1288:boolean onStateChange(int[]) -> onStateChange
    1059:1076:void prepareCanvasForShadow(android.graphics.Canvas) -> prepareCanvasForShadow
    827:828:boolean requiresCompatShadow() -> requiresCompatShadow
    449:451:void setAlpha(int) -> setAlpha
    457:458:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    484:484:void setCornerSize(com.google.android.material.shape.CornerSize) -> setCornerSize
    666:668:void setElevation(float) -> setElevation
    304:306:void setFillColor(android.content.res.ColorStateList) -> setFillColor
    631:634:void setInterpolation(float) -> setInterpolation
    524:529:void setPadding(int,int,int,int) -> setPadding
    645:647:void setParentAbsoluteElevation(float) -> setParentAbsoluteElevation
    796:798:void setShadowCompatRotation(int) -> setShadowCompatRotation
    258:259:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    406:407:void setStroke(float,int) -> setStroke
    417:418:void setStroke(float,android.content.res.ColorStateList) -> setStroke
    326:328:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    436:437:void setStrokeWidth(float) -> setStrokeWidth
    376:376:void setTint(int) -> setTint
    353:355:void setTintList(android.content.res.ColorStateList) -> setTintList
    344:347:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    1296:1310:boolean updateColorsForState(int[]) -> updateColorsForState
    1215:1234:boolean updateTintFilter() -> updateTintFilter
    712:717:void updateZ() -> updateZ
com.google.android.material.shape.MaterialShapeDrawable$1 -> com.google.android.material.shape.MaterialShapeDrawable$1:
    215:215:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    219:220:void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onCornerPathCreated
    225:226:void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onEdgePathCreated
com.google.android.material.shape.MaterialShapeDrawable$2 -> com.google.android.material.shape.MaterialShapeDrawable$2:
    1156:1156:void <init>(com.google.android.material.shape.MaterialShapeDrawable,float) -> <init>
    1162:1162:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState -> com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState:
    1382:1410:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider) -> <init>
    1382:1436:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    1443:1445:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.shape.MaterialShapeUtils -> com.google.android.material.shape.MaterialShapeUtils:
    33:37:com.google.android.material.shape.CornerTreatment createCornerTreatment(int) -> createCornerTreatment
    43:43:com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment() -> createDefaultCornerTreatment
    48:48:com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment() -> createDefaultEdgeTreatment
    57:59:void setElevation(android.view.View,float) -> setElevation
    70:72:void setParentAbsoluteElevation(android.view.View) -> setParentAbsoluteElevation
    83:84:void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable) -> setParentAbsoluteElevation
com.google.android.material.shape.RelativeCornerSize -> com.google.android.material.shape.RelativeCornerSize:
    36:37:void <init>(float) -> <init>
    56:60:boolean equals(java.lang.Object) -> equals
    48:48:float getCornerSize(android.graphics.RectF) -> getCornerSize
    65:66:int hashCode() -> hashCode
com.google.android.material.shape.RoundedCornerTreatment -> com.google.android.material.shape.RoundedCornerTreatment:
    24:26:void <init>() -> <init>
    43:44:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.ShapeAppearanceModel -> com.google.android.material.shape.ShapeAppearanceModel:
    565:565:void <clinit>() -> <clinit>
    41:41:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1) -> <init>
    580:594:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> <init>
    598:612:void <init>() -> <init>
    435:435:com.google.android.material.shape.ShapeAppearanceModel$Builder builder() -> builder
    444:444:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int) -> builder
    454:454:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int) -> builder
    465:472:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize) -> builder
    480:480:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int) -> builder
    489:489:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int) -> builder
    504:541:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize) -> builder
    732:732:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> getBottomEdge
    652:652:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> getBottomLeftCorner
    692:692:com.google.android.material.shape.CornerSize getBottomLeftCornerSize() -> getBottomLeftCornerSize
    642:642:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> getBottomRightCorner
    682:682:com.google.android.material.shape.CornerSize getBottomRightCornerSize() -> getBottomRightCornerSize
    547:558:com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize) -> getCornerSize
    702:702:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> getLeftEdge
    722:722:com.google.android.material.shape.EdgeTreatment getRightEdge() -> getRightEdge
    712:712:com.google.android.material.shape.EdgeTreatment getTopEdge() -> getTopEdge
    622:622:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> getTopLeftCorner
    662:662:com.google.android.material.shape.CornerSize getTopLeftCornerSize() -> getTopLeftCornerSize
    632:632:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> getTopRightCorner
    672:672:com.google.android.material.shape.CornerSize getTopRightCornerSize() -> getTopRightCornerSize
    791:804:boolean isRoundRect(android.graphics.RectF) -> isRoundRect
    738:738:com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder() -> toBuilder
    747:747:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float) -> withCornerSize
    752:752:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize) -> withCornerSize
    775:780:com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator) -> withTransformedCornerSizes
com.google.android.material.shape.ShapeAppearanceModel$Builder -> com.google.android.material.shape.ShapeAppearanceModel$Builder:
    47:68:void <init>() -> <init>
    47:84:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    44:44:com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$100
    44:44:com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1000
    44:44:com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1100
    44:44:com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1200
    44:44:com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$200
    44:44:com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$300
    44:44:com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$400
    44:44:com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$500
    44:44:com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$600
    44:44:com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$700
    44:44:com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$800
    44:44:com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$900
    429:429:com.google.android.material.shape.ShapeAppearanceModel build() -> build
    418:421:float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment) -> compatCornerTreatmentSize
    122:125:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize) -> setAllCornerSizes
    131:134:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float) -> setAllCornerSizes
    339:340:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize) -> setBottomLeftCorner
    350:354:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    182:182:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float) -> setBottomLeftCornerSize
    189:189:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize) -> setBottomLeftCornerSize
    297:298:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize) -> setBottomRightCorner
    308:312:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    168:168:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float) -> setBottomRightCornerSize
    175:175:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize) -> setBottomRightCornerSize
    214:215:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize) -> setTopLeftCorner
    225:229:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    140:140:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float) -> setTopLeftCornerSize
    147:147:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize) -> setTopLeftCornerSize
    255:256:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize) -> setTopRightCorner
    266:270:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
    154:154:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float) -> setTopRightCornerSize
    161:161:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize) -> setTopRightCornerSize
com.google.android.material.shape.ShapeAppearancePathProvider -> com.google.android.material.shape.ShapeAppearancePathProvider:
    55:75:void <init>() -> <init>
    170:180:void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendCornerPath
    185:228:void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendEdgePath
    99:99:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path) -> calculatePath
    118:143:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> calculatePath
    309:319:void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF) -> getCoordinatesOfCorner
    280:287:com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerSizeForIndex
    265:272:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerTreatmentForIndex
    247:257:float getEdgeCenterForIndex(android.graphics.RectF,int) -> getEdgeCenterForIndex
    295:302:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getEdgeTreatmentForIndex
    83:83:com.google.android.material.shape.ShapeAppearancePathProvider getInstance() -> getInstance
    234:243:boolean pathOverlapsCorner(android.graphics.Path,int) -> pathOverlapsCorner
    148:156:void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> setCornerPathAndTransform
    160:166:void setEdgePathAndTransform(int) -> setEdgePathAndTransform
com.google.android.material.shape.ShapeAppearancePathProvider$Lazy -> com.google.android.material.shape.ShapeAppearancePathProvider$Lazy:
    39:39:void <clinit>() -> <clinit>
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec -> com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec:
    348:353:void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> <init>
com.google.android.material.shape.ShapePath -> com.google.android.material.shape.ShapePath:
    90:95:void <init>() -> <init>
    211:232:void addArc(float,float,float,float,float,float) -> addArc
    293:307:void addConnectingShadowIfNecessary(float) -> addConnectingShadowIfNecessary
    275:277:void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float) -> addShadowCompatOperation
    242:244:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    285:285:boolean containsIncompatibleShadowOp() -> containsIncompatibleShadowOp
    255:258:com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix) -> createShadowCompatOperation
    327:327:float getCurrentShadowAngle() -> getCurrentShadowAngle
    331:331:float getEndShadowAngle() -> getEndShadowAngle
    319:319:float getEndX() -> getEndX
    323:323:float getEndY() -> getEndY
    311:311:float getStartX() -> getStartX
    315:315:float getStartY() -> getStartY
    130:144:void lineTo(float,float) -> lineTo
    107:107:void reset(float,float) -> reset
    112:120:void reset(float,float,float,float) -> reset
    351:351:void setCurrentShadowAngle(float) -> setCurrentShadowAngle
    355:355:void setEndShadowAngle(float) -> setEndShadowAngle
    343:343:void setEndX(float) -> setEndX
    347:347:void setEndY(float) -> setEndY
    335:335:void setStartX(float) -> setStartX
    339:339:void setStartY(float) -> setStartY
com.google.android.material.shape.ShapePath$1 -> com.google.android.material.shape.ShapePath$1:
    258:258:void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix) -> <init>
    262:263:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$ArcShadowOperation -> com.google.android.material.shape.ShapePath$ArcShadowOperation:
    415:416:void <init>(com.google.android.material.shape.ShapePath$PathArcOperation) -> <init>
    425:430:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$LineShadowOperation -> com.google.android.material.shape.ShapePath$LineShadowOperation:
    383:386:void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float) -> <init>
    395:402:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
    406:406:float getAngle() -> getAngle
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.shape.ShapePath$PathArcOperation:
    527:527:void <clinit>() -> <clinit>
    560:564:void <init>(float,float,float,float) -> <init>
    526:526:float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1000
    526:526:float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1100
    526:526:float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1200
    526:526:float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1300
    526:526:void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$600
    526:526:void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$700
    526:526:float access$800(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$800
    526:526:float access$900(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$900
    569:574:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    590:590:float getBottom() -> getBottom
    578:578:float getLeft() -> getLeft
    586:586:float getRight() -> getRight
    610:610:float getStartAngle() -> getStartAngle
    614:614:float getSweepAngle() -> getSweepAngle
    582:582:float getTop() -> getTop
    606:606:void setBottom(float) -> setBottom
    594:594:void setLeft(float) -> setLeft
    602:602:void setRight(float) -> setRight
    618:618:void setStartAngle(float) -> setStartAngle
    622:622:void setSweepAngle(float) -> setSweepAngle
    598:598:void setTop(float) -> setTop
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.shape.ShapePath$PathLineOperation:
    446:446:void <init>() -> <init>
    446:446:float access$000(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$000
    446:446:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$002
    446:446:float access$100(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$100
    446:446:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$102
    452:456:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.shape.ShapePath$PathOperation:
    436:439:void <init>() -> <init>
com.google.android.material.shape.ShapePath$ShadowCompatOperation -> com.google.android.material.shape.ShapePath$ShadowCompatOperation:
    364:364:void <clinit>() -> <clinit>
    362:362:void <init>() -> <init>
    368:368:void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.slider.BaseSlider$SliderState -> com.google.android.material.slider.BaseSlider$SliderState:
    2424:2424:void <clinit>() -> <clinit>
    2416:2416:void <init>(android.os.Parcel,com.google.android.material.slider.BaseSlider$1) -> <init>
    2445:2451:void <init>(android.os.Parcel) -> <init>
    2456:2463:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.slider.BaseSlider$SliderState$1 -> com.google.android.material.slider.BaseSlider$SliderState$1:
    2425:2425:void <init>() -> <init>
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2430:2430:com.google.android.material.slider.BaseSlider$SliderState createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object[] newArray(int) -> newArray
    2436:2436:com.google.android.material.slider.BaseSlider$SliderState[] newArray(int) -> newArray
com.google.android.material.slider.RangeSlider$RangeSliderState -> com.google.android.material.slider.RangeSlider$RangeSliderState:
    206:206:void <clinit>() -> <clinit>
    184:184:void <init>(android.os.Parcel,com.google.android.material.slider.RangeSlider$1) -> <init>
    194:196:void <init>(android.os.Parcel) -> <init>
    201:203:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.slider.RangeSlider$RangeSliderState$1 -> com.google.android.material.slider.RangeSlider$RangeSliderState$1:
    207:207:void <init>() -> <init>
    207:207:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    210:210:com.google.android.material.slider.RangeSlider$RangeSliderState createFromParcel(android.os.Parcel) -> createFromParcel
    207:207:java.lang.Object[] newArray(int) -> newArray
    215:215:com.google.android.material.slider.RangeSlider$RangeSliderState[] newArray(int) -> newArray
com.google.android.material.snackbar.BaseTransientBottomBar -> com.google.android.material.snackbar.BaseTransientBottomBar:
    227:238:void <clinit>() -> <clinit>
    266:712:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    95:95:boolean access$000(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$000
    95:95:int access$1002(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$1002
    95:95:int access$102(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$102
    95:95:int access$1102(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$1102
    95:95:void access$1200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1200
    95:95:void access$1400(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1400
    95:95:void access$1500(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1500
    95:95:com.google.android.material.snackbar.ContentViewCallback access$1600(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1600
    95:95:boolean access$1700() -> access$1700
    95:95:int access$200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$200
    95:95:void access$300(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$300
    95:95:android.content.Context access$400(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$400
    95:95:int access$500(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$500
    95:95:int access$600(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$600
    95:95:int access$700(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$700
    95:95:int access$702(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$702
    95:95:java.lang.String access$800() -> access$800
    95:95:int access$902(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$902
    887:887:void animateViewIn() -> animateViewIn
    908:911:void animateViewOut(int) -> animateViewOut
    870:880:int calculateBottomMarginForAnchorView() -> calculateBottomMarginForAnchorView
    653:653:void dismiss() -> dismiss
    657:657:void dispatchDismiss(int) -> dispatchDismiss
    946:948:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    637:637:android.content.Context getContext() -> getContext
    515:515:int getDuration() -> getDuration
    729:729:com.google.android.material.behavior.SwipeDismissBehavior getNewBehavior() -> getNewBehavior
    959:961:android.animation.ValueAnimator getScaleAnimator(float[]) -> getScaleAnimator
    817:820:int getScreenHeight() -> getScreenHeight
    481:481:int getSnackbarBaseLayoutResId() -> getSnackbarBaseLayoutResId
    1058:1061:int getTranslationYBottom() -> getTranslationYBottom
    811:812:int getViewAbsoluteBottom() -> getViewAbsoluteBottom
    490:492:boolean hasSnackbarStyleAttr() -> hasSnackbarStyleAttr
    1067:1071:void hideView(int) -> hideView
    709:709:boolean isShownOrQueued() -> isShownOrQueued
    473:475:boolean isSwipeDismissable() -> isSwipeDismissable
    1089:1101:void onViewHidden(int) -> onViewHidden
    1076:1082:void onViewShown() -> onViewShown
    504:504:com.google.android.material.snackbar.BaseTransientBottomBar setDuration(int) -> setDuration
    827:865:void setUpBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> setUpBehavior
    1107:1113:boolean shouldAnimate() -> shouldAnimate
    469:469:boolean shouldUpdateGestureInset() -> shouldUpdateGestureInset
    648:648:void show() -> show
    733:786:void showView() -> showView
    797:805:void showViewImpl() -> showViewImpl
    916:929:void startFadeInAnimation() -> startFadeInAnimation
    933:942:void startFadeOutAnimation(int) -> startFadeOutAnimation
    974:1016:void startSlideInAnimation() -> startSlideInAnimation
    1020:1054:void startSlideOutAnimation(int) -> startSlideOutAnimation
    447:464:void updateMargins() -> updateMargins
com.google.android.material.snackbar.BaseTransientBottomBar$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$1:
    239:239:void <init>() -> <init>
    242:247:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.BaseTransientBottomBar$10 -> com.google.android.material.snackbar.BaseTransientBottomBar$10:
    888:888:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    891:901:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$11 -> com.google.android.material.snackbar.BaseTransientBottomBar$11:
    923:923:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    926:926:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$12 -> com.google.android.material.snackbar.BaseTransientBottomBar$12:
    936:936:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    939:939:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$13 -> com.google.android.material.snackbar.BaseTransientBottomBar$13:
    949:949:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    952:952:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$14 -> com.google.android.material.snackbar.BaseTransientBottomBar$14:
    962:962:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    965:967:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$15 -> com.google.android.material.snackbar.BaseTransientBottomBar$15:
    986:986:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    995:995:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    989:989:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$16 -> com.google.android.material.snackbar.BaseTransientBottomBar$16:
    999:1000:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    1004:1013:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$17 -> com.google.android.material.snackbar.BaseTransientBottomBar$17:
    1025:1025:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    1033:1033:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1028:1028:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$18 -> com.google.android.material.snackbar.BaseTransientBottomBar$18:
    1037:1038:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    1042:1051:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$2 -> com.google.android.material.snackbar.BaseTransientBottomBar$2:
    268:268:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    271:275:void onGlobalLayout() -> onGlobalLayout
com.google.android.material.snackbar.BaseTransientBottomBar$3 -> com.google.android.material.snackbar.BaseTransientBottomBar$3:
    281:281:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    284:307:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$4 -> com.google.android.material.snackbar.BaseTransientBottomBar$4:
    406:406:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    412:415:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.snackbar.BaseTransientBottomBar$5 -> com.google.android.material.snackbar.BaseTransientBottomBar$5:
    423:423:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    427:429:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    435:438:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.snackbar.BaseTransientBottomBar$6 -> com.google.android.material.snackbar.BaseTransientBottomBar$6:
    714:714:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    722:723:void dismiss(int) -> dismiss
    717:717:void show() -> show
com.google.android.material.snackbar.BaseTransientBottomBar$7 -> com.google.android.material.snackbar.BaseTransientBottomBar$7:
    734:734:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    737:741:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    748:753:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.snackbar.BaseTransientBottomBar$7$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$7$1:
    754:754:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar$7) -> <init>
    757:757:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$8 -> com.google.android.material.snackbar.BaseTransientBottomBar$8:
    787:787:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    790:791:void onLayoutChange(android.view.View,int,int,int,int) -> onLayoutChange
com.google.android.material.snackbar.BaseTransientBottomBar$9 -> com.google.android.material.snackbar.BaseTransientBottomBar$9:
    835:835:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    838:841:void onDismiss(android.view.View) -> onDismiss
    850:854:void onDragStateChanged(int) -> onDragStateChanged
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback -> com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback:
    119:119:void <init>() -> <init>
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    1299:1300:void <init>() -> <init>
    1296:1296:void access$1300(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1300
    1310:1310:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1316:1317:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1305:1305:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    1327:1330:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    1339:1339:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1344:1354:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1335:1335:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    1120:1120:void <clinit>() -> <clinit>
    1139:1139:void <init>(android.content.Context) -> <init>
    1143:1168:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1275:1290:android.graphics.drawable.Drawable createThemedBackground() -> createThemedBackground
    1269:1269:float getActionTextColorAlpha() -> getActionTextColorAlpha
    1257:1257:int getAnimationMode() -> getAnimationMode
    1265:1265:float getBackgroundOverlayColorAlpha() -> getBackgroundOverlayColorAlpha
    1229:1234:void onAttachedToWindow() -> onAttachedToWindow
    1239:1241:void onDetachedFromWindow() -> onDetachedFromWindow
    1221:1223:void onLayout(boolean,int,int,int,int) -> onLayout
    1174:1174:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    1179:1184:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1189:1195:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    1202:1207:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1252:1252:void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
    1215:1216:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1247:1247:void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener) -> setOnLayoutChangeListener
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
    1121:1121:void <init>() -> <init>
com.google.android.material.snackbar.Snackbar -> com.google.android.material.snackbar.Snackbar:
    69:70:void <clinit>() -> <clinit>
    111:113:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    127:127:void dismiss() -> dismiss
    269:286:android.view.ViewGroup findSuitableParent(android.view.View) -> findSuitableParent
    363:375:int getDuration() -> getDuration
    237:240:boolean hasSnackbarContentStyleAttrs(android.content.Context) -> hasSnackbarContentStyleAttrs
    157:157:com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int) -> make
    262:262:com.google.android.material.snackbar.Snackbar make(android.view.View,int,int) -> make
    196:217:com.google.android.material.snackbar.Snackbar makeInternal(android.content.Context,android.view.View,java.lang.CharSequence,int) -> makeInternal
    325:325:com.google.android.material.snackbar.Snackbar setAction(int,android.view.View$OnClickListener) -> setAction
    337:347:com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener) -> setAction
    433:435:com.google.android.material.snackbar.Snackbar setActionTextColor(int) -> setActionTextColor
    301:303:com.google.android.material.snackbar.Snackbar setText(java.lang.CharSequence) -> setText
    120:120:void show() -> show
com.google.android.material.snackbar.Snackbar$1 -> com.google.android.material.snackbar.Snackbar$1:
    348:348:void <init>(com.google.android.material.snackbar.Snackbar,android.view.View$OnClickListener) -> <init>
    351:353:void onClick(android.view.View) -> onClick
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    493:493:void <init>(android.content.Context) -> <init>
    497:497:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    502:514:void onMeasure(int,int) -> onMeasure
    490:490:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    490:490:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    490:490:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    490:490:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    490:490:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
    45:45:void <init>(android.content.Context) -> <init>
    49:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:153:void animateContentIn(int,int) -> animateContentIn
    159:164:void animateContentOut(int,int) -> animateContentOut
    69:69:android.widget.Button getActionView() -> getActionView
    65:65:android.widget.TextView getMessageView() -> getMessageView
    59:61:void onFinishInflate() -> onFinishInflate
    84:113:void onMeasure(int,int) -> onMeasure
    74:78:void updateActionTextColorAlphaIfNeeded(float) -> updateActionTextColorAlphaIfNeeded
    134:142:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    120:126:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
    49:53:void <init>() -> <init>
    205:209:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    107:113:void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int) -> dismiss
    37:40:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    240:244:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    169:171:boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentOrNext
    216:216:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    220:220:boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isNextSnackbarLocked
    121:129:void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback) -> onDismissed
    137:141:void onShown(com.google.android.material.snackbar.SnackbarManager$Callback) -> onShown
    145:150:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    154:159:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    224:236:void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
    75:103:void show(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> show
    190:199:void showNextSnackbarLocked() -> showNextSnackbarLocked
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
    54:54:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    57:59:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    179:181:void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> <init>
    185:185:boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback) -> isSnackbar
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
    91:91:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    41:42:void <init>(android.os.Parcelable) -> <init>
    46:58:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    84:85:java.lang.String toString() -> toString
    64:78:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
    92:92:void <init>() -> <init>
    92:92:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    97:97:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    103:103:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object[] newArray(int) -> newArray
    109:109:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.textfield.ClearTextEndIconDelegate -> com.google.android.material.textfield.ClearTextEndIconDelegate:
    46:108:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    40:40:boolean access$000(android.text.Editable) -> access$000
    40:40:void access$100(com.google.android.material.textfield.ClearTextEndIconDelegate,boolean) -> access$100
    40:40:android.view.View$OnFocusChangeListener access$200(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$200
    40:40:android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$300
    143:154:void animateIcon(boolean) -> animateIcon
    182:185:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    198:201:android.animation.ValueAnimator getScaleAnimator() -> getScaleAnimator
    214:214:boolean hasText(android.text.Editable) -> hasText
    160:172:void initAnimators() -> initAnimators
    113:131:void initialize() -> initialize
    136:139:void onSuffixVisibilityChanged(boolean) -> onSuffixVisibilityChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$1:
    47:47:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    56:59:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$2:
    63:63:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    66:67:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.google.android.material.textfield.ClearTextEndIconDelegate$3 -> com.google.android.material.textfield.ClearTextEndIconDelegate$3:
    71:71:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    74:80:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.ClearTextEndIconDelegate$4 -> com.google.android.material.textfield.ClearTextEndIconDelegate$4:
    84:84:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    87:98:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$4$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$4$1:
    91:91:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate$4,android.widget.EditText) -> <init>
    94:94:void run() -> run
com.google.android.material.textfield.ClearTextEndIconDelegate$5 -> com.google.android.material.textfield.ClearTextEndIconDelegate$5:
    118:118:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    121:126:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.ClearTextEndIconDelegate$6 -> com.google.android.material.textfield.ClearTextEndIconDelegate$6:
    165:165:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    168:168:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.ClearTextEndIconDelegate$7 -> com.google.android.material.textfield.ClearTextEndIconDelegate$7:
    173:173:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    176:176:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.ClearTextEndIconDelegate$8 -> com.google.android.material.textfield.ClearTextEndIconDelegate$8:
    186:186:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    189:190:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.ClearTextEndIconDelegate$9 -> com.google.android.material.textfield.ClearTextEndIconDelegate$9:
    202:202:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    205:207:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.CustomEndIconDelegate -> com.google.android.material.textfield.CustomEndIconDelegate:
    27:27:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    32:33:void initialize() -> initialize
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.CutoutDrawable:
    44:44:void <init>() -> <init>
    48:51:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    87:93:void draw(android.graphics.Canvas) -> draw
    61:61:boolean hasCutout() -> hasCutout
    121:122:void postDraw(android.graphics.Canvas) -> postDraw
    97:107:void preDraw(android.graphics.Canvas) -> preDraw
    82:82:void removeCutout() -> removeCutout
    112:116:void saveCanvasLayer(android.graphics.Canvas) -> saveCanvasLayer
    67:72:void setCutout(float,float,float,float) -> setCutout
    77:77:void setCutout(android.graphics.RectF) -> setCutout
    55:57:void setPaintStyles() -> setPaintStyles
    127:127:boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback) -> useHardwareLayer
com.google.android.material.textfield.DropdownMenuEndIconDelegate -> com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    69:69:void <clinit>() -> <clinit>
    73:202:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    67:67:android.widget.AutoCompleteTextView access$000(android.widget.EditText) -> access$000
    67:67:android.view.accessibility.AccessibilityManager access$100(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$100
    67:67:com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1000
    67:67:android.view.View$OnFocusChangeListener access$1100(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1100
    67:67:boolean access$1200() -> access$1200
    67:67:boolean access$1300(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1300
    67:67:long access$1402(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long) -> access$1402
    67:67:boolean access$1500(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1500
    67:67:android.animation.ValueAnimator access$1600(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1600
    67:67:boolean access$200(android.widget.EditText) -> access$200
    67:67:void access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$300
    67:67:boolean access$402(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$402
    67:67:void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$500
    67:67:void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$600
    67:67:void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$700
    67:67:void access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$800
    67:67:android.text.TextWatcher access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$900
    311:326:void addRippleEffect(android.widget.AutoCompleteTextView) -> addRippleEffect
    366:386:void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnFilledLayout
    336:358:void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnOutlinedLayout
    444:450:android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText) -> castAutoCompleteTextViewOrThrow
    479:482:android.animation.ValueAnimator getAlphaAnimator(int,float[]) -> getAlphaAnimator
    424:433:com.google.android.material.shape.MaterialShapeDrawable getPopUpMaterialShapeDrawable(float,float,float,int) -> getPopUpMaterialShapeDrawable
    466:468:void initAnimators() -> initAnimators
    207:260:void initialize() -> initialize
    438:438:boolean isDropdownPopupActive() -> isDropdownPopupActive
    454:454:boolean isEditable(android.widget.EditText) -> isEditable
    458:461:void setEndIconChecked(boolean) -> setEndIconChecked
    299:304:void setPopupBackground(android.widget.AutoCompleteTextView) -> setPopupBackground
    394:409:void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView) -> setUpDropdownShowHideBehavior
    277:294:void showHideDropdown(android.widget.AutoCompleteTextView) -> showHideDropdown
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1:
    74:74:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    78:86:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1:
    87:87:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$1,android.widget.AutoCompleteTextView) -> <init>
    90:92:void run() -> run
com.google.android.material.textfield.DropdownMenuEndIconDelegate$10 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$10:
    483:483:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    486:487:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$2:
    98:98:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    101:104:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.google.android.material.textfield.DropdownMenuEndIconDelegate$3 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$3:
    109:109:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,com.google.android.material.textfield.TextInputLayout) -> <init>
    113:121:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    127:136:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.textfield.DropdownMenuEndIconDelegate$4 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$4:
    141:141:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    145:160:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$5:
    167:167:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    171:186:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$5$1:
    175:175:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$5,android.widget.AutoCompleteTextView) -> <init>
    178:178:void run() -> run
com.google.android.material.textfield.DropdownMenuEndIconDelegate$6 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$6:
    249:249:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    252:253:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.DropdownMenuEndIconDelegate$7 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$7:
    395:395:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> <init>
    398:402:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.textfield.DropdownMenuEndIconDelegate$8 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$8:
    410:410:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    413:415:void onDismiss() -> onDismiss
com.google.android.material.textfield.DropdownMenuEndIconDelegate$9 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$9:
    469:469:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    472:473:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.EndIconDelegate -> com.google.android.material.textfield.EndIconDelegate:
    36:39:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.IndicatorViewController:
    121:125:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    62:62:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> access$002
    62:62:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> access$102
    62:62:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> access$200
    391:415:void addIndicator(android.widget.TextView,int) -> addIndicator
    356:374:void adjustIndicatorPadding() -> adjustIndicatorPadding
    380:380:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    333:334:void cancelCaptionAnimator() -> cancelCaptionAnimator
    308:311:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    318:320:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    325:328:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    519:519:boolean errorShouldBeShown() -> errorShouldBeShown
    346:348:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    544:544:java.lang.CharSequence getErrorText() -> getErrorText
    568:568:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    573:573:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    548:548:java.lang.CharSequence getHelperText() -> getHelperText
    385:386:int getIndicatorPadding(boolean,int,int) -> getIndicatorPadding
    529:529:boolean helperTextIsDisplayed() -> helperTextIsDisplayed
    166:179:void hideError() -> hideError
    142:149:void hideHelperText() -> hideHelperText
    523:525:boolean isCaptionStateError(int) -> isCaptionStateError
    537:539:boolean isCaptionStateHelperText(int) -> isCaptionStateHelperText
    473:473:boolean isErrorEnabled() -> isErrorEnabled
    477:477:boolean isHelperTextEnabled() -> isHelperTextEnabled
    419:429:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    275:292:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    591:593:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    440:469:void setErrorEnabled(boolean) -> setErrorEnabled
    584:586:void setErrorTextAppearance(int) -> setErrorTextAppearance
    577:579:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    620:622:void setHelperTextAppearance(int) -> setHelperTextAppearance
    482:511:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    613:615:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    434:434:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    192:196:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    153:162:void showError(java.lang.CharSequence) -> showError
    129:138:void showHelper(java.lang.CharSequence) -> showHelper
    209:265:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.IndicatorViewController$1:
    234:234:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    237:248:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    254:255:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.MaterialAutoCompleteTextView -> com.google.android.material.textfield.MaterialAutoCompleteTextView:
    70:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    62:130:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:56:androidx.appcompat.widget.ListPopupWindow access$000(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> access$000
    56:56:void access$100(com.google.android.material.textfield.MaterialAutoCompleteTextView,java.lang.Object) -> access$100
    241:246:com.google.android.material.textfield.TextInputLayout findTextInputLayoutAncestor() -> findTextInputLayoutAncestor
    169:173:java.lang.CharSequence getHint() -> getHint
    193:233:int measureContentWidth() -> measureContentWidth
    150:160:void onAttachedToWindow() -> onAttachedToWindow
    178:188:void onMeasure(int,int) -> onMeasure
    144:145:void setAdapter(android.widget.ListAdapter) -> setAdapter
    135:138:void showDropDown() -> showDropDown
    253:259:void updateText(java.lang.Object) -> updateText
com.google.android.material.textfield.MaterialAutoCompleteTextView$1 -> com.google.android.material.textfield.MaterialAutoCompleteTextView$1:
    107:107:void <init>(com.google.android.material.textfield.MaterialAutoCompleteTextView) -> <init>
    110:126:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.textfield.NoEndIconDelegate -> com.google.android.material.textfield.NoEndIconDelegate:
    26:26:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    31:33:void initialize() -> initialize
com.google.android.material.textfield.PasswordToggleEndIconDelegate -> com.google.android.material.textfield.PasswordToggleEndIconDelegate:
    36:81:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    34:34:boolean access$000(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$000
    34:34:android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$100
    123:125:boolean hasPasswordTransformation() -> hasPasswordTransformation
    86:118:void initialize() -> initialize
    130:133:boolean isInputTypePassword(android.widget.EditText) -> isInputTypePassword
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$1:
    37:37:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    42:42:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$2 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$2:
    47:47:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    50:56:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$3:
    60:60:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    63:69:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3$1 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$3$1:
    70:70:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate$3,android.widget.EditText) -> <init>
    73:73:void run() -> run
com.google.android.material.textfield.PasswordToggleEndIconDelegate$4 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$4:
    91:91:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    94:110:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
    55:55:void <init>(android.content.Context) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:76:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    206:219:java.lang.String getAccessibilityNodeInfoText(com.google.android.material.textfield.TextInputLayout) -> getAccessibilityNodeInfoText
    153:159:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    165:171:boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point) -> getGlobalVisibleRect
    100:104:java.lang.CharSequence getHint() -> getHint
    133:134:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    121:126:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    81:91:void onAttachedToWindow() -> onAttachedToWindow
    110:114:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    194:200:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    178:187:boolean requestRectangleOnScreen(android.graphics.Rect) -> requestRectangleOnScreen
    141:141:void setTextInputLayoutFocusedRectEnabled(boolean) -> setTextInputLayoutFocusedRectEnabled
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
    181:181:void <clinit>() -> <clinit>
    424:424:void <init>(android.content.Context) -> <init>
    428:428:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:850:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    179:179:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> access$000
    179:179:boolean access$100(com.google.android.material.textfield.TextInputLayout) -> access$100
    179:179:void access$200(com.google.android.material.textfield.TextInputLayout,int) -> access$200
    179:179:com.google.android.material.internal.CheckableImageButton access$300(com.google.android.material.textfield.TextInputLayout) -> access$300
    3569:3571:void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> addOnEditTextAttachedListener
    3541:3541:void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) -> addOnEndIconChangedListener
    2315:2317:void addPlaceholderTextView() -> addPlaceholderTextView
    857:872:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    986:1008:void adjustFilledEditTextPaddingForLargeFont() -> adjustFilledEditTextPaddingForLargeFont
    4300:4316:void animateToExpansionFraction(float) -> animateToExpansionFraction
    2751:2768:void applyBoxAttributes() -> applyBoxAttributes
    2773:2780:void applyBoxUnderlineAttributes() -> applyBoxUnderlineAttributes
    4105:4106:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    3832:3832:void applyEndIconTint() -> applyEndIconTint
    3946:3959:void applyIconTint(com.google.android.material.internal.CheckableImageButton,boolean,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode) -> applyIconTint
    3800:3800:void applyStartIconTint() -> applyStartIconTint
    932:950:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    2742:2745:int calculateBoxBackgroundColor() -> calculateBoxBackgroundColor
    2649:2671:android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect) -> calculateCollapsedTextBounds
    2721:2727:int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float) -> calculateExpandedLabelBottom
    2713:2716:int calculateExpandedLabelTop(android.graphics.Rect,float) -> calculateExpandedLabelTop
    2696:2707:android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect) -> calculateExpandedTextBounds
    2632:2641:int calculateLabelMarginTop() -> calculateLabelMarginTop
    2784:2784:boolean canDrawOutlineStroke() -> canDrawOutlineStroke
    2788:2788:boolean canDrawStroke() -> canDrawStroke
    4099:4100:void closeCutout() -> closeCutout
    4051:4066:void collapseHint(boolean) -> collapseHint
    4070:4070:boolean cutoutEnabled() -> cutoutEnabled
    4111:4111:boolean cutoutIsOpen() -> cutoutIsOpen
    3794:3795:void dispatchOnEditTextAttached() -> dispatchOnEditTextAttached
    3813:3814:void dispatchOnEndIconChanged(int) -> dispatchOnEndIconChanged
    1351:1383:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    2937:2939:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    4030:4032:void draw(android.graphics.Canvas) -> draw
    4042:4046:void drawBoxUnderline(android.graphics.Canvas) -> drawBoxUnderline
    4036:4037:void drawHint(android.graphics.Canvas) -> drawHint
    4116:4145:void drawableStateChanged() -> drawableStateChanged
    4280:4295:void expandHint(boolean) -> expandHint
    1496:1499:int getBaseline() -> getBaseline
    878:881:com.google.android.material.shape.MaterialShapeDrawable getBoxBackground() -> getBoxBackground
    1224:1224:int getBoxBackgroundColor() -> getBoxBackgroundColor
    917:917:int getBoxBackgroundMode() -> getBoxBackgroundMode
    2577:2577:int getCounterMaxLength() -> getCounterMaxLength
    2586:2587:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    1552:1552:android.widget.EditText getEditText() -> getEditText
    3493:3493:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    3789:3790:com.google.android.material.textfield.EndIconDelegate getEndIconDelegate() -> getEndIconDelegate
    3453:3453:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    3931:3934:com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable() -> getEndIconToUpdateDummyDrawable
    3785:3785:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    2950:2950:java.lang.CharSequence getError() -> getError
    2000:2000:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    4341:4341:int getErrorTextCurrentColor() -> getErrorTextCurrentColor
    2962:2963:java.lang.CharSequence getHelperText() -> getHelperText
    1680:1680:java.lang.CharSequence getHint() -> getHint
    4336:4336:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    4331:4331:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    2677:2680:int getLabelLeftBoundAlightWithPrefix(int,boolean) -> getLabelLeftBoundAlightWithPrefix
    2686:2689:int getLabelRightBoundAlignedWithSuffix(int,boolean) -> getLabelRightBoundAlignedWithSuffix
    2260:2260:java.lang.CharSequence getPlaceholderText() -> getPlaceholderText
    3224:3224:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    3107:3107:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    2482:2482:java.lang.CharSequence getSuffixText() -> getSuffixText
    3809:3809:boolean hasEndIcon() -> hasEndIcon
    2308:2310:void hidePlaceholderText() -> hidePlaceholderText
    3375:3375:boolean isEndIconVisible() -> isEndIconVisible
    4249:4249:boolean isErrorIconVisible() -> isErrorIconVisible
    4326:4326:boolean isHelperTextDisplayed() -> isHelperTextDisplayed
    1910:1910:boolean isHelperTextEnabled() -> isHelperTextEnabled
    4321:4321:boolean isHintExpanded() -> isHintExpanded
    1745:1745:boolean isProvidingHint() -> isProvidingHint
    2731:2732:boolean isSingleLineFilledTextField() -> isSingleLineFilledTextField
    3153:3153:boolean isStartIconVisible() -> isStartIconVisible
    4268:4274:int[] mergeIconState(com.google.android.material.internal.CheckableImageButton) -> mergeIconState
    921:927:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    3995:4015:void onLayout(boolean,int,int,int,int) -> onLayout
    3014:3029:void onMeasure(int,int) -> onMeasure
    2910:2932:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2896:2904:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4074:4087:void openCutout() -> openCutout
    2562:2566:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    3392:3392:void refreshEndIconDrawableState() -> refreshEndIconDrawableState
    3353:3353:void refreshErrorIconDrawableState() -> refreshErrorIconDrawableState
    4254:4264:void refreshIconDrawableState(com.google.android.material.internal.CheckableImageButton,android.content.res.ColorStateList) -> refreshIconDrawableState
    3161:3161:void refreshStartIconDrawableState() -> refreshStartIconDrawableState
    2322:2323:void removePlaceholderTextView() -> removePlaceholderTextView
    900:905:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    1116:1131:void setBoxStrokeColorStateList(android.content.res.ColorStateList) -> setBoxStrokeColorStateList
    1143:1145:void setBoxStrokeErrorColor(android.content.res.ColorStateList) -> setBoxStrokeErrorColor
    2047:2065:void setCounterEnabled(boolean) -> setCounterEnabled
    2170:2177:void setCounterMaxLength(int) -> setCounterMaxLength
    2118:2120:void setCounterOverflowTextAppearance(int) -> setCounterOverflowTextAppearance
    2134:2136:void setCounterOverflowTextColor(android.content.res.ColorStateList) -> setCounterOverflowTextColor
    2077:2079:void setCounterTextAppearance(int) -> setCounterTextAppearance
    2092:2094:void setCounterTextColor(android.content.res.ColorStateList) -> setCounterTextColor
    1391:1477:void setEditText(android.widget.EditText) -> setEditText
    957:958:void setEditTextBoxBackground() -> setEditTextBoxBackground
    2557:2558:void setEnabled(boolean) -> setEnabled
    3384:3384:void setEndIconActivated(boolean) -> setEndIconActivated
    3406:3406:void setEndIconCheckable(boolean) -> setEndIconCheckable
    3480:3481:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    3441:3442:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    3272:3285:void setEndIconMode(int) -> setEndIconMode
    3308:3308:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    3331:3332:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    3508:3511:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    3524:3527:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    3362:3365:void setEndIconVisible(boolean) -> setEndIconVisible
    1954:1966:void setError(java.lang.CharSequence) -> setError
    1930:1930:void setErrorContentDescription(java.lang.CharSequence) -> setErrorContentDescription
    1819:1819:void setErrorEnabled(boolean) -> setErrorEnabled
    1988:1989:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    2010:2018:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    2030:2037:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    4240:4244:void setErrorIconVisible(boolean) -> setErrorIconVisible
    1828:1828:void setErrorTextAppearance(int) -> setErrorTextAppearance
    1833:1833:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    1891:1899:void setHelperText(java.lang.CharSequence) -> setHelperText
    1853:1853:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    1874:1874:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    1848:1848:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    1644:1646:void setHint(java.lang.CharSequence) -> setHint
    1662:1667:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    1754:1760:void setHintTextAppearance(int) -> setHintTextAppearance
    1769:1777:void setHintTextColor(android.content.res.ColorStateList) -> setHintTextColor
    3979:3986:void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconClickable
    3967:3968:void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> setIconOnClickListener
    3973:3974:void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconOnLongClickListener
    1606:1608:void setMaxWidth(int) -> setMaxWidth
    1565:1567:void setMinWidth(int) -> setMinWidth
    2240:2249:void setPlaceholderText(java.lang.CharSequence) -> setPlaceholderText
    2358:2360:void setPlaceholderTextAppearance(int) -> setPlaceholderTextAppearance
    2333:2336:void setPlaceholderTextColor(android.content.res.ColorStateList) -> setPlaceholderTextColor
    2265:2284:void setPlaceholderTextEnabled(boolean) -> setPlaceholderTextEnabled
    2383:2385:void setPrefixText(java.lang.CharSequence) -> setPrefixText
    2442:2442:void setPrefixTextAppearance(int) -> setPrefixTextAppearance
    2423:2423:void setPrefixTextColor(android.content.res.ColorStateList) -> setPrefixTextColor
    3175:3175:void setStartIconCheckable(boolean) -> setStartIconCheckable
    3211:3212:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    3086:3094:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    3118:3118:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    3130:3131:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    3239:3242:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    3255:3258:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    3140:3143:void setStartIconVisible(boolean) -> setStartIconVisible
    2469:2471:void setSuffixText(java.lang.CharSequence) -> setSuffixText
    2533:2533:void setSuffixTextAppearance(int) -> setSuffixTextAppearance
    2514:2514:void setSuffixTextColor(android.content.res.ColorStateList) -> setSuffixTextColor
    2609:2627:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    3778:3779:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    3923:3926:boolean shouldUpdateEndDummyDrawable() -> shouldUpdateEndDummyDrawable
    3918:3919:boolean shouldUpdateStartDummyDrawable() -> shouldUpdateStartDummyDrawable
    965:967:boolean shouldUseEditTextBackgroundForBoxBackground() -> shouldUseEditTextBackgroundForBoxBackground
    2300:2303:void showPlaceholderText() -> showPlaceholderText
    3819:3827:void tintEndIconOnError(boolean) -> tintEndIconOnError
    972:980:void updateBoxCollapsedPaddingTop() -> updateBoxCollapsedPaddingTop
    4022:4024:void updateBoxUnderlineBounds(android.graphics.Rect) -> updateBoxUnderlineBounds
    2183:2184:void updateCounter() -> updateCounter
    2189:2211:void updateCounter(int) -> updateCounter
    2221:2227:void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean) -> updateCounterContentDescription
    2593:2600:void updateCounterTextAppearanceAndColor() -> updateCounterTextAppearanceAndColor
    4092:4094:void updateCutout() -> updateCutout
    3841:3911:boolean updateDummyDrawables() -> updateDummyDrawables
    2794:2821:void updateEditTextBackground() -> updateEditTextBackground
    3033:3042:boolean updateEditTextHeightBasedOnIcon() -> updateEditTextHeightBasedOnIcon
    1483:1489:void updateInputLayoutMargins() -> updateInputLayoutMargins
    1504:1504:void updateLabelState(boolean) -> updateLabelState
    1508:1544:void updateLabelState(boolean,boolean) -> updateLabelState
    3050:3059:void updatePlaceholderMeasurementsBasedOnEditText() -> updatePlaceholderMeasurementsBasedOnEditText
    2288:2288:void updatePlaceholderText() -> updatePlaceholderText
    2292:2295:void updatePlaceholderText(int) -> updatePlaceholderText
    2446:2457:void updatePrefixTextViewPadding() -> updatePrefixTextViewPadding
    2413:2414:void updatePrefixTextVisibility() -> updatePrefixTextVisibility
    4221:4235:void updateStrokeErrorColor(boolean,boolean) -> updateStrokeErrorColor
    2537:2549:void updateSuffixTextViewPadding() -> updateSuffixTextViewPadding
    2499:2505:void updateSuffixTextVisibility() -> updateSuffixTextVisibility
    4149:4217:void updateTextInputBoxState() -> updateTextInputBoxState
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$1:
    1419:1419:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1422:1427:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$2:
    2920:2920:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    2923:2925:void run() -> run
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$3:
    3020:3020:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3023:3023:void run() -> run
com.google.android.material.textfield.TextInputLayout$4 -> com.google.android.material.textfield.TextInputLayout$4:
    4308:4308:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4311:4311:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate:
    4353:4354:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    4360:4408:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
    2871:2871:void <clinit>() -> <clinit>
    2833:2833:void <init>(android.os.Parcelable) -> <init>
    2837:2842:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2858:2859:java.lang.String toString() -> toString
    2847:2852:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$1:
    2872:2872:void <init>() -> <init>
    2872:2872:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2872:2872:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2876:2876:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2882:2882:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2872:2872:java.lang.Object[] newArray(int) -> newArray
    2888:2888:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.textview.MaterialTextView -> com.google.android.material.textview.MaterialTextView:
    79:79:void <init>(android.content.Context) -> <init>
    83:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    93:103:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    119:129:void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int) -> applyLineHeightFromViewAppearance
    134:134:boolean canApplyTextAppearanceLineHeight(android.content.Context) -> canApplyTextAppearanceLineHeight
    172:177:int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> findViewAppearanceResourceId
    143:144:int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[]) -> readFirstAvailableDimension
    111:114:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    156:165:boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> viewAttrsHasLineHeight
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
    39:39:void <init>() -> <init>
    68:68:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    43:43:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    49:49:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    55:55:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    61:61:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
com.google.android.material.theme.overlay.MaterialThemeOverlay -> com.google.android.material.theme.overlay.MaterialThemeOverlay:
    48:51:void <clinit>() -> <clinit>
    94:97:int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet) -> obtainAndroidThemeOverlayId
    112:116:int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int) -> obtainMaterialThemeOverlayId
    67:81:android.content.Context wrap(android.content.Context,android.util.AttributeSet,int,int) -> wrap
com.google.android.material.timepicker.ChipTextInputComboView -> com.google.android.material.timepicker.ChipTextInputComboView:
    58:58:void <init>(android.content.Context) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:49:java.lang.String access$100(com.google.android.material.timepicker.ChipTextInputComboView,java.lang.CharSequence) -> access$100
    49:49:com.google.android.material.chip.Chip access$200(com.google.android.material.timepicker.ChipTextInputComboView) -> access$200
    123:123:java.lang.String formatText(java.lang.CharSequence) -> formatText
    92:92:boolean isChecked() -> isChecked
    176:177:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    97:103:void setChecked(boolean) -> setChecked
    128:128:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    133:133:void setTag(int,java.lang.Object) -> setTag
    110:110:void toggle() -> toggle
    83:86:void updateHintLocales() -> updateHintLocales
com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter -> com.google.android.material.timepicker.ChipTextInputComboView$TextFormatter:
    159:159:void <init>(com.google.android.material.timepicker.ChipTextInputComboView) -> <init>
    159:159:void <init>(com.google.android.material.timepicker.ChipTextInputComboView,com.google.android.material.timepicker.ChipTextInputComboView$1) -> <init>
    165:170:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.google.android.material.timepicker.ClockFaceView -> com.google.android.material.timepicker.ClockFaceView:
    89:89:void <init>(android.content.Context) -> <init>
    93:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:177:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:62:com.google.android.material.timepicker.ClockHandView access$000(com.google.android.material.timepicker.ClockFaceView) -> access$000
    62:62:int access$100(com.google.android.material.timepicker.ClockFaceView) -> access$100
    62:62:android.util.SparseArray access$200(com.google.android.material.timepicker.ClockFaceView) -> access$200
    251:264:void findIntersectingTextView() -> findIntersectingTextView
    269:276:android.graphics.RadialGradient getGradientForTextView(android.graphics.RectF,android.graphics.RectF) -> getGradientForTextView
    308:308:float max3(float,float,float) -> max3
    221:224:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    241:242:void onLayout(boolean,int,int,int,int) -> onLayout
    292:304:void onMeasure(int,int) -> onMeasure
    284:286:void onRotate(float,boolean) -> onRotate
    233:235:void setRadius(int) -> setRadius
    185:186:void setValues(java.lang.String[],int) -> setValues
    190:214:void updateTextViews(int) -> updateTextViews
com.google.android.material.timepicker.ClockFaceView$1 -> com.google.android.material.timepicker.ClockFaceView$1:
    132:132:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    135:141:boolean onPreDraw() -> onPreDraw
com.google.android.material.timepicker.ClockFaceView$2 -> com.google.android.material.timepicker.ClockFaceView$2:
    149:149:void <init>(com.google.android.material.timepicker.ClockFaceView) -> <init>
    153:166:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.timepicker.ClockHandView -> com.google.android.material.timepicker.ClockHandView:
    87:87:void <init>(android.content.Context) -> <init>
    91:91:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:115:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:47:void access$000(com.google.android.material.timepicker.ClockHandView,float,boolean) -> access$000
    209:209:void addOnRotateListener(com.google.android.material.timepicker.ClockHandView$OnRotateListener) -> addOnRotateListener
    229:251:void drawSelector(android.graphics.Canvas) -> drawSelector
    256:256:android.graphics.RectF getCurrentSelectorBox() -> getCurrentSelectorBox
    334:338:int getDegreesFromXY(float,float) -> getDegreesFromXY
    218:218:float getHandRotation() -> getHandRotation
    261:261:int getSelectorRadius() -> getSelectorRadius
    161:176:android.util.Pair getValuesForAnimation(float) -> getValuesForAnimation
    319:326:boolean handleTouchInput(float,float,boolean,boolean,boolean) -> handleTouchInput
    223:225:void onDraw(android.graphics.Canvas) -> onDraw
    120:122:void onLayout(boolean,int,int,int,int) -> onLayout
    276:311:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    269:270:void setCircleRadius(int) -> setCircleRadius
    126:126:void setHandRotation(float) -> setHandRotation
    130:157:void setHandRotation(float,boolean) -> setHandRotation
    182:201:void setHandRotationInternal(float,boolean) -> setHandRotationInternal
com.google.android.material.timepicker.ClockHandView$1 -> com.google.android.material.timepicker.ClockHandView$1:
    142:142:void <init>(com.google.android.material.timepicker.ClockHandView) -> <init>
    145:146:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.timepicker.ClockHandView$2 -> com.google.android.material.timepicker.ClockHandView$2:
    150:150:void <init>(com.google.android.material.timepicker.ClockHandView) -> <init>
    153:153:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.google.android.material.timepicker.MaxInputValidator -> com.google.android.material.timepicker.MaxInputValidator:
    26:27:void <init>(int) -> <init>
    42:46:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.google.android.material.timepicker.RadialViewGroup -> com.google.android.material.timepicker.RadialViewGroup:
    55:55:void <init>(android.content.Context) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:76:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    94:98:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    80:83:android.graphics.drawable.Drawable createBackground() -> createBackground
    158:158:int getRadius() -> getRadius
    119:120:void onFinishInflate() -> onFinishInflate
    103:105:void onViewRemoved(android.view.View) -> onViewRemoved
    89:89:void setBackgroundColor(int) -> setBackgroundColor
    152:153:void setRadius(int) -> setRadius
    162:162:boolean shouldSkipView(android.view.View) -> shouldSkipView
    126:148:void updateLayoutParams() -> updateLayoutParams
    110:113:void updateLayoutParamsAsync() -> updateLayoutParamsAsync
com.google.android.material.timepicker.RadialViewGroup$1 -> com.google.android.material.timepicker.RadialViewGroup$1:
    70:70:void <init>(com.google.android.material.timepicker.RadialViewGroup) -> <init>
    73:73:void run() -> run
com.google.android.material.timepicker.TimeModel -> com.google.android.material.timepicker.TimeModel:
    159:159:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
    56:56:void <init>(int) -> <init>
    59:66:void <init>(int,int,int,int) -> <init>
    70:70:void <init>(android.os.Parcel) -> <init>
    134:139:boolean equals(java.lang.Object) -> equals
    183:183:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence) -> formatText
    187:190:java.lang.String formatText(android.content.res.Resources,java.lang.CharSequence,java.lang.String) -> formatText
    124:125:int hashCode() -> hashCode
    152:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.timepicker.TimeModel$1 -> com.google.android.material.timepicker.TimeModel$1:
    159:159:void <init>() -> <init>
    159:159:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    162:162:com.google.android.material.timepicker.TimeModel createFromParcel(android.os.Parcel) -> createFromParcel
    159:159:java.lang.Object[] newArray(int) -> newArray
    167:167:com.google.android.material.timepicker.TimeModel[] newArray(int) -> newArray
com.google.android.material.timepicker.TimePickerView -> com.google.android.material.timepicker.TimePickerView:
    91:91:void <init>(android.content.Context) -> <init>
    95:95:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:121:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:55:com.google.android.material.timepicker.TimePickerView$OnSelectionChange access$000(com.google.android.material.timepicker.TimePickerView) -> access$000
    55:55:com.google.android.material.timepicker.TimePickerView$OnPeriodChangeListener access$100(com.google.android.material.timepicker.TimePickerView) -> access$100
    55:55:com.google.android.material.timepicker.TimePickerView$OnDoubleTapListener access$200(com.google.android.material.timepicker.TimePickerView) -> access$200
    246:247:void onAttachedToWindow() -> onAttachedToWindow
    238:240:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    166:170:void setUpDisplay() -> setUpDisplay
    126:154:void setupDoubleTap() -> setupDoubleTap
    251:259:void updateToggleConstraints() -> updateToggleConstraints
com.google.android.material.timepicker.TimePickerView$1 -> com.google.android.material.timepicker.TimePickerView$1:
    77:77:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    80:81:void onClick(android.view.View) -> onClick
com.google.android.material.timepicker.TimePickerView$2 -> com.google.android.material.timepicker.TimePickerView$2:
    104:104:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    108:110:void onButtonChecked(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> onButtonChecked
com.google.android.material.timepicker.TimePickerView$3 -> com.google.android.material.timepicker.TimePickerView$3:
    129:129:void <init>(com.google.android.material.timepicker.TimePickerView) -> <init>
    132:134:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.google.android.material.timepicker.TimePickerView$4 -> com.google.android.material.timepicker.TimePickerView$4:
    142:142:void <init>(com.google.android.material.timepicker.TimePickerView,android.view.GestureDetector) -> <init>
    145:146:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
    65:67:void <init>() -> <init>
    65:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:43:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    152:155:boolean didStateChange(boolean) -> didStateChange
    139:143:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    126:130:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    98:105:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
    106:106:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    109:112:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
    46:46:void <init>() -> <init>
    49:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    75:94:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
    83:83:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    86:86:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
    79:89:void <init>() -> <init>
    79:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    710:722:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    669:685:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    626:627:void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF) -> calculateDependencyWindowBounds
    544:556:android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) -> calculateMotionTiming
    632:641:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterX
    646:655:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterY
    561:581:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    587:607:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    690:703:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    613:622:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    502:531:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    462:491:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    230:255:void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List) -> createDependencyTranslationAnimation
    207:221:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    377:451:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    315:352:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    774:782:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    751:759:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    267:304:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    735:737:int getBackgroundTint(android.view.View) -> getBackgroundTint
    99:107:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    115:118:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    129:191:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    727:728:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
    169:169:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    182:186:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    172:176:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$2:
    342:342:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    345:345:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$3:
    353:353:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    362:362:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    357:357:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$4:
    405:405:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    410:412:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
    788:788:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
    52:55:void <init>() -> <init>
    52:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    112:125:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    63:63:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    80:87:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    70:70:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    88:88:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    98:99:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    91:92:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
    53:53:void <init>() -> <init>
    56:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:71:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    79:80:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    84:125:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
com.google.common.base.Absent -> com.google.common.base.Absent:
    27:27:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    48:48:java.lang.Object or(java.lang.Object) -> or
    96:96:java.lang.Object readResolve() -> readResolve
    31:31:com.google.common.base.Optional withType() -> withType
com.google.common.base.AbstractIterator -> com.google.common.base.AbstractIterator:
    31:33:void <init>() -> <init>
    49:49:java.lang.Object endOfData() -> endOfData
    55:63:boolean hasNext() -> hasNext
    78:83:java.lang.Object next() -> next
    89:89:void remove() -> remove
    67:70:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.base.AbstractIterator$1 -> com.google.common.base.AbstractIterator$1:
    56:56:void <clinit>() -> <clinit>
com.google.common.base.AbstractIterator$State -> com.google.common.base.AbstractIterator$State:
    35:39:void <clinit>() -> <clinit>
    35:35:void <init>(java.lang.String,int) -> <init>
    35:35:com.google.common.base.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    35:35:com.google.common.base.AbstractIterator$State[] values() -> values
com.google.common.base.Ascii -> com.google.common.base.Ascii:
    407:417:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
com.google.common.base.CharMatcher -> com.google.common.base.CharMatcher:
    359:359:void <init>() -> <init>
    64:64:java.lang.String access$100(char) -> access$100
    63:63:boolean apply(java.lang.Object) -> apply
    909:909:boolean apply(java.lang.Character) -> apply
    560:563:int indexIn(java.lang.CharSequence,int) -> indexIn
    295:295:com.google.common.base.CharMatcher is(char) -> is
    127:127:com.google.common.base.CharMatcher none() -> none
    927:932:java.lang.String showCharacter(char) -> showCharacter
com.google.common.base.CharMatcher$FastMatcher -> com.google.common.base.CharMatcher$FastMatcher:
    938:938:void <init>() -> <init>
com.google.common.base.CharMatcher$Is -> com.google.common.base.CharMatcher$Is:
    1609:1610:void <init>(char) -> <init>
    1615:1615:boolean matches(char) -> matches
    1646:1646:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$NamedFastMatcher -> com.google.common.base.CharMatcher$NamedFastMatcher:
    956:957:void <init>(java.lang.String) -> <init>
    962:962:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$None -> com.google.common.base.CharMatcher$None:
    1107:1107:void <clinit>() -> <clinit>
    1110:1110:void <init>() -> <init>
    1126:1127:int indexIn(java.lang.CharSequence,int) -> indexIn
com.google.common.base.CharMatcher$Whitespace -> com.google.common.base.CharMatcher$Whitespace:
    1221:1223:void <clinit>() -> <clinit>
    1226:1226:void <init>() -> <init>
    1231:1231:boolean matches(char) -> matches
com.google.common.base.Converter -> com.google.common.base.Converter:
    125:125:void <init>() -> <init>
    129:130:void <init>(boolean) -> <init>
    315:315:com.google.common.base.Converter andThen(com.google.common.base.Converter) -> andThen
    392:392:java.lang.Object apply(java.lang.Object) -> apply
    170:170:java.lang.Object convert(java.lang.Object) -> convert
    203:204:java.lang.Iterable convertAll(java.lang.Iterable) -> convertAll
    185:189:java.lang.Object correctedDoBackward(java.lang.Object) -> correctedDoBackward
    175:179:java.lang.Object correctedDoForward(java.lang.Object) -> correctedDoForward
    320:320:com.google.common.base.Converter doAndThen(com.google.common.base.Converter) -> doAndThen
    408:408:boolean equals(java.lang.Object) -> equals
    430:430:com.google.common.base.Converter from(com.google.common.base.Function,com.google.common.base.Function) -> from
    479:479:com.google.common.base.Converter identity() -> identity
    239:240:com.google.common.base.Converter reverse() -> reverse
com.google.common.base.Converter$1 -> com.google.common.base.Converter$1:
    204:204:void <init>(com.google.common.base.Converter,java.lang.Iterable) -> <init>
    207:207:java.util.Iterator iterator() -> iterator
com.google.common.base.Converter$1$1 -> com.google.common.base.Converter$1$1:
    207:208:void <init>(com.google.common.base.Converter$1) -> <init>
    212:212:boolean hasNext() -> hasNext
    217:217:java.lang.Object next() -> next
    222:222:void remove() -> remove
com.google.common.base.Converter$ConverterComposition -> com.google.common.base.Converter$ConverterComposition:
    328:330:void <init>(com.google.common.base.Converter,com.google.common.base.Converter) -> <init>
    359:359:java.lang.Object correctedDoBackward(java.lang.Object) -> correctedDoBackward
    353:353:java.lang.Object correctedDoForward(java.lang.Object) -> correctedDoForward
    347:347:java.lang.Object doBackward(java.lang.Object) -> doBackward
    342:342:java.lang.Object doForward(java.lang.Object) -> doForward
    364:366:boolean equals(java.lang.Object) -> equals
    373:373:int hashCode() -> hashCode
    378:378:java.lang.String toString() -> toString
com.google.common.base.Converter$FunctionBasedConverter -> com.google.common.base.Converter$FunctionBasedConverter:
    433:433:void <init>(com.google.common.base.Function,com.google.common.base.Function,com.google.common.base.Converter$1) -> <init>
    440:442:void <init>(com.google.common.base.Function,com.google.common.base.Function) -> <init>
    452:452:java.lang.Object doBackward(java.lang.Object) -> doBackward
    447:447:java.lang.Object doForward(java.lang.Object) -> doForward
    457:460:boolean equals(java.lang.Object) -> equals
    467:467:int hashCode() -> hashCode
    472:472:java.lang.String toString() -> toString
com.google.common.base.Converter$IdentityConverter -> com.google.common.base.Converter$IdentityConverter:
    487:487:void <clinit>() -> <clinit>
    486:486:void <init>() -> <init>
    506:506:com.google.common.base.Converter doAndThen(com.google.common.base.Converter) -> doAndThen
    520:520:java.lang.Object readResolve() -> readResolve
    486:486:com.google.common.base.Converter reverse() -> reverse
com.google.common.base.Converter$ReverseConverter -> com.google.common.base.Converter$ReverseConverter:
    247:248:void <init>(com.google.common.base.Converter) -> <init>
    277:277:java.lang.Object correctedDoBackward(java.lang.Object) -> correctedDoBackward
    271:271:java.lang.Object correctedDoForward(java.lang.Object) -> correctedDoForward
    265:265:java.lang.Object doBackward(java.lang.Object) -> doBackward
    260:260:java.lang.Object doForward(java.lang.Object) -> doForward
    287:289:boolean equals(java.lang.Object) -> equals
    296:296:int hashCode() -> hashCode
    282:282:com.google.common.base.Converter reverse() -> reverse
    301:301:java.lang.String toString() -> toString
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    43:43:void <init>() -> <init>
    313:313:com.google.common.base.Equivalence equals() -> equals
    69:69:boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    102:102:int hash(java.lang.Object) -> hash
    325:325:com.google.common.base.Equivalence identity() -> identity
com.google.common.base.Equivalence$Equals -> com.google.common.base.Equivalence$Equals:
    330:330:void <clinit>() -> <clinit>
    328:328:void <init>() -> <init>
    334:334:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    339:339:int doHash(java.lang.Object) -> doHash
    343:343:java.lang.Object readResolve() -> readResolve
com.google.common.base.Equivalence$Identity -> com.google.common.base.Equivalence$Identity:
    351:351:void <clinit>() -> <clinit>
    349:349:void <init>() -> <init>
    360:360:int doHash(java.lang.Object) -> doHash
    364:364:java.lang.Object readResolve() -> readResolve
com.google.common.base.ExtraObjectsMethodsForWeb -> com.google.common.base.ExtraObjectsMethodsForWeb:
    24:24:void <init>() -> <init>
com.google.common.base.Functions -> com.google.common.base.Functions:
    40:40:void <init>() -> <init>
    224:224:com.google.common.base.Function compose(com.google.common.base.Function,com.google.common.base.Function) -> compose
    320:320:com.google.common.base.Function constant(java.lang.Object) -> constant
    116:116:com.google.common.base.Function forMap(java.util.Map) -> forMap
    134:134:com.google.common.base.Function forMap(java.util.Map,java.lang.Object) -> forMap
    273:273:com.google.common.base.Function forPredicate(com.google.common.base.Predicate) -> forPredicate
    365:365:com.google.common.base.Function forSupplier(com.google.common.base.Supplier) -> forSupplier
    83:83:com.google.common.base.Function identity() -> identity
    60:60:com.google.common.base.Function toStringFunction() -> toStringFunction
com.google.common.base.Functions$ConstantFunction -> com.google.common.base.Functions$ConstantFunction:
    326:327:void <init>(java.lang.Object) -> <init>
    332:332:java.lang.Object apply(java.lang.Object) -> apply
    337:339:boolean equals(java.lang.Object) -> equals
    346:346:int hashCode() -> hashCode
    351:351:java.lang.String toString() -> toString
com.google.common.base.Functions$ForMapWithDefault -> com.google.common.base.Functions$ForMapWithDefault:
    177:179:void <init>(java.util.Map,java.lang.Object) -> <init>
    184:185:java.lang.Object apply(java.lang.Object) -> apply
    190:192:boolean equals(java.lang.Object) -> equals
    199:199:int hashCode() -> hashCode
    205:205:java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionComposition -> com.google.common.base.Functions$FunctionComposition:
    231:233:void <init>(com.google.common.base.Function,com.google.common.base.Function) -> <init>
    238:238:java.lang.Object apply(java.lang.Object) -> apply
    243:245:boolean equals(java.lang.Object) -> equals
    252:252:int hashCode() -> hashCode
    258:258:java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionForMapNoDefault -> com.google.common.base.Functions$FunctionForMapNoDefault:
    140:141:void <init>(java.util.Map) -> <init>
    146:147:java.lang.Object apply(java.lang.Object) -> apply
    153:155:boolean equals(java.lang.Object) -> equals
    162:162:int hashCode() -> hashCode
    167:167:java.lang.String toString() -> toString
com.google.common.base.Functions$IdentityFunction -> com.google.common.base.Functions$IdentityFunction:
    87:88:void <clinit>() -> <clinit>
    87:87:void <init>(java.lang.String,int) -> <init>
    87:87:com.google.common.base.Functions$IdentityFunction valueOf(java.lang.String) -> valueOf
    87:87:com.google.common.base.Functions$IdentityFunction[] values() -> values
com.google.common.base.Functions$PredicateFunction -> com.google.common.base.Functions$PredicateFunction:
    277:277:void <init>(com.google.common.base.Predicate,com.google.common.base.Functions$1) -> <init>
    280:281:void <init>(com.google.common.base.Predicate) -> <init>
    277:277:java.lang.Object apply(java.lang.Object) -> apply
    286:286:java.lang.Boolean apply(java.lang.Object) -> apply
    291:293:boolean equals(java.lang.Object) -> equals
    300:300:int hashCode() -> hashCode
    305:305:java.lang.String toString() -> toString
com.google.common.base.Functions$SupplierFunction -> com.google.common.base.Functions$SupplierFunction:
    369:369:void <init>(com.google.common.base.Supplier,com.google.common.base.Functions$1) -> <init>
    373:374:void <init>(com.google.common.base.Supplier) -> <init>
    379:379:java.lang.Object apply(java.lang.Object) -> apply
    384:386:boolean equals(java.lang.Object) -> equals
    393:393:int hashCode() -> hashCode
    398:398:java.lang.String toString() -> toString
com.google.common.base.Functions$ToStringFunction -> com.google.common.base.Functions$ToStringFunction:
    64:65:void <clinit>() -> <clinit>
    64:64:void <init>(java.lang.String,int) -> <init>
    64:64:java.lang.Object apply(java.lang.Object) -> apply
    69:70:java.lang.String apply(java.lang.Object) -> apply
    64:64:com.google.common.base.Functions$ToStringFunction valueOf(java.lang.String) -> valueOf
    64:64:com.google.common.base.Functions$ToStringFunction[] values() -> values
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    79:80:void <init>(java.lang.String) -> <init>
    104:109:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    139:139:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    152:154:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    188:188:java.lang.String join(java.lang.Iterable) -> join
    198:198:java.lang.String join(java.util.Iterator) -> join
    69:69:com.google.common.base.Joiner on(java.lang.String) -> on
    74:74:com.google.common.base.Joiner on(char) -> on
    456:457:java.lang.CharSequence toString(java.lang.Object) -> toString
com.google.common.base.MoreObjects -> com.google.common.base.MoreObjects:
    64:64:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
    108:108:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    122:122:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Class) -> toStringHelper
com.google.common.base.MoreObjects$ToStringHelper -> com.google.common.base.MoreObjects$ToStringHelper:
    143:143:void <init>(java.lang.String,com.google.common.base.MoreObjects$1) -> <init>
    145:151:void <init>(java.lang.String) -> <init>
    174:174:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    184:184:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,boolean) -> add
    224:224:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int) -> add
    234:234:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long) -> add
    364:365:com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder() -> addHolder
    370:371:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    376:378:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    245:245:com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object) -> addValue
    337:360:java.lang.String toString() -> toString
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder -> com.google.common.base.MoreObjects$ToStringHelper$ValueHolder:
    382:382:void <init>() -> <init>
    382:382:void <init>(com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.Objects -> com.google.common.base.Objects:
    33:33:void <init>() -> <init>
    52:52:boolean equal(java.lang.Object,java.lang.Object) -> equal
    77:77:int hashCode(java.lang.Object[]) -> hashCode
com.google.common.base.Optional -> com.google.common.base.Optional:
    119:119:void <init>() -> <init>
    93:93:com.google.common.base.Optional absent() -> absent
    116:116:com.google.common.base.Optional fromNullable(java.lang.Object) -> fromNullable
    105:105:com.google.common.base.Optional of(java.lang.Object) -> of
com.google.common.base.Platform -> com.google.common.base.Platform:
    33:34:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    66:66:java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    54:54:java.lang.String formatCompact4Digits(double) -> formatCompact4Digits
    84:84:com.google.common.base.PatternCompiler loadPatternCompiler() -> loadPatternCompiler
    58:58:boolean stringIsNullOrEmpty(java.lang.String) -> stringIsNullOrEmpty
    41:41:long systemNanoTime() -> systemNanoTime
com.google.common.base.Platform$JdkPatternCompiler -> com.google.common.base.Platform$JdkPatternCompiler:
    91:91:void <init>() -> <init>
    91:91:void <init>(com.google.common.base.Platform$1) -> <init>
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    118:118:void <init>() -> <init>
    1409:1413:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    1454:1458:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    1483:1489:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    128:128:void checkArgument(boolean) -> checkArgument
    142:142:void checkArgument(boolean,java.lang.Object) -> checkArgument
    164:164:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    177:177:void checkArgument(boolean,java.lang.String,char) -> checkArgument
    190:190:void checkArgument(boolean,java.lang.String,int) -> checkArgument
    203:203:void checkArgument(boolean,java.lang.String,long) -> checkArgument
    217:217:void checkArgument(boolean,java.lang.String,java.lang.Object) -> checkArgument
    231:231:void checkArgument(boolean,java.lang.String,char,char) -> checkArgument
    245:245:void checkArgument(boolean,java.lang.String,char,int) -> checkArgument
    259:259:void checkArgument(boolean,java.lang.String,char,long) -> checkArgument
    273:273:void checkArgument(boolean,java.lang.String,char,java.lang.Object) -> checkArgument
    287:287:void checkArgument(boolean,java.lang.String,int,char) -> checkArgument
    301:301:void checkArgument(boolean,java.lang.String,int,int) -> checkArgument
    315:315:void checkArgument(boolean,java.lang.String,int,long) -> checkArgument
    329:329:void checkArgument(boolean,java.lang.String,int,java.lang.Object) -> checkArgument
    343:343:void checkArgument(boolean,java.lang.String,long,char) -> checkArgument
    357:357:void checkArgument(boolean,java.lang.String,long,int) -> checkArgument
    371:371:void checkArgument(boolean,java.lang.String,long,long) -> checkArgument
    385:385:void checkArgument(boolean,java.lang.String,long,java.lang.Object) -> checkArgument
    399:399:void checkArgument(boolean,java.lang.String,java.lang.Object,char) -> checkArgument
    413:413:void checkArgument(boolean,java.lang.String,java.lang.Object,int) -> checkArgument
    427:427:void checkArgument(boolean,java.lang.String,java.lang.Object,long) -> checkArgument
    444:444:void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object) -> checkArgument
    462:462:void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> checkArgument
    481:481:void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> checkArgument
    1384:1384:int checkElementIndex(int,int) -> checkElementIndex
    1402:1402:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    890:890:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    910:910:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    937:937:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    954:954:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,char) -> checkNotNull
    971:971:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,int) -> checkNotNull
    988:988:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,long) -> checkNotNull
    1005:1005:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object) -> checkNotNull
    1022:1022:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,char,char) -> checkNotNull
    1039:1039:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,char,int) -> checkNotNull
    1056:1056:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,char,long) -> checkNotNull
    1076:1076:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,char,java.lang.Object) -> checkNotNull
    1093:1093:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,int,char) -> checkNotNull
    1110:1110:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,int,int) -> checkNotNull
    1127:1127:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,int,long) -> checkNotNull
    1147:1147:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,int,java.lang.Object) -> checkNotNull
    1164:1164:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,long,char) -> checkNotNull
    1181:1181:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,long,int) -> checkNotNull
    1198:1198:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,long,long) -> checkNotNull
    1218:1218:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,long,java.lang.Object) -> checkNotNull
    1238:1238:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,char) -> checkNotNull
    1258:1258:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,int) -> checkNotNull
    1278:1278:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,long) -> checkNotNull
    1298:1298:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object) -> checkNotNull
    1319:1319:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> checkNotNull
    1341:1341:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> checkNotNull
    1429:1429:int checkPositionIndex(int,int) -> checkPositionIndex
    1447:1447:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    1477:1477:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    495:495:void checkState(boolean) -> checkState
    511:511:void checkState(boolean,java.lang.Object) -> checkState
    535:535:void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    549:549:void checkState(boolean,java.lang.String,char) -> checkState
    563:563:void checkState(boolean,java.lang.String,int) -> checkState
    577:577:void checkState(boolean,java.lang.String,long) -> checkState
    592:592:void checkState(boolean,java.lang.String,java.lang.Object) -> checkState
    607:607:void checkState(boolean,java.lang.String,char,char) -> checkState
    622:622:void checkState(boolean,java.lang.String,char,int) -> checkState
    637:637:void checkState(boolean,java.lang.String,char,long) -> checkState
    652:652:void checkState(boolean,java.lang.String,char,java.lang.Object) -> checkState
    667:667:void checkState(boolean,java.lang.String,int,char) -> checkState
    682:682:void checkState(boolean,java.lang.String,int,int) -> checkState
    697:697:void checkState(boolean,java.lang.String,int,long) -> checkState
    712:712:void checkState(boolean,java.lang.String,int,java.lang.Object) -> checkState
    727:727:void checkState(boolean,java.lang.String,long,char) -> checkState
    742:742:void checkState(boolean,java.lang.String,long,int) -> checkState
    757:757:void checkState(boolean,java.lang.String,long,long) -> checkState
    772:772:void checkState(boolean,java.lang.String,long,java.lang.Object) -> checkState
    787:787:void checkState(boolean,java.lang.String,java.lang.Object,char) -> checkState
    802:802:void checkState(boolean,java.lang.String,java.lang.Object,int) -> checkState
    817:817:void checkState(boolean,java.lang.String,java.lang.Object,long) -> checkState
    835:835:void checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object) -> checkState
    854:854:void checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> checkState
    874:874:void checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> checkState
com.google.common.base.Predicates -> com.google.common.base.Predicates:
    42:42:java.lang.String access$800(java.lang.String,java.lang.Iterable) -> access$800
    51:51:com.google.common.base.Predicate alwaysTrue() -> alwaysTrue
    115:115:com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate) -> and
    689:689:java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate) -> asList
    219:219:com.google.common.base.Predicate compose(com.google.common.base.Predicate,com.google.common.base.Function) -> compose
    155:155:com.google.common.base.Predicate equalTo(java.lang.Object) -> equalTo
    208:208:com.google.common.base.Predicate in(java.util.Collection) -> in
    173:173:com.google.common.base.Predicate instanceOf(java.lang.Class) -> instanceOf
    66:66:com.google.common.base.Predicate isNull() -> isNull
    83:83:com.google.common.base.Predicate not(com.google.common.base.Predicate) -> not
    426:435:java.lang.String toStringHelper(java.lang.String,java.lang.Iterable) -> toStringHelper
com.google.common.base.Predicates$AndPredicate -> com.google.common.base.Predicates$AndPredicate:
    342:342:void <init>(java.util.List,com.google.common.base.Predicates$1) -> <init>
    345:346:void <init>(java.util.List) -> <init>
    352:353:boolean apply(java.lang.Object) -> apply
    368:370:boolean equals(java.lang.Object) -> equals
    363:363:int hashCode() -> hashCode
    377:377:java.lang.String toString() -> toString
com.google.common.base.Predicates$CompositionPredicate -> com.google.common.base.Predicates$CompositionPredicate:
    585:585:void <init>(com.google.common.base.Predicate,com.google.common.base.Function,com.google.common.base.Predicates$1) -> <init>
    589:591:void <init>(com.google.common.base.Predicate,com.google.common.base.Function) -> <init>
    596:596:boolean apply(java.lang.Object) -> apply
    601:603:boolean equals(java.lang.Object) -> equals
    610:610:int hashCode() -> hashCode
    616:616:java.lang.String toString() -> toString
com.google.common.base.Predicates$InPredicate -> com.google.common.base.Predicates$InPredicate:
    546:546:void <init>(java.util.Collection,com.google.common.base.Predicates$1) -> <init>
    549:550:void <init>(java.util.Collection) -> <init>
    556:556:boolean apply(java.lang.Object) -> apply
    564:566:boolean equals(java.lang.Object) -> equals
    573:573:int hashCode() -> hashCode
    578:578:java.lang.String toString() -> toString
com.google.common.base.Predicates$InstanceOfPredicate -> com.google.common.base.Predicates$InstanceOfPredicate:
    475:475:void <init>(java.lang.Class,com.google.common.base.Predicates$1) -> <init>
    478:479:void <init>(java.lang.Class) -> <init>
    484:484:boolean apply(java.lang.Object) -> apply
    494:496:boolean equals(java.lang.Object) -> equals
    489:489:int hashCode() -> hashCode
    503:503:java.lang.String toString() -> toString
com.google.common.base.Predicates$IsEqualToPredicate -> com.google.common.base.Predicates$IsEqualToPredicate:
    439:439:void <init>(java.lang.Object,com.google.common.base.Predicates$1) -> <init>
    442:443:void <init>(java.lang.Object) -> <init>
    448:448:boolean apply(java.lang.Object) -> apply
    458:460:boolean equals(java.lang.Object) -> equals
    453:453:int hashCode() -> hashCode
    467:467:java.lang.String toString() -> toString
com.google.common.base.Predicates$NotPredicate -> com.google.common.base.Predicates$NotPredicate:
    310:311:void <init>(com.google.common.base.Predicate) -> <init>
    316:316:boolean apply(java.lang.Object) -> apply
    326:328:boolean equals(java.lang.Object) -> equals
    321:321:int hashCode() -> hashCode
    335:335:java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate -> com.google.common.base.Predicates$ObjectPredicate:
    250:288:void <clinit>() -> <clinit>
    250:250:void <init>(java.lang.String,int) -> <init>
    250:250:void <init>(java.lang.String,int,com.google.common.base.Predicates$1) -> <init>
    250:250:com.google.common.base.Predicates$ObjectPredicate valueOf(java.lang.String) -> valueOf
    250:250:com.google.common.base.Predicates$ObjectPredicate[] values() -> values
com.google.common.base.Predicates$ObjectPredicate$1 -> com.google.common.base.Predicates$ObjectPredicate$1:
    252:252:void <init>(java.lang.String,int) -> <init>
com.google.common.base.Predicates$ObjectPredicate$2 -> com.google.common.base.Predicates$ObjectPredicate$2:
    264:264:void <init>(java.lang.String,int) -> <init>
com.google.common.base.Predicates$ObjectPredicate$3 -> com.google.common.base.Predicates$ObjectPredicate$3:
    276:276:void <init>(java.lang.String,int) -> <init>
com.google.common.base.Predicates$ObjectPredicate$4 -> com.google.common.base.Predicates$ObjectPredicate$4:
    288:288:void <init>(java.lang.String,int) -> <init>
com.google.common.base.Present -> com.google.common.base.Present:
    29:30:void <init>(java.lang.Object) -> <init>
    81:83:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    45:46:java.lang.Object or(java.lang.Object) -> or
    95:95:java.lang.String toString() -> toString
com.google.common.base.Splitter -> com.google.common.base.Splitter:
    107:107:void <init>(com.google.common.base.Splitter$Strategy) -> <init>
    110:114:void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int) -> <init>
    100:100:java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence) -> access$000
    100:100:com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter) -> access$200
    100:100:boolean access$300(com.google.common.base.Splitter) -> access$300
    100:100:int access$400(com.google.common.base.Splitter) -> access$400
    319:319:com.google.common.base.Splitter omitEmptyStrings() -> omitEmptyStrings
    125:125:com.google.common.base.Splitter on(char) -> on
    139:141:com.google.common.base.Splitter on(com.google.common.base.CharMatcher) -> on
    169:173:com.google.common.base.Splitter on(java.lang.String) -> on
    381:383:java.lang.Iterable split(java.lang.CharSequence) -> split
    400:400:java.util.Iterator splittingIterator(java.lang.CharSequence) -> splittingIterator
com.google.common.base.Splitter$1 -> com.google.common.base.Splitter$1:
    142:142:void <init>(com.google.common.base.CharMatcher) -> <init>
    142:142:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    145:145:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$1$1 -> com.google.common.base.Splitter$1$1:
    145:145:void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    148:148:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$2 -> com.google.common.base.Splitter$2:
    174:174:void <init>(java.lang.String) -> <init>
    174:174:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    177:177:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$2$1 -> com.google.common.base.Splitter$2$1:
    177:177:void <init>(com.google.common.base.Splitter$2,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    196:196:int separatorEnd(int) -> separatorEnd
    180:185:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$5 -> com.google.common.base.Splitter$5:
    383:383:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    386:386:java.util.Iterator iterator() -> iterator
    391:394:java.lang.String toString() -> toString
com.google.common.base.Splitter$SplittingIterator -> com.google.common.base.Splitter$SplittingIterator:
    540:547:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    523:523:java.lang.Object computeNext() -> computeNext
    557:613:java.lang.String computeNext() -> computeNext
com.google.common.base.StandardSystemProperty -> com.google.common.base.StandardSystemProperty:
    26:111:void <clinit>() -> <clinit>
    115:116:void <init>(java.lang.String,int,java.lang.String) -> <init>
    121:121:java.lang.String key() -> key
    136:136:java.lang.String toString() -> toString
    130:130:java.lang.String value() -> value
    26:26:com.google.common.base.StandardSystemProperty valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.base.StandardSystemProperty[] values() -> values
com.google.common.base.Stopwatch -> com.google.common.base.Stopwatch:
    132:133:void <init>() -> <init>
    242:258:java.lang.String abbreviate(java.util.concurrent.TimeUnit) -> abbreviate
    220:235:java.util.concurrent.TimeUnit chooseUnit(long) -> chooseUnit
    120:120:com.google.common.base.Stopwatch createStarted() -> createStarted
    204:204:long elapsed(java.util.concurrent.TimeUnit) -> elapsed
    191:191:long elapsedNanos() -> elapsedNanos
    145:145:boolean isRunning() -> isRunning
    156:158:com.google.common.base.Stopwatch start() -> start
    171:174:com.google.common.base.Stopwatch stop() -> stop
    210:216:java.lang.String toString() -> toString
com.google.common.base.Stopwatch$1 -> com.google.common.base.Stopwatch$1:
    242:242:void <clinit>() -> <clinit>
com.google.common.base.Strings -> com.google.common.base.Strings:
    54:54:java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    261:297:java.lang.String lenientFormat(java.lang.String,java.lang.Object[]) -> lenientFormat
    305:313:java.lang.String lenientToString(java.lang.Object) -> lenientToString
    43:43:java.lang.String nullToEmpty(java.lang.String) -> nullToEmpty
    222:224:boolean validSurrogatePairAt(java.lang.CharSequence,int) -> validSurrogatePairAt
com.google.common.base.Suppliers$ExpiringMemoizingSupplier -> com.google.common.base.Suppliers$ExpiringMemoizingSupplier:
    238:253:java.lang.Object get() -> get
    260:260:java.lang.String toString() -> toString
com.google.common.base.Suppliers$MemoizingSupplier -> com.google.common.base.Suppliers$MemoizingSupplier:
    126:136:java.lang.Object get() -> get
    141:142:java.lang.String toString() -> toString
com.google.common.base.Suppliers$NonSerializableMemoizingSupplier -> com.google.common.base.Suppliers$NonSerializableMemoizingSupplier:
    164:176:java.lang.Object get() -> get
    181:183:java.lang.String toString() -> toString
com.google.common.base.Throwables -> com.google.common.base.Throwables:
    452:468:void <clinit>() -> <clinit>
    503:503:java.lang.reflect.Method getGetMethod() -> getGetMethod
    482:486:java.lang.Object getJLA() -> getJLA
    534:536:java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[]) -> getJlaMethod
    519:523:java.lang.reflect.Method getSizeMethod() -> getSizeMethod
    240:241:java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    128:133:void throwIfUnchecked(java.lang.Throwable) -> throwIfUnchecked
com.google.common.base.Ticker -> com.google.common.base.Ticker:
    47:47:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    44:44:com.google.common.base.Ticker systemTicker() -> systemTicker
com.google.common.base.Ticker$1 -> com.google.common.base.Ticker$1:
    48:48:void <init>() -> <init>
    51:51:long read() -> read
com.google.common.base.Verify -> com.google.common.base.Verify:
    100:100:void verify(boolean) -> verify
com.google.common.base.VerifyException -> com.google.common.base.VerifyException:
    30:30:void <init>() -> <init>
    34:34:void <init>(java.lang.String) -> <init>
com.google.common.collect.AbstractBiMap -> com.google.common.collect.AbstractBiMap:
    49:49:void <init>(java.util.Map,com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1) -> <init>
    56:57:void <init>(java.util.Map,java.util.Map) -> <init>
    61:63:void <init>(java.util.Map,com.google.common.collect.AbstractBiMap) -> <init>
    49:49:java.util.Map access$100(com.google.common.collect.AbstractBiMap) -> access$100
    49:49:java.lang.Object access$200(com.google.common.collect.AbstractBiMap,java.lang.Object) -> access$200
    49:49:void access$500(com.google.common.collect.AbstractBiMap,java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> access$500
    49:49:void access$600(com.google.common.collect.AbstractBiMap,java.lang.Object) -> access$600
    178:179:void clear() -> clear
    109:109:boolean containsValue(java.lang.Object) -> containsValue
    48:48:java.lang.Object delegate() -> delegate
    68:68:java.util.Map delegate() -> delegate
    280:281:java.util.Set entrySet() -> entrySet
    314:315:java.util.Iterator entrySetIterator() -> entrySetIterator
    123:123:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    186:186:com.google.common.collect.BiMap inverse() -> inverse
    193:194:java.util.Set keySet() -> keySet
    98:98:com.google.common.collect.AbstractBiMap makeInverse(java.util.Map) -> makeInverse
    117:117:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    171:172:void putAll(java.util.Map) -> putAll
    127:139:java.lang.Object putInBothMaps(java.lang.Object,java.lang.Object,boolean) -> putInBothMaps
    153:153:java.lang.Object remove(java.lang.Object) -> remove
    158:159:java.lang.Object removeFromBothMaps(java.lang.Object) -> removeFromBothMaps
    164:164:void removeFromInverseMap(java.lang.Object) -> removeFromInverseMap
    88:94:void setDelegates(java.util.Map,java.util.Map) -> setDelegates
    102:102:void setInverse(com.google.common.collect.AbstractBiMap) -> setInverse
    145:147:void updateInverseMap(java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> updateInverseMap
    48:48:java.util.Collection values() -> values
    242:243:java.util.Set values() -> values
com.google.common.collect.AbstractBiMap$1 -> com.google.common.collect.AbstractBiMap$1:
    315:315:void <init>(com.google.common.collect.AbstractBiMap,java.util.Iterator) -> <init>
    320:320:boolean hasNext() -> hasNext
    315:315:java.lang.Object next() -> next
    325:326:java.util.Map$Entry next() -> next
    331:335:void remove() -> remove
com.google.common.collect.AbstractBiMap$BiMapEntry -> com.google.common.collect.AbstractBiMap$BiMapEntry:
    287:288:void <init>(com.google.common.collect.AbstractBiMap,java.util.Map$Entry) -> <init>
    284:284:java.lang.Object delegate() -> delegate
    293:293:java.util.Map$Entry delegate() -> delegate
    298:308:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.AbstractBiMap$EntrySet -> com.google.common.collect.AbstractBiMap$EntrySet:
    341:342:void <init>(com.google.common.collect.AbstractBiMap) -> <init>
    341:341:void <init>(com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1) -> <init>
    351:351:void clear() -> clear
    391:391:boolean contains(java.lang.Object) -> contains
    396:396:boolean containsAll(java.util.Collection) -> containsAll
    340:340:java.lang.Object delegate() -> delegate
    340:340:java.util.Collection delegate() -> delegate
    346:346:java.util.Set delegate() -> delegate
    374:374:java.util.Iterator iterator() -> iterator
    356:368:boolean remove(java.lang.Object) -> remove
    401:401:boolean removeAll(java.util.Collection) -> removeAll
    406:406:boolean retainAll(java.util.Collection) -> retainAll
    381:381:java.lang.Object[] toArray() -> toArray
    386:386:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.AbstractBiMap$Inverse -> com.google.common.collect.AbstractBiMap$Inverse:
    413:413:void <init>(java.util.Map,com.google.common.collect.AbstractBiMap) -> <init>
    427:427:java.lang.Object checkKey(java.lang.Object) -> checkKey
    432:432:java.lang.Object checkValue(java.lang.Object) -> checkValue
    445:446:void readObject(java.io.ObjectInputStream) -> readObject
    451:451:java.lang.Object readResolve() -> readResolve
    438:439:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.AbstractBiMap$KeySet -> com.google.common.collect.AbstractBiMap$KeySet:
    198:198:void <init>(com.google.common.collect.AbstractBiMap) -> <init>
    198:198:void <init>(com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1) -> <init>
    206:206:void clear() -> clear
    197:197:java.lang.Object delegate() -> delegate
    197:197:java.util.Collection delegate() -> delegate
    201:201:java.util.Set delegate() -> delegate
    230:230:java.util.Iterator iterator() -> iterator
    211:214:boolean remove(java.lang.Object) -> remove
    220:220:boolean removeAll(java.util.Collection) -> removeAll
    225:225:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.AbstractBiMap$ValueSet -> com.google.common.collect.AbstractBiMap$ValueSet:
    247:248:void <init>(com.google.common.collect.AbstractBiMap) -> <init>
    247:247:void <init>(com.google.common.collect.AbstractBiMap,com.google.common.collect.AbstractBiMap$1) -> <init>
    246:246:java.lang.Object delegate() -> delegate
    246:246:java.util.Collection delegate() -> delegate
    252:252:java.util.Set delegate() -> delegate
    257:257:java.util.Iterator iterator() -> iterator
    262:262:java.lang.Object[] toArray() -> toArray
    267:267:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    272:272:java.lang.String toString() -> toString
com.google.common.collect.AbstractIndexedListIterator -> com.google.common.collect.AbstractIndexedListIterator:
    48:48:void <init>(int) -> <init>
    61:64:void <init>(int,int) -> <init>
    69:69:boolean hasNext() -> hasNext
    87:87:boolean hasPrevious() -> hasPrevious
    74:77:java.lang.Object next() -> next
    82:82:int nextIndex() -> nextIndex
    92:95:java.lang.Object previous() -> previous
    100:100:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    65:68:void <init>() -> <init>
    121:121:java.lang.Object endOfData() -> endOfData
    128:136:boolean hasNext() -> hasNext
    152:157:java.lang.Object next() -> next
    169:172:java.lang.Object peek() -> peek
    140:143:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.collect.AbstractIterator$1 -> com.google.common.collect.AbstractIterator$1:
    129:129:void <clinit>() -> <clinit>
com.google.common.collect.AbstractIterator$State -> com.google.common.collect.AbstractIterator$State:
    70:81:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    70:70:com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    70:70:com.google.common.collect.AbstractIterator$State[] values() -> values
com.google.common.collect.AbstractListMultimap -> com.google.common.collect.AbstractListMultimap:
    44:44:void <init>(java.util.Map) -> <init>
    126:126:java.util.Map asMap() -> asMap
    35:35:java.util.Collection createCollection() -> createCollection
    35:35:java.util.Collection createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    52:52:java.util.List createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    137:137:boolean equals(java.lang.Object) -> equals
    35:35:java.util.Collection get(java.lang.Object) -> get
    76:76:java.util.List get(java.lang.Object) -> get
    115:115:boolean put(java.lang.Object,java.lang.Object) -> put
    35:35:java.util.Collection removeAll(java.lang.Object) -> removeAll
    89:89:java.util.List removeAll(java.lang.Object) -> removeAll
    35:35:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    102:102:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    57:57:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    62:62:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
com.google.common.collect.AbstractMapBasedMultimap -> com.google.common.collect.AbstractMapBasedMultimap:
    114:116:void <init>(java.util.Map) -> <init>
    84:84:java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap) -> access$000
    84:84:java.util.Iterator access$100(java.util.Collection) -> access$100
    84:84:int access$208(com.google.common.collect.AbstractMapBasedMultimap) -> access$208
    84:84:int access$210(com.google.common.collect.AbstractMapBasedMultimap) -> access$210
    84:84:int access$212(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$212
    84:84:int access$220(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$220
    84:84:void access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object) -> access$300
    163:163:java.util.Map backingMap() -> backingMap
    268:272:void clear() -> clear
    175:175:boolean containsKey(java.lang.Object) -> containsKey
    1232:1232:java.util.Map createAsMap() -> createAsMap
    159:159:java.util.Collection createCollection(java.lang.Object) -> createCollection
    1205:1208:java.util.Collection createEntries() -> createEntries
    891:891:java.util.Set createKeySet() -> createKeySet
    1186:1186:com.google.common.collect.Multiset createKeys() -> createKeys
    1236:1241:java.util.Map createMaybeNavigableAsMap() -> createMaybeNavigableAsMap
    895:900:java.util.Set createMaybeNavigableKeySet() -> createMaybeNavigableKeySet
    135:135:java.util.Collection createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    1165:1165:java.util.Collection createValues() -> createValues
    1200:1200:java.util.Collection entries() -> entries
    1222:1222:java.util.Iterator entryIterator() -> entryIterator
    284:288:java.util.Collection get(java.lang.Object) -> get
    201:204:java.util.Collection getOrCreateCollection(java.lang.Object) -> getOrCreateCollection
    573:575:java.util.Iterator iteratorOrListIterator(java.util.Collection) -> iteratorOrListIterator
    182:193:boolean put(java.lang.Object,java.lang.Object) -> put
    247:258:java.util.Collection removeAll(java.lang.Object) -> removeAll
    1102:1107:void removeValuesForKey(java.lang.Object) -> removeValuesForKey
    218:237:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    121:125:void setMap(java.util.Map) -> setMap
    170:170:int size() -> size
    262:262:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    1170:1170:java.util.Iterator valueIterator() -> valueIterator
    1160:1160:java.util.Collection values() -> values
    296:296:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    301:303:java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> wrapList
com.google.common.collect.AbstractMapBasedMultimap$1 -> com.google.common.collect.AbstractMapBasedMultimap$1:
    1170:1170:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
com.google.common.collect.AbstractMapBasedMultimap$2 -> com.google.common.collect.AbstractMapBasedMultimap$2:
    1222:1222:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1222:1222:java.lang.Object output(java.lang.Object,java.lang.Object) -> output
    1225:1225:java.util.Map$Entry output(java.lang.Object,java.lang.Object) -> output
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> com.google.common.collect.AbstractMapBasedMultimap$AsMap:
    1253:1254:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    1321:1324:void clear() -> clear
    1266:1266:boolean containsKey(java.lang.Object) -> containsKey
    1259:1259:java.util.Set createEntrySet() -> createEntrySet
    1306:1306:boolean equals(java.lang.Object) -> equals
    1245:1245:java.lang.Object get(java.lang.Object) -> get
    1271:1277:java.util.Collection get(java.lang.Object) -> get
    1311:1311:int hashCode() -> hashCode
    1282:1282:java.util.Set keySet() -> keySet
    1245:1245:java.lang.Object remove(java.lang.Object) -> remove
    1292:1300:java.util.Collection remove(java.lang.Object) -> remove
    1287:1287:int size() -> size
    1316:1316:java.lang.String toString() -> toString
    1329:1330:java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> wrapEntry
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:
    1334:1334:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1349:1349:boolean contains(java.lang.Object) -> contains
    1342:1342:java.util.Iterator iterator() -> iterator
    1337:1337:java.util.Map map() -> map
    1354:1358:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:
    1364:1365:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1370:1370:boolean hasNext() -> hasNext
    1364:1364:java.lang.Object next() -> next
    1375:1377:java.util.Map$Entry next() -> next
    1382:1386:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$Itr -> com.google.common.collect.AbstractMapBasedMultimap$Itr:
    1117:1121:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1128:1128:boolean hasNext() -> hasNext
    1133:1139:java.lang.Object next() -> next
    1144:1148:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> com.google.common.collect.AbstractMapBasedMultimap$KeySet:
    906:907:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    955:955:void clear() -> clear
    960:960:boolean containsAll(java.util.Collection) -> containsAll
    965:965:boolean equals(java.lang.Object) -> equals
    970:970:int hashCode() -> hashCode
    912:913:java.util.Iterator iterator() -> iterator
    944:948:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> com.google.common.collect.AbstractMapBasedMultimap$KeySet$1:
    913:913:void <init>(com.google.common.collect.AbstractMapBasedMultimap$KeySet,java.util.Iterator) -> <init>
    918:918:boolean hasNext() -> hasNext
    923:924:java.lang.Object next() -> next
    929:934:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap -> com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:
    1449:1450:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1482:1483:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1488:1488:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1447:1447:java.util.Set createKeySet() -> createKeySet
    1447:1447:java.util.SortedSet createKeySet() -> createKeySet
    1547:1547:java.util.NavigableSet createKeySet() -> createKeySet
    1557:1557:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1537:1537:java.util.NavigableMap descendingMap() -> descendingMap
    1504:1505:java.util.Map$Entry firstEntry() -> firstEntry
    1471:1472:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1477:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1447:1447:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1573:1573:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    1578:1578:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1493:1494:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1499:1499:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1447:1447:java.util.Set keySet() -> keySet
    1447:1447:java.util.SortedSet keySet() -> keySet
    1542:1542:java.util.NavigableSet keySet() -> keySet
    1510:1511:java.util.Map$Entry lastEntry() -> lastEntry
    1460:1461:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1466:1466:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1552:1552:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1525:1532:java.util.Map$Entry pollAsMapEntry(java.util.Iterator) -> pollAsMapEntry
    1516:1516:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1521:1521:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1447:1447:java.util.SortedMap sortedMap() -> sortedMap
    1455:1455:java.util.NavigableMap sortedMap() -> sortedMap
    1447:1447:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1562:1562:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1568:1568:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1447:1447:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1583:1583:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    1588:1588:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet -> com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:
    1018:1019:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1039:1039:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1064:1064:java.util.Iterator descendingIterator() -> descendingIterator
    1059:1059:java.util.NavigableSet descendingSet() -> descendingSet
    1034:1034:java.lang.Object floor(java.lang.Object) -> floor
    1016:1016:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1069:1069:java.util.NavigableSet headSet(java.lang.Object) -> headSet
    1074:1074:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1044:1044:java.lang.Object higher(java.lang.Object) -> higher
    1029:1029:java.lang.Object lower(java.lang.Object) -> lower
    1049:1049:java.lang.Object pollFirst() -> pollFirst
    1054:1054:java.lang.Object pollLast() -> pollLast
    1016:1016:java.util.SortedMap sortedMap() -> sortedMap
    1024:1024:java.util.NavigableMap sortedMap() -> sortedMap
    1016:1016:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1079:1079:java.util.NavigableSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1085:1086:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1016:1016:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1091:1091:java.util.NavigableSet tailSet(java.lang.Object) -> tailSet
    1096:1096:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList -> com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList:
    884:885:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:
    1393:1394:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    1403:1403:java.util.Comparator comparator() -> comparator
    1391:1391:java.util.Set createKeySet() -> createKeySet
    1443:1443:java.util.SortedSet createKeySet() -> createKeySet
    1408:1408:java.lang.Object firstKey() -> firstKey
    1418:1418:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1391:1391:java.util.Set keySet() -> keySet
    1437:1438:java.util.SortedSet keySet() -> keySet
    1413:1413:java.lang.Object lastKey() -> lastKey
    1398:1398:java.util.SortedMap sortedMap() -> sortedMap
    1423:1423:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1428:1428:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:
    977:978:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    987:987:java.util.Comparator comparator() -> comparator
    992:992:java.lang.Object first() -> first
    997:997:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1002:1002:java.lang.Object last() -> last
    982:982:java.util.SortedMap sortedMap() -> sortedMap
    1007:1007:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1012:1012:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:
    329:333:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    474:480:boolean add(java.lang.Object) -> add
    494:503:boolean addAll(java.util.Collection) -> addAll
    380:383:void addToMap() -> addToMap
    523:529:void clear() -> clear
    511:512:boolean contains(java.lang.Object) -> contains
    517:518:boolean containsAll(java.util.Collection) -> containsAll
    398:399:boolean equals(java.lang.Object) -> equals
    487:487:com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor() -> getAncestor
    415:415:java.util.Collection getDelegate() -> getDelegate
    370:370:java.lang.Object getKey() -> getKey
    404:405:int hashCode() -> hashCode
    420:421:java.util.Iterator iterator() -> iterator
    344:352:void refreshIfEmpty() -> refreshIfEmpty
    534:538:boolean remove(java.lang.Object) -> remove
    545:553:boolean removeAll(java.util.Collection) -> removeAll
    362:365:void removeIfEmpty() -> removeIfEmpty
    560:566:boolean retainAll(java.util.Collection) -> retainAll
    389:390:int size() -> size
    410:411:java.lang.String toString() -> toString
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:
    427:430:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    427:434:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection,java.util.Iterator) -> <init>
    467:468:java.util.Iterator getDelegateIterator() -> getDelegateIterator
    449:450:boolean hasNext() -> hasNext
    455:456:java.lang.Object next() -> next
    461:463:void remove() -> remove
    441:443:void validateIterator() -> validateIterator
com.google.common.collect.AbstractMapBasedMultimap$WrappedList -> com.google.common.collect.AbstractMapBasedMultimap$WrappedList:
    739:740:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    778:783:void add(int,java.lang.Object) -> add
    749:758:boolean addAll(int,java.util.Collection) -> addAll
    766:767:java.lang.Object get(int) -> get
    744:744:java.util.List getListDelegate() -> getListDelegate
    798:799:int indexOf(java.lang.Object) -> indexOf
    804:805:int lastIndexOf(java.lang.Object) -> lastIndexOf
    810:811:java.util.ListIterator listIterator() -> listIterator
    816:817:java.util.ListIterator listIterator(int) -> listIterator
    789:792:java.lang.Object remove(int) -> remove
    772:773:java.lang.Object set(int,java.lang.Object) -> set
    822:826:java.util.List subList(int,int) -> subList
com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator -> com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator:
    831:831:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList) -> <init>
    833:834:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList,int) -> <init>
    868:872:void add(java.lang.Object) -> add
    838:838:java.util.ListIterator getDelegateListIterator() -> getDelegateListIterator
    843:843:boolean hasPrevious() -> hasPrevious
    853:853:int nextIndex() -> nextIndex
    848:848:java.lang.Object previous() -> previous
    858:858:int previousIndex() -> previousIndex
    863:863:void set(java.lang.Object) -> set
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:
    665:666:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.NavigableSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    686:686:java.lang.Object ceiling(java.lang.Object) -> ceiling
    715:715:java.util.Iterator descendingIterator() -> descendingIterator
    710:710:java.util.NavigableSet descendingSet() -> descendingSet
    681:681:java.lang.Object floor(java.lang.Object) -> floor
    662:662:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    671:671:java.util.NavigableSet getSortedSetDelegate() -> getSortedSetDelegate
    727:727:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    691:691:java.lang.Object higher(java.lang.Object) -> higher
    676:676:java.lang.Object lower(java.lang.Object) -> lower
    696:696:java.lang.Object pollFirst() -> pollFirst
    701:701:java.lang.Object pollLast() -> pollLast
    721:722:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    732:732:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    705:705:java.util.NavigableSet wrap(java.util.NavigableSet) -> wrap
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSet:
    581:582:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Set) -> <init>
    587:599:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:
    609:610:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    619:619:java.util.Comparator comparator() -> comparator
    624:625:java.lang.Object first() -> first
    614:614:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    636:640:java.util.SortedSet headSet(java.lang.Object) -> headSet
    630:631:java.lang.Object last() -> last
    645:649:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    654:658:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultiset -> com.google.common.collect.AbstractMapBasedMultiset:
    51:52:void <init>(int) -> <init>
    74:87:int add(java.lang.Object,int) -> add
    226:228:void addTo(com.google.common.collect.Multiset) -> addTo
    155:156:void clear() -> clear
    59:59:int count(java.lang.Object) -> count
    234:234:int distinctElements() -> distinctElements
    206:206:java.util.Iterator elementIterator() -> elementIterator
    216:216:java.util.Iterator entryIterator() -> entryIterator
    239:239:java.util.Iterator iterator() -> iterator
    259:262:void readObject(java.io.ObjectInputStream) -> readObject
    95:111:int remove(java.lang.Object,int) -> remove
    118:120:int setCount(java.lang.Object,int) -> setCount
    126:148:boolean setCount(java.lang.Object,int,int) -> setCount
    244:244:int size() -> size
    253:254:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.AbstractMapBasedMultiset$1 -> com.google.common.collect.AbstractMapBasedMultiset$1:
    206:206:void <init>(com.google.common.collect.AbstractMapBasedMultiset) -> <init>
    209:209:java.lang.Object result(int) -> result
com.google.common.collect.AbstractMapBasedMultiset$2 -> com.google.common.collect.AbstractMapBasedMultiset$2:
    216:216:void <init>(com.google.common.collect.AbstractMapBasedMultiset) -> <init>
    216:216:java.lang.Object result(int) -> result
    219:219:com.google.common.collect.Multiset$Entry result(int) -> result
com.google.common.collect.AbstractMapBasedMultiset$Itr -> com.google.common.collect.AbstractMapBasedMultiset$Itr:
    163:166:void <init>(com.google.common.collect.AbstractMapBasedMultiset) -> <init>
    171:172:void checkForConcurrentModification() -> checkForConcurrentModification
    178:179:boolean hasNext() -> hasNext
    184:189:java.lang.Object next() -> next
    195:200:void remove() -> remove
com.google.common.collect.AbstractMapEntry -> com.google.common.collect.AbstractMapEntry:
    31:31:void <init>() -> <init>
    46:49:boolean equals(java.lang.Object) -> equals
    56:58:int hashCode() -> hashCode
    41:41:java.lang.Object setValue(java.lang.Object) -> setValue
    64:64:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> com.google.common.collect.AbstractMultimap:
    38:38:void <init>() -> <init>
    207:208:java.util.Map asMap() -> asMap
    57:58:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    46:47:boolean containsValue(java.lang.Object) -> containsValue
    112:113:java.util.Collection entries() -> entries
    217:217:boolean equals(java.lang.Object) -> equals
    230:230:int hashCode() -> hashCode
    41:41:boolean isEmpty() -> isEmpty
    150:151:java.util.Set keySet() -> keySet
    160:161:com.google.common.collect.Multiset keys() -> keys
    71:71:boolean put(java.lang.Object,java.lang.Object) -> put
    77:85:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    93:94:boolean putAll(com.google.common.collect.Multimap) -> putAll
    64:65:boolean remove(java.lang.Object,java.lang.Object) -> remove
    102:104:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    241:241:java.lang.String toString() -> toString
    200:200:java.util.Iterator valueIterator() -> valueIterator
    170:171:java.util.Collection values() -> values
com.google.common.collect.AbstractMultimap$Entries -> com.google.common.collect.AbstractMultimap$Entries:
    119:119:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    127:127:java.util.Iterator iterator() -> iterator
    122:122:com.google.common.collect.Multimap multimap() -> multimap
com.google.common.collect.AbstractMultimap$EntrySet -> com.google.common.collect.AbstractMultimap$EntrySet:
    132:132:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    140:140:boolean equals(java.lang.Object) -> equals
    135:135:int hashCode() -> hashCode
com.google.common.collect.AbstractMultimap$Values -> com.google.common.collect.AbstractMultimap$Values:
    177:177:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    195:195:void clear() -> clear
    190:190:boolean contains(java.lang.Object) -> contains
    180:180:java.util.Iterator iterator() -> iterator
    185:185:int size() -> size
com.google.common.collect.AbstractMultiset -> com.google.common.collect.AbstractMultiset:
    45:45:void <init>() -> <init>
    62:62:boolean add(java.lang.Object) -> add
    69:69:int add(java.lang.Object,int) -> add
    107:107:boolean addAll(java.util.Collection) -> addAll
    55:55:boolean contains(java.lang.Object) -> contains
    143:143:java.util.Set createElementSet() -> createElementSet
    191:191:java.util.Set createEntrySet() -> createEntrySet
    131:133:java.util.Set elementSet() -> elementSet
    165:167:java.util.Set entrySet() -> entrySet
    208:208:boolean equals(java.lang.Object) -> equals
    218:218:int hashCode() -> hashCode
    50:50:boolean isEmpty() -> isEmpty
    75:75:boolean remove(java.lang.Object) -> remove
    81:81:int remove(java.lang.Object,int) -> remove
    113:113:boolean removeAll(java.util.Collection) -> removeAll
    119:119:boolean retainAll(java.util.Collection) -> retainAll
    87:87:int setCount(java.lang.Object,int) -> setCount
    93:93:boolean setCount(java.lang.Object,int,int) -> setCount
    229:229:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultiset$ElementSet -> com.google.common.collect.AbstractMultiset$ElementSet:
    147:147:void <init>(com.google.common.collect.AbstractMultiset) -> <init>
    155:155:java.util.Iterator iterator() -> iterator
    150:150:com.google.common.collect.Multiset multiset() -> multiset
com.google.common.collect.AbstractMultiset$EntrySet -> com.google.common.collect.AbstractMultiset$EntrySet:
    173:173:void <init>(com.google.common.collect.AbstractMultiset) -> <init>
    181:181:java.util.Iterator iterator() -> iterator
    176:176:com.google.common.collect.Multiset multiset() -> multiset
    186:186:int size() -> size
com.google.common.collect.AbstractNavigableMap -> com.google.common.collect.AbstractNavigableMap:
    35:35:void <init>() -> <init>
    101:101:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    122:122:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    159:159:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    164:164:java.util.NavigableMap descendingMap() -> descendingMap
    45:45:java.util.Map$Entry firstEntry() -> firstEntry
    68:72:java.lang.Object firstKey() -> firstKey
    95:95:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    117:117:java.lang.Object floorKey(java.lang.Object) -> floorKey
    139:139:java.util.SortedMap headMap(java.lang.Object) -> headMap
    107:107:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    127:127:java.lang.Object higherKey(java.lang.Object) -> higherKey
    154:154:java.util.Set keySet() -> keySet
    51:51:java.util.Map$Entry lastEntry() -> lastEntry
    78:82:java.lang.Object lastKey() -> lastKey
    89:89:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    112:112:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    149:149:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    57:57:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    63:63:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    134:134:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    144:144:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractNavigableMap$DescendingMap -> com.google.common.collect.AbstractNavigableMap$DescendingMap:
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap) -> <init>
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap,com.google.common.collect.AbstractNavigableMap$1) -> <init>
    175:175:java.util.Iterator entryIterator() -> entryIterator
    170:170:java.util.NavigableMap forward() -> forward
com.google.common.collect.AbstractRangeSet -> com.google.common.collect.AbstractRangeSet:
    27:27:void <init>() -> <init>
    44:44:void add(com.google.common.collect.Range) -> add
    74:74:void addAll(com.google.common.collect.RangeSet) -> addAll
    79:80:void addAll(java.lang.Iterable) -> addAll
    54:54:void clear() -> clear
    31:31:boolean contains(java.lang.Comparable) -> contains
    59:59:boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    64:65:boolean enclosesAll(java.lang.Iterable) -> enclosesAll
    108:110:boolean equals(java.lang.Object) -> equals
    117:117:int hashCode() -> hashCode
    98:98:boolean intersects(com.google.common.collect.Range) -> intersects
    39:39:boolean isEmpty() -> isEmpty
    49:49:void remove(com.google.common.collect.Range) -> remove
    86:86:void removeAll(com.google.common.collect.RangeSet) -> removeAll
    91:92:void removeAll(java.lang.Iterable) -> removeAll
    122:122:java.lang.String toString() -> toString
com.google.common.collect.AbstractSequentialIterator -> com.google.common.collect.AbstractSequentialIterator:
    50:51:void <init>(java.lang.Object) -> <init>
    64:64:boolean hasNext() -> hasNext
    69:76:java.lang.Object next() -> next
com.google.common.collect.AbstractSetMultimap -> com.google.common.collect.AbstractSetMultimap:
    44:44:void <init>(java.util.Map) -> <init>
    123:123:java.util.Map asMap() -> asMap
    35:35:java.util.Collection createCollection() -> createCollection
    35:35:java.util.Collection createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    52:52:java.util.Set createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    35:35:java.util.Collection entries() -> entries
    86:86:java.util.Set entries() -> entries
    148:148:boolean equals(java.lang.Object) -> equals
    35:35:java.util.Collection get(java.lang.Object) -> get
    75:75:java.util.Set get(java.lang.Object) -> get
    137:137:boolean put(java.lang.Object,java.lang.Object) -> put
    35:35:java.util.Collection removeAll(java.lang.Object) -> removeAll
    98:98:java.util.Set removeAll(java.lang.Object) -> removeAll
    35:35:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    112:112:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    57:57:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    62:62:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
com.google.common.collect.AbstractSortedKeySortedSetMultimap -> com.google.common.collect.AbstractSortedKeySortedSetMultimap:
    37:37:void <init>(java.util.SortedMap) -> <init>
    33:33:java.util.Map asMap() -> asMap
    42:42:java.util.SortedMap asMap() -> asMap
    33:33:java.util.Map backingMap() -> backingMap
    47:47:java.util.SortedMap backingMap() -> backingMap
    57:57:java.util.Set createKeySet() -> createKeySet
    33:33:java.util.Set keySet() -> keySet
    52:52:java.util.SortedSet keySet() -> keySet
com.google.common.collect.AbstractSortedMultiset -> com.google.common.collect.AbstractSortedMultiset:
    42:42:void <init>() -> <init>
    45:46:void <init>(java.util.Comparator) -> <init>
    61:61:java.util.Comparator comparator() -> comparator
    144:144:com.google.common.collect.SortedMultiset createDescendingMultiset() -> createDescendingMultiset
    35:35:java.util.Set createElementSet() -> createElementSet
    56:56:java.util.NavigableSet createElementSet() -> createElementSet
    115:115:java.util.Iterator descendingIterator() -> descendingIterator
    122:123:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    35:35:java.util.Set elementSet() -> elementSet
    35:35:java.util.SortedSet elementSet() -> elementSet
    51:51:java.util.NavigableSet elementSet() -> elementSet
    66:67:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    72:73:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    78:82:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    90:94:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    107:109:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
com.google.common.collect.AbstractSortedMultiset$1DescendingMultisetImpl -> com.google.common.collect.AbstractSortedMultiset$1DescendingMultisetImpl:
    128:128:void <init>(com.google.common.collect.AbstractSortedMultiset) -> <init>
    136:136:java.util.Iterator entryIterator() -> entryIterator
    131:131:com.google.common.collect.SortedMultiset forwardMultiset() -> forwardMultiset
    141:141:java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractSortedSetMultimap -> com.google.common.collect.AbstractSortedSetMultimap:
    44:44:void <init>(java.util.Map) -> <init>
    133:133:java.util.Map asMap() -> asMap
    35:35:java.util.Collection createCollection() -> createCollection
    35:35:java.util.Set createCollection() -> createCollection
    35:35:java.util.Collection createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    35:35:java.util.Set createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    52:52:java.util.SortedSet createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    35:35:java.util.Collection get(java.lang.Object) -> get
    35:35:java.util.Set get(java.lang.Object) -> get
    87:87:java.util.SortedSet get(java.lang.Object) -> get
    35:35:java.util.Collection removeAll(java.lang.Object) -> removeAll
    35:35:java.util.Set removeAll(java.lang.Object) -> removeAll
    100:100:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    35:35:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    35:35:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    116:116:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    35:35:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    57:60:java.util.SortedSet unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    144:144:java.util.Collection values() -> values
    66:69:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
com.google.common.collect.AbstractTable -> com.google.common.collect.AbstractTable:
    35:35:void <init>() -> <init>
    113:114:java.util.Set cellSet() -> cellSet
    86:86:void clear() -> clear
    54:54:java.util.Set columnKeySet() -> columnKeySet
    69:70:boolean contains(java.lang.Object,java.lang.Object) -> contains
    44:44:boolean containsColumn(java.lang.Object) -> containsColumn
    39:39:boolean containsRow(java.lang.Object) -> containsRow
    59:60:boolean containsValue(java.lang.Object) -> containsValue
    118:118:java.util.Set createCellSet() -> createCellSet
    174:174:java.util.Collection createValues() -> createValues
    211:211:boolean equals(java.lang.Object) -> equals
    75:76:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    216:216:int hashCode() -> hashCode
    81:81:boolean isEmpty() -> isEmpty
    99:99:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    104:105:void putAll(com.google.common.collect.Table) -> putAll
    92:93:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    49:49:java.util.Set rowKeySet() -> rowKeySet
    222:222:java.lang.String toString() -> toString
    169:170:java.util.Collection values() -> values
    178:178:java.util.Iterator valuesIterator() -> valuesIterator
com.google.common.collect.AbstractTable$1 -> com.google.common.collect.AbstractTable$1:
    178:178:void <init>(com.google.common.collect.AbstractTable,java.util.Iterator) -> <init>
    178:178:java.lang.Object transform(java.lang.Object) -> transform
    181:181:java.lang.Object transform(com.google.common.collect.Table$Cell) -> transform
com.google.common.collect.AbstractTable$CellSet -> com.google.common.collect.AbstractTable$CellSet:
    124:124:void <init>(com.google.common.collect.AbstractTable) -> <init>
    151:151:void clear() -> clear
    127:132:boolean contains(java.lang.Object) -> contains
    156:156:java.util.Iterator iterator() -> iterator
    139:144:boolean remove(java.lang.Object) -> remove
    161:161:int size() -> size
com.google.common.collect.AbstractTable$Values -> com.google.common.collect.AbstractTable$Values:
    187:187:void <init>(com.google.common.collect.AbstractTable) -> <init>
    200:200:void clear() -> clear
    195:195:boolean contains(java.lang.Object) -> contains
    190:190:java.util.Iterator iterator() -> iterator
    205:205:int size() -> size
com.google.common.collect.AllEqualOrdering -> com.google.common.collect.AllEqualOrdering:
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    45:45:com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    55:55:java.lang.Object readResolve() -> readResolve
    40:40:java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
com.google.common.collect.ArrayListMultimap -> com.google.common.collect.ArrayListMultimap:
    108:108:void <init>() -> <init>
    112:114:void <init>(int,int) -> <init>
    118:123:void <init>(com.google.common.collect.Multimap) -> <init>
    61:61:java.util.Map asMap() -> asMap
    61:61:void clear() -> clear
    61:61:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    61:61:boolean containsKey(java.lang.Object) -> containsKey
    61:61:boolean containsValue(java.lang.Object) -> containsValue
    76:76:com.google.common.collect.ArrayListMultimap create() -> create
    92:92:com.google.common.collect.ArrayListMultimap create(int,int) -> create
    104:104:com.google.common.collect.ArrayListMultimap create(com.google.common.collect.Multimap) -> create
    61:61:java.util.Collection createCollection() -> createCollection
    131:131:java.util.List createCollection() -> createCollection
    61:61:java.util.Collection entries() -> entries
    61:61:boolean equals(java.lang.Object) -> equals
    61:61:java.util.List get(java.lang.Object) -> get
    61:61:int hashCode() -> hashCode
    61:61:boolean isEmpty() -> isEmpty
    61:61:java.util.Set keySet() -> keySet
    61:61:com.google.common.collect.Multiset keys() -> keys
    61:61:boolean put(java.lang.Object,java.lang.Object) -> put
    61:61:boolean putAll(com.google.common.collect.Multimap) -> putAll
    61:61:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    161:166:void readObject(java.io.ObjectInputStream) -> readObject
    61:61:boolean remove(java.lang.Object,java.lang.Object) -> remove
    61:61:java.util.List removeAll(java.lang.Object) -> removeAll
    61:61:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    61:61:int size() -> size
    61:61:java.lang.String toString() -> toString
    143:145:void trimToSize() -> trimToSize
    61:61:java.util.Collection values() -> values
    155:156:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.ArrayListMultimapGwtSerializationDependencies -> com.google.common.collect.ArrayListMultimapGwtSerializationDependencies:
    36:36:void <init>(java.util.Map) -> <init>
com.google.common.collect.ArrayTable -> com.google.common.collect.ArrayTable:
    134:152:void <init>(java.lang.Iterable,java.lang.Iterable) -> <init>
    156:157:void <init>(com.google.common.collect.Table) -> <init>
    160:169:void <init>(com.google.common.collect.ArrayTable) -> <init>
    80:80:com.google.common.collect.Table$Cell access$000(com.google.common.collect.ArrayTable,int) -> access$000
    80:80:com.google.common.collect.ImmutableList access$100(com.google.common.collect.ArrayTable) -> access$100
    80:80:com.google.common.collect.ImmutableList access$200(com.google.common.collect.ArrayTable) -> access$200
    80:80:com.google.common.collect.ImmutableMap access$300(com.google.common.collect.ArrayTable) -> access$300
    80:80:com.google.common.collect.ImmutableMap access$600(com.google.common.collect.ArrayTable) -> access$600
    80:80:java.lang.Object access$800(com.google.common.collect.ArrayTable,int) -> access$800
    305:307:java.lang.Object at(int,int) -> at
    524:524:java.util.Iterator cellIterator() -> cellIterator
    519:519:java.util.Set cellSet() -> cellSet
    361:361:void clear() -> clear
    573:575:java.util.Map column(java.lang.Object) -> column
    288:288:com.google.common.collect.ImmutableList columnKeyList() -> columnKeyList
    78:78:java.util.Set columnKeySet() -> columnKeySet
    610:610:com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    617:618:java.util.Map columnMap() -> columnMap
    377:377:boolean contains(java.lang.Object,java.lang.Object) -> contains
    386:386:boolean containsColumn(java.lang.Object) -> containsColumn
    395:395:boolean containsRow(java.lang.Object) -> containsRow
    400:402:boolean containsValue(java.lang.Object) -> containsValue
    93:93:com.google.common.collect.ArrayTable create(java.lang.Iterable,java.lang.Iterable) -> create
    121:123:com.google.common.collect.ArrayTable create(com.google.common.collect.Table) -> create
    78:78:boolean equals(java.lang.Object) -> equals
    491:496:java.lang.Object erase(java.lang.Object,java.lang.Object) -> erase
    366:367:void eraseAll() -> eraseAll
    412:414:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    533:533:com.google.common.collect.Table$Cell getCell(int) -> getCell
    555:557:java.lang.Object getValue(int) -> getValue
    78:78:int hashCode() -> hashCode
    422:422:boolean isEmpty() -> isEmpty
    434:440:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    460:460:void putAll(com.google.common.collect.Table) -> putAll
    473:473:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    661:663:java.util.Map row(java.lang.Object) -> row
    280:280:com.google.common.collect.ImmutableList rowKeyList() -> rowKeyList
    78:78:java.util.Set rowKeySet() -> rowKeySet
    698:698:com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    705:706:java.util.Map rowMap() -> rowMap
    326:329:java.lang.Object set(int,int,java.lang.Object) -> set
    503:503:int size() -> size
    345:347:java.lang.Object[][] toArray(java.lang.Class) -> toArray
    78:78:java.lang.String toString() -> toString
    747:747:java.util.Collection values() -> values
    752:752:java.util.Iterator valuesIterator() -> valuesIterator
com.google.common.collect.ArrayTable$1 -> com.google.common.collect.ArrayTable$1:
    524:524:void <init>(com.google.common.collect.ArrayTable,int) -> <init>
    524:524:java.lang.Object get(int) -> get
    527:527:com.google.common.collect.Table$Cell get(int) -> get
com.google.common.collect.ArrayTable$2 -> com.google.common.collect.ArrayTable$2:
    533:535:void <init>(com.google.common.collect.ArrayTable,int) -> <init>
    544:544:java.lang.Object getColumnKey() -> getColumnKey
    539:539:java.lang.Object getRowKey() -> getRowKey
    549:549:java.lang.Object getValue() -> getValue
com.google.common.collect.ArrayTable$3 -> com.google.common.collect.ArrayTable$3:
    752:752:void <init>(com.google.common.collect.ArrayTable,int) -> <init>
    755:755:java.lang.Object get(int) -> get
com.google.common.collect.ArrayTable$ArrayMap -> com.google.common.collect.ArrayTable$ArrayMap:
    173:173:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ArrayTable$1) -> <init>
    176:177:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    271:271:void clear() -> clear
    241:241:boolean containsKey(java.lang.Object) -> containsKey
    229:229:java.util.Iterator entryIterator() -> entryIterator
    246:250:java.lang.Object get(java.lang.Object) -> get
    208:209:java.util.Map$Entry getEntry(int) -> getEntry
    186:186:java.lang.Object getKey(int) -> getKey
    204:204:boolean isEmpty() -> isEmpty
    182:182:java.util.Set keySet() -> keySet
    256:261:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    266:266:java.lang.Object remove(java.lang.Object) -> remove
    199:199:int size() -> size
com.google.common.collect.ArrayTable$ArrayMap$1 -> com.google.common.collect.ArrayTable$ArrayMap$1:
    209:209:void <init>(com.google.common.collect.ArrayTable$ArrayMap,int) -> <init>
    212:212:java.lang.Object getKey() -> getKey
    217:217:java.lang.Object getValue() -> getValue
    222:222:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ArrayTable$ArrayMap$2 -> com.google.common.collect.ArrayTable$ArrayMap$2:
    229:229:void <init>(com.google.common.collect.ArrayTable$ArrayMap,int) -> <init>
    229:229:java.lang.Object get(int) -> get
    232:232:java.util.Map$Entry get(int) -> get
com.google.common.collect.ArrayTable$Column -> com.google.common.collect.ArrayTable$Column:
    581:583:void <init>(com.google.common.collect.ArrayTable,int) -> <init>
    593:593:java.lang.Object getValue(int) -> getValue
    598:598:java.lang.Object setValue(int,java.lang.Object) -> setValue
com.google.common.collect.ArrayTable$ColumnMap -> com.google.common.collect.ArrayTable$ColumnMap:
    622:622:void <init>(com.google.common.collect.ArrayTable,com.google.common.collect.ArrayTable$1) -> <init>
    623:624:void <init>(com.google.common.collect.ArrayTable) -> <init>
    621:621:java.lang.Object getValue(int) -> getValue
    634:634:java.util.Map getValue(int) -> getValue
    621:621:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    644:644:java.util.Map put(java.lang.Object,java.util.Map) -> put
    621:621:java.lang.Object setValue(int,java.lang.Object) -> setValue
    639:639:java.util.Map setValue(int,java.util.Map) -> setValue
com.google.common.collect.ArrayTable$Row -> com.google.common.collect.ArrayTable$Row:
    669:671:void <init>(com.google.common.collect.ArrayTable,int) -> <init>
    681:681:java.lang.Object getValue(int) -> getValue
    686:686:java.lang.Object setValue(int,java.lang.Object) -> setValue
com.google.common.collect.ArrayTable$RowMap -> com.google.common.collect.ArrayTable$RowMap:
    710:710:void <init>(com.google.common.collect.ArrayTable,com.google.common.collect.ArrayTable$1) -> <init>
    711:712:void <init>(com.google.common.collect.ArrayTable) -> <init>
    709:709:java.lang.Object getValue(int) -> getValue
    722:722:java.util.Map getValue(int) -> getValue
    709:709:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    732:732:java.util.Map put(java.lang.Object,java.util.Map) -> put
    709:709:java.lang.Object setValue(int,java.lang.Object) -> setValue
    727:727:java.util.Map setValue(int,java.util.Map) -> setValue
com.google.common.collect.BaseImmutableMultimap -> com.google.common.collect.BaseImmutableMultimap:
    25:25:void <init>() -> <init>
com.google.common.collect.BiMap$-CC -> com.google.common.collect.BiMap$-CC:
    36:36:java.util.Collection com.google.common.collect.BiMap.values() -> $default$values
com.google.common.collect.BoundType -> com.google.common.collect.BoundType:
    26:30:void <clinit>() -> <clinit>
    34:35:void <init>(java.lang.String,int,boolean) -> <init>
    44:44:com.google.common.collect.BoundType flip() -> flip
    40:40:com.google.common.collect.BoundType forBoolean(boolean) -> forBoolean
    26:26:com.google.common.collect.BoundType valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.collect.BoundType[] values() -> values
com.google.common.collect.ByFunctionOrdering -> com.google.common.collect.ByFunctionOrdering:
    36:38:void <init>(com.google.common.base.Function,com.google.common.collect.Ordering) -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    51:53:boolean equals(java.lang.Object) -> equals
    60:60:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
com.google.common.collect.CartesianList -> com.google.common.collect.CartesianList:
    50:62:void <init>(com.google.common.collect.ImmutableList) -> <init>
    33:33:com.google.common.collect.ImmutableList access$000(com.google.common.collect.CartesianList) -> access$000
    33:33:int access$100(com.google.common.collect.CartesianList,int,int) -> access$100
    144:153:boolean contains(java.lang.Object) -> contains
    39:47:java.util.List create(java.util.List) -> create
    32:32:java.lang.Object get(int) -> get
    115:116:com.google.common.collect.ImmutableList get(int) -> get
    66:66:int getAxisIndexForProductIndex(int,int) -> getAxisIndexForProductIndex
    71:86:int indexOf(java.lang.Object) -> indexOf
    93:108:int lastIndexOf(java.lang.Object) -> lastIndexOf
    139:139:int size() -> size
com.google.common.collect.CartesianList$1 -> com.google.common.collect.CartesianList$1:
    116:116:void <init>(com.google.common.collect.CartesianList,int) -> <init>
    125:127:java.lang.Object get(int) -> get
    120:120:int size() -> size
com.google.common.collect.CollectPreconditions -> com.google.common.collect.CollectPreconditions:
    26:26:void <init>() -> <init>
    30:32:void checkEntryNotNull(java.lang.Object,java.lang.Object) -> checkEntryNotNull
    39:39:int checkNonnegative(int,java.lang.String) -> checkNonnegative
    47:47:long checkNonnegative(long,java.lang.String) -> checkNonnegative
    54:54:void checkPositive(int,java.lang.String) -> checkPositive
    63:63:void checkRemove(boolean) -> checkRemove
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    55:55:void <init>() -> <init>
    54:54:boolean access$000(java.util.List,java.util.List) -> access$000
    300:301:boolean containsAllImpl(java.util.Collection,java.util.Collection) -> containsAllImpl
    676:678:com.google.common.collect.ObjectCountHashMap counts(java.util.Collection) -> counts
    85:91:java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate) -> filter
    659:668:boolean isPermutation(java.util.List,java.util.List) -> isPermutation
    328:329:java.lang.StringBuilder newStringBuilderForCollection(int) -> newStringBuilderForCollection
    357:357:java.util.Collection orderedPermutations(java.lang.Iterable) -> orderedPermutations
    409:409:java.util.Collection orderedPermutations(java.lang.Iterable,java.util.Comparator) -> orderedPermutations
    554:554:java.util.Collection permutations(java.util.Collection) -> permutations
    99:101:boolean safeContains(java.util.Collection,java.lang.Object) -> safeContains
    112:114:boolean safeRemove(java.util.Collection,java.lang.Object) -> safeRemove
    310:323:java.lang.String toStringImpl(java.util.Collection) -> toStringImpl
    255:255:java.util.Collection transform(java.util.Collection,com.google.common.base.Function) -> transform
com.google.common.collect.Collections2$FilteredCollection -> com.google.common.collect.Collections2$FilteredCollection:
    124:126:void <init>(java.util.Collection,com.google.common.base.Predicate) -> <init>
    136:137:boolean add(java.lang.Object) -> add
    142:145:boolean addAll(java.util.Collection) -> addAll
    150:150:void clear() -> clear
    155:158:boolean contains(java.lang.Object) -> contains
    165:165:boolean containsAll(java.util.Collection) -> containsAll
    130:130:com.google.common.collect.Collections2$FilteredCollection createCombined(com.google.common.base.Predicate) -> createCombined
    170:170:boolean isEmpty() -> isEmpty
    175:175:java.util.Iterator iterator() -> iterator
    180:180:boolean remove(java.lang.Object) -> remove
    186:190:boolean removeAll(java.util.Collection) -> removeAll
    200:204:boolean retainAll(java.util.Collection) -> retainAll
    214:215:int size() -> size
    225:225:java.lang.Object[] toArray() -> toArray
    230:230:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Collections2$OrderedPermutationCollection -> com.google.common.collect.Collections2$OrderedPermutationCollection:
    417:420:void <init>(java.lang.Iterable,java.util.Comparator) -> <init>
    437:450:int calculateSize(java.util.List,java.util.Comparator) -> calculateSize
    470:472:boolean contains(java.lang.Object) -> contains
    465:465:java.util.Iterator iterator() -> iterator
    455:455:int size() -> size
    479:479:java.lang.String toString() -> toString
com.google.common.collect.Collections2$OrderedPermutationIterator -> com.google.common.collect.Collections2$OrderedPermutationIterator:
    487:489:void <init>(java.util.List,java.util.Comparator) -> <init>
    503:512:void calculateNextPermutation() -> calculateNextPermutation
    483:483:java.lang.Object computeNext() -> computeNext
    494:498:java.util.List computeNext() -> computeNext
    516:517:int findNextJ() -> findNextJ
    525:531:int findNextL(int) -> findNextL
com.google.common.collect.Collections2$PermutationCollection -> com.google.common.collect.Collections2$PermutationCollection:
    560:561:void <init>(com.google.common.collect.ImmutableList) -> <init>
    581:583:boolean contains(java.lang.Object) -> contains
    576:576:java.util.Iterator iterator() -> iterator
    566:566:int size() -> size
    590:590:java.lang.String toString() -> toString
com.google.common.collect.Collections2$PermutationIterator -> com.google.common.collect.Collections2$PermutationIterator:
    600:607:void <init>(java.util.List) -> <init>
    621:646:void calculateNextPermutation() -> calculateNextPermutation
    594:594:java.lang.Object computeNext() -> computeNext
    612:616:java.util.List computeNext() -> computeNext
    652:653:void switchDirection() -> switchDirection
com.google.common.collect.Collections2$TransformedCollection -> com.google.common.collect.Collections2$TransformedCollection:
    262:264:void <init>(java.util.Collection,com.google.common.base.Function) -> <init>
    269:269:void clear() -> clear
    274:274:boolean isEmpty() -> isEmpty
    279:279:java.util.Iterator iterator() -> iterator
    284:284:int size() -> size
com.google.common.collect.CompactHashMap -> com.google.common.collect.CompactHashMap:
    102:102:void <clinit>() -> <clinit>
    180:181:void <init>() -> <init>
    189:190:void <init>(int) -> <init>
    75:75:int access$000(com.google.common.collect.CompactHashMap) -> access$000
    75:75:java.lang.Object access$100(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$100
    75:75:java.lang.Object access$200() -> access$200
    75:75:int access$400(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$400
    75:75:int access$500(com.google.common.collect.CompactHashMap) -> access$500
    75:75:java.lang.Object access$600(com.google.common.collect.CompactHashMap) -> access$600
    75:75:int access$710(com.google.common.collect.CompactHashMap) -> access$710
    210:219:int allocArrays() -> allocArrays
    890:906:void clear() -> clear
    440:441:boolean containsKey(java.lang.Object) -> containsKey
    807:812:boolean containsValue(java.lang.Object) -> containsValue
    242:250:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    86:86:com.google.common.collect.CompactHashMap create() -> create
    663:663:java.util.Set createEntrySet() -> createEntrySet
    235:235:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    607:607:java.util.Set createKeySet() -> createKeySet
    827:827:java.util.Collection createValues() -> createValues
    99:99:com.google.common.collect.CompactHashMap createWithExpectedSize(int) -> createWithExpectedSize
    228:229:java.util.Map delegateOrNull() -> delegateOrNull
    659:659:java.util.Set entrySet() -> entrySet
    726:730:java.util.Iterator entrySetIterator() -> entrySetIterator
    538:538:int firstEntryIndex() -> firstEntryIndex
    447:456:java.lang.Object get(java.lang.Object) -> get
    542:542:int getSuccessor(int) -> getSuccessor
    263:263:int hashTableMask() -> hashTableMask
    267:267:void incrementModCount() -> incrementModCount
    416:433:int indexOf(java.lang.Object) -> indexOf
    195:198:void init(int) -> init
    350:352:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    802:802:boolean isEmpty() -> isEmpty
    603:603:java.util.Set keySet() -> keySet
    642:646:java.util.Iterator keySetIterator() -> keySetIterator
    498:533:void moveLastEntry(int,int) -> moveLastEntry
    204:204:boolean needsAllocArrays() -> needsAllocArrays
    282:342:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    923:932:void readObject(java.io.ObjectInputStream) -> readObject
    464:469:java.lang.Object remove(java.lang.Object) -> remove
    474:489:java.lang.Object removeHelper(java.lang.Object) -> removeHelper
    373:375:void resizeEntries(int) -> resizeEntries
    357:363:void resizeMeMaybe(int) -> resizeMeMaybe
    380:411:int resizeTable(int,int,int,int) -> resizeTable
    256:258:void setHashTableMask(int) -> setHashTableMask
    796:797:int size() -> size
    867:884:void trimToSize() -> trimToSize
    823:823:java.util.Collection values() -> values
    849:853:java.util.Iterator valuesIterator() -> valuesIterator
    911:917:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashMap$1 -> com.google.common.collect.CompactHashMap$1:
    646:646:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    650:650:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$2 -> com.google.common.collect.CompactHashMap$2:
    730:730:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    730:730:java.lang.Object getOutput(int) -> getOutput
    733:733:java.util.Map$Entry getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$3 -> com.google.common.collect.CompactHashMap$3:
    853:853:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    857:857:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$EntrySetView -> com.google.common.collect.CompactHashMap$EntrySetView:
    667:667:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    676:676:void clear() -> clear
    686:692:boolean contains(java.lang.Object) -> contains
    681:681:java.util.Iterator iterator() -> iterator
    699:717:boolean remove(java.lang.Object) -> remove
    671:671:int size() -> size
com.google.common.collect.CompactHashMap$Itr -> com.google.common.collect.CompactHashMap$Itr:
    554:557:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    554:554:void <init>(com.google.common.collect.CompactHashMap,com.google.common.collect.CompactHashMap$1) -> <init>
    593:594:void checkForConcurrentModification() -> checkForConcurrentModification
    561:561:boolean hasNext() -> hasNext
    589:589:void incrementExpectedModCount() -> incrementExpectedModCount
    568:574:java.lang.Object next() -> next
    580:585:void remove() -> remove
com.google.common.collect.CompactHashMap$KeySetView -> com.google.common.collect.CompactHashMap$KeySetView:
    611:611:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    637:637:void clear() -> clear
    619:619:boolean contains(java.lang.Object) -> contains
    632:632:java.util.Iterator iterator() -> iterator
    624:627:boolean remove(java.lang.Object) -> remove
    614:614:int size() -> size
com.google.common.collect.CompactHashMap$MapEntry -> com.google.common.collect.CompactHashMap$MapEntry:
    744:746:void <init>(com.google.common.collect.CompactHashMap,int) -> <init>
    752:752:java.lang.Object getKey() -> getKey
    767:772:java.lang.Object getValue() -> getValue
    778:788:java.lang.Object setValue(java.lang.Object) -> setValue
    756:759:void updateLastKnownIndex() -> updateLastKnownIndex
com.google.common.collect.CompactHashMap$ValuesView -> com.google.common.collect.CompactHashMap$ValuesView:
    831:831:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    839:839:void clear() -> clear
    844:844:java.util.Iterator iterator() -> iterator
    834:834:int size() -> size
com.google.common.collect.CompactHashSet -> com.google.common.collect.CompactHashSet:
    191:192:void <init>() -> <init>
    200:201:void <init>(int) -> <init>
    73:73:int access$000(com.google.common.collect.CompactHashSet) -> access$000
    287:340:boolean add(java.lang.Object) -> add
    221:229:int allocArrays() -> allocArrays
    635:650:void clear() -> clear
    413:434:boolean contains(java.lang.Object) -> contains
    252:259:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    78:78:com.google.common.collect.CompactHashSet create() -> create
    89:90:com.google.common.collect.CompactHashSet create(java.util.Collection) -> create
    103:104:com.google.common.collect.CompactHashSet create(java.lang.Object[]) -> create
    245:245:java.util.Set createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    118:118:com.google.common.collect.CompactHashSet createWithExpectedSize(int) -> createWithExpectedSize
    238:239:java.util.Set delegateOrNull() -> delegateOrNull
    505:505:int firstEntryIndex() -> firstEntryIndex
    509:509:int getSuccessor(int) -> getSuccessor
    277:277:int hashTableMask() -> hashTableMask
    281:281:void incrementModCount() -> incrementModCount
    206:209:void init(int) -> init
    348:349:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    580:580:boolean isEmpty() -> isEmpty
    265:265:boolean isUsingHashFloodingResistance() -> isUsingHashFloodingResistance
    523:527:java.util.Iterator iterator() -> iterator
    468:500:void moveLastEntry(int,int) -> moveLastEntry
    215:215:boolean needsAllocArrays() -> needsAllocArrays
    664:672:void readObject(java.io.ObjectInputStream) -> readObject
    442:459:boolean remove(java.lang.Object) -> remove
    370:371:void resizeEntries(int) -> resizeEntries
    354:360:void resizeMeMaybe(int) -> resizeMeMaybe
    376:407:int resizeTable(int,int,int,int) -> resizeTable
    270:272:void setHashTableMask(int) -> setHashTableMask
    574:575:int size() -> size
    585:589:java.lang.Object[] toArray() -> toArray
    595:604:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    612:629:void trimToSize() -> trimToSize
    655:658:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashSet$1 -> com.google.common.collect.CompactHashSet$1:
    527:530:void <init>(com.google.common.collect.CompactHashSet) -> <init>
    565:566:void checkForConcurrentModification() -> checkForConcurrentModification
    534:534:boolean hasNext() -> hasNext
    561:561:void incrementExpectedModCount() -> incrementExpectedModCount
    540:546:java.lang.Object next() -> next
    552:557:void remove() -> remove
com.google.common.collect.CompactHashing -> com.google.common.collect.CompactHashing:
    32:32:void <init>() -> <init>
    77:85:java.lang.Object createTable(int) -> createTable
    153:179:int remove(java.lang.Object,java.lang.Object,int,java.lang.Object,int[],java.lang.Object[],java.lang.Object[]) -> remove
    90:95:void tableClear(java.lang.Object) -> tableClear
    100:105:int tableGet(java.lang.Object,int) -> tableGet
    110:115:void tableSet(java.lang.Object,int,int) -> tableSet
    70:70:int tableSize(int) -> tableSize
com.google.common.collect.CompactLinkedHashMap -> com.google.common.collect.CompactLinkedHashMap:
    91:91:void <init>() -> <init>
    95:95:void <init>(int) -> <init>
    99:100:void <init>(int,boolean) -> <init>
    172:178:void accessEntry(int) -> accessEntry
    208:208:int adjustAfterRemove(int,int) -> adjustAfterRemove
    112:113:int allocArrays() -> allocArrays
    213:221:void clear() -> clear
    125:126:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    53:53:com.google.common.collect.CompactLinkedHashMap create() -> create
    119:119:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    66:66:com.google.common.collect.CompactLinkedHashMap createWithExpectedSize(int) -> createWithExpectedSize
    203:203:int firstEntryIndex() -> firstEntryIndex
    131:131:int getPredecessor(int) -> getPredecessor
    136:136:int getSuccessor(int) -> getSuccessor
    105:107:void init(int) -> init
    165:167:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    184:192:void moveLastEntry(int,int) -> moveLastEntry
    197:198:void resizeEntries(int) -> resizeEntries
    146:146:void setPredecessor(int,int) -> setPredecessor
    151:159:void setSucceeds(int,int) -> setSucceeds
    141:141:void setSuccessor(int,int) -> setSuccessor
com.google.common.collect.CompactLinkedHashSet -> com.google.common.collect.CompactLinkedHashSet:
    121:121:void <init>() -> <init>
    125:125:void <init>(int) -> <init>
    218:218:int adjustAfterRemove(int,int) -> adjustAfterRemove
    137:139:int allocArrays() -> allocArrays
    233:242:void clear() -> clear
    146:148:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    53:53:com.google.common.collect.CompactLinkedHashSet create() -> create
    64:65:com.google.common.collect.CompactLinkedHashSet create(java.util.Collection) -> create
    78:79:com.google.common.collect.CompactLinkedHashSet create(java.lang.Object[]) -> create
    93:93:com.google.common.collect.CompactLinkedHashSet createWithExpectedSize(int) -> createWithExpectedSize
    213:213:int firstEntryIndex() -> firstEntryIndex
    153:153:int getPredecessor(int) -> getPredecessor
    158:158:int getSuccessor(int) -> getSuccessor
    130:132:void init(int) -> init
    185:187:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    192:201:void moveLastEntry(int,int) -> moveLastEntry
    206:208:void resizeEntries(int) -> resizeEntries
    166:166:void setPredecessor(int,int) -> setPredecessor
    171:179:void setSucceeds(int,int) -> setSucceeds
    162:162:void setSuccessor(int,int) -> setSuccessor
    223:223:java.lang.Object[] toArray() -> toArray
    228:228:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ComparatorOrdering -> com.google.common.collect.ComparatorOrdering:
    31:32:void <init>(java.util.Comparator) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    45:47:boolean equals(java.lang.Object) -> equals
    54:54:int hashCode() -> hashCode
    59:59:java.lang.String toString() -> toString
com.google.common.collect.Comparators -> com.google.common.collect.Comparators:
    45:45:void <init>() -> <init>
    71:77:boolean isInOrder(java.lang.Iterable,java.util.Comparator) -> isInOrder
    93:99:boolean isInStrictOrder(java.lang.Iterable,java.util.Comparator) -> isInStrictOrder
    62:62:java.util.Comparator lexicographical(java.util.Comparator) -> lexicographical
    161:161:java.lang.Comparable max(java.lang.Comparable,java.lang.Comparable) -> max
    181:181:java.lang.Object max(java.lang.Object,java.lang.Object,java.util.Comparator) -> max
    123:123:java.lang.Comparable min(java.lang.Comparable,java.lang.Comparable) -> min
    143:143:java.lang.Object min(java.lang.Object,java.lang.Object,java.util.Comparator) -> min
com.google.common.collect.ComparisonChain -> com.google.common.collect.ComparisonChain:
    68:124:void <clinit>() -> <clinit>
    60:60:void <init>(com.google.common.collect.ComparisonChain$1) -> <init>
    61:61:void <init>() -> <init>
    60:60:com.google.common.collect.ComparisonChain access$100() -> access$100
    60:60:com.google.common.collect.ComparisonChain access$200() -> access$200
    60:60:com.google.common.collect.ComparisonChain access$300() -> access$300
    226:226:com.google.common.collect.ComparisonChain compare(java.lang.Boolean,java.lang.Boolean) -> compare
    65:65:com.google.common.collect.ComparisonChain start() -> start
com.google.common.collect.ComparisonChain$1 -> com.google.common.collect.ComparisonChain$1:
    69:69:void <init>() -> <init>
    113:113:com.google.common.collect.ComparisonChain classify(int) -> classify
    73:73:com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    79:79:com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    84:84:com.google.common.collect.ComparisonChain compare(int,int) -> compare
    89:89:com.google.common.collect.ComparisonChain compare(long,long) -> compare
    94:94:com.google.common.collect.ComparisonChain compare(float,float) -> compare
    99:99:com.google.common.collect.ComparisonChain compare(double,double) -> compare
    109:109:com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    104:104:com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
com.google.common.collect.ComparisonChain$InactiveComparisonChain -> com.google.common.collect.ComparisonChain$InactiveComparisonChain:
    129:130:void <init>(int) -> <init>
    176:176:int result() -> result
com.google.common.collect.CompoundOrdering -> com.google.common.collect.CompoundOrdering:
    29:30:void <init>(java.util.Comparator,java.util.Comparator) -> <init>
    33:34:void <init>(java.lang.Iterable) -> <init>
    39:40:int compare(java.lang.Object,java.lang.Object) -> compare
    53:55:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    67:67:java.lang.String toString() -> toString
com.google.common.collect.ComputationException -> com.google.common.collect.ComputationException:
    40:40:void <init>(java.lang.Throwable) -> <init>
com.google.common.collect.ConcurrentHashMultiset -> com.google.common.collect.ConcurrentHashMultiset:
    126:128:void <init>(java.util.concurrent.ConcurrentMap) -> <init>
    59:59:java.util.concurrent.ConcurrentMap access$100(com.google.common.collect.ConcurrentHashMultiset) -> access$100
    204:239:int add(java.lang.Object,int) -> add
    554:554:void clear() -> clear
    58:58:boolean contains(java.lang.Object) -> contains
    141:142:int count(java.lang.Object) -> count
    89:89:com.google.common.collect.ConcurrentHashMultiset create() -> create
    101:102:com.google.common.collect.ConcurrentHashMultiset create(java.lang.Iterable) -> create
    122:122:com.google.common.collect.ConcurrentHashMultiset create(java.util.concurrent.ConcurrentMap) -> create
    449:450:java.util.Set createElementSet() -> createElementSet
    487:487:java.util.Set createEntrySet() -> createEntrySet
    492:492:int distinctElements() -> distinctElements
    480:480:java.util.Iterator elementIterator() -> elementIterator
    58:58:java.util.Set elementSet() -> elementSet
    504:524:java.util.Iterator entryIterator() -> entryIterator
    58:58:java.util.Set entrySet() -> entrySet
    497:497:boolean isEmpty() -> isEmpty
    549:549:java.util.Iterator iterator() -> iterator
    594:598:void readObject(java.io.ObjectInputStream) -> readObject
    272:288:int remove(java.lang.Object,int) -> remove
    315:331:boolean removeExactly(java.lang.Object,int) -> removeExactly
    348:382:int setCount(java.lang.Object,int) -> setCount
    404:436:boolean setCount(java.lang.Object,int,int) -> setCount
    154:157:int size() -> size
    180:184:java.util.List snapshot() -> snapshot
    167:167:java.lang.Object[] toArray() -> toArray
    172:172:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    589:590:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.ConcurrentHashMultiset$1 -> com.google.common.collect.ConcurrentHashMultiset$1:
    450:450:void <init>(com.google.common.collect.ConcurrentHashMultiset,java.util.Set) -> <init>
    458:458:boolean contains(java.lang.Object) -> contains
    463:463:boolean containsAll(java.util.Collection) -> containsAll
    450:450:java.lang.Object delegate() -> delegate
    450:450:java.util.Collection delegate() -> delegate
    453:453:java.util.Set delegate() -> delegate
    468:468:boolean remove(java.lang.Object) -> remove
    473:473:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.ConcurrentHashMultiset$2 -> com.google.common.collect.ConcurrentHashMultiset$2:
    505:507:void <init>(com.google.common.collect.ConcurrentHashMultiset) -> <init>
    505:505:java.lang.Object computeNext() -> computeNext
    512:518:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
com.google.common.collect.ConcurrentHashMultiset$3 -> com.google.common.collect.ConcurrentHashMultiset$3:
    524:524:void <init>(com.google.common.collect.ConcurrentHashMultiset,java.util.Iterator) -> <init>
    524:524:java.lang.Object delegate() -> delegate
    529:529:java.util.Iterator delegate() -> delegate
    524:524:java.lang.Object next() -> next
    534:534:com.google.common.collect.Multiset$Entry next() -> next
    540:542:void remove() -> remove
com.google.common.collect.ConcurrentHashMultiset$EntrySet -> com.google.common.collect.ConcurrentHashMultiset$EntrySet:
    558:558:void <init>(com.google.common.collect.ConcurrentHashMultiset) -> <init>
    558:558:void <init>(com.google.common.collect.ConcurrentHashMultiset,com.google.common.collect.ConcurrentHashMultiset$1) -> <init>
    557:557:com.google.common.collect.Multiset multiset() -> multiset
    561:561:com.google.common.collect.ConcurrentHashMultiset multiset() -> multiset
    580:582:java.util.List snapshot() -> snapshot
    571:571:java.lang.Object[] toArray() -> toArray
    576:576:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder -> com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder:
    77:78:void <clinit>() -> <clinit>
    76:76:void <init>() -> <init>
com.google.common.collect.ConsumingQueueIterator -> com.google.common.collect.ConsumingQueueIterator:
    32:34:void <init>(java.lang.Object[]) -> <init>
    37:38:void <init>(java.util.Queue) -> <init>
    43:43:java.lang.Object computeNext() -> computeNext
com.google.common.collect.ContiguousSet -> com.google.common.collect.ContiguousSet:
    144:145:void <init>(com.google.common.collect.DiscreteDomain) -> <init>
    256:256:com.google.common.collect.ImmutableSortedSet$Builder builder() -> builder
    99:99:com.google.common.collect.ContiguousSet closed(int,int) -> closed
    112:112:com.google.common.collect.ContiguousSet closed(long,long) -> closed
    125:125:com.google.common.collect.ContiguousSet closedOpen(int,int) -> closedOpen
    138:138:com.google.common.collect.ContiguousSet closedOpen(long,long) -> closedOpen
    62:86:com.google.common.collect.ContiguousSet create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain) -> create
    237:237:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    49:49:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    49:49:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    49:49:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    49:49:java.util.SortedSet headSet(java.lang.Object) -> headSet
    150:150:com.google.common.collect.ContiguousSet headSet(java.lang.Comparable) -> headSet
    157:157:com.google.common.collect.ContiguousSet headSet(java.lang.Comparable,boolean) -> headSet
    49:49:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    49:49:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    49:49:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    49:49:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    49:49:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    162:165:com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,java.lang.Comparable) -> subSet
    173:176:com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSet
    49:49:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    49:49:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    49:49:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    49:49:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    49:49:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    181:181:com.google.common.collect.ContiguousSet tailSet(java.lang.Comparable) -> tailSet
    188:188:com.google.common.collect.ContiguousSet tailSet(java.lang.Comparable,boolean) -> tailSet
    49:49:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    243:243:java.lang.String toString() -> toString
com.google.common.collect.Count -> com.google.common.collect.Count:
    30:31:void <init>(int) -> <init>
    39:39:void add(int) -> add
    43:43:int addAndGet(int) -> addAndGet
    63:63:boolean equals(java.lang.Object) -> equals
    35:35:int get() -> get
    51:52:int getAndSet(int) -> getAndSet
    58:58:int hashCode() -> hashCode
    47:47:void set(int) -> set
    68:68:java.lang.String toString() -> toString
com.google.common.collect.Cut -> com.google.common.collect.Cut:
    38:39:void <init>(java.lang.Comparable) -> <init>
    215:215:com.google.common.collect.Cut aboveAll() -> aboveAll
    383:383:com.google.common.collect.Cut aboveValue(java.lang.Comparable) -> aboveValue
    114:114:com.google.common.collect.Cut belowAll() -> belowAll
    300:300:com.google.common.collect.Cut belowValue(java.lang.Comparable) -> belowValue
    34:34:int compareTo(java.lang.Object) -> compareTo
    71:82:int compareTo(com.google.common.collect.Cut) -> compareTo
    86:86:java.lang.Comparable endpoint() -> endpoint
    92:96:boolean equals(java.lang.Object) -> equals
com.google.common.collect.Cut$1 -> com.google.common.collect.Cut$1:
    325:325:void <clinit>() -> <clinit>
com.google.common.collect.Cut$AboveAll -> com.google.common.collect.Cut$AboveAll:
    219:219:void <clinit>() -> <clinit>
    222:222:void <init>() -> <init>
    218:218:com.google.common.collect.Cut$AboveAll access$100() -> access$100
    218:218:int compareTo(java.lang.Object) -> compareTo
    259:259:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    264:264:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    227:227:java.lang.Comparable endpoint() -> endpoint
    274:274:java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> greatestValueBelow
    284:284:int hashCode() -> hashCode
    269:269:java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> leastValueAbove
    293:293:java.lang.Object readResolve() -> readResolve
    237:237:com.google.common.collect.BoundType typeAsLowerBound() -> typeAsLowerBound
    242:242:com.google.common.collect.BoundType typeAsUpperBound() -> typeAsUpperBound
    248:248:com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withLowerBoundType
    254:254:com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withUpperBoundType
com.google.common.collect.Cut$AboveValue -> com.google.common.collect.Cut$AboveValue:
    388:388:void <init>(java.lang.Comparable) -> <init>
    454:455:com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> canonical
    434:434:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    439:439:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    449:449:java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> greatestValueBelow
    460:460:int hashCode() -> hashCode
    393:393:boolean isLessThan(java.lang.Comparable) -> isLessThan
    444:444:java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> leastValueAbove
    465:465:java.lang.String toString() -> toString
    398:398:com.google.common.collect.BoundType typeAsLowerBound() -> typeAsLowerBound
    403:403:com.google.common.collect.BoundType typeAsUpperBound() -> typeAsUpperBound
    408:415:com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withLowerBoundType
    421:428:com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withUpperBoundType
com.google.common.collect.Cut$BelowAll -> com.google.common.collect.Cut$BelowAll:
    120:120:void <clinit>() -> <clinit>
    123:123:void <init>() -> <init>
    119:119:com.google.common.collect.Cut$BelowAll access$000() -> access$000
    181:181:com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> canonical
    119:119:int compareTo(java.lang.Object) -> compareTo
    160:160:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    165:165:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    128:128:java.lang.Comparable endpoint() -> endpoint
    175:175:java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> greatestValueBelow
    194:194:int hashCode() -> hashCode
    170:170:java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> leastValueAbove
    203:203:java.lang.Object readResolve() -> readResolve
    138:138:com.google.common.collect.BoundType typeAsLowerBound() -> typeAsLowerBound
    143:143:com.google.common.collect.BoundType typeAsUpperBound() -> typeAsUpperBound
    149:149:com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withLowerBoundType
    155:155:com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withUpperBoundType
com.google.common.collect.Cut$BelowValue -> com.google.common.collect.Cut$BelowValue:
    305:305:void <init>(java.lang.Comparable) -> <init>
    351:351:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    356:356:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    366:366:java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> greatestValueBelow
    371:371:int hashCode() -> hashCode
    310:310:boolean isLessThan(java.lang.Comparable) -> isLessThan
    361:361:java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> leastValueAbove
    376:376:java.lang.String toString() -> toString
    315:315:com.google.common.collect.BoundType typeAsLowerBound() -> typeAsLowerBound
    320:320:com.google.common.collect.BoundType typeAsUpperBound() -> typeAsUpperBound
    325:332:com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withLowerBoundType
    338:345:com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> withUpperBoundType
com.google.common.collect.DenseImmutableTable -> com.google.common.collect.DenseImmutableTable:
    53:80:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet) -> <init>
    27:27:int[] access$200(com.google.common.collect.DenseImmutableTable) -> access$200
    27:27:com.google.common.collect.ImmutableMap access$300(com.google.common.collect.DenseImmutableTable) -> access$300
    27:27:java.lang.Object[][] access$400(com.google.common.collect.DenseImmutableTable) -> access$400
    27:27:int[] access$500(com.google.common.collect.DenseImmutableTable) -> access$500
    27:27:com.google.common.collect.ImmutableMap access$600(com.google.common.collect.DenseImmutableTable) -> access$600
    25:25:java.util.Map columnMap() -> columnMap
    236:237:com.google.common.collect.ImmutableMap columnMap() -> columnMap
    276:276:com.google.common.collect.ImmutableTable$SerializedForm createSerializedForm() -> createSerializedForm
    249:251:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    261:266:com.google.common.collect.Table$Cell getCell(int) -> getCell
    271:271:java.lang.Object getValue(int) -> getValue
    25:25:java.util.Map rowMap() -> rowMap
    243:244:com.google.common.collect.ImmutableMap rowMap() -> rowMap
    256:256:int size() -> size
com.google.common.collect.DenseImmutableTable$Column -> com.google.common.collect.DenseImmutableTable$Column:
    168:170:void <init>(com.google.common.collect.DenseImmutableTable,int) -> <init>
    180:180:java.lang.Object getValue(int) -> getValue
    175:175:com.google.common.collect.ImmutableMap keyToIndex() -> keyToIndex
com.google.common.collect.DenseImmutableTable$ColumnMap -> com.google.common.collect.DenseImmutableTable$ColumnMap:
    212:212:void <init>(com.google.common.collect.DenseImmutableTable,com.google.common.collect.DenseImmutableTable$1) -> <init>
    213:214:void <init>(com.google.common.collect.DenseImmutableTable) -> <init>
    211:211:java.lang.Object getValue(int) -> getValue
    224:224:com.google.common.collect.ImmutableMap getValue(int) -> getValue
    219:219:com.google.common.collect.ImmutableMap keyToIndex() -> keyToIndex
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap -> com.google.common.collect.DenseImmutableTable$ImmutableArrayMap:
    87:88:void <init>(int) -> <init>
    107:107:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    123:123:com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
    117:118:java.lang.Object get(java.lang.Object) -> get
    99:99:java.lang.Object getKey(int) -> getKey
    95:95:boolean isFull() -> isFull
    112:112:int size() -> size
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1 -> com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1:
    123:125:void <init>(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap) -> <init>
    123:123:java.lang.Object computeNext() -> computeNext
    129:135:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.DenseImmutableTable$Row -> com.google.common.collect.DenseImmutableTable$Row:
    144:146:void <init>(com.google.common.collect.DenseImmutableTable,int) -> <init>
    156:156:java.lang.Object getValue(int) -> getValue
    151:151:com.google.common.collect.ImmutableMap keyToIndex() -> keyToIndex
com.google.common.collect.DenseImmutableTable$RowMap -> com.google.common.collect.DenseImmutableTable$RowMap:
    190:190:void <init>(com.google.common.collect.DenseImmutableTable,com.google.common.collect.DenseImmutableTable$1) -> <init>
    191:192:void <init>(com.google.common.collect.DenseImmutableTable) -> <init>
    189:189:java.lang.Object getValue(int) -> getValue
    202:202:com.google.common.collect.ImmutableMap getValue(int) -> getValue
    197:197:com.google.common.collect.ImmutableMap keyToIndex() -> keyToIndex
com.google.common.collect.DescendingImmutableSortedMultiset -> com.google.common.collect.DescendingImmutableSortedMultiset:
    30:31:void <init>(com.google.common.collect.ImmutableSortedMultiset) -> <init>
    36:36:int count(java.lang.Object) -> count
    25:25:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    66:66:com.google.common.collect.ImmutableSortedMultiset descendingMultiset() -> descendingMultiset
    25:25:com.google.common.collect.ImmutableSet elementSet() -> elementSet
    25:25:java.util.NavigableSet elementSet() -> elementSet
    25:25:java.util.Set elementSet() -> elementSet
    25:25:java.util.SortedSet elementSet() -> elementSet
    56:56:com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    41:41:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    61:61:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    25:25:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    71:71:com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    81:81:boolean isPartialView() -> isPartialView
    46:46:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    51:51:int size() -> size
    25:25:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    76:76:com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
com.google.common.collect.DescendingImmutableSortedSet -> com.google.common.collect.DescendingImmutableSortedSet:
    32:33:void <init>(com.google.common.collect.ImmutableSortedSet) -> <init>
    97:97:java.lang.Object ceiling(java.lang.Object) -> ceiling
    38:38:boolean contains(java.lang.Object) -> contains
    82:82:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    27:27:java.util.Iterator descendingIterator() -> descendingIterator
    76:76:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    27:27:java.util.NavigableSet descendingSet() -> descendingSet
    70:70:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    92:92:java.lang.Object floor(java.lang.Object) -> floor
    53:53:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    102:102:java.lang.Object higher(java.lang.Object) -> higher
    107:111:int indexOf(java.lang.Object) -> indexOf
    117:117:boolean isPartialView() -> isPartialView
    27:27:java.util.Iterator iterator() -> iterator
    48:48:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    87:87:java.lang.Object lower(java.lang.Object) -> lower
    43:43:int size() -> size
    59:59:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    64:64:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
com.google.common.collect.DescendingMultiset -> com.google.common.collect.DescendingMultiset:
    34:34:void <init>() -> <init>
    41:43:java.util.Comparator comparator() -> comparator
    135:135:java.util.Set createEntrySet() -> createEntrySet
    33:33:java.lang.Object delegate() -> delegate
    33:33:java.util.Collection delegate() -> delegate
    89:89:com.google.common.collect.Multiset delegate() -> delegate
    94:94:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    33:33:java.util.Set elementSet() -> elementSet
    33:33:java.util.SortedSet elementSet() -> elementSet
    52:54:java.util.NavigableSet elementSet() -> elementSet
    113:114:java.util.Set entrySet() -> entrySet
    99:99:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    71:71:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    140:140:java.util.Iterator iterator() -> iterator
    104:104:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    61:61:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    66:66:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    77:79:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    84:84:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    145:145:java.lang.Object[] toArray() -> toArray
    150:150:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    155:155:java.lang.String toString() -> toString
com.google.common.collect.DescendingMultiset$1EntrySetImpl -> com.google.common.collect.DescendingMultiset$1EntrySetImpl:
    119:119:void <init>(com.google.common.collect.DescendingMultiset) -> <init>
    127:127:java.util.Iterator iterator() -> iterator
    122:122:com.google.common.collect.Multiset multiset() -> multiset
    132:132:int size() -> size
com.google.common.collect.DiscreteDomain -> com.google.common.collect.DiscreteDomain:
    46:46:void <init>(boolean,com.google.common.collect.DiscreteDomain$1) -> <init>
    238:238:void <init>() -> <init>
    242:243:void <init>(boolean) -> <init>
    187:187:com.google.common.collect.DiscreteDomain bigIntegers() -> bigIntegers
    54:54:com.google.common.collect.DiscreteDomain integers() -> integers
    115:115:com.google.common.collect.DiscreteDomain longs() -> longs
    320:320:java.lang.Comparable maxValue() -> maxValue
    304:304:java.lang.Comparable minValue() -> minValue
    251:253:java.lang.Comparable offset(java.lang.Comparable,long) -> offset
com.google.common.collect.DiscreteDomain$BigIntegerDomain -> com.google.common.collect.DiscreteDomain$BigIntegerDomain:
    192:199:void <clinit>() -> <clinit>
    195:195:void <init>() -> <init>
    190:190:com.google.common.collect.DiscreteDomain$BigIntegerDomain access$300() -> access$300
    190:190:long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    219:219:long distance(java.math.BigInteger,java.math.BigInteger) -> distance
    190:190:java.lang.Comparable next(java.lang.Comparable) -> next
    203:203:java.math.BigInteger next(java.math.BigInteger) -> next
    190:190:java.lang.Comparable offset(java.lang.Comparable,long) -> offset
    213:214:java.math.BigInteger offset(java.math.BigInteger,long) -> offset
    190:190:java.lang.Comparable previous(java.lang.Comparable) -> previous
    208:208:java.math.BigInteger previous(java.math.BigInteger) -> previous
    223:223:java.lang.Object readResolve() -> readResolve
com.google.common.collect.DiscreteDomain$IntegerDomain -> com.google.common.collect.DiscreteDomain$IntegerDomain:
    58:58:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    57:57:com.google.common.collect.DiscreteDomain$IntegerDomain access$000() -> access$000
    57:57:long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    84:84:long distance(java.lang.Integer,java.lang.Integer) -> distance
    57:57:java.lang.Comparable maxValue() -> maxValue
    94:94:java.lang.Integer maxValue() -> maxValue
    57:57:java.lang.Comparable minValue() -> minValue
    89:89:java.lang.Integer minValue() -> minValue
    57:57:java.lang.Comparable next(java.lang.Comparable) -> next
    66:67:java.lang.Integer next(java.lang.Integer) -> next
    57:57:java.lang.Comparable offset(java.lang.Comparable,long) -> offset
    78:79:java.lang.Integer offset(java.lang.Integer,long) -> offset
    57:57:java.lang.Comparable previous(java.lang.Comparable) -> previous
    72:73:java.lang.Integer previous(java.lang.Integer) -> previous
    98:98:java.lang.Object readResolve() -> readResolve
com.google.common.collect.DiscreteDomain$LongDomain -> com.google.common.collect.DiscreteDomain$LongDomain:
    119:119:void <clinit>() -> <clinit>
    122:122:void <init>() -> <init>
    118:118:com.google.common.collect.DiscreteDomain$LongDomain access$200() -> access$200
    118:118:long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    149:153:long distance(java.lang.Long,java.lang.Long) -> distance
    118:118:java.lang.Comparable maxValue() -> maxValue
    166:166:java.lang.Long maxValue() -> maxValue
    118:118:java.lang.Comparable minValue() -> minValue
    161:161:java.lang.Long minValue() -> minValue
    118:118:java.lang.Comparable next(java.lang.Comparable) -> next
    127:128:java.lang.Long next(java.lang.Long) -> next
    118:118:java.lang.Comparable offset(java.lang.Comparable,long) -> offset
    139:144:java.lang.Long offset(java.lang.Long,long) -> offset
    118:118:java.lang.Comparable previous(java.lang.Comparable) -> previous
    133:134:java.lang.Long previous(java.lang.Long) -> previous
    170:170:java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyContiguousSet -> com.google.common.collect.EmptyContiguousSet:
    32:32:void <init>(com.google.common.collect.DiscreteDomain) -> <init>
    115:115:com.google.common.collect.ImmutableList asList() -> asList
    167:167:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    28:28:java.util.Iterator descendingIterator() -> descendingIterator
    100:100:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    125:127:boolean equals(java.lang.Object) -> equals
    28:28:java.lang.Object first() -> first
    37:37:java.lang.Comparable first() -> first
    28:28:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    28:28:java.util.Iterator iterator() -> iterator
    94:94:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    28:28:java.lang.Object last() -> last
    42:42:java.lang.Comparable last() -> last
    57:57:com.google.common.collect.Range range() -> range
    62:62:com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    28:28:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    28:28:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    161:161:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.EmptyContiguousSet$SerializedForm -> com.google.common.collect.EmptyContiguousSet$SerializedForm:
    144:144:void <init>(com.google.common.collect.DiscreteDomain,com.google.common.collect.EmptyContiguousSet$1) -> <init>
    147:148:void <init>(com.google.common.collect.DiscreteDomain) -> <init>
    152:152:java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableListMultimap -> com.google.common.collect.EmptyImmutableListMultimap:
    28:28:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    35:35:java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableSetMultimap -> com.google.common.collect.EmptyImmutableSetMultimap:
    28:28:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    35:35:java.lang.Object readResolve() -> readResolve
com.google.common.collect.EnumBiMap -> com.google.common.collect.EnumBiMap:
    72:74:void <init>(java.lang.Class,java.lang.Class) -> <init>
    40:40:java.lang.Object checkKey(java.lang.Object) -> checkKey
    108:108:java.lang.Enum checkKey(java.lang.Enum) -> checkKey
    40:40:java.lang.Object checkValue(java.lang.Object) -> checkValue
    113:113:java.lang.Enum checkValue(java.lang.Enum) -> checkValue
    40:40:void clear() -> clear
    40:40:boolean containsValue(java.lang.Object) -> containsValue
    53:53:com.google.common.collect.EnumBiMap create(java.lang.Class,java.lang.Class) -> create
    66:67:com.google.common.collect.EnumBiMap create(java.util.Map) -> create
    40:40:java.util.Set entrySet() -> entrySet
    40:40:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    78:85:java.lang.Class inferKeyType(java.util.Map) -> inferKeyType
    89:93:java.lang.Class inferValueType(java.util.Map) -> inferValueType
    40:40:com.google.common.collect.BiMap inverse() -> inverse
    40:40:java.util.Set keySet() -> keySet
    98:98:java.lang.Class keyType() -> keyType
    40:40:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    40:40:void putAll(java.util.Map) -> putAll
    131:135:void readObject(java.io.ObjectInputStream) -> readObject
    40:40:java.lang.Object remove(java.lang.Object) -> remove
    103:103:java.lang.Class valueType() -> valueType
    40:40:java.util.Set values() -> values
    122:125:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.EnumHashBiMap -> com.google.common.collect.EnumHashBiMap:
    73:76:void <init>(java.lang.Class) -> <init>
    43:43:java.lang.Object checkKey(java.lang.Object) -> checkKey
    83:83:java.lang.Enum checkKey(java.lang.Enum) -> checkKey
    43:43:void clear() -> clear
    43:43:boolean containsValue(java.lang.Object) -> containsValue
    53:53:com.google.common.collect.EnumHashBiMap create(java.lang.Class) -> create
    67:68:com.google.common.collect.EnumHashBiMap create(java.util.Map) -> create
    43:43:java.util.Set entrySet() -> entrySet
    43:43:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    95:95:java.lang.Object forcePut(java.lang.Enum,java.lang.Object) -> forcePut
    43:43:com.google.common.collect.BiMap inverse() -> inverse
    43:43:java.util.Set keySet() -> keySet
    100:100:java.lang.Class keyType() -> keyType
    43:43:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    89:89:java.lang.Object put(java.lang.Enum,java.lang.Object) -> put
    43:43:void putAll(java.util.Map) -> putAll
    117:121:void readObject(java.io.ObjectInputStream) -> readObject
    43:43:java.lang.Object remove(java.lang.Object) -> remove
    43:43:java.util.Set values() -> values
    109:111:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.EnumMultiset -> com.google.common.collect.EnumMultiset:
    89:93:void <init>(java.lang.Class) -> <init>
    47:47:java.lang.Enum[] access$000(com.google.common.collect.EnumMultiset) -> access$000
    47:47:int[] access$100(com.google.common.collect.EnumMultiset) -> access$100
    47:47:int access$210(com.google.common.collect.EnumMultiset) -> access$210
    47:47:long access$322(com.google.common.collect.EnumMultiset,long) -> access$322
    46:46:int add(java.lang.Object,int) -> add
    139:152:int add(java.lang.Enum,int) -> add
    110:112:void checkIsE(java.lang.Object) -> checkIsE
    203:205:void clear() -> clear
    46:46:boolean contains(java.lang.Object) -> contains
    128:132:int count(java.lang.Object) -> count
    51:51:com.google.common.collect.EnumMultiset create(java.lang.Class) -> create
    63:66:com.google.common.collect.EnumMultiset create(java.lang.Iterable) -> create
    77:78:com.google.common.collect.EnumMultiset create(java.lang.Iterable,java.lang.Class) -> create
    118:118:int distinctElements() -> distinctElements
    249:249:java.util.Iterator elementIterator() -> elementIterator
    46:46:java.util.Set elementSet() -> elementSet
    259:259:java.util.Iterator entryIterator() -> entryIterator
    46:46:java.util.Set entrySet() -> entrySet
    97:100:boolean isActuallyE(java.lang.Object) -> isActuallyE
    46:46:boolean isEmpty() -> isEmpty
    279:279:java.util.Iterator iterator() -> iterator
    295:301:void readObject(java.io.ObjectInputStream) -> readObject
    160:178:int remove(java.lang.Object,int) -> remove
    46:46:int setCount(java.lang.Object,int) -> setCount
    46:46:boolean setCount(java.lang.Object,int,int) -> setCount
    187:196:int setCount(java.lang.Enum,int) -> setCount
    123:123:int size() -> size
    284:286:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.EnumMultiset$1 -> com.google.common.collect.EnumMultiset$1:
    249:249:void <init>(com.google.common.collect.EnumMultiset) -> <init>
    249:249:java.lang.Object output(int) -> output
    252:252:java.lang.Enum output(int) -> output
com.google.common.collect.EnumMultiset$2 -> com.google.common.collect.EnumMultiset$2:
    259:259:void <init>(com.google.common.collect.EnumMultiset) -> <init>
    259:259:java.lang.Object output(int) -> output
    262:262:com.google.common.collect.Multiset$Entry output(int) -> output
com.google.common.collect.EnumMultiset$2$1 -> com.google.common.collect.EnumMultiset$2$1:
    262:262:void <init>(com.google.common.collect.EnumMultiset$2,int) -> <init>
    270:270:int getCount() -> getCount
    262:262:java.lang.Object getElement() -> getElement
    265:265:java.lang.Enum getElement() -> getElement
com.google.common.collect.EnumMultiset$Itr -> com.google.common.collect.EnumMultiset$Itr:
    208:210:void <init>(com.google.common.collect.EnumMultiset) -> <init>
    216:217:boolean hasNext() -> hasNext
    226:231:java.lang.Object next() -> next
    237:243:void remove() -> remove
com.google.common.collect.EvictingQueue -> com.google.common.collect.EvictingQueue:
    54:57:void <init>(int) -> <init>
    106:113:boolean add(java.lang.Object) -> add
    120:125:boolean addAll(java.util.Collection) -> addAll
    130:130:boolean contains(java.lang.Object) -> contains
    67:67:com.google.common.collect.EvictingQueue create(int) -> create
    46:46:java.lang.Object delegate() -> delegate
    46:46:java.util.Collection delegate() -> delegate
    82:82:java.util.Queue delegate() -> delegate
    94:94:boolean offer(java.lang.Object) -> offer
    77:77:int remainingCapacity() -> remainingCapacity
    136:136:boolean remove(java.lang.Object) -> remove
com.google.common.collect.ExplicitOrdering -> com.google.common.collect.ExplicitOrdering:
    30:30:void <init>(java.util.List) -> <init>
    33:34:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    39:39:int compare(java.lang.Object,java.lang.Object) -> compare
    52:54:boolean equals(java.lang.Object) -> equals
    61:61:int hashCode() -> hashCode
    43:47:int rank(java.lang.Object) -> rank
    66:66:java.lang.String toString() -> toString
com.google.common.collect.FilteredEntryMultimap -> com.google.common.collect.FilteredEntryMultimap:
    49:51:void <init>(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> <init>
    45:45:boolean access$000(com.google.common.collect.FilteredEntryMultimap,java.lang.Object,java.lang.Object) -> access$000
    114:114:void clear() -> clear
    97:97:boolean containsKey(java.lang.Object) -> containsKey
    139:139:java.util.Map createAsMap() -> createAsMap
    124:124:java.util.Collection createEntries() -> createEntries
    144:144:java.util.Set createKeySet() -> createKeySet
    339:339:com.google.common.collect.Multiset createKeys() -> createKeys
    129:129:java.util.Collection createValues() -> createValues
    134:134:java.util.Iterator entryIterator() -> entryIterator
    61:61:com.google.common.base.Predicate entryPredicate() -> entryPredicate
    88:91:java.util.Collection filterCollection(java.util.Collection,com.google.common.base.Predicate) -> filterCollection
    119:119:java.util.Collection get(java.lang.Object) -> get
    102:102:java.util.Collection removeAll(java.lang.Object) -> removeAll
    148:158:boolean removeEntriesIf(com.google.common.base.Predicate) -> removeEntriesIf
    70:70:boolean satisfies(java.lang.Object,java.lang.Object) -> satisfies
    66:66:int size() -> size
    56:56:com.google.common.collect.Multimap unfiltered() -> unfiltered
    107:109:java.util.Collection unmodifiableEmptyCollection() -> unmodifiableEmptyCollection
com.google.common.collect.FilteredEntryMultimap$AsMap -> com.google.common.collect.FilteredEntryMultimap$AsMap:
    167:167:void <init>(com.google.common.collect.FilteredEntryMultimap) -> <init>
    175:175:void clear() -> clear
    170:170:boolean containsKey(java.lang.Object) -> containsKey
    288:288:java.util.Set createEntrySet() -> createEntrySet
    239:239:java.util.Set createKeySet() -> createKeySet
    333:333:java.util.Collection createValues() -> createValues
    166:166:java.lang.Object get(java.lang.Object) -> get
    180:187:java.util.Collection get(java.lang.Object) -> get
    166:166:java.lang.Object remove(java.lang.Object) -> remove
    192:212:java.util.Collection remove(java.lang.Object) -> remove
com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl -> com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl:
    245:245:void <init>(com.google.common.collect.FilteredEntryMultimap$AsMap) -> <init>
    253:253:java.util.Iterator iterator() -> iterator
    248:248:java.util.Map map() -> map
    275:275:boolean removeAll(java.util.Collection) -> removeAll
    280:280:boolean retainAll(java.util.Collection) -> retainAll
    285:285:int size() -> size
com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl$1 -> com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl$1:
    253:255:void <init>(com.google.common.collect.FilteredEntryMultimap$AsMap$1EntrySetImpl) -> <init>
    253:253:java.lang.Object computeNext() -> computeNext
    259:268:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.FilteredEntryMultimap$AsMap$1KeySetImpl -> com.google.common.collect.FilteredEntryMultimap$AsMap$1KeySetImpl:
    220:221:void <init>(com.google.common.collect.FilteredEntryMultimap$AsMap) -> <init>
    236:236:boolean remove(java.lang.Object) -> remove
    226:226:boolean removeAll(java.util.Collection) -> removeAll
    231:231:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.FilteredEntryMultimap$AsMap$1ValuesImpl -> com.google.common.collect.FilteredEntryMultimap$AsMap$1ValuesImpl:
    295:296:void <init>(com.google.common.collect.FilteredEntryMultimap$AsMap) -> <init>
    301:314:boolean remove(java.lang.Object) -> remove
    325:325:boolean removeAll(java.util.Collection) -> removeAll
    330:330:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.FilteredEntryMultimap$Keys -> com.google.common.collect.FilteredEntryMultimap$Keys:
    344:345:void <init>(com.google.common.collect.FilteredEntryMultimap) -> <init>
    376:376:java.util.Set entrySet() -> entrySet
    350:367:int remove(java.lang.Object,int) -> remove
com.google.common.collect.FilteredEntryMultimap$Keys$1 -> com.google.common.collect.FilteredEntryMultimap$Keys$1:
    376:376:void <init>(com.google.common.collect.FilteredEntryMultimap$Keys) -> <init>
    385:385:java.util.Iterator iterator() -> iterator
    380:380:com.google.common.collect.Multiset multiset() -> multiset
    406:406:boolean removeAll(java.util.Collection) -> removeAll
    394:394:boolean removeEntriesIf(com.google.common.base.Predicate) -> removeEntriesIf
    411:411:boolean retainAll(java.util.Collection) -> retainAll
    390:390:int size() -> size
com.google.common.collect.FilteredEntryMultimap$Keys$1$1 -> com.google.common.collect.FilteredEntryMultimap$Keys$1$1:
    395:395:void <init>(com.google.common.collect.FilteredEntryMultimap$Keys$1,com.google.common.base.Predicate) -> <init>
    395:395:boolean apply(java.lang.Object) -> apply
    398:399:boolean apply(java.util.Map$Entry) -> apply
com.google.common.collect.FilteredEntryMultimap$ValuePredicate -> com.google.common.collect.FilteredEntryMultimap$ValuePredicate:
    76:77:void <init>(com.google.common.collect.FilteredEntryMultimap,java.lang.Object) -> <init>
    82:82:boolean apply(java.lang.Object) -> apply
com.google.common.collect.FilteredEntrySetMultimap -> com.google.common.collect.FilteredEntrySetMultimap:
    34:34:void <init>(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> <init>
    29:29:java.util.Collection createEntries() -> createEntries
    59:59:java.util.Set createEntries() -> createEntries
    29:29:java.util.Collection entries() -> entries
    64:64:java.util.Set entries() -> entries
    29:29:java.util.Collection get(java.lang.Object) -> get
    44:44:java.util.Set get(java.lang.Object) -> get
    29:29:java.util.Collection removeAll(java.lang.Object) -> removeAll
    49:49:java.util.Set removeAll(java.lang.Object) -> removeAll
    29:29:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    54:54:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    29:29:com.google.common.collect.Multimap unfiltered() -> unfiltered
    39:39:com.google.common.collect.SetMultimap unfiltered() -> unfiltered
com.google.common.collect.FilteredKeyListMultimap -> com.google.common.collect.FilteredKeyListMultimap:
    33:33:void <init>(com.google.common.collect.ListMultimap,com.google.common.base.Predicate) -> <init>
    29:29:java.util.Collection get(java.lang.Object) -> get
    43:43:java.util.List get(java.lang.Object) -> get
    29:29:java.util.Collection removeAll(java.lang.Object) -> removeAll
    48:48:java.util.List removeAll(java.lang.Object) -> removeAll
    29:29:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    53:53:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    29:29:com.google.common.collect.Multimap unfiltered() -> unfiltered
    38:38:com.google.common.collect.ListMultimap unfiltered() -> unfiltered
com.google.common.collect.FilteredKeyMultimap -> com.google.common.collect.FilteredKeyMultimap:
    43:45:void <init>(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> <init>
    92:92:void clear() -> clear
    69:72:boolean containsKey(java.lang.Object) -> containsKey
    213:213:java.util.Map createAsMap() -> createAsMap
    181:181:java.util.Collection createEntries() -> createEntries
    97:97:java.util.Set createKeySet() -> createKeySet
    218:218:com.google.common.collect.Multiset createKeys() -> createKeys
    208:208:java.util.Collection createValues() -> createValues
    176:176:java.util.Iterator entryIterator() -> entryIterator
    55:55:com.google.common.base.Predicate entryPredicate() -> entryPredicate
    102:107:java.util.Collection get(java.lang.Object) -> get
    79:79:java.util.Collection removeAll(java.lang.Object) -> removeAll
    61:62:int size() -> size
    50:50:com.google.common.collect.Multimap unfiltered() -> unfiltered
    83:86:java.util.Collection unmodifiableEmptyCollection() -> unmodifiableEmptyCollection
com.google.common.collect.FilteredKeyMultimap$AddRejectingList -> com.google.common.collect.FilteredKeyMultimap$AddRejectingList:
    138:139:void <init>(java.lang.Object) -> <init>
    144:144:boolean add(java.lang.Object) -> add
    150:151:void add(int,java.lang.Object) -> add
    156:156:boolean addAll(java.util.Collection) -> addAll
    163:165:boolean addAll(int,java.util.Collection) -> addAll
    135:135:java.lang.Object delegate() -> delegate
    135:135:java.util.Collection delegate() -> delegate
    170:170:java.util.List delegate() -> delegate
com.google.common.collect.FilteredKeyMultimap$AddRejectingSet -> com.google.common.collect.FilteredKeyMultimap$AddRejectingSet:
    114:115:void <init>(java.lang.Object) -> <init>
    120:120:boolean add(java.lang.Object) -> add
    125:126:boolean addAll(java.util.Collection) -> addAll
    111:111:java.lang.Object delegate() -> delegate
    111:111:java.util.Collection delegate() -> delegate
    131:131:java.util.Set delegate() -> delegate
com.google.common.collect.FilteredKeyMultimap$Entries -> com.google.common.collect.FilteredKeyMultimap$Entries:
    185:185:void <init>(com.google.common.collect.FilteredKeyMultimap) -> <init>
    184:184:java.lang.Object delegate() -> delegate
    188:188:java.util.Collection delegate() -> delegate
    194:199:boolean remove(java.lang.Object) -> remove
com.google.common.collect.FilteredKeySetMultimap -> com.google.common.collect.FilteredKeySetMultimap:
    35:35:void <init>(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> <init>
    30:30:java.util.Collection createEntries() -> createEntries
    65:65:java.util.Set createEntries() -> createEntries
    30:30:java.util.Collection entries() -> entries
    60:60:java.util.Set entries() -> entries
    30:30:java.util.Collection get(java.lang.Object) -> get
    45:45:java.util.Set get(java.lang.Object) -> get
    30:30:java.util.Collection removeAll(java.lang.Object) -> removeAll
    50:50:java.util.Set removeAll(java.lang.Object) -> removeAll
    30:30:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    55:55:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    30:30:com.google.common.collect.Multimap unfiltered() -> unfiltered
    40:40:com.google.common.collect.SetMultimap unfiltered() -> unfiltered
com.google.common.collect.FilteredKeySetMultimap$EntrySet -> com.google.common.collect.FilteredKeySetMultimap$EntrySet:
    68:68:void <init>(com.google.common.collect.FilteredKeySetMultimap) -> <init>
    76:76:boolean equals(java.lang.Object) -> equals
    71:71:int hashCode() -> hashCode
com.google.common.collect.FilteredMultimapValues -> com.google.common.collect.FilteredMultimapValues:
    39:40:void <init>(com.google.common.collect.FilteredMultimap) -> <init>
    93:93:void clear() -> clear
    50:50:boolean contains(java.lang.Object) -> contains
    45:45:java.util.Iterator iterator() -> iterator
    60:65:boolean remove(java.lang.Object) -> remove
    74:78:boolean removeAll(java.util.Collection) -> removeAll
    83:88:boolean retainAll(java.util.Collection) -> retainAll
    55:55:int size() -> size
com.google.common.collect.FilteredSetMultimap$-CC -> com.google.common.collect.FilteredSetMultimap$-CC:
    26:26:com.google.common.collect.Multimap com.google.common.collect.FilteredSetMultimap.unfiltered() -> $default$unfiltered
com.google.common.collect.FluentIterable -> com.google.common.collect.FluentIterable:
    121:122:void <init>() -> <init>
    125:127:void <init>(java.lang.Iterable) -> <init>
    456:456:boolean allMatch(com.google.common.base.Predicate) -> allMatch
    446:446:boolean anyMatch(com.google.common.base.Predicate) -> anyMatch
    396:396:com.google.common.collect.FluentIterable append(java.lang.Iterable) -> append
    409:409:com.google.common.collect.FluentIterable append(java.lang.Object[]) -> append
    194:194:com.google.common.collect.FluentIterable concat(java.lang.Iterable,java.lang.Iterable) -> concat
    213:213:com.google.common.collect.FluentIterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    236:236:com.google.common.collect.FluentIterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    256:256:com.google.common.collect.FluentIterable concat(java.lang.Iterable[]) -> concat
    276:277:com.google.common.collect.FluentIterable concat(java.lang.Iterable) -> concat
    288:291:com.google.common.collect.FluentIterable concatNoDefensiveCopy(java.lang.Iterable[]) -> concatNoDefensiveCopy
    359:359:boolean contains(java.lang.Object) -> contains
    794:800:java.util.Collection copyInto(java.util.Collection) -> copyInto
    380:380:com.google.common.collect.FluentIterable cycle() -> cycle
    419:419:com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate) -> filter
    437:437:com.google.common.collect.FluentIterable filter(java.lang.Class) -> filter
    515:516:com.google.common.base.Optional first() -> first
    469:469:com.google.common.base.Optional firstMatch(com.google.common.base.Predicate) -> firstMatch
    142:144:com.google.common.collect.FluentIterable from(java.lang.Iterable) -> from
    164:164:com.google.common.collect.FluentIterable from(java.lang.Object[]) -> from
    177:177:com.google.common.collect.FluentIterable from(com.google.common.collect.FluentIterable) -> from
    835:835:java.lang.Object get(int) -> get
    131:131:java.lang.Iterable getDelegate() -> getDelegate
    725:725:com.google.common.collect.ImmutableListMultimap index(com.google.common.base.Function) -> index
    606:606:boolean isEmpty() -> isEmpty
    818:818:java.lang.String join(com.google.common.base.Joiner) -> join
    534:559:com.google.common.base.Optional last() -> last
    597:597:com.google.common.collect.FluentIterable limit(int) -> limit
    315:315:com.google.common.collect.FluentIterable of() -> of
    328:328:com.google.common.collect.FluentIterable of(java.lang.Object,java.lang.Object[]) -> of
    349:349:int size() -> size
    582:582:com.google.common.collect.FluentIterable skip(int) -> skip
    778:778:java.lang.Object[] toArray(java.lang.Class) -> toArray
    620:620:com.google.common.collect.ImmutableList toList() -> toList
    703:703:com.google.common.collect.ImmutableMap toMap(com.google.common.base.Function) -> toMap
    682:682:com.google.common.collect.ImmutableMultiset toMultiset() -> toMultiset
    651:651:com.google.common.collect.ImmutableSet toSet() -> toSet
    637:637:com.google.common.collect.ImmutableList toSortedList(java.util.Comparator) -> toSortedList
    669:669:com.google.common.collect.ImmutableSortedSet toSortedSet(java.util.Comparator) -> toSortedSet
    340:340:java.lang.String toString() -> toString
    483:483:com.google.common.collect.FluentIterable transform(com.google.common.base.Function) -> transform
    501:501:com.google.common.collect.FluentIterable transformAndConcat(com.google.common.base.Function) -> transformAndConcat
    761:761:com.google.common.collect.ImmutableMap uniqueIndex(com.google.common.base.Function) -> uniqueIndex
com.google.common.collect.FluentIterable$1 -> com.google.common.collect.FluentIterable$1:
    144:144:void <init>(java.lang.Iterable,java.lang.Iterable) -> <init>
    147:147:java.util.Iterator iterator() -> iterator
com.google.common.collect.FluentIterable$2 -> com.google.common.collect.FluentIterable$2:
    277:277:void <init>(java.lang.Iterable) -> <init>
    280:280:java.util.Iterator iterator() -> iterator
com.google.common.collect.FluentIterable$3 -> com.google.common.collect.FluentIterable$3:
    291:291:void <init>(java.lang.Iterable[]) -> <init>
    294:294:java.util.Iterator iterator() -> iterator
com.google.common.collect.FluentIterable$3$1 -> com.google.common.collect.FluentIterable$3$1:
    296:296:void <init>(com.google.common.collect.FluentIterable$3,int) -> <init>
    296:296:java.lang.Object get(int) -> get
    299:299:java.util.Iterator get(int) -> get
com.google.common.collect.FluentIterable$FromIterableFunction -> com.google.common.collect.FluentIterable$FromIterableFunction:
    839:839:void <init>() -> <init>
    839:839:java.lang.Object apply(java.lang.Object) -> apply
    842:842:com.google.common.collect.FluentIterable apply(java.lang.Iterable) -> apply
com.google.common.collect.ForwardingBlockingDeque -> com.google.common.collect.ForwardingBlockingDeque:
    53:53:void <init>() -> <init>
    47:47:java.lang.Object delegate() -> delegate
    47:47:java.util.Collection delegate() -> delegate
    47:47:java.util.Deque delegate() -> delegate
    47:47:java.util.Queue delegate() -> delegate
    125:125:int drainTo(java.util.Collection) -> drainTo
    130:130:int drainTo(java.util.Collection,int) -> drainTo
    110:110:boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    75:75:boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    80:80:boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    120:120:java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    95:95:java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    100:100:java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    105:105:void put(java.lang.Object) -> put
    65:65:void putFirst(java.lang.Object) -> putFirst
    70:70:void putLast(java.lang.Object) -> putLast
    60:60:int remainingCapacity() -> remainingCapacity
    115:115:java.lang.Object take() -> take
    85:85:java.lang.Object takeFirst() -> takeFirst
    90:90:java.lang.Object takeLast() -> takeLast
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    53:53:void <init>() -> <init>
    87:87:boolean add(java.lang.Object) -> add
    104:104:boolean addAll(java.util.Collection) -> addAll
    115:115:void clear() -> clear
    81:81:boolean contains(java.lang.Object) -> contains
    98:98:boolean containsAll(java.util.Collection) -> containsAll
    48:48:java.lang.Object delegate() -> delegate
    76:76:boolean isEmpty() -> isEmpty
    60:60:java.util.Iterator iterator() -> iterator
    93:93:boolean remove(java.lang.Object) -> remove
    71:71:boolean removeAll(java.util.Collection) -> removeAll
    110:110:boolean retainAll(java.util.Collection) -> retainAll
    65:65:int size() -> size
    158:158:boolean standardAddAll(java.util.Collection) -> standardAddAll
    209:209:void standardClear() -> standardClear
    137:137:boolean standardContains(java.lang.Object) -> standardContains
    148:148:boolean standardContainsAll(java.util.Collection) -> standardContainsAll
    220:220:boolean standardIsEmpty() -> standardIsEmpty
    169:172:boolean standardRemove(java.lang.Object) -> standardRemove
    187:187:boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    198:198:boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    242:243:java.lang.Object[] standardToArray() -> standardToArray
    254:254:java.lang.Object[] standardToArray(java.lang.Object[]) -> standardToArray
    231:231:java.lang.String standardToString() -> standardToString
    120:120:java.lang.Object[] toArray() -> toArray
    126:126:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ForwardingConcurrentMap -> com.google.common.collect.ForwardingConcurrentMap:
    43:43:void <init>() -> <init>
    38:38:java.lang.Object delegate() -> delegate
    38:38:java.util.Map delegate() -> delegate
    51:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    57:57:boolean remove(java.lang.Object,java.lang.Object) -> remove
    63:63:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    69:69:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
com.google.common.collect.ForwardingDeque -> com.google.common.collect.ForwardingDeque:
    45:45:void <init>() -> <init>
    52:52:void addFirst(java.lang.Object) -> addFirst
    57:57:void addLast(java.lang.Object) -> addLast
    41:41:java.lang.Object delegate() -> delegate
    41:41:java.util.Collection delegate() -> delegate
    41:41:java.util.Queue delegate() -> delegate
    62:62:java.util.Iterator descendingIterator() -> descendingIterator
    67:67:java.lang.Object getFirst() -> getFirst
    72:72:java.lang.Object getLast() -> getLast
    78:78:boolean offerFirst(java.lang.Object) -> offerFirst
    84:84:boolean offerLast(java.lang.Object) -> offerLast
    89:89:java.lang.Object peekFirst() -> peekFirst
    94:94:java.lang.Object peekLast() -> peekLast
    100:100:java.lang.Object pollFirst() -> pollFirst
    106:106:java.lang.Object pollLast() -> pollLast
    112:112:java.lang.Object pop() -> pop
    117:117:void push(java.lang.Object) -> push
    123:123:java.lang.Object removeFirst() -> removeFirst
    135:135:boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    129:129:java.lang.Object removeLast() -> removeLast
    141:141:boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
com.google.common.collect.ForwardingImmutableCollection -> com.google.common.collect.ForwardingImmutableCollection:
    28:28:void <init>() -> <init>
com.google.common.collect.ForwardingImmutableList -> com.google.common.collect.ForwardingImmutableList:
    28:28:void <init>() -> <init>
com.google.common.collect.ForwardingImmutableMap -> com.google.common.collect.ForwardingImmutableMap:
    28:28:void <init>() -> <init>
com.google.common.collect.ForwardingImmutableSet -> com.google.common.collect.ForwardingImmutableSet:
    28:28:void <init>() -> <init>
com.google.common.collect.ForwardingIterator -> com.google.common.collect.ForwardingIterator:
    42:42:void <init>() -> <init>
    38:38:java.lang.Object delegate() -> delegate
    49:49:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    60:60:void remove() -> remove
com.google.common.collect.ForwardingList -> com.google.common.collect.ForwardingList:
    58:58:void <init>() -> <init>
    65:65:void add(int,java.lang.Object) -> add
    71:71:boolean addAll(int,java.util.Collection) -> addAll
    53:53:java.lang.Object delegate() -> delegate
    53:53:java.util.Collection delegate() -> delegate
    118:118:boolean equals(java.lang.Object) -> equals
    76:76:java.lang.Object get(int) -> get
    123:123:int hashCode() -> hashCode
    81:81:int indexOf(java.lang.Object) -> indexOf
    86:86:int lastIndexOf(java.lang.Object) -> lastIndexOf
    91:91:java.util.ListIterator listIterator() -> listIterator
    96:96:java.util.ListIterator listIterator(int) -> listIterator
    102:102:java.lang.Object remove(int) -> remove
    108:108:java.lang.Object set(int,java.lang.Object) -> set
    134:134:boolean standardAdd(java.lang.Object) -> standardAdd
    146:146:boolean standardAddAll(int,java.lang.Iterable) -> standardAddAll
    226:226:boolean standardEquals(java.lang.Object) -> standardEquals
    238:238:int standardHashCode() -> standardHashCode
    157:157:int standardIndexOf(java.lang.Object) -> standardIndexOf
    179:179:java.util.Iterator standardIterator() -> standardIterator
    168:168:int standardLastIndexOf(java.lang.Object) -> standardLastIndexOf
    190:190:java.util.ListIterator standardListIterator() -> standardListIterator
    203:203:java.util.ListIterator standardListIterator(int) -> standardListIterator
    214:214:java.util.List standardSubList(int,int) -> standardSubList
    113:113:java.util.List subList(int,int) -> subList
com.google.common.collect.ForwardingListIterator -> com.google.common.collect.ForwardingListIterator:
    43:43:void <init>() -> <init>
    50:50:void add(java.lang.Object) -> add
    38:38:java.lang.Object delegate() -> delegate
    38:38:java.util.Iterator delegate() -> delegate
    55:55:boolean hasPrevious() -> hasPrevious
    60:60:int nextIndex() -> nextIndex
    66:66:java.lang.Object previous() -> previous
    71:71:int previousIndex() -> previousIndex
    76:76:void set(java.lang.Object) -> set
com.google.common.collect.ForwardingListMultimap -> com.google.common.collect.ForwardingListMultimap:
    41:41:void <init>() -> <init>
    36:36:com.google.common.collect.Multimap delegate() -> delegate
    36:36:java.lang.Object delegate() -> delegate
    36:36:java.util.Collection get(java.lang.Object) -> get
    48:48:java.util.List get(java.lang.Object) -> get
    36:36:java.util.Collection removeAll(java.lang.Object) -> removeAll
    54:54:java.util.List removeAll(java.lang.Object) -> removeAll
    36:36:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    60:60:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.ForwardingMap -> com.google.common.collect.ForwardingMap:
    62:62:void <init>() -> <init>
    85:85:void clear() -> clear
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    95:95:boolean containsValue(java.lang.Object) -> containsValue
    57:57:java.lang.Object delegate() -> delegate
    126:126:java.util.Set entrySet() -> entrySet
    131:131:boolean equals(java.lang.Object) -> equals
    100:100:java.lang.Object get(java.lang.Object) -> get
    136:136:int hashCode() -> hashCode
    74:74:boolean isEmpty() -> isEmpty
    116:116:java.util.Set keySet() -> keySet
    106:106:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    111:111:void putAll(java.util.Map) -> putAll
    80:80:java.lang.Object remove(java.lang.Object) -> remove
    69:69:int size() -> size
    182:182:void standardClear() -> standardClear
    211:211:boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    239:239:boolean standardContainsValue(java.lang.Object) -> standardContainsValue
    281:281:boolean standardEquals(java.lang.Object) -> standardEquals
    292:292:int standardHashCode() -> standardHashCode
    270:270:boolean standardIsEmpty() -> standardIsEmpty
    147:147:void standardPutAll(java.util.Map) -> standardPutAll
    162:167:java.lang.Object standardRemove(java.lang.Object) -> standardRemove
    303:303:java.lang.String standardToString() -> standardToString
    121:121:java.util.Collection values() -> values
com.google.common.collect.ForwardingMap$StandardEntrySet -> com.google.common.collect.ForwardingMap$StandardEntrySet:
    254:254:void <init>(com.google.common.collect.ForwardingMap) -> <init>
    258:258:java.util.Map map() -> map
com.google.common.collect.ForwardingMap$StandardKeySet -> com.google.common.collect.ForwardingMap$StandardKeySet:
    197:198:void <init>(com.google.common.collect.ForwardingMap) -> <init>
com.google.common.collect.ForwardingMap$StandardValues -> com.google.common.collect.ForwardingMap$StandardValues:
    226:227:void <init>(com.google.common.collect.ForwardingMap) -> <init>
com.google.common.collect.ForwardingMapEntry -> com.google.common.collect.ForwardingMapEntry:
    54:54:void <init>() -> <init>
    49:49:java.lang.Object delegate() -> delegate
    76:76:boolean equals(java.lang.Object) -> equals
    61:61:java.lang.Object getKey() -> getKey
    66:66:java.lang.Object getValue() -> getValue
    81:81:int hashCode() -> hashCode
    71:71:java.lang.Object setValue(java.lang.Object) -> setValue
    92:95:boolean standardEquals(java.lang.Object) -> standardEquals
    108:110:int standardHashCode() -> standardHashCode
    122:122:java.lang.String standardToString() -> standardToString
com.google.common.collect.ForwardingMultimap -> com.google.common.collect.ForwardingMultimap:
    43:43:void <init>() -> <init>
    50:50:java.util.Map asMap() -> asMap
    55:55:void clear() -> clear
    60:60:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    65:65:boolean containsKey(java.lang.Object) -> containsKey
    70:70:boolean containsValue(java.lang.Object) -> containsValue
    39:39:java.lang.Object delegate() -> delegate
    75:75:java.util.Collection entries() -> entries
    146:146:boolean equals(java.lang.Object) -> equals
    80:80:java.util.Collection get(java.lang.Object) -> get
    151:151:int hashCode() -> hashCode
    85:85:boolean isEmpty() -> isEmpty
    95:95:java.util.Set keySet() -> keySet
    90:90:com.google.common.collect.Multiset keys() -> keys
    101:101:boolean put(java.lang.Object,java.lang.Object) -> put
    107:107:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    113:113:boolean putAll(com.google.common.collect.Multimap) -> putAll
    119:119:boolean remove(java.lang.Object,java.lang.Object) -> remove
    125:125:java.util.Collection removeAll(java.lang.Object) -> removeAll
    131:131:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    136:136:int size() -> size
    141:141:java.util.Collection values() -> values
com.google.common.collect.ForwardingMultiset -> com.google.common.collect.ForwardingMultiset:
    54:54:void <init>() -> <init>
    67:67:int add(java.lang.Object,int) -> add
    61:61:int count(java.lang.Object) -> count
    50:50:java.lang.Object delegate() -> delegate
    50:50:java.util.Collection delegate() -> delegate
    78:78:java.util.Set elementSet() -> elementSet
    83:83:java.util.Set entrySet() -> entrySet
    88:88:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
    73:73:int remove(java.lang.Object,int) -> remove
    99:99:int setCount(java.lang.Object,int) -> setCount
    105:105:boolean setCount(java.lang.Object,int,int) -> setCount
    156:156:boolean standardAdd(java.lang.Object) -> standardAdd
    170:170:boolean standardAddAll(java.util.Collection) -> standardAddAll
    128:128:void standardClear() -> standardClear
    116:116:boolean standardContains(java.lang.Object) -> standardContains
    140:142:int standardCount(java.lang.Object) -> standardCount
    289:289:boolean standardEquals(java.lang.Object) -> standardEquals
    300:300:int standardHashCode() -> standardHashCode
    267:267:java.util.Iterator standardIterator() -> standardIterator
    182:182:boolean standardRemove(java.lang.Object) -> standardRemove
    194:194:boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    206:206:boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    218:218:int standardSetCount(java.lang.Object,int) -> standardSetCount
    229:229:boolean standardSetCount(java.lang.Object,int,int) -> standardSetCount
    278:278:int standardSize() -> standardSize
    312:312:java.lang.String standardToString() -> standardToString
com.google.common.collect.ForwardingMultiset$StandardElementSet -> com.google.common.collect.ForwardingMultiset$StandardElementSet:
    246:246:void <init>(com.google.common.collect.ForwardingMultiset) -> <init>
    255:255:java.util.Iterator iterator() -> iterator
    250:250:com.google.common.collect.Multiset multiset() -> multiset
com.google.common.collect.ForwardingNavigableMap -> com.google.common.collect.ForwardingNavigableMap:
    61:61:void <init>() -> <init>
    124:124:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    138:138:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    56:56:java.lang.Object delegate() -> delegate
    56:56:java.util.Map delegate() -> delegate
    56:56:java.util.SortedMap delegate() -> delegate
    344:344:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    263:263:java.util.NavigableMap descendingMap() -> descendingMap
    180:180:java.util.Map$Entry firstEntry() -> firstEntry
    96:96:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    110:110:java.lang.Object floorKey(java.lang.Object) -> floorKey
    376:376:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    152:152:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    166:166:java.lang.Object higherKey(java.lang.Object) -> higherKey
    208:208:java.util.Map$Entry lastEntry() -> lastEntry
    68:68:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    82:82:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    323:323:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    235:235:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    249:249:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    133:133:java.util.Map$Entry standardCeilingEntry(java.lang.Object) -> standardCeilingEntry
    147:147:java.lang.Object standardCeilingKey(java.lang.Object) -> standardCeilingKey
    356:356:java.util.NavigableSet standardDescendingKeySet() -> standardDescendingKeySet
    189:189:java.util.Map$Entry standardFirstEntry() -> standardFirstEntry
    198:202:java.lang.Object standardFirstKey() -> standardFirstKey
    105:105:java.util.Map$Entry standardFloorEntry(java.lang.Object) -> standardFloorEntry
    119:119:java.lang.Object standardFloorKey(java.lang.Object) -> standardFloorKey
    390:390:java.util.SortedMap standardHeadMap(java.lang.Object) -> standardHeadMap
    161:161:java.util.Map$Entry standardHigherEntry(java.lang.Object) -> standardHigherEntry
    175:175:java.lang.Object standardHigherKey(java.lang.Object) -> standardHigherKey
    217:217:java.util.Map$Entry standardLastEntry() -> standardLastEntry
    225:229:java.lang.Object standardLastKey() -> standardLastKey
    77:77:java.util.Map$Entry standardLowerEntry(java.lang.Object) -> standardLowerEntry
    91:91:java.lang.Object standardLowerKey(java.lang.Object) -> standardLowerKey
    244:244:java.util.Map$Entry standardPollFirstEntry() -> standardPollFirstEntry
    258:258:java.util.Map$Entry standardPollLastEntry() -> standardPollLastEntry
    366:366:java.util.SortedMap standardSubMap(java.lang.Object,java.lang.Object) -> standardSubMap
    399:399:java.util.SortedMap standardTailMap(java.lang.Object) -> standardTailMap
    371:371:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    381:381:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap -> com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap:
    280:280:void <init>(com.google.common.collect.ForwardingNavigableMap) -> <init>
    289:289:java.util.Iterator entryIterator() -> entryIterator
    284:284:java.util.NavigableMap forward() -> forward
com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1 -> com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1:
    289:291:void <init>(com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap) -> <init>
    295:295:boolean hasNext() -> hasNext
    289:289:java.lang.Object next() -> next
    300:308:java.util.Map$Entry next() -> next
    313:315:void remove() -> remove
com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet -> com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet:
    337:338:void <init>(com.google.common.collect.ForwardingNavigableMap) -> <init>
com.google.common.collect.ForwardingNavigableSet -> com.google.common.collect.ForwardingNavigableSet:
    56:56:void <init>() -> <init>
    91:91:java.lang.Object ceiling(java.lang.Object) -> ceiling
    51:51:java.lang.Object delegate() -> delegate
    51:51:java.util.Collection delegate() -> delegate
    51:51:java.util.Set delegate() -> delegate
    51:51:java.util.SortedSet delegate() -> delegate
    177:177:java.util.Iterator descendingIterator() -> descendingIterator
    155:155:java.util.NavigableSet descendingSet() -> descendingSet
    77:77:java.lang.Object floor(java.lang.Object) -> floor
    210:210:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    105:105:java.lang.Object higher(java.lang.Object) -> higher
    63:63:java.lang.Object lower(java.lang.Object) -> lower
    119:119:java.lang.Object pollFirst() -> pollFirst
    133:133:java.lang.Object pollLast() -> pollLast
    100:100:java.lang.Object standardCeiling(java.lang.Object) -> standardCeiling
    146:146:java.lang.Object standardFirst() -> standardFirst
    86:86:java.lang.Object standardFloor(java.lang.Object) -> standardFloor
    219:219:java.util.SortedSet standardHeadSet(java.lang.Object) -> standardHeadSet
    114:114:java.lang.Object standardHigher(java.lang.Object) -> standardHigher
    150:150:java.lang.Object standardLast() -> standardLast
    72:72:java.lang.Object standardLower(java.lang.Object) -> standardLower
    128:128:java.lang.Object standardPollFirst() -> standardPollFirst
    142:142:java.lang.Object standardPollLast() -> standardPollLast
    194:194:java.util.NavigableSet standardSubSet(java.lang.Object,boolean,java.lang.Object,boolean) -> standardSubSet
    205:205:java.util.SortedSet standardSubSet(java.lang.Object,java.lang.Object) -> standardSubSet
    233:233:java.util.SortedSet standardTailSet(java.lang.Object) -> standardTailSet
    183:183:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    224:224:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet -> com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet:
    170:171:void <init>(com.google.common.collect.ForwardingNavigableSet) -> <init>
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    50:50:void <init>() -> <init>
    63:63:java.lang.String toString() -> toString
com.google.common.collect.ForwardingQueue -> com.google.common.collect.ForwardingQueue:
    50:50:void <init>() -> <init>
    46:46:java.lang.Object delegate() -> delegate
    46:46:java.util.Collection delegate() -> delegate
    80:80:java.lang.Object element() -> element
    58:58:boolean offer(java.lang.Object) -> offer
    75:75:java.lang.Object peek() -> peek
    64:64:java.lang.Object poll() -> poll
    70:70:java.lang.Object remove() -> remove
    91:91:boolean standardOffer(java.lang.Object) -> standardOffer
    105:105:java.lang.Object standardPeek() -> standardPeek
    119:119:java.lang.Object standardPoll() -> standardPoll
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    53:53:void <init>() -> <init>
    48:48:java.lang.Object delegate() -> delegate
    48:48:java.util.Collection delegate() -> delegate
    60:60:boolean equals(java.lang.Object) -> equals
    65:65:int hashCode() -> hashCode
    88:88:boolean standardEquals(java.lang.Object) -> standardEquals
    98:98:int standardHashCode() -> standardHashCode
    77:77:boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
com.google.common.collect.ForwardingSetMultimap -> com.google.common.collect.ForwardingSetMultimap:
    38:38:void <init>() -> <init>
    37:37:com.google.common.collect.Multimap delegate() -> delegate
    37:37:java.lang.Object delegate() -> delegate
    37:37:java.util.Collection entries() -> entries
    46:46:java.util.Set entries() -> entries
    37:37:java.util.Collection get(java.lang.Object) -> get
    51:51:java.util.Set get(java.lang.Object) -> get
    37:37:java.util.Collection removeAll(java.lang.Object) -> removeAll
    57:57:java.util.Set removeAll(java.lang.Object) -> removeAll
    37:37:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    63:63:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.ForwardingSortedMap -> com.google.common.collect.ForwardingSortedMap:
    59:59:void <init>() -> <init>
    66:66:java.util.Comparator comparator() -> comparator
    53:53:java.lang.Object delegate() -> delegate
    53:53:java.util.Map delegate() -> delegate
    71:71:java.lang.Object firstKey() -> firstKey
    76:76:java.util.SortedMap headMap(java.lang.Object) -> headMap
    81:81:java.lang.Object lastKey() -> lastKey
    134:135:boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    150:151:java.util.SortedMap standardSubMap(java.lang.Object,java.lang.Object) -> standardSubMap
    86:86:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    91:91:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    112:116:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
com.google.common.collect.ForwardingSortedMap$StandardKeySet -> com.google.common.collect.ForwardingSortedMap$StandardKeySet:
    104:105:void <init>(com.google.common.collect.ForwardingSortedMap) -> <init>
com.google.common.collect.ForwardingSortedMultiset -> com.google.common.collect.ForwardingSortedMultiset:
    50:50:void <init>() -> <init>
    82:82:java.util.Comparator comparator() -> comparator
    45:45:com.google.common.collect.Multiset delegate() -> delegate
    45:45:java.lang.Object delegate() -> delegate
    45:45:java.util.Collection delegate() -> delegate
    87:87:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    45:45:java.util.Set elementSet() -> elementSet
    45:45:java.util.SortedSet elementSet() -> elementSet
    57:57:java.util.NavigableSet elementSet() -> elementSet
    114:114:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    200:200:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    134:134:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    155:155:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    177:177:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    124:129:com.google.common.collect.Multiset$Entry standardFirstEntry() -> standardFirstEntry
    145:150:com.google.common.collect.Multiset$Entry standardLastEntry() -> standardLastEntry
    165:171:com.google.common.collect.Multiset$Entry standardPollFirstEntry() -> standardPollFirstEntry
    188:194:com.google.common.collect.Multiset$Entry standardPollLastEntry() -> standardPollLastEntry
    219:219:com.google.common.collect.SortedMultiset standardSubMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> standardSubMultiset
    206:206:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    224:224:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset -> com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset:
    104:104:void <init>(com.google.common.collect.ForwardingSortedMultiset) -> <init>
    108:108:com.google.common.collect.SortedMultiset forwardMultiset() -> forwardMultiset
com.google.common.collect.ForwardingSortedMultiset$StandardElementSet -> com.google.common.collect.ForwardingSortedMultiset$StandardElementSet:
    75:76:void <init>(com.google.common.collect.ForwardingSortedMultiset) -> <init>
com.google.common.collect.ForwardingSortedSet -> com.google.common.collect.ForwardingSortedSet:
    58:58:void <init>() -> <init>
    65:65:java.util.Comparator comparator() -> comparator
    54:54:java.lang.Object delegate() -> delegate
    54:54:java.util.Collection delegate() -> delegate
    54:54:java.util.Set delegate() -> delegate
    70:70:java.lang.Object first() -> first
    75:75:java.util.SortedSet headSet(java.lang.Object) -> headSet
    80:80:java.lang.Object last() -> last
    116:117:boolean standardContains(java.lang.Object) -> standardContains
    137:141:boolean standardRemove(java.lang.Object) -> standardRemove
    160:160:java.util.SortedSet standardSubSet(java.lang.Object,java.lang.Object) -> standardSubSet
    85:85:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    90:90:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    96:99:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
com.google.common.collect.ForwardingSortedSetMultimap -> com.google.common.collect.ForwardingSortedSetMultimap:
    41:41:void <init>() -> <init>
    36:36:com.google.common.collect.Multimap delegate() -> delegate
    36:36:com.google.common.collect.SetMultimap delegate() -> delegate
    36:36:java.lang.Object delegate() -> delegate
    36:36:java.util.Collection get(java.lang.Object) -> get
    36:36:java.util.Set get(java.lang.Object) -> get
    48:48:java.util.SortedSet get(java.lang.Object) -> get
    36:36:java.util.Collection removeAll(java.lang.Object) -> removeAll
    36:36:java.util.Set removeAll(java.lang.Object) -> removeAll
    53:53:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    36:36:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    36:36:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    58:58:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    63:63:java.util.Comparator valueComparator() -> valueComparator
com.google.common.collect.ForwardingTable -> com.google.common.collect.ForwardingTable:
    36:36:void <init>() -> <init>
    43:43:java.util.Set cellSet() -> cellSet
    48:48:void clear() -> clear
    53:53:java.util.Map column(java.lang.Object) -> column
    58:58:java.util.Set columnKeySet() -> columnKeySet
    63:63:java.util.Map columnMap() -> columnMap
    68:68:boolean contains(java.lang.Object,java.lang.Object) -> contains
    73:73:boolean containsColumn(java.lang.Object) -> containsColumn
    78:78:boolean containsRow(java.lang.Object) -> containsRow
    83:83:boolean containsValue(java.lang.Object) -> containsValue
    33:33:java.lang.Object delegate() -> delegate
    140:140:boolean equals(java.lang.Object) -> equals
    88:88:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    145:145:int hashCode() -> hashCode
    93:93:boolean isEmpty() -> isEmpty
    99:99:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    104:104:void putAll(com.google.common.collect.Table) -> putAll
    110:110:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    115:115:java.util.Map row(java.lang.Object) -> row
    120:120:java.util.Set rowKeySet() -> rowKeySet
    125:125:java.util.Map rowMap() -> rowMap
    130:130:int size() -> size
    135:135:java.util.Collection values() -> values
com.google.common.collect.GeneralRange -> com.google.common.collect.GeneralRange:
    107:128:void <init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType) -> <init>
    58:58:com.google.common.collect.GeneralRange all(java.util.Comparator) -> all
    134:134:java.util.Comparator comparator() -> comparator
    169:169:boolean contains(java.lang.Object) -> contains
    67:67:com.google.common.collect.GeneralRange downTo(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType) -> downTo
    224:232:boolean equals(java.lang.Object) -> equals
    41:51:com.google.common.collect.GeneralRange from(com.google.common.collect.Range) -> from
    284:284:com.google.common.collect.BoundType getLowerBoundType() -> getLowerBoundType
    280:280:java.lang.Object getLowerEndpoint() -> getLowerEndpoint
    292:292:com.google.common.collect.BoundType getUpperBoundType() -> getUpperBoundType
    288:288:java.lang.Object getUpperEndpoint() -> getUpperEndpoint
    138:138:boolean hasLowerBound() -> hasLowerBound
    142:142:boolean hasUpperBound() -> hasUpperBound
    239:244:int hashCode() -> hashCode
    176:219:com.google.common.collect.GeneralRange intersect(com.google.common.collect.GeneralRange) -> intersect
    146:147:boolean isEmpty() -> isEmpty
    89:89:com.google.common.collect.GeneralRange range(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> range
    251:263:com.google.common.collect.GeneralRange reverse() -> reverse
    270:276:java.lang.String toString() -> toString
    160:165:boolean tooHigh(java.lang.Object) -> tooHigh
    151:156:boolean tooLow(java.lang.Object) -> tooLow
    76:76:com.google.common.collect.GeneralRange upTo(java.util.Comparator,java.lang.Object,com.google.common.collect.BoundType) -> upTo
com.google.common.collect.HashBasedTable -> com.google.common.collect.HashBasedTable:
    103:103:void <init>(java.util.Map,com.google.common.collect.HashBasedTable$Factory) -> <init>
    51:51:java.util.Set cellSet() -> cellSet
    51:51:void clear() -> clear
    51:51:java.util.Map column(java.lang.Object) -> column
    51:51:java.util.Set columnKeySet() -> columnKeySet
    51:51:java.util.Map columnMap() -> columnMap
    110:110:boolean contains(java.lang.Object,java.lang.Object) -> contains
    115:115:boolean containsColumn(java.lang.Object) -> containsColumn
    120:120:boolean containsRow(java.lang.Object) -> containsRow
    125:125:boolean containsValue(java.lang.Object) -> containsValue
    70:70:com.google.common.collect.HashBasedTable create() -> create
    83:85:com.google.common.collect.HashBasedTable create(int,int) -> create
    97:98:com.google.common.collect.HashBasedTable create(com.google.common.collect.Table) -> create
    135:135:boolean equals(java.lang.Object) -> equals
    130:130:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    51:51:int hashCode() -> hashCode
    51:51:boolean isEmpty() -> isEmpty
    51:51:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    51:51:void putAll(com.google.common.collect.Table) -> putAll
    141:141:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    51:51:java.util.Map row(java.lang.Object) -> row
    51:51:java.util.Set rowKeySet() -> rowKeySet
    51:51:java.util.Map rowMap() -> rowMap
    51:51:int size() -> size
    51:51:java.lang.String toString() -> toString
    51:51:java.util.Collection values() -> values
com.google.common.collect.HashBasedTable$Factory -> com.google.common.collect.HashBasedTable$Factory:
    56:57:void <init>(int) -> <init>
    53:53:java.lang.Object get() -> get
    62:62:java.util.Map get() -> get
com.google.common.collect.HashBiMap -> com.google.common.collect.HashBiMap:
    107:108:void <init>(int) -> <init>
    53:53:int access$000(com.google.common.collect.HashBiMap) -> access$000
    53:53:int[] access$100(com.google.common.collect.HashBiMap) -> access$100
    53:53:void access$200(com.google.common.collect.HashBiMap,int,java.lang.Object,boolean) -> access$200
    53:53:com.google.common.collect.BiMap access$302(com.google.common.collect.HashBiMap,com.google.common.collect.BiMap) -> access$302
    53:53:void access$400(com.google.common.collect.HashBiMap,int,java.lang.Object,boolean) -> access$400
    192:192:int bucket(int) -> bucket
    651:662:void clear() -> clear
    232:232:boolean containsKey(java.lang.Object) -> containsKey
    247:247:boolean containsValue(java.lang.Object) -> containsValue
    57:57:com.google.common.collect.HashBiMap create() -> create
    67:67:com.google.common.collect.HashBiMap create(int) -> create
    75:76:com.google.common.collect.HashBiMap create(java.util.Map) -> create
    134:135:int[] createFilledWithAbsent(int) -> createFilledWithAbsent
    405:425:void deleteFromTableKToV(int,int) -> deleteFromTableKToV
    433:453:void deleteFromTableVToK(int,int) -> deleteFromTableVToK
    156:182:void ensureCapacity(int) -> ensureCapacity
    811:812:java.util.Set entrySet() -> entrySet
    141:143:int[] expandAndFillWithAbsent(int[],int) -> expandAndFillWithAbsent
    222:223:int findEntry(java.lang.Object,int,int[],int[],java.lang.Object[]) -> findEntry
    197:197:int findEntryByKey(java.lang.Object) -> findEntryByKey
    204:204:int findEntryByKey(java.lang.Object,int) -> findEntryByKey
    209:209:int findEntryByValue(java.lang.Object) -> findEntryByValue
    217:217:int findEntryByValue(java.lang.Object,int) -> findEntryByValue
    311:311:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    253:254:java.lang.Object get(java.lang.Object) -> get
    259:260:java.lang.Object getInverse(java.lang.Object) -> getInverse
    113:129:void init(int) -> init
    383:386:void insertIntoTableKToV(int,int) -> insertIntoTableKToV
    394:397:void insertIntoTableVToK(int,int) -> insertIntoTableVToK
    906:907:com.google.common.collect.BiMap inverse() -> inverse
    739:740:java.util.Set keySet() -> keySet
    597:646:void moveEntryToIndex(int,int) -> moveEntryToIndex
    266:266:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    271:303:java.lang.Object put(java.lang.Object,java.lang.Object,boolean) -> put
    316:356:java.lang.Object putInverse(java.lang.Object,java.lang.Object,boolean) -> putInverse
    1092:1095:void readObject(java.io.ObjectInputStream) -> readObject
    533:539:java.lang.Object remove(java.lang.Object) -> remove
    559:559:void removeEntry(int) -> removeEntry
    564:576:void removeEntry(int,int,int) -> removeEntry
    581:581:void removeEntryKeyHashKnown(int,int) -> removeEntryKeyHashKnown
    586:586:void removeEntryValueHashKnown(int,int) -> removeEntryValueHashKnown
    546:552:java.lang.Object removeInverse(java.lang.Object) -> removeInverse
    486:526:void replaceKeyInEntry(int,java.lang.Object,boolean) -> replaceKeyInEntry
    461:477:void replaceValueInEntry(int,java.lang.Object,boolean) -> replaceValueInEntry
    367:374:void setSucceeds(int,int) -> setSucceeds
    149:149:int size() -> size
    52:52:java.util.Collection values() -> values
    775:776:java.util.Set values() -> values
    1086:1087:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.HashBiMap$EntryForKey -> com.google.common.collect.HashBiMap$EntryForKey:
    864:866:void <init>(com.google.common.collect.HashBiMap,int) -> <init>
    877:877:java.lang.Object getKey() -> getKey
    883:884:java.lang.Object getValue() -> getValue
    889:897:java.lang.Object setValue(java.lang.Object) -> setValue
    870:871:void updateIndex() -> updateIndex
com.google.common.collect.HashBiMap$EntryForValue -> com.google.common.collect.HashBiMap$EntryForValue:
    1043:1046:void <init>(com.google.common.collect.HashBiMap,int) -> <init>
    1057:1057:java.lang.Object getKey() -> getKey
    1062:1063:java.lang.Object getValue() -> getValue
    1068:1076:java.lang.Object setValue(java.lang.Object) -> setValue
    1050:1051:void updateIndex() -> updateIndex
com.google.common.collect.HashBiMap$EntrySet -> com.google.common.collect.HashBiMap$EntrySet:
    816:817:void <init>(com.google.common.collect.HashBiMap) -> <init>
    822:827:boolean contains(java.lang.Object) -> contains
    815:815:java.lang.Object forEntry(int) -> forEntry
    851:851:java.util.Map$Entry forEntry(int) -> forEntry
    835:842:boolean remove(java.lang.Object) -> remove
com.google.common.collect.HashBiMap$Inverse -> com.google.common.collect.HashBiMap$Inverse:
    913:914:void <init>(com.google.common.collect.HashBiMap) -> <init>
    966:966:void clear() -> clear
    924:924:boolean containsKey(java.lang.Object) -> containsKey
    935:935:boolean containsValue(java.lang.Object) -> containsValue
    983:984:java.util.Set entrySet() -> entrySet
    949:949:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    930:930:java.lang.Object get(java.lang.Object) -> get
    954:954:com.google.common.collect.BiMap inverse() -> inverse
    971:971:java.util.Set keySet() -> keySet
    942:942:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    989:990:void readObject(java.io.ObjectInputStream) -> readObject
    961:961:java.lang.Object remove(java.lang.Object) -> remove
    919:919:int size() -> size
    910:910:java.util.Collection values() -> values
    976:976:java.util.Set values() -> values
com.google.common.collect.HashBiMap$InverseEntrySet -> com.google.common.collect.HashBiMap$InverseEntrySet:
    996:996:void <init>(com.google.common.collect.HashBiMap) -> <init>
    1001:1006:boolean contains(java.lang.Object) -> contains
    994:994:java.lang.Object forEntry(int) -> forEntry
    1029:1029:java.util.Map$Entry forEntry(int) -> forEntry
    1013:1020:boolean remove(java.lang.Object) -> remove
com.google.common.collect.HashBiMap$KeySet -> com.google.common.collect.HashBiMap$KeySet:
    744:745:void <init>(com.google.common.collect.HashBiMap) -> <init>
    755:755:boolean contains(java.lang.Object) -> contains
    750:750:java.lang.Object forEntry(int) -> forEntry
    760:763:boolean remove(java.lang.Object) -> remove
com.google.common.collect.HashBiMap$ValueSet -> com.google.common.collect.HashBiMap$ValueSet:
    780:781:void <init>(com.google.common.collect.HashBiMap) -> <init>
    791:791:boolean contains(java.lang.Object) -> contains
    786:786:java.lang.Object forEntry(int) -> forEntry
    796:799:boolean remove(java.lang.Object) -> remove
com.google.common.collect.HashBiMap$View -> com.google.common.collect.HashBiMap$View:
    669:670:void <init>(com.google.common.collect.HashBiMap) -> <init>
    731:731:void clear() -> clear
    677:677:java.util.Iterator iterator() -> iterator
    726:726:int size() -> size
com.google.common.collect.HashBiMap$View$1 -> com.google.common.collect.HashBiMap$View$1:
    677:684:void <init>(com.google.common.collect.HashBiMap$View) -> <init>
    687:688:void checkForComodification() -> checkForComodification
    694:695:boolean hasNext() -> hasNext
    700:706:java.lang.Object next() -> next
    712:719:void remove() -> remove
com.google.common.collect.HashMultimap -> com.google.common.collect.HashMultimap:
    94:94:void <init>() -> <init>
    51:100:void <init>(int,int) -> <init>
    51:105:void <init>(com.google.common.collect.Multimap) -> <init>
    47:47:java.util.Map asMap() -> asMap
    47:47:void clear() -> clear
    47:47:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    47:47:boolean containsKey(java.lang.Object) -> containsKey
    47:47:boolean containsValue(java.lang.Object) -> containsValue
    60:60:com.google.common.collect.HashMultimap create() -> create
    76:76:com.google.common.collect.HashMultimap create(int,int) -> create
    90:90:com.google.common.collect.HashMultimap create(com.google.common.collect.Multimap) -> create
    47:47:java.util.Collection createCollection() -> createCollection
    117:117:java.util.Set createCollection() -> createCollection
    47:47:java.util.Set entries() -> entries
    47:47:boolean equals(java.lang.Object) -> equals
    47:47:java.util.Set get(java.lang.Object) -> get
    47:47:int hashCode() -> hashCode
    47:47:boolean isEmpty() -> isEmpty
    47:47:java.util.Set keySet() -> keySet
    47:47:com.google.common.collect.Multiset keys() -> keys
    47:47:boolean put(java.lang.Object,java.lang.Object) -> put
    47:47:boolean putAll(com.google.common.collect.Multimap) -> putAll
    47:47:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    132:137:void readObject(java.io.ObjectInputStream) -> readObject
    47:47:boolean remove(java.lang.Object,java.lang.Object) -> remove
    47:47:java.util.Set removeAll(java.lang.Object) -> removeAll
    47:47:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    47:47:int size() -> size
    47:47:java.lang.String toString() -> toString
    47:47:java.util.Collection values() -> values
    126:127:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.HashMultimapGwtSerializationDependencies -> com.google.common.collect.HashMultimapGwtSerializationDependencies:
    35:35:void <init>(java.util.Map) -> <init>
com.google.common.collect.HashMultiset -> com.google.common.collect.HashMultiset:
    62:62:void <init>(int) -> <init>
    29:29:boolean contains(java.lang.Object) -> contains
    34:34:com.google.common.collect.HashMultiset create() -> create
    45:45:com.google.common.collect.HashMultiset create(int) -> create
    56:57:com.google.common.collect.HashMultiset create(java.lang.Iterable) -> create
    29:29:java.util.Set elementSet() -> elementSet
    29:29:java.util.Set entrySet() -> entrySet
    67:67:void init(int) -> init
    29:29:boolean isEmpty() -> isEmpty
com.google.common.collect.Hashing -> com.google.common.collect.Hashing:
    32:32:void <init>() -> <init>
    62:63:int closedTableSize(int,double) -> closedTableSize
    50:50:int smear(int) -> smear
    54:54:int smearedHash(java.lang.Object) -> smearedHash
com.google.common.collect.ImmutableAsList -> com.google.common.collect.ImmutableAsList:
    34:34:void <init>() -> <init>
    41:41:boolean contains(java.lang.Object) -> contains
    51:51:boolean isEmpty() -> isEmpty
    56:56:boolean isPartialView() -> isPartialView
    77:77:void readObject(java.io.ObjectInputStream) -> readObject
    46:46:int size() -> size
    83:83:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableAsList$SerializedForm -> com.google.common.collect.ImmutableAsList$SerializedForm:
    64:65:void <init>(com.google.common.collect.ImmutableCollection) -> <init>
    69:69:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableBiMap -> com.google.common.collect.ImmutableBiMap:
    309:309:void <init>() -> <init>
    111:111:com.google.common.collect.ImmutableBiMap$Builder builder() -> builder
    128:129:com.google.common.collect.ImmutableBiMap$Builder builderWithExpectedSize(int) -> builderWithExpectedSize
    278:287:com.google.common.collect.ImmutableBiMap copyOf(java.util.Map) -> copyOf
    303:306:com.google.common.collect.ImmutableBiMap copyOf(java.lang.Iterable) -> copyOf
    36:36:com.google.common.collect.ImmutableCollection createValues() -> createValues
    330:330:com.google.common.collect.ImmutableSet createValues() -> createValues
    343:343:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    36:36:com.google.common.collect.BiMap inverse() -> inverse
    43:43:com.google.common.collect.ImmutableBiMap of() -> of
    48:49:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object) -> of
    58:60:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    69:72:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    81:85:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    95:100:com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    36:36:com.google.common.collect.ImmutableCollection values() -> values
    36:36:java.util.Collection values() -> values
    36:36:java.util.Set values() -> values
    325:325:com.google.common.collect.ImmutableSet values() -> values
    369:369:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableBiMap$Builder -> com.google.common.collect.ImmutableBiMap$Builder:
    166:166:void <init>() -> <init>
    170:170:void <init>(int) -> <init>
    160:160:com.google.common.collect.ImmutableMap build() -> build
    252:257:com.google.common.collect.ImmutableBiMap build() -> build
    160:160:com.google.common.collect.ImmutableMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    239:239:com.google.common.collect.ImmutableBiMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    160:160:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    160:160:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    180:180:com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object) -> put
    193:193:com.google.common.collect.ImmutableBiMap$Builder put(java.util.Map$Entry) -> put
    160:160:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    160:160:com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    206:206:com.google.common.collect.ImmutableBiMap$Builder putAll(java.util.Map) -> putAll
    221:221:com.google.common.collect.ImmutableBiMap$Builder putAll(java.lang.Iterable) -> putAll
com.google.common.collect.ImmutableBiMap$SerializedForm -> com.google.common.collect.ImmutableBiMap$SerializedForm:
    356:356:void <init>(com.google.common.collect.ImmutableBiMap) -> <init>
    354:354:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    361:361:com.google.common.collect.ImmutableBiMap$Builder makeBuilder(int) -> makeBuilder
com.google.common.collect.ImmutableClassToInstanceMap -> com.google.common.collect.ImmutableClassToInstanceMap:
    41:42:void <clinit>() -> <clinit>
    38:38:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableClassToInstanceMap$1) -> <init>
    162:163:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    69:69:com.google.common.collect.ImmutableClassToInstanceMap$Builder builder() -> builder
    152:157:com.google.common.collect.ImmutableClassToInstanceMap copyOf(java.util.Map) -> copyOf
    36:36:java.lang.Object delegate() -> delegate
    168:168:java.util.Map delegate() -> delegate
    175:175:java.lang.Object getInstance(java.lang.Class) -> getInstance
    51:51:com.google.common.collect.ImmutableClassToInstanceMap of() -> of
    60:61:com.google.common.collect.ImmutableClassToInstanceMap of(java.lang.Class,java.lang.Object) -> of
    188:188:java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    192:192:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableClassToInstanceMap$Builder -> com.google.common.collect.ImmutableClassToInstanceMap$Builder:
    89:90:void <init>() -> <init>
    130:134:com.google.common.collect.ImmutableClassToInstanceMap build() -> build
    120:120:java.lang.Object cast(java.lang.Class,java.lang.Object) -> cast
    98:98:com.google.common.collect.ImmutableClassToInstanceMap$Builder put(java.lang.Class,java.lang.Object) -> put
    111:114:com.google.common.collect.ImmutableClassToInstanceMap$Builder putAll(java.util.Map) -> putAll
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
    174:174:void <clinit>() -> <clinit>
    168:168:void <init>() -> <init>
    235:235:boolean add(java.lang.Object) -> add
    261:261:boolean addAll(java.util.Collection) -> addAll
    313:313:com.google.common.collect.ImmutableList asList() -> asList
    299:299:void clear() -> clear
    330:331:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    219:219:int internalArrayEnd() -> internalArrayEnd
    211:211:int internalArrayStart() -> internalArrayStart
    161:161:java.util.Iterator iterator() -> iterator
    248:248:boolean remove(java.lang.Object) -> remove
    274:274:boolean removeAll(java.util.Collection) -> removeAll
    287:287:boolean retainAll(java.util.Collection) -> retainAll
    178:178:java.lang.Object[] toArray() -> toArray
    184:196:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    338:338:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder -> com.google.common.collect.ImmutableCollection$ArrayBasedBuilder:
    449:452:void <init>(int) -> <init>
    444:444:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    474:476:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    483:486:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    493:502:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    461:467:void getReadyToExpandTo(int) -> getReadyToExpandTo
com.google.common.collect.ImmutableCollection$Builder -> com.google.common.collect.ImmutableCollection$Builder:
    366:366:void <init>() -> <init>
    392:393:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    410:411:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    428:429:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    352:357:int expandedCapacity(int,int) -> expandedCapacity
com.google.common.collect.ImmutableEntry -> com.google.common.collect.ImmutableEntry:
    29:31:void <init>(java.lang.Object,java.lang.Object) -> <init>
    37:37:java.lang.Object getKey() -> getKey
    43:43:java.lang.Object getValue() -> getValue
    48:48:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableEnumMap -> com.google.common.collect.ImmutableEnumMap:
    34:34:void <init>(java.util.EnumMap,com.google.common.collect.ImmutableEnumMap$1) -> <init>
    49:51:void <init>(java.util.EnumMap) -> <init>
    36:43:com.google.common.collect.ImmutableMap asImmutable(java.util.EnumMap) -> asImmutable
    66:66:boolean containsKey(java.lang.Object) -> containsKey
    87:87:com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
    79:82:boolean equals(java.lang.Object) -> equals
    71:71:java.lang.Object get(java.lang.Object) -> get
    56:56:com.google.common.collect.UnmodifiableIterator keyIterator() -> keyIterator
    61:61:int size() -> size
    98:98:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableEnumMap$EnumSerializedForm -> com.google.common.collect.ImmutableEnumMap$EnumSerializedForm:
    107:108:void <init>(java.util.EnumMap) -> <init>
    112:112:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableEnumSet -> com.google.common.collect.ImmutableEnumSet:
    32:32:void <init>(java.util.EnumSet,com.google.common.collect.ImmutableEnumSet$1) -> <init>
    55:56:void <init>(java.util.EnumSet) -> <init>
    35:41:com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet) -> asImmutable
    76:76:boolean contains(java.lang.Object) -> contains
    81:84:boolean containsAll(java.util.Collection) -> containsAll
    97:100:boolean equals(java.lang.Object) -> equals
    112:113:int hashCode() -> hashCode
    89:89:boolean isEmpty() -> isEmpty
    30:30:java.util.Iterator iterator() -> iterator
    66:66:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    71:71:int size() -> size
    118:118:java.lang.String toString() -> toString
    124:124:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableEnumSet$EnumSerializedForm -> com.google.common.collect.ImmutableEnumSet$EnumSerializedForm:
    133:134:void <init>(java.util.EnumSet) -> <init>
    139:139:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    372:372:void <clinit>() -> <clinit>
    346:346:void <init>() -> <init>
    514:514:void add(int,java.lang.Object) -> add
    489:489:boolean addAll(int,java.util.Collection) -> addAll
    335:335:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> asImmutableList
    341:343:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> asImmutableList
    671:671:com.google.common.collect.ImmutableList$Builder builder() -> builder
    688:689:com.google.common.collect.ImmutableList$Builder builderWithExpectedSize(int) -> builderWithExpectedSize
    326:326:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    401:401:boolean contains(java.lang.Object) -> contains
    543:545:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    214:217:com.google.common.collect.ImmutableList copyOf(java.lang.Iterable) -> copyOf
    238:243:com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    253:260:com.google.common.collect.ImmutableList copyOf(java.util.Iterator) -> copyOf
    271:273:com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    623:623:boolean equals(java.lang.Object) -> equals
    629:631:int hashCode() -> hashCode
    391:391:int indexOf(java.lang.Object) -> indexOf
    55:55:java.util.Iterator iterator() -> iterator
    352:352:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    396:396:int lastIndexOf(java.lang.Object) -> lastIndexOf
    55:55:java.util.ListIterator listIterator() -> listIterator
    55:55:java.util.ListIterator listIterator(int) -> listIterator
    357:357:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    363:367:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    67:67:com.google.common.collect.ImmutableList of() -> of
    78:78:com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    87:87:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object) -> of
    96:96:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    105:105:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    114:114:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    123:123:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    132:132:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    141:141:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    150:150:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    160:160:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    170:170:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    187:203:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    658:658:void readObject(java.io.ObjectInputStream) -> readObject
    527:527:java.lang.Object remove(int) -> remove
    558:558:com.google.common.collect.ImmutableList reverse() -> reverse
    502:502:java.lang.Object set(int,java.lang.Object) -> set
    293:296:com.google.common.collect.ImmutableList sortedCopyOf(java.lang.Iterable) -> sortedCopyOf
    316:321:com.google.common.collect.ImmutableList sortedCopyOf(java.util.Comparator,java.lang.Iterable) -> sortedCopyOf
    55:55:java.util.List subList(int,int) -> subList
    413:420:com.google.common.collect.ImmutableList subList(int,int) -> subList
    429:429:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    663:663:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableList$Builder -> com.google.common.collect.ImmutableList$Builder:
    718:718:void <init>() -> <init>
    722:722:void <init>(int) -> <init>
    712:712:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    712:712:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    712:712:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    735:735:com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    749:749:com.google.common.collect.ImmutableList$Builder add(java.lang.Object[]) -> add
    712:712:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    712:712:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    763:763:com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable) -> addAll
    777:777:com.google.common.collect.ImmutableList$Builder addAll(java.util.Iterator) -> addAll
    712:712:com.google.common.collect.ImmutableCollection build() -> build
    786:787:com.google.common.collect.ImmutableList build() -> build
com.google.common.collect.ImmutableList$Itr -> com.google.common.collect.ImmutableList$Itr:
    379:380:void <init>(com.google.common.collect.ImmutableList,int) -> <init>
    385:385:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableList$ReverseImmutableList -> com.google.common.collect.ImmutableList$ReverseImmutableList:
    564:565:void <init>(com.google.common.collect.ImmutableList) -> <init>
    583:583:boolean contains(java.lang.Object) -> contains
    606:607:java.lang.Object get(int) -> get
    588:589:int indexOf(java.lang.Object) -> indexOf
    617:617:boolean isPartialView() -> isPartialView
    594:595:int lastIndexOf(java.lang.Object) -> lastIndexOf
    578:578:com.google.common.collect.ImmutableList reverse() -> reverse
    569:569:int reverseIndex(int) -> reverseIndex
    573:573:int reversePosition(int) -> reversePosition
    612:612:int size() -> size
    561:561:java.util.List subList(int,int) -> subList
    600:601:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableList$SerializedForm -> com.google.common.collect.ImmutableList$SerializedForm:
    646:647:void <init>(java.lang.Object[]) -> <init>
    651:651:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList$SubList -> com.google.common.collect.ImmutableList$SubList:
    436:438:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    463:464:java.lang.Object get(int) -> get
    448:448:java.lang.Object[] internalArray() -> internalArray
    458:458:int internalArrayEnd() -> internalArrayEnd
    453:453:int internalArrayStart() -> internalArrayStart
    443:443:int size() -> size
    432:432:java.util.List subList(int,int) -> subList
    469:470:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableListMultimap -> com.google.common.collect.ImmutableListMultimap:
    294:294:void <init>(com.google.common.collect.ImmutableMap,int) -> <init>
    110:110:com.google.common.collect.ImmutableListMultimap$Builder builder() -> builder
    236:249:com.google.common.collect.ImmutableListMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    263:263:com.google.common.collect.ImmutableListMultimap copyOf(java.lang.Iterable) -> copyOf
    270:290:com.google.common.collect.ImmutableListMultimap fromMapEntries(java.util.Collection,java.util.Comparator) -> fromMapEntries
    45:45:com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    45:45:java.util.Collection get(java.lang.Object) -> get
    45:45:java.util.List get(java.lang.Object) -> get
    307:308:com.google.common.collect.ImmutableList get(java.lang.Object) -> get
    45:45:com.google.common.collect.ImmutableMultimap inverse() -> inverse
    324:325:com.google.common.collect.ImmutableListMultimap inverse() -> inverse
    329:334:com.google.common.collect.ImmutableListMultimap invert() -> invert
    53:53:com.google.common.collect.ImmutableListMultimap of() -> of
    58:60:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object) -> of
    65:68:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    73:77:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    83:88:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    94:100:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    376:407:void readObject(java.io.ObjectInputStream) -> readObject
    45:45:com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    45:45:java.util.Collection removeAll(java.lang.Object) -> removeAll
    45:45:java.util.List removeAll(java.lang.Object) -> removeAll
    348:348:com.google.common.collect.ImmutableList removeAll(java.lang.Object) -> removeAll
    45:45:com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    45:45:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    45:45:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    361:361:com.google.common.collect.ImmutableList replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    370:371:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.ImmutableListMultimap$Builder -> com.google.common.collect.ImmutableListMultimap$Builder:
    137:137:void <init>() -> <init>
    132:132:com.google.common.collect.ImmutableMultimap build() -> build
    219:219:com.google.common.collect.ImmutableListMultimap build() -> build
    132:132:com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    200:200:com.google.common.collect.ImmutableListMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    132:132:com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    212:212:com.google.common.collect.ImmutableListMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    132:132:com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    132:132:com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    142:142:com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    154:154:com.google.common.collect.ImmutableListMultimap$Builder put(java.util.Map$Entry) -> put
    132:132:com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    132:132:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Iterable) -> putAll
    132:132:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    132:132:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    167:167:com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Iterable) -> putAll
    174:174:com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    181:181:com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    188:188:com.google.common.collect.ImmutableListMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
com.google.common.collect.ImmutableMap -> com.google.common.collect.ImmutableMap:
    408:408:void <clinit>() -> <clinit>
    440:440:void <init>() -> <init>
    604:610:com.google.common.collect.ImmutableSetMultimap asMultimap() -> asMultimap
    149:149:com.google.common.collect.ImmutableMap$Builder builder() -> builder
    166:167:com.google.common.collect.ImmutableMap$Builder builderWithExpectedSize(int) -> builderWithExpectedSize
    173:173:void checkNoConflict(boolean,java.lang.String,java.util.Map$Entry,java.util.Map$Entry) -> checkNoConflict
    489:489:void clear() -> clear
    179:179:java.lang.IllegalArgumentException conflictException(java.lang.String,java.lang.Object,java.lang.Object) -> conflictException
    499:499:boolean containsKey(java.lang.Object) -> containsKey
    504:504:boolean containsValue(java.lang.Object) -> containsValue
    378:385:com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    400:405:com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable) -> copyOf
    140:141:java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object) -> entryOf
    54:54:java.util.Set entrySet() -> entrySet
    536:537:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    685:685:boolean equals(java.lang.Object) -> equals
    524:524:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    692:692:int hashCode() -> hashCode
    494:494:boolean isEmpty() -> isEmpty
    562:563:com.google.common.collect.UnmodifiableIterator keyIterator() -> keyIterator
    54:54:java.util.Set keySet() -> keySet
    550:551:com.google.common.collect.ImmutableSet keySet() -> keySet
    66:66:com.google.common.collect.ImmutableMap of() -> of
    75:76:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object) -> of
    85:87:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    96:99:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    108:112:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    122:127:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    452:452:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    477:477:void putAll(java.util.Map) -> putAll
    465:465:java.lang.Object remove(java.lang.Object) -> remove
    701:701:java.lang.String toString() -> toString
    54:54:java.util.Collection values() -> values
    584:585:com.google.common.collect.ImmutableCollection values() -> values
    788:788:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMap$1 -> com.google.common.collect.ImmutableMap$1:
    563:563:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.UnmodifiableIterator) -> <init>
    566:566:boolean hasNext() -> hasNext
    571:571:java.lang.Object next() -> next
com.google.common.collect.ImmutableMap$Builder -> com.google.common.collect.ImmutableMap$Builder:
    224:224:void <init>() -> <init>
    228:231:void <init>(int) -> <init>
    339:341:com.google.common.collect.ImmutableMap build() -> build
    235:241:void ensureCapacity(int) -> ensureCapacity
    313:314:com.google.common.collect.ImmutableMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    251:255:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    267:267:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    278:278:com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    291:295:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    345:359:void sortEntries() -> sortEntries
com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap -> com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap:
    410:410:void <init>() -> <init>
    431:431:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    415:415:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    436:436:com.google.common.collect.ImmutableCollection createValues() -> createValues
com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap$1EntrySetImpl -> com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap$1EntrySetImpl:
    420:420:void <init>(com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap) -> <init>
    420:420:java.util.Iterator iterator() -> iterator
    428:428:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    423:423:com.google.common.collect.ImmutableMap map() -> map
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets -> com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets:
    615:615:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    615:615:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableMap$1) -> <init>
    630:630:boolean containsKey(java.lang.Object) -> containsKey
    625:625:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    657:658:com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
    614:614:java.lang.Object get(java.lang.Object) -> get
    635:636:com.google.common.collect.ImmutableSet get(java.lang.Object) -> get
    647:647:int hashCode() -> hashCode
    652:652:boolean isHashCodeFast() -> isHashCodeFast
    641:641:boolean isPartialView() -> isPartialView
    620:620:int size() -> size
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 -> com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1:
    658:658:void <init>(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets,java.util.Iterator) -> <init>
    661:661:boolean hasNext() -> hasNext
    658:658:java.lang.Object next() -> next
    666:667:java.util.Map$Entry next() -> next
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1 -> com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1:
    667:667:void <init>(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1,java.util.Map$Entry) -> <init>
    670:670:java.lang.Object getKey() -> getKey
    667:667:java.lang.Object getValue() -> getValue
    675:675:com.google.common.collect.ImmutableSet getValue() -> getValue
com.google.common.collect.ImmutableMap$SerializedForm -> com.google.common.collect.ImmutableMap$SerializedForm:
    720:731:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    761:769:java.lang.Object legacyReadResolve() -> legacyReadResolve
    776:776:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    740:756:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapEntrySet -> com.google.common.collect.ImmutableMapEntrySet:
    68:68:void <init>() -> <init>
    79:82:boolean contains(java.lang.Object) -> contains
    100:100:int hashCode() -> hashCode
    95:95:boolean isHashCodeFast() -> isHashCodeFast
    89:89:boolean isPartialView() -> isPartialView
    74:74:int size() -> size
    106:106:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm -> com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm:
    113:114:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    118:118:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet -> com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet:
    38:38:void <init>(com.google.common.collect.ImmutableMap,java.util.Map$Entry[]) -> <init>
    41:43:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList) -> <init>
    54:54:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    64:64:com.google.common.collect.ImmutableList createAsList() -> createAsList
    33:33:java.util.Iterator iterator() -> iterator
    59:59:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    48:48:com.google.common.collect.ImmutableMap map() -> map
com.google.common.collect.ImmutableMapKeySet -> com.google.common.collect.ImmutableMapKeySet:
    34:35:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    50:50:boolean contains(java.lang.Object) -> contains
    55:55:java.lang.Object get(int) -> get
    30:30:java.util.Iterator iterator() -> iterator
    45:45:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    40:40:int size() -> size
    66:66:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm -> com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm:
    73:74:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    78:78:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapValues -> com.google.common.collect.ImmutableMapValues:
    35:36:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    32:32:com.google.common.collect.ImmutableMap access$000(com.google.common.collect.ImmutableMapValues) -> access$000
    73:74:com.google.common.collect.ImmutableList asList() -> asList
    63:63:boolean contains(java.lang.Object) -> contains
    31:31:java.util.Iterator iterator() -> iterator
    46:46:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    41:41:int size() -> size
    95:95:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapValues$1 -> com.google.common.collect.ImmutableMapValues$1:
    46:47:void <init>(com.google.common.collect.ImmutableMapValues) -> <init>
    51:51:boolean hasNext() -> hasNext
    56:56:java.lang.Object next() -> next
com.google.common.collect.ImmutableMapValues$2 -> com.google.common.collect.ImmutableMapValues$2:
    74:74:void <init>(com.google.common.collect.ImmutableMapValues,com.google.common.collect.ImmutableList) -> <init>
    77:77:java.lang.Object get(int) -> get
    87:87:int size() -> size
com.google.common.collect.ImmutableMapValues$SerializedForm -> com.google.common.collect.ImmutableMapValues$SerializedForm:
    102:103:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    107:107:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultimap -> com.google.common.collect.ImmutableMultimap:
    343:345:void <init>(com.google.common.collect.ImmutableMap,int) -> <init>
    66:66:java.util.Map asMap() -> asMap
    506:506:com.google.common.collect.ImmutableMap asMap() -> asMap
    117:117:com.google.common.collect.ImmutableMultimap$Builder builder() -> builder
    385:385:void clear() -> clear
    66:66:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    470:470:boolean containsKey(java.lang.Object) -> containsKey
    475:475:boolean containsValue(java.lang.Object) -> containsValue
    305:312:com.google.common.collect.ImmutableMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    326:326:com.google.common.collect.ImmutableMultimap copyOf(java.lang.Iterable) -> copyOf
    511:511:java.util.Map createAsMap() -> createAsMap
    66:66:java.util.Collection createEntries() -> createEntries
    522:522:com.google.common.collect.ImmutableCollection createEntries() -> createEntries
    496:496:java.util.Set createKeySet() -> createKeySet
    66:66:com.google.common.collect.Multiset createKeys() -> createKeys
    596:596:com.google.common.collect.ImmutableMultiset createKeys() -> createKeys
    66:66:java.util.Collection createValues() -> createValues
    665:665:com.google.common.collect.ImmutableCollection createValues() -> createValues
    66:66:java.util.Collection entries() -> entries
    517:517:com.google.common.collect.ImmutableCollection entries() -> entries
    66:66:java.util.Iterator entryIterator() -> entryIterator
    561:561:com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
    66:66:boolean equals(java.lang.Object) -> equals
    66:66:java.util.Collection get(java.lang.Object) -> get
    66:66:int hashCode() -> hashCode
    66:66:boolean isEmpty() -> isEmpty
    463:463:boolean isPartialView() -> isPartialView
    66:66:java.util.Set keySet() -> keySet
    491:491:com.google.common.collect.ImmutableSet keySet() -> keySet
    66:66:com.google.common.collect.Multiset keys() -> keys
    591:591:com.google.common.collect.ImmutableMultiset keys() -> keys
    72:72:com.google.common.collect.ImmutableMultimap of() -> of
    77:77:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object) -> of
    82:82:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    90:90:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    98:98:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    107:107:com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    414:414:boolean put(java.lang.Object,java.lang.Object) -> put
    427:427:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    440:440:boolean putAll(com.google.common.collect.Multimap) -> putAll
    453:453:boolean remove(java.lang.Object,java.lang.Object) -> remove
    66:66:java.util.Collection removeAll(java.lang.Object) -> removeAll
    360:360:com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    66:66:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    373:373:com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    480:480:int size() -> size
    66:66:java.lang.String toString() -> toString
    66:66:java.util.Iterator valueIterator() -> valueIterator
    670:670:com.google.common.collect.UnmodifiableIterator valueIterator() -> valueIterator
    66:66:java.util.Collection values() -> values
    660:660:com.google.common.collect.ImmutableCollection values() -> values
com.google.common.collect.ImmutableMultimap$1 -> com.google.common.collect.ImmutableMultimap$1:
    561:565:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    569:569:boolean hasNext() -> hasNext
    561:561:java.lang.Object next() -> next
    574:579:java.util.Map$Entry next() -> next
com.google.common.collect.ImmutableMultimap$2 -> com.google.common.collect.ImmutableMultimap$2:
    670:672:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    676:676:boolean hasNext() -> hasNext
    681:684:java.lang.Object next() -> next
com.google.common.collect.ImmutableMultimap$Builder -> com.google.common.collect.ImmutableMultimap$Builder:
    149:150:void <init>() -> <init>
    286:290:com.google.common.collect.ImmutableMultimap build() -> build
    278:279:com.google.common.collect.ImmutableMultimap$Builder combine(com.google.common.collect.ImmutableMultimap$Builder) -> combine
    154:154:java.util.Collection newMutableValueCollection() -> newMutableValueCollection
    261:261:com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    272:272:com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    160:165:com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    176:176:com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    187:188:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Iterable) -> putAll
    202:222:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    234:234:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    248:249:com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
com.google.common.collect.ImmutableMultimap$EntryCollection -> com.google.common.collect.ImmutableMultimap$EntryCollection:
    528:529:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    549:551:boolean contains(java.lang.Object) -> contains
    539:539:boolean isPartialView() -> isPartialView
    525:525:java.util.Iterator iterator() -> iterator
    534:534:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    544:544:int size() -> size
com.google.common.collect.ImmutableMultimap$FieldSettersHolder -> com.google.common.collect.ImmutableMultimap$FieldSettersHolder:
    337:340:void <clinit>() -> <clinit>
    336:336:void <init>() -> <init>
com.google.common.collect.ImmutableMultimap$Keys -> com.google.common.collect.ImmutableMultimap$Keys:
    601:601:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    604:604:boolean contains(java.lang.Object) -> contains
    609:610:int count(java.lang.Object) -> count
    599:599:java.util.Set elementSet() -> elementSet
    615:615:com.google.common.collect.ImmutableSet elementSet() -> elementSet
    625:626:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    620:620:int size() -> size
    637:637:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMultimap$KeysSerializedForm -> com.google.common.collect.ImmutableMultimap$KeysSerializedForm:
    645:646:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    650:650:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultimap$Values -> com.google.common.collect.ImmutableMultimap$Values:
    692:693:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    698:698:boolean contains(java.lang.Object) -> contains
    709:710:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    689:689:java.util.Iterator iterator() -> iterator
    703:703:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    717:717:int size() -> size
com.google.common.collect.ImmutableMultiset -> com.google.common.collect.ImmutableMultiset:
    182:182:void <init>() -> <init>
    232:232:int add(java.lang.Object,int) -> add
    213:214:com.google.common.collect.ImmutableList asList() -> asList
    383:383:com.google.common.collect.ImmutableMultiset$Builder builder() -> builder
    219:219:boolean contains(java.lang.Object) -> contains
    170:170:com.google.common.collect.ImmutableMultiset copyFromElements(java.lang.Object[]) -> copyFromElements
    175:179:com.google.common.collect.ImmutableMultiset copyFromEntries(java.util.Collection) -> copyFromEntries
    277:279:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    136:136:com.google.common.collect.ImmutableMultiset copyOf(java.lang.Object[]) -> copyOf
    146:156:com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable) -> copyOf
    166:166:com.google.common.collect.ImmutableMultiset copyOf(java.util.Iterator) -> copyOf
    312:312:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    48:48:java.util.Set elementSet() -> elementSet
    48:48:java.util.Set entrySet() -> entrySet
    307:308:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    286:286:boolean equals(java.lang.Object) -> equals
    291:291:int hashCode() -> hashCode
    48:48:java.util.Iterator iterator() -> iterator
    186:187:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    55:55:com.google.common.collect.ImmutableMultiset of() -> of
    66:66:com.google.common.collect.ImmutableMultiset of(java.lang.Object) -> of
    77:77:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object) -> of
    89:89:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    101:101:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    113:113:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    125:125:com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    245:245:int remove(java.lang.Object,int) -> remove
    258:258:int setCount(java.lang.Object,int) -> setCount
    271:271:boolean setCount(java.lang.Object,int,int) -> setCount
    296:296:java.lang.String toString() -> toString
com.google.common.collect.ImmutableMultiset$1 -> com.google.common.collect.ImmutableMultiset$1:
    187:187:void <init>(com.google.common.collect.ImmutableMultiset,java.util.Iterator) -> <init>
    193:193:boolean hasNext() -> hasNext
    198:204:java.lang.Object next() -> next
com.google.common.collect.ImmutableMultiset$Builder -> com.google.common.collect.ImmutableMultiset$Builder:
    425:425:void <init>() -> <init>
    412:429:void <init>(int) -> <init>
    412:434:void <init>(boolean) -> <init>
    405:405:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    405:405:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    447:447:com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    460:460:com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[]) -> add
    405:405:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    405:405:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    531:547:com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    562:562:com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator) -> addAll
    480:486:com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    405:405:com.google.common.collect.ImmutableCollection build() -> build
    588:599:com.google.common.collect.ImmutableMultiset build() -> build
    502:516:com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int) -> setCount
    573:576:com.google.common.collect.ObjectCountHashMap tryGetMap(java.lang.Iterable) -> tryGetMap
com.google.common.collect.ImmutableMultiset$EntrySet -> com.google.common.collect.ImmutableMultiset$EntrySet:
    318:318:void <init>(com.google.common.collect.ImmutableMultiset) -> <init>
    318:318:void <init>(com.google.common.collect.ImmutableMultiset,com.google.common.collect.ImmutableMultiset$1) -> <init>
    336:342:boolean contains(java.lang.Object) -> contains
    317:317:java.lang.Object get(int) -> get
    326:326:com.google.common.collect.Multiset$Entry get(int) -> get
    349:349:int hashCode() -> hashCode
    321:321:boolean isPartialView() -> isPartialView
    331:331:int size() -> size
    355:355:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm -> com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm:
    365:366:void <init>(com.google.common.collect.ImmutableMultiset) -> <init>
    370:370:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultisetGwtSerializationDependencies -> com.google.common.collect.ImmutableMultisetGwtSerializationDependencies:
    40:40:void <init>() -> <init>
com.google.common.collect.ImmutableRangeMap -> com.google.common.collect.ImmutableRangeMap:
    46:47:void <clinit>() -> <clinit>
    146:148:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList) -> <init>
    44:44:com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeMap) -> access$000
    42:42:java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    269:274:com.google.common.collect.ImmutableMap asDescendingMapOfRanges() -> asDescendingMapOfRanges
    42:42:java.util.Map asMapOfRanges() -> asMapOfRanges
    259:264:com.google.common.collect.ImmutableMap asMapOfRanges() -> asMapOfRanges
    78:78:com.google.common.collect.ImmutableRangeMap$Builder builder() -> builder
    242:242:void clear() -> clear
    63:73:com.google.common.collect.ImmutableRangeMap copyOf(com.google.common.collect.RangeMap) -> copyOf
    345:347:boolean equals(java.lang.Object) -> equals
    154:165:java.lang.Object get(java.lang.Comparable) -> get
    172:183:java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    340:340:int hashCode() -> hashCode
    52:52:com.google.common.collect.ImmutableRangeMap of() -> of
    57:57:com.google.common.collect.ImmutableRangeMap of(com.google.common.collect.Range,java.lang.Object) -> of
    206:206:void put(com.google.common.collect.Range,java.lang.Object) -> put
    230:230:void putAll(com.google.common.collect.RangeMap) -> putAll
    218:218:void putCoalescing(com.google.common.collect.Range,java.lang.Object) -> putCoalescing
    254:254:void remove(com.google.common.collect.Range) -> remove
    189:194:com.google.common.collect.Range span() -> span
    42:42:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    279:326:com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    354:354:java.lang.String toString() -> toString
    389:389:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableRangeMap$1 -> com.google.common.collect.ImmutableRangeMap$1:
    304:304:void <init>(com.google.common.collect.ImmutableRangeMap,int,int,com.google.common.collect.Range) -> <init>
    304:304:java.lang.Object get(int) -> get
    312:316:com.google.common.collect.Range get(int) -> get
    307:307:int size() -> size
com.google.common.collect.ImmutableRangeMap$2 -> com.google.common.collect.ImmutableRangeMap$2:
    326:326:void <init>(com.google.common.collect.ImmutableRangeMap,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.Range,com.google.common.collect.ImmutableRangeMap) -> <init>
    326:326:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    329:332:com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
com.google.common.collect.ImmutableRangeMap$Builder -> com.google.common.collect.ImmutableRangeMap$Builder:
    90:91:void <init>() -> <init>
    124:139:com.google.common.collect.ImmutableRangeMap build() -> build
    101:104:com.google.common.collect.ImmutableRangeMap$Builder put(com.google.common.collect.Range,java.lang.Object) -> put
    111:112:com.google.common.collect.ImmutableRangeMap$Builder putAll(com.google.common.collect.RangeMap) -> putAll
com.google.common.collect.ImmutableRangeMap$SerializedForm -> com.google.common.collect.ImmutableRangeMap$SerializedForm:
    365:366:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    378:382:java.lang.Object createRangeMap() -> createRangeMap
    370:373:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableRangeSet -> com.google.common.collect.ImmutableRangeSet:
    51:55:void <clinit>() -> <clinit>
    126:127:void <init>(com.google.common.collect.ImmutableList) -> <init>
    130:132:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableRangeSet) -> <init>
    48:48:com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet) -> access$000
    209:209:void add(com.google.common.collect.Range) -> add
    221:221:void addAll(com.google.common.collect.RangeSet) -> addAll
    233:233:void addAll(java.lang.Iterable) -> addAll
    81:81:com.google.common.collect.ImmutableRangeSet all() -> all
    46:46:java.util.Set asDescendingSetOfRanges() -> asDescendingSetOfRanges
    282:285:com.google.common.collect.ImmutableSet asDescendingSetOfRanges() -> asDescendingSetOfRanges
    46:46:java.util.Set asRanges() -> asRanges
    274:277:com.google.common.collect.ImmutableSet asRanges() -> asRanges
    500:519:com.google.common.collect.ImmutableSortedSet asSet(com.google.common.collect.DiscreteDomain) -> asSet
    695:695:com.google.common.collect.ImmutableRangeSet$Builder builder() -> builder
    46:46:void clear() -> clear
    46:46:com.google.common.collect.RangeSet complement() -> complement
    347:356:com.google.common.collect.ImmutableRangeSet complement() -> complement
    46:46:boolean contains(java.lang.Comparable) -> contains
    86:99:com.google.common.collect.ImmutableRangeSet copyOf(com.google.common.collect.RangeSet) -> copyOf
    111:111:com.google.common.collect.ImmutableRangeSet copyOf(java.lang.Iterable) -> copyOf
    397:399:com.google.common.collect.ImmutableRangeSet difference(com.google.common.collect.RangeSet) -> difference
    159:167:boolean encloses(com.google.common.collect.Range) -> encloses
    46:46:boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    46:46:boolean enclosesAll(java.lang.Iterable) -> enclosesAll
    46:46:boolean equals(java.lang.Object) -> equals
    407:442:com.google.common.collect.ImmutableList intersectRanges(com.google.common.collect.Range) -> intersectRanges
    383:385:com.google.common.collect.ImmutableRangeSet intersection(com.google.common.collect.RangeSet) -> intersection
    139:154:boolean intersects(com.google.common.collect.Range) -> intersects
    197:197:boolean isEmpty() -> isEmpty
    690:690:boolean isPartialView() -> isPartialView
    60:60:com.google.common.collect.ImmutableRangeSet of() -> of
    68:74:com.google.common.collect.ImmutableRangeSet of(com.google.common.collect.Range) -> of
    172:182:com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    245:245:void remove(com.google.common.collect.Range) -> remove
    257:257:void removeAll(com.google.common.collect.RangeSet) -> removeAll
    269:269:void removeAll(java.lang.Iterable) -> removeAll
    189:192:com.google.common.collect.Range span() -> span
    46:46:com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    469:477:com.google.common.collect.ImmutableRangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    370:370:com.google.common.collect.ImmutableRangeSet union(com.google.common.collect.RangeSet) -> union
    123:123:com.google.common.collect.ImmutableRangeSet unionOf(java.lang.Iterable) -> unionOf
    808:808:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableRangeSet$1 -> com.google.common.collect.ImmutableRangeSet$1:
    442:442:void <init>(com.google.common.collect.ImmutableRangeSet,int,int,com.google.common.collect.Range) -> <init>
    442:442:java.lang.Object get(int) -> get
    450:454:com.google.common.collect.Range get(int) -> get
    445:445:int size() -> size
com.google.common.collect.ImmutableRangeSet$AsSet -> com.google.common.collect.ImmutableRangeSet$AsSet:
    525:527:void <init>(com.google.common.collect.ImmutableRangeSet,com.google.common.collect.DiscreteDomain) -> <init>
    522:522:com.google.common.collect.DiscreteDomain access$100(com.google.common.collect.ImmutableRangeSet$AsSet) -> access$100
    623:624:boolean contains(java.lang.Object) -> contains
    650:650:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    522:522:java.util.Iterator descendingIterator() -> descendingIterator
    572:572:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    522:522:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    596:596:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Comparable,boolean) -> headSetImpl
    632:643:int indexOf(java.lang.Object) -> indexOf
    655:655:boolean isPartialView() -> isPartialView
    522:522:java.util.Iterator iterator() -> iterator
    551:551:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    535:546:int size() -> size
    591:591:com.google.common.collect.ImmutableSortedSet subSet(com.google.common.collect.Range) -> subSet
    522:522:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    602:608:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSetImpl
    522:522:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    613:613:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Comparable,boolean) -> tailSetImpl
    660:660:java.lang.String toString() -> toString
    665:665:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableRangeSet$AsSet$1 -> com.google.common.collect.ImmutableRangeSet$AsSet$1:
    551:553:void <init>(com.google.common.collect.ImmutableRangeSet$AsSet) -> <init>
    551:551:java.lang.Object computeNext() -> computeNext
    557:564:java.lang.Comparable computeNext() -> computeNext
com.google.common.collect.ImmutableRangeSet$AsSet$2 -> com.google.common.collect.ImmutableRangeSet$AsSet$2:
    572:574:void <init>(com.google.common.collect.ImmutableRangeSet$AsSet) -> <init>
    572:572:java.lang.Object computeNext() -> computeNext
    578:585:java.lang.Comparable computeNext() -> computeNext
com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm -> com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm:
    673:675:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.DiscreteDomain) -> <init>
    679:679:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableRangeSet$Builder -> com.google.common.collect.ImmutableRangeSet$Builder:
    706:707:void <init>() -> <init>
    720:721:com.google.common.collect.ImmutableRangeSet$Builder add(com.google.common.collect.Range) -> add
    732:732:com.google.common.collect.ImmutableRangeSet$Builder addAll(com.google.common.collect.RangeSet) -> addAll
    744:745:com.google.common.collect.ImmutableRangeSet$Builder addAll(java.lang.Iterable) -> addAll
    756:784:com.google.common.collect.ImmutableRangeSet build() -> build
com.google.common.collect.ImmutableRangeSet$ComplementRanges -> com.google.common.collect.ImmutableRangeSet$ComplementRanges:
    299:310:void <init>(com.google.common.collect.ImmutableRangeSet) -> <init>
    290:290:java.lang.Object get(int) -> get
    320:336:com.google.common.collect.Range get(int) -> get
    315:315:int size() -> size
com.google.common.collect.ImmutableRangeSet$SerializedForm -> com.google.common.collect.ImmutableRangeSet$SerializedForm:
    792:793:void <init>(com.google.common.collect.ImmutableList) -> <init>
    797:802:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSet -> com.google.common.collect.ImmutableSet:
    310:310:void <init>() -> <init>
    48:48:boolean access$000(int,int) -> access$000
    48:48:com.google.common.collect.ImmutableSet access$100(int,java.lang.Object[]) -> access$100
    344:345:com.google.common.collect.ImmutableList asList() -> asList
    383:383:com.google.common.collect.ImmutableSet$Builder builder() -> builder
    400:401:com.google.common.collect.ImmutableSet$Builder builderWithExpectedSize(int) -> builderWithExpectedSize
    210:222:int chooseTableSize(int) -> chooseTableSize
    144:186:com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> construct
    244:252:com.google.common.collect.ImmutableSet copyOf(java.util.Collection) -> copyOf
    268:270:com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable) -> copyOf
    281:288:com.google.common.collect.ImmutableSet copyOf(java.util.Iterator) -> copyOf
    300:306:com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    349:349:com.google.common.collect.ImmutableList createAsList() -> createAsList
    321:327:boolean equals(java.lang.Object) -> equals
    332:332:int hashCode() -> hashCode
    46:46:java.util.Iterator iterator() -> iterator
    55:55:com.google.common.collect.ImmutableSet of() -> of
    64:64:com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    73:73:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object) -> of
    82:82:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    91:91:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    100:100:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    114:125:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    375:375:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSet$Builder -> com.google.common.collect.ImmutableSet$Builder:
    431:431:void <init>() -> <init>
    435:436:void <init>(int) -> <init>
    422:422:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    422:422:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    422:422:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    451:457:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    473:478:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    422:422:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    422:422:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    511:517:com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    533:535:com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    484:494:void addDeduping(java.lang.Object) -> addDeduping
    422:422:com.google.common.collect.ImmutableCollection build() -> build
    546:566:com.google.common.collect.ImmutableSet build() -> build
com.google.common.collect.ImmutableSet$SerializedForm -> com.google.common.collect.ImmutableSet$SerializedForm:
    362:363:void <init>(java.lang.Object[]) -> <init>
    367:367:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSetMultimap -> com.google.common.collect.ImmutableSetMultimap:
    341:342:void <init>(com.google.common.collect.ImmutableMap,int,java.util.Comparator) -> <init>
    124:124:com.google.common.collect.ImmutableSetMultimap$Builder builder() -> builder
    271:271:com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    276:289:com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap,java.util.Comparator) -> copyOf
    304:304:com.google.common.collect.ImmutableSetMultimap copyOf(java.lang.Iterable) -> copyOf
    463:464:com.google.common.collect.ImmutableSet emptySet(java.util.Comparator) -> emptySet
    50:50:com.google.common.collect.ImmutableCollection entries() -> entries
    50:50:java.util.Collection entries() -> entries
    50:50:java.util.Set entries() -> entries
    418:419:com.google.common.collect.ImmutableSet entries() -> entries
    311:328:com.google.common.collect.ImmutableSetMultimap fromMapEntries(java.util.Collection,java.util.Comparator) -> fromMapEntries
    50:50:com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    50:50:java.util.Collection get(java.lang.Object) -> get
    50:50:java.util.Set get(java.lang.Object) -> get
    355:356:com.google.common.collect.ImmutableSet get(java.lang.Object) -> get
    50:50:com.google.common.collect.ImmutableMultimap inverse() -> inverse
    370:371:com.google.common.collect.ImmutableSetMultimap inverse() -> inverse
    375:380:com.google.common.collect.ImmutableSetMultimap invert() -> invert
    58:58:com.google.common.collect.ImmutableSetMultimap of() -> of
    63:65:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object) -> of
    73:76:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    84:88:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    97:102:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    111:117:com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    502:539:void readObject(java.io.ObjectInputStream) -> readObject
    50:50:com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    50:50:java.util.Collection removeAll(java.lang.Object) -> removeAll
    50:50:java.util.Set removeAll(java.lang.Object) -> removeAll
    394:394:com.google.common.collect.ImmutableSet removeAll(java.lang.Object) -> removeAll
    50:50:com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    50:50:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    50:50:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    407:407:com.google.common.collect.ImmutableSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    487:488:java.util.Comparator valueComparator() -> valueComparator
    457:458:com.google.common.collect.ImmutableSet valueSet(java.util.Comparator,java.util.Collection) -> valueSet
    470:471:com.google.common.collect.ImmutableSet$Builder valuesBuilder(java.util.Comparator) -> valuesBuilder
    480:482:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.ImmutableSetMultimap$Builder -> com.google.common.collect.ImmutableSetMultimap$Builder:
    152:152:void <init>() -> <init>
    146:146:com.google.common.collect.ImmutableMultimap build() -> build
    249:253:com.google.common.collect.ImmutableSetMultimap build() -> build
    157:157:java.util.Collection newMutableValueCollection() -> newMutableValueCollection
    146:146:com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    224:224:com.google.common.collect.ImmutableSetMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    146:146:com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    242:242:com.google.common.collect.ImmutableSetMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    146:146:com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    146:146:com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    164:164:com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    176:176:com.google.common.collect.ImmutableSetMultimap$Builder put(java.util.Map$Entry) -> put
    146:146:com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    146:146:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Iterable) -> putAll
    146:146:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    146:146:com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    189:189:com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Iterable) -> putAll
    196:196:com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    203:203:com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    210:211:com.google.common.collect.ImmutableSetMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
com.google.common.collect.ImmutableSetMultimap$EntrySet -> com.google.common.collect.ImmutableSetMultimap$EntrySet:
    425:426:void <init>(com.google.common.collect.ImmutableSetMultimap) -> <init>
    431:433:boolean contains(java.lang.Object) -> contains
    422:422:java.util.Iterator iterator() -> iterator
    445:445:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    440:440:int size() -> size
com.google.common.collect.ImmutableSetMultimap$SetFieldSettersHolder -> com.google.common.collect.ImmutableSetMultimap$SetFieldSettersHolder:
    494:495:void <clinit>() -> <clinit>
    493:493:void <init>() -> <init>
com.google.common.collect.ImmutableSortedMap -> com.google.common.collect.ImmutableSortedMap:
    61:65:void <clinit>() -> <clinit>
    548:548:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList) -> <init>
    554:557:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSortedMap) -> <init>
    54:54:com.google.common.collect.ImmutableSortedMap access$000(java.util.Comparator,java.lang.Object,java.lang.Object) -> access$000
    54:54:com.google.common.collect.RegularImmutableSortedSet access$100(com.google.common.collect.ImmutableSortedMap) -> access$100
    54:54:com.google.common.collect.ImmutableList access$200(com.google.common.collect.ImmutableSortedMap) -> access$200
    798:798:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    803:803:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    651:651:java.util.Comparator comparator() -> comparator
    169:170:com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map) -> copyOf
    186:186:com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map,java.util.Comparator) -> copyOf
    206:207:com.google.common.collect.ImmutableSortedMap copyOf(java.lang.Iterable) -> copyOf
    222:222:com.google.common.collect.ImmutableSortedMap copyOf(java.lang.Iterable,java.util.Comparator) -> copyOf
    258:274:com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map,java.util.Comparator) -> copyOfInternal
    237:252:com.google.common.collect.ImmutableSortedMap copyOfSorted(java.util.SortedMap) -> copyOfSorted
    616:616:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    627:627:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    641:641:com.google.common.collect.ImmutableCollection createValues() -> createValues
    53:53:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    876:876:com.google.common.collect.ImmutableSortedSet descendingKeySet() -> descendingKeySet
    53:53:java.util.NavigableMap descendingMap() -> descendingMap
    856:863:com.google.common.collect.ImmutableSortedMap descendingMap() -> descendingMap
    68:72:com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> emptyMap
    53:53:java.util.Set entrySet() -> entrySet
    579:579:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    818:818:java.util.Map$Entry firstEntry() -> firstEntry
    656:656:java.lang.Object firstKey() -> firstKey
    788:788:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    793:793:java.lang.Object floorKey(java.lang.Object) -> floorKey
    289:290:com.google.common.collect.ImmutableSortedMap fromEntries(java.util.Comparator,boolean,java.lang.Iterable) -> fromEntries
    300:347:com.google.common.collect.ImmutableSortedMap fromEntries(java.util.Comparator,boolean,java.util.Map$Entry[],int) -> fromEntries
    567:568:java.lang.Object get(java.lang.Object) -> get
    665:671:com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> getSubMap
    53:53:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    53:53:java.util.SortedMap headMap(java.lang.Object) -> headMap
    686:686:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    702:702:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    808:808:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    813:813:java.lang.Object higherKey(java.lang.Object) -> higherKey
    573:573:boolean isPartialView() -> isPartialView
    53:53:com.google.common.collect.ImmutableSet keySet() -> keySet
    53:53:java.util.Set keySet() -> keySet
    622:622:com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    823:823:java.util.Map$Entry lastEntry() -> lastEntry
    661:661:java.lang.Object lastKey() -> lastKey
    778:778:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    783:783:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    356:356:com.google.common.collect.ImmutableSortedMap$Builder naturalOrder() -> naturalOrder
    53:53:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    871:871:com.google.common.collect.ImmutableSortedSet navigableKeySet() -> navigableKeySet
    81:81:com.google.common.collect.ImmutableSortedMap of() -> of
    86:86:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object) -> of
    91:93:com.google.common.collect.ImmutableSortedMap of(java.util.Comparator,java.lang.Object,java.lang.Object) -> of
    105:105:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    117:117:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    129:129:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    141:142:com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    147:147:com.google.common.collect.ImmutableSortedMap ofEntries(java.util.Map$Entry[]) -> ofEntries
    368:368:com.google.common.collect.ImmutableSortedMap$Builder orderedBy(java.util.Comparator) -> orderedBy
    836:836:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    849:849:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    376:376:com.google.common.collect.ImmutableSortedMap$Builder reverseOrder() -> reverseOrder
    562:562:int size() -> size
    53:53:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    717:717:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    736:743:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    757:757:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    773:773:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.Collection values() -> values
    636:636:com.google.common.collect.ImmutableCollection values() -> values
    902:902:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedMap$1 -> com.google.common.collect.ImmutableSortedMap$1:
    324:324:void <init>(java.util.Comparator) -> <init>
    324:324:int compare(java.lang.Object,java.lang.Object) -> compare
    327:327:int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
com.google.common.collect.ImmutableSortedMap$1EntrySet -> com.google.common.collect.ImmutableSortedMap$1EntrySet:
    584:584:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    592:592:com.google.common.collect.ImmutableList createAsList() -> createAsList
    584:584:java.util.Iterator iterator() -> iterator
    587:587:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    613:613:com.google.common.collect.ImmutableMap map() -> map
com.google.common.collect.ImmutableSortedMap$1EntrySet$1 -> com.google.common.collect.ImmutableSortedMap$1EntrySet$1:
    592:592:void <init>(com.google.common.collect.ImmutableSortedMap$1EntrySet) -> <init>
    592:592:java.lang.Object get(int) -> get
    595:596:java.util.Map$Entry get(int) -> get
    606:606:int size() -> size
com.google.common.collect.ImmutableSortedMap$Builder -> com.google.common.collect.ImmutableSortedMap$Builder:
    411:411:void <init>(java.util.Comparator) -> <init>
    414:417:void <init>(java.util.Comparator,int) -> <init>
    400:400:com.google.common.collect.ImmutableMap build() -> build
    510:538:com.google.common.collect.ImmutableSortedMap build() -> build
    421:424:void ensureCapacity(int) -> ensureCapacity
    400:400:com.google.common.collect.ImmutableMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    499:499:com.google.common.collect.ImmutableSortedMap$Builder orderEntriesByValue(java.util.Comparator) -> orderEntriesByValue
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    436:440:com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object) -> put
    454:454:com.google.common.collect.ImmutableSortedMap$Builder put(java.util.Map$Entry) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    400:400:com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    468:468:com.google.common.collect.ImmutableSortedMap$Builder putAll(java.util.Map) -> putAll
    484:484:com.google.common.collect.ImmutableSortedMap$Builder putAll(java.lang.Iterable) -> putAll
com.google.common.collect.ImmutableSortedMap$SerializedForm -> com.google.common.collect.ImmutableSortedMap$SerializedForm:
    888:889:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    884:884:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    894:894:com.google.common.collect.ImmutableSortedMap$Builder makeBuilder(int) -> makeBuilder
com.google.common.collect.ImmutableSortedMapFauxverideShim -> com.google.common.collect.ImmutableSortedMapFauxverideShim:
    29:29:void <init>() -> <init>
    40:40:com.google.common.collect.ImmutableSortedMap$Builder builder() -> builder
    51:51:com.google.common.collect.ImmutableSortedMap$Builder builderWithExpectedSize(int) -> builderWithExpectedSize
    65:65:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object) -> of
    79:79:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    93:93:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    108:108:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    124:124:com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
com.google.common.collect.ImmutableSortedMultiset -> com.google.common.collect.ImmutableSortedMultiset:
    274:274:void <init>() -> <init>
    278:278:java.util.Comparator comparator() -> comparator
    137:137:com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Comparable[]) -> copyOf
    165:166:com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Iterable) -> copyOf
    183:184:com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Iterator) -> copyOf
    195:196:com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator,java.util.Iterator) -> copyOf
    212:223:com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator,java.lang.Iterable) -> copyOf
    241:242:com.google.common.collect.ImmutableSortedMultiset copyOfSorted(com.google.common.collect.SortedMultiset) -> copyOfSorted
    247:262:com.google.common.collect.ImmutableSortedMultiset copyOfSortedEntries(java.util.Comparator,java.util.Collection) -> copyOfSortedEntries
    49:49:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    288:293:com.google.common.collect.ImmutableSortedMultiset descendingMultiset() -> descendingMultiset
    49:49:com.google.common.collect.ImmutableSet elementSet() -> elementSet
    49:49:java.util.NavigableSet elementSet() -> elementSet
    49:49:java.util.Set elementSet() -> elementSet
    49:49:java.util.SortedSet elementSet() -> elementSet
    267:270:com.google.common.collect.ImmutableSortedMultiset emptyMultiset(java.util.Comparator) -> emptyMultiset
    49:49:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    380:380:com.google.common.collect.ImmutableSortedMultiset$Builder naturalOrder() -> naturalOrder
    57:57:com.google.common.collect.ImmutableSortedMultiset of() -> of
    63:65:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable) -> of
    76:76:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable) -> of
    87:87:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    99:99:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    111:111:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    123:127:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> of
    354:354:com.google.common.collect.ImmutableSortedMultiset$Builder orderedBy(java.util.Comparator) -> orderedBy
    310:310:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    325:325:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    366:366:com.google.common.collect.ImmutableSortedMultiset$Builder reverseOrder() -> reverseOrder
    49:49:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    334:339:com.google.common.collect.ImmutableSortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    49:49:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    666:666:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedMultiset$Builder -> com.google.common.collect.ImmutableSortedMultiset$Builder:
    430:433:void <init>(java.util.Comparator) -> <init>
    402:402:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    402:402:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    402:402:com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    402:402:com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[]) -> add
    492:492:com.google.common.collect.ImmutableSortedMultiset$Builder add(java.lang.Object) -> add
    505:506:com.google.common.collect.ImmutableSortedMultiset$Builder add(java.lang.Object[]) -> add
    402:402:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    402:402:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    402:402:com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    402:402:com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator) -> addAll
    569:575:com.google.common.collect.ImmutableSortedMultiset$Builder addAll(java.lang.Iterable) -> addAll
    591:592:com.google.common.collect.ImmutableSortedMultiset$Builder addAll(java.util.Iterator) -> addAll
    402:402:com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    525:533:com.google.common.collect.ImmutableSortedMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    402:402:com.google.common.collect.ImmutableCollection build() -> build
    402:402:com.google.common.collect.ImmutableMultiset build() -> build
    620:631:com.google.common.collect.ImmutableSortedMultiset build() -> build
    449:479:void dedupAndCoalesce(boolean) -> dedupAndCoalesce
    598:611:void dedupAndCoalesceAndDeleteEmpty() -> dedupAndCoalesceAndDeleteEmpty
    438:445:void maintenance() -> maintenance
    402:402:com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int) -> setCount
    550:555:com.google.common.collect.ImmutableSortedMultiset$Builder setCount(java.lang.Object,int) -> setCount
com.google.common.collect.ImmutableSortedMultiset$SerializedForm -> com.google.common.collect.ImmutableSortedMultiset$SerializedForm:
    641:649:void <init>(com.google.common.collect.SortedMultiset) -> <init>
    655:660:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMultisetFauxverideShim -> com.google.common.collect.ImmutableSortedMultisetFauxverideShim:
    37:37:void <init>() -> <init>
    48:48:com.google.common.collect.ImmutableSortedMultiset$Builder builder() -> builder
    149:149:com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Object[]) -> copyOf
    62:62:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object) -> of
    76:76:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object) -> of
    90:90:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    104:104:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    119:119:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    135:135:com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
com.google.common.collect.ImmutableSortedSet -> com.google.common.collect.ImmutableSortedSet:
    513:514:void <init>(java.util.Comparator) -> <init>
    627:627:java.lang.Object ceiling(java.lang.Object) -> ceiling
    524:524:java.util.Comparator comparator() -> comparator
    342:361:com.google.common.collect.ImmutableSortedSet construct(java.util.Comparator,int,java.lang.Object[]) -> construct
    161:161:com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Comparable[]) -> copyOf
    189:190:com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Iterable) -> copyOf
    221:222:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Collection) -> copyOf
    240:241:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Iterator) -> copyOf
    253:253:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Iterator) -> copyOf
    269:281:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.lang.Iterable) -> copyOf
    301:301:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Collection) -> copyOf
    319:324:com.google.common.collect.ImmutableSortedSet copyOfSorted(java.util.SortedSet) -> copyOfSorted
    57:57:java.util.Iterator descendingIterator() -> descendingIterator
    57:57:java.util.NavigableSet descendingSet() -> descendingSet
    686:689:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    62:65:com.google.common.collect.RegularImmutableSortedSet emptySet(java.util.Comparator) -> emptySet
    639:639:java.lang.Object first() -> first
    621:621:java.lang.Object floor(java.lang.Object) -> floor
    57:57:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    57:57:java.util.SortedSet headSet(java.lang.Object) -> headSet
    542:542:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    548:548:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    634:634:java.lang.Object higher(java.lang.Object) -> higher
    57:57:java.util.Iterator iterator() -> iterator
    644:644:java.lang.Object last() -> last
    615:615:java.lang.Object lower(java.lang.Object) -> lower
    391:391:com.google.common.collect.ImmutableSortedSet$Builder naturalOrder() -> naturalOrder
    71:71:com.google.common.collect.ImmutableSortedSet of() -> of
    76:76:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable) -> of
    88:88:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable) -> of
    100:100:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    112:112:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    125:125:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    139:147:com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> of
    373:373:com.google.common.collect.ImmutableSortedSet$Builder orderedBy(java.util.Comparator) -> orderedBy
    659:659:java.lang.Object pollFirst() -> pollFirst
    674:674:java.lang.Object pollLast() -> pollLast
    732:732:void readObject(java.io.ObjectInputStream) -> readObject
    381:381:com.google.common.collect.ImmutableSortedSet$Builder reverseOrder() -> reverseOrder
    57:57:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    565:565:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    573:576:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    57:57:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    591:591:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    597:597:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    499:499:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    508:508:int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object) -> unsafeCompare
    737:737:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedSet$Builder -> com.google.common.collect.ImmutableSortedSet$Builder:
    418:419:void <init>(java.util.Comparator) -> <init>
    411:411:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    411:411:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    411:411:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    411:411:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    411:411:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    434:434:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object) -> add
    449:449:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object[]) -> add
    411:411:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    411:411:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    411:411:com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    411:411:com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    464:464:com.google.common.collect.ImmutableSortedSet$Builder addAll(java.lang.Iterable) -> addAll
    479:479:com.google.common.collect.ImmutableSortedSet$Builder addAll(java.util.Iterator) -> addAll
    411:411:com.google.common.collect.ImmutableCollection build() -> build
    411:411:com.google.common.collect.ImmutableSet build() -> build
    490:493:com.google.common.collect.ImmutableSortedSet build() -> build
com.google.common.collect.ImmutableSortedSet$SerializedForm -> com.google.common.collect.ImmutableSortedSet$SerializedForm:
    718:720:void <init>(java.util.Comparator,java.lang.Object[]) -> <init>
    725:725:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedSetFauxverideShim -> com.google.common.collect.ImmutableSortedSetFauxverideShim:
    39:39:void <init>() -> <init>
    50:50:com.google.common.collect.ImmutableSortedSet$Builder builder() -> builder
    62:62:com.google.common.collect.ImmutableSortedSet$Builder builderWithExpectedSize(int) -> builderWithExpectedSize
    161:161:com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Object[]) -> copyOf
    76:76:com.google.common.collect.ImmutableSortedSet of(java.lang.Object) -> of
    90:90:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object) -> of
    104:104:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    118:118:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    132:132:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    147:147:com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
com.google.common.collect.ImmutableTable -> com.google.common.collect.ImmutableTable:
    221:221:void <init>() -> <init>
    94:94:com.google.common.collect.ImmutableTable$Builder builder() -> builder
    42:42:java.util.Iterator cellIterator() -> cellIterator
    233:233:com.google.common.collect.UnmodifiableIterator cellIterator() -> cellIterator
    102:105:com.google.common.collect.Table$Cell cellOf(java.lang.Object,java.lang.Object,java.lang.Object) -> cellOf
    42:42:java.util.Set cellSet() -> cellSet
    225:225:com.google.common.collect.ImmutableSet cellSet() -> cellSet
    320:320:void clear() -> clear
    42:42:java.util.Map column(java.lang.Object) -> column
    256:258:com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    42:42:java.util.Set columnKeySet() -> columnKeySet
    263:263:com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    42:42:java.util.Map columnMap() -> columnMap
    303:303:boolean contains(java.lang.Object,java.lang.Object) -> contains
    42:42:boolean containsColumn(java.lang.Object) -> containsColumn
    42:42:boolean containsRow(java.lang.Object) -> containsRow
    308:308:boolean containsValue(java.lang.Object) -> containsValue
    71:76:com.google.common.collect.ImmutableTable copyOf(com.google.common.collect.Table) -> copyOf
    82:86:com.google.common.collect.ImmutableTable copyOf(java.lang.Iterable) -> copyOf
    42:42:java.util.Set createCellSet() -> createCellSet
    42:42:java.util.Collection createValues() -> createValues
    42:42:boolean equals(java.lang.Object) -> equals
    42:42:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    42:42:int hashCode() -> hashCode
    42:42:boolean isEmpty() -> isEmpty
    48:48:com.google.common.collect.ImmutableTable of() -> of
    53:53:com.google.common.collect.ImmutableTable of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    333:333:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    345:345:void putAll(com.google.common.collect.Table) -> putAll
    358:358:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    42:42:java.util.Map row(java.lang.Object) -> row
    282:284:com.google.common.collect.ImmutableMap row(java.lang.Object) -> row
    42:42:java.util.Set rowKeySet() -> rowKeySet
    289:289:com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    42:42:java.util.Map rowMap() -> rowMap
    42:42:java.lang.String toString() -> toString
    42:42:java.util.Collection values() -> values
    238:238:com.google.common.collect.ImmutableCollection values() -> values
    246:246:java.util.Iterator valuesIterator() -> valuesIterator
    420:420:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableTable$Builder -> com.google.common.collect.ImmutableTable$Builder:
    136:144:void <init>() -> <init>
    209:216:com.google.common.collect.ImmutableTable build() -> build
    156:156:com.google.common.collect.ImmutableTable$Builder orderColumnsBy(java.util.Comparator) -> orderColumnsBy
    149:149:com.google.common.collect.ImmutableTable$Builder orderRowsBy(java.util.Comparator) -> orderRowsBy
    166:166:com.google.common.collect.ImmutableTable$Builder put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    176:184:com.google.common.collect.ImmutableTable$Builder put(com.google.common.collect.Table$Cell) -> put
    197:198:com.google.common.collect.ImmutableTable$Builder putAll(com.google.common.collect.Table) -> putAll
com.google.common.collect.ImmutableTable$SerializedForm -> com.google.common.collect.ImmutableTable$SerializedForm:
    381:386:void <init>(java.lang.Object[],java.lang.Object[],java.lang.Object[],int[],int[]) -> <init>
    391:394:com.google.common.collect.ImmutableTable$SerializedForm create(com.google.common.collect.ImmutableTable,int[],int[]) -> create
    400:413:java.lang.Object readResolve() -> readResolve
com.google.common.collect.IndexedImmutableSet -> com.google.common.collect.IndexedImmutableSet:
    23:23:void <init>() -> <init>
    34:34:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    39:39:com.google.common.collect.ImmutableList createAsList() -> createAsList
    22:22:java.util.Iterator iterator() -> iterator
    28:28:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
com.google.common.collect.IndexedImmutableSet$1 -> com.google.common.collect.IndexedImmutableSet$1:
    39:39:void <init>(com.google.common.collect.IndexedImmutableSet) -> <init>
    42:42:java.lang.Object get(int) -> get
    47:47:boolean isPartialView() -> isPartialView
    52:52:int size() -> size
com.google.common.collect.Interners -> com.google.common.collect.Interners:
    36:36:void <init>() -> <init>
    157:157:com.google.common.base.Function asFunction(com.google.common.collect.Interner) -> asFunction
    90:90:com.google.common.collect.Interners$InternerBuilder newBuilder() -> newBuilder
    99:99:com.google.common.collect.Interner newStrongInterner() -> newStrongInterner
    110:110:com.google.common.collect.Interner newWeakInterner() -> newWeakInterner
com.google.common.collect.Interners$InternerBuilder -> com.google.common.collect.Interners$InternerBuilder:
    43:43:void <init>(com.google.common.collect.Interners$1) -> <init>
    44:47:void <init>() -> <init>
    81:84:com.google.common.collect.Interner build() -> build
    76:76:com.google.common.collect.Interners$InternerBuilder concurrencyLevel(int) -> concurrencyLevel
    55:55:com.google.common.collect.Interners$InternerBuilder strong() -> strong
    66:66:com.google.common.collect.Interners$InternerBuilder weak() -> weak
com.google.common.collect.Interners$InternerFunction -> com.google.common.collect.Interners$InternerFunction:
    164:165:void <init>(com.google.common.collect.Interner) -> <init>
    170:170:java.lang.Object apply(java.lang.Object) -> apply
    180:182:boolean equals(java.lang.Object) -> equals
    175:175:int hashCode() -> hashCode
com.google.common.collect.Interners$InternerImpl -> com.google.common.collect.Interners$InternerImpl:
    114:114:void <init>(com.google.common.collect.MapMaker,com.google.common.collect.Interners$1) -> <init>
    118:120:void <init>(com.google.common.collect.MapMaker) -> <init>
    127:136:java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    65:65:void <init>() -> <init>
    354:358:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    635:635:boolean all(java.lang.Iterable,com.google.common.base.Predicate) -> all
    625:625:boolean any(java.lang.Iterable,com.google.common.base.Predicate) -> any
    342:344:java.util.Collection castOrCopyToCollection(java.lang.Iterable) -> castOrCopyToCollection
    451:451:java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable) -> concat
    467:467:java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    487:487:java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    505:505:java.lang.Iterable concat(java.lang.Iterable[]) -> concat
    521:521:java.lang.Iterable concat(java.lang.Iterable) -> concat
    950:952:java.lang.Iterable consumingIterable(java.lang.Iterable) -> consumingIterable
    122:126:boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    400:401:java.lang.Iterable cycle(java.lang.Iterable) -> cycle
    436:436:java.lang.Iterable cycle(java.lang.Object[]) -> cycle
    261:268:boolean elementsEqual(java.lang.Iterable,java.lang.Iterable) -> elementsEqual
    587:589:java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate) -> filter
    614:616:java.lang.Iterable filter(java.lang.Iterable,java.lang.Class) -> filter
    648:648:java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate) -> find
    666:666:java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object) -> find
    373:378:int frequency(java.lang.Iterable,java.lang.Object) -> frequency
    735:738:java.lang.Object get(java.lang.Iterable,int) -> get
    759:767:java.lang.Object get(java.lang.Iterable,int,java.lang.Object) -> get
    790:790:java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    804:812:java.lang.Object getLast(java.lang.Iterable) -> getLast
    828:837:java.lang.Object getLast(java.lang.Iterable,java.lang.Object) -> getLast
    841:841:java.lang.Object getLastInNonemptyList(java.util.List) -> getLastInNonemptyList
    292:292:java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    306:306:java.lang.Object getOnlyElement(java.lang.Iterable,java.lang.Object) -> getOnlyElement
    695:695:int indexOf(java.lang.Iterable,com.google.common.base.Predicate) -> indexOf
    981:984:boolean isEmpty(java.lang.Iterable) -> isEmpty
    923:925:java.lang.Iterable limit(java.lang.Iterable,int) -> limit
    1003:1013:java.lang.Iterable mergeSorted(java.lang.Iterable,java.util.Comparator) -> mergeSorted
    569:571:java.lang.Iterable paddedPartition(java.lang.Iterable,int) -> paddedPartition
    543:545:java.lang.Iterable partition(java.lang.Iterable,int) -> partition
    141:143:boolean removeAll(java.lang.Iterable,java.util.Collection) -> removeAll
    242:247:java.lang.Object removeFirstMatching(java.lang.Iterable,com.google.common.base.Predicate) -> removeFirstMatching
    178:181:boolean removeIf(java.lang.Iterable,com.google.common.base.Predicate) -> removeIf
    193:212:boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate) -> removeIfFromRandomAccessList
    158:160:boolean retainAll(java.lang.Iterable,java.util.Collection) -> retainAll
    110:112:int size(java.lang.Iterable) -> size
    864:867:java.lang.Iterable skip(java.lang.Iterable,int) -> skip
    228:235:void slowRemoveIfForRemainingElements(java.util.List,com.google.common.base.Predicate,int,int) -> slowRemoveIfForRemainingElements
    318:318:java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class) -> toArray
    322:323:java.lang.Object[] toArray(java.lang.Iterable,java.lang.Object[]) -> toArray
    333:333:java.lang.Object[] toArray(java.lang.Iterable) -> toArray
    1019:1019:com.google.common.base.Function toIterator() -> toIterator
    279:279:java.lang.String toString(java.lang.Iterable) -> toString
    713:715:java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function) -> transform
    681:681:com.google.common.base.Optional tryFind(java.lang.Iterable,com.google.common.base.Predicate) -> tryFind
    69:75:java.lang.Iterable unmodifiableIterable(java.lang.Iterable) -> unmodifiableIterable
    86:86:java.lang.Iterable unmodifiableIterable(com.google.common.collect.ImmutableCollection) -> unmodifiableIterable
com.google.common.collect.Iterables$1 -> com.google.common.collect.Iterables$1:
    401:401:void <init>(java.lang.Iterable) -> <init>
    404:404:java.util.Iterator iterator() -> iterator
    409:409:java.lang.String toString() -> toString
com.google.common.collect.Iterables$10 -> com.google.common.collect.Iterables$10:
    1019:1019:void <init>() -> <init>
    1019:1019:java.lang.Object apply(java.lang.Object) -> apply
    1022:1022:java.util.Iterator apply(java.lang.Iterable) -> apply
com.google.common.collect.Iterables$2 -> com.google.common.collect.Iterables$2:
    545:545:void <init>(java.lang.Iterable,int) -> <init>
    548:548:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$3 -> com.google.common.collect.Iterables$3:
    571:571:void <init>(java.lang.Iterable,int) -> <init>
    574:574:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$4 -> com.google.common.collect.Iterables$4:
    589:589:void <init>(java.lang.Iterable,com.google.common.base.Predicate) -> <init>
    592:592:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$5 -> com.google.common.collect.Iterables$5:
    715:715:void <init>(java.lang.Iterable,com.google.common.base.Function) -> <init>
    718:718:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$6 -> com.google.common.collect.Iterables$6:
    867:867:void <init>(java.lang.Iterable,int) -> <init>
    870:884:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$6$1 -> com.google.common.collect.Iterables$6$1:
    884:885:void <init>(com.google.common.collect.Iterables$6,java.util.Iterator) -> <init>
    889:889:boolean hasNext() -> hasNext
    894:895:java.lang.Object next() -> next
    901:902:void remove() -> remove
com.google.common.collect.Iterables$7 -> com.google.common.collect.Iterables$7:
    925:925:void <init>(java.lang.Iterable,int) -> <init>
    928:928:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$8 -> com.google.common.collect.Iterables$8:
    952:952:void <init>(java.lang.Iterable) -> <init>
    955:957:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$9 -> com.google.common.collect.Iterables$9:
    1006:1006:void <init>(java.lang.Iterable,java.util.Comparator) -> <init>
    1009:1010:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$UnmodifiableIterable -> com.google.common.collect.Iterables$UnmodifiableIterable:
    89:89:void <init>(java.lang.Iterable,com.google.common.collect.Iterables$1) -> <init>
    92:93:void <init>(java.lang.Iterable) -> <init>
    98:98:java.util.Iterator iterator() -> iterator
    103:103:java.lang.String toString() -> toString
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    69:69:void <init>() -> <init>
    352:356:boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    890:895:int advance(java.util.Iterator,int) -> advance
    669:672:boolean all(java.util.Iterator,com.google.common.base.Predicate) -> all
    661:661:boolean any(java.util.Iterator,com.google.common.base.Predicate) -> any
    1107:1108:java.util.Enumeration asEnumeration(java.util.Iterator) -> asEnumeration
    1388:1388:java.util.ListIterator cast(java.util.Iterator) -> cast
    836:836:void checkNonnegative(int) -> checkNonnegative
    989:992:void clear(java.util.Iterator) -> clear
    480:482:java.util.Iterator concat(java.util.Iterator,java.util.Iterator) -> concat
    495:498:java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    515:519:java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    533:533:java.util.Iterator concat(java.util.Iterator[]) -> concat
    546:546:java.util.Iterator concat(java.util.Iterator) -> concat
    551:554:java.util.Iterator concatNoDefensiveCopy(java.util.Iterator[]) -> concatNoDefensiveCopy
    450:450:java.util.Iterator consumingForArray(java.lang.Object[]) -> consumingForArray
    949:950:java.util.Iterator consumingIterator(java.util.Iterator) -> consumingIterator
    173:180:boolean contains(java.util.Iterator,java.lang.Object) -> contains
    390:391:java.util.Iterator cycle(java.lang.Iterable) -> cycle
    440:440:java.util.Iterator cycle(java.lang.Object[]) -> cycle
    263:273:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    77:77:com.google.common.collect.UnmodifiableIterator emptyIterator() -> emptyIterator
    88:88:com.google.common.collect.UnmodifiableListIterator emptyListIterator() -> emptyListIterator
    121:121:java.util.Iterator emptyModifiableIterator() -> emptyModifiableIterator
    630:632:com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate) -> filter
    653:653:com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,java.lang.Class) -> filter
    689:697:java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate) -> find
    713:717:java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate,java.lang.Object) -> find
    1008:1008:com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[]) -> forArray
    1020:1029:com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int) -> forArray
    1086:1087:com.google.common.collect.UnmodifiableIterator forEnumeration(java.util.Enumeration) -> forEnumeration
    369:369:int frequency(java.util.Iterator,java.lang.Object) -> frequency
    801:811:java.lang.Object get(java.util.Iterator,int) -> get
    829:831:java.lang.Object get(java.util.Iterator,int,java.lang.Object) -> get
    861:862:java.lang.Object getLast(java.util.Iterator) -> getLast
    878:878:java.lang.Object getLast(java.util.Iterator,java.lang.Object) -> getLast
    850:850:java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    301:315:java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    327:327:java.lang.Object getOnlyElement(java.util.Iterator,java.lang.Object) -> getOnlyElement
    762:765:int indexOf(java.util.Iterator,com.google.common.base.Predicate) -> indexOf
    911:913:java.util.Iterator limit(java.util.Iterator,int) -> limit
    1237:1240:com.google.common.collect.UnmodifiableIterator mergeSorted(java.lang.Iterable,java.util.Comparator) -> mergeSorted
    590:590:com.google.common.collect.UnmodifiableIterator paddedPartition(java.util.Iterator,int) -> paddedPartition
    572:572:com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int) -> partition
    595:597:com.google.common.collect.UnmodifiableIterator partitionImpl(java.util.Iterator,int,boolean) -> partitionImpl
    1201:1208:com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> peekingIterator
    1219:1219:com.google.common.collect.PeekingIterator peekingIterator(com.google.common.collect.PeekingIterator) -> peekingIterator
    976:978:java.lang.Object pollNext(java.util.Iterator) -> pollNext
    198:202:boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    220:224:boolean removeIf(java.util.Iterator,com.google.common.base.Predicate) -> removeIf
    242:246:boolean retainAll(java.util.Iterator,java.util.Collection) -> retainAll
    1056:1056:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    163:167:int size(java.util.Iterator) -> size
    340:341:java.lang.Object[] toArray(java.util.Iterator,java.lang.Class) -> toArray
    281:290:java.lang.String toString(java.util.Iterator) -> toString
    782:783:java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function) -> transform
    736:744:com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate) -> tryFind
    127:133:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
    154:154:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(com.google.common.collect.UnmodifiableIterator) -> unmodifiableIterator
com.google.common.collect.Iterators$1 -> com.google.common.collect.Iterators$1:
    133:133:void <init>(java.util.Iterator) -> <init>
    136:136:boolean hasNext() -> hasNext
    141:141:java.lang.Object next() -> next
com.google.common.collect.Iterators$10 -> com.google.common.collect.Iterators$10:
    1087:1087:void <init>(java.util.Enumeration) -> <init>
    1090:1090:boolean hasNext() -> hasNext
    1095:1095:java.lang.Object next() -> next
com.google.common.collect.Iterators$11 -> com.google.common.collect.Iterators$11:
    1108:1108:void <init>(java.util.Iterator) -> <init>
    1111:1111:boolean hasMoreElements() -> hasMoreElements
    1116:1116:java.lang.Object nextElement() -> nextElement
com.google.common.collect.Iterators$2 -> com.google.common.collect.Iterators$2:
    391:392:void <init>(java.lang.Iterable) -> <init>
    405:405:boolean hasNext() -> hasNext
    410:416:java.lang.Object next() -> next
    421:421:void remove() -> remove
com.google.common.collect.Iterators$3 -> com.google.common.collect.Iterators$3:
    450:451:void <init>(java.lang.Object[]) -> <init>
    455:455:boolean hasNext() -> hasNext
    460:465:java.lang.Object next() -> next
com.google.common.collect.Iterators$4 -> com.google.common.collect.Iterators$4:
    597:597:void <init>(java.util.Iterator,int,boolean) -> <init>
    600:600:boolean hasNext() -> hasNext
    597:597:java.lang.Object next() -> next
    605:619:java.util.List next() -> next
com.google.common.collect.Iterators$5 -> com.google.common.collect.Iterators$5:
    632:632:void <init>(java.util.Iterator,com.google.common.base.Predicate) -> <init>
    635:641:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterators$6 -> com.google.common.collect.Iterators$6:
    783:783:void <init>(java.util.Iterator,com.google.common.base.Function) -> <init>
    786:786:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Iterators$7 -> com.google.common.collect.Iterators$7:
    913:913:void <init>(int,java.util.Iterator) -> <init>
    918:918:boolean hasNext() -> hasNext
    923:927:java.lang.Object next() -> next
    932:932:void remove() -> remove
com.google.common.collect.Iterators$8 -> com.google.common.collect.Iterators$8:
    950:950:void <init>(java.util.Iterator) -> <init>
    953:953:boolean hasNext() -> hasNext
    958:959:java.lang.Object next() -> next
com.google.common.collect.Iterators$9 -> com.google.common.collect.Iterators$9:
    1056:1056:void <init>(java.lang.Object) -> <init>
    1061:1061:boolean hasNext() -> hasNext
    1066:1070:java.lang.Object next() -> next
com.google.common.collect.Iterators$ArrayItr -> com.google.common.collect.Iterators$ArrayItr:
    1033:1033:void <clinit>() -> <clinit>
    1039:1041:void <init>(java.lang.Object[],int,int,int) -> <init>
    1046:1046:java.lang.Object get(int) -> get
com.google.common.collect.Iterators$ConcatenatedIterator -> com.google.common.collect.Iterators$ConcatenatedIterator:
    1312:1314:void <init>(java.util.Iterator) -> <init>
    1320:1327:java.util.Iterator getTopMetaIterator() -> getTopMetaIterator
    1332:1362:boolean hasNext() -> hasNext
    1370:1374:java.lang.Object next() -> next
    1380:1382:void remove() -> remove
com.google.common.collect.Iterators$EmptyModifiableIterator -> com.google.common.collect.Iterators$EmptyModifiableIterator:
    95:96:void <clinit>() -> <clinit>
    95:95:void <init>(java.lang.String,int) -> <init>
    105:105:java.lang.Object next() -> next
    110:110:void remove() -> remove
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String) -> valueOf
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator[] values() -> values
com.google.common.collect.Iterators$MergingIterator -> com.google.common.collect.Iterators$MergingIterator:
    1257:1272:void <init>(java.lang.Iterable,java.util.Comparator) -> <init>
    1279:1279:boolean hasNext() -> hasNext
    1284:1287:java.lang.Object next() -> next
com.google.common.collect.Iterators$MergingIterator$1 -> com.google.common.collect.Iterators$MergingIterator$1:
    1261:1261:void <init>(com.google.common.collect.Iterators$MergingIterator,java.util.Comparator) -> <init>
    1261:1261:int compare(java.lang.Object,java.lang.Object) -> compare
    1264:1264:int compare(com.google.common.collect.PeekingIterator,com.google.common.collect.PeekingIterator) -> compare
com.google.common.collect.Iterators$PeekingImpl -> com.google.common.collect.Iterators$PeekingImpl:
    1128:1129:void <init>(java.util.Iterator) -> <init>
    1134:1134:boolean hasNext() -> hasNext
    1139:1144:java.lang.Object next() -> next
    1156:1160:java.lang.Object peek() -> peek
    1150:1151:void remove() -> remove
com.google.common.collect.LexicographicalOrdering -> com.google.common.collect.LexicographicalOrdering:
    30:31:void <init>(java.util.Comparator) -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    36:47:int compare(java.lang.Iterable,java.lang.Iterable) -> compare
    58:60:boolean equals(java.lang.Object) -> equals
    67:67:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
com.google.common.collect.LinkedHashMultimap -> com.google.common.collect.LinkedHashMultimap:
    215:224:void <init>(int,int) -> <init>
    77:77:void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$200
    77:77:com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap) -> access$300
    77:77:void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$400
    77:77:void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$500
    77:77:void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$600
    76:76:java.util.Map asMap() -> asMap
    542:543:void clear() -> clear
    76:76:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    76:76:boolean containsKey(java.lang.Object) -> containsKey
    76:76:boolean containsValue(java.lang.Object) -> containsValue
    82:82:com.google.common.collect.LinkedHashMultimap create() -> create
    95:96:com.google.common.collect.LinkedHashMultimap create(int,int) -> create
    109:110:com.google.common.collect.LinkedHashMultimap create(com.google.common.collect.Multimap) -> create
    76:76:java.util.Collection createCollection() -> createCollection
    236:236:java.util.Set createCollection() -> createCollection
    250:250:java.util.Collection createCollection(java.lang.Object) -> createCollection
    139:139:void deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> deleteFromMultimap
    135:135:void deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> deleteFromValueSet
    76:76:java.util.Collection entries() -> entries
    279:279:java.util.Set entries() -> entries
    506:506:java.util.Iterator entryIterator() -> entryIterator
    76:76:boolean equals(java.lang.Object) -> equals
    76:76:java.util.Set get(java.lang.Object) -> get
    76:76:int hashCode() -> hashCode
    76:76:boolean isEmpty() -> isEmpty
    294:294:java.util.Set keySet() -> keySet
    76:76:com.google.common.collect.Multiset keys() -> keys
    76:76:boolean put(java.lang.Object,java.lang.Object) -> put
    76:76:boolean putAll(com.google.common.collect.Multimap) -> putAll
    76:76:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    566:585:void readObject(java.io.ObjectInputStream) -> readObject
    76:76:boolean remove(java.lang.Object,java.lang.Object) -> remove
    76:76:java.util.Set removeAll(java.lang.Object) -> removeAll
    76:76:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    263:263:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    76:76:int size() -> size
    130:131:void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> succeedsInMultimap
    125:126:void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> succeedsInValueSet
    76:76:java.lang.String toString() -> toString
    537:537:java.util.Iterator valueIterator() -> valueIterator
    306:306:java.util.Collection values() -> values
    552:560:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.LinkedHashMultimap$1 -> com.google.common.collect.LinkedHashMultimap$1:
    506:507:void <init>(com.google.common.collect.LinkedHashMultimap) -> <init>
    512:512:boolean hasNext() -> hasNext
    506:506:java.lang.Object next() -> next
    517:522:java.util.Map$Entry next() -> next
    528:530:void remove() -> remove
com.google.common.collect.LinkedHashMultimap$ValueEntry -> com.google.common.collect.LinkedHashMultimap$ValueEntry:
    165:167:void <init>(java.lang.Object,java.lang.Object,int,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> <init>
    195:195:com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap() -> getPredecessorInMultimap
    176:176:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    199:199:com.google.common.collect.LinkedHashMultimap$ValueEntry getSuccessorInMultimap() -> getSuccessorInMultimap
    181:181:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    171:171:boolean matchesValue(java.lang.Object,int) -> matchesValue
    207:207:void setPredecessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setPredecessorInMultimap
    186:186:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    203:203:void setSuccessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setSuccessorInMultimap
    191:191:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
com.google.common.collect.LinkedHashMultimap$ValueSet -> com.google.common.collect.LinkedHashMultimap$ValueSet:
    319:336:void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,int) -> <init>
    311:311:com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$000
    311:311:int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$100
    425:442:boolean add(java.lang.Object) -> add
    491:500:void clear() -> clear
    412:416:boolean contains(java.lang.Object) -> contains
    345:345:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    350:350:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    365:365:java.util.Iterator iterator() -> iterator
    340:340:int mask() -> mask
    447:458:void rehashIfNecessary() -> rehashIfNecessary
    466:482:boolean remove(java.lang.Object) -> remove
    355:355:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    360:360:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
    407:407:int size() -> size
com.google.common.collect.LinkedHashMultimap$ValueSet$1 -> com.google.common.collect.LinkedHashMultimap$ValueSet$1:
    365:368:void <init>(com.google.common.collect.LinkedHashMultimap$ValueSet) -> <init>
    371:372:void checkForComodification() -> checkForComodification
    378:379:boolean hasNext() -> hasNext
    384:390:java.lang.Object next() -> next
    396:400:void remove() -> remove
com.google.common.collect.LinkedHashMultimapGwtSerializationDependencies -> com.google.common.collect.LinkedHashMultimapGwtSerializationDependencies:
    36:36:void <init>(java.util.Map) -> <init>
com.google.common.collect.LinkedHashMultiset -> com.google.common.collect.LinkedHashMultiset:
    69:69:void <init>(int) -> <init>
    36:36:boolean contains(java.lang.Object) -> contains
    41:41:com.google.common.collect.LinkedHashMultiset create() -> create
    52:52:com.google.common.collect.LinkedHashMultiset create(int) -> create
    63:64:com.google.common.collect.LinkedHashMultiset create(java.lang.Iterable) -> create
    36:36:java.util.Set elementSet() -> elementSet
    36:36:java.util.Set entrySet() -> entrySet
    74:74:void init(int) -> init
    36:36:boolean isEmpty() -> isEmpty
com.google.common.collect.LinkedListMultimap -> com.google.common.collect.LinkedListMultimap:
    192:192:void <init>() -> <init>
    195:196:void <init>(int) -> <init>
    200:201:void <init>(com.google.common.collect.Multimap) -> <init>
    97:97:int access$000(com.google.common.collect.LinkedListMultimap) -> access$000
    97:97:com.google.common.collect.LinkedListMultimap$Node access$100(com.google.common.collect.LinkedListMultimap) -> access$100
    97:97:com.google.common.collect.LinkedListMultimap$Node access$200(com.google.common.collect.LinkedListMultimap) -> access$200
    97:97:void access$300(java.lang.Object) -> access$300
    97:97:void access$400(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$Node) -> access$400
    97:97:void access$500(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> access$500
    97:97:java.util.Map access$600(com.google.common.collect.LinkedListMultimap) -> access$600
    97:97:com.google.common.collect.LinkedListMultimap$Node access$700(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> access$700
    97:97:int access$900(com.google.common.collect.LinkedListMultimap) -> access$900
    212:252:com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> addNode
    96:96:java.util.Map asMap() -> asMap
    302:302:void checkElement(java.lang.Object) -> checkElement
    659:663:void clear() -> clear
    96:96:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    579:579:boolean containsKey(java.lang.Object) -> containsKey
    584:584:boolean containsValue(java.lang.Object) -> containsValue
    165:165:com.google.common.collect.LinkedListMultimap create() -> create
    176:176:com.google.common.collect.LinkedListMultimap create(int) -> create
    188:188:com.google.common.collect.LinkedListMultimap create(com.google.common.collect.Multimap) -> create
    811:811:java.util.Map createAsMap() -> createAsMap
    96:96:java.util.Collection createEntries() -> createEntries
    801:801:java.util.List createEntries() -> createEntries
    717:717:java.util.Set createKeySet() -> createKeySet
    722:722:com.google.common.collect.Multiset createKeys() -> createKeys
    96:96:java.util.Collection createValues() -> createValues
    763:763:java.util.List createValues() -> createValues
    96:96:java.util.Collection entries() -> entries
    784:784:java.util.List entries() -> entries
    806:806:java.util.Iterator entryIterator() -> entryIterator
    96:96:boolean equals(java.lang.Object) -> equals
    96:96:java.util.Collection get(java.lang.Object) -> get
    679:679:java.util.List get(java.lang.Object) -> get
    641:641:java.util.List getCopy(java.lang.Object) -> getCopy
    96:96:int hashCode() -> hashCode
    574:574:boolean isEmpty() -> isEmpty
    96:96:java.util.Set keySet() -> keySet
    96:96:com.google.common.collect.Multiset keys() -> keys
    599:599:boolean put(java.lang.Object,java.lang.Object) -> put
    96:96:boolean putAll(com.google.common.collect.Multimap) -> putAll
    96:96:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    831:839:void readObject(java.io.ObjectInputStream) -> readObject
    96:96:boolean remove(java.lang.Object,java.lang.Object) -> remove
    96:96:java.util.Collection removeAll(java.lang.Object) -> removeAll
    652:653:java.util.List removeAll(java.lang.Object) -> removeAll
    296:296:void removeAllNodes(java.lang.Object) -> removeAllNodes
    261:291:void removeNode(com.google.common.collect.LinkedListMultimap$Node) -> removeNode
    96:96:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    616:634:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    569:569:int size() -> size
    96:96:java.lang.String toString() -> toString
    96:96:java.util.Collection values() -> values
    735:735:java.util.List values() -> values
    821:825:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.LinkedListMultimap$1 -> com.google.common.collect.LinkedListMultimap$1:
    679:679:void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> <init>
    688:688:java.util.ListIterator listIterator(int) -> listIterator
    682:683:int size() -> size
com.google.common.collect.LinkedListMultimap$1EntriesImpl -> com.google.common.collect.LinkedListMultimap$1EntriesImpl:
    790:790:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    798:798:java.util.ListIterator listIterator(int) -> listIterator
    793:793:int size() -> size
com.google.common.collect.LinkedListMultimap$1KeySetImpl -> com.google.common.collect.LinkedListMultimap$1KeySetImpl:
    696:696:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    709:709:boolean contains(java.lang.Object) -> contains
    704:704:java.util.Iterator iterator() -> iterator
    714:714:boolean remove(java.lang.Object) -> remove
    699:699:int size() -> size
com.google.common.collect.LinkedListMultimap$1ValuesImpl -> com.google.common.collect.LinkedListMultimap$1ValuesImpl:
    741:741:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    749:750:java.util.ListIterator listIterator(int) -> listIterator
    744:744:int size() -> size
com.google.common.collect.LinkedListMultimap$1ValuesImpl$1 -> com.google.common.collect.LinkedListMultimap$1ValuesImpl$1:
    750:750:void <init>(com.google.common.collect.LinkedListMultimap$1ValuesImpl,java.util.ListIterator,com.google.common.collect.LinkedListMultimap$NodeIterator) -> <init>
    758:758:void set(java.lang.Object) -> set
    750:750:java.lang.Object transform(java.lang.Object) -> transform
    753:753:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.LinkedListMultimap$DistinctKeyIterator -> com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:
    414:418:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    414:414:void <init>(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$1) -> <init>
    421:422:void checkForConcurrentModification() -> checkForConcurrentModification
    428:429:boolean hasNext() -> hasNext
    434:441:java.lang.Object next() -> next
    446:450:void remove() -> remove
com.google.common.collect.LinkedListMultimap$KeyList -> com.google.common.collect.LinkedListMultimap$KeyList:
    142:147:void <init>(com.google.common.collect.LinkedListMultimap$Node) -> <init>
com.google.common.collect.LinkedListMultimap$Node -> com.google.common.collect.LinkedListMultimap$Node:
    114:116:void <init>(java.lang.Object,java.lang.Object) -> <init>
    121:121:java.lang.Object getKey() -> getKey
    126:126:java.lang.Object getValue() -> getValue
    131:132:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.LinkedListMultimap$NodeIterator -> com.google.common.collect.LinkedListMultimap$NodeIterator:
    312:329:void <init>(com.google.common.collect.LinkedListMultimap,int) -> <init>
    307:307:void add(java.lang.Object) -> add
    404:404:void add(java.util.Map$Entry) -> add
    333:334:void checkForConcurrentModification() -> checkForConcurrentModification
    340:341:boolean hasNext() -> hasNext
    372:373:boolean hasPrevious() -> hasPrevious
    307:307:java.lang.Object next() -> next
    347:351:com.google.common.collect.LinkedListMultimap$Node next() -> next
    389:389:int nextIndex() -> nextIndex
    307:307:java.lang.Object previous() -> previous
    379:383:com.google.common.collect.LinkedListMultimap$Node previous() -> previous
    394:394:int previousIndex() -> previousIndex
    357:367:void remove() -> remove
    307:307:void set(java.lang.Object) -> set
    399:399:void set(java.util.Map$Entry) -> set
    408:409:void setValue(java.lang.Object) -> setValue
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator -> com.google.common.collect.LinkedListMultimap$ValueForKeyIterator:
    463:466:void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> <init>
    477:494:void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object,int) -> <init>
    559:561:void add(java.lang.Object) -> add
    499:499:boolean hasNext() -> hasNext
    514:514:boolean hasPrevious() -> hasPrevious
    505:509:java.lang.Object next() -> next
    529:529:int nextIndex() -> nextIndex
    520:524:java.lang.Object previous() -> previous
    534:534:int previousIndex() -> previousIndex
    539:547:void remove() -> remove
    552:553:void set(java.lang.Object) -> set
com.google.common.collect.ListMultimap$-CC -> com.google.common.collect.ListMultimap$-CC:
    42:42:java.util.Collection com.google.common.collect.ListMultimap.get(java.lang.Object) -> $default$get
    42:42:java.util.Collection com.google.common.collect.ListMultimap.removeAll(java.lang.Object) -> $default$removeAll
    42:42:java.util.Collection com.google.common.collect.ListMultimap.replaceValues(java.lang.Object,java.lang.Iterable) -> $default$replaceValues
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    67:67:void <init>() -> <init>
    980:982:boolean addAllImpl(java.util.List,int,java.lang.Iterable) -> addAllImpl
    288:288:java.util.List asList(java.lang.Object,java.lang.Object[]) -> asList
    308:308:java.util.List asList(java.lang.Object,java.lang.Object,java.lang.Object[]) -> asList
    427:427:java.util.List cartesianProduct(java.util.List) -> cartesianProduct
    486:486:java.util.List cartesianProduct(java.util.List[]) -> cartesianProduct
    1137:1137:java.util.List cast(java.lang.Iterable) -> cast
    693:693:com.google.common.collect.ImmutableList charactersOf(java.lang.String) -> charactersOf
    707:707:java.util.List charactersOf(java.lang.CharSequence) -> charactersOf
    148:151:int computeArrayListCapacity(int) -> computeArrayListCapacity
    953:973:boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    942:943:int hashCodeImpl(java.util.List) -> hashCodeImpl
    990:996:int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    1004:1013:int indexOfRandomAccess(java.util.List,java.lang.Object) -> indexOfRandomAccess
    1023:1029:int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
    1038:1045:int lastIndexOfRandomAccess(java.util.List,java.lang.Object) -> lastIndexOfRandomAccess
    1055:1055:java.util.ListIterator listIteratorImpl(java.util.List,int) -> listIteratorImpl
    82:82:java.util.ArrayList newArrayList() -> newArrayList
    102:106:java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    125:129:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    141:142:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    172:173:java.util.ArrayList newArrayListWithCapacity(int) -> newArrayListWithCapacity
    191:191:java.util.ArrayList newArrayListWithExpectedSize(int) -> newArrayListWithExpectedSize
    251:251:java.util.concurrent.CopyOnWriteArrayList newCopyOnWriteArrayList() -> newCopyOnWriteArrayList
    267:270:java.util.concurrent.CopyOnWriteArrayList newCopyOnWriteArrayList(java.lang.Iterable) -> newCopyOnWriteArrayList
    213:213:java.util.LinkedList newLinkedList() -> newLinkedList
    235:236:java.util.LinkedList newLinkedList(java.lang.Iterable) -> newLinkedList
    646:650:java.util.List partition(java.util.List,int) -> partition
    783:790:java.util.List reverse(java.util.List) -> reverse
    1061:1082:java.util.List subListImpl(java.util.List,int,int) -> subListImpl
    523:525:java.util.List transform(java.util.List,com.google.common.base.Function) -> transform
com.google.common.collect.Lists$1 -> com.google.common.collect.Lists$1:
    1063:1063:void <init>(java.util.List) -> <init>
    1066:1066:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$2 -> com.google.common.collect.Lists$2:
    1073:1073:void <init>(java.util.List) -> <init>
    1076:1076:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$AbstractListWrapper -> com.google.common.collect.Lists$AbstractListWrapper:
    1088:1089:void <init>(java.util.List) -> <init>
    1094:1094:void add(int,java.lang.Object) -> add
    1099:1099:boolean addAll(int,java.util.Collection) -> addAll
    1119:1119:boolean contains(java.lang.Object) -> contains
    1104:1104:java.lang.Object get(int) -> get
    1109:1109:java.lang.Object remove(int) -> remove
    1114:1114:java.lang.Object set(int,java.lang.Object) -> set
    1124:1124:int size() -> size
com.google.common.collect.Lists$CharSequenceAsList -> com.google.common.collect.Lists$CharSequenceAsList:
    755:756:void <init>(java.lang.CharSequence) -> <init>
    752:752:java.lang.Object get(int) -> get
    761:762:java.lang.Character get(int) -> get
    767:767:int size() -> size
com.google.common.collect.Lists$OnePlusArrayList -> com.google.common.collect.Lists$OnePlusArrayList:
    317:319:void <init>(java.lang.Object,java.lang.Object[]) -> <init>
    330:331:java.lang.Object get(int) -> get
    324:324:int size() -> size
com.google.common.collect.Lists$Partition -> com.google.common.collect.Lists$Partition:
    657:659:void <init>(java.util.List,int) -> <init>
    653:653:java.lang.Object get(int) -> get
    664:667:java.util.List get(int) -> get
    677:677:boolean isEmpty() -> isEmpty
    672:672:int size() -> size
com.google.common.collect.Lists$RandomAccessListWrapper -> com.google.common.collect.Lists$RandomAccessListWrapper:
    1131:1131:void <init>(java.util.List) -> <init>
com.google.common.collect.Lists$RandomAccessPartition -> com.google.common.collect.Lists$RandomAccessPartition:
    683:683:void <init>(java.util.List,int) -> <init>
com.google.common.collect.Lists$RandomAccessReverseList -> com.google.common.collect.Lists$RandomAccessReverseList:
    934:934:void <init>(java.util.List) -> <init>
com.google.common.collect.Lists$ReverseList -> com.google.common.collect.Lists$ReverseList:
    797:798:void <init>(java.util.List) -> <init>
    794:794:int access$000(com.google.common.collect.Lists$ReverseList,int) -> access$000
    819:819:void add(int,java.lang.Object) -> add
    824:824:void clear() -> clear
    844:844:java.lang.Object get(int) -> get
    802:802:java.util.List getForwardList() -> getForwardList
    860:860:java.util.Iterator iterator() -> iterator
    865:867:java.util.ListIterator listIterator(int) -> listIterator
    829:829:java.lang.Object remove(int) -> remove
    834:834:void removeRange(int,int) -> removeRange
    806:807:int reverseIndex(int) -> reverseIndex
    812:813:int reversePosition(int) -> reversePosition
    839:839:java.lang.Object set(int,java.lang.Object) -> set
    849:849:int size() -> size
    854:855:java.util.List subList(int,int) -> subList
com.google.common.collect.Lists$ReverseList$1 -> com.google.common.collect.Lists$ReverseList$1:
    867:867:void <init>(com.google.common.collect.Lists$ReverseList,java.util.ListIterator) -> <init>
    873:875:void add(java.lang.Object) -> add
    880:880:boolean hasNext() -> hasNext
    885:885:boolean hasPrevious() -> hasPrevious
    890:894:java.lang.Object next() -> next
    899:899:int nextIndex() -> nextIndex
    904:908:java.lang.Object previous() -> previous
    913:913:int previousIndex() -> previousIndex
    918:920:void remove() -> remove
    925:926:void set(java.lang.Object) -> set
com.google.common.collect.Lists$StringAsImmutableList -> com.google.common.collect.Lists$StringAsImmutableList:
    715:716:void <init>(java.lang.String) -> <init>
    710:710:java.lang.Object get(int) -> get
    742:743:java.lang.Character get(int) -> get
    721:721:int indexOf(java.lang.Object) -> indexOf
    726:726:int lastIndexOf(java.lang.Object) -> lastIndexOf
    748:748:int size() -> size
    710:710:java.util.List subList(int,int) -> subList
    731:732:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.Lists$TransformingRandomAccessList -> com.google.common.collect.Lists$TransformingRandomAccessList:
    582:584:void <init>(java.util.List,com.google.common.base.Function) -> <init>
    589:589:void clear() -> clear
    594:594:java.lang.Object get(int) -> get
    614:614:boolean isEmpty() -> isEmpty
    599:599:java.util.Iterator iterator() -> iterator
    604:604:java.util.ListIterator listIterator(int) -> listIterator
    619:619:java.lang.Object remove(int) -> remove
    624:624:int size() -> size
com.google.common.collect.Lists$TransformingRandomAccessList$1 -> com.google.common.collect.Lists$TransformingRandomAccessList$1:
    604:604:void <init>(com.google.common.collect.Lists$TransformingRandomAccessList,java.util.ListIterator) -> <init>
    607:607:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Lists$TransformingSequentialList -> com.google.common.collect.Lists$TransformingSequentialList:
    538:540:void <init>(java.util.List,com.google.common.base.Function) -> <init>
    549:549:void clear() -> clear
    559:559:java.util.ListIterator listIterator(int) -> listIterator
    554:554:int size() -> size
com.google.common.collect.Lists$TransformingSequentialList$1 -> com.google.common.collect.Lists$TransformingSequentialList$1:
    559:559:void <init>(com.google.common.collect.Lists$TransformingSequentialList,java.util.ListIterator) -> <init>
    562:562:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Lists$TwoPlusArrayList -> com.google.common.collect.Lists$TwoPlusArrayList:
    344:347:void <init>(java.lang.Object,java.lang.Object,java.lang.Object[]) -> <init>
    359:365:java.lang.Object get(int) -> get
    352:352:int size() -> size
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    98:110:void <init>() -> <init>
    178:183:com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    188:188:int getConcurrencyLevel() -> getConcurrencyLevel
    154:154:int getInitialCapacity() -> getInitialCapacity
    129:129:com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    219:219:com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> getKeyStrength
    265:265:com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> getValueStrength
    144:149:com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    122:124:com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence) -> keyEquivalence
    280:283:java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    209:213:com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setKeyStrength
    255:259:com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setValueStrength
    292:308:java.lang.String toString() -> toString
    205:205:com.google.common.collect.MapMaker weakKeys() -> weakKeys
    241:241:com.google.common.collect.MapMaker weakValues() -> weakValues
com.google.common.collect.MapMaker$Dummy -> com.google.common.collect.MapMaker$Dummy:
    250:251:void <clinit>() -> <clinit>
    250:250:void <init>(java.lang.String,int) -> <init>
    250:250:com.google.common.collect.MapMaker$Dummy valueOf(java.lang.String) -> valueOf
    250:250:com.google.common.collect.MapMaker$Dummy[] values() -> values
com.google.common.collect.MapMakerInternalMap -> com.google.common.collect.MapMakerInternalMap:
    1005:1005:void <clinit>() -> <clinit>
    160:192:void <init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper) -> <init>
    69:69:java.util.ArrayList access$900(java.util.Collection) -> access$900
    2473:2474:void clear() -> clear
    2363:2364:boolean containsKey(java.lang.Object) -> containsKey
    2378:2395:boolean containsValue(java.lang.Object) -> containsValue
    1074:1075:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    199:214:com.google.common.collect.MapMakerInternalMap create(com.google.common.collect.MapMaker) -> create
    1115:1115:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> createSegment
    230:241:com.google.common.collect.MapMakerInternalMap createWithDummyValues(com.google.common.collect.MapMaker) -> createWithDummyValues
    2498:2499:java.util.Set entrySet() -> entrySet
    2342:2343:java.lang.Object get(java.lang.Object) -> get
    2354:2355:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object) -> getEntry
    1123:1126:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1079:1080:int hash(java.lang.Object) -> hash
    2307:2320:boolean isEmpty() -> isEmpty
    1100:1100:boolean isLiveForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isLiveForTesting
    2482:2483:java.util.Set keySet() -> keySet
    2282:2282:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    1131:1131:com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int) -> newSegmentArray
    2408:2411:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2425:2426:void putAll(java.util.Map) -> putAll
    2417:2420:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    1090:1091:void reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> reclaimKey
    1084:1086:void reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    2436:2437:java.lang.Object remove(java.lang.Object) -> remove
    2446:2447:boolean remove(java.lang.Object,java.lang.Object) -> remove
    2453:2459:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    2465:2468:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1111:1111:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> segmentFor
    2329:2334:int size() -> size
    2825:2826:java.util.ArrayList toArrayList(java.util.Collection) -> toArrayList
    385:385:com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference() -> unsetWeakValueReference
    2292:2292:com.google.common.base.Equivalence valueEquivalence() -> valueEquivalence
    2287:2287:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
    2490:2491:java.util.Collection values() -> values
    2835:2839:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.MapMakerInternalMap$1 -> com.google.common.collect.MapMakerInternalMap$1:
    1006:1006:void <init>() -> <init>
    1006:1006:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1006:1006:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy -> com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:
    2866:2872:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2848:2848:java.lang.Object delegate() -> delegate
    2848:2848:java.util.Map delegate() -> delegate
    2877:2877:java.util.concurrent.ConcurrentMap delegate() -> delegate
    2903:2908:void readEntries(java.io.ObjectInputStream) -> readEntries
    2891:2897:com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) -> readMapMaker
    2881:2886:void writeMapTo(java.io.ObjectOutputStream) -> writeMapTo
com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry:
    344:347:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    357:357:int getHash() -> getHash
    352:352:java.lang.Object getKey() -> getKey
    362:362:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry:
    652:654:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    664:664:int getHash() -> getHash
    659:659:java.lang.Object getKey() -> getKey
    669:669:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$CleanupMapTask -> com.google.common.collect.MapMakerInternalMap$CleanupMapTask:
    2263:2264:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2269:2275:void run() -> run
com.google.common.collect.MapMakerInternalMap$DummyInternalEntry -> com.google.common.collect.MapMakerInternalMap$DummyInternalEntry:
    976:977:void <init>() -> <init>
    987:987:int getHash() -> getHash
    992:992:java.lang.Object getKey() -> getKey
    974:974:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
    982:982:com.google.common.collect.MapMakerInternalMap$DummyInternalEntry getNext() -> getNext
    997:997:java.lang.Object getValue() -> getValue
com.google.common.collect.MapMakerInternalMap$EntryIterator -> com.google.common.collect.MapMakerInternalMap$EntryIterator:
    2675:2675:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2675:2675:java.lang.Object next() -> next
    2679:2679:java.util.Map$Entry next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> com.google.common.collect.MapMakerInternalMap$EntrySet:
    2760:2760:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2804:2804:void clear() -> clear
    2769:2779:boolean contains(java.lang.Object) -> contains
    2799:2799:boolean isEmpty() -> isEmpty
    2764:2764:java.util.Iterator iterator() -> iterator
    2784:2789:boolean remove(java.lang.Object) -> remove
    2794:2794:int size() -> size
com.google.common.collect.MapMakerInternalMap$HashIterator -> com.google.common.collect.MapMakerInternalMap$HashIterator:
    2514:2517:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2524:2539:void advance() -> advance
    2576:2587:boolean advanceTo(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> advanceTo
    2592:2592:boolean hasNext() -> hasNext
    2596:2601:com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> nextEntry
    2548:2550:boolean nextInChain() -> nextInChain
    2560:2562:boolean nextInTable() -> nextInTable
    2606:2608:void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> com.google.common.collect.MapMakerInternalMap$KeyIterator:
    2612:2612:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2616:2616:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> com.google.common.collect.MapMakerInternalMap$KeySet:
    2684:2684:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2713:2713:void clear() -> clear
    2703:2703:boolean contains(java.lang.Object) -> contains
    2698:2698:boolean isEmpty() -> isEmpty
    2688:2688:java.util.Iterator iterator() -> iterator
    2708:2708:boolean remove(java.lang.Object) -> remove
    2693:2693:int size() -> size
com.google.common.collect.MapMakerInternalMap$SafeToArraySet -> com.google.common.collect.MapMakerInternalMap$SafeToArraySet:
    2808:2808:void <init>() -> <init>
    2808:2808:void <init>(com.google.common.collect.MapMakerInternalMap$1) -> <init>
    2814:2814:java.lang.Object[] toArray() -> toArray
    2819:2819:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$Segment -> com.google.common.collect.MapMakerInternalMap$Segment:
    1205:1210:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1773:1787:void clear() -> clear
    1379:1379:void clearReferenceQueue(java.lang.ref.ReferenceQueue) -> clearReferenceQueue
    1886:1910:boolean clearValueForTesting(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> clearValueForTesting
    1436:1444:boolean containsKey(java.lang.Object,int) -> containsKey
    1454:1473:boolean containsValue(java.lang.Object) -> containsValue
    1235:1235:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    1305:1305:com.google.common.collect.MapMakerInternalMap$InternalEntry copyForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyForTesting
    1354:1357:void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue) -> drainKeyReferenceQueue
    1368:1371:void drainValueReferenceQueue(java.lang.ref.ReferenceQueue) -> drainValueReferenceQueue
    1536:1599:void expand() -> expand
    1419:1431:java.lang.Object get(java.lang.Object,int) -> get
    1392:1404:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object,int) -> getEntry
    1385:1386:com.google.common.collect.MapMakerInternalMap$InternalEntry getFirst(int) -> getFirst
    1264:1264:java.lang.ref.ReferenceQueue getKeyReferenceQueueForTesting() -> getKeyReferenceQueueForTesting
    1414:1414:com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int) -> getLiveEntry
    1949:1955:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1334:1334:java.lang.Object getLiveValueForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValueForTesting
    1269:1269:java.lang.ref.ReferenceQueue getValueReferenceQueueForTesting() -> getValueReferenceQueueForTesting
    1274:1274:com.google.common.collect.MapMakerInternalMap$WeakValueReference getWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getWeakValueReferenceForTesting
    1243:1248:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    1940:1940:boolean isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isCollected
    1239:1239:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    1315:1315:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntryForTesting(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntryForTesting
    1283:1283:com.google.common.collect.MapMakerInternalMap$WeakValueReference newWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> newWeakValueReferenceForTesting
    1968:1969:void postReadCleanup() -> postReadCleanup
    1979:1979:void preWriteCleanup() -> preWriteCleanup
    1477:1530:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    1822:1843:boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry,int) -> reclaimKey
    1849:1877:boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    1692:1728:java.lang.Object remove(java.lang.Object,int) -> remove
    1732:1769:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    1915:1927:boolean removeEntryForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> removeEntryForTesting
    1805:1815:com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> removeFromChain
    1326:1326:com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChainForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> removeFromChainForTesting
    1321:1321:boolean removeTableEntryForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> removeTableEntryForTesting
    1603:1646:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    1650:1687:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    1983:1983:void runCleanup() -> runCleanup
    1987:1993:void runLockedCleanup() -> runLockedCleanup
    1300:1300:void setTableEntryForTesting(int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> setTableEntryForTesting
    1230:1230:void setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    1310:1310:void setValueForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValueForTesting
    1293:1293:void setWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> setWeakValueReferenceForTesting
    1341:1346:void tryDrainReferenceQueues() -> tryDrainReferenceQueues
com.google.common.collect.MapMakerInternalMap$SerializationProxy -> com.google.common.collect.MapMakerInternalMap$SerializationProxy:
    2927:2927:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2937:2940:void readObject(java.io.ObjectInputStream) -> readObject
    2944:2944:java.lang.Object readResolve() -> readResolve
    2932:2933:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.MapMakerInternalMap$Strength -> com.google.common.collect.MapMakerInternalMap$Strength:
    244:252:void <clinit>() -> <clinit>
    244:244:void <init>(java.lang.String,int) -> <init>
    244:244:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    244:244:com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    244:244:com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
com.google.common.collect.MapMakerInternalMap$Strength$1 -> com.google.common.collect.MapMakerInternalMap$Strength$1:
    245:245:void <init>(java.lang.String,int) -> <init>
    248:248:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$Strength$2 -> com.google.common.collect.MapMakerInternalMap$Strength$2:
    252:252:void <init>(java.lang.String,int) -> <init>
    255:255:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry:
    575:575:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry) -> <init>
    586:586:com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry) -> copy
    571:571:java.lang.Object getValue() -> getValue
    580:580:com.google.common.collect.MapMaker$Dummy getValue() -> getValue
com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper:
    596:596:void <clinit>() -> <clinit>
    593:593:void <init>() -> <init>
    593:593:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    627:627:com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry) -> copy
    600:600:com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry$Helper instance() -> instance
    605:605:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    593:593:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    640:640:com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry) -> newEntry
    593:593:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    619:619:com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    593:593:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    610:610:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueSegment:
    2095:2095:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2088:2088:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2106:2106:com.google.common.collect.MapMakerInternalMap$StrongKeyDummyValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2088:2088:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry:
    392:395:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> <init>
    409:411:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    401:401:java.lang.Object getValue() -> getValue
    405:405:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:
    419:419:void <clinit>() -> <clinit>
    416:416:void <init>() -> <init>
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    451:451:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    423:423:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper instance() -> instance
    428:428:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    468:468:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> newEntry
    416:416:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    443:443:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    416:416:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    459:459:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,java.lang.Object) -> setValue
    433:433:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment:
    2007:2007:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1999:1999:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2018:2018:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    1999:1999:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry:
    478:481:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> <init>
    474:474:com.google.common.collect.MapMakerInternalMap$WeakValueReference access$600(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> access$600
    474:474:com.google.common.collect.MapMakerInternalMap$WeakValueReference access$602(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> access$602
    491:491:void clearValue() -> clearValue
    502:503:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    486:486:java.lang.Object getValue() -> getValue
    509:509:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    495:497:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:
    516:516:void <clinit>() -> <clinit>
    513:513:void <init>() -> <init>
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    547:550:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    520:520:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper instance() -> instance
    525:525:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    565:565:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> newEntry
    513:513:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    539:539:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    513:513:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    556:556:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,java.lang.Object) -> setValue
    530:530:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:
    2025:2032:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2023:2023:java.lang.ref.ReferenceQueue access$100(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment) -> access$100
    2023:2023:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2048:2048:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2042:2042:java.lang.ref.ReferenceQueue getValueReferenceQueueForTesting() -> getValueReferenceQueueForTesting
    2054:2054:com.google.common.collect.MapMakerInternalMap$WeakValueReference getWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getWeakValueReferenceForTesting
    2083:2083:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2078:2078:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2060:2060:com.google.common.collect.MapMakerInternalMap$WeakValueReference newWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> newWeakValueReferenceForTesting
    2023:2023:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
    2067:2073:void setWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> setWeakValueReferenceForTesting
com.google.common.collect.MapMakerInternalMap$ValueIterator -> com.google.common.collect.MapMakerInternalMap$ValueIterator:
    2620:2620:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2624:2624:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$Values -> com.google.common.collect.MapMakerInternalMap$Values:
    2718:2718:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2742:2742:void clear() -> clear
    2737:2737:boolean contains(java.lang.Object) -> contains
    2732:2732:boolean isEmpty() -> isEmpty
    2722:2722:java.util.Iterator iterator() -> iterator
    2727:2727:int size() -> size
    2750:2750:java.lang.Object[] toArray() -> toArray
    2755:2755:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry:
    679:679:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry) -> <init>
    691:691:com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry) -> copy
    674:674:java.lang.Object getValue() -> getValue
    684:684:com.google.common.collect.MapMaker$Dummy getValue() -> getValue
com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper:
    701:701:void <clinit>() -> <clinit>
    698:698:void <init>() -> <init>
    698:698:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    731:735:com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry) -> copy
    705:705:com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry$Helper instance() -> instance
    710:710:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    698:698:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    748:748:com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry) -> newEntry
    698:698:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    723:723:com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    698:698:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    715:715:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment:
    2224:2230:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2222:2222:java.lang.ref.ReferenceQueue access$200(com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueSegment) -> access$200
    2222:2222:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2246:2246:com.google.common.collect.MapMakerInternalMap$WeakKeyDummyValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2240:2240:java.lang.ref.ReferenceQueue getKeyReferenceQueueForTesting() -> getKeyReferenceQueueForTesting
    2256:2256:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2251:2251:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2222:2222:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry:
    757:764:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> <init>
    779:781:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    770:770:java.lang.Object getValue() -> getValue
    774:774:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:
    789:789:void <clinit>() -> <clinit>
    786:786:void <init>() -> <init>
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    820:824:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    793:793:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper instance() -> instance
    798:798:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    839:839:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> newEntry
    786:786:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    812:812:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    786:786:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    830:830:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,java.lang.Object) -> setValue
    803:803:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment:
    2113:2120:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2111:2111:java.lang.ref.ReferenceQueue access$300(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment) -> access$300
    2111:2111:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2136:2136:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2130:2130:java.lang.ref.ReferenceQueue getKeyReferenceQueueForTesting() -> getKeyReferenceQueueForTesting
    2146:2146:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2141:2141:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2111:2111:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry:
    849:853:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> <init>
    845:845:com.google.common.collect.MapMakerInternalMap$WeakValueReference access$700(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> access$700
    845:845:com.google.common.collect.MapMakerInternalMap$WeakValueReference access$702(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> access$702
    873:873:void clearValue() -> clearValue
    865:867:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    858:858:java.lang.Object getValue() -> getValue
    884:884:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    877:879:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:
    891:891:void <clinit>() -> <clinit>
    888:888:void <init>() -> <init>
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    921:928:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    895:895:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper instance() -> instance
    900:900:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    943:943:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> newEntry
    888:888:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    913:913:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    888:888:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    934:934:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,java.lang.Object) -> setValue
    905:905:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:
    2153:2160:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2151:2151:java.lang.ref.ReferenceQueue access$400(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$400
    2151:2151:java.lang.ref.ReferenceQueue access$500(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$500
    2151:2151:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2181:2181:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2170:2170:java.lang.ref.ReferenceQueue getKeyReferenceQueueForTesting() -> getKeyReferenceQueueForTesting
    2175:2175:java.lang.ref.ReferenceQueue getValueReferenceQueueForTesting() -> getValueReferenceQueueForTesting
    2187:2187:com.google.common.collect.MapMakerInternalMap$WeakValueReference getWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getWeakValueReferenceForTesting
    2217:2217:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2211:2212:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2193:2193:com.google.common.collect.MapMakerInternalMap$WeakValueReference newWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> newWeakValueReferenceForTesting
    2151:2151:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
    2200:2206:void setWeakValueReferenceForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> setWeakValueReferenceForTesting
com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl -> com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl:
    1033:1034:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    1044:1044:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1039:1039:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:
    2636:2638:void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object) -> <init>
    2654:2656:boolean equals(java.lang.Object) -> equals
    2643:2643:java.lang.Object getKey() -> getKey
    2648:2648:java.lang.Object getValue() -> getValue
    2664:2664:int hashCode() -> hashCode
    2669:2670:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    82:82:void <init>() -> <init>
    81:81:java.util.Map access$100(java.util.Map) -> access$100
    81:81:java.util.Set access$200(java.util.Set) -> access$200
    81:81:java.util.SortedSet access$300(java.util.SortedSet) -> access$300
    81:81:java.util.NavigableSet access$400(java.util.NavigableSet) -> access$400
    81:81:java.util.Map$Entry access$800(java.util.Map$Entry) -> access$800
    1368:1368:com.google.common.base.Converter asConverter(com.google.common.collect.BiMap) -> asConverter
    1870:1871:com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer) -> asEntryToEntryFunction
    1840:1841:com.google.common.base.Function asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer) -> asEntryToValueFunction
    1817:1818:com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function) -> asEntryTransformer
    704:704:java.util.Map asMap(java.util.Set,com.google.common.base.Function) -> asMap
    731:731:java.util.SortedMap asMap(java.util.SortedSet,com.google.common.base.Function) -> asMap
    760:760:java.util.NavigableMap asMap(java.util.NavigableSet,com.google.common.base.Function) -> asMap
    844:844:java.util.Iterator asMapEntryIterator(java.util.Set,com.google.common.base.Function) -> asMapEntryIterator
    1828:1829:com.google.common.base.Function asValueToValueFunction(com.google.common.collect.Maps$EntryTransformer,java.lang.Object) -> asValueToValueFunction
    225:225:int capacity(int) -> capacity
    3456:3459:boolean containsEntryImpl(java.util.Collection,java.lang.Object) -> containsEntryImpl
    3435:3435:boolean containsKeyImpl(java.util.Map,java.lang.Object) -> containsKeyImpl
    3440:3440:boolean containsValueImpl(java.util.Map,java.lang.Object) -> containsValueImpl
    410:414:com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map) -> difference
    435:442:com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map,com.google.common.base.Equivalence) -> difference
    464:473:com.google.common.collect.SortedMapDifference difference(java.util.SortedMap,java.util.Map) -> difference
    484:495:void doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> doDifference
    3484:3486:boolean equalsImpl(java.util.Map,java.lang.Object) -> equalsImpl
    2396:2399:java.util.Map filterEntries(java.util.Map,com.google.common.base.Predicate) -> filterEntries
    2430:2433:java.util.SortedMap filterEntries(java.util.SortedMap,com.google.common.base.Predicate) -> filterEntries
    2465:2468:java.util.NavigableMap filterEntries(java.util.NavigableMap,com.google.common.base.Predicate) -> filterEntries
    2500:2504:com.google.common.collect.BiMap filterEntries(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterEntries
    2513:2514:java.util.Map filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap,com.google.common.base.Predicate) -> filterFiltered
    2523:2524:java.util.SortedMap filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap,com.google.common.base.Predicate) -> filterFiltered
    2535:2536:java.util.NavigableMap filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap,com.google.common.base.Predicate) -> filterFiltered
    2545:2546:com.google.common.collect.BiMap filterFiltered(com.google.common.collect.Maps$FilteredEntryBiMap,com.google.common.base.Predicate) -> filterFiltered
    2143:2147:java.util.Map filterKeys(java.util.Map,com.google.common.base.Predicate) -> filterKeys
    2180:2180:java.util.SortedMap filterKeys(java.util.SortedMap,com.google.common.base.Predicate) -> filterKeys
    2214:2214:java.util.NavigableMap filterKeys(java.util.NavigableMap,com.google.common.base.Predicate) -> filterKeys
    2243:2244:com.google.common.collect.BiMap filterKeys(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterKeys
    2272:2272:java.util.Map filterValues(java.util.Map,com.google.common.base.Predicate) -> filterValues
    2303:2303:java.util.SortedMap filterValues(java.util.SortedMap,com.google.common.base.Predicate) -> filterValues
    2335:2335:java.util.NavigableMap filterValues(java.util.NavigableMap,com.google.common.base.Predicate) -> filterValues
    2367:2367:com.google.common.collect.BiMap filterValues(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterValues
    1228:1235:com.google.common.collect.ImmutableMap fromProperties(java.util.Properties) -> fromProperties
    1252:1252:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    143:166:com.google.common.collect.ImmutableMap immutableEnumMap(java.util.Map) -> immutableEnumMap
    4035:4040:com.google.common.collect.ImmutableMap indexMap(java.util.Collection) -> indexMap
    103:103:com.google.common.base.Function keyFunction() -> keyFunction
    112:112:java.util.Iterator keyIterator(java.util.Iterator) -> keyIterator
    3560:3560:java.lang.Object keyOrNull(java.util.Map$Entry) -> keyOrNull
    2111:2111:com.google.common.base.Predicate keyPredicateOnEntries(com.google.common.base.Predicate) -> keyPredicateOnEntries
    291:291:java.util.concurrent.ConcurrentMap newConcurrentMap() -> newConcurrentMap
    360:360:java.util.EnumMap newEnumMap(java.lang.Class) -> newEnumMap
    376:376:java.util.EnumMap newEnumMap(java.util.Map) -> newEnumMap
    183:183:java.util.HashMap newHashMap() -> newHashMap
    201:201:java.util.HashMap newHashMap(java.util.Map) -> newHashMap
    216:216:java.util.HashMap newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    389:389:java.util.IdentityHashMap newIdentityHashMap() -> newIdentityHashMap
    249:249:java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    266:266:java.util.LinkedHashMap newLinkedHashMap(java.util.Map) -> newLinkedHashMap
    282:282:java.util.LinkedHashMap newLinkedHashMapWithExpectedSize(int) -> newLinkedHashMapWithExpectedSize
    307:307:java.util.TreeMap newTreeMap() -> newTreeMap
    327:327:java.util.TreeMap newTreeMap(java.util.SortedMap) -> newTreeMap
    350:350:java.util.TreeMap newTreeMap(java.util.Comparator) -> newTreeMap
    676:676:java.util.Comparator orNaturalOrder(java.util.Comparator) -> orNaturalOrder
    3507:3508:void putAllImpl(java.util.Map,java.util.Map) -> putAllImpl
    3474:3477:boolean removeEntryImpl(java.util.Collection,java.lang.Object) -> removeEntryImpl
    1033:1033:java.util.NavigableSet removeOnlyNavigableSet(java.util.NavigableSet) -> removeOnlyNavigableSet
    979:979:java.util.Set removeOnlySet(java.util.Set) -> removeOnlySet
    998:998:java.util.SortedSet removeOnlySortedSet(java.util.SortedSet) -> removeOnlySortedSet
    3412:3414:boolean safeContainsKey(java.util.Map,java.lang.Object) -> safeContainsKey
    3399:3401:java.lang.Object safeGet(java.util.Map,java.lang.Object) -> safeGet
    3425:3427:java.lang.Object safeRemove(java.util.Map,java.lang.Object) -> safeRemove
    4063:4082:java.util.NavigableMap subMap(java.util.NavigableMap,com.google.common.collect.Range) -> subMap
    1447:1447:com.google.common.collect.BiMap synchronizedBiMap(com.google.common.collect.BiMap) -> synchronizedBiMap
    3319:3319:java.util.NavigableMap synchronizedNavigableMap(java.util.NavigableMap) -> synchronizedNavigableMap
    1106:1106:com.google.common.collect.ImmutableMap toMap(java.lang.Iterable,com.google.common.base.Function) -> toMap
    1124:1131:com.google.common.collect.ImmutableMap toMap(java.util.Iterator,com.google.common.base.Function) -> toMap
    3493:3502:java.lang.String toStringImpl(java.util.Map) -> toStringImpl
    1678:1678:java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1730:1730:java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1784:1784:java.util.NavigableMap transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1852:1854:java.util.Map$Entry transformEntry(com.google.common.collect.Maps$EntryTransformer,java.util.Map$Entry) -> transformEntry
    1541:1541:java.util.Map transformValues(java.util.Map,com.google.common.base.Function) -> transformValues
    1582:1582:java.util.SortedMap transformValues(java.util.SortedMap,com.google.common.base.Function) -> transformValues
    1626:1626:java.util.NavigableMap transformValues(java.util.NavigableMap,com.google.common.base.Function) -> transformValues
    1166:1166:com.google.common.collect.ImmutableMap uniqueIndex(java.lang.Iterable,com.google.common.base.Function) -> uniqueIndex
    1201:1211:com.google.common.collect.ImmutableMap uniqueIndex(java.util.Iterator,com.google.common.base.Function) -> uniqueIndex
    1462:1462:com.google.common.collect.BiMap unmodifiableBiMap(com.google.common.collect.BiMap) -> unmodifiableBiMap
    1277:1278:java.util.Map$Entry unmodifiableEntry(java.util.Map$Entry) -> unmodifiableEntry
    1293:1293:com.google.common.collect.UnmodifiableIterator unmodifiableEntryIterator(java.util.Iterator) -> unmodifiableEntryIterator
    1264:1264:java.util.Set unmodifiableEntrySet(java.util.Set) -> unmodifiableEntrySet
    501:504:java.util.Map unmodifiableMap(java.util.Map) -> unmodifiableMap
    3114:3120:java.util.NavigableMap unmodifiableNavigableMap(java.util.NavigableMap) -> unmodifiableNavigableMap
    3126:3126:java.util.Map$Entry unmodifiableOrNull(java.util.Map$Entry) -> unmodifiableOrNull
    108:108:com.google.common.base.Function valueFunction() -> valueFunction
    121:121:java.util.Iterator valueIterator(java.util.Iterator) -> valueIterator
    3565:3565:java.lang.Object valueOrNull(java.util.Map$Entry) -> valueOrNull
    2115:2115:com.google.common.base.Predicate valuePredicateOnEntries(com.google.common.base.Predicate) -> valuePredicateOnEntries
com.google.common.collect.Maps$1 -> com.google.common.collect.Maps$1:
    112:112:void <init>(java.util.Iterator) -> <init>
    112:112:java.lang.Object transform(java.lang.Object) -> transform
    115:115:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$10 -> com.google.common.collect.Maps$10:
    1829:1829:void <init>(com.google.common.collect.Maps$EntryTransformer,java.lang.Object) -> <init>
    1832:1832:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$11 -> com.google.common.collect.Maps$11:
    1841:1841:void <init>(com.google.common.collect.Maps$EntryTransformer) -> <init>
    1841:1841:java.lang.Object apply(java.lang.Object) -> apply
    1844:1844:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$12 -> com.google.common.collect.Maps$12:
    1854:1854:void <init>(java.util.Map$Entry,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1857:1857:java.lang.Object getKey() -> getKey
    1862:1862:java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$13 -> com.google.common.collect.Maps$13:
    1871:1871:void <init>(com.google.common.collect.Maps$EntryTransformer) -> <init>
    1871:1871:java.lang.Object apply(java.lang.Object) -> apply
    1874:1874:java.util.Map$Entry apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$2 -> com.google.common.collect.Maps$2:
    121:121:void <init>(java.util.Iterator) -> <init>
    121:121:java.lang.Object transform(java.lang.Object) -> transform
    124:124:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$3 -> com.google.common.collect.Maps$3:
    844:844:void <init>(java.util.Iterator,com.google.common.base.Function) -> <init>
    844:844:java.lang.Object transform(java.lang.Object) -> transform
    847:847:java.util.Map$Entry transform(java.lang.Object) -> transform
com.google.common.collect.Maps$4 -> com.google.common.collect.Maps$4:
    979:979:void <init>(java.util.Set) -> <init>
    987:987:boolean add(java.lang.Object) -> add
    992:992:boolean addAll(java.util.Collection) -> addAll
    979:979:java.lang.Object delegate() -> delegate
    979:979:java.util.Collection delegate() -> delegate
    982:982:java.util.Set delegate() -> delegate
com.google.common.collect.Maps$5 -> com.google.common.collect.Maps$5:
    998:998:void <init>(java.util.SortedSet) -> <init>
    1006:1006:boolean add(java.lang.Object) -> add
    1011:1011:boolean addAll(java.util.Collection) -> addAll
    998:998:java.lang.Object delegate() -> delegate
    998:998:java.util.Collection delegate() -> delegate
    998:998:java.util.Set delegate() -> delegate
    1001:1001:java.util.SortedSet delegate() -> delegate
    1016:1016:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1021:1021:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1026:1026:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Maps$6 -> com.google.common.collect.Maps$6:
    1033:1033:void <init>(java.util.NavigableSet) -> <init>
    1041:1041:boolean add(java.lang.Object) -> add
    1046:1046:boolean addAll(java.util.Collection) -> addAll
    1033:1033:java.lang.Object delegate() -> delegate
    1033:1033:java.util.Collection delegate() -> delegate
    1033:1033:java.util.Set delegate() -> delegate
    1033:1033:java.util.SortedSet delegate() -> delegate
    1036:1036:java.util.NavigableSet delegate() -> delegate
    1083:1083:java.util.NavigableSet descendingSet() -> descendingSet
    1051:1051:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1056:1056:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1061:1061:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1067:1068:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1073:1073:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1078:1078:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.Maps$7 -> com.google.common.collect.Maps$7:
    1278:1278:void <init>(java.util.Map$Entry) -> <init>
    1281:1281:java.lang.Object getKey() -> getKey
    1286:1286:java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$8 -> com.google.common.collect.Maps$8:
    1293:1293:void <init>(java.util.Iterator) -> <init>
    1296:1296:boolean hasNext() -> hasNext
    1293:1293:java.lang.Object next() -> next
    1301:1301:java.util.Map$Entry next() -> next
com.google.common.collect.Maps$9 -> com.google.common.collect.Maps$9:
    1818:1818:void <init>(com.google.common.base.Function) -> <init>
    1821:1821:java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$AbstractFilteredMap -> com.google.common.collect.Maps$AbstractFilteredMap:
    2553:2555:void <init>(java.util.Map,com.google.common.base.Predicate) -> <init>
    2563:2563:boolean apply(java.lang.Object,java.lang.Object) -> apply
    2582:2582:boolean containsKey(java.lang.Object) -> containsKey
    2603:2603:java.util.Collection createValues() -> createValues
    2587:2588:java.lang.Object get(java.lang.Object) -> get
    2593:2593:boolean isEmpty() -> isEmpty
    2568:2569:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2574:2577:void putAll(java.util.Map) -> putAll
    2598:2598:java.lang.Object remove(java.lang.Object) -> remove
com.google.common.collect.Maps$AsMapView -> com.google.common.collect.Maps$AsMapView:
    772:774:void <init>(java.util.Set,com.google.common.base.Function) -> <init>
    769:769:java.util.Set backingSet() -> backingSet
    821:821:void clear() -> clear
    794:794:boolean containsKey(java.lang.Object) -> containsKey
    838:838:java.util.Set createEntrySet() -> createEntrySet
    779:779:java.util.Set createKeySet() -> createKeySet
    784:784:java.util.Collection createValues() -> createValues
    799:802:java.lang.Object get(java.lang.Object) -> get
    810:813:java.lang.Object remove(java.lang.Object) -> remove
    789:789:int size() -> size
com.google.common.collect.Maps$AsMapView$1EntrySetImpl -> com.google.common.collect.Maps$AsMapView$1EntrySetImpl:
    827:827:void <init>(com.google.common.collect.Maps$AsMapView) -> <init>
    835:835:java.util.Iterator iterator() -> iterator
    830:830:java.util.Map map() -> map
com.google.common.collect.Maps$BiMapConverter -> com.google.common.collect.Maps$BiMapConverter:
    1374:1375:void <init>(com.google.common.collect.BiMap) -> <init>
    1389:1390:java.lang.Object convert(com.google.common.collect.BiMap,java.lang.Object) -> convert
    1385:1385:java.lang.Object doBackward(java.lang.Object) -> doBackward
    1380:1380:java.lang.Object doForward(java.lang.Object) -> doForward
    1396:1398:boolean equals(java.lang.Object) -> equals
    1405:1405:int hashCode() -> hashCode
    1411:1411:java.lang.String toString() -> toString
com.google.common.collect.Maps$DescendingMap -> com.google.common.collect.Maps$DescendingMap:
    3841:3841:void <init>() -> <init>
    3904:3904:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    3909:3909:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    3856:3862:java.util.Comparator comparator() -> comparator
    3970:3970:java.util.Set createEntrySet() -> createEntrySet
    3840:3840:java.lang.Object delegate() -> delegate
    3848:3848:java.util.Map delegate() -> delegate
    3988:3988:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    3944:3944:java.util.NavigableMap descendingMap() -> descendingMap
    3951:3952:java.util.Set entrySet() -> entrySet
    3924:3924:java.util.Map$Entry firstEntry() -> firstEntry
    3874:3874:java.lang.Object firstKey() -> firstKey
    3894:3894:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    3899:3899:java.lang.Object floorKey(java.lang.Object) -> floorKey
    4004:4004:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    4009:4009:java.util.SortedMap headMap(java.lang.Object) -> headMap
    3914:3914:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    3919:3919:java.lang.Object higherKey(java.lang.Object) -> higherKey
    3975:3975:java.util.Set keySet() -> keySet
    3929:3929:java.util.Map$Entry lastEntry() -> lastEntry
    3879:3879:java.lang.Object lastKey() -> lastKey
    3884:3884:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    3889:3889:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    3982:3983:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3934:3934:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3939:3939:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    3869:3869:com.google.common.collect.Ordering reverse(java.util.Comparator) -> reverse
    3994:3994:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3999:3999:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    4014:4014:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    4019:4019:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    4029:4029:java.lang.String toString() -> toString
    4024:4024:java.util.Collection values() -> values
com.google.common.collect.Maps$DescendingMap$1EntrySetImpl -> com.google.common.collect.Maps$DescendingMap$1EntrySetImpl:
    3959:3959:void <init>(com.google.common.collect.Maps$DescendingMap) -> <init>
    3967:3967:java.util.Iterator iterator() -> iterator
    3962:3962:java.util.Map map() -> map
com.google.common.collect.Maps$EntryFunction -> com.google.common.collect.Maps$EntryFunction:
    84:92:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    84:84:void <init>(java.lang.String,int,com.google.common.collect.Maps$1) -> <init>
    84:84:com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String) -> valueOf
    84:84:com.google.common.collect.Maps$EntryFunction[] values() -> values
com.google.common.collect.Maps$EntryFunction$1 -> com.google.common.collect.Maps$EntryFunction$1:
    85:85:void <init>(java.lang.String,int) -> <init>
    85:85:java.lang.Object apply(java.lang.Object) -> apply
    89:89:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntryFunction$2 -> com.google.common.collect.Maps$EntryFunction$2:
    92:92:void <init>(java.lang.String,int) -> <init>
    92:92:java.lang.Object apply(java.lang.Object) -> apply
    96:96:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntrySet -> com.google.common.collect.Maps$EntrySet:
    3774:3774:void <init>() -> <init>
    3784:3784:void clear() -> clear
    3789:3793:boolean contains(java.lang.Object) -> contains
    3800:3800:boolean isEmpty() -> isEmpty
    3805:3807:boolean remove(java.lang.Object) -> remove
    3815:3818:boolean removeAll(java.util.Collection) -> removeAll
    3825:3835:boolean retainAll(java.util.Collection) -> retainAll
    3779:3779:int size() -> size
com.google.common.collect.Maps$FilteredEntryBiMap -> com.google.common.collect.Maps$FilteredEntryBiMap:
    3061:3063:void <init>(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> <init>
    3068:3069:void <init>(com.google.common.collect.BiMap,com.google.common.base.Predicate,com.google.common.collect.BiMap) -> <init>
    3078:3079:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    3084:3084:com.google.common.collect.BiMap inverse() -> inverse
    3052:3052:com.google.common.base.Predicate inversePredicate(com.google.common.base.Predicate) -> inversePredicate
    3073:3073:com.google.common.collect.BiMap unfiltered() -> unfiltered
    3046:3046:java.util.Collection values() -> values
    3089:3089:java.util.Set values() -> values
com.google.common.collect.Maps$FilteredEntryBiMap$1 -> com.google.common.collect.Maps$FilteredEntryBiMap$1:
    3052:3052:void <init>(com.google.common.base.Predicate) -> <init>
    3052:3052:boolean apply(java.lang.Object) -> apply
    3055:3055:boolean apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$FilteredEntryMap -> com.google.common.collect.Maps$FilteredEntryMap:
    2709:2710:void <init>(java.util.Map,com.google.common.base.Predicate) -> <init>
    2715:2715:java.util.Set createEntrySet() -> createEntrySet
    2749:2749:java.util.Set createKeySet() -> createKeySet
    2754:2759:boolean removeAllKeys(java.util.Map,com.google.common.base.Predicate,java.util.Collection) -> removeAllKeys
    2768:2773:boolean retainAllKeys(java.util.Map,com.google.common.base.Predicate,java.util.Collection) -> retainAllKeys
com.google.common.collect.Maps$FilteredEntryMap$EntrySet -> com.google.common.collect.Maps$FilteredEntryMap$EntrySet:
    2719:2719:void <init>(com.google.common.collect.Maps$FilteredEntryMap) -> <init>
    2719:2719:void <init>(com.google.common.collect.Maps$FilteredEntryMap,com.google.common.collect.Maps$1) -> <init>
    2718:2718:java.lang.Object delegate() -> delegate
    2718:2718:java.util.Collection delegate() -> delegate
    2722:2722:java.util.Set delegate() -> delegate
    2727:2727:java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 -> com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1:
    2727:2727:void <init>(com.google.common.collect.Maps$FilteredEntryMap$EntrySet,java.util.Iterator) -> <init>
    2727:2727:java.lang.Object transform(java.lang.Object) -> transform
    2730:2730:java.util.Map$Entry transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1 -> com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1:
    2730:2730:void <init>(com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1,java.util.Map$Entry) -> <init>
    2730:2730:java.lang.Object delegate() -> delegate
    2733:2733:java.util.Map$Entry delegate() -> delegate
    2738:2739:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps$FilteredEntryMap$KeySet -> com.google.common.collect.Maps$FilteredEntryMap$KeySet:
    2782:2783:void <init>(com.google.common.collect.Maps$FilteredEntryMap) -> <init>
    2788:2789:boolean remove(java.lang.Object) -> remove
    2797:2797:boolean removeAll(java.util.Collection) -> removeAll
    2802:2802:boolean retainAll(java.util.Collection) -> retainAll
    2808:2808:java.lang.Object[] toArray() -> toArray
    2813:2813:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$FilteredEntryNavigableMap -> com.google.common.collect.Maps$FilteredEntryNavigableMap:
    2926:2929:void <init>(java.util.NavigableMap,com.google.common.base.Predicate) -> <init>
    2914:2914:com.google.common.base.Predicate access$500(com.google.common.collect.Maps$FilteredEntryNavigableMap) -> access$500
    2914:2914:java.util.NavigableMap access$600(com.google.common.collect.Maps$FilteredEntryNavigableMap) -> access$600
    3005:3005:void clear() -> clear
    2934:2934:java.util.Comparator comparator() -> comparator
    2985:2985:boolean containsKey(java.lang.Object) -> containsKey
    2964:2964:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    3025:3025:java.util.NavigableMap descendingMap() -> descendingMap
    2959:2959:java.util.Iterator entryIterator() -> entryIterator
    3010:3010:java.util.Set entrySet() -> entrySet
    2980:2980:java.lang.Object get(java.lang.Object) -> get
    3037:3037:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    2974:2974:boolean isEmpty() -> isEmpty
    2939:2939:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3015:3015:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3020:3020:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    2990:2990:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    3000:3000:void putAll(java.util.Map) -> putAll
    2995:2995:java.lang.Object remove(java.lang.Object) -> remove
    2969:2969:int size() -> size
    3031:3032:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3042:3042:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    2954:2954:java.util.Collection values() -> values
com.google.common.collect.Maps$FilteredEntryNavigableMap$1 -> com.google.common.collect.Maps$FilteredEntryNavigableMap$1:
    2939:2939:void <init>(com.google.common.collect.Maps$FilteredEntryNavigableMap,java.util.NavigableMap) -> <init>
    2942:2942:boolean removeAll(java.util.Collection) -> removeAll
    2947:2947:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$FilteredEntrySortedMap -> com.google.common.collect.Maps$FilteredEntrySortedMap:
    2823:2823:void <init>(java.util.SortedMap,com.google.common.base.Predicate) -> <init>
    2875:2875:java.util.Comparator comparator() -> comparator
    2818:2818:java.util.Set createKeySet() -> createKeySet
    2837:2837:java.util.SortedSet createKeySet() -> createKeySet
    2881:2881:java.lang.Object firstKey() -> firstKey
    2899:2899:java.util.SortedMap headMap(java.lang.Object) -> headMap
    2818:2818:java.util.Set keySet() -> keySet
    2832:2832:java.util.SortedSet keySet() -> keySet
    2886:2893:java.lang.Object lastKey() -> lastKey
    2827:2827:java.util.SortedMap sortedMap() -> sortedMap
    2904:2904:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2909:2909:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet -> com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet:
    2841:2841:void <init>(com.google.common.collect.Maps$FilteredEntrySortedMap) -> <init>
    2844:2844:java.util.Comparator comparator() -> comparator
    2864:2864:java.lang.Object first() -> first
    2854:2854:java.util.SortedSet headSet(java.lang.Object) -> headSet
    2869:2869:java.lang.Object last() -> last
    2849:2849:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    2859:2859:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Maps$FilteredKeyMap -> com.google.common.collect.Maps$FilteredKeyMap:
    2678:2679:void <init>(java.util.Map,com.google.common.base.Predicate,com.google.common.base.Predicate) -> <init>
    2697:2697:boolean containsKey(java.lang.Object) -> containsKey
    2684:2684:java.util.Set createEntrySet() -> createEntrySet
    2689:2689:java.util.Set createKeySet() -> createKeySet
com.google.common.collect.Maps$FilteredMapValues -> com.google.common.collect.Maps$FilteredMapValues:
    2613:2615:void <init>(java.util.Map,java.util.Map,com.google.common.base.Predicate) -> <init>
    2620:2624:boolean remove(java.lang.Object) -> remove
    2633:2638:boolean removeAll(java.util.Collection) -> removeAll
    2647:2652:boolean retainAll(java.util.Collection) -> retainAll
    2662:2662:java.lang.Object[] toArray() -> toArray
    2667:2667:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$IteratorBasedAbstractMap -> com.google.common.collect.Maps$IteratorBasedAbstractMap:
    3367:3367:void <init>() -> <init>
    3390:3390:void clear() -> clear
    3375:3375:java.util.Set entrySet() -> entrySet
com.google.common.collect.Maps$IteratorBasedAbstractMap$1 -> com.google.common.collect.Maps$IteratorBasedAbstractMap$1:
    3375:3375:void <init>(com.google.common.collect.Maps$IteratorBasedAbstractMap) -> <init>
    3383:3383:java.util.Iterator iterator() -> iterator
    3378:3378:java.util.Map map() -> map
com.google.common.collect.Maps$KeySet -> com.google.common.collect.Maps$KeySet:
    3515:3516:void <init>(java.util.Map) -> <init>
    3554:3554:void clear() -> clear
    3540:3540:boolean contains(java.lang.Object) -> contains
    3535:3535:boolean isEmpty() -> isEmpty
    3525:3525:java.util.Iterator iterator() -> iterator
    3520:3520:java.util.Map map() -> map
    3545:3546:boolean remove(java.lang.Object) -> remove
    3530:3530:int size() -> size
com.google.common.collect.Maps$MapDifferenceImpl -> com.google.common.collect.Maps$MapDifferenceImpl:
    518:522:void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> <init>
    527:527:boolean areEqual() -> areEqual
    547:547:java.util.Map entriesDiffering() -> entriesDiffering
    542:542:java.util.Map entriesInCommon() -> entriesInCommon
    532:532:java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    537:537:java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    555:560:boolean equals(java.lang.Object) -> equals
    567:568:int hashCode() -> hashCode
    573:587:java.lang.String toString() -> toString
com.google.common.collect.Maps$NavigableAsMapView -> com.google.common.collect.Maps$NavigableAsMapView:
    909:911:void <init>(java.util.NavigableSet,com.google.common.base.Function) -> <init>
    949:949:void clear() -> clear
    932:932:java.util.Comparator comparator() -> comparator
    959:959:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    974:974:java.util.NavigableMap descendingMap() -> descendingMap
    954:954:java.util.Iterator entryIterator() -> entryIterator
    938:941:java.lang.Object get(java.lang.Object) -> get
    922:922:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    964:964:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    969:969:int size() -> size
    917:917:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    927:927:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
com.google.common.collect.Maps$NavigableKeySet -> com.google.common.collect.Maps$NavigableKeySet:
    3612:3612:void <init>(java.util.NavigableMap) -> <init>
    3632:3632:java.lang.Object ceiling(java.lang.Object) -> ceiling
    3657:3657:java.util.Iterator descendingIterator() -> descendingIterator
    3652:3652:java.util.NavigableSet descendingSet() -> descendingSet
    3627:3627:java.lang.Object floor(java.lang.Object) -> floor
    3673:3673:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    3678:3678:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3637:3637:java.lang.Object higher(java.lang.Object) -> higher
    3622:3622:java.lang.Object lower(java.lang.Object) -> lower
    3609:3609:java.util.Map map() -> map
    3609:3609:java.util.SortedMap map() -> map
    3617:3617:java.util.NavigableMap map() -> map
    3642:3642:java.lang.Object pollFirst() -> pollFirst
    3647:3647:java.lang.Object pollLast() -> pollLast
    3663:3663:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    3668:3668:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3683:3683:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    3688:3688:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Maps$SortedAsMapView -> com.google.common.collect.Maps$SortedAsMapView:
    855:855:void <init>(java.util.SortedSet,com.google.common.base.Function) -> <init>
    852:852:java.util.Set backingSet() -> backingSet
    860:860:java.util.SortedSet backingSet() -> backingSet
    865:865:java.util.Comparator comparator() -> comparator
    890:890:java.lang.Object firstKey() -> firstKey
    880:880:java.util.SortedMap headMap(java.lang.Object) -> headMap
    870:870:java.util.Set keySet() -> keySet
    895:895:java.lang.Object lastKey() -> lastKey
    875:875:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    885:885:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Maps$SortedKeySet -> com.google.common.collect.Maps$SortedKeySet:
    3570:3570:void <init>(java.util.SortedMap) -> <init>
    3580:3580:java.util.Comparator comparator() -> comparator
    3600:3600:java.lang.Object first() -> first
    3590:3590:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3605:3605:java.lang.Object last() -> last
    3568:3568:java.util.Map map() -> map
    3575:3575:java.util.SortedMap map() -> map
    3585:3585:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3595:3595:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Maps$SortedMapDifferenceImpl -> com.google.common.collect.Maps$SortedMapDifferenceImpl:
    642:642:void <init>(java.util.SortedMap,java.util.SortedMap,java.util.SortedMap,java.util.SortedMap) -> <init>
    635:635:java.util.Map entriesDiffering() -> entriesDiffering
    647:647:java.util.SortedMap entriesDiffering() -> entriesDiffering
    635:635:java.util.Map entriesInCommon() -> entriesInCommon
    652:652:java.util.SortedMap entriesInCommon() -> entriesInCommon
    635:635:java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    657:657:java.util.SortedMap entriesOnlyOnLeft() -> entriesOnlyOnLeft
    635:635:java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    662:662:java.util.SortedMap entriesOnlyOnRight() -> entriesOnlyOnRight
com.google.common.collect.Maps$TransformedEntriesMap -> com.google.common.collect.Maps$TransformedEntriesMap:
    1884:1886:void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1920:1920:void clear() -> clear
    1896:1896:boolean containsKey(java.lang.Object) -> containsKey
    1930:1931:java.util.Iterator entryIterator() -> entryIterator
    1903:1905:java.lang.Object get(java.lang.Object) -> get
    1925:1925:java.util.Set keySet() -> keySet
    1913:1914:java.lang.Object remove(java.lang.Object) -> remove
    1891:1891:int size() -> size
    1936:1936:java.util.Collection values() -> values
com.google.common.collect.Maps$TransformedEntriesNavigableMap -> com.google.common.collect.Maps$TransformedEntriesNavigableMap:
    1989:1989:void <init>(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1994:1994:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1999:1999:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    2004:2004:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    2009:2009:java.util.NavigableMap descendingMap() -> descendingMap
    2014:2014:java.util.Map$Entry firstEntry() -> firstEntry
    2019:2019:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    2024:2024:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1983:1983:java.util.SortedMap fromMap() -> fromMap
    2106:2106:java.util.NavigableMap fromMap() -> fromMap
    1983:1983:java.util.SortedMap headMap(java.lang.Object) -> headMap
    2029:2029:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    2034:2034:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    2039:2039:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    2044:2044:java.lang.Object higherKey(java.lang.Object) -> higherKey
    2049:2049:java.util.Map$Entry lastEntry() -> lastEntry
    2054:2054:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    2059:2059:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    2064:2064:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    2069:2069:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    2074:2074:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1983:1983:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    2080:2081:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    2086:2086:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1983:1983:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    2091:2091:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    2096:2096:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    2101:2101:java.util.Map$Entry transformEntry(java.util.Map$Entry) -> transformEntry
com.google.common.collect.Maps$TransformedEntriesSortedMap -> com.google.common.collect.Maps$TransformedEntriesSortedMap:
    1949:1949:void <init>(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1954:1954:java.util.Comparator comparator() -> comparator
    1959:1959:java.lang.Object firstKey() -> firstKey
    1944:1944:java.util.SortedMap fromMap() -> fromMap
    1964:1964:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1969:1969:java.lang.Object lastKey() -> lastKey
    1974:1974:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1979:1979:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Maps$UnmodifiableBiMap -> com.google.common.collect.Maps$UnmodifiableBiMap:
    1473:1476:void <init>(com.google.common.collect.BiMap,com.google.common.collect.BiMap) -> <init>
    1466:1466:java.lang.Object delegate() -> delegate
    1481:1481:java.util.Map delegate() -> delegate
    1486:1486:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    1491:1493:com.google.common.collect.BiMap inverse() -> inverse
    1466:1466:java.util.Collection values() -> values
    1499:1500:java.util.Set values() -> values
com.google.common.collect.Maps$UnmodifiableEntries -> com.google.common.collect.Maps$UnmodifiableEntries:
    1310:1311:void <init>(java.util.Collection) -> <init>
    1307:1307:java.lang.Object delegate() -> delegate
    1316:1316:java.util.Collection delegate() -> delegate
    1321:1321:java.util.Iterator iterator() -> iterator
    1328:1328:java.lang.Object[] toArray() -> toArray
    1333:1333:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$UnmodifiableEntrySet -> com.google.common.collect.Maps$UnmodifiableEntrySet:
    1341:1341:void <init>(java.util.Set) -> <init>
    1348:1348:boolean equals(java.lang.Object) -> equals
    1353:1353:int hashCode() -> hashCode
com.google.common.collect.Maps$UnmodifiableNavigableMap -> com.google.common.collect.Maps$UnmodifiableNavigableMap:
    3134:3135:void <init>(java.util.NavigableMap) -> <init>
    3139:3141:void <init>(java.util.NavigableMap,com.google.common.collect.Maps$UnmodifiableNavigableMap) -> <init>
    3171:3171:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    3176:3176:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    3129:3129:java.lang.Object delegate() -> delegate
    3129:3129:java.util.Map delegate() -> delegate
    3146:3146:java.util.SortedMap delegate() -> delegate
    3231:3231:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    3213:3215:java.util.NavigableMap descendingMap() -> descendingMap
    3191:3191:java.util.Map$Entry firstEntry() -> firstEntry
    3161:3161:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    3166:3166:java.lang.Object floorKey(java.lang.Object) -> floorKey
    3248:3248:java.util.SortedMap headMap(java.lang.Object) -> headMap
    3253:3253:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    3181:3181:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    3186:3186:java.lang.Object higherKey(java.lang.Object) -> higherKey
    3221:3221:java.util.Set keySet() -> keySet
    3196:3196:java.util.Map$Entry lastEntry() -> lastEntry
    3151:3151:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    3156:3156:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    3226:3226:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3201:3201:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3206:3206:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    3236:3236:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    3242:3243:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3258:3258:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    3263:3263:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
com.google.common.collect.Maps$ValueDifferenceImpl -> com.google.common.collect.Maps$ValueDifferenceImpl:
    599:601:void <init>(java.lang.Object,java.lang.Object) -> <init>
    596:596:com.google.common.collect.MapDifference$ValueDifference create(java.lang.Object,java.lang.Object) -> create
    616:619:boolean equals(java.lang.Object) -> equals
    626:626:int hashCode() -> hashCode
    606:606:java.lang.Object leftValue() -> leftValue
    611:611:java.lang.Object rightValue() -> rightValue
    631:631:java.lang.String toString() -> toString
com.google.common.collect.Maps$Values -> com.google.common.collect.Maps$Values:
    3695:3696:void <init>(java.util.Map) -> <init>
    3770:3770:void clear() -> clear
    3765:3765:boolean contains(java.lang.Object) -> contains
    3760:3760:boolean isEmpty() -> isEmpty
    3705:3705:java.util.Iterator iterator() -> iterator
    3700:3700:java.util.Map map() -> map
    3711:3715:boolean remove(java.lang.Object) -> remove
    3726:3734:boolean removeAll(java.util.Collection) -> removeAll
    3741:3749:boolean retainAll(java.util.Collection) -> retainAll
    3755:3755:int size() -> size
com.google.common.collect.Maps$ViewCachingAbstractMap -> com.google.common.collect.Maps$ViewCachingAbstractMap:
    3327:3327:void <init>() -> <init>
    3351:3351:java.util.Set createKeySet() -> createKeySet
    3363:3363:java.util.Collection createValues() -> createValues
    3338:3339:java.util.Set entrySet() -> entrySet
    3346:3347:java.util.Set keySet() -> keySet
    3358:3359:java.util.Collection values() -> values
com.google.common.collect.MinMaxPriorityQueue -> com.google.common.collect.MinMaxPriorityQueue:
    101:101:void <init>(com.google.common.collect.MinMaxPriorityQueue$Builder,int,com.google.common.collect.MinMaxPriorityQueue$1) -> <init>
    231:240:void <init>(com.google.common.collect.MinMaxPriorityQueue$Builder,int) -> <init>
    101:101:java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue) -> access$500
    101:101:int access$600(com.google.common.collect.MinMaxPriorityQueue) -> access$600
    101:101:int access$700(com.google.common.collect.MinMaxPriorityQueue) -> access$700
    258:258:boolean add(java.lang.Object) -> add
    266:267:boolean addAll(java.util.Collection) -> addAll
    945:948:int calculateNewCapacity() -> calculateNewCapacity
    953:953:int capAtMaximumSize(int,int) -> capAtMaximumSize
    908:908:int capacity() -> capacity
    884:887:void clear() -> clear
    903:903:java.util.Comparator comparator() -> comparator
    108:108:com.google.common.collect.MinMaxPriorityQueue create() -> create
    117:117:com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    301:301:java.lang.Object elementData(int) -> elementData
    133:133:com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    431:448:com.google.common.collect.MinMaxPriorityQueue$MoveDesc fillHole(int,java.lang.Object) -> fillHole
    311:319:int getMaxElementIndex() -> getMaxElementIndex
    935:939:void growIfNeeded() -> growIfNeeded
    471:471:com.google.common.collect.MinMaxPriorityQueue$Heap heapForIndex(int) -> heapForIndex
    925:931:int initialQueueSize(int,int,java.lang.Iterable) -> initialQueueSize
    480:480:boolean isEvenLevel(int) -> isEvenLevel
    491:492:boolean isIntact() -> isIntact
    879:879:java.util.Iterator iterator() -> iterator
    143:143:com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    281:290:boolean offer(java.lang.Object) -> offer
    125:125:com.google.common.collect.MinMaxPriorityQueue$Builder orderedBy(java.util.Comparator) -> orderedBy
    306:306:java.lang.Object peek() -> peek
    347:347:java.lang.Object peekFirst() -> peekFirst
    377:377:java.lang.Object peekLast() -> peekLast
    296:296:java.lang.Object poll() -> poll
    329:329:java.lang.Object pollFirst() -> pollFirst
    356:356:java.lang.Object pollLast() -> pollLast
    465:466:java.lang.Object removeAndGet(int) -> removeAndGet
    396:423:com.google.common.collect.MinMaxPriorityQueue$MoveDesc removeAt(int) -> removeAt
    339:339:java.lang.Object removeFirst() -> removeFirst
    366:369:java.lang.Object removeLast() -> removeLast
    245:245:int size() -> size
    892:893:java.lang.Object[] toArray() -> toArray
com.google.common.collect.MinMaxPriorityQueue$Builder -> com.google.common.collect.MinMaxPriorityQueue$Builder:
    157:157:void <init>(java.util.Comparator,com.google.common.collect.MinMaxPriorityQueue$1) -> <init>
    165:169:void <init>(java.util.Comparator) -> <init>
    157:157:com.google.common.collect.Ordering access$200(com.google.common.collect.MinMaxPriorityQueue$Builder) -> access$200
    157:157:int access$300(com.google.common.collect.MinMaxPriorityQueue$Builder) -> access$300
    201:201:com.google.common.collect.MinMaxPriorityQueue create() -> create
    209:213:com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    178:179:com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    191:192:com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    220:220:com.google.common.collect.Ordering ordering() -> ordering
com.google.common.collect.MinMaxPriorityQueue$Heap -> com.google.common.collect.MinMaxPriorityQueue$Heap:
    509:510:void <init>(com.google.common.collect.MinMaxPriorityQueue,com.google.common.collect.Ordering) -> <init>
    505:505:boolean access$400(com.google.common.collect.MinMaxPriorityQueue$Heap,int) -> access$400
    549:558:void bubbleUp(int,java.lang.Object) -> bubbleUp
    568:576:int bubbleUpAlternatingLevels(int,java.lang.Object) -> bubbleUpAlternatingLevels
    514:514:int compareElements(int,int) -> compareElements
    681:689:int crossOver(int,java.lang.Object) -> crossOver
    619:644:int crossOverUp(int,java.lang.Object) -> crossOverUp
    701:702:int fillHoleAt(int) -> fillHoleAt
    585:592:int findMin(int,int) -> findMin
    601:601:int findMinChild(int) -> findMinChild
    606:610:int findMinGrandChild(int) -> findMinGrandChild
    739:739:int getGrandparentIndex(int) -> getGrandparentIndex
    735:735:int getParentIndex(int) -> getParentIndex
    658:671:int swapWithConceptuallyLastElement(java.lang.Object) -> swapWithConceptuallyLastElement
    522:541:com.google.common.collect.MinMaxPriorityQueue$MoveDesc tryCrossOverAndBubbleUp(int,int,java.lang.Object) -> tryCrossOverAndBubbleUp
    709:718:boolean verifyIndex(int) -> verifyIndex
com.google.common.collect.MinMaxPriorityQueue$MoveDesc -> com.google.common.collect.MinMaxPriorityQueue$MoveDesc:
    457:459:void <init>(java.lang.Object,java.lang.Object) -> <init>
com.google.common.collect.MinMaxPriorityQueue$QueueIterator -> com.google.common.collect.MinMaxPriorityQueue$QueueIterator:
    748:751:void <init>(com.google.common.collect.MinMaxPriorityQueue) -> <init>
    748:748:void <init>(com.google.common.collect.MinMaxPriorityQueue,com.google.common.collect.MinMaxPriorityQueue$1) -> <init>
    837:838:void checkModCount() -> checkModCount
    815:818:boolean foundAndRemovedExactReference(java.lang.Iterable,java.lang.Object) -> foundAndRemovedExactReference
    761:763:boolean hasNext() -> hasNext
    768:782:java.lang.Object next() -> next
    847:853:void nextNotInSkipMe(int) -> nextNotInSkipMe
    787:809:void remove() -> remove
    827:829:boolean removeExact(java.lang.Object) -> removeExact
com.google.common.collect.MultimapBuilder -> com.google.common.collect.MultimapBuilder:
    64:64:void <init>(com.google.common.collect.MultimapBuilder$1) -> <init>
    70:70:void <init>() -> <init>
    409:410:com.google.common.collect.Multimap build(com.google.common.collect.Multimap) -> build
    171:172:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys enumKeys(java.lang.Class) -> enumKeys
    76:76:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys() -> hashKeys
    86:87:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys(int) -> hashKeys
    104:104:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys linkedHashKeys() -> linkedHashKeys
    117:118:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys linkedHashKeys(int) -> linkedHashKeys
    138:138:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys treeKeys() -> treeKeys
    155:156:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys treeKeys(java.util.Comparator) -> treeKeys
com.google.common.collect.MultimapBuilder$1 -> com.google.common.collect.MultimapBuilder$1:
    87:87:void <init>(int) -> <init>
    90:90:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$2 -> com.google.common.collect.MultimapBuilder$2:
    118:118:void <init>(int) -> <init>
    121:121:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$3 -> com.google.common.collect.MultimapBuilder$3:
    156:156:void <init>(java.util.Comparator) -> <init>
    159:159:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$4 -> com.google.common.collect.MultimapBuilder$4:
    172:172:void <init>(java.lang.Class) -> <init>
    178:178:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$ArrayListSupplier -> com.google.common.collect.MultimapBuilder$ArrayListSupplier:
    186:187:void <init>(int) -> <init>
    183:183:java.lang.Object get() -> get
    192:192:java.util.List get() -> get
com.google.common.collect.MultimapBuilder$EnumSetSupplier -> com.google.common.collect.MultimapBuilder$EnumSetSupplier:
    255:256:void <init>(java.lang.Class) -> <init>
    251:251:java.lang.Object get() -> get
    261:261:java.util.Set get() -> get
com.google.common.collect.MultimapBuilder$HashSetSupplier -> com.google.common.collect.MultimapBuilder$HashSetSupplier:
    215:216:void <init>(int) -> <init>
    212:212:java.lang.Object get() -> get
    221:221:java.util.Set get() -> get
com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier -> com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:
    228:229:void <init>(int) -> <init>
    225:225:java.lang.Object get() -> get
    234:234:java.util.Set get() -> get
com.google.common.collect.MultimapBuilder$LinkedListSupplier -> com.google.common.collect.MultimapBuilder$LinkedListSupplier:
    196:197:void <clinit>() -> <clinit>
    196:196:void <init>(java.lang.String,int) -> <init>
    196:196:java.lang.Object get() -> get
    208:208:java.util.List get() -> get
    202:202:com.google.common.base.Supplier instance() -> instance
    196:196:com.google.common.collect.MultimapBuilder$LinkedListSupplier valueOf(java.lang.String) -> valueOf
    196:196:com.google.common.collect.MultimapBuilder$LinkedListSupplier[] values() -> values
com.google.common.collect.MultimapBuilder$ListMultimapBuilder -> com.google.common.collect.MultimapBuilder$ListMultimapBuilder:
    420:420:void <init>() -> <init>
    419:419:com.google.common.collect.Multimap build() -> build
    419:419:com.google.common.collect.Multimap build(com.google.common.collect.Multimap) -> build
    428:428:com.google.common.collect.ListMultimap build(com.google.common.collect.Multimap) -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:
    276:276:void <init>() -> <init>
    282:282:com.google.common.collect.MultimapBuilder$ListMultimapBuilder arrayListValues() -> arrayListValues
    292:293:com.google.common.collect.MultimapBuilder$ListMultimapBuilder arrayListValues(int) -> arrayListValues
    386:387:com.google.common.collect.MultimapBuilder$SetMultimapBuilder enumSetValues(java.lang.Class) -> enumSetValues
    316:316:com.google.common.collect.MultimapBuilder$SetMultimapBuilder hashSetValues() -> hashSetValues
    326:327:com.google.common.collect.MultimapBuilder$SetMultimapBuilder hashSetValues(int) -> hashSetValues
    339:339:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues() -> linkedHashSetValues
    349:350:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues(int) -> linkedHashSetValues
    305:305:com.google.common.collect.MultimapBuilder$ListMultimapBuilder linkedListValues() -> linkedListValues
    363:363:com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder treeSetValues() -> treeSetValues
    373:374:com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder treeSetValues(java.util.Comparator) -> treeSetValues
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1:
    293:293:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    293:293:com.google.common.collect.Multimap build() -> build
    296:297:com.google.common.collect.ListMultimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$2 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$2:
    305:305:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys) -> <init>
    305:305:com.google.common.collect.Multimap build() -> build
    308:309:com.google.common.collect.ListMultimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$3 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$3:
    327:327:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    327:327:com.google.common.collect.Multimap build() -> build
    330:331:com.google.common.collect.SetMultimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4:
    350:350:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    350:350:com.google.common.collect.Multimap build() -> build
    353:354:com.google.common.collect.SetMultimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$5 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$5:
    374:374:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,java.util.Comparator) -> <init>
    374:374:com.google.common.collect.Multimap build() -> build
    374:374:com.google.common.collect.SetMultimap build() -> build
    377:378:com.google.common.collect.SortedSetMultimap build() -> build
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$6 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$6:
    387:387:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,java.lang.Class) -> <init>
    387:387:com.google.common.collect.Multimap build() -> build
    393:394:com.google.common.collect.SetMultimap build() -> build
com.google.common.collect.MultimapBuilder$SetMultimapBuilder -> com.google.common.collect.MultimapBuilder$SetMultimapBuilder:
    438:438:void <init>() -> <init>
    437:437:com.google.common.collect.Multimap build() -> build
    437:437:com.google.common.collect.Multimap build(com.google.common.collect.Multimap) -> build
    446:446:com.google.common.collect.SetMultimap build(com.google.common.collect.Multimap) -> build
com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder -> com.google.common.collect.MultimapBuilder$SortedSetMultimapBuilder:
    456:456:void <init>() -> <init>
    455:455:com.google.common.collect.Multimap build() -> build
    455:455:com.google.common.collect.Multimap build(com.google.common.collect.Multimap) -> build
    455:455:com.google.common.collect.SetMultimap build() -> build
    455:455:com.google.common.collect.SetMultimap build(com.google.common.collect.Multimap) -> build
    464:464:com.google.common.collect.SortedSetMultimap build(com.google.common.collect.Multimap) -> build
com.google.common.collect.MultimapBuilder$TreeSetSupplier -> com.google.common.collect.MultimapBuilder$TreeSetSupplier:
    241:242:void <init>(java.util.Comparator) -> <init>
    238:238:java.lang.Object get() -> get
    247:247:java.util.SortedSet get() -> get
com.google.common.collect.Multimaps -> com.google.common.collect.Multimaps:
    68:68:void <init>() -> <init>
    67:67:java.util.Collection access$000(java.util.Collection) -> access$000
    67:67:java.util.Collection access$100(java.util.Collection) -> access$100
    922:922:java.util.Map asMap(com.google.common.collect.ListMultimap) -> asMap
    935:935:java.util.Map asMap(com.google.common.collect.SetMultimap) -> asMap
    948:948:java.util.Map asMap(com.google.common.collect.SortedSetMultimap) -> asMap
    959:959:java.util.Map asMap(com.google.common.collect.Multimap) -> asMap
    2070:2072:boolean equalsImpl(com.google.common.collect.Multimap,java.lang.Object) -> equalsImpl
    1998:2004:com.google.common.collect.Multimap filterEntries(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterEntries
    2034:2037:com.google.common.collect.SetMultimap filterEntries(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> filterEntries
    2049:2050:com.google.common.collect.Multimap filterFiltered(com.google.common.collect.FilteredMultimap,com.google.common.base.Predicate) -> filterFiltered
    2062:2063:com.google.common.collect.SetMultimap filterFiltered(com.google.common.collect.FilteredSetMultimap,com.google.common.base.Predicate) -> filterFiltered
    1812:1824:com.google.common.collect.Multimap filterKeys(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterKeys
    1857:1865:com.google.common.collect.SetMultimap filterKeys(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> filterKeys
    1898:1903:com.google.common.collect.ListMultimap filterKeys(com.google.common.collect.ListMultimap,com.google.common.base.Predicate) -> filterKeys
    1936:1936:com.google.common.collect.Multimap filterValues(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterValues
    1968:1968:com.google.common.collect.SetMultimap filterValues(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> filterValues
    978:978:com.google.common.collect.SetMultimap forMap(java.util.Map) -> forMap
    1519:1519:com.google.common.collect.ImmutableListMultimap index(java.lang.Iterable,com.google.common.base.Function) -> index
    1560:1567:com.google.common.collect.ImmutableListMultimap index(java.util.Iterator,com.google.common.base.Function) -> index
    467:469:com.google.common.collect.Multimap invertFrom(com.google.common.collect.Multimap,com.google.common.collect.Multimap) -> invertFrom
    220:220:com.google.common.collect.ListMultimap newListMultimap(java.util.Map,com.google.common.base.Supplier) -> newListMultimap
    108:108:com.google.common.collect.Multimap newMultimap(java.util.Map,com.google.common.base.Supplier) -> newMultimap
    298:298:com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSetMultimap
    398:398:com.google.common.collect.SortedSetMultimap newSortedSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSortedSetMultimap
    844:844:com.google.common.collect.ListMultimap synchronizedListMultimap(com.google.common.collect.ListMultimap) -> synchronizedListMultimap
    507:507:com.google.common.collect.Multimap synchronizedMultimap(com.google.common.collect.Multimap) -> synchronizedMultimap
    767:767:com.google.common.collect.SetMultimap synchronizedSetMultimap(com.google.common.collect.SetMultimap) -> synchronizedSetMultimap
    813:813:com.google.common.collect.SortedSetMultimap synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> synchronizedSortedSetMultimap
    1279:1279:com.google.common.collect.Multimap transformEntries(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1332:1332:com.google.common.collect.ListMultimap transformEntries(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1174:1176:com.google.common.collect.Multimap transformValues(com.google.common.collect.Multimap,com.google.common.base.Function) -> transformValues
    1221:1223:com.google.common.collect.ListMultimap transformValues(com.google.common.collect.ListMultimap,com.google.common.base.Function) -> transformValues
    906:909:java.util.Collection unmodifiableEntries(java.util.Collection) -> unmodifiableEntries
    859:862:com.google.common.collect.ListMultimap unmodifiableListMultimap(com.google.common.collect.ListMultimap) -> unmodifiableListMultimap
    874:874:com.google.common.collect.ListMultimap unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap) -> unmodifiableListMultimap
    522:525:com.google.common.collect.Multimap unmodifiableMultimap(com.google.common.collect.Multimap) -> unmodifiableMultimap
    536:536:com.google.common.collect.Multimap unmodifiableMultimap(com.google.common.collect.ImmutableMultimap) -> unmodifiableMultimap
    782:785:com.google.common.collect.SetMultimap unmodifiableSetMultimap(com.google.common.collect.SetMultimap) -> unmodifiableSetMultimap
    797:797:com.google.common.collect.SetMultimap unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap) -> unmodifiableSetMultimap
    829:832:com.google.common.collect.SortedSetMultimap unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> unmodifiableSortedSetMultimap
    886:893:java.util.Collection unmodifiableValueCollection(java.util.Collection) -> unmodifiableValueCollection
com.google.common.collect.Multimaps$AsMap -> com.google.common.collect.Multimaps$AsMap:
    1703:1704:void <init>(com.google.common.collect.Multimap) -> <init>
    1700:1700:com.google.common.collect.Multimap access$200(com.google.common.collect.Multimaps$AsMap) -> access$200
    1779:1779:void clear() -> clear
    1774:1774:boolean containsKey(java.lang.Object) -> containsKey
    1714:1714:java.util.Set createEntrySet() -> createEntrySet
    1700:1700:java.lang.Object get(java.lang.Object) -> get
    1754:1754:java.util.Collection get(java.lang.Object) -> get
    1769:1769:boolean isEmpty() -> isEmpty
    1764:1764:java.util.Set keySet() -> keySet
    1700:1700:java.lang.Object remove(java.lang.Object) -> remove
    1759:1759:java.util.Collection remove(java.lang.Object) -> remove
    1718:1718:void removeValuesForKey(java.lang.Object) -> removeValuesForKey
    1709:1709:int size() -> size
com.google.common.collect.Multimaps$AsMap$EntrySet -> com.google.common.collect.Multimaps$AsMap$EntrySet:
    1722:1722:void <init>(com.google.common.collect.Multimaps$AsMap) -> <init>
    1730:1731:java.util.Iterator iterator() -> iterator
    1725:1725:java.util.Map map() -> map
    1742:1746:boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$AsMap$EntrySet$1 -> com.google.common.collect.Multimaps$AsMap$EntrySet$1:
    1732:1732:void <init>(com.google.common.collect.Multimaps$AsMap$EntrySet) -> <init>
    1732:1732:java.lang.Object apply(java.lang.Object) -> apply
    1735:1735:java.util.Collection apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$CustomListMultimap -> com.google.common.collect.Multimaps$CustomListMultimap:
    227:228:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    238:238:java.util.Map createAsMap() -> createAsMap
    223:223:java.util.Collection createCollection() -> createCollection
    243:243:java.util.List createCollection() -> createCollection
    233:233:java.util.Set createKeySet() -> createKeySet
    257:260:void readObject(java.io.ObjectInputStream) -> readObject
    249:251:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Multimaps$CustomMultimap -> com.google.common.collect.Multimaps$CustomMultimap:
    115:116:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    126:126:java.util.Map createAsMap() -> createAsMap
    131:131:java.util.Collection createCollection() -> createCollection
    121:121:java.util.Set createKeySet() -> createKeySet
    178:181:void readObject(java.io.ObjectInputStream) -> readObject
    136:145:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    151:160:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    170:172:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Multimaps$CustomSetMultimap -> com.google.common.collect.Multimaps$CustomSetMultimap:
    305:306:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    316:316:java.util.Map createAsMap() -> createAsMap
    301:301:java.util.Collection createCollection() -> createCollection
    321:321:java.util.Set createCollection() -> createCollection
    311:311:java.util.Set createKeySet() -> createKeySet
    357:360:void readObject(java.io.ObjectInputStream) -> readObject
    326:331:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    337:342:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    349:351:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Multimaps$CustomSortedSetMultimap -> com.google.common.collect.Multimaps$CustomSortedSetMultimap:
    406:408:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    418:418:java.util.Map createAsMap() -> createAsMap
    401:401:java.util.Collection createCollection() -> createCollection
    401:401:java.util.Set createCollection() -> createCollection
    423:423:java.util.SortedSet createCollection() -> createCollection
    413:413:java.util.Set createKeySet() -> createKeySet
    442:446:void readObject(java.io.ObjectInputStream) -> readObject
    428:428:java.util.Comparator valueComparator() -> valueComparator
    434:436:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Multimaps$Entries -> com.google.common.collect.Multimaps$Entries:
    1667:1667:void <init>() -> <init>
    1695:1695:void clear() -> clear
    1677:1679:boolean contains(java.lang.Object) -> contains
    1686:1688:boolean remove(java.lang.Object) -> remove
    1672:1672:int size() -> size
com.google.common.collect.Multimaps$Keys -> com.google.common.collect.Multimaps$Keys:
    1573:1574:void <init>(com.google.common.collect.Multimap) -> <init>
    1652:1652:void clear() -> clear
    1610:1610:boolean contains(java.lang.Object) -> contains
    1620:1621:int count(java.lang.Object) -> count
    1600:1600:int distinctElements() -> distinctElements
    1662:1662:java.util.Iterator elementIterator() -> elementIterator
    1657:1657:java.util.Set elementSet() -> elementSet
    1579:1580:java.util.Iterator entryIterator() -> entryIterator
    1615:1615:java.util.Iterator iterator() -> iterator
    1626:1644:int remove(java.lang.Object,int) -> remove
    1605:1605:int size() -> size
com.google.common.collect.Multimaps$Keys$1 -> com.google.common.collect.Multimaps$Keys$1:
    1580:1580:void <init>(com.google.common.collect.Multimaps$Keys,java.util.Iterator) -> <init>
    1580:1580:java.lang.Object transform(java.lang.Object) -> transform
    1583:1583:com.google.common.collect.Multiset$Entry transform(java.util.Map$Entry) -> transform
com.google.common.collect.Multimaps$Keys$1$1 -> com.google.common.collect.Multimaps$Keys$1$1:
    1583:1583:void <init>(com.google.common.collect.Multimaps$Keys$1,java.util.Map$Entry) -> <init>
    1591:1591:int getCount() -> getCount
    1586:1586:java.lang.Object getElement() -> getElement
com.google.common.collect.Multimaps$MapMultimap -> com.google.common.collect.Multimaps$MapMultimap:
    986:987:void <init>(java.util.Map) -> <init>
    1085:1085:void clear() -> clear
    1007:1007:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    997:997:boolean containsKey(java.lang.Object) -> containsKey
    1002:1002:boolean containsValue(java.lang.Object) -> containsValue
    1120:1120:java.util.Map createAsMap() -> createAsMap
    1105:1105:java.util.Collection createEntries() -> createEntries
    1090:1090:java.util.Set createKeySet() -> createKeySet
    1110:1110:com.google.common.collect.Multiset createKeys() -> createKeys
    1095:1095:java.util.Collection createValues() -> createValues
    982:982:java.util.Collection entries() -> entries
    1100:1100:java.util.Set entries() -> entries
    1115:1115:java.util.Iterator entryIterator() -> entryIterator
    982:982:java.util.Collection get(java.lang.Object) -> get
    1012:1012:java.util.Set get(java.lang.Object) -> get
    1125:1125:int hashCode() -> hashCode
    1050:1050:boolean put(java.lang.Object,java.lang.Object) -> put
    1055:1055:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    1060:1060:boolean putAll(com.google.common.collect.Multimap) -> putAll
    1070:1070:boolean remove(java.lang.Object,java.lang.Object) -> remove
    982:982:java.util.Collection removeAll(java.lang.Object) -> removeAll
    1075:1079:java.util.Set removeAll(java.lang.Object) -> removeAll
    982:982:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    1065:1065:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    992:992:int size() -> size
com.google.common.collect.Multimaps$MapMultimap$1 -> com.google.common.collect.Multimaps$MapMultimap$1:
    1012:1012:void <init>(com.google.common.collect.Multimaps$MapMultimap,java.lang.Object) -> <init>
    1015:1015:java.util.Iterator iterator() -> iterator
    1043:1043:int size() -> size
com.google.common.collect.Multimaps$MapMultimap$1$1 -> com.google.common.collect.Multimaps$MapMultimap$1$1:
    1015:1015:void <init>(com.google.common.collect.Multimaps$MapMultimap$1) -> <init>
    1020:1020:boolean hasNext() -> hasNext
    1025:1029:java.lang.Object next() -> next
    1034:1036:void remove() -> remove
com.google.common.collect.Multimaps$TransformedEntriesListMultimap -> com.google.common.collect.Multimaps$TransformedEntriesListMultimap:
    1457:1457:void <init>(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1452:1452:java.util.Collection get(java.lang.Object) -> get
    1467:1467:java.util.List get(java.lang.Object) -> get
    1452:1452:java.util.Collection removeAll(java.lang.Object) -> removeAll
    1473:1473:java.util.List removeAll(java.lang.Object) -> removeAll
    1452:1452:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    1478:1478:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    1452:1452:java.util.Collection transform(java.lang.Object,java.util.Collection) -> transform
    1462:1462:java.util.List transform(java.lang.Object,java.util.Collection) -> transform
com.google.common.collect.Multimaps$TransformedEntriesMultimap -> com.google.common.collect.Multimaps$TransformedEntriesMultimap:
    1341:1343:void <init>(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1369:1369:void clear() -> clear
    1374:1374:boolean containsKey(java.lang.Object) -> containsKey
    1357:1358:java.util.Map createAsMap() -> createAsMap
    1379:1379:java.util.Collection createEntries() -> createEntries
    1400:1400:java.util.Set createKeySet() -> createKeySet
    1405:1405:com.google.common.collect.Multiset createKeys() -> createKeys
    1447:1448:java.util.Collection createValues() -> createValues
    1384:1385:java.util.Iterator entryIterator() -> entryIterator
    1390:1390:java.util.Collection get(java.lang.Object) -> get
    1395:1395:boolean isEmpty() -> isEmpty
    1410:1410:boolean put(java.lang.Object,java.lang.Object) -> put
    1415:1415:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    1420:1420:boolean putAll(com.google.common.collect.Multimap) -> putAll
    1426:1426:boolean remove(java.lang.Object,java.lang.Object) -> remove
    1432:1432:java.util.Collection removeAll(java.lang.Object) -> removeAll
    1437:1437:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    1442:1442:int size() -> size
    1347:1351:java.util.Collection transform(java.lang.Object,java.util.Collection) -> transform
com.google.common.collect.Multimaps$TransformedEntriesMultimap$1 -> com.google.common.collect.Multimaps$TransformedEntriesMultimap$1:
    1359:1359:void <init>(com.google.common.collect.Multimaps$TransformedEntriesMultimap) -> <init>
    1359:1359:java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
    1362:1362:java.util.Collection transformEntry(java.lang.Object,java.util.Collection) -> transformEntry
com.google.common.collect.Multimaps$UnmodifiableListMultimap -> com.google.common.collect.Multimaps$UnmodifiableListMultimap:
    658:658:void <init>(com.google.common.collect.ListMultimap) -> <init>
    655:655:com.google.common.collect.Multimap delegate() -> delegate
    655:655:java.lang.Object delegate() -> delegate
    663:663:com.google.common.collect.ListMultimap delegate() -> delegate
    655:655:java.util.Collection get(java.lang.Object) -> get
    668:668:java.util.List get(java.lang.Object) -> get
    655:655:java.util.Collection removeAll(java.lang.Object) -> removeAll
    673:673:java.util.List removeAll(java.lang.Object) -> removeAll
    655:655:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    678:678:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.Multimaps$UnmodifiableMultimap -> com.google.common.collect.Multimaps$UnmodifiableMultimap:
    548:549:void <init>(com.google.common.collect.Multimap) -> <init>
    564:570:java.util.Map asMap() -> asMap
    559:559:void clear() -> clear
    539:539:java.lang.Object delegate() -> delegate
    554:554:com.google.common.collect.Multimap delegate() -> delegate
    583:585:java.util.Collection entries() -> entries
    592:592:java.util.Collection get(java.lang.Object) -> get
    606:608:java.util.Set keySet() -> keySet
    597:599:com.google.common.collect.Multiset keys() -> keys
    615:615:boolean put(java.lang.Object,java.lang.Object) -> put
    620:620:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    625:625:boolean putAll(com.google.common.collect.Multimap) -> putAll
    630:630:boolean remove(java.lang.Object,java.lang.Object) -> remove
    635:635:java.util.Collection removeAll(java.lang.Object) -> removeAll
    640:640:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    645:647:java.util.Collection values() -> values
com.google.common.collect.Multimaps$UnmodifiableMultimap$1 -> com.google.common.collect.Multimaps$UnmodifiableMultimap$1:
    571:571:void <init>(com.google.common.collect.Multimaps$UnmodifiableMultimap) -> <init>
    571:571:java.lang.Object apply(java.lang.Object) -> apply
    574:574:java.util.Collection apply(java.util.Collection) -> apply
com.google.common.collect.Multimaps$UnmodifiableSetMultimap -> com.google.common.collect.Multimaps$UnmodifiableSetMultimap:
    687:687:void <init>(com.google.common.collect.SetMultimap) -> <init>
    684:684:com.google.common.collect.Multimap delegate() -> delegate
    684:684:java.lang.Object delegate() -> delegate
    692:692:com.google.common.collect.SetMultimap delegate() -> delegate
    684:684:java.util.Collection entries() -> entries
    706:706:java.util.Set entries() -> entries
    684:684:java.util.Collection get(java.lang.Object) -> get
    701:701:java.util.Set get(java.lang.Object) -> get
    684:684:java.util.Collection removeAll(java.lang.Object) -> removeAll
    711:711:java.util.Set removeAll(java.lang.Object) -> removeAll
    684:684:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    716:716:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap -> com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:
    725:725:void <init>(com.google.common.collect.SortedSetMultimap) -> <init>
    722:722:com.google.common.collect.Multimap delegate() -> delegate
    722:722:com.google.common.collect.SetMultimap delegate() -> delegate
    722:722:java.lang.Object delegate() -> delegate
    730:730:com.google.common.collect.SortedSetMultimap delegate() -> delegate
    722:722:java.util.Collection get(java.lang.Object) -> get
    722:722:java.util.Set get(java.lang.Object) -> get
    735:735:java.util.SortedSet get(java.lang.Object) -> get
    722:722:java.util.Collection removeAll(java.lang.Object) -> removeAll
    722:722:java.util.Set removeAll(java.lang.Object) -> removeAll
    740:740:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    722:722:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    722:722:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    745:745:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    750:750:java.util.Comparator valueComparator() -> valueComparator
com.google.common.collect.Multisets -> com.google.common.collect.Multisets:
    57:57:void <init>() -> <init>
    859:866:boolean addAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> addAllImpl
    874:880:boolean addAllImpl(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> addAllImpl
    892:895:boolean addAllImpl(com.google.common.collect.Multiset,com.google.common.collect.AbstractMapBasedMultiset) -> addAllImpl
    1105:1105:com.google.common.collect.Multiset cast(java.lang.Iterable) -> cast
    650:654:boolean containsOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> containsOccurrences
    1116:1118:com.google.common.collect.ImmutableMultiset copyHighestCountFirst(com.google.common.collect.Multiset) -> copyHighestCountFirst
    582:586:com.google.common.collect.Multiset difference(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> difference
    950:950:java.util.Iterator elementIterator(java.util.Iterator) -> elementIterator
    836:848:boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object) -> equalsImpl
    270:277:com.google.common.collect.Multiset filter(com.google.common.collect.Multiset,com.google.common.base.Predicate) -> filter
    212:212:com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int) -> immutableEntry
    356:357:int inferDistinctElements(java.lang.Iterable) -> inferDistinctElements
    448:451:com.google.common.collect.Multiset intersection(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> intersection
    1041:1041:java.util.Iterator iteratorImpl(com.google.common.collect.Multiset) -> iteratorImpl
    1097:1100:int linearTimeSizeImpl(com.google.common.collect.Multiset) -> linearTimeSizeImpl
    902:906:boolean removeAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> removeAllImpl
    731:738:boolean removeOccurrences(com.google.common.collect.Multiset,java.lang.Iterable) -> removeOccurrences
    769:781:boolean removeOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> removeOccurrences
    911:917:boolean retainAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> retainAllImpl
    680:680:boolean retainOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> retainOccurrences
    686:698:boolean retainOccurrencesImpl(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> retainOccurrencesImpl
    922:930:int setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int) -> setCountImpl
    938:942:boolean setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int,int) -> setCountImpl
    505:509:com.google.common.collect.Multiset sum(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> sum
    377:380:com.google.common.collect.Multiset union(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> union
    70:75:com.google.common.collect.Multiset unmodifiableMultiset(com.google.common.collect.Multiset) -> unmodifiableMultiset
    86:86:com.google.common.collect.Multiset unmodifiableMultiset(com.google.common.collect.ImmutableMultiset) -> unmodifiableMultiset
    200:200:com.google.common.collect.SortedMultiset unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset) -> unmodifiableSortedMultiset
com.google.common.collect.Multisets$1 -> com.google.common.collect.Multisets$1:
    380:380:void <init>(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> <init>
    383:383:boolean contains(java.lang.Object) -> contains
    393:393:int count(java.lang.Object) -> count
    398:398:java.util.Set createElementSet() -> createElementSet
    403:403:java.util.Iterator elementIterator() -> elementIterator
    408:411:java.util.Iterator entryIterator() -> entryIterator
    388:388:boolean isEmpty() -> isEmpty
com.google.common.collect.Multisets$1$1 -> com.google.common.collect.Multisets$1$1:
    411:411:void <init>(com.google.common.collect.Multisets$1,java.util.Iterator,java.util.Iterator) -> <init>
    411:411:java.lang.Object computeNext() -> computeNext
    414:427:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
com.google.common.collect.Multisets$2 -> com.google.common.collect.Multisets$2:
    451:451:void <init>(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> <init>
    454:455:int count(java.lang.Object) -> count
    460:460:java.util.Set createElementSet() -> createElementSet
    465:465:java.util.Iterator elementIterator() -> elementIterator
    470:472:java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.Multisets$2$1 -> com.google.common.collect.Multisets$2$1:
    472:472:void <init>(com.google.common.collect.Multisets$2,java.util.Iterator) -> <init>
    472:472:java.lang.Object computeNext() -> computeNext
    475:483:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
com.google.common.collect.Multisets$3 -> com.google.common.collect.Multisets$3:
    509:509:void <init>(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> <init>
    512:512:boolean contains(java.lang.Object) -> contains
    527:527:int count(java.lang.Object) -> count
    532:532:java.util.Set createElementSet() -> createElementSet
    537:537:java.util.Iterator elementIterator() -> elementIterator
    542:544:java.util.Iterator entryIterator() -> entryIterator
    517:517:boolean isEmpty() -> isEmpty
    522:522:int size() -> size
com.google.common.collect.Multisets$3$1 -> com.google.common.collect.Multisets$3$1:
    544:544:void <init>(com.google.common.collect.Multisets$3,java.util.Iterator,java.util.Iterator) -> <init>
    544:544:java.lang.Object computeNext() -> computeNext
    547:560:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
com.google.common.collect.Multisets$4 -> com.google.common.collect.Multisets$4:
    586:586:void <init>(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> <init>
    595:595:void clear() -> clear
    589:590:int count(java.lang.Object) -> count
    637:637:int distinctElements() -> distinctElements
    600:601:java.util.Iterator elementIterator() -> elementIterator
    618:619:java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.Multisets$4$1 -> com.google.common.collect.Multisets$4$1:
    601:601:void <init>(com.google.common.collect.Multisets$4,java.util.Iterator) -> <init>
    604:611:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$4$2 -> com.google.common.collect.Multisets$4$2:
    619:619:void <init>(com.google.common.collect.Multisets$4,java.util.Iterator) -> <init>
    619:619:java.lang.Object computeNext() -> computeNext
    622:630:com.google.common.collect.Multiset$Entry computeNext() -> computeNext
com.google.common.collect.Multisets$5 -> com.google.common.collect.Multisets$5:
    950:950:void <init>(java.util.Iterator) -> <init>
    950:950:java.lang.Object transform(java.lang.Object) -> transform
    953:953:java.lang.Object transform(com.google.common.collect.Multiset$Entry) -> transform
com.google.common.collect.Multisets$AbstractEntry -> com.google.common.collect.Multisets$AbstractEntry:
    792:792:void <init>() -> <init>
    799:802:boolean equals(java.lang.Object) -> equals
    813:814:int hashCode() -> hashCode
    825:827:java.lang.String toString() -> toString
com.google.common.collect.Multisets$DecreasingCount -> com.google.common.collect.Multisets$DecreasingCount:
    1122:1122:void <clinit>() -> <clinit>
    1121:1121:void <init>() -> <init>
    1121:1121:int compare(java.lang.Object,java.lang.Object) -> compare
    1126:1126:int compare(com.google.common.collect.Multiset$Entry,com.google.common.collect.Multiset$Entry) -> compare
com.google.common.collect.Multisets$ElementSet -> com.google.common.collect.Multisets$ElementSet:
    958:958:void <init>() -> <init>
    963:963:void clear() -> clear
    968:968:boolean contains(java.lang.Object) -> contains
    973:973:boolean containsAll(java.util.Collection) -> containsAll
    978:978:boolean isEmpty() -> isEmpty
    986:986:boolean remove(java.lang.Object) -> remove
    991:991:int size() -> size
com.google.common.collect.Multisets$EntrySet -> com.google.common.collect.Multisets$EntrySet:
    995:995:void <init>() -> <init>
    1035:1035:void clear() -> clear
    1000:1010:boolean contains(java.lang.Object) -> contains
    1019:1027:boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multisets$FilteredMultiset -> com.google.common.collect.Multisets$FilteredMultiset:
    284:286:void <init>(com.google.common.collect.Multiset,com.google.common.base.Predicate) -> <init>
    334:336:int add(java.lang.Object,int) -> add
    323:327:int count(java.lang.Object) -> count
    296:296:java.util.Set createElementSet() -> createElementSet
    306:307:java.util.Set createEntrySet() -> createEntrySet
    301:301:java.util.Iterator elementIterator() -> elementIterator
    318:318:java.util.Iterator entryIterator() -> entryIterator
    280:280:java.util.Iterator iterator() -> iterator
    291:291:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    341:345:int remove(java.lang.Object,int) -> remove
com.google.common.collect.Multisets$FilteredMultiset$1 -> com.google.common.collect.Multisets$FilteredMultiset$1:
    308:308:void <init>(com.google.common.collect.Multisets$FilteredMultiset) -> <init>
    308:308:boolean apply(java.lang.Object) -> apply
    311:311:boolean apply(com.google.common.collect.Multiset$Entry) -> apply
com.google.common.collect.Multisets$ImmutableEntry -> com.google.common.collect.Multisets$ImmutableEntry:
    219:222:void <init>(java.lang.Object,int) -> <init>
    233:233:int getCount() -> getCount
    228:228:java.lang.Object getElement() -> getElement
com.google.common.collect.Multisets$MultisetIteratorImpl -> com.google.common.collect.Multisets$MultisetIteratorImpl:
    1057:1059:void <init>(com.google.common.collect.Multiset,java.util.Iterator) -> <init>
    1064:1064:boolean hasNext() -> hasNext
    1069:1078:java.lang.Object next() -> next
    1083:1090:void remove() -> remove
com.google.common.collect.Multisets$UnmodifiableMultiset -> com.google.common.collect.Multisets$UnmodifiableMultiset:
    92:93:void <init>(com.google.common.collect.Multiset) -> <init>
    135:135:boolean add(java.lang.Object) -> add
    140:140:int add(java.lang.Object,int) -> add
    145:145:boolean addAll(java.util.Collection) -> addAll
    170:170:void clear() -> clear
    106:106:java.util.Set createElementSet() -> createElementSet
    89:89:java.lang.Object delegate() -> delegate
    89:89:java.util.Collection delegate() -> delegate
    100:100:com.google.common.collect.Multiset delegate() -> delegate
    111:112:java.util.Set elementSet() -> elementSet
    120:124:java.util.Set entrySet() -> entrySet
    130:130:java.util.Iterator iterator() -> iterator
    150:150:boolean remove(java.lang.Object) -> remove
    155:155:int remove(java.lang.Object,int) -> remove
    160:160:boolean removeAll(java.util.Collection) -> removeAll
    165:165:boolean retainAll(java.util.Collection) -> retainAll
    175:175:int setCount(java.lang.Object,int) -> setCount
    180:180:boolean setCount(java.lang.Object,int,int) -> setCount
com.google.common.collect.Multisets$ViewMultiset -> com.google.common.collect.Multisets$ViewMultiset:
    1134:1134:void <init>() -> <init>
    1134:1134:void <init>(com.google.common.collect.Multisets$1) -> <init>
    1142:1142:void clear() -> clear
    1152:1152:int distinctElements() -> distinctElements
    1147:1147:java.util.Iterator iterator() -> iterator
    1137:1137:int size() -> size
com.google.common.collect.MutableClassToInstanceMap -> com.google.common.collect.MutableClassToInstanceMap:
    66:67:void <init>(java.util.Map) -> <init>
    44:44:java.lang.Object access$000(java.lang.Class,java.lang.Object) -> access$000
    149:149:java.lang.Object cast(java.lang.Class,java.lang.Object) -> cast
    76:76:java.util.Map$Entry checkedEntry(java.util.Map$Entry) -> checkedEntry
    52:52:com.google.common.collect.MutableClassToInstanceMap create() -> create
    61:61:com.google.common.collect.MutableClassToInstanceMap create(java.util.Map) -> create
    42:42:java.lang.Object delegate() -> delegate
    72:72:java.util.Map delegate() -> delegate
    91:91:java.util.Set entrySet() -> entrySet
    144:144:java.lang.Object getInstance(java.lang.Class) -> getInstance
    42:42:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    124:124:java.lang.Object put(java.lang.Class,java.lang.Object) -> put
    129:133:void putAll(java.util.Map) -> putAll
    139:139:java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    153:153:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.MutableClassToInstanceMap$1 -> com.google.common.collect.MutableClassToInstanceMap$1:
    76:76:void <init>(java.util.Map$Entry) -> <init>
    76:76:java.lang.Object delegate() -> delegate
    79:79:java.util.Map$Entry delegate() -> delegate
    84:84:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.MutableClassToInstanceMap$2 -> com.google.common.collect.MutableClassToInstanceMap$2:
    91:91:void <init>(com.google.common.collect.MutableClassToInstanceMap) -> <init>
    91:91:java.lang.Object delegate() -> delegate
    91:91:java.util.Collection delegate() -> delegate
    95:95:java.util.Set delegate() -> delegate
    100:101:java.util.Iterator iterator() -> iterator
    111:111:java.lang.Object[] toArray() -> toArray
    116:116:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MutableClassToInstanceMap$2$1 -> com.google.common.collect.MutableClassToInstanceMap$2$1:
    101:101:void <init>(com.google.common.collect.MutableClassToInstanceMap$2,java.util.Iterator) -> <init>
    101:101:java.lang.Object transform(java.lang.Object) -> transform
    104:104:java.util.Map$Entry transform(java.util.Map$Entry) -> transform
com.google.common.collect.MutableClassToInstanceMap$SerializedForm -> com.google.common.collect.MutableClassToInstanceMap$SerializedForm:
    160:161:void <init>(java.util.Map) -> <init>
    165:165:java.lang.Object readResolve() -> readResolve
com.google.common.collect.NaturalOrdering -> com.google.common.collect.NaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    74:74:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    36:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    43:45:com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    52:54:com.google.common.collect.Ordering nullsLast() -> nullsLast
    66:66:java.lang.Object readResolve() -> readResolve
    61:61:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.NullsFirstOrdering -> com.google.common.collect.NullsFirstOrdering:
    28:29:void <init>(com.google.common.collect.Ordering) -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    68:70:boolean equals(java.lang.Object) -> equals
    77:77:int hashCode() -> hashCode
    60:60:com.google.common.collect.Ordering nullsLast() -> nullsLast
    49:49:com.google.common.collect.Ordering reverse() -> reverse
    82:82:java.lang.String toString() -> toString
com.google.common.collect.NullsLastOrdering -> com.google.common.collect.NullsLastOrdering:
    28:29:void <init>(com.google.common.collect.Ordering) -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    68:70:boolean equals(java.lang.Object) -> equals
    77:77:int hashCode() -> hashCode
    54:54:com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    49:49:com.google.common.collect.Ordering reverse() -> reverse
    82:82:java.lang.String toString() -> toString
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    38:38:void <init>() -> <init>
    225:225:java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
    209:209:java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> checkElementsNotNull
    215:215:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> checkElementsNotNull
    71:73:java.lang.Object[] concat(java.lang.Object[],java.lang.Object[],java.lang.Class) -> concat
    86:88:java.lang.Object[] concat(java.lang.Object,java.lang.Object[]) -> concat
    101:102:java.lang.Object[] concat(java.lang.Object[],java.lang.Object) -> concat
    182:187:java.lang.Object[] copyAsObjectArray(java.lang.Object[],int,int) -> copyAsObjectArray
    194:195:java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> fillArray
    49:49:java.lang.Object[] newArray(java.lang.Class,int) -> newArray
    59:59:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    202:204:void swap(java.lang.Object[],int,int) -> swap
    128:134:java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> toArrayImpl
    151:157:java.lang.Object[] toArrayImpl(java.lang.Object[],int,int,java.lang.Object[]) -> toArrayImpl
    174:174:java.lang.Object[] toArrayImpl(java.util.Collection) -> toArrayImpl
com.google.common.collect.ObjectCountHashMap -> com.google.common.collect.ObjectCountHashMap:
    112:113:void <init>() -> <init>
    116:119:void <init>(com.google.common.collect.ObjectCountHashMap) -> <init>
    129:129:void <init>(int) -> <init>
    132:133:void <init>(int,float) -> <init>
    487:492:void clear() -> clear
    394:394:boolean containsKey(java.lang.Object) -> containsKey
    46:46:com.google.common.collect.ObjectCountHashMap create() -> create
    59:59:com.google.common.collect.ObjectCountHashMap createWithExpectedSize(int) -> createWithExpectedSize
    264:269:void ensureCapacity(int) -> ensureCapacity
    167:167:int firstIndex() -> firstIndex
    398:399:int get(java.lang.Object) -> get
    199:200:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    184:185:java.lang.Object getKey(int) -> getKey
    189:190:int getValue(int) -> getValue
    163:163:int hashTableMask() -> hashTableMask
    381:388:int indexOf(java.lang.Object) -> indexOf
    137:147:void init(int,float) -> init
    320:322:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    448:482:void moveLastEntry(int) -> moveLastEntry
    157:158:long[] newEntries(int) -> newEntries
    151:152:int[] newTable(int) -> newTable
    171:171:int nextIndex(int) -> nextIndex
    275:312:int put(java.lang.Object,int) -> put
    404:404:int remove(java.lang.Object) -> remove
    408:434:int remove(java.lang.Object,int) -> remove
    441:441:int removeEntry(int) -> removeEntry
    344:352:void resizeEntries(int) -> resizeEntries
    327:334:void resizeMeMaybe(int) -> resizeMeMaybe
    356:377:void resizeTable(int) -> resizeTable
    194:195:void setValue(int,int) -> setValue
    179:179:int size() -> size
com.google.common.collect.ObjectCountHashMap$MapEntry -> com.google.common.collect.ObjectCountHashMap$MapEntry:
    209:211:void <init>(com.google.common.collect.ObjectCountHashMap,int) -> <init>
    230:231:int getCount() -> getCount
    216:216:java.lang.Object getElement() -> getElement
    237:243:int setCount(int) -> setCount
    220:223:void updateLastKnownIndex() -> updateLastKnownIndex
com.google.common.collect.ObjectCountLinkedHashMap -> com.google.common.collect.ObjectCountLinkedHashMap:
    69:69:void <init>() -> <init>
    73:73:void <init>(int) -> <init>
    77:77:void <init>(int,float) -> <init>
    80:83:void <init>(com.google.common.collect.ObjectCountHashMap) -> <init>
    171:173:void clear() -> clear
    33:33:com.google.common.collect.ObjectCountLinkedHashMap create() -> create
    46:46:com.google.common.collect.ObjectCountLinkedHashMap createWithExpectedSize(int) -> createWithExpectedSize
    98:98:int firstIndex() -> firstIndex
    113:113:int getPredecessor(int) -> getPredecessor
    117:117:int getSuccessor(int) -> getSuccessor
    89:93:void init(int,float) -> init
    145:147:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    152:158:void moveLastEntry(int) -> moveLastEntry
    103:103:int nextIndex(int) -> nextIndex
    109:109:int nextIndexAfterRemove(int,int) -> nextIndexAfterRemove
    163:166:void resizeEntries(int) -> resizeEntries
    127:127:void setPredecessor(int,int) -> setPredecessor
    132:139:void setSucceeds(int,int) -> setSucceeds
    122:122:void setSuccessor(int,int) -> setSuccessor
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    391:391:void <init>() -> <init>
    282:282:com.google.common.collect.Ordering allEqual() -> allEqual
    315:315:com.google.common.collect.Ordering arbitrary() -> arbitrary
    924:924:int binarySearch(java.util.List,java.lang.Object) -> binarySearch
    471:471:com.google.common.collect.Ordering compound(java.util.Comparator) -> compound
    495:495:com.google.common.collect.Ordering compound(java.lang.Iterable) -> compound
    220:220:com.google.common.collect.Ordering explicit(java.util.List) -> explicit
    246:246:com.google.common.collect.Ordering explicit(java.lang.Object,java.lang.Object[]) -> explicit
    182:184:com.google.common.collect.Ordering from(java.util.Comparator) -> from
    195:195:com.google.common.collect.Ordering from(com.google.common.collect.Ordering) -> from
    800:800:java.util.List greatestOf(java.lang.Iterable,int) -> greatestOf
    820:820:java.util.List greatestOf(java.util.Iterator,int) -> greatestOf
    863:863:com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    876:881:boolean isOrdered(java.lang.Iterable) -> isOrdered
    900:905:boolean isStrictlyOrdered(java.lang.Iterable) -> isStrictlyOrdered
    724:740:java.util.List leastOf(java.lang.Iterable,int) -> leastOf
    760:777:java.util.List leastOf(java.util.Iterator,int) -> leastOf
    525:525:com.google.common.collect.Ordering lexicographical() -> lexicographical
    637:640:java.lang.Object max(java.util.Iterator) -> max
    661:661:java.lang.Object max(java.lang.Iterable) -> max
    680:680:java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    698:701:java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    551:554:java.lang.Object min(java.util.Iterator) -> min
    575:575:java.lang.Object min(java.lang.Iterable) -> min
    594:594:java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    612:615:java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    162:162:com.google.common.collect.Ordering natural() -> natural
    418:418:com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    431:431:com.google.common.collect.Ordering nullsLast() -> nullsLast
    453:453:com.google.common.collect.Ordering onKeys() -> onKeys
    449:449:com.google.common.collect.Ordering onResultOf(com.google.common.base.Function) -> onResultOf
    405:405:com.google.common.collect.Ordering reverse() -> reverse
    841:843:java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    295:295:com.google.common.collect.Ordering usingToString() -> usingToString
com.google.common.collect.Ordering$ArbitraryOrdering -> com.google.common.collect.Ordering$ArbitraryOrdering:
    323:327:void <init>() -> <init>
    353:362:int compare(java.lang.Object,java.lang.Object) -> compare
    330:336:java.lang.Integer getUid(java.lang.Object) -> getUid
    381:381:int identityHashCode(java.lang.Object) -> identityHashCode
com.google.common.collect.Ordering$ArbitraryOrderingHolder -> com.google.common.collect.Ordering$ArbitraryOrderingHolder:
    319:319:void <clinit>() -> <clinit>
    318:318:void <init>() -> <init>
com.google.common.collect.Ordering$IncomparableValueException -> com.google.common.collect.Ordering$IncomparableValueException:
    937:938:void <init>(java.lang.Object) -> <init>
com.google.common.collect.Platform -> com.google.common.collect.Platform:
    114:114:void <init>() -> <init>
    92:92:java.lang.Object[] copy(java.lang.Object[],int,int,java.lang.Object[]) -> copy
    81:86:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    34:34:java.util.Map newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    47:47:java.util.Set newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    42:42:java.util.Map newLinkedHashMapWithExpectedSize(int) -> newLinkedHashMapWithExpectedSize
    55:55:java.util.Set newLinkedHashSetWithExpectedSize(int) -> newLinkedHashSetWithExpectedSize
    71:71:java.util.Set preservesInsertionOrderOnAddsSet() -> preservesInsertionOrderOnAddsSet
    63:63:java.util.Map preservesInsertionOrderOnPutsMap() -> preservesInsertionOrderOnPutsMap
    101:101:com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker) -> tryWeakKeys
com.google.common.collect.Queues -> com.google.common.collect.Queues:
    45:45:void <init>() -> <init>
    278:295:int drain(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit) -> drain
    325:355:int drainUninterruptibly(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit) -> drainUninterruptibly
    55:55:java.util.concurrent.ArrayBlockingQueue newArrayBlockingQueue(int) -> newArrayBlockingQueue
    66:66:java.util.ArrayDeque newArrayDeque() -> newArrayDeque
    76:80:java.util.ArrayDeque newArrayDeque(java.lang.Iterable) -> newArrayDeque
    89:89:java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue() -> newConcurrentLinkedQueue
    99:103:java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue(java.lang.Iterable) -> newConcurrentLinkedQueue
    116:116:java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque() -> newLinkedBlockingDeque
    127:127:java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(int) -> newLinkedBlockingDeque
    139:143:java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(java.lang.Iterable) -> newLinkedBlockingDeque
    152:152:java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue() -> newLinkedBlockingQueue
    162:162:java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(int) -> newLinkedBlockingQueue
    175:179:java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(java.lang.Iterable) -> newLinkedBlockingQueue
    195:195:java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue() -> newPriorityBlockingQueue
    209:213:java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue(java.lang.Iterable) -> newPriorityBlockingQueue
    226:226:java.util.PriorityQueue newPriorityQueue() -> newPriorityQueue
    239:243:java.util.PriorityQueue newPriorityQueue(java.lang.Iterable) -> newPriorityQueue
    252:252:java.util.concurrent.SynchronousQueue newSynchronousQueue() -> newSynchronousQueue
    422:422:java.util.Deque synchronizedDeque(java.util.Deque) -> synchronizedDeque
    389:389:java.util.Queue synchronizedQueue(java.util.Queue) -> synchronizedQueue
com.google.common.collect.Range -> com.google.common.collect.Range:
    298:298:void <clinit>() -> <clinit>
    352:358:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut) -> <init>
    307:307:com.google.common.collect.Range all() -> all
    118:118:boolean apply(java.lang.Object) -> apply
    445:445:boolean apply(java.lang.Comparable) -> apply
    278:278:com.google.common.collect.Range atLeast(java.lang.Comparable) -> atLeast
    243:243:com.google.common.collect.Range atMost(java.lang.Comparable) -> atMost
    652:655:com.google.common.collect.Range canonical(com.google.common.collect.DiscreteDomain) -> canonical
    699:699:java.util.SortedSet cast(java.lang.Iterable) -> cast
    181:181:com.google.common.collect.Range closed(java.lang.Comparable,java.lang.Comparable) -> closed
    193:193:com.google.common.collect.Range closedOpen(java.lang.Comparable,java.lang.Comparable) -> closedOpen
    712:712:int compareOrThrow(java.lang.Comparable,java.lang.Comparable) -> compareOrThrow
    433:435:boolean contains(java.lang.Comparable) -> contains
    453:467:boolean containsAll(java.lang.Iterable) -> containsAll
    156:156:com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut) -> create
    288:294:com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> downTo
    330:346:com.google.common.collect.Range encloseAll(java.lang.Iterable) -> encloseAll
    498:499:boolean encloses(com.google.common.collect.Range) -> encloses
    667:669:boolean equals(java.lang.Object) -> equals
    590:599:com.google.common.collect.Range gap(com.google.common.collect.Range) -> gap
    269:269:com.google.common.collect.Range greaterThan(java.lang.Comparable) -> greaterThan
    364:364:boolean hasLowerBound() -> hasLowerBound
    390:390:boolean hasUpperBound() -> hasUpperBound
    677:677:int hashCode() -> hashCode
    549:558:com.google.common.collect.Range intersection(com.google.common.collect.Range) -> intersection
    528:529:boolean isConnected(com.google.common.collect.Range) -> isConnected
    424:424:boolean isEmpty() -> isEmpty
    234:234:com.google.common.collect.Range lessThan(java.lang.Comparable) -> lessThan
    143:143:com.google.common.base.Function lowerBoundFn() -> lowerBoundFn
    385:385:com.google.common.collect.BoundType lowerBoundType() -> lowerBoundType
    374:374:java.lang.Comparable lowerEndpoint() -> lowerEndpoint
    169:169:com.google.common.collect.Range open(java.lang.Comparable,java.lang.Comparable) -> open
    205:205:com.google.common.collect.Range openClosed(java.lang.Comparable,java.lang.Comparable) -> openClosed
    218:225:com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> range
    152:152:com.google.common.collect.Ordering rangeLexOrdering() -> rangeLexOrdering
    703:704:java.lang.Object readResolve() -> readResolve
    317:317:com.google.common.collect.Range singleton(java.lang.Comparable) -> singleton
    614:623:com.google.common.collect.Range span(com.google.common.collect.Range) -> span
    686:686:java.lang.String toString() -> toString
    690:694:java.lang.String toString(com.google.common.collect.Cut,com.google.common.collect.Cut) -> toString
    253:259:com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> upTo
    148:148:com.google.common.base.Function upperBoundFn() -> upperBoundFn
    411:411:com.google.common.collect.BoundType upperBoundType() -> upperBoundType
    400:400:java.lang.Comparable upperEndpoint() -> upperEndpoint
com.google.common.collect.Range$1 -> com.google.common.collect.Range$1:
    253:253:void <clinit>() -> <clinit>
com.google.common.collect.Range$LowerBoundFn -> com.google.common.collect.Range$LowerBoundFn:
    124:124:void <clinit>() -> <clinit>
    123:123:void <init>() -> <init>
    123:123:java.lang.Object apply(java.lang.Object) -> apply
    128:128:com.google.common.collect.Cut apply(com.google.common.collect.Range) -> apply
com.google.common.collect.Range$RangeLexOrdering -> com.google.common.collect.Range$RangeLexOrdering:
    717:717:void <clinit>() -> <clinit>
    716:716:void <init>() -> <init>
    716:716:int compare(java.lang.Object,java.lang.Object) -> compare
    721:724:int compare(com.google.common.collect.Range,com.google.common.collect.Range) -> compare
com.google.common.collect.Range$UpperBoundFn -> com.google.common.collect.Range$UpperBoundFn:
    133:133:void <clinit>() -> <clinit>
    132:132:void <init>() -> <init>
    132:132:java.lang.Object apply(java.lang.Object) -> apply
    137:137:com.google.common.collect.Cut apply(com.google.common.collect.Range) -> apply
com.google.common.collect.RangeGwtSerializationDependencies -> com.google.common.collect.RangeGwtSerializationDependencies:
    32:32:void <init>() -> <init>
com.google.common.collect.RegularContiguousSet -> com.google.common.collect.RegularContiguousSet:
    39:40:void <init>(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain) -> <init>
    35:35:boolean access$000(java.lang.Comparable,java.lang.Comparable) -> access$000
    154:154:boolean contains(java.lang.Object) -> contains
    162:162:boolean containsAll(java.util.Collection) -> containsAll
    124:138:com.google.common.collect.ImmutableList createAsList() -> createAsList
    33:33:java.util.Iterator descendingIterator() -> descendingIterator
    93:93:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    201:207:boolean equals(java.lang.Object) -> equals
    104:104:boolean equalsOrThrow(java.lang.Comparable,java.lang.Comparable) -> equalsOrThrow
    33:33:java.lang.Object first() -> first
    114:114:java.lang.Comparable first() -> first
    213:213:int hashCode() -> hashCode
    33:33:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    51:51:com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> headSetImpl
    75:75:int indexOf(java.lang.Object) -> indexOf
    172:181:com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    44:46:com.google.common.collect.ContiguousSet intersectionInCurrentDomain(com.google.common.collect.Range) -> intersectionInCurrentDomain
    33:33:java.util.Iterator iterator() -> iterator
    80:80:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    33:33:java.lang.Object last() -> last
    119:119:java.lang.Comparable last() -> last
    187:187:com.google.common.collect.Range range() -> range
    192:194:com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    144:144:int size() -> size
    33:33:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    57:64:com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSetImpl
    33:33:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    69:69:com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> tailSetImpl
    234:234:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.RegularContiguousSet$1 -> com.google.common.collect.RegularContiguousSet$1:
    80:81:void <init>(com.google.common.collect.RegularContiguousSet,java.lang.Comparable) -> <init>
    80:80:java.lang.Object computeNext(java.lang.Object) -> computeNext
    85:85:java.lang.Comparable computeNext(java.lang.Comparable) -> computeNext
com.google.common.collect.RegularContiguousSet$2 -> com.google.common.collect.RegularContiguousSet$2:
    93:94:void <init>(com.google.common.collect.RegularContiguousSet,java.lang.Comparable) -> <init>
    93:93:java.lang.Object computeNext(java.lang.Object) -> computeNext
    98:98:java.lang.Comparable computeNext(java.lang.Comparable) -> computeNext
com.google.common.collect.RegularContiguousSet$3 -> com.google.common.collect.RegularContiguousSet$3:
    125:125:void <init>(com.google.common.collect.RegularContiguousSet) -> <init>
    125:125:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    128:128:com.google.common.collect.ImmutableSortedSet delegateCollection() -> delegateCollection
    125:125:java.lang.Object get(int) -> get
    133:134:java.lang.Comparable get(int) -> get
com.google.common.collect.RegularContiguousSet$SerializedForm -> com.google.common.collect.RegularContiguousSet$SerializedForm:
    217:217:void <init>(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain,com.google.common.collect.RegularContiguousSet$1) -> <init>
    221:223:void <init>(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain) -> <init>
    227:227:java.lang.Object readResolve() -> readResolve
com.google.common.collect.RegularImmutableAsList -> com.google.common.collect.RegularImmutableAsList:
    34:36:void <init>(com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableList) -> <init>
    40:40:void <init>(com.google.common.collect.ImmutableCollection,java.lang.Object[]) -> <init>
    44:44:void <init>(com.google.common.collect.ImmutableCollection,java.lang.Object[],int) -> <init>
    65:65:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    49:49:com.google.common.collect.ImmutableCollection delegateCollection() -> delegateCollection
    53:53:com.google.common.collect.ImmutableList delegateList() -> delegateList
    85:85:java.lang.Object get(int) -> get
    70:70:java.lang.Object[] internalArray() -> internalArray
    80:80:int internalArrayEnd() -> internalArrayEnd
    75:75:int internalArrayStart() -> internalArrayStart
    28:28:java.util.ListIterator listIterator(int) -> listIterator
    59:59:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableBiMap -> com.google.common.collect.RegularImmutableBiMap:
    31:31:void <clinit>() -> <clinit>
    41:46:void <init>() -> <init>
    50:59:void <init>(java.lang.Object[],int) -> <init>
    68:73:void <init>(java.lang.Object,java.lang.Object[],int,com.google.common.collect.RegularImmutableBiMap) -> <init>
    95:95:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    101:104:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    89:90:java.lang.Object get(java.lang.Object) -> get
    28:28:com.google.common.collect.BiMap inverse() -> inverse
    83:83:com.google.common.collect.ImmutableBiMap inverse() -> inverse
    78:78:int size() -> size
com.google.common.collect.RegularImmutableList -> com.google.common.collect.RegularImmutableList:
    32:32:void <clinit>() -> <clinit>
    37:39:void <init>(java.lang.Object[],int) -> <init>
    69:70:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    77:78:java.lang.Object get(int) -> get
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    44:44:int size() -> size
com.google.common.collect.RegularImmutableMap -> com.google.common.collect.RegularImmutableMap:
    47:47:void <clinit>() -> <clinit>
    192:195:void <init>(java.lang.Object,java.lang.Object[],int) -> <init>
    74:82:com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[]) -> create
    266:266:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    93:171:java.lang.Object createHashTable(java.lang.Object[],int,int,int) -> createHashTable
    342:344:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    418:418:com.google.common.collect.ImmutableCollection createValues() -> createValues
    181:181:java.lang.IllegalArgumentException duplicateKeyException(java.lang.Object,java.lang.Object,java.lang.Object[],int) -> duplicateKeyException
    207:207:java.lang.Object get(java.lang.Object) -> get
    219:258:java.lang.Object get(java.lang.Object,java.lang.Object[],int,int,java.lang.Object) -> get
    200:200:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet -> com.google.common.collect.RegularImmutableMap$EntrySet:
    275:279:void <init>(com.google.common.collect.ImmutableMap,java.lang.Object[],int,int) -> <init>
    269:269:int access$000(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$000
    269:269:java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$100
    269:269:int access$200(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$200
    319:323:boolean contains(java.lang.Object) -> contains
    289:289:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    294:294:com.google.common.collect.ImmutableList createAsList() -> createAsList
    269:269:java.util.Iterator iterator() -> iterator
    284:284:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    335:335:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet$1 -> com.google.common.collect.RegularImmutableMap$EntrySet$1:
    294:294:void <init>(com.google.common.collect.RegularImmutableMap$EntrySet) -> <init>
    294:294:java.lang.Object get(int) -> get
    297:302:java.util.Map$Entry get(int) -> get
    307:307:int size() -> size
com.google.common.collect.RegularImmutableMap$KeySet -> com.google.common.collect.RegularImmutableMap$KeySet:
    379:381:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList) -> <init>
    396:396:com.google.common.collect.ImmutableList asList() -> asList
    401:401:boolean contains(java.lang.Object) -> contains
    391:391:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    375:375:java.util.Iterator iterator() -> iterator
    386:386:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    411:411:int size() -> size
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList -> com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList:
    352:355:void <init>(java.lang.Object[],int,int) -> <init>
    360:361:java.lang.Object get(int) -> get
    371:371:int size() -> size
com.google.common.collect.RegularImmutableMultiset -> com.google.common.collect.RegularImmutableMultiset:
    35:36:void <clinit>() -> <clinit>
    43:49:void <init>(com.google.common.collect.ObjectCountHashMap) -> <init>
    59:59:int count(java.lang.Object) -> count
    32:32:java.util.Set elementSet() -> elementSet
    69:70:com.google.common.collect.ImmutableSet elementSet() -> elementSet
    99:99:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    64:64:int size() -> size
    134:134:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.RegularImmutableMultiset$ElementSet -> com.google.common.collect.RegularImmutableMultiset$ElementSet:
    74:74:void <init>(com.google.common.collect.RegularImmutableMultiset) -> <init>
    74:74:void <init>(com.google.common.collect.RegularImmutableMultiset,com.google.common.collect.RegularImmutableMultiset$1) -> <init>
    83:83:boolean contains(java.lang.Object) -> contains
    78:78:java.lang.Object get(int) -> get
    93:93:int size() -> size
com.google.common.collect.RegularImmutableMultiset$SerializedForm -> com.google.common.collect.RegularImmutableMultiset$SerializedForm:
    107:114:void <init>(com.google.common.collect.Multiset) -> <init>
    120:125:java.lang.Object readResolve() -> readResolve
com.google.common.collect.RegularImmutableSet -> com.google.common.collect.RegularImmutableSet:
    31:31:void <clinit>() -> <clinit>
    42:47:void <init>(java.lang.Object[],int,java.lang.Object[],int,int) -> <init>
    52:61:boolean contains(java.lang.Object) -> contains
    94:95:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    100:100:com.google.common.collect.ImmutableList createAsList() -> createAsList
    110:110:int hashCode() -> hashCode
    79:79:java.lang.Object[] internalArray() -> internalArray
    89:89:int internalArrayEnd() -> internalArrayEnd
    28:28:java.util.Iterator iterator() -> iterator
    74:74:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    69:69:int size() -> size
com.google.common.collect.RegularImmutableSortedMultiset -> com.google.common.collect.RegularImmutableSortedMultiset:
    35:38:void <clinit>() -> <clinit>
    45:49:void <init>(java.util.Comparator) -> <init>
    53:57:void <init>(com.google.common.collect.RegularImmutableSortedSet,long[],int,int) -> <init>
    81:82:int count(java.lang.Object) -> count
    32:32:com.google.common.collect.ImmutableSet elementSet() -> elementSet
    32:32:java.util.NavigableSet elementSet() -> elementSet
    32:32:java.util.Set elementSet() -> elementSet
    32:32:java.util.SortedSet elementSet() -> elementSet
    93:93:com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    71:71:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    61:61:int getCount(int) -> getCount
    66:66:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    108:115:com.google.common.collect.ImmutableSortedMultiset getSubMultiset(int,int) -> getSubMultiset
    32:32:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    98:98:com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    122:122:boolean isPartialView() -> isPartialView
    76:76:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    87:88:int size() -> size
    32:32:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    103:104:com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
com.google.common.collect.RegularImmutableSortedSet -> com.google.common.collect.RegularImmutableSortedSet:
    42:43:void <clinit>() -> <clinit>
    48:49:void <init>(com.google.common.collect.ImmutableList,java.util.Comparator) -> <init>
    304:304:com.google.common.collect.ImmutableList asList() -> asList
    225:226:java.lang.Object ceiling(java.lang.Object) -> ceiling
    86:86:boolean contains(java.lang.Object) -> contains
    98:133:boolean containsAll(java.util.Collection) -> containsAll
    155:155:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    309:312:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    39:39:java.util.Iterator descendingIterator() -> descendingIterator
    75:75:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    163:192:boolean equals(java.lang.Object) -> equals
    197:200:java.lang.Object first() -> first
    219:220:java.lang.Object floor(java.lang.Object) -> floor
    278:284:com.google.common.collect.RegularImmutableSortedSet getSubSet(int,int) -> getSubSet
    241:241:int headIndex(java.lang.Object,boolean) -> headIndex
    237:237:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    231:232:java.lang.Object higher(java.lang.Object) -> higher
    295:295:int indexOf(java.lang.Object) -> indexOf
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    59:59:int internalArrayStart() -> internalArrayStart
    150:150:boolean isPartialView() -> isPartialView
    39:39:java.util.Iterator iterator() -> iterator
    69:69:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    205:208:java.lang.Object last() -> last
    213:214:java.lang.Object lower(java.lang.Object) -> lower
    80:80:int size() -> size
    252:252:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    261:261:int tailIndex(java.lang.Object,boolean) -> tailIndex
    257:257:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    145:145:int unsafeBinarySearch(java.lang.Object) -> unsafeBinarySearch
    274:274:java.util.Comparator unsafeComparator() -> unsafeComparator
com.google.common.collect.RegularImmutableTable -> com.google.common.collect.RegularImmutableTable:
    36:36:void <init>() -> <init>
    178:178:void checkNoDuplicate(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> checkNoDuplicate
    34:34:java.util.Set createCellSet() -> createCellSet
    42:42:com.google.common.collect.ImmutableSet createCellSet() -> createCellSet
    34:34:java.util.Collection createValues() -> createValues
    77:77:com.google.common.collect.ImmutableCollection createValues() -> createValues
    102:129:com.google.common.collect.RegularImmutableTable forCells(java.util.List,java.util.Comparator,java.util.Comparator) -> forCells
    133:133:com.google.common.collect.RegularImmutableTable forCells(java.lang.Iterable) -> forCells
    140:157:com.google.common.collect.RegularImmutableTable forCellsInternal(java.lang.Iterable,java.util.Comparator,java.util.Comparator) -> forCellsInternal
    167:169:com.google.common.collect.RegularImmutableTable forOrderedComponents(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet) -> forOrderedComponents
com.google.common.collect.RegularImmutableTable$1 -> com.google.common.collect.RegularImmutableTable$1:
    112:112:void <init>(java.util.Comparator,java.util.Comparator) -> <init>
    112:112:int compare(java.lang.Object,java.lang.Object) -> compare
    116:124:int compare(com.google.common.collect.Table$Cell,com.google.common.collect.Table$Cell) -> compare
com.google.common.collect.RegularImmutableTable$CellSet -> com.google.common.collect.RegularImmutableTable$CellSet:
    46:46:void <init>(com.google.common.collect.RegularImmutableTable) -> <init>
    46:46:void <init>(com.google.common.collect.RegularImmutableTable,com.google.common.collect.RegularImmutableTable$1) -> <init>
    59:62:boolean contains(java.lang.Object) -> contains
    45:45:java.lang.Object get(int) -> get
    54:54:com.google.common.collect.Table$Cell get(int) -> get
    49:49:int size() -> size
com.google.common.collect.RegularImmutableTable$Values -> com.google.common.collect.RegularImmutableTable$Values:
    81:81:void <init>(com.google.common.collect.RegularImmutableTable) -> <init>
    81:81:void <init>(com.google.common.collect.RegularImmutableTable,com.google.common.collect.RegularImmutableTable$1) -> <init>
    89:89:java.lang.Object get(int) -> get
    84:84:int size() -> size
com.google.common.collect.ReverseNaturalOrdering -> com.google.common.collect.ReverseNaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    98:98:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    33:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    26:26:java.lang.Object max(java.lang.Iterable) -> max
    26:26:java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    26:26:java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    26:26:java.lang.Object max(java.util.Iterator) -> max
    70:70:java.lang.Comparable max(java.lang.Comparable,java.lang.Comparable) -> max
    75:75:java.lang.Comparable max(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> max
    80:80:java.lang.Comparable max(java.util.Iterator) -> max
    85:85:java.lang.Comparable max(java.lang.Iterable) -> max
    26:26:java.lang.Object min(java.lang.Iterable) -> min
    26:26:java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    26:26:java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    26:26:java.lang.Object min(java.util.Iterator) -> min
    50:50:java.lang.Comparable min(java.lang.Comparable,java.lang.Comparable) -> min
    55:55:java.lang.Comparable min(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> min
    60:60:java.lang.Comparable min(java.util.Iterator) -> min
    65:65:java.lang.Comparable min(java.lang.Iterable) -> min
    90:90:java.lang.Object readResolve() -> readResolve
    43:43:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.ReverseOrdering -> com.google.common.collect.ReverseOrdering:
    31:32:void <init>(com.google.common.collect.Ordering) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    98:100:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    70:70:java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    75:75:java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    80:80:java.lang.Object max(java.util.Iterator) -> max
    85:85:java.lang.Object max(java.lang.Iterable) -> max
    50:50:java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    55:55:java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    60:60:java.lang.Object min(java.util.Iterator) -> min
    65:65:java.lang.Object min(java.lang.Iterable) -> min
    43:43:com.google.common.collect.Ordering reverse() -> reverse
    107:107:java.lang.String toString() -> toString
com.google.common.collect.RowSortedTable$-CC -> com.google.common.collect.RowSortedTable$-CC:
    35:35:java.util.Set com.google.common.collect.RowSortedTable.rowKeySet() -> $default$rowKeySet
    35:35:java.util.Map com.google.common.collect.RowSortedTable.rowMap() -> $default$rowMap
com.google.common.collect.Serialization -> com.google.common.collect.Serialization:
    37:37:void <init>() -> <init>
    187:190:com.google.common.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String) -> getFieldSetter
    71:72:void populateMap(java.util.Map,java.io.ObjectInputStream) -> populateMap
    83:86:void populateMap(java.util.Map,java.io.ObjectInputStream,int) -> populateMap
    159:160:void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream) -> populateMultimap
    173:179:void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int) -> populateMultimap
    113:114:void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream) -> populateMultiset
    127:129:void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream,int) -> populateMultiset
    47:47:int readCount(java.io.ObjectInputStream) -> readCount
    58:61:void writeMap(java.util.Map,java.io.ObjectOutputStream) -> writeMap
    143:148:void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream) -> writeMultimap
    99:103:void writeMultiset(com.google.common.collect.Multiset,java.io.ObjectOutputStream) -> writeMultiset
com.google.common.collect.Serialization$FieldSetter -> com.google.common.collect.Serialization$FieldSetter:
    195:195:void <init>(java.lang.reflect.Field,com.google.common.collect.Serialization$1) -> <init>
    198:200:void <init>(java.lang.reflect.Field) -> <init>
    205:207:void set(java.lang.Object,java.lang.Object) -> set
    213:215:void set(java.lang.Object,int) -> set
com.google.common.collect.SetMultimap$-CC -> com.google.common.collect.SetMultimap$-CC:
    51:51:java.util.Collection com.google.common.collect.SetMultimap.entries() -> $default$entries
    51:51:java.util.Collection com.google.common.collect.SetMultimap.get(java.lang.Object) -> $default$get
    51:51:java.util.Collection com.google.common.collect.SetMultimap.removeAll(java.lang.Object) -> $default$removeAll
    51:51:java.util.Collection com.google.common.collect.SetMultimap.replaceValues(java.lang.Object,java.lang.Iterable) -> $default$replaceValues
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    67:67:void <init>() -> <init>
    1234:1234:java.util.Set cartesianProduct(java.util.List) -> cartesianProduct
    1292:1292:java.util.Set cartesianProduct(java.util.Set[]) -> cartesianProduct
    1555:1563:java.util.Set combinations(java.util.Set,int) -> combinations
    458:464:java.util.EnumSet complementOf(java.util.Collection) -> complementOf
    479:482:java.util.EnumSet complementOf(java.util.Collection,java.lang.Class) -> complementOf
    812:815:com.google.common.collect.Sets$SetView difference(java.util.Set,java.util.Set) -> difference
    1668:1672:boolean equalsImpl(java.util.Set,java.lang.Object) -> equalsImpl
    954:965:java.util.Set filter(java.util.Set,com.google.common.base.Predicate) -> filter
    993:1001:java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate) -> filter
    1032:1040:java.util.NavigableSet filter(java.util.NavigableSet,com.google.common.base.Predicate) -> filter
    1654:1655:int hashCodeImpl(java.util.Set) -> hashCodeImpl
    100:100:com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Enum,java.lang.Enum[]) -> immutableEnumSet
    116:132:com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Iterable) -> immutableEnumSet
    751:754:com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set) -> intersection
    487:488:java.util.EnumSet makeComplementByHand(java.util.Collection,java.lang.Class) -> makeComplementByHand
    255:255:java.util.Set newConcurrentHashSet() -> newConcurrentHashSet
    272:273:java.util.Set newConcurrentHashSet(java.lang.Iterable) -> newConcurrentHashSet
    423:423:java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet() -> newCopyOnWriteArraySet
    438:441:java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet(java.lang.Iterable) -> newCopyOnWriteArraySet
    144:145:java.util.EnumSet newEnumSet(java.lang.Iterable,java.lang.Class) -> newEnumSet
    164:164:java.util.HashSet newHashSet() -> newHashSet
    181:182:java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    205:207:java.util.HashSet newHashSet(java.lang.Iterable) -> newHashSet
    223:224:java.util.HashSet newHashSet(java.util.Iterator) -> newHashSet
    241:241:java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    409:409:java.util.Set newIdentityHashSet() -> newIdentityHashSet
    291:291:java.util.LinkedHashSet newLinkedHashSet() -> newLinkedHashSet
    310:314:java.util.LinkedHashSet newLinkedHashSet(java.lang.Iterable) -> newLinkedHashSet
    331:331:java.util.LinkedHashSet newLinkedHashSetWithExpectedSize(int) -> newLinkedHashSetWithExpectedSize
    523:523:java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
    349:349:java.util.TreeSet newTreeSet() -> newTreeSet
    374:375:java.util.TreeSet newTreeSet(java.lang.Iterable) -> newTreeSet
    396:396:java.util.TreeSet newTreeSet(java.util.Comparator) -> newTreeSet
    1419:1419:java.util.Set powerSet(java.util.Set) -> powerSet
    1835:1836:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> removeAllImpl
    1842:1856:boolean removeAllImpl(java.util.Set,java.util.Collection) -> removeAllImpl
    2011:2030:java.util.NavigableSet subSet(java.util.NavigableSet,com.google.common.collect.Range) -> subSet
    870:873:com.google.common.collect.Sets$SetView symmetricDifference(java.util.Set,java.util.Set) -> symmetricDifference
    1829:1829:java.util.NavigableSet synchronizedNavigableSet(java.util.NavigableSet) -> synchronizedNavigableSet
    662:665:com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set) -> union
    1694:1697:java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet) -> unmodifiableNavigableSet
com.google.common.collect.Sets$1 -> com.google.common.collect.Sets$1:
    665:665:void <init>(java.util.Set,java.util.Set) -> <init>
    706:706:boolean contains(java.lang.Object) -> contains
    711:712:java.util.Set copyInto(java.util.Set) -> copyInto
    718:718:com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
    679:679:boolean isEmpty() -> isEmpty
    665:665:java.util.Iterator iterator() -> iterator
    684:684:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    668:670:int size() -> size
com.google.common.collect.Sets$1$1 -> com.google.common.collect.Sets$1$1:
    684:686:void <init>(com.google.common.collect.Sets$1) -> <init>
    690:699:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Sets$2 -> com.google.common.collect.Sets$2:
    754:754:void <init>(java.util.Set,java.util.Set) -> <init>
    791:791:boolean contains(java.lang.Object) -> contains
    796:796:boolean containsAll(java.util.Collection) -> containsAll
    786:786:boolean isEmpty() -> isEmpty
    754:754:java.util.Iterator iterator() -> iterator
    757:757:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    776:777:int size() -> size
com.google.common.collect.Sets$2$1 -> com.google.common.collect.Sets$2$1:
    757:758:void <init>(com.google.common.collect.Sets$2) -> <init>
    762:768:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Sets$3 -> com.google.common.collect.Sets$3:
    815:815:void <init>(java.util.Set,java.util.Set) -> <init>
    852:852:boolean contains(java.lang.Object) -> contains
    847:847:boolean isEmpty() -> isEmpty
    815:815:java.util.Iterator iterator() -> iterator
    818:818:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    837:838:int size() -> size
com.google.common.collect.Sets$3$1 -> com.google.common.collect.Sets$3$1:
    818:819:void <init>(com.google.common.collect.Sets$3) -> <init>
    823:829:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Sets$4 -> com.google.common.collect.Sets$4:
    873:873:void <init>(java.util.Set,java.util.Set) -> <init>
    921:921:boolean contains(java.lang.Object) -> contains
    916:916:boolean isEmpty() -> isEmpty
    873:873:java.util.Iterator iterator() -> iterator
    876:878:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    901:907:int size() -> size
com.google.common.collect.Sets$4$1 -> com.google.common.collect.Sets$4$1:
    878:878:void <init>(com.google.common.collect.Sets$4,java.util.Iterator,java.util.Iterator) -> <init>
    881:893:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Sets$5 -> com.google.common.collect.Sets$5:
    1563:1563:void <init>(int,com.google.common.collect.ImmutableMap) -> <init>
    1566:1568:boolean contains(java.lang.Object) -> contains
    1575:1575:java.util.Iterator iterator() -> iterator
    1641:1641:int size() -> size
    1646:1646:java.lang.String toString() -> toString
com.google.common.collect.Sets$5$1 -> com.google.common.collect.Sets$5$1:
    1575:1576:void <init>(com.google.common.collect.Sets$5) -> <init>
    1575:1575:java.lang.Object computeNext() -> computeNext
    1580:1607:java.util.Set computeNext() -> computeNext
com.google.common.collect.Sets$5$1$1 -> com.google.common.collect.Sets$5$1$1:
    1607:1607:void <init>(com.google.common.collect.Sets$5$1,java.util.BitSet) -> <init>
    1610:1611:boolean contains(java.lang.Object) -> contains
    1616:1616:java.util.Iterator iterator() -> iterator
    1632:1632:int size() -> size
com.google.common.collect.Sets$5$1$1$1 -> com.google.common.collect.Sets$5$1$1$1:
    1616:1617:void <init>(com.google.common.collect.Sets$5$1$1) -> <init>
    1621:1625:java.lang.Object computeNext() -> computeNext
com.google.common.collect.Sets$CartesianSet -> com.google.common.collect.Sets$CartesianSet:
    1330:1332:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.CartesianList) -> <init>
    1342:1351:boolean contains(java.lang.Object) -> contains
    1301:1327:java.util.Set create(java.util.List) -> create
    1295:1295:java.lang.Object delegate() -> delegate
    1337:1337:java.util.Collection delegate() -> delegate
    1363:1367:boolean equals(java.lang.Object) -> equals
    1376:1384:int hashCode() -> hashCode
com.google.common.collect.Sets$CartesianSet$1 -> com.google.common.collect.Sets$CartesianSet$1:
    1311:1311:void <init>(com.google.common.collect.ImmutableList) -> <init>
    1311:1311:java.lang.Object get(int) -> get
    1319:1319:java.util.List get(int) -> get
    1314:1314:int size() -> size
com.google.common.collect.Sets$DescendingSet -> com.google.common.collect.Sets$DescendingSet:
    1864:1865:void <init>(java.util.NavigableSet) -> <init>
    1885:1885:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1947:1951:java.util.Comparator comparator() -> comparator
    1860:1860:java.lang.Object delegate() -> delegate
    1860:1860:java.util.Collection delegate() -> delegate
    1860:1860:java.util.Set delegate() -> delegate
    1860:1860:java.util.SortedSet delegate() -> delegate
    1870:1870:java.util.NavigableSet delegate() -> delegate
    1910:1910:java.util.Iterator descendingIterator() -> descendingIterator
    1905:1905:java.util.NavigableSet descendingSet() -> descendingSet
    1962:1962:java.lang.Object first() -> first
    1880:1880:java.lang.Object floor(java.lang.Object) -> floor
    1926:1926:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1931:1931:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1890:1890:java.lang.Object higher(java.lang.Object) -> higher
    1972:1972:java.util.Iterator iterator() -> iterator
    1967:1967:java.lang.Object last() -> last
    1875:1875:java.lang.Object lower(java.lang.Object) -> lower
    1895:1895:java.lang.Object pollFirst() -> pollFirst
    1900:1900:java.lang.Object pollLast() -> pollLast
    1957:1957:com.google.common.collect.Ordering reverse(java.util.Comparator) -> reverse
    1916:1916:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1921:1921:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1936:1936:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1941:1941:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1977:1977:java.lang.Object[] toArray() -> toArray
    1982:1982:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    1987:1987:java.lang.String toString() -> toString
com.google.common.collect.Sets$FilteredNavigableSet -> com.google.common.collect.Sets$FilteredNavigableSet:
    1108:1108:void <init>(java.util.NavigableSet,com.google.common.base.Predicate) -> <init>
    1129:1129:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1154:1154:java.util.Iterator descendingIterator() -> descendingIterator
    1149:1149:java.util.NavigableSet descendingSet() -> descendingSet
    1124:1124:java.lang.Object floor(java.lang.Object) -> floor
    1171:1171:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1134:1134:java.lang.Object higher(java.lang.Object) -> higher
    1159:1159:java.lang.Object last() -> last
    1118:1118:java.lang.Object lower(java.lang.Object) -> lower
    1139:1139:java.lang.Object pollFirst() -> pollFirst
    1144:1144:java.lang.Object pollLast() -> pollLast
    1165:1166:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1176:1176:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1112:1112:java.util.NavigableSet unfiltered() -> unfiltered
com.google.common.collect.Sets$FilteredSet -> com.google.common.collect.Sets$FilteredSet:
    1045:1045:void <init>(java.util.Set,com.google.common.base.Predicate) -> <init>
    1050:1050:boolean equals(java.lang.Object) -> equals
    1055:1055:int hashCode() -> hashCode
com.google.common.collect.Sets$FilteredSortedSet -> com.google.common.collect.Sets$FilteredSortedSet:
    1062:1062:void <init>(java.util.SortedSet,com.google.common.base.Predicate) -> <init>
    1067:1067:java.util.Comparator comparator() -> comparator
    1088:1088:java.lang.Object first() -> first
    1078:1078:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1093:1099:java.lang.Object last() -> last
    1072:1073:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1083:1083:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Sets$ImprovedAbstractSet -> com.google.common.collect.Sets$ImprovedAbstractSet:
    73:73:void <init>() -> <init>
    76:76:boolean removeAll(java.util.Collection) -> removeAll
    81:81:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Sets$PowerSet -> com.google.common.collect.Sets$PowerSet:
    1469:1472:void <init>(java.util.Set) -> <init>
    1497:1499:boolean contains(java.lang.Object) -> contains
    1506:1510:boolean equals(java.lang.Object) -> equals
    1520:1520:int hashCode() -> hashCode
    1487:1487:java.util.Iterator iterator() -> iterator
    1477:1477:int size() -> size
    1525:1525:java.lang.String toString() -> toString
com.google.common.collect.Sets$PowerSet$1 -> com.google.common.collect.Sets$PowerSet$1:
    1487:1487:void <init>(com.google.common.collect.Sets$PowerSet,int) -> <init>
    1487:1487:java.lang.Object get(int) -> get
    1490:1490:java.util.Set get(int) -> get
com.google.common.collect.Sets$SetView -> com.google.common.collect.Sets$SetView:
    535:535:void <init>(com.google.common.collect.Sets$1) -> <init>
    536:536:void <init>() -> <init>
    575:575:boolean add(java.lang.Object) -> add
    601:601:boolean addAll(java.util.Collection) -> addAll
    639:639:void clear() -> clear
    561:561:java.util.Set copyInto(java.util.Set) -> copyInto
    547:547:com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
    535:535:java.util.Iterator iterator() -> iterator
    588:588:boolean remove(java.lang.Object) -> remove
    614:614:boolean removeAll(java.util.Collection) -> removeAll
    627:627:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Sets$SubSet -> com.google.common.collect.Sets$SubSet:
    1426:1428:void <init>(com.google.common.collect.ImmutableMap,int) -> <init>
    1422:1422:com.google.common.collect.ImmutableMap access$100(com.google.common.collect.Sets$SubSet) -> access$100
    1422:1422:int access$200(com.google.common.collect.Sets$SubSet) -> access$200
    1461:1462:boolean contains(java.lang.Object) -> contains
    1433:1433:java.util.Iterator iterator() -> iterator
    1456:1456:int size() -> size
com.google.common.collect.Sets$SubSet$1 -> com.google.common.collect.Sets$SubSet$1:
    1433:1435:void <init>(com.google.common.collect.Sets$SubSet) -> <init>
    1439:1439:boolean hasNext() -> hasNext
    1444:1449:java.lang.Object next() -> next
com.google.common.collect.Sets$UnmodifiableNavigableSet -> com.google.common.collect.Sets$UnmodifiableNavigableSet:
    1705:1707:void <init>(java.util.NavigableSet) -> <init>
    1727:1727:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1700:1700:java.lang.Object delegate() -> delegate
    1700:1700:java.util.Collection delegate() -> delegate
    1700:1700:java.util.Set delegate() -> delegate
    1712:1712:java.util.SortedSet delegate() -> delegate
    1759:1759:java.util.Iterator descendingIterator() -> descendingIterator
    1749:1752:java.util.NavigableSet descendingSet() -> descendingSet
    1722:1722:java.lang.Object floor(java.lang.Object) -> floor
    1771:1771:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1732:1732:java.lang.Object higher(java.lang.Object) -> higher
    1717:1717:java.lang.Object lower(java.lang.Object) -> lower
    1737:1737:java.lang.Object pollFirst() -> pollFirst
    1742:1742:java.lang.Object pollLast() -> pollLast
    1765:1766:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1776:1776:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.SingletonImmutableSet -> com.google.common.collect.SingletonImmutableSet:
    43:44:void <init>(java.lang.Object) -> <init>
    47:50:void <init>(java.lang.Object,int) -> <init>
    60:60:boolean contains(java.lang.Object) -> contains
    80:80:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    70:70:com.google.common.collect.ImmutableList createAsList() -> createAsList
    87:89:int hashCode() -> hashCode
    96:96:boolean isHashCodeFast() -> isHashCodeFast
    29:29:java.util.Iterator iterator() -> iterator
    65:65:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    101:101:java.lang.String toString() -> toString
com.google.common.collect.SingletonImmutableTable -> com.google.common.collect.SingletonImmutableTable:
    35:38:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    42:42:void <init>(com.google.common.collect.Table$Cell) -> <init>
    29:29:java.util.Map column(java.lang.Object) -> column
    47:50:com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    29:29:java.util.Map columnMap() -> columnMap
    55:55:com.google.common.collect.ImmutableMap columnMap() -> columnMap
    29:29:java.util.Set createCellSet() -> createCellSet
    70:70:com.google.common.collect.ImmutableSet createCellSet() -> createCellSet
    80:80:com.google.common.collect.ImmutableTable$SerializedForm createSerializedForm() -> createSerializedForm
    29:29:java.util.Collection createValues() -> createValues
    75:75:com.google.common.collect.ImmutableCollection createValues() -> createValues
    29:29:java.util.Map rowMap() -> rowMap
    60:60:com.google.common.collect.ImmutableMap rowMap() -> rowMap
com.google.common.collect.SortedIterables -> com.google.common.collect.SortedIterables:
    30:30:void <init>() -> <init>
    53:55:java.util.Comparator comparator(java.util.SortedSet) -> comparator
    37:47:boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> hasSameComparator
com.google.common.collect.SortedLists -> com.google.common.collect.SortedLists:
    39:39:void <init>() -> <init>
    186:187:int binarySearch(java.util.List,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> binarySearch
    202:203:int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> binarySearch
    220:221:int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> binarySearch
    253:278:int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> binarySearch
com.google.common.collect.SortedLists$KeyAbsentBehavior -> com.google.common.collect.SortedLists$KeyAbsentBehavior:
    131:164:void <clinit>() -> <clinit>
    131:131:void <init>(java.lang.String,int) -> <init>
    131:131:void <init>(java.lang.String,int,com.google.common.collect.SortedLists$1) -> <init>
    131:131:com.google.common.collect.SortedLists$KeyAbsentBehavior valueOf(java.lang.String) -> valueOf
    131:131:com.google.common.collect.SortedLists$KeyAbsentBehavior[] values() -> values
com.google.common.collect.SortedLists$KeyAbsentBehavior$1 -> com.google.common.collect.SortedLists$KeyAbsentBehavior$1:
    136:136:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.SortedLists$KeyAbsentBehavior$2 -> com.google.common.collect.SortedLists$KeyAbsentBehavior$2:
    146:146:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.SortedLists$KeyAbsentBehavior$3 -> com.google.common.collect.SortedLists$KeyAbsentBehavior$3:
    164:164:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.SortedLists$KeyPresentBehavior -> com.google.common.collect.SortedLists$KeyPresentBehavior:
    44:116:void <clinit>() -> <clinit>
    44:44:void <init>(java.lang.String,int) -> <init>
    44:44:void <init>(java.lang.String,int,com.google.common.collect.SortedLists$1) -> <init>
    44:44:com.google.common.collect.SortedLists$KeyPresentBehavior valueOf(java.lang.String) -> valueOf
    44:44:com.google.common.collect.SortedLists$KeyPresentBehavior[] values() -> values
com.google.common.collect.SortedLists$KeyPresentBehavior$1 -> com.google.common.collect.SortedLists$KeyPresentBehavior$1:
    49:49:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.SortedLists$KeyPresentBehavior$2 -> com.google.common.collect.SortedLists$KeyPresentBehavior$2:
    57:57:void <init>(java.lang.String,int) -> <init>
    64:68:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$3 -> com.google.common.collect.SortedLists$KeyPresentBehavior$3:
    79:79:void <init>(java.lang.String,int) -> <init>
    91:91:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$4 -> com.google.common.collect.SortedLists$KeyPresentBehavior$4:
    105:105:void <init>(java.lang.String,int) -> <init>
    109:109:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedLists$KeyPresentBehavior$5 -> com.google.common.collect.SortedLists$KeyPresentBehavior$5:
    116:116:void <init>(java.lang.String,int) -> <init>
    120:120:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> resultIndex
com.google.common.collect.SortedMapDifference$-CC -> com.google.common.collect.SortedMapDifference$-CC:
    28:28:java.util.Map com.google.common.collect.SortedMapDifference.entriesDiffering() -> $default$entriesDiffering
    28:28:java.util.Map com.google.common.collect.SortedMapDifference.entriesInCommon() -> $default$entriesInCommon
    28:28:java.util.Map com.google.common.collect.SortedMapDifference.entriesOnlyOnLeft() -> $default$entriesOnlyOnLeft
    28:28:java.util.Map com.google.common.collect.SortedMapDifference.entriesOnlyOnRight() -> $default$entriesOnlyOnRight
com.google.common.collect.SortedMultiset$-CC -> com.google.common.collect.SortedMultiset$-CC:
    44:44:java.util.Set com.google.common.collect.SortedMultiset.elementSet() -> $default$elementSet
    44:44:java.util.SortedSet com.google.common.collect.SortedMultiset.elementSet() -> $default$elementSet
com.google.common.collect.SortedMultisetBridge$-CC -> com.google.common.collect.SortedMultisetBridge$-CC:
    29:29:java.util.Set com.google.common.collect.SortedMultisetBridge.elementSet() -> $default$elementSet
com.google.common.collect.SortedMultisets -> com.google.common.collect.SortedMultisets:
    40:40:void <init>() -> <init>
    39:39:java.lang.Object access$000(com.google.common.collect.Multiset$Entry) -> access$000
    39:39:java.lang.Object access$100(com.google.common.collect.Multiset$Entry) -> access$100
    169:169:java.lang.Object getElementOrNull(com.google.common.collect.Multiset$Entry) -> getElementOrNull
    163:165:java.lang.Object getElementOrThrow(com.google.common.collect.Multiset$Entry) -> getElementOrThrow
com.google.common.collect.SortedMultisets$ElementSet -> com.google.common.collect.SortedMultisets$ElementSet:
    46:47:void <init>(com.google.common.collect.SortedMultiset) -> <init>
    62:62:java.util.Comparator comparator() -> comparator
    82:82:java.lang.Object first() -> first
    72:72:java.util.SortedSet headSet(java.lang.Object) -> headSet
    57:57:java.util.Iterator iterator() -> iterator
    87:87:java.lang.Object last() -> last
    43:43:com.google.common.collect.Multiset multiset() -> multiset
    52:52:com.google.common.collect.SortedMultiset multiset() -> multiset
    67:67:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    77:77:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.SortedMultisets$NavigableElementSet -> com.google.common.collect.SortedMultisets$NavigableElementSet:
    95:95:void <init>(com.google.common.collect.SortedMultiset) -> <init>
    110:110:java.lang.Object ceiling(java.lang.Object) -> ceiling
    125:125:java.util.Iterator descendingIterator() -> descendingIterator
    120:120:java.util.NavigableSet descendingSet() -> descendingSet
    105:105:java.lang.Object floor(java.lang.Object) -> floor
    150:151:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    115:115:java.lang.Object higher(java.lang.Object) -> higher
    100:100:java.lang.Object lower(java.lang.Object) -> lower
    130:130:java.lang.Object pollFirst() -> pollFirst
    135:135:java.lang.Object pollLast() -> pollLast
    141:145:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    156:157:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.SortedSetMultimap$-CC -> com.google.common.collect.SortedSetMultimap$-CC:
    47:47:java.util.Collection com.google.common.collect.SortedSetMultimap.get(java.lang.Object) -> $default$get
    47:47:java.util.Set com.google.common.collect.SortedSetMultimap.get(java.lang.Object) -> $default$get
    47:47:java.util.Collection com.google.common.collect.SortedSetMultimap.removeAll(java.lang.Object) -> $default$removeAll
    47:47:java.util.Set com.google.common.collect.SortedSetMultimap.removeAll(java.lang.Object) -> $default$removeAll
    47:47:java.util.Collection com.google.common.collect.SortedSetMultimap.replaceValues(java.lang.Object,java.lang.Iterable) -> $default$replaceValues
    47:47:java.util.Set com.google.common.collect.SortedSetMultimap.replaceValues(java.lang.Object,java.lang.Iterable) -> $default$replaceValues
com.google.common.collect.SparseImmutableTable -> com.google.common.collect.SparseImmutableTable:
    27:29:void <clinit>() -> <clinit>
    46:85:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableSet) -> <init>
    24:24:java.util.Map columnMap() -> columnMap
    91:92:com.google.common.collect.ImmutableMap columnMap() -> columnMap
    127:133:com.google.common.collect.ImmutableTable$SerializedForm createSerializedForm() -> createSerializedForm
    109:114:com.google.common.collect.Table$Cell getCell(int) -> getCell
    119:122:java.lang.Object getValue(int) -> getValue
    24:24:java.util.Map rowMap() -> rowMap
    98:99:com.google.common.collect.ImmutableMap rowMap() -> rowMap
    104:104:int size() -> size
com.google.common.collect.StandardRowSortedTable -> com.google.common.collect.StandardRowSortedTable:
    58:58:void <init>(java.util.SortedMap,com.google.common.base.Supplier) -> <init>
    48:48:java.util.SortedMap access$100(com.google.common.collect.StandardRowSortedTable) -> access$100
    47:47:java.util.Map createRowMap() -> createRowMap
    89:89:java.util.SortedMap createRowMap() -> createRowMap
    47:47:java.util.Set rowKeySet() -> rowKeySet
    73:73:java.util.SortedSet rowKeySet() -> rowKeySet
    47:47:java.util.Map rowMap() -> rowMap
    84:84:java.util.SortedMap rowMap() -> rowMap
    62:62:java.util.SortedMap sortedBackingMap() -> sortedBackingMap
com.google.common.collect.StandardRowSortedTable$RowSortedMap -> com.google.common.collect.StandardRowSortedTable$RowSortedMap:
    93:93:void <init>(com.google.common.collect.StandardRowSortedTable) -> <init>
    93:93:void <init>(com.google.common.collect.StandardRowSortedTable,com.google.common.collect.StandardRowSortedTable$1) -> <init>
    106:106:java.util.Comparator comparator() -> comparator
    92:92:java.util.Set createKeySet() -> createKeySet
    101:101:java.util.SortedSet createKeySet() -> createKeySet
    111:111:java.lang.Object firstKey() -> firstKey
    121:123:java.util.SortedMap headMap(java.lang.Object) -> headMap
    92:92:java.util.Set keySet() -> keySet
    96:96:java.util.SortedSet keySet() -> keySet
    116:116:java.lang.Object lastKey() -> lastKey
    128:131:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    136:138:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.StandardTable -> com.google.common.collect.StandardTable:
    69:71:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    65:65:boolean access$300(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> access$300
    65:65:boolean access$400(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> access$400
    65:65:java.util.Map access$900(com.google.common.collect.StandardTable,java.lang.Object) -> access$900
    230:230:java.util.Iterator cellIterator() -> cellIterator
    225:225:java.util.Set cellSet() -> cellSet
    127:127:void clear() -> clear
    397:397:java.util.Map column(java.lang.Object) -> column
    608:609:java.util.Set columnKeySet() -> columnKeySet
    809:810:java.util.Map columnMap() -> columnMap
    78:78:boolean contains(java.lang.Object,java.lang.Object) -> contains
    86:87:boolean containsColumn(java.lang.Object) -> containsColumn
    183:183:boolean containsMapping(java.lang.Object,java.lang.Object,java.lang.Object) -> containsMapping
    96:96:boolean containsRow(java.lang.Object) -> containsRow
    101:101:boolean containsValue(java.lang.Object) -> containsValue
    687:687:java.util.Iterator createColumnKeyIterator() -> createColumnKeyIterator
    735:735:java.util.Map createRowMap() -> createRowMap
    106:106:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    131:134:java.util.Map getOrCreate(java.lang.Object) -> getOrCreate
    111:111:boolean isEmpty() -> isEmpty
    142:145:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    154:160:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    167:175:java.util.Map removeColumn(java.lang.Object) -> removeColumn
    188:189:boolean removeMapping(java.lang.Object,java.lang.Object,java.lang.Object) -> removeMapping
    265:265:java.util.Map row(java.lang.Object) -> row
    593:593:java.util.Set rowKeySet() -> rowKeySet
    730:731:java.util.Map rowMap() -> rowMap
    117:118:int size() -> size
    723:723:java.util.Collection values() -> values
com.google.common.collect.StandardTable$CellIterator -> com.google.common.collect.StandardTable$CellIterator:
    233:236:void <init>(com.google.common.collect.StandardTable) -> <init>
    233:233:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
    240:240:boolean hasNext() -> hasNext
    233:233:java.lang.Object next() -> next
    245:250:com.google.common.collect.Table$Cell next() -> next
    255:258:void remove() -> remove
com.google.common.collect.StandardTable$Column -> com.google.common.collect.StandardTable$Column:
    403:404:void <init>(com.google.common.collect.StandardTable,java.lang.Object) -> <init>
    419:419:boolean containsKey(java.lang.Object) -> containsKey
    449:449:java.util.Set createEntrySet() -> createEntrySet
    538:538:java.util.Set createKeySet() -> createKeySet
    565:565:java.util.Collection createValues() -> createValues
    414:414:java.lang.Object get(java.lang.Object) -> get
    409:409:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    424:424:java.lang.Object remove(java.lang.Object) -> remove
    431:440:boolean removeFromColumnIf(com.google.common.base.Predicate) -> removeFromColumnIf
com.google.common.collect.StandardTable$Column$EntrySet -> com.google.common.collect.StandardTable$Column$EntrySet:
    453:453:void <init>(com.google.common.collect.StandardTable$Column) -> <init>
    453:453:void <init>(com.google.common.collect.StandardTable$Column,com.google.common.collect.StandardTable$1) -> <init>
    477:477:void clear() -> clear
    482:484:boolean contains(java.lang.Object) -> contains
    472:472:boolean isEmpty() -> isEmpty
    456:456:java.util.Iterator iterator() -> iterator
    491:493:boolean remove(java.lang.Object) -> remove
    500:500:boolean retainAll(java.util.Collection) -> retainAll
    462:463:int size() -> size
com.google.common.collect.StandardTable$Column$EntrySetIterator -> com.google.common.collect.StandardTable$Column$EntrySetIterator:
    504:505:void <init>(com.google.common.collect.StandardTable$Column) -> <init>
    504:504:void <init>(com.google.common.collect.StandardTable$Column,com.google.common.collect.StandardTable$1) -> <init>
    504:504:java.lang.Object computeNext() -> computeNext
    509:532:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.StandardTable$Column$EntrySetIterator$1EntryImpl -> com.google.common.collect.StandardTable$Column$EntrySetIterator$1EntryImpl:
    513:513:void <init>(com.google.common.collect.StandardTable$Column$EntrySetIterator,java.util.Map$Entry) -> <init>
    516:516:java.lang.Object getKey() -> getKey
    521:521:java.lang.Object getValue() -> getValue
    526:526:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.StandardTable$Column$KeySet -> com.google.common.collect.StandardTable$Column$KeySet:
    543:544:void <init>(com.google.common.collect.StandardTable$Column) -> <init>
    549:549:boolean contains(java.lang.Object) -> contains
    554:554:boolean remove(java.lang.Object) -> remove
    559:559:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$Values -> com.google.common.collect.StandardTable$Column$Values:
    570:571:void <init>(com.google.common.collect.StandardTable$Column) -> <init>
    576:576:boolean remove(java.lang.Object) -> remove
    581:581:boolean removeAll(java.util.Collection) -> removeAll
    586:586:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$ColumnKeyIterator -> com.google.common.collect.StandardTable$ColumnKeyIterator:
    690:695:void <init>(com.google.common.collect.StandardTable) -> <init>
    690:690:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
    700:709:java.lang.Object computeNext() -> computeNext
com.google.common.collect.StandardTable$ColumnKeySet -> com.google.common.collect.StandardTable$ColumnKeySet:
    613:613:void <init>(com.google.common.collect.StandardTable) -> <init>
    613:613:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
    681:681:boolean contains(java.lang.Object) -> contains
    616:616:java.util.Iterator iterator() -> iterator
    630:636:boolean remove(java.lang.Object) -> remove
    645:655:boolean removeAll(java.util.Collection) -> removeAll
    664:672:boolean retainAll(java.util.Collection) -> retainAll
    621:621:int size() -> size
com.google.common.collect.StandardTable$ColumnMap -> com.google.common.collect.StandardTable$ColumnMap:
    814:814:void <init>(com.google.common.collect.StandardTable) -> <init>
    814:814:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
    825:825:boolean containsKey(java.lang.Object) -> containsKey
    835:835:java.util.Set createEntrySet() -> createEntrySet
    845:845:java.util.Collection createValues() -> createValues
    813:813:java.lang.Object get(java.lang.Object) -> get
    820:820:java.util.Map get(java.lang.Object) -> get
    840:840:java.util.Set keySet() -> keySet
    813:813:java.lang.Object remove(java.lang.Object) -> remove
    830:830:java.util.Map remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet -> com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:
    849:849:void <init>(com.google.common.collect.StandardTable$ColumnMap) -> <init>
    869:876:boolean contains(java.lang.Object) -> contains
    852:853:java.util.Iterator iterator() -> iterator
    884:886:boolean remove(java.lang.Object) -> remove
    900:901:boolean removeAll(java.util.Collection) -> removeAll
    906:910:boolean retainAll(java.util.Collection) -> retainAll
    864:864:int size() -> size
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1 -> com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1:
    854:854:void <init>(com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet) -> <init>
    854:854:java.lang.Object apply(java.lang.Object) -> apply
    857:857:java.util.Map apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues -> com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues:
    920:921:void <init>(com.google.common.collect.StandardTable$ColumnMap) -> <init>
    926:928:boolean remove(java.lang.Object) -> remove
    937:941:boolean removeAll(java.util.Collection) -> removeAll
    950:954:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Row -> com.google.common.collect.StandardTable$Row:
    271:272:void <init>(com.google.common.collect.StandardTable,java.lang.Object) -> <init>
    278:280:java.util.Map backingRowMap() -> backingRowMap
    330:334:void clear() -> clear
    284:284:java.util.Map computeBackingRowMap() -> computeBackingRowMap
    297:298:boolean containsKey(java.lang.Object) -> containsKey
    345:350:java.util.Iterator entryIterator() -> entryIterator
    303:304:java.lang.Object get(java.lang.Object) -> get
    289:291:void maintainEmptyInvariant() -> maintainEmptyInvariant
    309:314:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    319:324:java.lang.Object remove(java.lang.Object) -> remove
    339:340:int size() -> size
    370:370:java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> wrapEntry
com.google.common.collect.StandardTable$Row$1 -> com.google.common.collect.StandardTable$Row$1:
    350:350:void <init>(com.google.common.collect.StandardTable$Row,java.util.Iterator) -> <init>
    353:353:boolean hasNext() -> hasNext
    350:350:java.lang.Object next() -> next
    358:358:java.util.Map$Entry next() -> next
    363:364:void remove() -> remove
com.google.common.collect.StandardTable$Row$2 -> com.google.common.collect.StandardTable$Row$2:
    370:370:void <init>(com.google.common.collect.StandardTable$Row,java.util.Map$Entry) -> <init>
    370:370:java.lang.Object delegate() -> delegate
    373:373:java.util.Map$Entry delegate() -> delegate
    384:384:boolean equals(java.lang.Object) -> equals
    378:378:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.StandardTable$RowMap -> com.google.common.collect.StandardTable$RowMap:
    739:739:void <init>(com.google.common.collect.StandardTable) -> <init>
    742:742:boolean containsKey(java.lang.Object) -> containsKey
    759:759:java.util.Set createEntrySet() -> createEntrySet
    738:738:java.lang.Object get(java.lang.Object) -> get
    749:749:java.util.Map get(java.lang.Object) -> get
    738:738:java.lang.Object remove(java.lang.Object) -> remove
    754:754:java.util.Map remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$RowMap$EntrySet -> com.google.common.collect.StandardTable$RowMap$EntrySet:
    763:763:void <init>(com.google.common.collect.StandardTable$RowMap) -> <init>
    783:787:boolean contains(java.lang.Object) -> contains
    766:767:java.util.Iterator iterator() -> iterator
    794:798:boolean remove(java.lang.Object) -> remove
    778:778:int size() -> size
com.google.common.collect.StandardTable$RowMap$EntrySet$1 -> com.google.common.collect.StandardTable$RowMap$EntrySet$1:
    768:768:void <init>(com.google.common.collect.StandardTable$RowMap$EntrySet) -> <init>
    768:768:java.lang.Object apply(java.lang.Object) -> apply
    771:771:java.util.Map apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$TableSet -> com.google.common.collect.StandardTable$TableSet:
    202:202:void <init>(com.google.common.collect.StandardTable) -> <init>
    202:202:void <init>(com.google.common.collect.StandardTable,com.google.common.collect.StandardTable$1) -> <init>
    210:210:void clear() -> clear
    205:205:boolean isEmpty() -> isEmpty
com.google.common.collect.Synchronized -> com.google.common.collect.Synchronized:
    59:59:void <init>() -> <init>
    58:58:java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object) -> access$100
    58:58:java.util.List access$200(java.util.List,java.lang.Object) -> access$200
    58:58:java.util.Set access$300(java.util.Set,java.lang.Object) -> access$300
    58:58:java.util.Collection access$400(java.util.Collection,java.lang.Object) -> access$400
    58:58:java.util.Collection access$500(java.util.Collection,java.lang.Object) -> access$500
    58:58:java.util.Map$Entry access$700(java.util.Map$Entry,java.lang.Object) -> access$700
    1153:1156:com.google.common.collect.BiMap biMap(com.google.common.collect.BiMap,java.lang.Object) -> biMap
    101:101:java.util.Collection collection(java.util.Collection,java.lang.Object) -> collection
    1700:1700:java.util.Deque deque(java.util.Deque,java.lang.Object) -> deque
    304:306:java.util.List list(java.util.List,java.lang.Object) -> list
    698:701:com.google.common.collect.ListMultimap listMultimap(com.google.common.collect.ListMultimap,java.lang.Object) -> listMultimap
    960:960:java.util.Map map(java.util.Map,java.lang.Object) -> map
    511:514:com.google.common.collect.Multimap multimap(com.google.common.collect.Multimap,java.lang.Object) -> multimap
    415:418:com.google.common.collect.Multiset multiset(com.google.common.collect.Multiset,java.lang.Object) -> multiset
    1398:1398:java.util.NavigableMap navigableMap(java.util.NavigableMap) -> navigableMap
    1404:1404:java.util.NavigableMap navigableMap(java.util.NavigableMap,java.lang.Object) -> navigableMap
    1388:1388:java.util.NavigableSet navigableSet(java.util.NavigableSet,java.lang.Object) -> navigableSet
    1393:1393:java.util.NavigableSet navigableSet(java.util.NavigableSet) -> navigableSet
    1592:1592:java.util.Map$Entry nullableSynchronizedEntry(java.util.Map$Entry,java.lang.Object) -> nullableSynchronizedEntry
    1647:1647:java.util.Queue queue(java.util.Queue,java.lang.Object) -> queue
    210:210:java.util.Set set(java.util.Set,java.lang.Object) -> set
    741:744:com.google.common.collect.SetMultimap setMultimap(com.google.common.collect.SetMultimap,java.lang.Object) -> setMultimap
    1092:1092:java.util.SortedMap sortedMap(java.util.SortedMap,java.lang.Object) -> sortedMap
    245:245:java.util.SortedSet sortedSet(java.util.SortedSet,java.lang.Object) -> sortedSet
    796:799:com.google.common.collect.SortedSetMultimap sortedSetMultimap(com.google.common.collect.SortedSetMultimap,java.lang.Object) -> sortedSetMultimap
    1837:1837:com.google.common.collect.Table table(com.google.common.collect.Table,java.lang.Object) -> table
    846:855:java.util.Collection typePreservingCollection(java.util.Collection,java.lang.Object) -> typePreservingCollection
    859:862:java.util.Set typePreservingSet(java.util.Set,java.lang.Object) -> typePreservingSet
com.google.common.collect.Synchronized$SynchronizedAsMap -> com.google.common.collect.Synchronized$SynchronizedAsMap:
    1211:1211:void <init>(java.util.Map,java.lang.Object) -> <init>
    1245:1245:boolean containsValue(java.lang.Object) -> containsValue
    1224:1229:java.util.Set entrySet() -> entrySet
    1206:1206:java.lang.Object get(java.lang.Object) -> get
    1216:1219:java.util.Collection get(java.lang.Object) -> get
    1234:1239:java.util.Collection values() -> values
com.google.common.collect.Synchronized$SynchronizedAsMapEntries -> com.google.common.collect.Synchronized$SynchronizedAsMapEntries:
    869:869:void <init>(java.util.Set,java.lang.Object) -> <init>
    912:914:boolean contains(java.lang.Object) -> contains
    919:921:boolean containsAll(java.util.Collection) -> containsAll
    929:931:boolean equals(java.lang.Object) -> equals
    875:876:java.util.Iterator iterator() -> iterator
    936:938:boolean remove(java.lang.Object) -> remove
    943:945:boolean removeAll(java.util.Collection) -> removeAll
    950:952:boolean retainAll(java.util.Collection) -> retainAll
    898:900:java.lang.Object[] toArray() -> toArray
    905:907:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1 -> com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1:
    876:876:void <init>(com.google.common.collect.Synchronized$SynchronizedAsMapEntries,java.util.Iterator) -> <init>
    876:876:java.lang.Object transform(java.lang.Object) -> transform
    879:879:java.util.Map$Entry transform(java.util.Map$Entry) -> transform
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1 -> com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1:
    879:879:void <init>(com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1,java.util.Map$Entry) -> <init>
    879:879:java.lang.Object delegate() -> delegate
    882:882:java.util.Map$Entry delegate() -> delegate
    879:879:java.lang.Object getValue() -> getValue
    887:887:java.util.Collection getValue() -> getValue
com.google.common.collect.Synchronized$SynchronizedAsMapValues -> com.google.common.collect.Synchronized$SynchronizedAsMapValues:
    1253:1253:void <init>(java.util.Collection,java.lang.Object) -> <init>
    1259:1259:java.util.Iterator iterator() -> iterator
com.google.common.collect.Synchronized$SynchronizedAsMapValues$1 -> com.google.common.collect.Synchronized$SynchronizedAsMapValues$1:
    1259:1259:void <init>(com.google.common.collect.Synchronized$SynchronizedAsMapValues,java.util.Iterator) -> <init>
    1259:1259:java.lang.Object transform(java.lang.Object) -> transform
    1262:1262:java.util.Collection transform(java.util.Collection) -> transform
com.google.common.collect.Synchronized$SynchronizedBiMap -> com.google.common.collect.Synchronized$SynchronizedBiMap:
    1160:1160:void <init>(com.google.common.collect.BiMap,java.lang.Object,com.google.common.collect.BiMap,com.google.common.collect.Synchronized$1) -> <init>
    1167:1168:void <init>(com.google.common.collect.BiMap,java.lang.Object,com.google.common.collect.BiMap) -> <init>
    1159:1159:java.lang.Object delegate() -> delegate
    1159:1159:java.util.Map delegate() -> delegate
    1173:1173:com.google.common.collect.BiMap delegate() -> delegate
    1188:1190:java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    1195:1200:com.google.common.collect.BiMap inverse() -> inverse
    1159:1159:java.util.Collection values() -> values
    1178:1183:java.util.Set values() -> values
com.google.common.collect.Synchronized$SynchronizedCollection -> com.google.common.collect.Synchronized$SynchronizedCollection:
    105:105:void <init>(java.util.Collection,java.lang.Object,com.google.common.collect.Synchronized$1) -> <init>
    107:107:void <init>(java.util.Collection,java.lang.Object) -> <init>
    118:120:boolean add(java.lang.Object) -> add
    125:127:boolean addAll(java.util.Collection) -> addAll
    132:134:void clear() -> clear
    139:141:boolean contains(java.lang.Object) -> contains
    146:148:boolean containsAll(java.util.Collection) -> containsAll
    104:104:java.lang.Object delegate() -> delegate
    113:113:java.util.Collection delegate() -> delegate
    153:155:boolean isEmpty() -> isEmpty
    160:160:java.util.Iterator iterator() -> iterator
    165:167:boolean remove(java.lang.Object) -> remove
    172:174:boolean removeAll(java.util.Collection) -> removeAll
    179:181:boolean retainAll(java.util.Collection) -> retainAll
    186:188:int size() -> size
    193:195:java.lang.Object[] toArray() -> toArray
    200:202:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Synchronized$SynchronizedDeque -> com.google.common.collect.Synchronized$SynchronizedDeque:
    1706:1706:void <init>(java.util.Deque,java.lang.Object) -> <init>
    1716:1718:void addFirst(java.lang.Object) -> addFirst
    1723:1725:void addLast(java.lang.Object) -> addLast
    1703:1703:java.lang.Object delegate() -> delegate
    1703:1703:java.util.Collection delegate() -> delegate
    1703:1703:java.util.Queue delegate() -> delegate
    1711:1711:java.util.Deque delegate() -> delegate
    1828:1830:java.util.Iterator descendingIterator() -> descendingIterator
    1772:1774:java.lang.Object getFirst() -> getFirst
    1779:1781:java.lang.Object getLast() -> getLast
    1730:1732:boolean offerFirst(java.lang.Object) -> offerFirst
    1737:1739:boolean offerLast(java.lang.Object) -> offerLast
    1786:1788:java.lang.Object peekFirst() -> peekFirst
    1793:1795:java.lang.Object peekLast() -> peekLast
    1758:1760:java.lang.Object pollFirst() -> pollFirst
    1765:1767:java.lang.Object pollLast() -> pollLast
    1821:1823:java.lang.Object pop() -> pop
    1814:1816:void push(java.lang.Object) -> push
    1744:1746:java.lang.Object removeFirst() -> removeFirst
    1800:1802:boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    1751:1753:java.lang.Object removeLast() -> removeLast
    1807:1809:boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
com.google.common.collect.Synchronized$SynchronizedEntry -> com.google.common.collect.Synchronized$SynchronizedEntry:
    1599:1599:void <init>(java.util.Map$Entry,java.lang.Object) -> <init>
    1595:1595:java.lang.Object delegate() -> delegate
    1605:1605:java.util.Map$Entry delegate() -> delegate
    1610:1612:boolean equals(java.lang.Object) -> equals
    1624:1626:java.lang.Object getKey() -> getKey
    1631:1633:java.lang.Object getValue() -> getValue
    1617:1619:int hashCode() -> hashCode
    1638:1640:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Synchronized$SynchronizedList -> com.google.common.collect.Synchronized$SynchronizedList:
    311:311:void <init>(java.util.List,java.lang.Object) -> <init>
    321:323:void add(int,java.lang.Object) -> add
    328:330:boolean addAll(int,java.util.Collection) -> addAll
    309:309:java.lang.Object delegate() -> delegate
    309:309:java.util.Collection delegate() -> delegate
    316:316:java.util.List delegate() -> delegate
    390:392:boolean equals(java.lang.Object) -> equals
    335:337:java.lang.Object get(int) -> get
    397:399:int hashCode() -> hashCode
    342:344:int indexOf(java.lang.Object) -> indexOf
    349:351:int lastIndexOf(java.lang.Object) -> lastIndexOf
    356:356:java.util.ListIterator listIterator() -> listIterator
    361:361:java.util.ListIterator listIterator(int) -> listIterator
    366:368:java.lang.Object remove(int) -> remove
    373:375:java.lang.Object set(int,java.lang.Object) -> set
    380:382:java.util.List subList(int,int) -> subList
com.google.common.collect.Synchronized$SynchronizedListMultimap -> com.google.common.collect.Synchronized$SynchronizedListMultimap:
    707:707:void <init>(com.google.common.collect.ListMultimap,java.lang.Object) -> <init>
    704:704:com.google.common.collect.Multimap delegate() -> delegate
    704:704:java.lang.Object delegate() -> delegate
    712:712:com.google.common.collect.ListMultimap delegate() -> delegate
    704:704:java.util.Collection get(java.lang.Object) -> get
    717:719:java.util.List get(java.lang.Object) -> get
    704:704:java.util.Collection removeAll(java.lang.Object) -> removeAll
    724:726:java.util.List removeAll(java.lang.Object) -> removeAll
    704:704:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    731:733:java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.Synchronized$SynchronizedMap -> com.google.common.collect.Synchronized$SynchronizedMap:
    969:969:void <init>(java.util.Map,java.lang.Object) -> <init>
    980:982:void clear() -> clear
    987:989:boolean containsKey(java.lang.Object) -> containsKey
    994:996:boolean containsValue(java.lang.Object) -> containsValue
    963:963:java.lang.Object delegate() -> delegate
    975:975:java.util.Map delegate() -> delegate
    1001:1006:java.util.Set entrySet() -> entrySet
    1076:1078:boolean equals(java.lang.Object) -> equals
    1011:1013:java.lang.Object get(java.lang.Object) -> get
    1083:1085:int hashCode() -> hashCode
    1018:1020:boolean isEmpty() -> isEmpty
    1025:1030:java.util.Set keySet() -> keySet
    1035:1037:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    1042:1044:void putAll(java.util.Map) -> putAll
    1049:1051:java.lang.Object remove(java.lang.Object) -> remove
    1056:1058:int size() -> size
    1063:1068:java.util.Collection values() -> values
com.google.common.collect.Synchronized$SynchronizedMultimap -> com.google.common.collect.Synchronized$SynchronizedMultimap:
    532:532:void <init>(com.google.common.collect.Multimap,java.lang.Object) -> <init>
    658:663:java.util.Map asMap() -> asMap
    621:623:void clear() -> clear
    565:567:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    551:553:boolean containsKey(java.lang.Object) -> containsKey
    558:560:boolean containsValue(java.lang.Object) -> containsValue
    517:517:java.lang.Object delegate() -> delegate
    528:528:com.google.common.collect.Multimap delegate() -> delegate
    648:653:java.util.Collection entries() -> entries
    681:683:boolean equals(java.lang.Object) -> equals
    572:574:java.util.Collection get(java.lang.Object) -> get
    688:690:int hashCode() -> hashCode
    544:546:boolean isEmpty() -> isEmpty
    628:633:java.util.Set keySet() -> keySet
    668:673:com.google.common.collect.Multiset keys() -> keys
    579:581:boolean put(java.lang.Object,java.lang.Object) -> put
    586:588:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    593:595:boolean putAll(com.google.common.collect.Multimap) -> putAll
    607:609:boolean remove(java.lang.Object,java.lang.Object) -> remove
    614:616:java.util.Collection removeAll(java.lang.Object) -> removeAll
    600:602:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    537:539:int size() -> size
    638:643:java.util.Collection values() -> values
com.google.common.collect.Synchronized$SynchronizedMultiset -> com.google.common.collect.Synchronized$SynchronizedMultiset:
    427:427:void <init>(com.google.common.collect.Multiset,java.lang.Object) -> <init>
    444:446:int add(java.lang.Object,int) -> add
    437:439:int count(java.lang.Object) -> count
    421:421:java.lang.Object delegate() -> delegate
    421:421:java.util.Collection delegate() -> delegate
    432:432:com.google.common.collect.Multiset delegate() -> delegate
    472:477:java.util.Set elementSet() -> elementSet
    482:487:java.util.Set entrySet() -> entrySet
    495:497:boolean equals(java.lang.Object) -> equals
    502:504:int hashCode() -> hashCode
    451:453:int remove(java.lang.Object,int) -> remove
    458:460:int setCount(java.lang.Object,int) -> setCount
    465:467:boolean setCount(java.lang.Object,int,int) -> setCount
com.google.common.collect.Synchronized$SynchronizedNavigableMap -> com.google.common.collect.Synchronized$SynchronizedNavigableMap:
    1413:1413:void <init>(java.util.NavigableMap,java.lang.Object) -> <init>
    1423:1425:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1430:1432:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1407:1407:java.lang.Object delegate() -> delegate
    1407:1407:java.util.Map delegate() -> delegate
    1407:1407:java.util.SortedMap delegate() -> delegate
    1418:1418:java.util.NavigableMap delegate() -> delegate
    1439:1444:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1451:1456:java.util.NavigableMap descendingMap() -> descendingMap
    1461:1463:java.util.Map$Entry firstEntry() -> firstEntry
    1468:1470:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1475:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1482:1484:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1489:1489:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1494:1496:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1501:1503:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1529:1529:java.util.Set keySet() -> keySet
    1508:1510:java.util.Map$Entry lastEntry() -> lastEntry
    1515:1517:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1522:1524:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1536:1541:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1546:1548:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1553:1555:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1561:1563:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1568:1568:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1573:1575:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    1580:1580:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedNavigableSet -> com.google.common.collect.Synchronized$SynchronizedNavigableSet:
    1275:1275:void <init>(java.util.NavigableSet,java.lang.Object) -> <init>
    1285:1287:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1270:1270:java.lang.Object delegate() -> delegate
    1270:1270:java.util.Collection delegate() -> delegate
    1270:1270:java.util.Set delegate() -> delegate
    1270:1270:java.util.SortedSet delegate() -> delegate
    1280:1280:java.util.NavigableSet delegate() -> delegate
    1292:1292:java.util.Iterator descendingIterator() -> descendingIterator
    1299:1306:java.util.NavigableSet descendingSet() -> descendingSet
    1311:1313:java.lang.Object floor(java.lang.Object) -> floor
    1318:1320:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1325:1325:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1330:1332:java.lang.Object higher(java.lang.Object) -> higher
    1337:1339:java.lang.Object lower(java.lang.Object) -> lower
    1344:1346:java.lang.Object pollFirst() -> pollFirst
    1351:1353:java.lang.Object pollLast() -> pollLast
    1359:1362:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1367:1367:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1372:1374:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1379:1379:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Synchronized$SynchronizedObject -> com.google.common.collect.Synchronized$SynchronizedObject:
    65:67:void <init>(java.lang.Object,java.lang.Object) -> <init>
    71:71:java.lang.Object delegate() -> delegate
    78:80:java.lang.String toString() -> toString
    90:92:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Synchronized$SynchronizedQueue -> com.google.common.collect.Synchronized$SynchronizedQueue:
    1653:1653:void <init>(java.util.Queue,java.lang.Object) -> <init>
    1650:1650:java.lang.Object delegate() -> delegate
    1650:1650:java.util.Collection delegate() -> delegate
    1658:1658:java.util.Queue delegate() -> delegate
    1663:1665:java.lang.Object element() -> element
    1670:1672:boolean offer(java.lang.Object) -> offer
    1677:1679:java.lang.Object peek() -> peek
    1684:1686:java.lang.Object poll() -> poll
    1691:1693:java.lang.Object remove() -> remove
com.google.common.collect.Synchronized$SynchronizedRandomAccessList -> com.google.common.collect.Synchronized$SynchronizedRandomAccessList:
    408:408:void <init>(java.util.List,java.lang.Object) -> <init>
com.google.common.collect.Synchronized$SynchronizedSet -> com.google.common.collect.Synchronized$SynchronizedSet:
    216:216:void <init>(java.util.Set,java.lang.Object) -> <init>
    213:213:java.lang.Object delegate() -> delegate
    213:213:java.util.Collection delegate() -> delegate
    221:221:java.util.Set delegate() -> delegate
    229:231:boolean equals(java.lang.Object) -> equals
    236:238:int hashCode() -> hashCode
com.google.common.collect.Synchronized$SynchronizedSetMultimap -> com.google.common.collect.Synchronized$SynchronizedSetMultimap:
    752:752:void <init>(com.google.common.collect.SetMultimap,java.lang.Object) -> <init>
    747:747:com.google.common.collect.Multimap delegate() -> delegate
    747:747:java.lang.Object delegate() -> delegate
    757:757:com.google.common.collect.SetMultimap delegate() -> delegate
    747:747:java.util.Collection entries() -> entries
    783:788:java.util.Set entries() -> entries
    747:747:java.util.Collection get(java.lang.Object) -> get
    762:764:java.util.Set get(java.lang.Object) -> get
    747:747:java.util.Collection removeAll(java.lang.Object) -> removeAll
    769:771:java.util.Set removeAll(java.lang.Object) -> removeAll
    747:747:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    776:778:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.Synchronized$SynchronizedSortedMap -> com.google.common.collect.Synchronized$SynchronizedSortedMap:
    1099:1099:void <init>(java.util.SortedMap,java.lang.Object) -> <init>
    1109:1111:java.util.Comparator comparator() -> comparator
    1095:1095:java.lang.Object delegate() -> delegate
    1095:1095:java.util.Map delegate() -> delegate
    1104:1104:java.util.SortedMap delegate() -> delegate
    1116:1118:java.lang.Object firstKey() -> firstKey
    1123:1125:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1130:1132:java.lang.Object lastKey() -> lastKey
    1137:1139:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1144:1146:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedSortedSet -> com.google.common.collect.Synchronized$SynchronizedSortedSet:
    250:250:void <init>(java.util.SortedSet,java.lang.Object) -> <init>
    260:262:java.util.Comparator comparator() -> comparator
    248:248:java.lang.Object delegate() -> delegate
    248:248:java.util.Collection delegate() -> delegate
    248:248:java.util.Set delegate() -> delegate
    255:255:java.util.SortedSet delegate() -> delegate
    288:290:java.lang.Object first() -> first
    274:276:java.util.SortedSet headSet(java.lang.Object) -> headSet
    295:297:java.lang.Object last() -> last
    267:269:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    281:283:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap -> com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:
    805:805:void <init>(com.google.common.collect.SortedSetMultimap,java.lang.Object) -> <init>
    802:802:com.google.common.collect.Multimap delegate() -> delegate
    802:802:com.google.common.collect.SetMultimap delegate() -> delegate
    802:802:java.lang.Object delegate() -> delegate
    810:810:com.google.common.collect.SortedSetMultimap delegate() -> delegate
    802:802:java.util.Collection get(java.lang.Object) -> get
    802:802:java.util.Set get(java.lang.Object) -> get
    815:817:java.util.SortedSet get(java.lang.Object) -> get
    802:802:java.util.Collection removeAll(java.lang.Object) -> removeAll
    802:802:java.util.Set removeAll(java.lang.Object) -> removeAll
    822:824:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    802:802:java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    802:802:java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    829:831:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    836:838:java.util.Comparator valueComparator() -> valueComparator
com.google.common.collect.Synchronized$SynchronizedTable -> com.google.common.collect.Synchronized$SynchronizedTable:
    1844:1844:void <init>(com.google.common.collect.Table,java.lang.Object) -> <init>
    1946:1948:java.util.Set cellSet() -> cellSet
    1904:1906:void clear() -> clear
    1939:1941:java.util.Map column(java.lang.Object) -> column
    1960:1962:java.util.Set columnKeySet() -> columnKeySet
    1990:2001:java.util.Map columnMap() -> columnMap
    1855:1857:boolean contains(java.lang.Object,java.lang.Object) -> contains
    1869:1871:boolean containsColumn(java.lang.Object) -> containsColumn
    1862:1864:boolean containsRow(java.lang.Object) -> containsRow
    1876:1878:boolean containsValue(java.lang.Object) -> containsValue
    1840:1840:java.lang.Object delegate() -> delegate
    1850:1850:com.google.common.collect.Table delegate() -> delegate
    2016:2018:boolean equals(java.lang.Object) -> equals
    1883:1885:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    2006:2008:int hashCode() -> hashCode
    1890:1892:boolean isEmpty() -> isEmpty
    1911:1913:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    1918:1920:void putAll(com.google.common.collect.Table) -> putAll
    1925:1927:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    1932:1934:java.util.Map row(java.lang.Object) -> row
    1953:1955:java.util.Set rowKeySet() -> rowKeySet
    1974:1985:java.util.Map rowMap() -> rowMap
    1897:1899:int size() -> size
    1967:1969:java.util.Collection values() -> values
com.google.common.collect.Synchronized$SynchronizedTable$1 -> com.google.common.collect.Synchronized$SynchronizedTable$1:
    1978:1978:void <init>(com.google.common.collect.Synchronized$SynchronizedTable) -> <init>
    1978:1978:java.lang.Object apply(java.lang.Object) -> apply
    1981:1981:java.util.Map apply(java.util.Map) -> apply
com.google.common.collect.Synchronized$SynchronizedTable$2 -> com.google.common.collect.Synchronized$SynchronizedTable$2:
    1994:1994:void <init>(com.google.common.collect.Synchronized$SynchronizedTable) -> <init>
    1994:1994:java.lang.Object apply(java.lang.Object) -> apply
    1997:1997:java.util.Map apply(java.util.Map) -> apply
com.google.common.collect.Tables -> com.google.common.collect.Tables:
    587:587:void <clinit>() -> <clinit>
    50:50:void <init>() -> <init>
    49:49:com.google.common.base.Function access$000() -> access$000
    631:633:boolean equalsImpl(com.google.common.collect.Table,java.lang.Object) -> equalsImpl
    63:63:com.google.common.collect.Table$Cell immutableCell(java.lang.Object,java.lang.Object,java.lang.Object) -> immutableCell
    291:294:com.google.common.collect.Table newCustomTable(java.util.Map,com.google.common.base.Supplier) -> newCustomTable
    625:625:com.google.common.collect.Table synchronizedTable(com.google.common.collect.Table) -> synchronizedTable
    321:321:com.google.common.collect.Table transformValues(com.google.common.collect.Table,com.google.common.base.Function) -> transformValues
    137:139:com.google.common.collect.Table transpose(com.google.common.collect.Table) -> transpose
    553:553:com.google.common.collect.RowSortedTable unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable) -> unmodifiableRowSortedTable
    451:451:com.google.common.collect.Table unmodifiableTable(com.google.common.collect.Table) -> unmodifiableTable
    584:584:com.google.common.base.Function unmodifiableWrapper() -> unmodifiableWrapper
com.google.common.collect.Tables$1 -> com.google.common.collect.Tables$1:
    588:588:void <init>() -> <init>
    588:588:java.lang.Object apply(java.lang.Object) -> apply
    591:591:java.util.Map apply(java.util.Map) -> apply
com.google.common.collect.Tables$AbstractCell -> com.google.common.collect.Tables$AbstractCell:
    97:97:void <init>() -> <init>
    104:108:boolean equals(java.lang.Object) -> equals
    115:115:int hashCode() -> hashCode
    120:120:java.lang.String toString() -> toString
com.google.common.collect.Tables$ImmutableCell -> com.google.common.collect.Tables$ImmutableCell:
    71:74:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    84:84:java.lang.Object getColumnKey() -> getColumnKey
    79:79:java.lang.Object getRowKey() -> getRowKey
    89:89:java.lang.Object getValue() -> getValue
com.google.common.collect.Tables$TransformedTable -> com.google.common.collect.Tables$TransformedTable:
    328:330:void <init>(com.google.common.collect.Table,com.google.common.base.Function) -> <init>
    383:383:com.google.common.base.Function cellFunction() -> cellFunction
    394:394:java.util.Iterator cellIterator() -> cellIterator
    352:352:void clear() -> clear
    379:379:java.util.Map column(java.lang.Object) -> column
    404:404:java.util.Set columnKeySet() -> columnKeySet
    426:433:java.util.Map columnMap() -> columnMap
    335:335:boolean contains(java.lang.Object,java.lang.Object) -> contains
    409:409:java.util.Collection createValues() -> createValues
    342:342:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    357:357:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    362:362:void putAll(com.google.common.collect.Table) -> putAll
    367:368:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    374:374:java.util.Map row(java.lang.Object) -> row
    399:399:java.util.Set rowKeySet() -> rowKeySet
    414:421:java.util.Map rowMap() -> rowMap
    347:347:int size() -> size
com.google.common.collect.Tables$TransformedTable$1 -> com.google.common.collect.Tables$TransformedTable$1:
    383:383:void <init>(com.google.common.collect.Tables$TransformedTable) -> <init>
    383:383:java.lang.Object apply(java.lang.Object) -> apply
    386:387:com.google.common.collect.Table$Cell apply(com.google.common.collect.Table$Cell) -> apply
com.google.common.collect.Tables$TransformedTable$2 -> com.google.common.collect.Tables$TransformedTable$2:
    415:415:void <init>(com.google.common.collect.Tables$TransformedTable) -> <init>
    415:415:java.lang.Object apply(java.lang.Object) -> apply
    418:418:java.util.Map apply(java.util.Map) -> apply
com.google.common.collect.Tables$TransformedTable$3 -> com.google.common.collect.Tables$TransformedTable$3:
    427:427:void <init>(com.google.common.collect.Tables$TransformedTable) -> <init>
    427:427:java.lang.Object apply(java.lang.Object) -> apply
    430:430:java.util.Map apply(java.util.Map) -> apply
com.google.common.collect.Tables$TransposeTable -> com.google.common.collect.Tables$TransposeTable:
    235:235:void <clinit>() -> <clinit>
    145:146:void <init>(com.google.common.collect.Table) -> <init>
    246:246:java.util.Iterator cellIterator() -> cellIterator
    151:151:void clear() -> clear
    156:156:java.util.Map column(java.lang.Object) -> column
    161:161:java.util.Set columnKeySet() -> columnKeySet
    166:166:java.util.Map columnMap() -> columnMap
    171:171:boolean contains(java.lang.Object,java.lang.Object) -> contains
    176:176:boolean containsColumn(java.lang.Object) -> containsColumn
    181:181:boolean containsRow(java.lang.Object) -> containsRow
    186:186:boolean containsValue(java.lang.Object) -> containsValue
    191:191:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    196:196:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    201:201:void putAll(com.google.common.collect.Table) -> putAll
    206:206:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    211:211:java.util.Map row(java.lang.Object) -> row
    216:216:java.util.Set rowKeySet() -> rowKeySet
    221:221:java.util.Map rowMap() -> rowMap
    226:226:int size() -> size
    231:231:java.util.Collection values() -> values
com.google.common.collect.Tables$TransposeTable$1 -> com.google.common.collect.Tables$TransposeTable$1:
    236:236:void <init>() -> <init>
    236:236:java.lang.Object apply(java.lang.Object) -> apply
    239:239:com.google.common.collect.Table$Cell apply(com.google.common.collect.Table$Cell) -> apply
com.google.common.collect.Tables$UnmodifiableRowSortedMap -> com.google.common.collect.Tables$UnmodifiableRowSortedMap:
    560:560:void <init>(com.google.common.collect.RowSortedTable) -> <init>
    556:556:com.google.common.collect.Table delegate() -> delegate
    556:556:java.lang.Object delegate() -> delegate
    565:565:com.google.common.collect.RowSortedTable delegate() -> delegate
    556:556:java.util.Set rowKeySet() -> rowKeySet
    576:576:java.util.SortedSet rowKeySet() -> rowKeySet
    556:556:java.util.Map rowMap() -> rowMap
    570:571:java.util.SortedMap rowMap() -> rowMap
com.google.common.collect.Tables$UnmodifiableTable -> com.google.common.collect.Tables$UnmodifiableTable:
    458:459:void <init>(com.google.common.collect.Table) -> <init>
    470:470:java.util.Set cellSet() -> cellSet
    475:475:void clear() -> clear
    480:480:java.util.Map column(java.lang.Object) -> column
    485:485:java.util.Set columnKeySet() -> columnKeySet
    490:491:java.util.Map columnMap() -> columnMap
    454:454:java.lang.Object delegate() -> delegate
    465:465:com.google.common.collect.Table delegate() -> delegate
    496:496:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    501:501:void putAll(com.google.common.collect.Table) -> putAll
    506:506:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    511:511:java.util.Map row(java.lang.Object) -> row
    516:516:java.util.Set rowKeySet() -> rowKeySet
    521:522:java.util.Map rowMap() -> rowMap
    527:527:java.util.Collection values() -> values
com.google.common.collect.TopKSelector -> com.google.common.collect.TopKSelector:
    114:121:void <init>(java.util.Comparator,int) -> <init>
    84:84:com.google.common.collect.TopKSelector greatest(int) -> greatest
    94:94:com.google.common.collect.TopKSelector greatest(int,java.util.Comparator) -> greatest
    63:63:com.google.common.collect.TopKSelector least(int) -> least
    73:73:com.google.common.collect.TopKSelector least(int,java.util.Comparator) -> least
    129:144:void offer(java.lang.Object) -> offer
    229:229:void offerAll(java.lang.Iterable) -> offerAll
    241:242:void offerAll(java.util.Iterator) -> offerAll
    200:211:int partition(int,int,int) -> partition
    216:218:void swap(int,int) -> swap
    255:262:java.util.List topK() -> topK
    155:188:void trim() -> trim
com.google.common.collect.TransformedIterator -> com.google.common.collect.TransformedIterator:
    34:35:void <init>(java.util.Iterator) -> <init>
    42:42:boolean hasNext() -> hasNext
    47:47:java.lang.Object next() -> next
    52:52:void remove() -> remove
com.google.common.collect.TransformedListIterator -> com.google.common.collect.TransformedListIterator:
    33:33:void <init>(java.util.ListIterator) -> <init>
    67:67:void add(java.lang.Object) -> add
    37:37:java.util.ListIterator backingIterator() -> backingIterator
    42:42:boolean hasPrevious() -> hasPrevious
    52:52:int nextIndex() -> nextIndex
    47:47:java.lang.Object previous() -> previous
    57:57:int previousIndex() -> previousIndex
    62:62:void set(java.lang.Object) -> set
com.google.common.collect.TreeBasedTable -> com.google.common.collect.TreeBasedTable:
    124:125:void <init>(java.util.Comparator,java.util.Comparator) -> <init>
    68:68:java.util.Set cellSet() -> cellSet
    68:68:void clear() -> clear
    68:68:java.util.Map column(java.lang.Object) -> column
    151:151:java.util.Comparator columnComparator() -> columnComparator
    68:68:java.util.Set columnKeySet() -> columnKeySet
    68:68:java.util.Map columnMap() -> columnMap
    68:68:boolean contains(java.lang.Object,java.lang.Object) -> contains
    68:68:boolean containsColumn(java.lang.Object) -> containsColumn
    68:68:boolean containsRow(java.lang.Object) -> containsRow
    68:68:boolean containsValue(java.lang.Object) -> containsValue
    96:96:com.google.common.collect.TreeBasedTable create() -> create
    107:109:com.google.common.collect.TreeBasedTable create(java.util.Comparator,java.util.Comparator) -> create
    117:119:com.google.common.collect.TreeBasedTable create(com.google.common.collect.TreeBasedTable) -> create
    315:329:java.util.Iterator createColumnKeyIterator() -> createColumnKeyIterator
    68:68:boolean equals(java.lang.Object) -> equals
    68:68:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    68:68:int hashCode() -> hashCode
    68:68:boolean isEmpty() -> isEmpty
    68:68:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    68:68:void putAll(com.google.common.collect.Table) -> putAll
    68:68:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    68:68:java.util.Map row(java.lang.Object) -> row
    168:168:java.util.SortedMap row(java.lang.Object) -> row
    138:138:java.util.Comparator rowComparator() -> rowComparator
    68:68:java.util.Set rowKeySet() -> rowKeySet
    304:304:java.util.SortedSet rowKeySet() -> rowKeySet
    68:68:java.util.Map rowMap() -> rowMap
    309:309:java.util.SortedMap rowMap() -> rowMap
    68:68:int size() -> size
    68:68:java.lang.String toString() -> toString
    68:68:java.util.Collection values() -> values
com.google.common.collect.TreeBasedTable$1 -> com.google.common.collect.TreeBasedTable$1:
    321:321:void <init>(com.google.common.collect.TreeBasedTable) -> <init>
    321:321:java.lang.Object apply(java.lang.Object) -> apply
    324:324:java.util.Iterator apply(java.util.Map) -> apply
com.google.common.collect.TreeBasedTable$2 -> com.google.common.collect.TreeBasedTable$2:
    329:329:void <init>(com.google.common.collect.TreeBasedTable,java.util.Iterator,java.util.Comparator) -> <init>
    334:346:java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeBasedTable$Factory -> com.google.common.collect.TreeBasedTable$Factory:
    75:76:void <init>(java.util.Comparator) -> <init>
    72:72:java.lang.Object get() -> get
    81:81:java.util.TreeMap get() -> get
com.google.common.collect.TreeBasedTable$TreeRow -> com.google.common.collect.TreeBasedTable$TreeRow:
    176:176:void <init>(com.google.common.collect.TreeBasedTable,java.lang.Object) -> <init>
    179:184:void <init>(com.google.common.collect.TreeBasedTable,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    171:171:java.util.Map backingRowMap() -> backingRowMap
    261:261:java.util.SortedMap backingRowMap() -> backingRowMap
    194:194:java.util.Comparator comparator() -> comparator
    200:201:int compare(java.lang.Object,java.lang.Object) -> compare
    171:171:java.util.Map computeBackingRowMap() -> computeBackingRowMap
    266:272:java.util.SortedMap computeBackingRowMap() -> computeBackingRowMap
    290:290:boolean containsKey(java.lang.Object) -> containsKey
    230:234:java.lang.Object firstKey() -> firstKey
    218:219:java.util.SortedMap headMap(java.lang.Object) -> headMap
    171:171:java.util.Set keySet() -> keySet
    189:189:java.util.SortedSet keySet() -> keySet
    239:243:java.lang.Object lastKey() -> lastKey
    281:284:void maintainEmptyInvariant() -> maintainEmptyInvariant
    295:296:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    205:207:boolean rangeContains(java.lang.Object) -> rangeContains
    212:213:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    224:225:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    253:256:java.util.SortedMap wholeRow() -> wholeRow
com.google.common.collect.TreeMultimap -> com.google.common.collect.TreeMultimap:
    110:112:void <init>(java.util.Comparator,java.util.Comparator) -> <init>
    119:120:void <init>(java.util.Comparator,java.util.Comparator,com.google.common.collect.Multimap) -> <init>
    74:74:java.util.Map asMap() -> asMap
    74:74:java.util.SortedMap asMap() -> asMap
    195:195:java.util.NavigableMap asMap() -> asMap
    74:74:void clear() -> clear
    74:74:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    74:74:boolean containsKey(java.lang.Object) -> containsKey
    74:74:boolean containsValue(java.lang.Object) -> containsValue
    83:83:com.google.common.collect.TreeMultimap create() -> create
    95:95:com.google.common.collect.TreeMultimap create(java.util.Comparator,java.util.Comparator) -> create
    106:106:com.google.common.collect.TreeMultimap create(com.google.common.collect.Multimap) -> create
    125:125:java.util.Map createAsMap() -> createAsMap
    74:74:java.util.Collection createCollection() -> createCollection
    74:74:java.util.Set createCollection() -> createCollection
    137:137:java.util.SortedSet createCollection() -> createCollection
    143:145:java.util.Collection createCollection(java.lang.Object) -> createCollection
    74:74:java.util.Set entries() -> entries
    74:74:boolean equals(java.lang.Object) -> equals
    74:74:java.util.Collection get(java.lang.Object) -> get
    74:74:java.util.Set get(java.lang.Object) -> get
    74:74:java.util.SortedSet get(java.lang.Object) -> get
    167:167:java.util.NavigableSet get(java.lang.Object) -> get
    74:74:int hashCode() -> hashCode
    74:74:boolean isEmpty() -> isEmpty
    155:155:java.util.Comparator keyComparator() -> keyComparator
    74:74:java.util.Set keySet() -> keySet
    74:74:java.util.SortedSet keySet() -> keySet
    181:181:java.util.NavigableSet keySet() -> keySet
    74:74:com.google.common.collect.Multiset keys() -> keys
    74:74:boolean put(java.lang.Object,java.lang.Object) -> put
    74:74:boolean putAll(com.google.common.collect.Multimap) -> putAll
    74:74:boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    213:217:void readObject(java.io.ObjectInputStream) -> readObject
    74:74:boolean remove(java.lang.Object,java.lang.Object) -> remove
    74:74:java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    74:74:java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    74:74:int size() -> size
    74:74:java.lang.String toString() -> toString
    160:160:java.util.Comparator valueComparator() -> valueComparator
    74:74:java.util.Collection values() -> values
    204:207:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.TreeMultiset -> com.google.common.collect.TreeMultiset:
    114:117:void <init>(com.google.common.collect.TreeMultiset$Reference,com.google.common.collect.GeneralRange,com.google.common.collect.TreeMultiset$AvlNode) -> <init>
    121:125:void <init>(java.util.Comparator) -> <init>
    58:58:com.google.common.collect.TreeMultiset$AvlNode access$1200(com.google.common.collect.TreeMultiset) -> access$1200
    58:58:com.google.common.collect.GeneralRange access$1300(com.google.common.collect.TreeMultiset) -> access$1300
    58:58:com.google.common.collect.Multiset$Entry access$1400(com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset$AvlNode) -> access$1400
    58:58:com.google.common.collect.TreeMultiset$AvlNode access$1500(com.google.common.collect.TreeMultiset) -> access$1500
    58:58:com.google.common.collect.TreeMultiset$AvlNode access$1600(com.google.common.collect.TreeMultiset) -> access$1600
    58:58:void access$1700(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$1700
    58:58:void access$1800(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$1800
    248:264:int add(java.lang.Object,int) -> add
    197:212:long aggregateAboveRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode) -> aggregateAboveRange
    174:189:long aggregateBelowRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode) -> aggregateBelowRange
    159:165:long aggregateForEntries(com.google.common.collect.TreeMultiset$Aggregate) -> aggregateForEntries
    339:357:void clear() -> clear
    57:57:java.util.Comparator comparator() -> comparator
    57:57:boolean contains(java.lang.Object) -> contains
    235:239:int count(java.lang.Object) -> count
    73:73:com.google.common.collect.TreeMultiset create() -> create
    90:91:com.google.common.collect.TreeMultiset create(java.util.Comparator) -> create
    104:105:com.google.common.collect.TreeMultiset create(java.lang.Iterable) -> create
    476:476:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    57:57:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    223:223:int distinctElements() -> distinctElements
    227:227:int distinctElements(com.google.common.collect.TreeMultiset$AvlNode) -> distinctElements
    429:429:java.util.Iterator elementIterator() -> elementIterator
    57:57:java.util.NavigableSet elementSet() -> elementSet
    434:434:java.util.Iterator entryIterator() -> entryIterator
    57:57:java.util.Set entrySet() -> entrySet
    57:57:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    383:401:com.google.common.collect.TreeMultiset$AvlNode firstNode() -> firstNode
    523:525:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    57:57:boolean isEmpty() -> isEmpty
    518:518:java.util.Iterator iterator() -> iterator
    57:57:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    406:424:com.google.common.collect.TreeMultiset$AvlNode lastNode() -> lastNode
    57:57:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    57:57:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    1006:1018:void readObject(java.io.ObjectInputStream) -> readObject
    270:288:int remove(java.lang.Object,int) -> remove
    294:310:int setCount(java.lang.Object,int) -> setCount
    316:334:boolean setCount(java.lang.Object,int,int) -> setCount
    218:218:int size() -> size
    57:57:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    978:979:void successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> successor
    983:984:void successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> successor
    531:533:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    362:362:com.google.common.collect.Multiset$Entry wrapEntry(com.google.common.collect.TreeMultiset$AvlNode) -> wrapEntry
    999:1001:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.TreeMultiset$1 -> com.google.common.collect.TreeMultiset$1:
    362:362:void <init>(com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset$AvlNode) -> <init>
    370:372:int getCount() -> getCount
    365:365:java.lang.Object getElement() -> getElement
com.google.common.collect.TreeMultiset$2 -> com.google.common.collect.TreeMultiset$2:
    434:435:void <init>(com.google.common.collect.TreeMultiset) -> <init>
    440:443:boolean hasNext() -> hasNext
    434:434:java.lang.Object next() -> next
    452:460:com.google.common.collect.Multiset$Entry next() -> next
    467:469:void remove() -> remove
com.google.common.collect.TreeMultiset$3 -> com.google.common.collect.TreeMultiset$3:
    476:478:void <init>(com.google.common.collect.TreeMultiset) -> <init>
    482:485:boolean hasNext() -> hasNext
    476:476:java.lang.Object next() -> next
    494:502:com.google.common.collect.Multiset$Entry next() -> next
    509:511:void remove() -> remove
com.google.common.collect.TreeMultiset$4 -> com.google.common.collect.TreeMultiset$4:
    178:178:void <clinit>() -> <clinit>
com.google.common.collect.TreeMultiset$Aggregate -> com.google.common.collect.TreeMultiset$Aggregate:
    129:141:void <clinit>() -> <clinit>
    129:129:void <init>(java.lang.String,int) -> <init>
    129:129:void <init>(java.lang.String,int,com.google.common.collect.TreeMultiset$1) -> <init>
    129:129:com.google.common.collect.TreeMultiset$Aggregate valueOf(java.lang.String) -> valueOf
    129:129:com.google.common.collect.TreeMultiset$Aggregate[] values() -> values
com.google.common.collect.TreeMultiset$Aggregate$1 -> com.google.common.collect.TreeMultiset$Aggregate$1:
    130:130:void <init>(java.lang.String,int) -> <init>
    133:133:int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> nodeAggregate
    138:138:long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> treeAggregate
com.google.common.collect.TreeMultiset$Aggregate$2 -> com.google.common.collect.TreeMultiset$Aggregate$2:
    141:141:void <init>(java.lang.String,int) -> <init>
    149:149:long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> treeAggregate
com.google.common.collect.TreeMultiset$AvlNode -> com.google.common.collect.TreeMultiset$AvlNode:
    571:579:void <init>(java.lang.Object,int) -> <init>
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$1000(com.google.common.collect.TreeMultiset$AvlNode,java.util.Comparator,java.lang.Object) -> access$1000
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$1100(com.google.common.collect.TreeMultiset$AvlNode,java.util.Comparator,java.lang.Object) -> access$1100
    557:557:int access$200(com.google.common.collect.TreeMultiset$AvlNode) -> access$200
    557:557:int access$202(com.google.common.collect.TreeMultiset$AvlNode,int) -> access$202
    557:557:long access$300(com.google.common.collect.TreeMultiset$AvlNode) -> access$300
    557:557:int access$400(com.google.common.collect.TreeMultiset$AvlNode) -> access$400
    557:557:java.lang.Object access$500(com.google.common.collect.TreeMultiset$AvlNode) -> access$500
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$600(com.google.common.collect.TreeMultiset$AvlNode) -> access$600
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$602(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$602
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$700(com.google.common.collect.TreeMultiset$AvlNode) -> access$700
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$702(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$702
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$800(com.google.common.collect.TreeMultiset$AvlNode) -> access$800
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$802(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$802
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$900(com.google.common.collect.TreeMultiset$AvlNode) -> access$900
    557:557:com.google.common.collect.TreeMultiset$AvlNode access$902(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> access$902
    616:652:com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[]) -> add
    603:607:com.google.common.collect.TreeMultiset$AvlNode addLeftChild(java.lang.Object,int) -> addLeftChild
    594:598:com.google.common.collect.TreeMultiset$AvlNode addRightChild(java.lang.Object,int) -> addRightChild
    904:904:int balanceFactor() -> balanceFactor
    941:947:com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object) -> ceiling
    583:589:int count(java.util.Comparator,java.lang.Object) -> count
    821:842:com.google.common.collect.TreeMultiset$AvlNode deleteMe() -> deleteMe
    953:959:com.google.common.collect.TreeMultiset$AvlNode floor(java.util.Comparator,java.lang.Object) -> floor
    968:968:int getCount() -> getCount
    964:964:java.lang.Object getElement() -> getElement
    936:936:int height(com.google.common.collect.TreeMultiset$AvlNode) -> height
    886:898:com.google.common.collect.TreeMultiset$AvlNode rebalance() -> rebalance
    881:882:void recompute() -> recompute
    877:877:void recomputeHeight() -> recomputeHeight
    871:873:void recomputeMultiset() -> recomputeMultiset
    658:703:com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[]) -> remove
    860:866:com.google.common.collect.TreeMultiset$AvlNode removeMax(com.google.common.collect.TreeMultiset$AvlNode) -> removeMax
    848:854:com.google.common.collect.TreeMultiset$AvlNode removeMin(com.google.common.collect.TreeMultiset$AvlNode) -> removeMin
    908:915:com.google.common.collect.TreeMultiset$AvlNode rotateLeft() -> rotateLeft
    920:927:com.google.common.collect.TreeMultiset$AvlNode rotateRight() -> rotateRight
    710:753:com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[]) -> setCount
    763:815:com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int,int[]) -> setCount
    973:973:java.lang.String toString() -> toString
    932:932:long totalCount(com.google.common.collect.TreeMultiset$AvlNode) -> totalCount
com.google.common.collect.TreeMultiset$Reference -> com.google.common.collect.TreeMultiset$Reference:
    537:537:void <init>() -> <init>
    537:537:void <init>(com.google.common.collect.TreeMultiset$1) -> <init>
    546:549:void checkAndSet(java.lang.Object,java.lang.Object) -> checkAndSet
    553:553:void clear() -> clear
    542:542:java.lang.Object get() -> get
com.google.common.collect.TreeRangeMap -> com.google.common.collect.TreeRangeMap:
    305:305:void <clinit>() -> <clinit>
    61:62:void <init>() -> <init>
    53:53:java.util.NavigableMap access$000(com.google.common.collect.TreeRangeMap) -> access$000
    53:53:com.google.common.collect.Range access$100(com.google.common.collect.TreeRangeMap,com.google.common.collect.Range,java.lang.Object) -> access$100
    53:53:com.google.common.collect.RangeMap access$200(com.google.common.collect.TreeRangeMap) -> access$200
    251:251:java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    246:246:java.util.Map asMapOfRanges() -> asMapOfRanges
    176:176:void clear() -> clear
    160:162:com.google.common.collect.Range coalesce(com.google.common.collect.Range,java.lang.Object,java.util.Map$Entry) -> coalesce
    145:151:com.google.common.collect.Range coalescedRange(com.google.common.collect.Range,java.lang.Object) -> coalescedRange
    58:58:com.google.common.collect.TreeRangeMap create() -> create
    302:302:com.google.common.collect.RangeMap emptySubRangeMap() -> emptySubRangeMap
    697:699:boolean equals(java.lang.Object) -> equals
    105:106:java.lang.Object get(java.lang.Comparable) -> get
    112:115:java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    706:706:int hashCode() -> hashCode
    123:126:void put(com.google.common.collect.Range,java.lang.Object) -> put
    169:170:void putAll(com.google.common.collect.RangeMap) -> putAll
    133:139:void putCoalescing(com.google.common.collect.Range,java.lang.Object) -> putCoalescing
    191:191:void putRangeMapEntry(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object) -> putRangeMapEntry
    196:241:void remove(com.google.common.collect.Range) -> remove
    181:187:com.google.common.collect.Range span() -> span
    293:296:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    711:711:java.lang.String toString() -> toString
com.google.common.collect.TreeRangeMap$1 -> com.google.common.collect.TreeRangeMap$1:
    306:306:void <init>() -> <init>
    361:361:java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    356:356:java.util.Map asMapOfRanges() -> asMapOfRanges
    326:327:void put(com.google.common.collect.Range,java.lang.Object) -> put
    340:341:void putAll(com.google.common.collect.RangeMap) -> putAll
    333:334:void putCoalescing(com.google.common.collect.Range,java.lang.Object) -> putCoalescing
    351:351:void remove(com.google.common.collect.Range) -> remove
    321:321:com.google.common.collect.Range span() -> span
    366:366:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
com.google.common.collect.TreeRangeMap$AsMapOfRanges -> com.google.common.collect.TreeRangeMap$AsMapOfRanges:
    259:260:void <init>(com.google.common.collect.TreeRangeMap,java.lang.Iterable) -> <init>
    265:265:boolean containsKey(java.lang.Object) -> containsKey
    287:287:java.util.Iterator entryIterator() -> entryIterator
    270:274:java.lang.Object get(java.lang.Object) -> get
    282:282:int size() -> size
com.google.common.collect.TreeRangeMap$RangeMapEntry -> com.google.common.collect.TreeRangeMap$RangeMapEntry:
    71:71:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object) -> <init>
    74:76:void <init>(com.google.common.collect.Range,java.lang.Object) -> <init>
    90:90:boolean contains(java.lang.Comparable) -> contains
    65:65:java.lang.Object getKey() -> getKey
    81:81:com.google.common.collect.Range getKey() -> getKey
    94:94:com.google.common.collect.Cut getLowerBound() -> getLowerBound
    98:98:com.google.common.collect.Cut getUpperBound() -> getUpperBound
    86:86:java.lang.Object getValue() -> getValue
com.google.common.collect.TreeRangeMap$SubRangeMap -> com.google.common.collect.TreeRangeMap$SubRangeMap:
    375:376:void <init>(com.google.common.collect.TreeRangeMap,com.google.common.collect.Range) -> <init>
    371:371:com.google.common.collect.Range access$300(com.google.common.collect.TreeRangeMap$SubRangeMap) -> access$300
    486:486:java.util.Map asDescendingMapOfRanges() -> asDescendingMapOfRanges
    481:481:java.util.Map asMapOfRanges() -> asMapOfRanges
    460:460:void clear() -> clear
    519:521:boolean equals(java.lang.Object) -> equals
    382:382:java.lang.Object get(java.lang.Comparable) -> get
    388:391:java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    528:528:int hashCode() -> hashCode
    427:429:void put(com.google.common.collect.Range,java.lang.Object) -> put
    446:455:void putAll(com.google.common.collect.RangeMap) -> putAll
    434:441:void putCoalescing(com.google.common.collect.Range,java.lang.Object) -> putCoalescing
    465:466:void remove(com.google.common.collect.Range) -> remove
    400:422:com.google.common.collect.Range span() -> span
    472:475:com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    533:533:java.lang.String toString() -> toString
com.google.common.collect.TreeRangeMap$SubRangeMap$1 -> com.google.common.collect.TreeRangeMap$SubRangeMap$1:
    486:486:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap) -> <init>
    490:499:java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.TreeRangeMap$SubRangeMap$1$1 -> com.google.common.collect.TreeRangeMap$SubRangeMap$1$1:
    499:499:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$1,java.util.Iterator) -> <init>
    499:499:java.lang.Object computeNext() -> computeNext
    503:510:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap:
    536:536:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap) -> <init>
    536:536:boolean access$400(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,com.google.common.base.Predicate) -> access$400
    590:590:void clear() -> clear
    540:540:boolean containsKey(java.lang.Object) -> containsKey
    652:660:java.util.Iterator entryIterator() -> entryIterator
    623:623:java.util.Set entrySet() -> entrySet
    546:567:java.lang.Object get(java.lang.Object) -> get
    608:608:java.util.Set keySet() -> keySet
    578:582:java.lang.Object remove(java.lang.Object) -> remove
    594:603:boolean removeEntryIf(com.google.common.base.Predicate) -> removeEntryIf
    680:680:java.util.Collection values() -> values
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1 -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1:
    608:608:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,java.util.Map) -> <init>
    611:611:boolean remove(java.lang.Object) -> remove
    616:616:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2:
    623:623:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap) -> <init>
    646:646:boolean isEmpty() -> isEmpty
    631:631:java.util.Iterator iterator() -> iterator
    626:626:java.util.Map map() -> map
    636:636:boolean retainAll(java.util.Collection) -> retainAll
    641:641:int size() -> size
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3 -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3:
    660:660:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,java.util.Iterator) -> <init>
    660:660:java.lang.Object computeNext() -> computeNext
    664:673:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$4 -> com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$4:
    680:680:void <init>(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,java.util.Map) -> <init>
    683:683:boolean removeAll(java.util.Collection) -> removeAll
    688:688:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.TreeRangeSet -> com.google.common.collect.TreeRangeSet:
    43:43:void <init>(java.util.NavigableMap,com.google.common.collect.TreeRangeSet$1) -> <init>
    75:76:void <init>(java.util.NavigableMap) -> <init>
    43:43:com.google.common.collect.Range access$600(com.google.common.collect.TreeRangeSet,com.google.common.collect.Range) -> access$600
    176:218:void add(com.google.common.collect.Range) -> add
    41:41:void addAll(com.google.common.collect.RangeSet) -> addAll
    41:41:void addAll(java.lang.Iterable) -> addAll
    90:92:java.util.Set asDescendingSetOfRanges() -> asDescendingSetOfRanges
    84:85:java.util.Set asRanges() -> asRanges
    41:41:void clear() -> clear
    276:277:com.google.common.collect.RangeSet complement() -> complement
    41:41:boolean contains(java.lang.Comparable) -> contains
    50:50:com.google.common.collect.TreeRangeSet create() -> create
    55:56:com.google.common.collect.TreeRangeSet create(com.google.common.collect.RangeSet) -> create
    70:71:com.google.common.collect.TreeRangeSet create(java.lang.Iterable) -> create
    150:152:boolean encloses(com.google.common.collect.Range) -> encloses
    41:41:boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    41:41:boolean enclosesAll(java.lang.Iterable) -> enclosesAll
    41:41:boolean equals(java.lang.Object) -> equals
    135:145:boolean intersects(com.google.common.collect.Range) -> intersects
    41:41:boolean isEmpty() -> isEmpty
    123:126:com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    157:160:com.google.common.collect.Range rangeEnclosing(com.google.common.collect.Range) -> rangeEnclosing
    223:261:void remove(com.google.common.collect.Range) -> remove
    41:41:void removeAll(com.google.common.collect.RangeSet) -> removeAll
    41:41:void removeAll(java.lang.Iterable) -> removeAll
    265:268:void replaceRangeWithSameLowerBound(com.google.common.collect.Range) -> replaceRangeWithSameLowerBound
    166:171:com.google.common.collect.Range span() -> span
    860:860:com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
com.google.common.collect.TreeRangeSet$AsRanges -> com.google.common.collect.TreeRangeSet$AsRanges:
    100:101:void <init>(com.google.common.collect.TreeRangeSet,java.util.Collection) -> <init>
    96:96:java.lang.Object delegate() -> delegate
    106:106:java.util.Collection delegate() -> delegate
    116:116:boolean equals(java.lang.Object) -> equals
    111:111:int hashCode() -> hashCode
com.google.common.collect.TreeRangeSet$Complement -> com.google.common.collect.TreeRangeSet$Complement:
    652:653:void <init>(com.google.common.collect.TreeRangeSet) -> <init>
    658:658:void add(com.google.common.collect.Range) -> add
    673:673:com.google.common.collect.RangeSet complement() -> complement
    668:668:boolean contains(java.lang.Comparable) -> contains
    663:663:void remove(com.google.common.collect.Range) -> remove
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound -> com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound:
    459:459:void <init>(java.util.NavigableMap) -> <init>
    463:466:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    446:446:com.google.common.collect.Range access$100(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound) -> access$100
    499:499:java.util.Comparator comparator() -> comparator
    647:647:boolean containsKey(java.lang.Object) -> containsKey
    569:596:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    514:535:java.util.Iterator entryIterator() -> entryIterator
    446:446:java.lang.Object get(java.lang.Object) -> get
    629:636:com.google.common.collect.Range get(java.lang.Object) -> get
    446:446:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    489:489:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    623:623:int size() -> size
    446:446:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    470:474:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    481:484:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    446:446:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    494:494:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1 -> com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1:
    535:536:void <init>(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound,com.google.common.collect.Cut,com.google.common.collect.PeekingIterator) -> <init>
    535:535:java.lang.Object computeNext() -> computeNext
    540:553:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2 -> com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2:
    596:597:void <init>(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound,com.google.common.collect.Cut,com.google.common.collect.PeekingIterator) -> <init>
    596:596:java.lang.Object computeNext() -> computeNext
    601:616:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound -> com.google.common.collect.TreeRangeSet$RangesByUpperBound:
    291:293:void <init>(java.util.NavigableMap) -> <init>
    297:299:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    281:281:com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound) -> access$000
    331:331:java.util.Comparator comparator() -> comparator
    336:336:boolean containsKey(java.lang.Object) -> containsKey
    402:416:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    366:383:java.util.Iterator entryIterator() -> entryIterator
    280:280:java.lang.Object get(java.lang.Object) -> get
    341:350:com.google.common.collect.Range get(java.lang.Object) -> get
    280:280:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    321:321:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    440:442:boolean isEmpty() -> isEmpty
    432:435:int size() -> size
    280:280:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    303:306:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    313:316:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    280:280:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    326:326:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$1:
    383:383:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,java.util.Iterator) -> <init>
    383:383:java.lang.Object computeNext() -> computeNext
    386:393:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$2:
    416:416:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,com.google.common.collect.PeekingIterator) -> <init>
    416:416:java.lang.Object computeNext() -> computeNext
    419:425:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$SubRangeSet -> com.google.common.collect.TreeRangeSet$SubRangeSet:
    866:870:void <init>(com.google.common.collect.TreeRangeSet,com.google.common.collect.Range) -> <init>
    894:899:void add(com.google.common.collect.Range) -> add
    916:916:void clear() -> clear
    911:911:boolean contains(java.lang.Comparable) -> contains
    875:877:boolean encloses(com.google.common.collect.Range) -> encloses
    885:889:com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    904:905:void remove(com.google.common.collect.Range) -> remove
    921:926:com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound -> com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound:
    677:677:void <init>(com.google.common.collect.Range,com.google.common.collect.Range,java.util.NavigableMap,com.google.common.collect.TreeRangeSet$1) -> <init>
    697:701:void <init>(com.google.common.collect.Range,com.google.common.collect.Range,java.util.NavigableMap) -> <init>
    677:677:com.google.common.collect.Range access$300(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound) -> access$300
    677:677:com.google.common.collect.Range access$400(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound) -> access$400
    736:736:java.util.Comparator comparator() -> comparator
    741:741:boolean containsKey(java.lang.Object) -> containsKey
    818:832:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    776:799:java.util.Iterator entryIterator() -> entryIterator
    677:677:java.lang.Object get(java.lang.Object) -> get
    747:764:com.google.common.collect.Range get(java.lang.Object) -> get
    677:677:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    726:726:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    854:854:int size() -> size
    677:677:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    705:709:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    716:721:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    677:677:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    731:731:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1 -> com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1:
    799:799:void <init>(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound,java.util.Iterator,com.google.common.collect.Cut) -> <init>
    799:799:java.lang.Object computeNext() -> computeNext
    802:810:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2 -> com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2:
    832:832:void <init>(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound,java.util.Iterator) -> <init>
    832:832:java.lang.Object computeNext() -> computeNext
    835:846:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeTraverser -> com.google.common.collect.TreeTraverser:
    76:76:void <init>() -> <init>
    231:232:com.google.common.collect.FluentIterable breadthFirstTraversal(java.lang.Object) -> breadthFirstTraversal
    178:178:com.google.common.collect.UnmodifiableIterator postOrderIterator(java.lang.Object) -> postOrderIterator
    168:169:com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object) -> postOrderTraversal
    125:125:com.google.common.collect.UnmodifiableIterator preOrderIterator(java.lang.Object) -> preOrderIterator
    115:116:com.google.common.collect.FluentIterable preOrderTraversal(java.lang.Object) -> preOrderTraversal
    91:92:com.google.common.collect.TreeTraverser using(com.google.common.base.Function) -> using
com.google.common.collect.TreeTraverser$1 -> com.google.common.collect.TreeTraverser$1:
    92:92:void <init>(com.google.common.base.Function) -> <init>
    95:95:java.lang.Iterable children(java.lang.Object) -> children
com.google.common.collect.TreeTraverser$2 -> com.google.common.collect.TreeTraverser$2:
    116:116:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    116:116:java.util.Iterator iterator() -> iterator
    119:119:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
com.google.common.collect.TreeTraverser$3 -> com.google.common.collect.TreeTraverser$3:
    169:169:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    169:169:java.util.Iterator iterator() -> iterator
    172:172:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
com.google.common.collect.TreeTraverser$4 -> com.google.common.collect.TreeTraverser$4:
    232:232:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    232:232:java.util.Iterator iterator() -> iterator
    235:235:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
com.google.common.collect.TreeTraverser$BreadthFirstIterator -> com.google.common.collect.TreeTraverser$BreadthFirstIterator:
    244:246:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    251:251:boolean hasNext() -> hasNext
    261:262:java.lang.Object next() -> next
    256:256:java.lang.Object peek() -> peek
com.google.common.collect.TreeTraverser$PostOrderIterator -> com.google.common.collect.TreeTraverser$PostOrderIterator:
    194:196:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    201:211:java.lang.Object computeNext() -> computeNext
    215:215:com.google.common.collect.TreeTraverser$PostOrderNode expand(java.lang.Object) -> expand
com.google.common.collect.TreeTraverser$PostOrderNode -> com.google.common.collect.TreeTraverser$PostOrderNode:
    185:187:void <init>(java.lang.Object,java.util.Iterator) -> <init>
com.google.common.collect.TreeTraverser$PreOrderIterator -> com.google.common.collect.TreeTraverser$PreOrderIterator:
    131:133:void <init>(com.google.common.collect.TreeTraverser,java.lang.Object) -> <init>
    138:138:boolean hasNext() -> hasNext
    143:150:java.lang.Object next() -> next
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    35:35:void <init>() -> <init>
    46:46:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    32:32:void <init>() -> <init>
    43:43:void add(java.lang.Object) -> add
    55:55:void set(java.lang.Object) -> set
com.google.common.collect.UnmodifiableSortedMultiset -> com.google.common.collect.UnmodifiableSortedMultiset:
    36:36:void <init>(com.google.common.collect.SortedMultiset) -> <init>
    46:46:java.util.Comparator comparator() -> comparator
    32:32:java.util.Set createElementSet() -> createElementSet
    51:51:java.util.NavigableSet createElementSet() -> createElementSet
    32:32:com.google.common.collect.Multiset delegate() -> delegate
    32:32:java.lang.Object delegate() -> delegate
    32:32:java.util.Collection delegate() -> delegate
    41:41:com.google.common.collect.SortedMultiset delegate() -> delegate
    63:67:com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    32:32:java.util.Set elementSet() -> elementSet
    32:32:java.util.SortedSet elementSet() -> elementSet
    56:56:java.util.NavigableSet elementSet() -> elementSet
    74:74:com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    94:94:com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    79:79:com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    84:84:com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    89:89:com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    100:101:com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    106:106:com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
com.google.common.collect.UsingToStringOrdering -> com.google.common.collect.UsingToStringOrdering:
    25:25:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    29:29:int compare(java.lang.Object,java.lang.Object) -> compare
    34:34:java.lang.Object readResolve() -> readResolve
com.google.common.eventbus.Subscriber -> com.google.common.eventbus.Subscriber:
    112:117:boolean equals(java.lang.Object) -> equals
    107:107:int hashCode() -> hashCode
    87:96:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.eventbus.Subscriber$SynchronizedSubscriber -> com.google.common.eventbus.Subscriber$SynchronizedSubscriber:
    143:145:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.io.Closeables -> com.google.common.io.Closeables:
    37:37:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    78:83:void close(java.io.Closeable,boolean) -> close
    104:106:void closeQuietly(java.io.InputStream) -> closeQuietly
com.google.common.io.Closer$LoggingSuppressor -> com.google.common.io.Closer$LoggingSuppressor:
    244:244:void <clinit>() -> <clinit>
    242:242:void <init>() -> <init>
com.google.common.io.Closer$SuppressingSuppressor -> com.google.common.io.Closer$SuppressingSuppressor:
    261:267:void <clinit>() -> <clinit>
    259:259:void <init>() -> <init>
    271:271:java.lang.reflect.Method addSuppressedMethodOrNull() -> addSuppressedMethodOrNull
com.google.common.math.IntMath -> com.google.common.math.IntMath:
    201:676:void <clinit>() -> <clinit>
    650:668:int binomial(int,int) -> binomial
    456:456:int checkedAdd(int,int) -> checkedAdd
    478:478:int checkedMultiply(int,int) -> checkedMultiply
    317:367:int divide(int,int,java.math.RoundingMode) -> divide
    623:624:int factorial(int) -> factorial
    119:143:int log2(int,java.math.RoundingMode) -> log2
    536:536:int saturatedAdd(int,int) -> saturatedAdd
    558:558:int saturatedMultiply(int,int) -> saturatedMultiply
com.google.common.math.IntMath$1 -> com.google.common.math.IntMath$1:
    120:120:void <clinit>() -> <clinit>
com.google.common.math.LongMath -> com.google.common.math.LongMath:
    206:1063:void <clinit>() -> <clinit>
com.google.common.math.MathPreconditions -> com.google.common.math.MathPreconditions:
    95:95:void checkNoOverflow(boolean,java.lang.String,int,int) -> checkNoOverflow
    54:54:int checkNonNegative(java.lang.String,int) -> checkNonNegative
    33:33:int checkPositive(java.lang.String,int) -> checkPositive
    82:82:void checkRoundingUnnecessary(boolean) -> checkRoundingUnnecessary
com.google.common.primitives.ImmutableLongArray -> com.google.common.primitives.ImmutableLongArray:
    84:84:void <clinit>() -> <clinit>
    83:83:void <init>(long[],int,int,com.google.common.primitives.ImmutableLongArray$1) -> <init>
    318:318:void <init>(long[]) -> <init>
    321:324:void <init>(long[],int,int) -> <init>
    83:83:com.google.common.primitives.ImmutableLongArray access$200() -> access$200
    189:189:com.google.common.primitives.ImmutableLongArray$Builder builder() -> builder
    501:509:boolean equals(java.lang.Object) -> equals
    344:345:long get(int) -> get
    520:522:int hashCode() -> hashCode
    334:334:boolean isEmpty() -> isEmpty
    557:557:boolean isPartialView() -> isPartialView
    329:329:int length() -> length
    565:565:java.lang.Object readResolve() -> readResolve
    384:384:long[] toArray() -> toArray
    533:543:java.lang.String toString() -> toString
    553:553:com.google.common.primitives.ImmutableLongArray trimmed() -> trimmed
    561:561:java.lang.Object writeReplace() -> writeReplace
com.google.common.primitives.ImmutableLongArray$Builder -> com.google.common.primitives.ImmutableLongArray$Builder:
    199:202:void <init>(int) -> <init>
    210:212:com.google.common.primitives.ImmutableLongArray$Builder add(long) -> add
    297:297:com.google.common.primitives.ImmutableLongArray build() -> build
    265:267:void ensureRoomFor(int) -> ensureRoomFor
    274:279:int expandedCapacity(int,int) -> expandedCapacity
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    87:87:int checkedCast(long) -> checkedCast
    271:272:int constrainToRange(int,int,int) -> constrainToRange
com.google.common.primitives.Longs -> com.google.common.primitives.Longs:
    46:46:int access$000(long[],long,int,int) -> access$000
    46:46:int access$100(long[],long,int,int) -> access$100
    238:239:long constrainToRange(long,long,long) -> constrainToRange
    127:127:int indexOf(long[],long,int,int) -> indexOf
    178:178:int lastIndexOf(long[],long,int,int) -> lastIndexOf
    622:631:long[] toArray(java.util.Collection) -> toArray
com.google.common.primitives.Longs$LongArrayAsList -> com.google.common.primitives.Longs$LongArrayAsList:
    669:672:void <init>(long[],int,int) -> <init>
    694:694:boolean contains(java.lang.Object) -> contains
    745:758:boolean equals(java.lang.Object) -> equals
    658:658:java.lang.Object get(int) -> get
    687:688:java.lang.Long get(int) -> get
    764:765:int hashCode() -> hashCode
    700:703:int indexOf(java.lang.Object) -> indexOf
    712:715:int lastIndexOf(java.lang.Object) -> lastIndexOf
    658:658:java.lang.Object set(int,java.lang.Object) -> set
    723:727:java.lang.Long set(int,java.lang.Long) -> set
    677:677:int size() -> size
    732:737:java.util.List subList(int,int) -> subList
    781:781:long[] toLongArray() -> toLongArray
    772:777:java.lang.String toString() -> toString
com.google.common.primitives.Primitives -> com.google.common.primitives.Primitives:
    45:59:void <clinit>() -> <clinit>
    67:68:void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    112:116:java.lang.Class wrap(java.lang.Class) -> wrap
com.google.common.primitives.UnsignedBytes -> com.google.common.primitives.UnsignedBytes:
    120:120:int compare(byte,byte) -> compare
    276:276:java.util.Comparator lexicographicalComparatorJavaImpl() -> lexicographicalComparatorJavaImpl
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder:
    288:291:void <clinit>() -> <clinit>
    287:287:void <init>() -> <init>
    438:445:java.util.Comparator getBestComparator() -> getBestComparator
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator:
    411:412:void <clinit>() -> <clinit>
    411:411:void <init>(java.lang.String,int) -> <init>
    411:411:int compare(java.lang.Object,java.lang.Object) -> compare
    416:423:int compare(byte[],byte[]) -> compare
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator valueOf(java.lang.String) -> valueOf
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator:
    293:327:void <clinit>() -> <clinit>
    294:294:void <init>(java.lang.String,int) -> <init>
    293:293:int compare(java.lang.Object,java.lang.Object) -> compare
    367:402:int compare(byte[],byte[]) -> compare
    339:360:sun.misc.Unsafe getUnsafe() -> getUnsafe
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator valueOf(java.lang.String) -> valueOf
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1 -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1:
    345:345:void <init>() -> <init>
    345:345:java.lang.Object run() -> run
    348:356:sun.misc.Unsafe run() -> run
com.google.common.primitives.UnsignedLongs -> com.google.common.primitives.UnsignedLongs:
    79:79:int compare(long,long) -> compare
com.google.common.reflect.ClassPath -> com.google.common.reflect.ClassPath:
    79:91:void <clinit>() -> <clinit>
    78:78:java.util.logging.Logger access$100() -> access$100
    78:78:com.google.common.base.Splitter access$200() -> access$200
    585:586:java.lang.String getClassName(java.lang.String) -> getClassName
    592:596:java.io.File toFile(java.net.URL) -> toFile
com.google.common.reflect.ClassPath$1 -> com.google.common.reflect.ClassPath$1:
    82:82:void <init>() -> <init>
    82:82:boolean apply(java.lang.Object) -> apply
    85:85:boolean apply(com.google.common.reflect.ClassPath$ClassInfo) -> apply
com.google.common.reflect.ClassPath$ClassInfo -> com.google.common.reflect.ClassPath$ClassInfo:
    280:281:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    276:276:java.lang.String access$000(com.google.common.reflect.ClassPath$ClassInfo) -> access$000
    344:344:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$DefaultScanner -> com.google.common.reflect.ClassPath$DefaultScanner:
    569:571:void <init>() -> <init>
    579:579:void scanResource(com.google.common.reflect.ClassPath$ResourceInfo) -> scanResource
com.google.common.reflect.ClassPath$ResourceInfo -> com.google.common.reflect.ClassPath$ResourceInfo:
    194:197:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    256:258:boolean equals(java.lang.Object) -> equals
    251:251:int hashCode() -> hashCode
    187:190:com.google.common.reflect.ClassPath$ResourceInfo of(java.io.File,java.lang.String,java.lang.ClassLoader) -> of
    266:266:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$Scanner -> com.google.common.reflect.ClassPath$Scanner:
    353:357:void <init>() -> <init>
    470:476:com.google.common.collect.ImmutableList getClassLoaderUrls(java.lang.ClassLoader) -> getClassLoaderUrls
    452:466:com.google.common.collect.ImmutableMap getClassPathEntries(java.lang.ClassLoader) -> getClassPathEntries
    508:508:java.net.URL getClassPathEntry(java.io.File,java.lang.String) -> getClassPathEntry
    427:447:com.google.common.collect.ImmutableSet getClassPathFromManifest(java.io.File,java.util.jar.Manifest) -> getClassPathFromManifest
    485:497:com.google.common.collect.ImmutableList parseJavaClassPath() -> parseJavaClassPath
    367:368:void scan(java.io.File,java.lang.ClassLoader) -> scan
    524:526:void scanDirectory(java.lang.ClassLoader,java.io.File) -> scanDirectory
    544:561:void scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,java.util.Set) -> scanDirectory
    380:391:void scanFrom(java.io.File,java.lang.ClassLoader) -> scanFrom
    398:413:void scanJar(java.io.File,java.lang.ClassLoader) -> scanJar
    513:519:void scanJarFile(java.lang.ClassLoader,java.util.jar.JarFile) -> scanJarFile
com.google.common.util.concurrent.AbstractCatchingFuture -> com.google.common.util.concurrent.AbstractCatchingFuture:
    64:67:void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,java.lang.Object) -> <init>
    170:173:void afterDone() -> afterDone
    40:41:com.google.common.util.concurrent.ListenableFuture create(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor) -> create
    50:51:com.google.common.util.concurrent.ListenableFuture create(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> create
    138:154:java.lang.String pendingToString() -> pendingToString
    72:133:void run() -> run
com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture -> com.google.common.util.concurrent.AbstractCatchingFuture$AsyncCatchingFuture:
    187:187:void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.util.concurrent.AsyncFunction) -> <init>
    180:180:java.lang.Object doFallback(java.lang.Object,java.lang.Throwable) -> doFallback
    193:194:com.google.common.util.concurrent.ListenableFuture doFallback(com.google.common.util.concurrent.AsyncFunction,java.lang.Throwable) -> doFallback
    180:180:void setResult(java.lang.Object) -> setResult
    204:204:void setResult(com.google.common.util.concurrent.ListenableFuture) -> setResult
com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture -> com.google.common.util.concurrent.AbstractCatchingFuture$CatchingFuture:
    218:218:void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function) -> <init>
    212:212:java.lang.Object doFallback(java.lang.Object,java.lang.Throwable) -> doFallback
    224:224:java.lang.Object doFallback(com.google.common.base.Function,java.lang.Throwable) -> doFallback
    229:229:void setResult(java.lang.Object) -> setResult
com.google.common.util.concurrent.AbstractExecutionThreadService -> com.google.common.util.concurrent.AbstractExecutionThreadService:
    37:38:void <clinit>() -> <clinit>
    41:104:void <init>() -> <init>
    36:36:java.util.logging.Logger access$000() -> access$000
    189:189:void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    217:217:void awaitRunning() -> awaitRunning
    223:223:void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    229:229:void awaitTerminated() -> awaitTerminated
    235:235:void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    163:163:java.util.concurrent.Executor executor() -> executor
    195:195:java.lang.Throwable failureCause() -> failureCause
    178:178:boolean isRunning() -> isRunning
    247:247:java.lang.String serviceName() -> serviceName
    202:202:com.google.common.util.concurrent.Service startAsync() -> startAsync
    183:183:com.google.common.util.concurrent.Service$State state() -> state
    210:210:com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    173:173:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractExecutionThreadService$1 -> com.google.common.util.concurrent.AbstractExecutionThreadService$1:
    42:42:void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService) -> <init>
    45:54:void doStart() -> doStart
    94:94:void doStop() -> doStop
    99:99:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractExecutionThreadService$1$1 -> com.google.common.util.concurrent.AbstractExecutionThreadService$1$1:
    48:48:void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService$1) -> <init>
    48:48:java.lang.Object get() -> get
    51:51:java.lang.String get() -> get
com.google.common.util.concurrent.AbstractExecutionThreadService$1$2 -> com.google.common.util.concurrent.AbstractExecutionThreadService$1$2:
    55:55:void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService$1) -> <init>
    59:86:void run() -> run
com.google.common.util.concurrent.AbstractExecutionThreadService$2 -> com.google.common.util.concurrent.AbstractExecutionThreadService$2:
    163:163:void <init>(com.google.common.util.concurrent.AbstractExecutionThreadService) -> <init>
    166:166:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractFuture -> com.google.common.util.concurrent.AbstractFuture:
    80:281:void <clinit>() -> <clinit>
    374:374:void <init>() -> <init>
    70:70:com.google.common.util.concurrent.AbstractFuture$AtomicHelper access$200() -> access$200
    70:70:boolean access$300() -> access$300
    70:70:java.lang.Object access$400(com.google.common.util.concurrent.AbstractFuture) -> access$400
    70:70:java.lang.Object access$402(com.google.common.util.concurrent.AbstractFuture,java.lang.Object) -> access$402
    70:70:java.lang.Object access$500(com.google.common.util.concurrent.ListenableFuture) -> access$500
    70:70:void access$600(com.google.common.util.concurrent.AbstractFuture) -> access$600
    70:70:com.google.common.util.concurrent.AbstractFuture$Waiter access$800(com.google.common.util.concurrent.AbstractFuture) -> access$800
    70:70:com.google.common.util.concurrent.AbstractFuture$Waiter access$802(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter) -> access$802
    70:70:com.google.common.util.concurrent.AbstractFuture$Listener access$900(com.google.common.util.concurrent.AbstractFuture) -> access$900
    70:70:com.google.common.util.concurrent.AbstractFuture$Listener access$902(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener) -> access$902
    1159:1168:void addDoneString(java.lang.StringBuilder) -> addDoneString
    698:724:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    1125:1153:void addPendingString(java.lang.StringBuilder) -> addPendingString
    1179:1186:void appendResultObject(java.lang.StringBuilder,java.lang.Object) -> appendResultObject
    1198:1205:void appendUserObject(java.lang.StringBuilder,java.lang.Object) -> appendUserObject
    607:656:boolean cancel(boolean) -> cancel
    1427:1428:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> cancellationExceptionWithCause
    1072:1078:com.google.common.util.concurrent.AbstractFuture$Listener clearListeners(com.google.common.util.concurrent.AbstractFuture$Listener) -> clearListeners
    953:983:void complete(com.google.common.util.concurrent.AbstractFuture) -> complete
    1215:1220:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
    414:508:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    522:556:java.lang.Object get() -> get
    563:567:java.lang.Object getDoneValue(java.lang.Object) -> getDoneValue
    858:923:java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture) -> getFutureValue
    936:945:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    584:585:boolean isCancelled() -> isCancelled
    578:579:boolean isDone() -> isDone
    1043:1044:void maybePropagateCancellationTo(java.util.concurrent.Future) -> maybePropagateCancellationTo
    1114:1116:java.lang.String pendingToString() -> pendingToString
    1052:1055:void releaseWaiters() -> releaseWaiters
    238:256:void removeWaiter(com.google.common.util.concurrent.AbstractFuture$Waiter) -> removeWaiter
    744:746:boolean set(java.lang.Object) -> set
    769:771:boolean setException(java.lang.Throwable) -> setException
    808:846:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
    1088:1102:java.lang.String toString() -> toString
    1029:1032:java.lang.Throwable tryInternalFastPathGetFailure() -> tryInternalFastPathGetFailure
    687:688:boolean wasInterrupted() -> wasInterrupted
com.google.common.util.concurrent.AbstractFuture$AtomicHelper -> com.google.common.util.concurrent.AbstractFuture$AtomicHelper:
    1227:1227:void <init>() -> <init>
    1227:1227:void <init>(com.google.common.util.concurrent.AbstractFuture$1) -> <init>
com.google.common.util.concurrent.AbstractFuture$Cancellation -> com.google.common.util.concurrent.AbstractFuture$Cancellation:
    307:312:void <clinit>() -> <clinit>
    319:321:void <init>(boolean,java.lang.Throwable) -> <init>
com.google.common.util.concurrent.AbstractFuture$Failure -> com.google.common.util.concurrent.AbstractFuture$Failure:
    285:285:void <clinit>() -> <clinit>
    295:296:void <init>(java.lang.Throwable) -> <init>
com.google.common.util.concurrent.AbstractFuture$Failure$1 -> com.google.common.util.concurrent.AbstractFuture$Failure$1:
    287:287:void <init>(java.lang.String) -> <init>
    290:290:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.common.util.concurrent.AbstractFuture$Listener -> com.google.common.util.concurrent.AbstractFuture$Listener:
    267:267:void <clinit>() -> <clinit>
    274:276:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper -> com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper:
    1340:1345:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    1365:1365:boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    1370:1370:boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    1360:1360:boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    1355:1355:void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    1350:1350:void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
com.google.common.util.concurrent.AbstractFuture$SetFuture -> com.google.common.util.concurrent.AbstractFuture$SetFuture:
    330:332:void <init>(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.ListenableFuture) -> <init>
    337:343:void run() -> run
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper -> com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper:
    1380:1380:void <init>() -> <init>
    1380:1380:void <init>(com.google.common.util.concurrent.AbstractFuture$1) -> <init>
    1404:1410:boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    1415:1421:boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    1393:1399:boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    1388:1388:void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    1383:1383:void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
com.google.common.util.concurrent.AbstractFuture$TrustedFuture -> com.google.common.util.concurrent.AbstractFuture$TrustedFuture:
    100:100:void <init>() -> <init>
    126:126:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    132:132:boolean cancel(boolean) -> cancel
    104:104:java.lang.Object get() -> get
    111:111:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    121:121:boolean isCancelled() -> isCancelled
    116:116:boolean isDone() -> isDone
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper -> com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper:
    1261:1294:void <clinit>() -> <clinit>
    1250:1250:void <init>() -> <init>
    1250:1250:void <init>(com.google.common.util.concurrent.AbstractFuture$1) -> <init>
    1317:1317:boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    1323:1323:boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    1311:1311:boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    1305:1305:void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    1300:1300:void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1 -> com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1:
    1266:1266:void <init>() -> <init>
    1266:1266:java.lang.Object run() -> run
    1269:1277:sun.misc.Unsafe run() -> run
com.google.common.util.concurrent.AbstractFuture$Waiter -> com.google.common.util.concurrent.AbstractFuture$Waiter:
    192:192:void <clinit>() -> <clinit>
    201:201:void <init>(boolean) -> <init>
    203:205:void <init>() -> <init>
    211:211:void setNext(com.google.common.util.concurrent.AbstractFuture$Waiter) -> setNext
    218:221:void unpark() -> unpark
com.google.common.util.concurrent.AbstractIdleService -> com.google.common.util.concurrent.AbstractIdleService:
    37:93:void <init>() -> <init>
    34:34:com.google.common.base.Supplier access$200(com.google.common.util.concurrent.AbstractIdleService) -> access$200
    135:135:void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    163:163:void awaitRunning() -> awaitRunning
    169:169:void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    175:175:void awaitTerminated() -> awaitTerminated
    181:181:void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    109:109:java.util.concurrent.Executor executor() -> executor
    141:141:java.lang.Throwable failureCause() -> failureCause
    124:124:boolean isRunning() -> isRunning
    191:191:java.lang.String serviceName() -> serviceName
    148:148:com.google.common.util.concurrent.Service startAsync() -> startAsync
    129:129:com.google.common.util.concurrent.Service$State state() -> state
    156:156:com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    119:119:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractIdleService$1 -> com.google.common.util.concurrent.AbstractIdleService$1:
    109:109:void <init>(com.google.common.util.concurrent.AbstractIdleService) -> <init>
    112:112:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractIdleService$DelegateService -> com.google.common.util.concurrent.AbstractIdleService$DelegateService:
    51:51:void <init>(com.google.common.util.concurrent.AbstractIdleService) -> <init>
    51:51:void <init>(com.google.common.util.concurrent.AbstractIdleService,com.google.common.util.concurrent.AbstractIdleService$1) -> <init>
    54:55:void doStart() -> doStart
    71:72:void doStop() -> doStop
    88:88:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractIdleService$DelegateService$1 -> com.google.common.util.concurrent.AbstractIdleService$DelegateService$1:
    56:56:void <init>(com.google.common.util.concurrent.AbstractIdleService$DelegateService) -> <init>
    60:63:void run() -> run
com.google.common.util.concurrent.AbstractIdleService$DelegateService$2 -> com.google.common.util.concurrent.AbstractIdleService$DelegateService$2:
    73:73:void <init>(com.google.common.util.concurrent.AbstractIdleService$DelegateService) -> <init>
    77:80:void run() -> run
com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier -> com.google.common.util.concurrent.AbstractIdleService$ThreadNameSupplier:
    40:40:void <init>(com.google.common.util.concurrent.AbstractIdleService) -> <init>
    40:40:void <init>(com.google.common.util.concurrent.AbstractIdleService,com.google.common.util.concurrent.AbstractIdleService$1) -> <init>
    39:39:java.lang.Object get() -> get
    43:43:java.lang.String get() -> get
com.google.common.util.concurrent.AbstractListeningExecutorService -> com.google.common.util.concurrent.AbstractListeningExecutorService:
    39:39:void <init>() -> <init>
    45:45:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    51:51:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    36:36:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    36:36:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    36:36:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    56:56:com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    61:61:com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    66:66:com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
com.google.common.util.concurrent.AbstractScheduledService -> com.google.common.util.concurrent.AbstractScheduledService:
    98:98:void <clinit>() -> <clinit>
    166:281:void <init>() -> <init>
    97:97:java.util.logging.Logger access$400() -> access$400
    97:97:com.google.common.util.concurrent.AbstractService access$500(com.google.common.util.concurrent.AbstractScheduledService) -> access$500
    384:384:void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    412:412:void awaitRunning() -> awaitRunning
    418:418:void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    424:424:void awaitTerminated() -> awaitTerminated
    430:430:void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    333:352:java.util.concurrent.ScheduledExecutorService executor() -> executor
    390:390:java.lang.Throwable failureCause() -> failureCause
    373:373:boolean isRunning() -> isRunning
    363:363:java.lang.String serviceName() -> serviceName
    397:397:com.google.common.util.concurrent.Service startAsync() -> startAsync
    378:378:com.google.common.util.concurrent.Service$State state() -> state
    405:405:com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    368:368:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractScheduledService$1 -> com.google.common.util.concurrent.AbstractScheduledService$1:
    341:341:void <init>(com.google.common.util.concurrent.AbstractScheduledService,java.util.concurrent.ScheduledExecutorService) -> <init>
    349:349:void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
    344:344:void terminated(com.google.common.util.concurrent.Service$State) -> terminated
com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl -> com.google.common.util.concurrent.AbstractScheduledService$1ThreadFactoryImpl:
    327:327:void <init>(com.google.common.util.concurrent.AbstractScheduledService) -> <init>
    330:330:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler:
    441:441:void <init>() -> <init>
    556:557:java.util.concurrent.Future schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> schedule
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$ReschedulableCallable:
    463:474:void <init>(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler,com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> <init>
    444:444:java.lang.Object call() -> call
    479:480:java.lang.Void call() -> call
    528:533:boolean cancel(boolean) -> cancel
    444:444:java.lang.Object delegate() -> delegate
    548:548:java.util.concurrent.Future delegate() -> delegate
    538:543:boolean isCancelled() -> isCancelled
    489:519:void reschedule() -> reschedule
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule:
    576:578:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    567:567:long access$800(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule) -> access$800
    567:567:java.util.concurrent.TimeUnit access$900(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule) -> access$900
com.google.common.util.concurrent.AbstractScheduledService$Scheduler -> com.google.common.util.concurrent.AbstractScheduledService$Scheduler:
    112:112:void <init>(com.google.common.util.concurrent.AbstractScheduledService$1) -> <init>
    162:162:void <init>() -> <init>
    125:127:com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit) -> newFixedDelaySchedule
    147:149:com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedRateSchedule(long,long,java.util.concurrent.TimeUnit) -> newFixedRateSchedule
com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1 -> com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1:
    127:127:void <init>(long,long,java.util.concurrent.TimeUnit) -> <init>
    131:131:java.util.concurrent.Future schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> schedule
com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2 -> com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2:
    149:149:void <init>(long,long,java.util.concurrent.TimeUnit) -> <init>
    153:153:java.util.concurrent.Future schedule(com.google.common.util.concurrent.AbstractService,java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> schedule
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate:
    169:210:void <init>(com.google.common.util.concurrent.AbstractScheduledService) -> <init>
    169:169:void <init>(com.google.common.util.concurrent.AbstractScheduledService,com.google.common.util.concurrent.AbstractScheduledService$1) -> <init>
    169:169:java.util.concurrent.locks.ReentrantLock access$200(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> access$200
    169:169:java.util.concurrent.Future access$300(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> access$300
    169:169:java.util.concurrent.Future access$302(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate,java.util.concurrent.Future) -> access$302
    169:169:java.util.concurrent.ScheduledExecutorService access$600(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> access$600
    169:169:java.lang.Runnable access$700(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> access$700
    214:223:void doStart() -> doStart
    247:248:void doStop() -> doStop
    276:276:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$1 -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$1:
    217:217:void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> <init>
    217:217:java.lang.Object get() -> get
    220:220:java.lang.String get() -> get
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2 -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$2:
    224:224:void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> <init>
    227:240:void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$3 -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$3:
    249:249:void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> <init>
    253:268:void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task -> com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate$Task:
    183:183:void <init>(com.google.common.util.concurrent.AbstractScheduledService$ServiceDelegate) -> <init>
    186:206:void run() -> run
com.google.common.util.concurrent.AbstractService -> com.google.common.util.concurrent.AbstractService:
    52:88:void <clinit>() -> <clinit>
    118:191:void <init>() -> <init>
    51:51:com.google.common.util.concurrent.Monitor access$000(com.google.common.util.concurrent.AbstractService) -> access$000
    487:487:void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    300:305:void awaitRunning() -> awaitRunning
    310:321:void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    327:332:void awaitTerminated() -> awaitTerminated
    337:353:void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    360:368:void checkCurrentState(com.google.common.util.concurrent.Service$State) -> checkCurrentState
    500:501:void dispatchListenerEvents() -> dispatchListenerEvents
    545:545:void enqueueFailedEvent(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> enqueueFailedEvent
    510:510:void enqueueRunningEvent() -> enqueueRunningEvent
    506:506:void enqueueStartingEvent() -> enqueueStartingEvent
    514:519:void enqueueStoppingEvent(com.google.common.util.concurrent.Service$State) -> enqueueStoppingEvent
    524:539:void enqueueTerminatedEvent(com.google.common.util.concurrent.Service$State) -> enqueueTerminatedEvent
    481:481:java.lang.Throwable failureCause() -> failureCause
    470:470:boolean isRunning() -> isRunning
    443:465:void notifyFailed(java.lang.Throwable) -> notifyFailed
    380:404:void notifyStarted() -> notifyStarted
    416:434:void notifyStopped() -> notifyStopped
    244:256:com.google.common.util.concurrent.Service startAsync() -> startAsync
    475:475:com.google.common.util.concurrent.Service$State state() -> state
    264:293:com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    105:105:com.google.common.util.concurrent.ListenerCallQueue$Event stoppingEvent(com.google.common.util.concurrent.Service$State) -> stoppingEvent
    91:91:com.google.common.util.concurrent.ListenerCallQueue$Event terminatedEvent(com.google.common.util.concurrent.Service$State) -> terminatedEvent
    492:492:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractService$1 -> com.google.common.util.concurrent.AbstractService$1:
    53:53:void <init>() -> <init>
    53:53:void call(java.lang.Object) -> call
    56:56:void call(com.google.common.util.concurrent.Service$Listener) -> call
com.google.common.util.concurrent.AbstractService$2 -> com.google.common.util.concurrent.AbstractService$2:
    65:65:void <init>() -> <init>
    65:65:void call(java.lang.Object) -> call
    68:68:void call(com.google.common.util.concurrent.Service$Listener) -> call
com.google.common.util.concurrent.AbstractService$3 -> com.google.common.util.concurrent.AbstractService$3:
    91:91:void <init>(com.google.common.util.concurrent.Service$State) -> <init>
    91:91:void call(java.lang.Object) -> call
    94:94:void call(com.google.common.util.concurrent.Service$Listener) -> call
    99:99:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractService$4 -> com.google.common.util.concurrent.AbstractService$4:
    105:105:void <init>(com.google.common.util.concurrent.Service$State) -> <init>
    105:105:void call(java.lang.Object) -> call
    108:108:void call(com.google.common.util.concurrent.Service$Listener) -> call
    113:113:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractService$5 -> com.google.common.util.concurrent.AbstractService$5:
    546:546:void <init>(com.google.common.util.concurrent.AbstractService,com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> <init>
    546:546:void call(java.lang.Object) -> call
    549:549:void call(com.google.common.util.concurrent.Service$Listener) -> call
    554:554:java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractService$6 -> com.google.common.util.concurrent.AbstractService$6:
    267:267:void <clinit>() -> <clinit>
com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard -> com.google.common.util.concurrent.AbstractService$HasReachedRunningGuard:
    152:153:void <init>(com.google.common.util.concurrent.AbstractService) -> <init>
    158:158:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$IsStartableGuard -> com.google.common.util.concurrent.AbstractService$IsStartableGuard:
    124:125:void <init>(com.google.common.util.concurrent.AbstractService) -> <init>
    130:130:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$IsStoppableGuard -> com.google.common.util.concurrent.AbstractService$IsStoppableGuard:
    138:139:void <init>(com.google.common.util.concurrent.AbstractService) -> <init>
    144:144:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$IsStoppedGuard -> com.google.common.util.concurrent.AbstractService$IsStoppedGuard:
    166:167:void <init>(com.google.common.util.concurrent.AbstractService) -> <init>
    172:172:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$StateSnapshot -> com.google.common.util.concurrent.AbstractService$StateSnapshot:
    581:581:void <init>(com.google.common.util.concurrent.Service$State) -> <init>
    585:598:void <init>(com.google.common.util.concurrent.Service$State,boolean,java.lang.Throwable) -> <init>
    603:606:com.google.common.util.concurrent.Service$State externalState() -> externalState
    612:616:java.lang.Throwable failureCause() -> failureCause
com.google.common.util.concurrent.AbstractTransformFuture -> com.google.common.util.concurrent.AbstractTransformFuture:
    58:60:void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Object) -> <init>
    177:179:void afterDone() -> afterDone
    37:39:com.google.common.util.concurrent.ListenableFuture create(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> create
    45:47:com.google.common.util.concurrent.ListenableFuture create(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor) -> create
    184:194:java.lang.String pendingToString() -> pendingToString
    65:163:void run() -> run
com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture -> com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture:
    208:208:void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction) -> <init>
    203:203:java.lang.Object doTransform(java.lang.Object,java.lang.Object) -> doTransform
    214:215:com.google.common.util.concurrent.ListenableFuture doTransform(com.google.common.util.concurrent.AsyncFunction,java.lang.Object) -> doTransform
    203:203:void setResult(java.lang.Object) -> setResult
    225:225:void setResult(com.google.common.util.concurrent.ListenableFuture) -> setResult
com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture -> com.google.common.util.concurrent.AbstractTransformFuture$TransformFuture:
    237:237:void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> <init>
    233:233:java.lang.Object doTransform(java.lang.Object,java.lang.Object) -> doTransform
    243:243:java.lang.Object doTransform(com.google.common.base.Function,java.lang.Object) -> doTransform
    248:248:void setResult(java.lang.Object) -> setResult
com.google.common.util.concurrent.AggregateFuture -> com.google.common.util.concurrent.AggregateFuture:
    43:43:void <clinit>() -> <clinit>
    64:67:void <init>(com.google.common.collect.ImmutableCollection,boolean,boolean) -> <init>
    42:42:com.google.common.collect.ImmutableCollection access$002(com.google.common.util.concurrent.AggregateFuture,com.google.common.collect.ImmutableCollection) -> access$002
    42:42:void access$100(com.google.common.util.concurrent.AggregateFuture,int,java.util.concurrent.Future) -> access$100
    42:42:void access$200(com.google.common.util.concurrent.AggregateFuture,com.google.common.collect.ImmutableCollection) -> access$200
    331:332:boolean addCausalChain(java.util.Set,java.lang.Throwable) -> addCausalChain
    235:238:void addInitialException(java.util.Set) -> addInitialException
    72:80:void afterDone() -> afterDone
    249:253:void collectValueFromNonCancelledFuture(int,java.util.concurrent.Future) -> collectValueFromNonCancelledFuture
    261:264:void decrementCountAndMaybeComplete(com.google.common.collect.ImmutableCollection) -> decrementCountAndMaybeComplete
    192:221:void handleException(java.lang.Throwable) -> handleException
    107:180:void init() -> init
    227:230:void log(java.lang.Throwable) -> log
    91:95:java.lang.String pendingToString() -> pendingToString
    274:290:void processCompleted(com.google.common.collect.ImmutableCollection) -> processCompleted
    306:313:void releaseResources(com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason) -> releaseResources
com.google.common.util.concurrent.AggregateFuture$1 -> com.google.common.util.concurrent.AggregateFuture$1:
    129:129:void <init>(com.google.common.util.concurrent.AggregateFuture,com.google.common.util.concurrent.ListenableFuture,int) -> <init>
    133:148:void run() -> run
com.google.common.util.concurrent.AggregateFuture$2 -> com.google.common.util.concurrent.AggregateFuture$2:
    173:173:void <init>(com.google.common.util.concurrent.AggregateFuture,com.google.common.collect.ImmutableCollection) -> <init>
    176:176:void run() -> run
com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason -> com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason:
    316:318:void <clinit>() -> <clinit>
    316:316:void <init>(java.lang.String,int) -> <init>
    316:316:com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason valueOf(java.lang.String) -> valueOf
    316:316:com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason[] values() -> values
com.google.common.util.concurrent.AggregateFutureState -> com.google.common.util.concurrent.AggregateFutureState:
    49:71:void <clinit>() -> <clinit>
    43:76:void <init>(int) -> <init>
    40:40:java.util.Set access$200(com.google.common.util.concurrent.AggregateFutureState) -> access$200
    40:40:java.util.Set access$202(com.google.common.util.concurrent.AggregateFutureState,java.util.Set) -> access$202
    40:40:int access$306(com.google.common.util.concurrent.AggregateFutureState) -> access$306
    141:141:void clearSeenExceptions() -> clearSeenExceptions
    137:137:int decrementRemainingAndGet() -> decrementRemainingAndGet
    96:128:java.util.Set getOrInitSeenExceptions() -> getOrInitSeenExceptions
com.google.common.util.concurrent.AggregateFutureState$AtomicHelper -> com.google.common.util.concurrent.AggregateFutureState$AtomicHelper:
    144:144:void <init>() -> <init>
    144:144:void <init>(com.google.common.util.concurrent.AggregateFutureState$1) -> <init>
com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper -> com.google.common.util.concurrent.AggregateFutureState$SafeAtomicHelper:
    160:162:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicIntegerFieldUpdater) -> <init>
    168:168:void compareAndSetSeenExceptions(com.google.common.util.concurrent.AggregateFutureState,java.util.Set,java.util.Set) -> compareAndSetSeenExceptions
    173:173:int decrementAndGetRemainingCount(com.google.common.util.concurrent.AggregateFutureState) -> decrementAndGetRemainingCount
com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper -> com.google.common.util.concurrent.AggregateFutureState$SynchronizedAtomicHelper:
    177:177:void <init>() -> <init>
    177:177:void <init>(com.google.common.util.concurrent.AggregateFutureState$1) -> <init>
    181:185:void compareAndSetSeenExceptions(com.google.common.util.concurrent.AggregateFutureState,java.util.Set,java.util.Set) -> compareAndSetSeenExceptions
    190:192:int decrementAndGetRemainingCount(com.google.common.util.concurrent.AggregateFutureState) -> decrementAndGetRemainingCount
com.google.common.util.concurrent.AtomicDouble -> com.google.common.util.concurrent.AtomicDouble:
    63:64:void <init>(double) -> <init>
    69:69:void <init>() -> <init>
    170:174:double addAndGet(double) -> addAndGet
    122:122:boolean compareAndSet(double,double) -> compareAndSet
    220:220:double doubleValue() -> doubleValue
    214:214:float floatValue() -> floatValue
    78:78:double get() -> get
    151:155:double getAndAdd(double) -> getAndAdd
    108:109:double getAndSet(double) -> getAndSet
    196:196:int intValue() -> intValue
    97:98:void lazySet(double) -> lazySet
    205:205:long longValue() -> longValue
    237:239:void readObject(java.io.ObjectInputStream) -> readObject
    87:88:void set(double) -> set
    187:187:java.lang.String toString() -> toString
    139:139:boolean weakCompareAndSet(double,double) -> weakCompareAndSet
    229:231:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.util.concurrent.AtomicDoubleArray -> com.google.common.util.concurrent.AtomicDoubleArray:
    59:60:void <init>(int) -> <init>
    70:76:void <init>(double[]) -> <init>
    194:198:double addAndGet(int,double) -> addAndGet
    143:143:boolean compareAndSet(int,double,double) -> compareAndSet
    95:95:double get(int) -> get
    174:178:double getAndAdd(int,double) -> getAndAdd
    128:129:double getAndSet(int,double) -> getAndSet
    116:117:void lazySet(int,double) -> lazySet
    85:85:int length() -> length
    250:257:void readObject(java.io.ObjectInputStream) -> readObject
    105:106:void set(int,double) -> set
    211:224:java.lang.String toString() -> toString
    161:161:boolean weakCompareAndSet(int,double,double) -> weakCompareAndSet
    235:243:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.util.concurrent.AtomicLongMap -> com.google.common.util.concurrent.AtomicLongMap:
    60:61:void <init>(java.util.concurrent.ConcurrentHashMap) -> <init>
    109:130:long addAndGet(java.lang.Object,long) -> addAndGet
    332:333:java.util.Map asMap() -> asMap
    373:373:void clear() -> clear
    350:350:boolean containsKey(java.lang.Object) -> containsKey
    66:66:com.google.common.util.concurrent.AtomicLongMap create() -> create
    71:72:com.google.common.util.concurrent.AtomicLongMap create(java.util.Map) -> create
    337:338:java.util.Map createAsMap() -> createAsMap
    98:98:long decrementAndGet(java.lang.Object) -> decrementAndGet
    81:82:long get(java.lang.Object) -> get
    162:183:long getAndAdd(java.lang.Object,long) -> getAndAdd
    151:151:long getAndDecrement(java.lang.Object) -> getAndDecrement
    143:143:long getAndIncrement(java.lang.Object) -> getAndIncrement
    90:90:long incrementAndGet(java.lang.Object) -> incrementAndGet
    363:363:boolean isEmpty() -> isEmpty
    199:219:long put(java.lang.Object,long) -> put
    234:235:void putAll(java.util.Map) -> putAll
    411:423:long putIfAbsent(java.lang.Object,long) -> putIfAbsent
    245:254:long remove(java.lang.Object) -> remove
    266:278:boolean remove(java.lang.Object,long) -> remove
    305:310:void removeAllZeros() -> removeAllZeros
    295:295:boolean removeIfZero(java.lang.Object) -> removeIfZero
    443:446:boolean replace(java.lang.Object,long,long) -> replace
    358:358:int size() -> size
    322:323:long sum() -> sum
    378:378:java.lang.String toString() -> toString
com.google.common.util.concurrent.AtomicLongMap$1 -> com.google.common.util.concurrent.AtomicLongMap$1:
    340:340:void <init>(com.google.common.util.concurrent.AtomicLongMap) -> <init>
    340:340:java.lang.Object apply(java.lang.Object) -> apply
    343:343:java.lang.Long apply(java.util.concurrent.atomic.AtomicLong) -> apply
com.google.common.util.concurrent.Atomics -> com.google.common.util.concurrent.Atomics:
    30:30:void <init>() -> <init>
    38:38:java.util.concurrent.atomic.AtomicReference newReference() -> newReference
    48:48:java.util.concurrent.atomic.AtomicReference newReference(java.lang.Object) -> newReference
    58:58:java.util.concurrent.atomic.AtomicReferenceArray newReferenceArray(int) -> newReferenceArray
    69:69:java.util.concurrent.atomic.AtomicReferenceArray newReferenceArray(java.lang.Object[]) -> newReferenceArray
com.google.common.util.concurrent.Callables -> com.google.common.util.concurrent.Callables:
    34:34:void <init>() -> <init>
    33:33:boolean access$000(java.lang.String,java.lang.Thread) -> access$000
    58:60:com.google.common.util.concurrent.AsyncCallable asAsyncCallable(java.util.concurrent.Callable,com.google.common.util.concurrent.ListeningExecutorService) -> asAsyncCallable
    38:38:java.util.concurrent.Callable returning(java.lang.Object) -> returning
    80:82:java.util.concurrent.Callable threadRenaming(java.util.concurrent.Callable,com.google.common.base.Supplier) -> threadRenaming
    110:112:java.lang.Runnable threadRenaming(java.lang.Runnable,com.google.common.base.Supplier) -> threadRenaming
    137:137:boolean trySetName(java.lang.String,java.lang.Thread) -> trySetName
com.google.common.util.concurrent.Callables$1 -> com.google.common.util.concurrent.Callables$1:
    38:38:void <init>(java.lang.Object) -> <init>
    41:41:java.lang.Object call() -> call
com.google.common.util.concurrent.Callables$2 -> com.google.common.util.concurrent.Callables$2:
    60:60:void <init>(com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.Callable) -> <init>
    63:63:com.google.common.util.concurrent.ListenableFuture call() -> call
com.google.common.util.concurrent.Callables$3 -> com.google.common.util.concurrent.Callables$3:
    82:82:void <init>(com.google.common.base.Supplier,java.util.concurrent.Callable) -> <init>
    85:94:java.lang.Object call() -> call
com.google.common.util.concurrent.Callables$4 -> com.google.common.util.concurrent.Callables$4:
    112:112:void <init>(com.google.common.base.Supplier,java.lang.Runnable) -> <init>
    115:124:void run() -> run
com.google.common.util.concurrent.ClosingFuture -> com.google.common.util.concurrent.ClosingFuture:
    197:197:void <clinit>() -> <clinit>
    195:195:void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.ClosingFuture$1) -> <init>
    544:549:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    544:568:void <init>(com.google.common.util.concurrent.ClosingFuture$ClosingCallable,java.util.concurrent.Executor) -> <init>
    195:195:com.google.common.util.concurrent.FluentFuture access$000(com.google.common.util.concurrent.ClosingFuture) -> access$000
    195:195:void access$100(com.google.common.util.concurrent.ClosingFuture) -> access$100
    195:195:void access$1000(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$State,com.google.common.util.concurrent.ClosingFuture$State) -> access$1000
    195:195:void access$1100(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer,com.google.common.util.concurrent.ClosingFuture) -> access$1100
    195:195:void access$1200(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$CloseableList) -> access$1200
    195:195:com.google.common.util.concurrent.ClosingFuture$CloseableList access$200(com.google.common.util.concurrent.ClosingFuture) -> access$200
    195:195:java.util.logging.Logger access$3200() -> access$3200
    195:195:void access$3300(java.io.Closeable,java.util.concurrent.Executor) -> access$3300
    1065:1066:void becomeSubsumedInto(com.google.common.util.concurrent.ClosingFuture$CloseableList) -> becomeSubsumedInto
    1045:1048:boolean cancel(boolean) -> cancel
    811:811:com.google.common.util.concurrent.ClosingFuture catching(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.util.concurrent.Executor) -> catching
    908:908:com.google.common.util.concurrent.ClosingFuture catchingAsync(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.util.concurrent.Executor) -> catchingAsync
    916:929:com.google.common.util.concurrent.ClosingFuture catchingAsyncMoreGeneric(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.util.concurrent.Executor) -> catchingAsyncMoreGeneric
    817:831:com.google.common.util.concurrent.ClosingFuture catchingMoreGeneric(java.lang.Class,com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.util.concurrent.Executor) -> catchingMoreGeneric
    2084:2085:void checkAndUpdateState(com.google.common.util.concurrent.ClosingFuture$State,com.google.common.util.concurrent.ClosingFuture$State) -> checkAndUpdateState
    1054:1055:void close() -> close
    2063:2079:void closeQuietly(java.io.Closeable,java.util.concurrent.Executor) -> closeQuietly
    2092:2092:boolean compareAndUpdateState(com.google.common.util.concurrent.ClosingFuture$State,com.google.common.util.concurrent.ClosingFuture$State) -> compareAndUpdateState
    1059:1060:com.google.common.util.concurrent.ClosingFuture derive(com.google.common.util.concurrent.FluentFuture) -> derive
    408:421:com.google.common.util.concurrent.ClosingFuture eventuallyClosing(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.Executor) -> eventuallyClosing
    2052:2054:void finalize() -> finalize
    944:975:com.google.common.util.concurrent.FluentFuture finishToFuture() -> finishToFuture
    991:1012:void finishToValueAndCloser(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer,java.util.concurrent.Executor) -> finishToValueAndCloser
    380:380:com.google.common.util.concurrent.ClosingFuture from(com.google.common.util.concurrent.ListenableFuture) -> from
    1024:1024:void provideValueAndCloser(com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer,com.google.common.util.concurrent.ClosingFuture) -> provideValueAndCloser
    583:583:com.google.common.util.concurrent.ListenableFuture statusFuture() -> statusFuture
    367:367:com.google.common.util.concurrent.ClosingFuture submit(com.google.common.util.concurrent.ClosingFuture$ClosingCallable,java.util.concurrent.Executor) -> submit
    2047:2047:java.lang.String toString() -> toString
    621:635:com.google.common.util.concurrent.ClosingFuture transform(com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.util.concurrent.Executor) -> transform
    715:728:com.google.common.util.concurrent.ClosingFuture transformAsync(com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.util.concurrent.Executor) -> transformAsync
    432:432:com.google.common.util.concurrent.ClosingFuture$Combiner whenAllComplete(java.lang.Iterable) -> whenAllComplete
    443:443:com.google.common.util.concurrent.ClosingFuture$Combiner whenAllComplete(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture[]) -> whenAllComplete
    454:454:com.google.common.util.concurrent.ClosingFuture$Combiner whenAllSucceed(java.lang.Iterable) -> whenAllSucceed
    469:469:com.google.common.util.concurrent.ClosingFuture$Combiner2 whenAllSucceed(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture) -> whenAllSucceed
    484:484:com.google.common.util.concurrent.ClosingFuture$Combiner3 whenAllSucceed(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture) -> whenAllSucceed
    502:502:com.google.common.util.concurrent.ClosingFuture$Combiner4 whenAllSucceed(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture) -> whenAllSucceed
    521:521:com.google.common.util.concurrent.ClosingFuture$Combiner5 whenAllSucceed(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture) -> whenAllSucceed
    539:541:com.google.common.util.concurrent.ClosingFuture$Combiner whenAllSucceed(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture[]) -> whenAllSucceed
    2183:2183:java.util.concurrent.CountDownLatch whenClosedCountDown() -> whenClosedCountDown
    759:760:com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction withoutCloser(com.google.common.util.concurrent.AsyncFunction) -> withoutCloser
com.google.common.util.concurrent.ClosingFuture$1 -> com.google.common.util.concurrent.ClosingFuture$1:
    412:412:void <init>(com.google.common.util.concurrent.ClosingFuture,java.util.concurrent.Executor) -> <init>
    412:412:void onSuccess(java.lang.Object) -> onSuccess
    415:415:void onSuccess(java.io.Closeable) -> onSuccess
com.google.common.util.concurrent.ClosingFuture$10 -> com.google.common.util.concurrent.ClosingFuture$10:
    2064:2064:void <init>(java.io.Closeable) -> <init>
    2068:2070:void run() -> run
com.google.common.util.concurrent.ClosingFuture$11 -> com.google.common.util.concurrent.ClosingFuture$11:
    957:957:void <clinit>() -> <clinit>
com.google.common.util.concurrent.ClosingFuture$2 -> com.google.common.util.concurrent.ClosingFuture$2:
    556:556:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$ClosingCallable) -> <init>
    559:559:java.lang.Object call() -> call
    564:564:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$3 -> com.google.common.util.concurrent.ClosingFuture$3:
    623:623:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$ClosingFunction) -> <init>
    626:626:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
    631:631:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$4 -> com.google.common.util.concurrent.ClosingFuture$4:
    717:717:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction) -> <init>
    720:720:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
    725:725:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$5 -> com.google.common.util.concurrent.ClosingFuture$5:
    760:760:void <init>(com.google.common.util.concurrent.AsyncFunction) -> <init>
    763:763:com.google.common.util.concurrent.ClosingFuture apply(com.google.common.util.concurrent.ClosingFuture$DeferredCloser,java.lang.Object) -> apply
com.google.common.util.concurrent.ClosingFuture$6 -> com.google.common.util.concurrent.ClosingFuture$6:
    819:819:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$ClosingFunction) -> <init>
    819:819:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
    822:822:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Throwable) -> apply
    827:827:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$7 -> com.google.common.util.concurrent.ClosingFuture$7:
    918:918:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction) -> <init>
    918:918:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
    921:921:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Throwable) -> apply
    926:926:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$8 -> com.google.common.util.concurrent.ClosingFuture$8:
    947:947:void <init>(com.google.common.util.concurrent.ClosingFuture) -> <init>
    950:952:void run() -> run
com.google.common.util.concurrent.ClosingFuture$9 -> com.google.common.util.concurrent.ClosingFuture$9:
    1013:1013:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$ValueAndCloserConsumer) -> <init>
    1016:1016:void run() -> run
com.google.common.util.concurrent.ClosingFuture$CloseableList -> com.google.common.util.concurrent.ClosingFuture$CloseableList:
    2096:2098:void <init>() -> <init>
    2096:2096:void <init>(com.google.common.util.concurrent.ClosingFuture$1) -> <init>
    2096:2096:com.google.common.util.concurrent.ClosingFuture$DeferredCloser access$300(com.google.common.util.concurrent.ClosingFuture$CloseableList) -> access$300
    2147:2157:void add(java.io.Closeable,java.util.concurrent.Executor) -> add
    2116:2123:com.google.common.util.concurrent.FluentFuture applyAsyncClosingFunction(com.google.common.util.concurrent.ClosingFuture$AsyncClosingFunction,java.lang.Object) -> applyAsyncClosingFunction
    2105:2110:com.google.common.util.concurrent.ListenableFuture applyClosingFunction(com.google.common.util.concurrent.ClosingFuture$ClosingFunction,java.lang.Object) -> applyClosingFunction
    2128:2142:void close() -> close
    2164:2173:java.util.concurrent.CountDownLatch whenClosedCountDown() -> whenClosedCountDown
com.google.common.util.concurrent.ClosingFuture$Combiner -> com.google.common.util.concurrent.ClosingFuture$Combiner:
    1306:1306:void <clinit>() -> <clinit>
    1156:1156:void <init>(boolean,java.lang.Iterable,com.google.common.util.concurrent.ClosingFuture$1) -> <init>
    1158:1206:void <init>(boolean,java.lang.Iterable) -> <init>
    1156:1156:com.google.common.util.concurrent.ClosingFuture$CloseableList access$1300(com.google.common.util.concurrent.ClosingFuture$Combiner) -> access$1300
    1226:1239:com.google.common.util.concurrent.ClosingFuture call(com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable,java.util.concurrent.Executor) -> call
    1282:1296:com.google.common.util.concurrent.ClosingFuture callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner$AsyncCombiningCallable,java.util.concurrent.Executor) -> callAsync
    1301:1303:com.google.common.util.concurrent.Futures$FutureCombiner futureCombiner() -> futureCombiner
    1315:1315:com.google.common.collect.ImmutableList inputFutures() -> inputFutures
com.google.common.util.concurrent.ClosingFuture$Combiner$1 -> com.google.common.util.concurrent.ClosingFuture$Combiner$1:
    1227:1227:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner,com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable) -> <init>
    1230:1230:java.lang.Object call() -> call
    1235:1235:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$Combiner$2 -> com.google.common.util.concurrent.ClosingFuture$Combiner$2:
    1283:1283:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner,com.google.common.util.concurrent.ClosingFuture$Combiner$AsyncCombiningCallable) -> <init>
    1286:1286:com.google.common.util.concurrent.ListenableFuture call() -> call
    1291:1291:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$Combiner$3 -> com.google.common.util.concurrent.ClosingFuture$Combiner$3:
    1307:1307:void <init>() -> <init>
    1307:1307:java.lang.Object apply(java.lang.Object) -> apply
    1310:1310:com.google.common.util.concurrent.FluentFuture apply(com.google.common.util.concurrent.ClosingFuture) -> apply
com.google.common.util.concurrent.ClosingFuture$Combiner2 -> com.google.common.util.concurrent.ClosingFuture$Combiner2:
    1327:1327:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$1) -> <init>
    1378:1380:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture) -> <init>
    1327:1327:com.google.common.util.concurrent.ClosingFuture access$1800(com.google.common.util.concurrent.ClosingFuture$Combiner2) -> access$1800
    1327:1327:com.google.common.util.concurrent.ClosingFuture access$1900(com.google.common.util.concurrent.ClosingFuture$Combiner2) -> access$1900
    1398:1398:com.google.common.util.concurrent.ClosingFuture call(com.google.common.util.concurrent.ClosingFuture$Combiner2$ClosingFunction2,java.util.concurrent.Executor) -> call
    1452:1452:com.google.common.util.concurrent.ClosingFuture callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner2$AsyncClosingFunction2,java.util.concurrent.Executor) -> callAsync
com.google.common.util.concurrent.ClosingFuture$Combiner2$1 -> com.google.common.util.concurrent.ClosingFuture$Combiner2$1:
    1399:1399:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner2,com.google.common.util.concurrent.ClosingFuture$Combiner2$ClosingFunction2) -> <init>
    1403:1403:java.lang.Object call(com.google.common.util.concurrent.ClosingFuture$DeferredCloser,com.google.common.util.concurrent.ClosingFuture$Peeker) -> call
    1408:1408:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$Combiner2$2 -> com.google.common.util.concurrent.ClosingFuture$Combiner2$2:
    1453:1453:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner2,com.google.common.util.concurrent.ClosingFuture$Combiner2$AsyncClosingFunction2) -> <init>
    1456:1456:com.google.common.util.concurrent.ClosingFuture call(com.google.common.util.concurrent.ClosingFuture$DeferredCloser,com.google.common.util.concurrent.ClosingFuture$Peeker) -> call
    1461:1461:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$Combiner3 -> com.google.common.util.concurrent.ClosingFuture$Combiner3:
    1477:1477:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$1) -> <init>
    1540:1543:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture) -> <init>
    1477:1477:com.google.common.util.concurrent.ClosingFuture access$2000(com.google.common.util.concurrent.ClosingFuture$Combiner3) -> access$2000
    1477:1477:com.google.common.util.concurrent.ClosingFuture access$2100(com.google.common.util.concurrent.ClosingFuture$Combiner3) -> access$2100
    1477:1477:com.google.common.util.concurrent.ClosingFuture access$2200(com.google.common.util.concurrent.ClosingFuture$Combiner3) -> access$2200
    1561:1561:com.google.common.util.concurrent.ClosingFuture call(com.google.common.util.concurrent.ClosingFuture$Combiner3$ClosingFunction3,java.util.concurrent.Executor) -> call
    1619:1619:com.google.common.util.concurrent.ClosingFuture callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner3$AsyncClosingFunction3,java.util.concurrent.Executor) -> callAsync
com.google.common.util.concurrent.ClosingFuture$Combiner3$1 -> com.google.common.util.concurrent.ClosingFuture$Combiner3$1:
    1562:1562:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner3,com.google.common.util.concurrent.ClosingFuture$Combiner3$ClosingFunction3) -> <init>
    1566:1570:java.lang.Object call(com.google.common.util.concurrent.ClosingFuture$DeferredCloser,com.google.common.util.concurrent.ClosingFuture$Peeker) -> call
    1575:1575:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$Combiner3$2 -> com.google.common.util.concurrent.ClosingFuture$Combiner3$2:
    1620:1620:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner3,com.google.common.util.concurrent.ClosingFuture$Combiner3$AsyncClosingFunction3) -> <init>
    1623:1627:com.google.common.util.concurrent.ClosingFuture call(com.google.common.util.concurrent.ClosingFuture$DeferredCloser,com.google.common.util.concurrent.ClosingFuture$Peeker) -> call
    1632:1632:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$Combiner4 -> com.google.common.util.concurrent.ClosingFuture$Combiner4:
    1649:1649:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$1) -> <init>
    1730:1734:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture) -> <init>
    1649:1649:com.google.common.util.concurrent.ClosingFuture access$2300(com.google.common.util.concurrent.ClosingFuture$Combiner4) -> access$2300
    1649:1649:com.google.common.util.concurrent.ClosingFuture access$2400(com.google.common.util.concurrent.ClosingFuture$Combiner4) -> access$2400
    1649:1649:com.google.common.util.concurrent.ClosingFuture access$2500(com.google.common.util.concurrent.ClosingFuture$Combiner4) -> access$2500
    1649:1649:com.google.common.util.concurrent.ClosingFuture access$2600(com.google.common.util.concurrent.ClosingFuture$Combiner4) -> access$2600
    1752:1752:com.google.common.util.concurrent.ClosingFuture call(com.google.common.util.concurrent.ClosingFuture$Combiner4$ClosingFunction4,java.util.concurrent.Executor) -> call
    1811:1811:com.google.common.util.concurrent.ClosingFuture callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner4$AsyncClosingFunction4,java.util.concurrent.Executor) -> callAsync
com.google.common.util.concurrent.ClosingFuture$Combiner4$1 -> com.google.common.util.concurrent.ClosingFuture$Combiner4$1:
    1753:1753:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner4,com.google.common.util.concurrent.ClosingFuture$Combiner4$ClosingFunction4) -> <init>
    1757:1762:java.lang.Object call(com.google.common.util.concurrent.ClosingFuture$DeferredCloser,com.google.common.util.concurrent.ClosingFuture$Peeker) -> call
    1767:1767:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$Combiner4$2 -> com.google.common.util.concurrent.ClosingFuture$Combiner4$2:
    1812:1812:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner4,com.google.common.util.concurrent.ClosingFuture$Combiner4$AsyncClosingFunction4) -> <init>
    1815:1820:com.google.common.util.concurrent.ClosingFuture call(com.google.common.util.concurrent.ClosingFuture$DeferredCloser,com.google.common.util.concurrent.ClosingFuture$Peeker) -> call
    1825:1825:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$Combiner5 -> com.google.common.util.concurrent.ClosingFuture$Combiner5:
    1843:1843:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture$1) -> <init>
    1937:1942:void <init>(com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture,com.google.common.util.concurrent.ClosingFuture) -> <init>
    1843:1843:com.google.common.util.concurrent.ClosingFuture access$2700(com.google.common.util.concurrent.ClosingFuture$Combiner5) -> access$2700
    1843:1843:com.google.common.util.concurrent.ClosingFuture access$2800(com.google.common.util.concurrent.ClosingFuture$Combiner5) -> access$2800
    1843:1843:com.google.common.util.concurrent.ClosingFuture access$2900(com.google.common.util.concurrent.ClosingFuture$Combiner5) -> access$2900
    1843:1843:com.google.common.util.concurrent.ClosingFuture access$3000(com.google.common.util.concurrent.ClosingFuture$Combiner5) -> access$3000
    1843:1843:com.google.common.util.concurrent.ClosingFuture access$3100(com.google.common.util.concurrent.ClosingFuture$Combiner5) -> access$3100
    1961:1961:com.google.common.util.concurrent.ClosingFuture call(com.google.common.util.concurrent.ClosingFuture$Combiner5$ClosingFunction5,java.util.concurrent.Executor) -> call
    2022:2022:com.google.common.util.concurrent.ClosingFuture callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner5$AsyncClosingFunction5,java.util.concurrent.Executor) -> callAsync
com.google.common.util.concurrent.ClosingFuture$Combiner5$1 -> com.google.common.util.concurrent.ClosingFuture$Combiner5$1:
    1962:1962:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner5,com.google.common.util.concurrent.ClosingFuture$Combiner5$ClosingFunction5) -> <init>
    1966:1972:java.lang.Object call(com.google.common.util.concurrent.ClosingFuture$DeferredCloser,com.google.common.util.concurrent.ClosingFuture$Peeker) -> call
    1977:1977:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$Combiner5$2 -> com.google.common.util.concurrent.ClosingFuture$Combiner5$2:
    2023:2023:void <init>(com.google.common.util.concurrent.ClosingFuture$Combiner5,com.google.common.util.concurrent.ClosingFuture$Combiner5$AsyncClosingFunction5) -> <init>
    2026:2032:com.google.common.util.concurrent.ClosingFuture call(com.google.common.util.concurrent.ClosingFuture$DeferredCloser,com.google.common.util.concurrent.ClosingFuture$Peeker) -> call
    2037:2037:java.lang.String toString() -> toString
com.google.common.util.concurrent.ClosingFuture$DeferredCloser -> com.google.common.util.concurrent.ClosingFuture$DeferredCloser:
    206:207:void <init>(com.google.common.util.concurrent.ClosingFuture$CloseableList) -> <init>
    238:240:java.lang.Object eventuallyClose(java.lang.Object,java.util.concurrent.Executor) -> eventuallyClose
com.google.common.util.concurrent.ClosingFuture$Peeker -> com.google.common.util.concurrent.ClosingFuture$Peeker:
    1075:1075:void <init>(com.google.common.collect.ImmutableList,com.google.common.util.concurrent.ClosingFuture$1) -> <init>
    1079:1080:void <init>(com.google.common.collect.ImmutableList) -> <init>
    1075:1075:java.lang.Object access$1500(com.google.common.util.concurrent.ClosingFuture$Peeker,com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable,com.google.common.util.concurrent.ClosingFuture$CloseableList) -> access$1500
    1075:1075:com.google.common.util.concurrent.FluentFuture access$1700(com.google.common.util.concurrent.ClosingFuture$Peeker,com.google.common.util.concurrent.ClosingFuture$Combiner$AsyncCombiningCallable,com.google.common.util.concurrent.ClosingFuture$CloseableList) -> access$1700
    1105:1112:java.lang.Object call(com.google.common.util.concurrent.ClosingFuture$Combiner$CombiningCallable,com.google.common.util.concurrent.ClosingFuture$CloseableList) -> call
    1117:1126:com.google.common.util.concurrent.FluentFuture callAsync(com.google.common.util.concurrent.ClosingFuture$Combiner$AsyncCombiningCallable,com.google.common.util.concurrent.ClosingFuture$CloseableList) -> callAsync
    1097:1099:java.lang.Object getDone(com.google.common.util.concurrent.ClosingFuture) -> getDone
com.google.common.util.concurrent.ClosingFuture$State -> com.google.common.util.concurrent.ClosingFuture$State:
    2187:2216:void <clinit>() -> <clinit>
    2187:2187:void <init>(java.lang.String,int) -> <init>
    2187:2187:com.google.common.util.concurrent.ClosingFuture$State valueOf(java.lang.String) -> valueOf
    2187:2187:com.google.common.util.concurrent.ClosingFuture$State[] values() -> values
com.google.common.util.concurrent.ClosingFuture$ValueAndCloser -> com.google.common.util.concurrent.ClosingFuture$ValueAndCloser:
    313:314:void <init>(com.google.common.util.concurrent.ClosingFuture) -> <init>
    343:343:void closeAsync() -> closeAsync
    329:329:java.lang.Object get() -> get
com.google.common.util.concurrent.CollectionFuture -> com.google.common.util.concurrent.CollectionFuture:
    42:54:void <init>(com.google.common.collect.ImmutableCollection,boolean) -> <init>
    59:61:void collectOneValue(int,java.lang.Object) -> collectOneValue
    67:69:void handleAllCompleted() -> handleAllCompleted
    75:76:void releaseResources(com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason) -> releaseResources
com.google.common.util.concurrent.CollectionFuture$ListFuture -> com.google.common.util.concurrent.CollectionFuture$ListFuture:
    86:87:void <init>(com.google.common.collect.ImmutableCollection,boolean) -> <init>
    82:82:java.lang.Object combine(java.util.List) -> combine
    92:96:java.util.List combine(java.util.List) -> combine
com.google.common.util.concurrent.CollectionFuture$Present -> com.google.common.util.concurrent.CollectionFuture$Present:
    104:105:void <init>(java.lang.Object) -> <init>
com.google.common.util.concurrent.CombinedFuture -> com.google.common.util.concurrent.CombinedFuture:
    40:42:void <init>(com.google.common.collect.ImmutableCollection,boolean,java.util.concurrent.Executor,com.google.common.util.concurrent.AsyncCallable) -> <init>
    50:52:void <init>(com.google.common.collect.ImmutableCollection,boolean,java.util.concurrent.Executor,java.util.concurrent.Callable) -> <init>
    32:32:com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask access$002(com.google.common.util.concurrent.CombinedFuture,com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask) -> access$002
    60:62:void handleAllCompleted() -> handleAllCompleted
    83:85:void interruptTask() -> interruptTask
    68:77:void releaseResources(com.google.common.util.concurrent.AggregateFuture$ReleaseResourcesReason) -> releaseResources
com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask -> com.google.common.util.concurrent.CombinedFuture$AsyncCallableInterruptibleTask:
    146:148:void <init>(com.google.common.util.concurrent.CombinedFuture,com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor) -> <init>
    141:141:java.lang.Object runInterruptibly() -> runInterruptibly
    153:154:com.google.common.util.concurrent.ListenableFuture runInterruptibly() -> runInterruptibly
    141:141:void setValue(java.lang.Object) -> setValue
    163:163:void setValue(com.google.common.util.concurrent.ListenableFuture) -> setValue
    168:168:java.lang.String toPendingString() -> toPendingString
com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask -> com.google.common.util.concurrent.CombinedFuture$CallableInterruptibleTask:
    176:178:void <init>(com.google.common.util.concurrent.CombinedFuture,java.util.concurrent.Callable,java.util.concurrent.Executor) -> <init>
    183:183:java.lang.Object runInterruptibly() -> runInterruptibly
    188:188:void setValue(java.lang.Object) -> setValue
    193:193:java.lang.String toPendingString() -> toPendingString
com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask -> com.google.common.util.concurrent.CombinedFuture$CombinedFutureInterruptibleTask:
    93:94:void <init>(com.google.common.util.concurrent.CombinedFuture,java.util.concurrent.Executor) -> <init>
    123:134:void afterRanInterruptibly(java.lang.Object,java.lang.Throwable) -> afterRanInterruptibly
    104:106:void execute() -> execute
    99:99:boolean isDone() -> isDone
com.google.common.util.concurrent.CycleDetectingLockFactory -> com.google.common.util.concurrent.CycleDetectingLockFactory:
    272:459:void <clinit>() -> <clinit>
    165:165:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
    449:450:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> <init>
    708:712:void aboutToAcquire(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> aboutToAcquire
    165:165:java.util.logging.Logger access$100() -> access$100
    165:165:void access$600(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> access$600
    165:165:void access$700(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> access$700
    304:322:java.util.Map createNodes(java.lang.Class) -> createNodes
    330:330:java.lang.String getLockName(java.lang.Enum) -> getLockName
    287:293:java.util.Map getOrCreateNodes(java.lang.Class) -> getOrCreateNodes
    722:729:void lockStateChanged(com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> lockStateChanged
    236:236:com.google.common.util.concurrent.CycleDetectingLockFactory newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> newInstance
    279:283:com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering newInstanceWithExplicitOrdering(java.lang.Class,com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> newInstanceWithExplicitOrdering
    241:241:java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String) -> newReentrantLock
    249:251:java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String,boolean) -> newReentrantLock
    256:256:java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String) -> newReentrantReadWriteLock
    265:267:java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String,boolean) -> newReentrantReadWriteLock
com.google.common.util.concurrent.CycleDetectingLockFactory$1 -> com.google.common.util.concurrent.CycleDetectingLockFactory$1:
    460:460:void <init>() -> <init>
    460:460:java.lang.Object initialValue() -> initialValue
    463:463:java.util.ArrayList initialValue() -> initialValue
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock -> com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock:
    736:736:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
    740:742:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean) -> <init>
    749:749:com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> getLockGraphNode
    754:754:boolean isAcquiredByCurrentThread() -> isAcquiredByCurrentThread
    761:766:void lock() -> lock
    771:776:void lockInterruptibly() -> lockInterruptibly
    781:786:boolean tryLock() -> tryLock
    791:796:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    802:805:void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock -> com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock:
    857:859:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock) -> <init>
    864:869:void lock() -> lock
    874:879:void lockInterruptibly() -> lockInterruptibly
    884:889:boolean tryLock() -> tryLock
    894:899:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    905:908:void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock -> com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock:
    809:809:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
    821:825:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,boolean) -> <init>
    844:844:com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> getLockGraphNode
    849:849:boolean isAcquiredByCurrentThread() -> isAcquiredByCurrentThread
    809:809:java.util.concurrent.locks.Lock readLock() -> readLock
    832:832:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock() -> readLock
    809:809:java.util.concurrent.locks.Lock writeLock() -> writeLock
    837:837:java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock() -> writeLock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock -> com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock:
    916:918:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock) -> <init>
    923:928:void lock() -> lock
    933:938:void lockInterruptibly() -> lockInterruptibly
    943:948:boolean tryLock() -> tryLock
    953:958:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    964:967:void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace -> com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace:
    482:488:void <clinit>() -> <clinit>
    491:500:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode) -> <init>
com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode -> com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode:
    581:594:void <init>(java.lang.String) -> <init>
    623:666:void checkAcquiredLock(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode) -> checkAcquiredLock
    602:603:void checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.List) -> checkAcquiredLocks
    679:696:com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set) -> findPathTo
    598:598:java.lang.String getLockName() -> getLockName
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies:
    194:228:void <clinit>() -> <clinit>
    195:195:void <init>(java.lang.String,int) -> <init>
    195:195:void <init>(java.lang.String,int,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
    194:194:com.google.common.util.concurrent.CycleDetectingLockFactory$Policies valueOf(java.lang.String) -> valueOf
    194:194:com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] values() -> values
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1 -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1:
    201:201:void <init>(java.lang.String,int) -> <init>
    204:204:void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2 -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2:
    213:213:void <init>(java.lang.String,int) -> <init>
    216:216:void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3 -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3:
    228:228:void <init>(java.lang.String,int) -> <init>
com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException -> com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException:
    528:528:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace,com.google.common.util.concurrent.CycleDetectingLockFactory$1) -> <init>
    534:536:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace) -> <init>
    540:540:com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace getConflictingStackTrace() -> getConflictingStackTrace
    549:553:java.lang.String getMessage() -> getMessage
com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering -> com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering:
    400:401:void <init>(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.Map) -> <init>
    406:406:java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.Enum) -> newReentrantLock
    418:420:java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.Enum,boolean) -> newReentrantLock
    425:425:java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.Enum) -> newReentrantReadWriteLock
    437:439:java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.Enum,boolean) -> newReentrantReadWriteLock
com.google.common.util.concurrent.DirectExecutor -> com.google.common.util.concurrent.DirectExecutor:
    24:26:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    30:30:void execute(java.lang.Runnable) -> execute
    24:24:com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String) -> valueOf
    24:24:com.google.common.util.concurrent.DirectExecutor[] values() -> values
com.google.common.util.concurrent.ExecutionError -> com.google.common.util.concurrent.ExecutionError:
    33:33:void <init>() -> <init>
    37:37:void <init>(java.lang.String) -> <init>
    42:42:void <init>(java.lang.String,java.lang.Error) -> <init>
    47:47:void <init>(java.lang.Error) -> <init>
com.google.common.util.concurrent.ExecutionList -> com.google.common.util.concurrent.ExecutionList:
    45:45:void <clinit>() -> <clinit>
    59:59:void <init>() -> <init>
    72:88:void add(java.lang.Runnable,java.util.concurrent.Executor) -> add
    106:132:void execute() -> execute
    142:147:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair -> com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair:
    159:162:void <init>(java.lang.Runnable,java.util.concurrent.Executor,com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair) -> <init>
com.google.common.util.concurrent.ExecutionSequencer -> com.google.common.util.concurrent.ExecutionSequencer:
    83:94:void <init>() -> <init>
    81:81:com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue access$400(com.google.common.util.concurrent.ExecutionSequencer) -> access$400
    81:81:com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue access$402(com.google.common.util.concurrent.ExecutionSequencer,com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue) -> access$402
    87:87:com.google.common.util.concurrent.ExecutionSequencer create() -> create
    140:142:com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable,java.util.concurrent.Executor) -> submit
    166:253:com.google.common.util.concurrent.ListenableFuture submitAsync(com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor) -> submitAsync
com.google.common.util.concurrent.ExecutionSequencer$1 -> com.google.common.util.concurrent.ExecutionSequencer$1:
    143:143:void <init>(com.google.common.util.concurrent.ExecutionSequencer,java.util.concurrent.Callable) -> <init>
    146:146:com.google.common.util.concurrent.ListenableFuture call() -> call
    151:151:java.lang.String toString() -> toString
com.google.common.util.concurrent.ExecutionSequencer$2 -> com.google.common.util.concurrent.ExecutionSequencer$2:
    170:170:void <init>(com.google.common.util.concurrent.ExecutionSequencer,com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor,com.google.common.util.concurrent.AsyncCallable) -> <init>
    173:176:com.google.common.util.concurrent.ListenableFuture call() -> call
    181:181:java.lang.String toString() -> toString
com.google.common.util.concurrent.ExecutionSequencer$3 -> com.google.common.util.concurrent.ExecutionSequencer$3:
    210:210:void <init>(com.google.common.util.concurrent.ExecutionSequencer,com.google.common.util.concurrent.TrustedListenableFutureTask,com.google.common.util.concurrent.SettableFuture,com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor) -> <init>
    213:245:void run() -> run
com.google.common.util.concurrent.ExecutionSequencer$RunningState -> com.google.common.util.concurrent.ExecutionSequencer$RunningState:
    258:261:void <clinit>() -> <clinit>
    258:258:void <init>(java.lang.String,int) -> <init>
    258:258:com.google.common.util.concurrent.ExecutionSequencer$RunningState valueOf(java.lang.String) -> valueOf
    258:258:com.google.common.util.concurrent.ExecutionSequencer$RunningState[] values() -> values
com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor -> com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor:
    283:283:void <init>(java.util.concurrent.Executor,com.google.common.util.concurrent.ExecutionSequencer,com.google.common.util.concurrent.ExecutionSequencer$1) -> <init>
    308:310:void <init>(java.util.concurrent.Executor,com.google.common.util.concurrent.ExecutionSequencer) -> <init>
    283:283:boolean access$200(com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor) -> access$200
    283:283:boolean access$300(com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor) -> access$300
    324:354:void execute(java.lang.Runnable) -> execute
    360:405:void run() -> run
    413:413:boolean trySetCancelled() -> trySetCancelled
    409:409:boolean trySetStarted() -> trySetStarted
com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue -> com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue:
    101:101:void <init>() -> <init>
    101:101:void <init>(com.google.common.util.concurrent.ExecutionSequencer$1) -> <init>
com.google.common.util.concurrent.FakeTimeLimiter -> com.google.common.util.concurrent.FakeTimeLimiter:
    39:39:void <init>() -> <init>
    72:72:java.lang.Object callUninterruptiblyWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> callUninterruptiblyWithTimeout
    52:65:java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> callWithTimeout
    43:45:java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    95:95:void runUninterruptiblyWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> runUninterruptiblyWithTimeout
    77:88:void runWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> runWithTimeout
com.google.common.util.concurrent.FluentFuture -> com.google.common.util.concurrent.FluentFuture:
    118:118:void <init>() -> <init>
    386:386:void addCallback(com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor) -> addCallback
    184:184:com.google.common.util.concurrent.FluentFuture catching(java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor) -> catching
    248:248:com.google.common.util.concurrent.FluentFuture catchingAsync(java.lang.Class,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> catchingAsync
    128:130:com.google.common.util.concurrent.FluentFuture from(com.google.common.util.concurrent.ListenableFuture) -> from
    141:141:com.google.common.util.concurrent.FluentFuture from(com.google.common.util.concurrent.FluentFuture) -> from
    345:345:com.google.common.util.concurrent.FluentFuture transform(com.google.common.base.Function,java.util.concurrent.Executor) -> transform
    309:309:com.google.common.util.concurrent.FluentFuture transformAsync(com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> transformAsync
    265:265:com.google.common.util.concurrent.FluentFuture withTimeout(long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService) -> withTimeout
com.google.common.util.concurrent.FluentFuture$TrustedFuture -> com.google.common.util.concurrent.FluentFuture$TrustedFuture:
    81:81:void <init>() -> <init>
    108:108:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    114:114:boolean cancel(boolean) -> cancel
    86:86:java.lang.Object get() -> get
    93:93:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    103:103:boolean isCancelled() -> isCancelled
    98:98:boolean isDone() -> isDone
com.google.common.util.concurrent.ForwardingBlockingDeque -> com.google.common.util.concurrent.ForwardingBlockingDeque:
    51:51:void <init>() -> <init>
    46:46:java.lang.Object delegate() -> delegate
    46:46:java.util.Collection delegate() -> delegate
    46:46:java.util.Deque delegate() -> delegate
    46:46:java.util.Queue delegate() -> delegate
    123:123:int drainTo(java.util.Collection) -> drainTo
    128:128:int drainTo(java.util.Collection,int) -> drainTo
    108:108:boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    73:73:boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    78:78:boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    118:118:java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    93:93:java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    98:98:java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    103:103:void put(java.lang.Object) -> put
    63:63:void putFirst(java.lang.Object) -> putFirst
    68:68:void putLast(java.lang.Object) -> putLast
    58:58:int remainingCapacity() -> remainingCapacity
    113:113:java.lang.Object take() -> take
    83:83:java.lang.Object takeFirst() -> takeFirst
    88:88:java.lang.Object takeLast() -> takeLast
com.google.common.util.concurrent.ForwardingBlockingQueue -> com.google.common.util.concurrent.ForwardingBlockingQueue:
    44:44:void <init>() -> <init>
    38:38:java.lang.Object delegate() -> delegate
    38:38:java.util.Collection delegate() -> delegate
    38:38:java.util.Queue delegate() -> delegate
    51:51:int drainTo(java.util.Collection,int) -> drainTo
    56:56:int drainTo(java.util.Collection) -> drainTo
    61:61:boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    66:66:java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    71:71:void put(java.lang.Object) -> put
    76:76:int remainingCapacity() -> remainingCapacity
    81:81:java.lang.Object take() -> take
com.google.common.util.concurrent.ForwardingCondition -> com.google.common.util.concurrent.ForwardingCondition:
    22:22:void <init>() -> <init>
    27:27:void await() -> await
    32:32:boolean await(long,java.util.concurrent.TimeUnit) -> await
    42:42:long awaitNanos(long) -> awaitNanos
    37:37:void awaitUninterruptibly() -> awaitUninterruptibly
    47:47:boolean awaitUntil(java.util.Date) -> awaitUntil
    52:52:void signal() -> signal
    57:57:void signalAll() -> signalAll
com.google.common.util.concurrent.ForwardingExecutorService -> com.google.common.util.concurrent.ForwardingExecutorService:
    42:42:void <init>() -> <init>
    49:49:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    37:37:java.lang.Object delegate() -> delegate
    99:99:void execute(java.lang.Runnable) -> execute
    55:55:java.util.List invokeAll(java.util.Collection) -> invokeAll
    62:62:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    68:68:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    74:74:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    79:79:boolean isShutdown() -> isShutdown
    84:84:boolean isTerminated() -> isTerminated
    89:89:void shutdown() -> shutdown
    94:94:java.util.List shutdownNow() -> shutdownNow
    104:104:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    109:109:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    114:114:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
com.google.common.util.concurrent.ForwardingFluentFuture -> com.google.common.util.concurrent.ForwardingFluentFuture:
    39:40:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    45:45:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    50:50:boolean cancel(boolean) -> cancel
    65:65:java.lang.Object get() -> get
    71:71:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    55:55:boolean isCancelled() -> isCancelled
    60:60:boolean isDone() -> isDone
    76:76:java.lang.String toString() -> toString
com.google.common.util.concurrent.ForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture:
    40:40:void <init>() -> <init>
    47:47:boolean cancel(boolean) -> cancel
    36:36:java.lang.Object delegate() -> delegate
    62:62:java.lang.Object get() -> get
    68:68:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    52:52:boolean isCancelled() -> isCancelled
    57:57:boolean isDone() -> isDone
com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture:
    81:82:void <init>(java.util.concurrent.Future) -> <init>
    78:78:java.lang.Object delegate() -> delegate
    87:87:java.util.concurrent.Future delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture:
    38:38:void <init>() -> <init>
    45:45:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    32:32:java.lang.Object delegate() -> delegate
    32:32:java.util.concurrent.Future delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture:
    59:60:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    55:55:java.lang.Object delegate() -> delegate
    55:55:java.util.concurrent.Future delegate() -> delegate
    65:65:com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
com.google.common.util.concurrent.ForwardingListeningExecutorService -> com.google.common.util.concurrent.ForwardingListeningExecutorService:
    35:35:void <init>() -> <init>
    30:30:java.lang.Object delegate() -> delegate
    30:30:java.util.concurrent.ExecutorService delegate() -> delegate
    30:30:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    30:30:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    30:30:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    42:42:com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    47:47:com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    52:52:com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
com.google.common.util.concurrent.ForwardingLock -> com.google.common.util.concurrent.ForwardingLock:
    22:22:void <init>() -> <init>
    27:27:void lock() -> lock
    32:32:void lockInterruptibly() -> lockInterruptibly
    52:52:java.util.concurrent.locks.Condition newCondition() -> newCondition
    37:37:boolean tryLock() -> tryLock
    42:42:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    47:47:void unlock() -> unlock
com.google.common.util.concurrent.Futures -> com.google.common.util.concurrent.Futures:
    121:121:void <init>() -> <init>
    1013:1014:void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor) -> addCallback
    534:534:com.google.common.util.concurrent.ListenableFuture allAsList(com.google.common.util.concurrent.ListenableFuture[]) -> allAsList
    556:556:com.google.common.util.concurrent.ListenableFuture allAsList(java.lang.Iterable) -> allAsList
    282:282:com.google.common.util.concurrent.ListenableFuture catching(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.base.Function,java.util.concurrent.Executor) -> catching
    347:347:com.google.common.util.concurrent.ListenableFuture catchingAsync(com.google.common.util.concurrent.ListenableFuture,java.lang.Class,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> catchingAsync
    1140:1140:java.lang.Object getChecked(java.util.concurrent.Future,java.lang.Class) -> getChecked
    1192:1192:java.lang.Object getChecked(java.util.concurrent.Future,java.lang.Class,long,java.util.concurrent.TimeUnit) -> getChecked
    1089:1090:java.lang.Object getDone(java.util.concurrent.Future) -> getDone
    1231:1236:java.lang.Object getUnchecked(java.util.concurrent.Future) -> getUnchecked
    168:168:com.google.common.util.concurrent.ListenableFuture immediateCancelledFuture() -> immediateCancelledFuture
    157:158:com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable) -> immediateFailedFuture
    132:135:com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object) -> immediateFuture
    146:146:com.google.common.util.concurrent.ListenableFuture immediateVoidFuture() -> immediateVoidFuture
    839:864:com.google.common.collect.ImmutableList inCompletionOrder(java.lang.Iterable) -> inCompletionOrder
    475:477:java.util.concurrent.Future lazyTransform(java.util.concurrent.Future,com.google.common.base.Function) -> lazyTransform
    722:726:com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture) -> nonCancellationPropagating
    225:235:com.google.common.util.concurrent.ListenableFuture scheduleAsync(com.google.common.util.concurrent.AsyncCallable,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService) -> scheduleAsync
    179:180:com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable,java.util.concurrent.Executor) -> submit
    193:194:com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.util.concurrent.Executor) -> submit
    206:207:com.google.common.util.concurrent.ListenableFuture submitAsync(com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor) -> submitAsync
    786:786:com.google.common.util.concurrent.ListenableFuture successfulAsList(com.google.common.util.concurrent.ListenableFuture[]) -> successfulAsList
    810:810:com.google.common.util.concurrent.ListenableFuture successfulAsList(java.lang.Iterable) -> successfulAsList
    448:448:com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor) -> transform
    413:413:com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> transformAsync
    570:570:com.google.common.util.concurrent.Futures$FutureCombiner whenAllComplete(com.google.common.util.concurrent.ListenableFuture[]) -> whenAllComplete
    584:584:com.google.common.util.concurrent.Futures$FutureCombiner whenAllComplete(java.lang.Iterable) -> whenAllComplete
    597:597:com.google.common.util.concurrent.Futures$FutureCombiner whenAllSucceed(com.google.common.util.concurrent.ListenableFuture[]) -> whenAllSucceed
    610:610:com.google.common.util.concurrent.Futures$FutureCombiner whenAllSucceed(java.lang.Iterable) -> whenAllSucceed
    370:373:com.google.common.util.concurrent.ListenableFuture withTimeout(com.google.common.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService) -> withTimeout
    1241:1249:void wrapAndThrowUnchecked(java.lang.Throwable) -> wrapAndThrowUnchecked
com.google.common.util.concurrent.Futures$1 -> com.google.common.util.concurrent.Futures$1:
    228:228:void <init>(java.util.concurrent.Future) -> <init>
    232:232:void run() -> run
com.google.common.util.concurrent.Futures$2 -> com.google.common.util.concurrent.Futures$2:
    477:477:void <init>(java.util.concurrent.Future,com.google.common.base.Function) -> <init>
    507:509:java.lang.Object applyTransformation(java.lang.Object) -> applyTransformation
    481:481:boolean cancel(boolean) -> cancel
    496:496:java.lang.Object get() -> get
    502:502:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    486:486:boolean isCancelled() -> isCancelled
    491:491:boolean isDone() -> isDone
com.google.common.util.concurrent.Futures$3 -> com.google.common.util.concurrent.Futures$3:
    858:858:void <init>(com.google.common.util.concurrent.Futures$InCompletionOrderState,com.google.common.collect.ImmutableList,int) -> <init>
    861:861:void run() -> run
com.google.common.util.concurrent.Futures$CallbackListener -> com.google.common.util.concurrent.Futures$CallbackListener:
    1022:1024:void <init>(java.util.concurrent.Future,com.google.common.util.concurrent.FutureCallback) -> <init>
    1029:1047:void run() -> run
    1052:1052:java.lang.String toString() -> toString
com.google.common.util.concurrent.Futures$FutureCombiner -> com.google.common.util.concurrent.Futures$FutureCombiner:
    642:642:void <init>(boolean,com.google.common.collect.ImmutableList,com.google.common.util.concurrent.Futures$1) -> <init>
    647:649:void <init>(boolean,com.google.common.collect.ImmutableList) -> <init>
    686:686:com.google.common.util.concurrent.ListenableFuture call(java.util.concurrent.Callable,java.util.concurrent.Executor) -> call
    667:667:com.google.common.util.concurrent.ListenableFuture callAsync(com.google.common.util.concurrent.AsyncCallable,java.util.concurrent.Executor) -> callAsync
    701:701:com.google.common.util.concurrent.ListenableFuture run(java.lang.Runnable,java.util.concurrent.Executor) -> run
com.google.common.util.concurrent.Futures$FutureCombiner$1 -> com.google.common.util.concurrent.Futures$FutureCombiner$1:
    702:702:void <init>(com.google.common.util.concurrent.Futures$FutureCombiner,java.lang.Runnable) -> <init>
    702:702:java.lang.Object call() -> call
    705:705:java.lang.Void call() -> call
com.google.common.util.concurrent.Futures$InCompletionOrderFuture -> com.google.common.util.concurrent.Futures$InCompletionOrderFuture:
    875:875:void <init>(com.google.common.util.concurrent.Futures$InCompletionOrderState,com.google.common.util.concurrent.Futures$1) -> <init>
    878:879:void <init>(com.google.common.util.concurrent.Futures$InCompletionOrderState) -> <init>
    894:894:void afterDone() -> afterDone
    884:886:boolean cancel(boolean) -> cancel
    899:906:java.lang.String pendingToString() -> pendingToString
com.google.common.util.concurrent.Futures$InCompletionOrderState -> com.google.common.util.concurrent.Futures$InCompletionOrderState:
    913:913:void <init>(com.google.common.util.concurrent.ListenableFuture[],com.google.common.util.concurrent.Futures$1) -> <init>
    917:925:void <init>(com.google.common.util.concurrent.ListenableFuture[]) -> <init>
    913:913:void access$300(com.google.common.util.concurrent.Futures$InCompletionOrderState,com.google.common.collect.ImmutableList,int) -> access$300
    913:913:void access$400(com.google.common.util.concurrent.Futures$InCompletionOrderState,boolean) -> access$400
    913:913:com.google.common.util.concurrent.ListenableFuture[] access$500(com.google.common.util.concurrent.Futures$InCompletionOrderState) -> access$500
    913:913:java.util.concurrent.atomic.AtomicInteger access$600(com.google.common.util.concurrent.Futures$InCompletionOrderState) -> access$600
    958:961:void recordCompletion() -> recordCompletion
    940:954:void recordInputCompletion(com.google.common.collect.ImmutableList,int) -> recordInputCompletion
    929:935:void recordOutputCancellation(boolean) -> recordOutputCancellation
com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture -> com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture:
    735:736:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    760:760:void afterDone() -> afterDone
    751:753:java.lang.String pendingToString() -> pendingToString
    743:745:void run() -> run
com.google.common.util.concurrent.FuturesGetChecked -> com.google.common.util.concurrent.FuturesGetChecked:
    249:257:void <clinit>() -> <clinit>
    301:301:void <init>() -> <init>
    90:90:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator bestGetCheckedTypeValidator() -> bestGetCheckedTypeValidator
    290:295:void checkExceptionClassValidity(java.lang.Class) -> checkExceptionClassValidity
    101:101:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator classValueValidator() -> classValueValidator
    45:45:java.lang.Object getChecked(java.util.concurrent.Future,java.lang.Class) -> getChecked
    53:61:java.lang.Object getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator,java.util.concurrent.Future,java.lang.Class) -> getChecked
    70:80:java.lang.Object getChecked(java.util.concurrent.Future,java.lang.Class,long,java.util.concurrent.TimeUnit) -> getChecked
    216:216:boolean hasConstructorUsableByGetChecked(java.lang.Class) -> hasConstructorUsableByGetChecked
    285:285:boolean isCheckedException(java.lang.Class) -> isCheckedException
    261:274:java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable) -> newFromConstructor
    226:236:java.lang.Exception newWithCause(java.lang.Class,java.lang.Throwable) -> newWithCause
    245:245:java.util.List preferringStrings(java.util.List) -> preferringStrings
    95:95:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator weakSetValidator() -> weakSetValidator
    199:205:void wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class) -> wrapAndThrowExceptionOrError
com.google.common.util.concurrent.FuturesGetChecked$1 -> com.google.common.util.concurrent.FuturesGetChecked$1:
    251:251:void <init>() -> <init>
    251:251:java.lang.Object apply(java.lang.Object) -> apply
    254:254:java.lang.Boolean apply(java.lang.reflect.Constructor) -> apply
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder:
    112:115:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    188:191:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator getBestValidator() -> getBestValidator
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator:
    117:126:void <clinit>() -> <clinit>
    119:119:void <init>(java.lang.String,int) -> <init>
    137:137:void validateClass(java.lang.Class) -> validateClass
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator valueOf(java.lang.String) -> valueOf
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator[] values() -> values
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1 -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1:
    127:127:void <init>() -> <init>
    127:127:java.lang.Object computeValue(java.lang.Class) -> computeValue
    130:131:java.lang.Boolean computeValue(java.lang.Class) -> computeValue
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator:
    141:152:void <clinit>() -> <clinit>
    141:141:void <init>(java.lang.String,int) -> <init>
    157:178:void validateClass(java.lang.Class) -> validateClass
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator valueOf(java.lang.String) -> valueOf
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator[] values() -> values
com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization -> com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization:
    25:25:void <init>() -> <init>
com.google.common.util.concurrent.GwtFuturesCatchingSpecialization -> com.google.common.util.concurrent.GwtFuturesCatchingSpecialization:
    26:26:void <init>() -> <init>
com.google.common.util.concurrent.ImmediateFuture -> com.google.common.util.concurrent.ImmediateFuture:
    32:34:void <clinit>() -> <clinit>
    38:39:void <init>(java.lang.Object) -> <init>
    44:51:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    66:66:java.lang.Object get() -> get
    71:72:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    88:88:java.lang.String toString() -> toString
com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture -> com.google.common.util.concurrent.ImmediateFuture$ImmediateCancelledFuture:
    98:99:void <init>() -> <init>
com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture -> com.google.common.util.concurrent.ImmediateFuture$ImmediateFailedFuture:
    92:93:void <init>(java.lang.Throwable) -> <init>
com.google.common.util.concurrent.InterruptibleTask -> com.google.common.util.concurrent.InterruptibleTask:
    35:46:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    164:177:void interruptTask() -> interruptTask
    59:133:void run() -> run
    183:195:java.lang.String toString() -> toString
com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable -> com.google.common.util.concurrent.InterruptibleTask$DoNothingRunnable:
    38:38:void <init>() -> <init>
    38:38:void <init>(com.google.common.util.concurrent.InterruptibleTask$1) -> <init>
com.google.common.util.concurrent.JdkFutureAdapters -> com.google.common.util.concurrent.JdkFutureAdapters:
    170:170:void <init>() -> <init>
    53:56:com.google.common.util.concurrent.ListenableFuture listenInPoolThread(java.util.concurrent.Future) -> listenInPoolThread
    80:84:com.google.common.util.concurrent.ListenableFuture listenInPoolThread(java.util.concurrent.Future,java.util.concurrent.Executor) -> listenInPoolThread
com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter -> com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter:
    99:105:void <clinit>() -> <clinit>
    120:120:void <init>(java.util.concurrent.Future) -> <init>
    110:125:void <init>(java.util.concurrent.Future,java.util.concurrent.Executor) -> <init>
    96:96:java.util.concurrent.Future access$000(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> access$000
    96:96:com.google.common.util.concurrent.ExecutionList access$100(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> access$100
    135:148:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    96:96:java.lang.Object delegate() -> delegate
    130:130:java.util.concurrent.Future delegate() -> delegate
com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1 -> com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1:
    149:149:void <init>(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> <init>
    158:163:void run() -> run
com.google.common.util.concurrent.ListenableFutureTask -> com.google.common.util.concurrent.ListenableFutureTask:
    50:78:void <init>(java.util.concurrent.Callable) -> <init>
    50:82:void <init>(java.lang.Runnable,java.lang.Object) -> <init>
    87:87:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    60:60:com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable) -> create
    74:74:com.google.common.util.concurrent.ListenableFutureTask create(java.lang.Runnable,java.lang.Object) -> create
    107:107:void done() -> done
    95:101:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
com.google.common.util.concurrent.ListenerCallQueue -> com.google.common.util.concurrent.ListenerCallQueue:
    58:58:void <clinit>() -> <clinit>
    56:62:void <init>() -> <init>
    56:56:java.util.logging.Logger access$000() -> access$000
    75:77:void addListener(java.lang.Object,java.util.concurrent.Executor) -> addListener
    119:120:void dispatch() -> dispatch
    89:89:void enqueue(com.google.common.util.concurrent.ListenerCallQueue$Event) -> enqueue
    99:99:void enqueue(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.String) -> enqueue
    103:109:void enqueueHelper(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.Object) -> enqueueHelper
com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue -> com.google.common.util.concurrent.ListenerCallQueue$PerListenerQueue:
    136:146:void <init>(java.lang.Object,java.util.concurrent.Executor) -> <init>
    151:153:void add(com.google.common.util.concurrent.ListenerCallQueue$Event,java.lang.Object) -> add
    161:180:void dispatch() -> dispatch
    192:222:void run() -> run
com.google.common.util.concurrent.ListeningExecutorService$-CC -> com.google.common.util.concurrent.ListeningExecutorService$-CC:
    35:35:java.util.concurrent.Future com.google.common.util.concurrent.ListeningExecutorService.submit(java.lang.Runnable) -> $default$submit
    35:35:java.util.concurrent.Future com.google.common.util.concurrent.ListeningExecutorService.submit(java.lang.Runnable,java.lang.Object) -> $default$submit
    35:35:java.util.concurrent.Future com.google.common.util.concurrent.ListeningExecutorService.submit(java.util.concurrent.Callable) -> $default$submit
com.google.common.util.concurrent.ListeningScheduledExecutorService$-CC -> com.google.common.util.concurrent.ListeningScheduledExecutorService$-CC:
    31:31:java.util.concurrent.ScheduledFuture com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> $default$schedule
    31:31:java.util.concurrent.ScheduledFuture com.google.common.util.concurrent.ListeningScheduledExecutorService.schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> $default$schedule
    31:31:java.util.concurrent.ScheduledFuture com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> $default$scheduleAtFixedRate
    31:31:java.util.concurrent.ScheduledFuture com.google.common.util.concurrent.ListeningScheduledExecutorService.scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> $default$scheduleWithFixedDelay
com.google.common.util.concurrent.Monitor -> com.google.common.util.concurrent.Monitor:
    348:348:void <init>() -> <init>
    340:359:void <init>(boolean) -> <init>
    203:203:java.util.concurrent.locks.ReentrantLock access$000(com.google.common.util.concurrent.Monitor) -> access$000
    1069:1078:void await(com.google.common.util.concurrent.Monitor$Guard,boolean) -> await
    1108:1120:boolean awaitNanos(com.google.common.util.concurrent.Monitor$Guard,long,boolean) -> awaitNanos
    1084:1093:void awaitUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,boolean) -> awaitUninterruptibly
    1032:1036:void beginWaitingFor(com.google.common.util.concurrent.Monitor$Guard) -> beginWaitingFor
    1043:1053:void endWaitingFor(com.google.common.util.concurrent.Monitor$Guard) -> endWaitingFor
    364:364:void enter() -> enter
    374:394:boolean enter(long,java.util.concurrent.TimeUnit) -> enter
    610:623:boolean enterIf(com.google.common.util.concurrent.Monitor$Guard) -> enterIf
    634:648:boolean enterIf(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterIf
    659:672:boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> enterIfInterruptibly
    684:699:boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterIfInterruptibly
    403:403:void enterInterruptibly() -> enterInterruptibly
    414:414:boolean enterInterruptibly(long,java.util.concurrent.TimeUnit) -> enterInterruptibly
    434:451:void enterWhen(com.google.common.util.concurrent.Monitor$Guard) -> enterWhen
    464:511:boolean enterWhen(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterWhen
    516:533:void enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> enterWhenUninterruptibly
    544:600:boolean enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterWhenUninterruptibly
    856:856:int getOccupiedDepth() -> getOccupiedDepth
    866:866:int getQueueLength() -> getQueueLength
    906:914:int getWaitQueueLength(com.google.common.util.concurrent.Monitor$Guard) -> getWaitQueueLength
    886:886:boolean hasQueuedThread(java.lang.Thread) -> hasQueuedThread
    876:876:boolean hasQueuedThreads() -> hasQueuedThreads
    896:896:boolean hasWaiters(com.google.common.util.concurrent.Monitor$Guard) -> hasWaiters
    935:935:long initNanoTime(long) -> initNanoTime
    832:832:boolean isFair() -> isFair
    840:840:boolean isOccupied() -> isOccupied
    848:848:boolean isOccupiedByCurrentThread() -> isOccupiedByCurrentThread
    1014:1017:boolean isSatisfied(com.google.common.util.concurrent.Monitor$Guard) -> isSatisfied
    819:827:void leave() -> leave
    952:952:long remainingNanos(long,long) -> remainingNanos
    1024:1025:void signalAllWaiters() -> signalAllWaiters
    981:983:void signalNextWaiter() -> signalNextWaiter
    923:924:long toSafeNanos(long,java.util.concurrent.TimeUnit) -> toSafeNanos
    425:425:boolean tryEnter() -> tryEnter
    711:726:boolean tryEnterIf(com.google.common.util.concurrent.Monitor$Guard) -> tryEnterIf
    736:740:void waitFor(com.google.common.util.concurrent.Monitor$Guard) -> waitFor
    753:763:boolean waitFor(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> waitFor
    771:775:void waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> waitForUninterruptibly
    787:814:boolean waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> waitForUninterruptibly
com.google.common.util.concurrent.Monitor$Guard -> com.google.common.util.concurrent.Monitor$Guard:
    309:319:void <init>(com.google.common.util.concurrent.Monitor) -> <init>
com.google.common.util.concurrent.MoreExecutors -> com.google.common.util.concurrent.MoreExecutors:
    64:64:void <init>() -> <init>
    63:63:void access$000(java.util.concurrent.ThreadPoolExecutor) -> access$000
    164:164:void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> addDelayedShutdownHook
    418:418:java.util.concurrent.Executor directExecutor() -> directExecutor
    84:84:java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingExecutorService
    103:103:java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor) -> getExitingExecutorService
    124:125:java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingScheduledExecutorService
    145:145:java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor) -> getExitingScheduledExecutorService
    676:742:java.lang.Object invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long,java.util.concurrent.TimeUnit) -> invokeAnyImpl
    804:816:boolean isAppEngineWithApiClasses() -> isAppEngineWithApiClasses
    485:489:com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService) -> listeningDecorator
    511:513:com.google.common.util.concurrent.ListeningScheduledExecutorService listeningDecorator(java.util.concurrent.ScheduledExecutorService) -> listeningDecorator
    368:368:com.google.common.util.concurrent.ListeningExecutorService newDirectExecutorService() -> newDirectExecutorService
    465:465:java.util.concurrent.Executor newSequentialExecutor(java.util.concurrent.Executor) -> newSequentialExecutor
    839:843:java.lang.Thread newThread(java.lang.String,java.lang.Runnable) -> newThread
    778:798:java.util.concurrent.ThreadFactory platformThreadFactory() -> platformThreadFactory
    995:1001:java.util.concurrent.Executor rejectionPropagatingExecutor(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture) -> rejectionPropagatingExecutor
    867:869:java.util.concurrent.Executor renamingDecorator(java.util.concurrent.Executor,com.google.common.base.Supplier) -> renamingDecorator
    892:894:java.util.concurrent.ExecutorService renamingDecorator(java.util.concurrent.ExecutorService,com.google.common.base.Supplier) -> renamingDecorator
    922:924:java.util.concurrent.ScheduledExecutorService renamingDecorator(java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier) -> renamingDecorator
    967:984:boolean shutdownAndAwaitTermination(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> shutdownAndAwaitTermination
    753:761:com.google.common.util.concurrent.ListenableFuture submitAndAddQueueListener(com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.Callable,java.util.concurrent.BlockingQueue) -> submitAndAddQueueListener
    230:234:void useDaemonThreadFactory(java.util.concurrent.ThreadPoolExecutor) -> useDaemonThreadFactory
com.google.common.util.concurrent.MoreExecutors$1 -> com.google.common.util.concurrent.MoreExecutors$1:
    755:755:void <init>(java.util.concurrent.BlockingQueue,com.google.common.util.concurrent.ListenableFuture) -> <init>
    758:758:void run() -> run
com.google.common.util.concurrent.MoreExecutors$2 -> com.google.common.util.concurrent.MoreExecutors$2:
    869:869:void <init>(java.util.concurrent.Executor,com.google.common.base.Supplier) -> <init>
    872:872:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.MoreExecutors$3 -> com.google.common.util.concurrent.MoreExecutors$3:
    894:894:void <init>(java.util.concurrent.ExecutorService,com.google.common.base.Supplier) -> <init>
    897:897:java.util.concurrent.Callable wrapTask(java.util.concurrent.Callable) -> wrapTask
    902:902:java.lang.Runnable wrapTask(java.lang.Runnable) -> wrapTask
com.google.common.util.concurrent.MoreExecutors$4 -> com.google.common.util.concurrent.MoreExecutors$4:
    924:924:void <init>(java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier) -> <init>
    927:927:java.util.concurrent.Callable wrapTask(java.util.concurrent.Callable) -> wrapTask
    932:932:java.lang.Runnable wrapTask(java.lang.Runnable) -> wrapTask
com.google.common.util.concurrent.MoreExecutors$5 -> com.google.common.util.concurrent.MoreExecutors$5:
    1001:1001:void <init>(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture) -> <init>
    1005:1007:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.MoreExecutors$Application -> com.google.common.util.concurrent.MoreExecutors$Application:
    170:170:void <init>() -> <init>
    199:202:void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> addDelayedShutdownHook
    224:224:void addShutdownHook(java.lang.Thread) -> addShutdownHook
    174:176:java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingExecutorService
    181:181:java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor) -> getExitingExecutorService
    186:188:java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingScheduledExecutorService
    194:194:java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor) -> getExitingScheduledExecutorService
com.google.common.util.concurrent.MoreExecutors$Application$1 -> com.google.common.util.concurrent.MoreExecutors$Application$1:
    204:204:void <init>(com.google.common.util.concurrent.MoreExecutors$Application,java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> <init>
    213:214:void run() -> run
com.google.common.util.concurrent.MoreExecutors$DirectExecutorService -> com.google.common.util.concurrent.MoreExecutors$DirectExecutorService:
    239:253:void <init>() -> <init>
    239:239:void <init>(com.google.common.util.concurrent.MoreExecutors$1) -> <init>
    299:312:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    331:336:void endTask() -> endTask
    258:263:void execute(java.lang.Runnable) -> execute
    268:270:boolean isShutdown() -> isShutdown
    292:294:boolean isTerminated() -> isTerminated
    275:280:void shutdown() -> shutdown
    286:287:java.util.List shutdownNow() -> shutdownNow
    321:326:void startTask() -> startTask
com.google.common.util.concurrent.MoreExecutors$ListeningDecorator -> com.google.common.util.concurrent.MoreExecutors$ListeningDecorator:
    520:521:void <init>(java.util.concurrent.ExecutorService) -> <init>
    526:526:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    551:551:void execute(java.lang.Runnable) -> execute
    531:531:boolean isShutdown() -> isShutdown
    536:536:boolean isTerminated() -> isTerminated
    541:541:void shutdown() -> shutdown
    546:546:java.util.List shutdownNow() -> shutdownNow
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator -> com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator:
    562:563:void <init>(java.util.concurrent.ScheduledExecutorService) -> <init>
    555:555:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    555:555:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    568:570:com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    576:578:com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    555:555:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    584:586:com.google.common.util.concurrent.ListenableScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    555:555:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    592:595:com.google.common.util.concurrent.ListenableScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask -> com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask:
    605:606:void <init>(com.google.common.util.concurrent.ListenableFuture,java.util.concurrent.ScheduledFuture) -> <init>
    611:614:boolean cancel(boolean) -> cancel
    598:598:int compareTo(java.lang.Object) -> compareTo
    628:628:int compareTo(java.util.concurrent.Delayed) -> compareTo
    623:623:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask -> com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask:
    637:638:void <init>(java.lang.Runnable) -> <init>
    644:647:void run() -> run
com.google.common.util.concurrent.OverflowAvoidingLockSupport -> com.google.common.util.concurrent.OverflowAvoidingLockSupport:
    30:30:void <init>() -> <init>
    35:35:void parkNanos(java.lang.Object,long) -> parkNanos
com.google.common.util.concurrent.Partially -> com.google.common.util.concurrent.Partially:
    48:48:void <init>() -> <init>
com.google.common.util.concurrent.Platform -> com.google.common.util.concurrent.Platform:
    28:28:void <init>() -> <init>
    25:25:boolean isInstanceOfThrowableClass(java.lang.Throwable,java.lang.Class) -> isInstanceOfThrowableClass
com.google.common.util.concurrent.RateLimiter -> com.google.common.util.concurrent.RateLimiter:
    202:203:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch) -> <init>
    259:259:double acquire() -> acquire
    273:275:double acquire(int) -> acquire
    364:364:boolean canAcquire(long,long) -> canAcquire
    432:432:void checkPermits(int) -> checkPermits
    127:127:com.google.common.util.concurrent.RateLimiter create(double) -> create
    132:133:com.google.common.util.concurrent.RateLimiter create(double,com.google.common.util.concurrent.RateLimiter$SleepingStopwatch) -> create
    163:165:com.google.common.util.concurrent.RateLimiter create(double,long,java.util.concurrent.TimeUnit) -> create
    175:176:com.google.common.util.concurrent.RateLimiter create(double,long,java.util.concurrent.TimeUnit,double,com.google.common.util.concurrent.RateLimiter$SleepingStopwatch) -> create
    241:243:double getRate() -> getRate
    190:197:java.lang.Object mutex() -> mutex
    285:288:long reserve(int) -> reserve
    373:374:long reserveAndGetWaitLength(int,long) -> reserveAndGetWaitLength
    225:229:void setRate(double) -> setRate
    396:396:java.lang.String toString() -> toString
    305:305:boolean tryAcquire(long,java.util.concurrent.TimeUnit) -> tryAcquire
    319:319:boolean tryAcquire(int) -> tryAcquire
    332:332:boolean tryAcquire() -> tryAcquire
    348:359:boolean tryAcquire(int,long,java.util.concurrent.TimeUnit) -> tryAcquire
com.google.common.util.concurrent.RateLimiter$SleepingStopwatch -> com.google.common.util.concurrent.RateLimiter$SleepingStopwatch:
    401:401:void <init>() -> <init>
    413:413:com.google.common.util.concurrent.RateLimiter$SleepingStopwatch createFromSystemTimer() -> createFromSystemTimer
com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1 -> com.google.common.util.concurrent.RateLimiter$SleepingStopwatch$1:
    413:414:void <init>() -> <init>
    418:418:long readMicros() -> readMicros
    424:424:void sleepMicrosUninterruptibly(long) -> sleepMicrosUninterruptibly
com.google.common.util.concurrent.Runnables -> com.google.common.util.concurrent.Runnables:
    29:29:void <clinit>() -> <clinit>
    40:40:void <init>() -> <init>
    37:37:java.lang.Runnable doNothing() -> doNothing
com.google.common.util.concurrent.Runnables$1 -> com.google.common.util.concurrent.Runnables$1:
    30:30:void <init>() -> <init>
com.google.common.util.concurrent.SequentialExecutor -> com.google.common.util.concurrent.SequentialExecutor:
    51:51:void <clinit>() -> <clinit>
    66:87:void <init>(java.util.concurrent.Executor) -> <init>
    50:50:java.util.Deque access$100(com.google.common.util.concurrent.SequentialExecutor) -> access$100
    50:50:com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState access$200(com.google.common.util.concurrent.SequentialExecutor) -> access$200
    50:50:com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState access$202(com.google.common.util.concurrent.SequentialExecutor,com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState) -> access$202
    50:50:long access$308(com.google.common.util.concurrent.SequentialExecutor) -> access$308
    50:50:java.util.logging.Logger access$400() -> access$400
    98:168:void execute(java.lang.Runnable) -> execute
    263:263:java.lang.String toString() -> toString
com.google.common.util.concurrent.SequentialExecutor$1 -> com.google.common.util.concurrent.SequentialExecutor$1:
    118:118:void <init>(com.google.common.util.concurrent.SequentialExecutor,java.lang.Runnable) -> <init>
    121:121:void run() -> run
    126:126:java.lang.String toString() -> toString
com.google.common.util.concurrent.SequentialExecutor$QueueWorker -> com.google.common.util.concurrent.SequentialExecutor$QueueWorker:
    172:172:void <init>(com.google.common.util.concurrent.SequentialExecutor) -> <init>
    172:172:void <init>(com.google.common.util.concurrent.SequentialExecutor,com.google.common.util.concurrent.SequentialExecutor$1) -> <init>
    178:183:void run() -> run
    253:257:java.lang.String toString() -> toString
    206:247:void workOnQueue() -> workOnQueue
com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState -> com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState:
    53:60:void <clinit>() -> <clinit>
    53:53:void <init>(java.lang.String,int) -> <init>
    53:53:com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String) -> valueOf
    53:53:com.google.common.util.concurrent.SequentialExecutor$WorkerRunningState[] values() -> values
com.google.common.util.concurrent.Service$Listener -> com.google.common.util.concurrent.Service$Listener:
    243:243:void <init>() -> <init>
com.google.common.util.concurrent.Service$State -> com.google.common.util.concurrent.Service$State:
    176:224:void <clinit>() -> <clinit>
    176:176:void <init>(java.lang.String,int) -> <init>
    176:176:void <init>(java.lang.String,int,com.google.common.util.concurrent.Service$1) -> <init>
    176:176:com.google.common.util.concurrent.Service$State valueOf(java.lang.String) -> valueOf
    176:176:com.google.common.util.concurrent.Service$State[] values() -> values
com.google.common.util.concurrent.Service$State$1 -> com.google.common.util.concurrent.Service$State$1:
    178:178:void <init>(java.lang.String,int) -> <init>
com.google.common.util.concurrent.Service$State$2 -> com.google.common.util.concurrent.Service$State$2:
    186:186:void <init>(java.lang.String,int) -> <init>
com.google.common.util.concurrent.Service$State$3 -> com.google.common.util.concurrent.Service$State$3:
    194:194:void <init>(java.lang.String,int) -> <init>
com.google.common.util.concurrent.Service$State$4 -> com.google.common.util.concurrent.Service$State$4:
    202:202:void <init>(java.lang.String,int) -> <init>
com.google.common.util.concurrent.Service$State$5 -> com.google.common.util.concurrent.Service$State$5:
    213:213:void <init>(java.lang.String,int) -> <init>
com.google.common.util.concurrent.Service$State$6 -> com.google.common.util.concurrent.Service$State$6:
    224:224:void <init>(java.lang.String,int) -> <init>
com.google.common.util.concurrent.ServiceManager -> com.google.common.util.concurrent.ServiceManager:
    122:135:void <clinit>() -> <clinit>
    200:222:void <init>(java.lang.Iterable) -> <init>
    121:121:java.util.logging.Logger access$200() -> access$200
    121:121:com.google.common.util.concurrent.ListenerCallQueue$Event access$300() -> access$300
    121:121:com.google.common.util.concurrent.ListenerCallQueue$Event access$400() -> access$400
    250:250:void addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor) -> addListener
    291:291:void awaitHealthy() -> awaitHealthy
    307:307:void awaitHealthy(long,java.util.concurrent.TimeUnit) -> awaitHealthy
    330:330:void awaitStopped() -> awaitStopped
    344:344:void awaitStopped(long,java.util.concurrent.TimeUnit) -> awaitStopped
    354:355:boolean isHealthy() -> isHealthy
    120:120:com.google.common.collect.ImmutableMultimap servicesByState() -> servicesByState
    372:372:com.google.common.collect.ImmutableSetMultimap servicesByState() -> servicesByState
    263:276:com.google.common.util.concurrent.ServiceManager startAsync() -> startAsync
    383:383:com.google.common.collect.ImmutableMap startupTimes() -> startupTimes
    318:319:com.google.common.util.concurrent.ServiceManager stopAsync() -> stopAsync
    388:390:java.lang.String toString() -> toString
com.google.common.util.concurrent.ServiceManager$1 -> com.google.common.util.concurrent.ServiceManager$1:
    124:124:void <init>() -> <init>
    124:124:void call(java.lang.Object) -> call
    127:127:void call(com.google.common.util.concurrent.ServiceManager$Listener) -> call
com.google.common.util.concurrent.ServiceManager$2 -> com.google.common.util.concurrent.ServiceManager$2:
    136:136:void <init>() -> <init>
    136:136:void call(java.lang.Object) -> call
    139:139:void call(com.google.common.util.concurrent.ServiceManager$Listener) -> call
com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning -> com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning:
    825:825:void <init>() -> <init>
    825:825:void <init>(com.google.common.util.concurrent.ServiceManager$1) -> <init>
com.google.common.util.concurrent.ServiceManager$Listener -> com.google.common.util.concurrent.ServiceManager$Listener:
    157:157:void <init>() -> <init>
com.google.common.util.concurrent.ServiceManager$NoOpService -> com.google.common.util.concurrent.ServiceManager$NoOpService:
    812:812:void <init>() -> <init>
    812:812:void <init>(com.google.common.util.concurrent.ServiceManager$1) -> <init>
    815:815:void doStart() -> doStart
    820:820:void doStop() -> doStop
com.google.common.util.concurrent.ServiceManager$ServiceListener -> com.google.common.util.concurrent.ServiceManager$ServiceListener:
    740:742:void <init>(com.google.common.util.concurrent.Service,java.lang.ref.WeakReference) -> <init>
    788:799:void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
    758:760:void running() -> running
    747:751:void starting() -> starting
    766:768:void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    774:782:void terminated(com.google.common.util.concurrent.Service$State) -> terminated
com.google.common.util.concurrent.ServiceManager$ServiceManagerState -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState:
    398:481:void <init>(com.google.common.collect.ImmutableCollection) -> <init>
    529:529:void addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor) -> addListener
    533:538:void awaitHealthy() -> awaitHealthy
    542:553:void awaitHealthy(long,java.util.concurrent.TimeUnit) -> awaitHealthy
    557:558:void awaitStopped() -> awaitStopped
    562:572:void awaitStopped(long,java.util.concurrent.TimeUnit) -> awaitStopped
    719:724:void checkHealthy() -> checkHealthy
    711:714:void dispatchListenerEvents() -> dispatchListenerEvents
    695:695:void enqueueFailedEvent(com.google.common.util.concurrent.Service) -> enqueueFailedEvent
    691:691:void enqueueHealthyEvent() -> enqueueHealthyEvent
    687:687:void enqueueStoppedEvent() -> enqueueStoppedEvent
    505:525:void markReady() -> markReady
    576:587:com.google.common.collect.ImmutableSetMultimap servicesByState() -> servicesByState
    592:616:com.google.common.collect.ImmutableMap startupTimes() -> startupTimes
    632:683:void transitionService(com.google.common.util.concurrent.Service,com.google.common.util.concurrent.Service$State,com.google.common.util.concurrent.Service$State) -> transitionService
    489:497:void tryStartTiming(com.google.common.util.concurrent.Service) -> tryStartTiming
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1 -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1:
    610:610:void <init>(com.google.common.util.concurrent.ServiceManager$ServiceManagerState) -> <init>
    610:610:java.lang.Object apply(java.lang.Object) -> apply
    613:613:java.lang.Long apply(java.util.Map$Entry) -> apply
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2 -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2:
    696:696:void <init>(com.google.common.util.concurrent.ServiceManager$ServiceManagerState,com.google.common.util.concurrent.Service) -> <init>
    696:696:void call(java.lang.Object) -> call
    699:699:void call(com.google.common.util.concurrent.ServiceManager$Listener) -> call
    704:704:java.lang.String toString() -> toString
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$AwaitHealthGuard -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState$AwaitHealthGuard:
    439:440:void <init>(com.google.common.util.concurrent.ServiceManager$ServiceManagerState) -> <init>
    447:450:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$StoppedGuard -> com.google.common.util.concurrent.ServiceManager$ServiceManagerState$StoppedGuard:
    459:460:void <init>(com.google.common.util.concurrent.ServiceManager$ServiceManagerState) -> <init>
    466:466:boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.SettableFuture -> com.google.common.util.concurrent.SettableFuture:
    62:62:void <init>() -> <init>
    41:41:com.google.common.util.concurrent.SettableFuture create() -> create
    47:47:boolean set(java.lang.Object) -> set
    53:53:boolean setException(java.lang.Throwable) -> setException
    59:59:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
com.google.common.util.concurrent.SimpleTimeLimiter -> com.google.common.util.concurrent.SimpleTimeLimiter:
    52:53:void <init>(java.util.concurrent.ExecutorService) -> <init>
    48:48:java.lang.Exception access$000(java.lang.Exception,boolean) -> access$000
    48:48:java.lang.Object access$100(com.google.common.util.concurrent.SimpleTimeLimiter,java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> access$100
    170:183:java.lang.Object callUninterruptiblyWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> callUninterruptiblyWithTimeout
    119:140:java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
    148:161:java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> callWithTimeout
    286:286:void checkPositiveTimeout(long) -> checkPositiveTimeout
    68:68:com.google.common.util.concurrent.SimpleTimeLimiter create(java.util.concurrent.ExecutorService) -> create
    258:260:boolean declaresInterruptedEx(java.lang.reflect.Method) -> declaresInterruptedEx
    248:251:java.util.Set findInterruptibleMethods(java.lang.Class) -> findInterruptibleMethods
    77:105:java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    111:113:java.lang.Object newProxy(java.lang.Class,java.lang.reflect.InvocationHandler) -> newProxy
    210:223:void runUninterruptiblyWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> runUninterruptiblyWithTimeout
    190:203:void runWithTimeout(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> runWithTimeout
    228:244:java.lang.Exception throwCause(java.lang.Exception,boolean) -> throwCause
    268:273:void wrapAndThrowExecutionExceptionOrError(java.lang.Throwable) -> wrapAndThrowExecutionExceptionOrError
    278:281:void wrapAndThrowRuntimeExecutionExceptionOrError(java.lang.Throwable) -> wrapAndThrowRuntimeExecutionExceptionOrError
com.google.common.util.concurrent.SimpleTimeLimiter$1 -> com.google.common.util.concurrent.SimpleTimeLimiter$1:
    86:86:void <init>(com.google.common.util.concurrent.SimpleTimeLimiter,java.lang.Object,long,java.util.concurrent.TimeUnit,java.util.Set) -> <init>
    90:102:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.google.common.util.concurrent.SimpleTimeLimiter$1$1 -> com.google.common.util.concurrent.SimpleTimeLimiter$1$1:
    91:91:void <init>(com.google.common.util.concurrent.SimpleTimeLimiter$1,java.lang.reflect.Method,java.lang.Object[]) -> <init>
    95:97:java.lang.Object call() -> call
com.google.common.util.concurrent.SmoothRateLimiter -> com.google.common.util.concurrent.SmoothRateLimiter:
    25:25:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch,com.google.common.util.concurrent.SmoothRateLimiter$1) -> <init>
    327:330:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch) -> <init>
    345:345:double doGetRate() -> doGetRate
    335:338:void doSetRate(double,long) -> doSetRate
    350:350:long queryEarliestAvailable(long) -> queryEarliestAvailable
    355:364:long reserveEarliestAvailable(int,long) -> reserveEarliestAvailable
    385:388:void resync(long) -> resync
com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty -> com.google.common.util.concurrent.SmoothRateLimiter$SmoothBursty:
    281:282:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch,double) -> <init>
    307:307:double coolDownIntervalMicros() -> coolDownIntervalMicros
    287:296:void doSetRate(double,double) -> doSetRate
com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp -> com.google.common.util.concurrent.SmoothRateLimiter$SmoothWarmingUp:
    217:219:void <init>(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch,long,java.util.concurrent.TimeUnit,double) -> <init>
    266:266:double coolDownIntervalMicros() -> coolDownIntervalMicros
    224:237:void doSetRate(double,double) -> doSetRate
    261:261:double permitsToTime(double) -> permitsToTime
    243:256:long storedPermitsToWaitTime(double,double) -> storedPermitsToWaitTime
com.google.common.util.concurrent.Striped -> com.google.common.util.concurrent.Striped:
    300:308:void <clinit>() -> <clinit>
    85:85:void <init>(com.google.common.util.concurrent.Striped$1) -> <init>
    93:93:void <init>() -> <init>
    85:85:int access$200(int) -> access$200
    85:85:int access$300(int) -> access$300
    141:181:java.lang.Iterable bulkGet(java.lang.Iterable) -> bulkGet
    545:545:int ceilToPowerOfTwo(int) -> ceilToPowerOfTwo
    195:195:com.google.common.util.concurrent.Striped custom(int,com.google.common.base.Supplier) -> custom
    236:237:com.google.common.util.concurrent.Striped lazy(int,com.google.common.base.Supplier) -> lazy
    224:224:com.google.common.util.concurrent.Striped lazyWeakLock(int) -> lazyWeakLock
    297:297:com.google.common.util.concurrent.Striped lazyWeakReadWriteLock(int) -> lazyWeakReadWriteLock
    268:268:com.google.common.util.concurrent.Striped lazyWeakSemaphore(int,int) -> lazyWeakSemaphore
    206:206:com.google.common.util.concurrent.Striped lock(int) -> lock
    286:286:com.google.common.util.concurrent.Striped readWriteLock(int) -> readWriteLock
    249:249:com.google.common.util.concurrent.Striped semaphore(int,int) -> semaphore
com.google.common.util.concurrent.Striped$1 -> com.google.common.util.concurrent.Striped$1:
    208:208:void <init>() -> <init>
    208:208:java.lang.Object get() -> get
    211:211:java.util.concurrent.locks.Lock get() -> get
com.google.common.util.concurrent.Striped$2 -> com.google.common.util.concurrent.Striped$2:
    226:226:void <init>() -> <init>
    226:226:java.lang.Object get() -> get
    229:229:java.util.concurrent.locks.Lock get() -> get
com.google.common.util.concurrent.Striped$3 -> com.google.common.util.concurrent.Striped$3:
    251:251:void <init>(int) -> <init>
    251:251:java.lang.Object get() -> get
    254:254:java.util.concurrent.Semaphore get() -> get
com.google.common.util.concurrent.Striped$4 -> com.google.common.util.concurrent.Striped$4:
    270:270:void <init>(int) -> <init>
    270:270:java.lang.Object get() -> get
    273:273:java.util.concurrent.Semaphore get() -> get
com.google.common.util.concurrent.Striped$5 -> com.google.common.util.concurrent.Striped$5:
    301:301:void <init>() -> <init>
    301:301:java.lang.Object get() -> get
    304:304:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$6 -> com.google.common.util.concurrent.Striped$6:
    309:309:void <init>() -> <init>
    309:309:java.lang.Object get() -> get
    312:312:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$CompactStriped -> com.google.common.util.concurrent.Striped$CompactStriped:
    405:405:void <init>(int,com.google.common.base.Supplier,com.google.common.util.concurrent.Striped$1) -> <init>
    410:415:void <init>(int,com.google.common.base.Supplier) -> <init>
    422:422:java.lang.Object getAt(int) -> getAt
    427:427:int size() -> size
com.google.common.util.concurrent.Striped$LargeLazyStriped -> com.google.common.util.concurrent.Striped$LargeLazyStriped:
    515:518:void <init>(int,com.google.common.base.Supplier) -> <init>
    523:532:java.lang.Object getAt(int) -> getAt
    537:537:int size() -> size
com.google.common.util.concurrent.Striped$PaddedLock -> com.google.common.util.concurrent.Striped$PaddedLock:
    573:573:void <init>() -> <init>
com.google.common.util.concurrent.Striped$PaddedSemaphore -> com.google.common.util.concurrent.Striped$PaddedSemaphore:
    584:584:void <init>(int) -> <init>
com.google.common.util.concurrent.Striped$PowerOfTwoStriped -> com.google.common.util.concurrent.Striped$PowerOfTwoStriped:
    384:386:void <init>(int) -> <init>
    397:397:java.lang.Object get(java.lang.Object) -> get
    391:392:int indexFor(java.lang.Object) -> indexFor
com.google.common.util.concurrent.Striped$SmallLazyStriped -> com.google.common.util.concurrent.Striped$SmallLazyStriped:
    441:447:void <init>(int,com.google.common.base.Supplier) -> <init>
    479:484:void drainQueue() -> drainQueue
    452:470:java.lang.Object getAt(int) -> getAt
    490:490:int size() -> size
com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference -> com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference:
    497:498:void <init>(java.lang.Object,int,java.lang.ref.ReferenceQueue) -> <init>
com.google.common.util.concurrent.Striped$WeakSafeCondition -> com.google.common.util.concurrent.Striped$WeakSafeCondition:
    369:371:void <init>(java.util.concurrent.locks.Condition,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    376:376:java.util.concurrent.locks.Condition delegate() -> delegate
com.google.common.util.concurrent.Striped$WeakSafeLock -> com.google.common.util.concurrent.Striped$WeakSafeLock:
    346:348:void <init>(java.util.concurrent.locks.Lock,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    353:353:java.util.concurrent.locks.Lock delegate() -> delegate
    358:358:java.util.concurrent.locks.Condition newCondition() -> newCondition
com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock -> com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock:
    324:325:void <init>() -> <init>
    330:330:java.util.concurrent.locks.Lock readLock() -> readLock
    335:335:java.util.concurrent.locks.Lock writeLock() -> writeLock
com.google.common.util.concurrent.ThreadFactoryBuilder -> com.google.common.util.concurrent.ThreadFactoryBuilder:
    49:56:void <init>() -> <init>
    48:48:java.lang.String access$000(java.lang.String,java.lang.Object[]) -> access$000
    145:145:java.util.concurrent.ThreadFactory build() -> build
    151:160:java.util.concurrent.ThreadFactory doBuild(com.google.common.util.concurrent.ThreadFactoryBuilder) -> doBuild
    182:182:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    82:82:com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean) -> setDaemon
    70:71:com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String) -> setNameFormat
    95:105:com.google.common.util.concurrent.ThreadFactoryBuilder setPriority(int) -> setPriority
    132:132:com.google.common.util.concurrent.ThreadFactoryBuilder setThreadFactory(java.util.concurrent.ThreadFactory) -> setThreadFactory
    118:118:com.google.common.util.concurrent.ThreadFactoryBuilder setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setUncaughtExceptionHandler
com.google.common.util.concurrent.ThreadFactoryBuilder$1 -> com.google.common.util.concurrent.ThreadFactoryBuilder$1:
    160:160:void <init>(java.util.concurrent.ThreadFactory,java.lang.String,java.util.concurrent.atomic.AtomicLong,java.lang.Boolean,java.lang.Integer,java.lang.Thread$UncaughtExceptionHandler) -> <init>
    163:174:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.common.util.concurrent.TimeoutFuture -> com.google.common.util.concurrent.TimeoutFuture:
    77:78:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    37:37:com.google.common.util.concurrent.ListenableFuture access$000(com.google.common.util.concurrent.TimeoutFuture) -> access$000
    37:37:java.util.concurrent.ScheduledFuture access$100(com.google.common.util.concurrent.TimeoutFuture) -> access$100
    37:37:java.util.concurrent.ScheduledFuture access$102(com.google.common.util.concurrent.TimeoutFuture,java.util.concurrent.ScheduledFuture) -> access$102
    174:185:void afterDone() -> afterDone
    43:46:com.google.common.util.concurrent.ListenableFuture create(com.google.common.util.concurrent.ListenableFuture,long,java.util.concurrent.TimeUnit,java.util.concurrent.ScheduledExecutorService) -> create
    156:164:java.lang.String pendingToString() -> pendingToString
com.google.common.util.concurrent.TimeoutFuture$Fire -> com.google.common.util.concurrent.TimeoutFuture$Fire:
    85:86:void <init>(com.google.common.util.concurrent.TimeoutFuture) -> <init>
    93:137:void run() -> run
com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException -> com.google.common.util.concurrent.TimeoutFuture$TimeoutFutureException:
    142:142:void <init>(java.lang.String,com.google.common.util.concurrent.TimeoutFuture$1) -> <init>
    144:144:void <init>(java.lang.String) -> <init>
    149:150:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.common.util.concurrent.TrustedListenableFutureTask -> com.google.common.util.concurrent.TrustedListenableFutureTask:
    66:67:void <init>(java.util.concurrent.Callable) -> <init>
    70:71:void <init>(com.google.common.util.concurrent.AsyncCallable) -> <init>
    89:98:void afterDone() -> afterDone
    37:37:com.google.common.util.concurrent.TrustedListenableFutureTask create(com.google.common.util.concurrent.AsyncCallable) -> create
    41:41:com.google.common.util.concurrent.TrustedListenableFutureTask create(java.util.concurrent.Callable) -> create
    54:54:com.google.common.util.concurrent.TrustedListenableFutureTask create(java.lang.Runnable,java.lang.Object) -> create
    103:107:java.lang.String pendingToString() -> pendingToString
    76:84:void run() -> run
com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask -> com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleAsyncTask:
    148:149:void <init>(com.google.common.util.concurrent.TrustedListenableFutureTask,com.google.common.util.concurrent.AsyncCallable) -> <init>
    143:143:void afterRanInterruptibly(java.lang.Object,java.lang.Throwable) -> afterRanInterruptibly
    169:171:void afterRanInterruptibly(com.google.common.util.concurrent.ListenableFuture,java.lang.Throwable) -> afterRanInterruptibly
    154:154:boolean isDone() -> isDone
    143:143:java.lang.Object runInterruptibly() -> runInterruptibly
    159:160:com.google.common.util.concurrent.ListenableFuture runInterruptibly() -> runInterruptibly
    177:177:java.lang.String toPendingString() -> toPendingString
com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask -> com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask:
    114:115:void <init>(com.google.common.util.concurrent.TrustedListenableFutureTask,java.util.concurrent.Callable) -> <init>
    131:133:void afterRanInterruptibly(java.lang.Object,java.lang.Throwable) -> afterRanInterruptibly
    120:120:boolean isDone() -> isDone
    125:125:java.lang.Object runInterruptibly() -> runInterruptibly
    139:139:java.lang.String toPendingString() -> toPendingString
com.google.common.util.concurrent.UncaughtExceptionHandlers -> com.google.common.util.concurrent.UncaughtExceptionHandlers:
    33:33:void <init>() -> <init>
    52:52:java.lang.Thread$UncaughtExceptionHandler systemExit() -> systemExit
com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter -> com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter:
    57:57:void <clinit>() -> <clinit>
    61:62:void <init>(java.lang.Runtime) -> <init>
    68:77:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.common.util.concurrent.UncheckedExecutionException -> com.google.common.util.concurrent.UncheckedExecutionException:
    38:38:void <init>() -> <init>
    42:42:void <init>(java.lang.String) -> <init>
    47:47:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    52:52:void <init>(java.lang.Throwable) -> <init>
com.google.common.util.concurrent.UncheckedTimeoutException -> com.google.common.util.concurrent.UncheckedTimeoutException:
    28:28:void <init>() -> <init>
    31:31:void <init>(java.lang.String) -> <init>
    35:35:void <init>(java.lang.Throwable) -> <init>
    39:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.google.common.util.concurrent.Uninterruptibles -> com.google.common.util.concurrent.Uninterruptibles:
    448:448:void <init>() -> <init>
    412:412:void awaitTerminationUninterruptibly(java.util.concurrent.ExecutorService) -> awaitTerminationUninterruptibly
    428:443:boolean awaitTerminationUninterruptibly(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> awaitTerminationUninterruptibly
    58:68:void awaitUninterruptibly(java.util.concurrent.CountDownLatch) -> awaitUninterruptibly
    81:97:boolean awaitUninterruptibly(java.util.concurrent.CountDownLatch,long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    111:126:boolean awaitUninterruptibly(java.util.concurrent.locks.Condition,long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    201:210:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    238:254:java.lang.Object getUninterruptibly(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> getUninterruptibly
    136:146:void joinUninterruptibly(java.lang.Thread) -> joinUninterruptibly
    156:175:void joinUninterruptibly(java.lang.Thread,long,java.util.concurrent.TimeUnit) -> joinUninterruptibly
    290:300:void putUninterruptibly(java.util.concurrent.BlockingQueue,java.lang.Object) -> putUninterruptibly
    310:326:void sleepUninterruptibly(long,java.util.concurrent.TimeUnit) -> sleepUninterruptibly
    264:273:java.lang.Object takeUninterruptibly(java.util.concurrent.BlockingQueue) -> takeUninterruptibly
    339:339:boolean tryAcquireUninterruptibly(java.util.concurrent.Semaphore,long,java.util.concurrent.TimeUnit) -> tryAcquireUninterruptibly
    354:370:boolean tryAcquireUninterruptibly(java.util.concurrent.Semaphore,int,long,java.util.concurrent.TimeUnit) -> tryAcquireUninterruptibly
    384:399:boolean tryLockUninterruptibly(java.util.concurrent.locks.Lock,long,java.util.concurrent.TimeUnit) -> tryLockUninterruptibly
com.google.common.util.concurrent.WrappingExecutorService -> com.google.common.util.concurrent.WrappingExecutorService:
    48:49:void <init>(java.util.concurrent.ExecutorService) -> <init>
    160:160:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    93:93:void execute(java.lang.Runnable) -> execute
    114:114:java.util.List invokeAll(java.util.Collection) -> invokeAll
    121:121:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    127:127:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    133:133:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    150:150:boolean isShutdown() -> isShutdown
    155:155:boolean isTerminated() -> isTerminated
    140:140:void shutdown() -> shutdown
    145:145:java.util.List shutdownNow() -> shutdownNow
    98:98:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    103:103:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    108:108:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    63:64:java.lang.Runnable wrapTask(java.lang.Runnable) -> wrapTask
    83:87:com.google.common.collect.ImmutableList wrapTasks(java.util.Collection) -> wrapTasks
com.google.common.util.concurrent.WrappingExecutorService$1 -> com.google.common.util.concurrent.WrappingExecutorService$1:
    64:64:void <init>(com.google.common.util.concurrent.WrappingExecutorService,java.util.concurrent.Callable) -> <init>
    68:71:void run() -> run
com.google.common.util.concurrent.WrappingScheduledExecutorService -> com.google.common.util.concurrent.WrappingScheduledExecutorService:
    39:40:void <init>(java.util.concurrent.ScheduledExecutorService) -> <init>
    45:45:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    50:50:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    56:56:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    62:62:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
com.google.common.util.concurrent.internal.InternalFutureFailureAccess -> com.google.common.util.concurrent.internal.InternalFutureFailureAccess:
    31:31:void <init>() -> <init>
com.google.common.util.concurrent.internal.InternalFutures -> com.google.common.util.concurrent.internal.InternalFutures:
    44:44:void <init>() -> <init>
    41:41:java.lang.Throwable tryInternalFastPathGetFailure(com.google.common.util.concurrent.internal.InternalFutureFailureAccess) -> tryInternalFastPathGetFailure
com.google.i18n.phonenumbers.AlternateFormatsCountryCodeSet -> com.google.i18n.phonenumbers.AlternateFormatsCountryCodeSet:
    31:79:java.util.Set getCountryCodeSet() -> getCountryCodeSet
com.google.i18n.phonenumbers.CountryCodeToRegionCodeMap -> com.google.i18n.phonenumbers.CountryCodeToRegionCodeMap:
    36:938:java.util.Map getCountryCodeToRegionCodeMap() -> getCountryCodeToRegionCodeMap
com.google.i18n.phonenumbers.MetadataManager -> com.google.i18n.phonenumbers.MetadataManager:
    50:75:void <clinit>() -> <clinit>
    77:77:void <init>() -> <init>
    110:121:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataFromMultiFilePrefix(java.lang.Object,java.util.concurrent.ConcurrentHashMap,java.lang.String,com.google.i18n.phonenumbers.MetadataLoader) -> getMetadataFromMultiFilePrefix
    185:194:java.util.List getMetadataFromSingleFileName(java.lang.String,com.google.i18n.phonenumbers.MetadataLoader) -> getMetadataFromSingleFileName
    209:231:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection loadMetadataAndCloseInput(java.io.InputStream) -> loadMetadataAndCloseInput
com.google.i18n.phonenumbers.MetadataManager$1 -> com.google.i18n.phonenumbers.MetadataManager$1:
    50:50:void <init>() -> <init>
    53:53:java.io.InputStream loadMetadata(java.lang.String) -> loadMetadata
com.google.i18n.phonenumbers.MultiFileMetadataSourceImpl -> com.google.i18n.phonenumbers.MultiFileMetadataSourceImpl:
    38:54:void <init>(java.lang.String,com.google.i18n.phonenumbers.MetadataLoader) -> <init>
    59:59:void <init>(com.google.i18n.phonenumbers.MetadataLoader) -> <init>
    70:74:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int) -> getMetadataForNonGeographicalRegion
    64:64:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String) -> getMetadataForRegion
    82:84:boolean isNonGeographical(int) -> isNonGeographical
com.google.i18n.phonenumbers.NumberParseException -> com.google.i18n.phonenumbers.NumberParseException:
    60:62:void <init>(com.google.i18n.phonenumbers.NumberParseException$ErrorType,java.lang.String) -> <init>
    69:69:com.google.i18n.phonenumbers.NumberParseException$ErrorType getErrorType() -> getErrorType
    74:74:java.lang.String toString() -> toString
com.google.i18n.phonenumbers.NumberParseException$ErrorType -> com.google.i18n.phonenumbers.NumberParseException$ErrorType:
    28:53:void <clinit>() -> <clinit>
    28:28:void <init>(java.lang.String,int) -> <init>
    28:28:com.google.i18n.phonenumbers.NumberParseException$ErrorType valueOf(java.lang.String) -> valueOf
    28:28:com.google.i18n.phonenumbers.NumberParseException$ErrorType[] values() -> values
com.google.i18n.phonenumbers.PhoneNumberUtil -> com.google.i18n.phonenumbers.PhoneNumberUtil:
    57:376:void <clinit>() -> <clinit>
    605:653:void <init>(com.google.i18n.phonenumbers.MetadataSource,java.util.Map) -> <init>
    3270:3306:void buildNationalNumberForParsing(java.lang.String,java.lang.StringBuilder) -> buildNationalNumberForParsing
    2990:2993:boolean checkRegionForParsing(java.lang.CharSequence,java.lang.String) -> checkRegionForParsing
    3320:3329:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber copyCoreFieldsOnly(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> copyCoreFieldsOnly
    341:341:java.lang.String createExtnPattern(java.lang.String) -> createExtnPattern
    1119:1121:com.google.i18n.phonenumbers.PhoneNumberUtil createInstance(com.google.i18n.phonenumbers.MetadataLoader) -> createInstance
    1138:1141:com.google.i18n.phonenumbers.PhoneNumberUtil createInstance(com.google.i18n.phonenumbers.MetadataSource) -> createInstance
    1015:1015:boolean descHasPossibleNumberData(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> descHasPossibleNumberData
    2722:2731:int extractCountryCode(java.lang.StringBuilder,java.lang.StringBuilder) -> extractCountryCode
    672:683:java.lang.CharSequence extractPossibleNumber(java.lang.CharSequence) -> extractPossibleNumber
    2393:2397:int getCountryCodeForValidRegion(java.lang.String) -> getCountryCodeForValidRegion
    932:933:java.lang.String getCountryMobileToken(int) -> getCountryMobileToken
    1099:1102:com.google.i18n.phonenumbers.PhoneNumberUtil getInstance() -> getInstance
    2236:2239:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int) -> getMetadataForNonGeographicalRegion
    2229:2232:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String) -> getMetadataForRegion
    1352:1354:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegionOrCallingCode(int,java.lang.String) -> getMetadataForRegionOrCallingCode
    1825:1832:java.lang.String getNationalSignificantNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> getNationalSignificantNumber
    2133:2156:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getNumberDescByType(com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType) -> getNumberDescByType
    2167:2173:com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType getNumberType(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> getNumberType
    2177:2221:com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType getNumberTypeHelper(java.lang.String,com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata) -> getNumberTypeHelper
    2351:2352:java.lang.String getRegionCodeForCountryCode(int) -> getRegionCodeForCountryCode
    2310:2319:java.lang.String getRegionCodeForNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> getRegionCodeForNumber
    2325:2335:java.lang.String getRegionCodeForNumberFromRegionList(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.List) -> getRegionCodeForNumberFromRegionList
    2361:2362:java.util.List getRegionCodesForCountryCode(int) -> getRegionCodesForCountryCode
    3396:3400:boolean isNationalNumberSuffixOfTheOther(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> isNationalNumberSuffixOfTheOther
    1167:1169:boolean isNumberGeographical(com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType,int) -> isNumberGeographical
    3357:3390:com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> isNumberMatch
    3416:3439:com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(java.lang.CharSequence,java.lang.CharSequence) -> isNumberMatch
    3456:3485:com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.CharSequence) -> isNumberMatch
    2246:2251:boolean isNumberMatchingDesc(java.lang.String,com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> isNumberMatchingDesc
    2287:2297:boolean isValidNumberForRegion(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String) -> isValidNumberForRegion
    1177:1177:boolean isValidRegionCode(java.lang.String) -> isValidRegionCode
    703:707:boolean isViablePhoneNumber(java.lang.CharSequence) -> isViablePhoneNumber
    2774:2834:int maybeExtractCountryCode(java.lang.CharSequence,com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder,boolean,com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> maybeExtractCountryCode
    2966:2976:java.lang.String maybeStripExtension(java.lang.StringBuilder) -> maybeStripExtension
    2877:2893:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource maybeStripInternationalPrefixAndNormalize(java.lang.StringBuilder,java.lang.String) -> maybeStripInternationalPrefixAndNormalize
    2908:2950:boolean maybeStripNationalPrefixAndCarrierCode(java.lang.StringBuilder,com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder) -> maybeStripNationalPrefixAndCarrierCode
    727:731:java.lang.StringBuilder normalize(java.lang.StringBuilder) -> normalize
    748:755:java.lang.StringBuilder normalizeDigits(java.lang.CharSequence,boolean) -> normalizeDigits
    744:744:java.lang.String normalizeDigitsOnly(java.lang.CharSequence) -> normalizeDigitsOnly
    953:964:java.lang.String normalizeHelper(java.lang.CharSequence,java.util.Map,boolean) -> normalizeHelper
    3035:3036:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber parse(java.lang.CharSequence,java.lang.String) -> parse
    3046:3046:void parse(java.lang.CharSequence,java.lang.String,com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> parse
    3154:3262:void parseHelper(java.lang.CharSequence,java.lang.String,boolean,boolean,com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> parseHelper
    2843:2855:boolean parsePrefixAsIdd(java.util.regex.Pattern,java.lang.StringBuilder) -> parsePrefixAsIdd
    973:974:void setInstance(com.google.i18n.phonenumbers.PhoneNumberUtil) -> setInstance
    3126:3136:void setItalianLeadingZerosForPhoneNumber(java.lang.CharSequence,com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> setItalianLeadingZerosForPhoneNumber
    2505:2505:com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult testNumberLength(java.lang.CharSequence,com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata) -> testNumberLength
    2514:2580:com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult testNumberLength(java.lang.CharSequence,com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType) -> testNumberLength
com.google.i18n.phonenumbers.PhoneNumberUtil$2 -> com.google.i18n.phonenumbers.PhoneNumberUtil$2:
    1582:2133:void <clinit>() -> <clinit>
com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType -> com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType:
    436:441:void <clinit>() -> <clinit>
    436:436:void <init>(java.lang.String,int) -> <init>
    436:436:com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType valueOf(java.lang.String) -> valueOf
    436:436:com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType[] values() -> values
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat -> com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat:
    393:397:void <clinit>() -> <clinit>
    393:393:void <init>(java.lang.String,int) -> <init>
    393:393:com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat valueOf(java.lang.String) -> valueOf
    393:393:com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat[] values() -> values
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType -> com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType:
    403:430:void <clinit>() -> <clinit>
    403:403:void <init>(java.lang.String,int) -> <init>
    403:403:com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType valueOf(java.lang.String) -> valueOf
    403:403:com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType[] values() -> values
com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult -> com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult:
    447:469:void <clinit>() -> <clinit>
    447:447:void <init>(java.lang.String,int) -> <init>
    447:447:com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult valueOf(java.lang.String) -> valueOf
    447:447:com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult[] values() -> values
com.google.i18n.phonenumbers.Phonemetadata$NumberFormat -> com.google.i18n.phonenumbers.Phonemetadata$NumberFormat:
    39:148:void <init>() -> <init>
    105:105:int leadingDigitsPatternSize() -> leadingDigitsPatternSize
    180:192:void readExternal(java.io.ObjectInput) -> readExternal
    154:155:com.google.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String) -> setDomesticCarrierCodeFormattingRule
    95:96:com.google.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String) -> setFormat
    123:124:com.google.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String) -> setNationalPrefixFormattingRule
    141:142:com.google.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean) -> setNationalPrefixOptionalWhenFormatting
    84:85:com.google.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String) -> setPattern
    160:176:void writeExternal(java.io.ObjectOutput) -> writeExternal
com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata -> com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata:
    353:819:void <init>() -> <init>
    622:622:int getCountryCode() -> getCountryCode
    387:387:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getFixedLine() -> getFixedLine
    373:373:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc() -> getGeneralDesc
    633:633:java.lang.String getInternationalPrefix() -> getInternationalPrefix
    794:794:java.lang.String getLeadingDigits() -> getLeadingDigits
    401:401:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getMobile() -> getMobile
    692:692:java.lang.String getNationalPrefixForParsing() -> getNationalPrefixForParsing
    703:703:java.lang.String getNationalPrefixTransformRule() -> getNationalPrefixTransformRule
    485:485:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPager() -> getPager
    457:457:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPersonalNumber() -> getPersonalNumber
    429:429:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPremiumRate() -> getPremiumRate
    719:719:boolean getSameMobileAndFixedLinePattern() -> getSameMobileAndFixedLinePattern
    443:443:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getSharedCost() -> getSharedCost
    415:415:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getTollFree() -> getTollFree
    499:499:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getUan() -> getUan
    527:527:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getVoicemail() -> getVoicemail
    471:471:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getVoip() -> getVoip
    793:793:boolean hasLeadingDigits() -> hasLeadingDigits
    754:754:int intlNumberFormatSize() -> intlNumberFormatSize
    736:736:int numberFormatSize() -> numberFormatSize
    959:1116:void readExternal(java.io.ObjectInput) -> readExternal
    572:575:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCarrierSpecific(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setCarrierSpecific
    624:625:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCountryCode(int) -> setCountryCode
    516:519:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setEmergency(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setEmergency
    390:393:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setFixedLine(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setFixedLine
    376:379:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setGeneralDesc(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setGeneralDesc
    613:614:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setId(java.lang.String) -> setId
    635:636:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setInternationalPrefix(java.lang.String) -> setInternationalPrefix
    796:797:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingDigits(java.lang.String) -> setLeadingDigits
    807:808:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingZeroPossible(boolean) -> setLeadingZeroPossible
    780:781:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMainCountryForCode(boolean) -> setMainCountryForCode
    404:407:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobile(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setMobile
    823:824:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobileNumberPortableRegion(boolean) -> setMobileNumberPortableRegion
    662:663:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefix(java.lang.String) -> setNationalPrefix
    694:695:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixForParsing(java.lang.String) -> setNationalPrefixForParsing
    705:706:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixTransformRule(java.lang.String) -> setNationalPrefixTransformRule
    600:603:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNoInternationalDialling(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setNoInternationalDialling
    488:491:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPager(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setPager
    460:463:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPersonalNumber(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setPersonalNumber
    678:679:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredExtnPrefix(java.lang.String) -> setPreferredExtnPrefix
    646:647:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredInternationalPrefix(java.lang.String) -> setPreferredInternationalPrefix
    432:435:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPremiumRate(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setPremiumRate
    721:722:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSameMobileAndFixedLinePattern(boolean) -> setSameMobileAndFixedLinePattern
    446:449:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSharedCost(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setSharedCost
    544:547:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setShortCode(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setShortCode
    586:589:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSmsServices(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setSmsServices
    558:561:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setStandardRate(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setStandardRate
    418:421:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setTollFree(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setTollFree
    502:505:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setUan(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setUan
    530:533:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoicemail(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setVoicemail
    474:477:com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoip(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc) -> setVoip
    834:955:void writeExternal(java.io.ObjectOutput) -> writeExternal
com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection -> com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection:
    1122:1139:void <init>() -> <init>
    1144:1144:int getMetadataCount() -> getMetadataCount
    1142:1142:java.util.List getMetadataList() -> getMetadataList
    1163:1167:void readExternal(java.io.ObjectInput) -> readExternal
    1155:1158:void writeExternal(java.io.ObjectOutput) -> writeExternal
com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc -> com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc:
    198:285:void <init>() -> <init>
    235:235:java.lang.String getNationalNumberPattern() -> getNationalNumberPattern
    254:254:int getPossibleLength(int) -> getPossibleLength
    252:252:int getPossibleLengthCount() -> getPossibleLengthCount
    250:250:java.util.List getPossibleLengthList() -> getPossibleLengthList
    270:270:int getPossibleLengthLocalOnlyCount() -> getPossibleLengthLocalOnlyCount
    268:268:java.util.List getPossibleLengthLocalOnlyList() -> getPossibleLengthLocalOnlyList
    331:346:void readExternal(java.io.ObjectInput) -> readExternal
    289:290:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setExampleNumber(java.lang.String) -> setExampleNumber
    237:238:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setNationalNumberPattern(java.lang.String) -> setNationalNumberPattern
    307:326:void writeExternal(java.io.ObjectOutput) -> writeExternal
com.google.i18n.phonenumbers.Phonenumber$PhoneNumber -> com.google.i18n.phonenumbers.Phonenumber$PhoneNumber:
    39:166:void <init>() -> <init>
    159:160:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource() -> clearCountryCodeSource
    240:240:boolean equals(java.lang.Object) -> equals
    230:235:boolean exactlySameAs(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> exactlySameAs
    47:47:int getCountryCode() -> getCountryCode
    149:149:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource() -> getCountryCodeSource
    79:79:java.lang.String getExtension() -> getExtension
    63:63:long getNationalNumber() -> getNationalNumber
    114:114:int getNumberOfLeadingZeros() -> getNumberOfLeadingZeros
    168:168:java.lang.String getPreferredDomesticCarrierCode() -> getPreferredDomesticCarrierCode
    130:130:java.lang.String getRawInput() -> getRawInput
    46:46:boolean hasCountryCode() -> hasCountryCode
    148:148:boolean hasCountryCodeSource() -> hasCountryCodeSource
    78:78:boolean hasExtension() -> hasExtension
    97:97:boolean hasItalianLeadingZero() -> hasItalianLeadingZero
    113:113:boolean hasNumberOfLeadingZeros() -> hasNumberOfLeadingZeros
    167:167:boolean hasPreferredDomesticCarrierCode() -> hasPreferredDomesticCarrierCode
    250:258:int hashCode() -> hashCode
    98:98:boolean isItalianLeadingZero() -> isItalianLeadingZero
    49:50:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCode(int) -> setCountryCode
    152:155:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCodeSource(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource) -> setCountryCodeSource
    82:85:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber setExtension(java.lang.String) -> setExtension
    100:101:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber setItalianLeadingZero(boolean) -> setItalianLeadingZero
    65:66:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber setNationalNumber(long) -> setNationalNumber
    116:117:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber setNumberOfLeadingZeros(int) -> setNumberOfLeadingZeros
    171:174:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber setPreferredDomesticCarrierCode(java.lang.String) -> setPreferredDomesticCarrierCode
    133:136:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber setRawInput(java.lang.String) -> setRawInput
    264:283:java.lang.String toString() -> toString
com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource -> com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource:
    31:36:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource valueOf(java.lang.String) -> valueOf
    31:31:com.google.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource[] values() -> values
com.google.i18n.phonenumbers.ShortNumbersRegionCodeSet -> com.google.i18n.phonenumbers.ShortNumbersRegionCodeSet:
    31:272:java.util.Set getRegionCodeSet() -> getRegionCodeSet
com.google.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder -> com.google.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder:
    37:43:void <init>(java.lang.String) -> <init>
    67:83:java.lang.String getCountryNameForNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale) -> getCountryNameForNumber
    189:195:java.lang.String getDescriptionForNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale) -> getDescriptionForNumber
    113:139:java.lang.String getDescriptionForValidNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.util.Locale) -> getDescriptionForValidNumber
    56:59:com.google.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder getInstance() -> getInstance
    91:93:java.lang.String getRegionDisplayName(java.lang.String,java.util.Locale) -> getRegionDisplayName
com.google.i18n.phonenumbers.internal.RegexBasedMatcher -> com.google.i18n.phonenumbers.internal.RegexBasedMatcher:
    33:35:void <init>() -> <init>
    30:30:com.google.i18n.phonenumbers.internal.MatcherApi create() -> create
    50:54:boolean match(java.lang.CharSequence,java.util.regex.Pattern,boolean) -> match
    40:46:boolean matchNationalNumber(java.lang.CharSequence,com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc,boolean) -> matchNationalNumber
com.google.i18n.phonenumbers.internal.RegexCache -> com.google.i18n.phonenumbers.internal.RegexCache:
    31:32:void <init>(int) -> <init>
    36:39:java.util.regex.Pattern getPatternForRegex(java.lang.String) -> getPatternForRegex
com.google.i18n.phonenumbers.internal.RegexCache$LRUCache -> com.google.i18n.phonenumbers.internal.RegexCache$LRUCache:
    55:58:void <init>(int) -> <init>
    49:49:int access$000(com.google.i18n.phonenumbers.internal.RegexCache$LRUCache) -> access$000
    67:67:java.lang.Object get(java.lang.Object) -> get
    71:72:void put(java.lang.Object,java.lang.Object) -> put
com.google.i18n.phonenumbers.internal.RegexCache$LRUCache$1 -> com.google.i18n.phonenumbers.internal.RegexCache$LRUCache$1:
    58:58:void <init>(com.google.i18n.phonenumbers.internal.RegexCache$LRUCache,int,float,boolean) -> <init>
    61:61:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.google.i18n.phonenumbers.prefixmapper.DefaultMapStorage -> com.google.i18n.phonenumbers.prefixmapper.DefaultMapStorage:
    33:33:void <init>() -> <init>
    45:45:java.lang.String getDescription(int) -> getDescription
    40:40:int getPrefix(int) -> getPrefix
    63:77:void readExternal(java.io.ObjectInput) -> readExternal
    83:91:void writeExternal(java.io.ObjectOutput) -> writeExternal
com.google.i18n.phonenumbers.prefixmapper.FlyweightMapStorage -> com.google.i18n.phonenumbers.prefixmapper.FlyweightMapStorage:
    36:36:void <init>() -> <init>
    64:66:java.lang.String getDescription(int) -> getDescription
    55:55:int getPrefix(int) -> getPrefix
    141:150:void readEntries(java.io.ObjectInput) -> readEntries
    113:133:void readExternal(java.io.ObjectInput) -> readExternal
    203:205:void readExternalWord(java.io.ObjectInput,int,java.nio.ByteBuffer,int) -> readExternalWord
    241:241:int readWordFromBuffer(java.nio.ByteBuffer,int,int) -> readWordFromBuffer
    157:178:void writeExternal(java.io.ObjectOutput) -> writeExternal
    223:225:void writeExternalWord(java.io.ObjectOutput,int,java.nio.ByteBuffer,int) -> writeExternalWord
com.google.i18n.phonenumbers.prefixmapper.MappingFileProvider -> com.google.i18n.phonenumbers.prefixmapper.MappingFileProvider:
    49:54:void <clinit>() -> <clinit>
    43:62:void <init>() -> <init>
    227:228:void appendSubsequentLocalePart(java.lang.String,java.lang.StringBuilder) -> appendSubsequentLocalePart
    220:222:java.lang.StringBuilder constructFullLocale(java.lang.String,java.lang.String,java.lang.String) -> constructFullLocale
    178:207:java.lang.String findBestMatchingLanguageCode(java.util.Set,java.lang.String,java.lang.String,java.lang.String) -> findBestMatchingLanguageCode
    157:170:java.lang.String getFileName(int,java.lang.String,java.lang.String,java.lang.String) -> getFileName
    215:216:boolean onlyOneOfScriptOrRegionIsEmpty(java.lang.String,java.lang.String) -> onlyOneOfScriptOrRegionIsEmpty
    87:101:void readExternal(java.io.ObjectInput) -> readExternal
    128:139:java.lang.String toString() -> toString
    109:116:void writeExternal(java.io.ObjectOutput) -> writeExternal
com.google.i18n.phonenumbers.prefixmapper.PhonePrefixMap -> com.google.i18n.phonenumbers.prefixmapper.PhonePrefixMap:
    40:40:void <clinit>() -> <clinit>
    39:54:void <init>() -> <init>
    196:196:int binarySearch(int,int,long) -> binarySearch
    148:169:java.lang.String lookup(long) -> lookup
    181:183:java.lang.String lookup(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber) -> lookup
    121:127:void readExternal(java.io.ObjectInput) -> readExternal
    214:214:java.lang.String toString() -> toString
    134:135:void writeExternal(java.io.ObjectOutput) -> writeExternal
com.google.i18n.phonenumbers.prefixmapper.PhonePrefixMapStorageStrategy -> com.google.i18n.phonenumbers.prefixmapper.PhonePrefixMapStorageStrategy:
    32:34:void <init>() -> <init>
    85:85:int getNumOfEntries() -> getNumOfEntries
    92:92:java.util.TreeSet getPossibleLengths() -> getPossibleLengths
    97:106:java.lang.String toString() -> toString
com.google.i18n.phonenumbers.prefixmapper.PrefixFileReader -> com.google.i18n.phonenumbers.prefixmapper.PrefixFileReader:
    35:35:void <clinit>() -> <clinit>
    40:48:void <init>(java.lang.String) -> <init>
    96:98:void close(java.io.InputStream) -> close
    118:133:java.lang.String getDescriptionForNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,java.lang.String,java.lang.String) -> getDescriptionForNumber
    67:74:com.google.i18n.phonenumbers.prefixmapper.PhonePrefixMap getPhonePrefixDescriptions(int,java.lang.String,java.lang.String,java.lang.String) -> getPhonePrefixDescriptions
    52:62:void loadMappingFileProvider() -> loadMappingFileProvider
    78:90:void loadPhonePrefixMapFromFile(java.lang.String) -> loadPhonePrefixMapFromFile
    143:143:boolean mayFallBackToEnglish(java.lang.String) -> mayFallBackToEnglish
