# compiler: R8
# compiler_version: 3.0.41-sc04
# min_api: 32
# pg_map_id: 4203c08
# common_typos_disable
android.arch.core.executor.ArchTaskExecutor -> android.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    69:77:android.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
android.arch.core.executor.ArchTaskExecutor$1 -> android.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:45:void execute(java.lang.Runnable) -> execute
android.arch.core.executor.ArchTaskExecutor$2 -> android.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:53:void execute(java.lang.Runnable) -> execute
android.arch.core.executor.DefaultTaskExecutor -> android.arch.core.executor.DefaultTaskExecutor:
    32:34:void <init>() -> <init>
    41:41:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    59:59:boolean isMainThread() -> isMainThread
    46:54:void postToMainThread(java.lang.Runnable) -> postToMainThread
android.arch.core.executor.TaskExecutor -> android.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
android.arch.core.internal.FastSafeIterableMap -> android.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    66:66:boolean contains(java.lang.Object) -> contains
android.arch.core.internal.SafeIterableMap -> android.arch.core.internal.SafeIterableMap:
    35:42:void <init>() -> <init>
    35:35:android.arch.core.internal.SafeIterableMap$Entry access$100(android.arch.core.internal.SafeIterableMap) -> access$100
    149:150:java.util.Iterator descendingIterator() -> descendingIterator
    168:168:java.util.Map$Entry eldest() -> eldest
    183:200:boolean equals(java.lang.Object) -> equals
    206:208:int hashCode() -> hashCode
    139:140:java.util.Iterator iterator() -> iterator
    159:160:android.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    175:175:java.util.Map$Entry newest() -> newest
    129:129:int size() -> size
    215:225:java.lang.String toString() -> toString
android.arch.core.internal.SafeIterableMap$AscendingIterator -> android.arch.core.internal.SafeIterableMap$AscendingIterator:
    282:282:void <init>(android.arch.core.internal.SafeIterableMap$Entry,android.arch.core.internal.SafeIterableMap$Entry) -> <init>
    287:287:android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> forward
android.arch.core.internal.SafeIterableMap$DescendingIterator -> android.arch.core.internal.SafeIterableMap$DescendingIterator:
    299:299:void <init>(android.arch.core.internal.SafeIterableMap$Entry,android.arch.core.internal.SafeIterableMap$Entry) -> <init>
    304:304:android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> forward
android.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> android.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    313:315:void <init>(android.arch.core.internal.SafeIterableMap) -> <init>
    313:313:void <init>(android.arch.core.internal.SafeIterableMap,android.arch.core.internal.SafeIterableMap$1) -> <init>
    328:331:boolean hasNext() -> hasNext
    313:313:java.lang.Object next() -> next
    336:342:java.util.Map$Entry next() -> next
android.arch.core.internal.SafeIterableMap$ListIterator -> android.arch.core.internal.SafeIterableMap$ListIterator:
    233:235:void <init>(android.arch.core.internal.SafeIterableMap$Entry,android.arch.core.internal.SafeIterableMap$Entry) -> <init>
    240:240:boolean hasNext() -> hasNext
    228:228:java.lang.Object next() -> next
    270:271:java.util.Map$Entry next() -> next
    262:265:android.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
android.arch.lifecycle.Lifecycle -> android.arch.lifecycle.Lifecycle:
    75:75:void <init>() -> <init>
android.arch.lifecycle.Lifecycle$Event -> android.arch.lifecycle.Lifecycle$Event:
    114:143:void <clinit>() -> <clinit>
    115:115:void <init>(java.lang.String,int) -> <init>
    114:114:android.arch.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    114:114:android.arch.lifecycle.Lifecycle$Event[] values() -> values
android.arch.lifecycle.Lifecycle$State -> android.arch.lifecycle.Lifecycle$State:
    150:190:void <clinit>() -> <clinit>
    151:151:void <init>(java.lang.String,int) -> <init>
    199:199:boolean isAtLeast(android.arch.lifecycle.Lifecycle$State) -> isAtLeast
    150:150:android.arch.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    150:150:android.arch.lifecycle.Lifecycle$State[] values() -> values
android.arch.lifecycle.LifecycleRegistry -> android.arch.lifecycle.LifecycleRegistry:
    60:100:void <init>(android.arch.lifecycle.LifecycleOwner) -> <init>
    300:310:void backwardPass(android.arch.lifecycle.LifecycleOwner) -> backwardPass
    254:266:android.arch.lifecycle.Lifecycle$Event downEvent(android.arch.lifecycle.Lifecycle$State) -> downEvent
    285:294:void forwardPass(android.arch.lifecycle.LifecycleOwner) -> forwardPass
    232:232:android.arch.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    236:250:android.arch.lifecycle.Lifecycle$State getStateAfter(android.arch.lifecycle.Lifecycle$Event) -> getStateAfter
    123:124:void handleLifecycleEvent(android.arch.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    143:148:boolean isSynced() -> isSynced
    111:111:void markState(android.arch.lifecycle.Lifecycle$State) -> markState
    340:340:android.arch.lifecycle.Lifecycle$State min(android.arch.lifecycle.Lifecycle$State,android.arch.lifecycle.Lifecycle$State) -> min
    128:139:void moveToState(android.arch.lifecycle.Lifecycle$State) -> moveToState
    195:195:void popParentState() -> popParentState
    199:199:void pushParentState(android.arch.lifecycle.Lifecycle$State) -> pushParentState
    318:336:void sync() -> sync
    270:281:android.arch.lifecycle.Lifecycle$Event upEvent(android.arch.lifecycle.Lifecycle$State) -> upEvent
android.arch.lifecycle.LifecycleRegistry$1 -> android.arch.lifecycle.LifecycleRegistry$1:
    236:254:void <clinit>() -> <clinit>
android.arch.lifecycle.LifecycleRegistry$ObserverWithState -> android.arch.lifecycle.LifecycleRegistry$ObserverWithState:
    353:356:void dispatchEvent(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> dispatchEvent
android.arch.lifecycle.LiveData -> android.arch.lifecycle.LiveData:
    62:62:void <clinit>() -> <clinit>
    59:78:void <init>() -> <init>
    59:59:java.lang.Object access$000(android.arch.lifecycle.LiveData) -> access$000
    59:59:java.lang.Object access$100(android.arch.lifecycle.LiveData) -> access$100
    59:59:java.lang.Object access$102(android.arch.lifecycle.LiveData,java.lang.Object) -> access$102
    59:59:java.lang.Object access$200() -> access$200
    59:59:int access$300(android.arch.lifecycle.LiveData) -> access$300
    59:59:int access$302(android.arch.lifecycle.LiveData,int) -> access$302
    59:59:void access$400(android.arch.lifecycle.LiveData,android.arch.lifecycle.LiveData$ObserverWrapper) -> access$400
    436:437:void assertMainThread(java.lang.String) -> assertMainThread
    92:109:void considerNotify(android.arch.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    113:133:void dispatchingValue(android.arch.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    281:284:void setValue(java.lang.Object) -> setValue
android.arch.lifecycle.LiveData$1 -> android.arch.lifecycle.LiveData$1:
    78:78:void <init>(android.arch.lifecycle.LiveData) -> <init>
    82:87:void run() -> run
android.arch.lifecycle.LiveData$ObserverWrapper -> android.arch.lifecycle.LiveData$ObserverWrapper:
    403:418:void activeStateChanged(boolean) -> activeStateChanged
android.arch.lifecycle.MutableLiveData -> android.arch.lifecycle.MutableLiveData:
    25:25:void <init>() -> <init>
    33:33:void setValue(java.lang.Object) -> setValue
android.arch.lifecycle.ReportFragment -> android.arch.lifecycle.ReportFragment:
    31:31:void <init>() -> <init>
    113:122:void dispatch(android.arch.lifecycle.Lifecycle$Event) -> dispatch
    55:55:void dispatchCreate(android.arch.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    67:67:void dispatchResume(android.arch.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    61:61:void dispatchStart(android.arch.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    38:42:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    73:75:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    106:109:void onDestroy() -> onDestroy
    94:95:void onPause() -> onPause
    87:89:void onResume() -> onResume
    80:82:void onStart() -> onStart
    100:101:void onStop() -> onStop
android.arch.lifecycle.ViewModel -> android.arch.lifecycle.ViewModel:
    96:96:void <init>() -> <init>
android.arch.lifecycle.ViewModelProvider -> android.arch.lifecycle.ViewModelProvider:
    78:80:void <init>(android.arch.lifecycle.ViewModelStore,android.arch.lifecycle.ViewModelProvider$Factory) -> <init>
    99:103:android.arch.lifecycle.ViewModel get(java.lang.Class) -> get
    123:136:android.arch.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
android.arch.lifecycle.ViewModelStore -> android.arch.lifecycle.ViewModelStore:
    36:38:void <init>() -> <init>
    55:58:void clear() -> clear
    48:48:android.arch.lifecycle.ViewModel get(java.lang.String) -> get
    41:43:void put(java.lang.String,android.arch.lifecycle.ViewModel) -> put
android.support.design.widget.CoordinatorLayout$SavedState -> android.support.design.widget.CoordinatorLayout$SavedState:
    3277:3277:void <clinit>() -> <clinit>
    3239:3250:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3260:3273:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.widget.CoordinatorLayout$SavedState$1 -> android.support.design.widget.CoordinatorLayout$SavedState$1:
    3278:3278:void <init>() -> <init>
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3281:3281:android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3286:3286:android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object[] newArray(int) -> newArray
    3291:3291:android.support.design.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    169:169:android.support.v4.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    209:333:void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    379:379:android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    370:374:void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    597:607:void bumpBackStackNesting(int) -> bumpBackStackNesting
    642:642:int commitAllowingStateLoss() -> commitAllowingStateLoss
    669:684:int commitInternal(boolean) -> commitInternal
    396:429:void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    251:251:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    256:325:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    755:802:void executeOps() -> executeOps
    814:860:void executePopOps(boolean) -> executePopOps
    888:948:android.support.v4.app.Fragment expandOps(java.util.ArrayList,android.support.v4.app.Fragment) -> expandOps
    698:705:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    1017:1017:java.lang.String getName() -> getName
    711:714:boolean interactsWith(int) -> interactsWith
    726:738:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    1009:1011:boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op) -> isFragmentPostponed
    990:992:boolean isPostponed() -> isPostponed
    627:631:void runOnCommitRunnables() -> runOnCommitRunnables
    1000:1003:void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    235:247:java.lang.String toString() -> toString
    967:979:android.support.v4.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,android.support.v4.app.Fragment) -> trackAddedFragmentsInPop
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    200:200:void <init>() -> <init>
    203:205:void <init>(int,android.support.v4.app.Fragment) -> <init>
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
# {"id":"sourceFile","fileName":"BackStackRecord.java"}
    158:158:void <clinit>() -> <clinit>
    48:76:void <init>(android.support.v4.app.BackStackRecord) -> <init>
    79:91:void <init>(android.os.Parcel) -> <init>
    95:133:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    144:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
# {"id":"sourceFile","fileName":"BackStackRecord.java"}
    159:159:void <init>() -> <init>
    159:159:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    162:162:android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    159:159:java.lang.Object[] newArray(int) -> newArray
    167:167:android.support.v4.app.BackStackState[] newArray(int) -> newArray
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    87:90:void <clinit>() -> <clinit>
    99:398:void <init>() -> <init>
    85:85:void access$800(android.support.v4.app.Fragment) -> access$800
    85:85:android.arch.lifecycle.LifecycleRegistry access$900(android.support.v4.app.Fragment) -> access$900
    85:85:android.arch.lifecycle.LifecycleRegistry access$902(android.support.v4.app.Fragment,android.arch.lifecycle.LifecycleRegistry) -> access$902
    2261:2269:void callStartTransitionListener() -> callStartTransitionListener
    2283:2354:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2735:2738:android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    510:510:boolean equals(java.lang.Object) -> equals
    2359:2363:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    695:695:android.support.v4.app.FragmentActivity getActivity() -> getActivity
    2168:2169:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2193:2194:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    2793:2796:android.view.View getAnimatingAway() -> getAnimatingAway
    2808:2811:android.animation.Animator getAnimator() -> getAnimator
    829:841:android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    668:668:android.content.Context getContext() -> getContext
    1951:1954:java.lang.Object getEnterTransition() -> getEnterTransition
    2779:2782:android.support.v4.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2030:2033:java.lang.Object getExitTransition() -> getExitTransition
    2786:2789:android.support.v4.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    797:797:android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    1311:1317:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    258:258:android.arch.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    2742:2745:int getNextAnim() -> getNextAnim
    2756:2759:int getNextTransition() -> getNextTransition
    2772:2775:int getNextTransitionStyle() -> getNextTransitionStyle
    2068:2072:java.lang.Object getReenterTransition() -> getReenterTransition
    745:745:android.content.res.Resources getResources() -> getResources
    1990:1994:java.lang.Object getReturnTransition() -> getReturnTransition
    2101:2104:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2139:2144:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    2815:2818:int getStateAfterAnimating() -> getStateAfterAnimating
    1562:1562:android.view.View getView() -> getView
    320:326:android.arch.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    517:517:int hashCode() -> hashCode
    1733:1749:void initState() -> initState
    425:453:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    2369:2373:void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    2833:2836:boolean isHideReplaced() -> isHideReplaced
    503:503:boolean isInBackStack() -> isInBackStack
    2826:2829:boolean isPostponed() -> isPostponed
    589:592:boolean isStateSaved() -> isStateSaved
    468:474:boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    2501:2502:void noteStateNotSaved() -> noteStateNotSaved
    1580:1580:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1403:1407:void onAttach(android.content.Context) -> onAttach
    1420:1420:void onAttach(android.app.Activity) -> onAttach
    1667:1667:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1481:1485:void onCreate(android.os.Bundle) -> onCreate
    1855:1855:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1719:1722:void onDestroy() -> onDestroy
    1707:1709:void onDestroyView() -> onDestroyView
    1758:1758:void onDetach() -> onDetach
    1262:1262:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1365:1369:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1382:1382:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1693:1693:void onLowMemory() -> onLowMemory
    1677:1677:void onPause() -> onPause
    1620:1620:void onResume() -> onResume
    1609:1609:void onStart() -> onStart
    1687:1687:void onStop() -> onStop
    1596:1598:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    850:850:android.support.v4.app.FragmentManager peekChildFragmentManager() -> peekChildFragmentManager
    2442:2453:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2521:2523:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    2588:2593:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2396:2407:void performCreate(android.os.Bundle) -> performCreate
    2545:2551:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2412:2437:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    2680:2692:void performDestroy() -> performDestroy
    2661:2676:void performDestroyView() -> performDestroyView
    2696:2713:void performDetach() -> performDetach
    1293:1294:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    2528:2530:void performLowMemory() -> performLowMemory
    2507:2509:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    2572:2579:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    2602:2607:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    2623:2634:void performPause() -> performPause
    2514:2516:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    2559:2565:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    2654:2657:void performReallyStop() -> performReallyStop
    2479:2496:void performResume() -> performResume
    2613:2617:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    2458:2474:void performStart() -> performStart
    2640:2648:void performStop() -> performStop
    679:681:android.content.Context requireContext() -> requireContext
    1503:1511:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    481:488:void restoreViewState(android.os.Bundle) -> restoreViewState
    2800:2800:void setAnimatingAway(android.view.View) -> setAnimatingAway
    2804:2804:void setAnimator(android.animation.Animator) -> setAnimator
    565:568:void setArguments(android.os.Bundle) -> setArguments
    2840:2840:void setHideReplaced(boolean) -> setHideReplaced
    494:498:void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    2749:2752:void setNextAnim(int) -> setNextAnim
    2763:2768:void setNextTransition(int,int) -> setNextTransition
    2718:2730:void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    2822:2822:void setStateAfterAnimating(int) -> setStateAfterAnimating
    2242:2252:void startPostponedEnterTransition() -> startPostponedEnterTransition
    522:537:java.lang.String toString() -> toString
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    2245:2245:void <init>(android.support.v4.app.Fragment) -> <init>
    2248:2248:void run() -> run
android.support.v4.app.Fragment$2 -> android.support.v4.app.Fragment$2:
    2373:2373:void <init>(android.support.v4.app.Fragment) -> <init>
    2390:2390:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    2377:2380:android.view.View onFindViewById(int) -> onFindViewById
    2385:2385:boolean onHasView() -> onHasView
android.support.v4.app.Fragment$3 -> android.support.v4.app.Fragment$3:
    2416:2416:void <init>(android.support.v4.app.Fragment) -> <init>
    2419:2422:android.arch.lifecycle.Lifecycle getLifecycle() -> getLifecycle
android.support.v4.app.Fragment$AnimationInfo -> android.support.v4.app.Fragment$AnimationInfo:
    2857:2885:void <init>() -> <init>
    2857:2857:java.lang.Object access$000(android.support.v4.app.Fragment$AnimationInfo) -> access$000
    2857:2857:java.lang.Object access$100(android.support.v4.app.Fragment$AnimationInfo) -> access$100
    2857:2857:java.lang.Object access$200(android.support.v4.app.Fragment$AnimationInfo) -> access$200
    2857:2857:java.lang.Object access$300(android.support.v4.app.Fragment$AnimationInfo) -> access$300
    2857:2857:java.lang.Object access$400(android.support.v4.app.Fragment$AnimationInfo) -> access$400
    2857:2857:java.lang.Object access$500(android.support.v4.app.Fragment$AnimationInfo) -> access$500
    2857:2857:java.lang.Boolean access$600(android.support.v4.app.Fragment$AnimationInfo) -> access$600
    2857:2857:java.lang.Boolean access$700(android.support.v4.app.Fragment$AnimationInfo) -> access$700
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
    379:379:void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    358:358:void <clinit>() -> <clinit>
    341:344:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    355:355:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    359:359:void <init>() -> <init>
    359:359:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    362:362:android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    359:359:java.lang.Object[] newArray(int) -> newArray
    367:367:android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    68:109:void <init>() -> <init>
    831:831:void checkForValidRequestCode(int) -> checkForValidRequestCode
    403:403:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    715:719:void doReallyStop(boolean) -> doReallyStop
    700:711:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    322:322:android.arch.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    754:754:android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    305:312:android.arch.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1076:1076:void markFragmentsCreated() -> markFragmentsCreated
    1082:1094:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State) -> markState
    153:180:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    189:199:void onBackPressed() -> onBackPressed
    292:294:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    331:367:void onCreate(android.os.Bundle) -> onCreate
    376:380:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    385:387:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    394:396:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    411:419:void onDestroy() -> onDestroy
    427:428:void onLowMemory() -> onLowMemory
    436:445:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    269:269:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    491:492:void onNewIntent(android.content.Intent) -> onNewIntent
    459:462:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    470:476:void onPause() -> onPause
    284:284:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    525:528:void onPostResume() -> onPostResume
    559:559:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    547:551:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    731:731:void onReallyStop() -> onReallyStop
    870:885:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    514:517:void onResume() -> onResume
    538:538:void onResumeFragments() -> onResumeFragments
    569:584:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    593:609:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    618:634:void onStart() -> onStart
    500:500:void onStateNotSaved() -> onStateNotSaved
    642:648:void onStop() -> onStop
    774:779:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    787:792:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    801:806:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    816:821:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    685:685:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    83:83:void <init>(android.support.v4.app.FragmentActivity) -> <init>
    86:97:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$HostCallbacks -> android.support.v4.app.FragmentActivity$HostCallbacks:
    983:984:void <init>(android.support.v4.app.FragmentActivity) -> <init>
    1057:1057:void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    989:989:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    1063:1063:android.view.View onFindViewById(int) -> onFindViewById
    999:999:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    1051:1052:int onGetWindowAnimations() -> onGetWindowAnimations
    1068:1069:boolean onHasView() -> onHasView
    1046:1046:boolean onHasWindowAnimations() -> onHasWindowAnimations
    994:994:boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    1009:1009:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    138:138:void <init>() -> <init>
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    30:30:void <init>() -> <init>
    50:50:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
android.support.v4.app.FragmentController -> android.support.v4.app.FragmentController:
    52:53:void <init>(android.support.v4.app.FragmentHostCallback) -> <init>
    104:104:void attachHost(android.support.v4.app.Fragment) -> attachHost
    49:49:android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback) -> createController
    201:201:void dispatchActivityCreated() -> dispatchActivityCreated
    304:304:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    366:366:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    190:190:void dispatchCreate() -> dispatchCreate
    328:328:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    271:271:void dispatchDestroy() -> dispatchDestroy
    316:316:void dispatchLowMemory() -> dispatchLowMemory
    282:282:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    353:353:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    377:377:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    234:234:void dispatchPause() -> dispatchPause
    293:293:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    340:340:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    249:249:void dispatchReallyStop() -> dispatchReallyStop
    223:223:void dispatchResume() -> dispatchResume
    212:212:void dispatchStart() -> dispatchStart
    245:245:void dispatchStop() -> dispatchStop
    388:388:boolean execPendingActions() -> execPendingActions
    82:82:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    60:60:android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    127:127:void noteStateNotSaved() -> noteStateNotSaved
    120:120:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    158:158:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> restoreAllState
    179:179:android.support.v4.app.FragmentManagerNonConfig retainNestedNonConfig() -> retainNestedNonConfig
    134:134:android.os.Parcelable saveAllState() -> saveAllState
android.support.v4.app.FragmentHostCallback -> android.support.v4.app.FragmentHostCallback:
    57:57:void <init>(android.support.v4.app.FragmentActivity) -> <init>
    48:65:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    190:190:android.app.Activity getActivity() -> getActivity
    195:195:android.content.Context getContext() -> getContext
    204:204:android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl() -> getFragmentManagerImpl
    200:200:android.os.Handler getHandler() -> getHandler
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    88:88:void <init>() -> <init>
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    1129:1132:void <clinit>() -> <clinit>
    663:730:void <init>() -> <init>
    663:663:void access$500(android.support.v4.app.FragmentManagerImpl) -> access$500
    663:663:void access$600(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord,boolean,boolean,boolean) -> access$600
    2646:2658:void addAddedFragments(android.support.v4.util.ArraySet) -> addAddedFragments
    2748:2751:void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    1923:1941:void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    2154:2170:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    1641:1690:void animateRemoveFragment(android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator,int) -> animateRemoveFragment
    3210:3213:void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachController
    2012:2025:void attachFragment(android.support.v4.app.Fragment) -> attachFragment
    809:809:android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    3199:3202:void burpActive() -> burpActive
    2090:2095:void checkStateLoss() -> checkStateLoss
    2268:2270:void cleanupExec() -> cleanupExec
    2541:2571:void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1725:1774:void completeShowHideFragment(android.support.v4.app.Fragment) -> completeShowHideFragment
    1994:2006:void detachFragment(android.support.v4.app.Fragment) -> detachFragment
    3236:3238:void dispatchActivityCreated() -> dispatchActivityCreated
    3308:3311:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3390:3396:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3230:3232:void dispatchCreate() -> dispatchCreate
    3326:3353:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3271:3276:void dispatchDestroy() -> dispatchDestroy
    3267:3267:void dispatchDestroyView() -> dispatchDestroyView
    3317:3320:void dispatchLowMemory() -> dispatchLowMemory
    3290:3293:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3516:3525:void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    3468:3477:void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    3500:3509:void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    3638:3647:void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    3653:3662:void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentDetached
    3577:3586:void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentPaused
    3452:3461:void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    3484:3493:void dispatchOnFragmentPreCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    3562:3571:void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentResumed
    3608:3617:void dispatchOnFragmentSaveInstanceState(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    3547:3556:void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentStarted
    3592:3601:void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentStopped
    3532:3541:void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    3623:3632:void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    3375:3381:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3405:3411:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3254:3254:void dispatchPause() -> dispatchPause
    3299:3302:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3359:3366:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3263:3263:void dispatchReallyStop() -> dispatchReallyStop
    3248:3250:void dispatchResume() -> dispatchResume
    3242:3244:void dispatchStart() -> dispatchStart
    3281:3286:void dispatchStateChange(int) -> dispatchStateChange
    3258:3259:void dispatchStop() -> dispatchStop
    2733:2735:void doPendingDeferredStart() -> doPendingDeferredStart
    1020:1125:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2680:2698:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    2117:2132:void enqueueAction(android.support.v4.app.FragmentManagerImpl$OpGenerator,boolean) -> enqueueAction
    2216:2240:void ensureExecReady(boolean) -> ensureExecReady
    1699:1709:void ensureInflatedFragmentView(android.support.v4.app.Fragment) -> ensureInflatedFragmentView
    2277:2291:boolean execPendingActions() -> execPendingActions
    2624:2634:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2396:2449:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    2302:2324:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    2035:2045:android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    2058:2069:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    2078:2081:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2595:2605:android.support.v4.app.Fragment findFragmentUnder(android.support.v4.app.Fragment) -> findFragmentUnder
    2668:2670:void forcePostponedTransactions() -> forcePostponedTransactions
    2199:2206:void freeBackStackIndex(int) -> freeBackStackIndex
    2717:2728:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    1300:1308:android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation) -> getAnimationListener
    932:938:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    946:951:java.util.List getFragments() -> getFragments
    3429:3429:android.support.v4.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    1968:1973:void hideFragment(android.support.v4.app.Fragment) -> hideFragment
    1314:1314:boolean isStateAtLeast(int) -> isStateAtLeast
    2105:2105:boolean isStateSaved() -> isStateSaved
    1160:1237:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    1897:1906:void makeActive(android.support.v4.app.Fragment) -> makeActive
    1152:1155:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    1910:1919:void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    1138:1148:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    2461:2467:void makeRemovedFragmentsInvisible(android.support.v4.util.ArraySet) -> makeRemovedFragmentsInvisible
    738:749:boolean modifiesAlpha(android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> modifiesAlpha
    757:768:boolean modifiesAlpha(android.animation.Animator) -> modifiesAlpha
    1787:1833:void moveFragmentToExpectedState(android.support.v4.app.Fragment) -> moveFragmentToExpectedState
    1321:1627:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    1695:1695:void moveToState(android.support.v4.app.Fragment) -> moveToState
    1847:1880:void moveToState(int,boolean) -> moveToState
    3217:3224:void noteStateNotSaved() -> noteStateNotSaved
    3709:3800:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3805:3805:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1257:1264:void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    826:827:boolean popBackStackImmediate() -> popBackStackImmediate
    867:891:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2757:2805:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2489:2517:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,android.support.v4.util.ArraySet) -> postponePostponableTransactions
    922:926:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    1947:1957:void removeFragment(android.support.v4.app.Fragment) -> removeFragment
    2346:2382:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2740:2742:void reportBackStackChanged() -> reportBackStackChanged
    3064:3190:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> restoreAllState
    2812:2813:android.support.v4.app.FragmentManagerNonConfig retainNonConfig() -> retainNonConfig
    2950:3056:android.os.Parcelable saveAllState() -> saveAllState
    2916:2941:android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    2898:2909:void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    2844:2892:void saveNonConfig() -> saveNonConfig
    2142:2150:void scheduleCommit() -> scheduleCommit
    2174:2195:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    1279:1288:void setHWLayerAnimListenerIfAlpha(android.view.View,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> setHWLayerAnimListenerIfAlpha
    3418:3423:void setPrimaryNavigationFragment(android.support.v4.app.Fragment) -> setPrimaryNavigationFragment
    2826:2835:void setRetaining(android.support.v4.app.FragmentManagerNonConfig) -> setRetaining
    780:783:boolean shouldRunOnHWLayer(android.view.View,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> shouldRunOnHWLayer
    1984:1989:void showFragment(android.support.v4.app.Fragment) -> showFragment
    1886:1891:void startPendingDeferredFragments() -> startPendingDeferredFragments
    787:804:void throwException(java.lang.RuntimeException) -> throwException
    1005:1015:java.lang.String toString() -> toString
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    730:730:void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    733:733:void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    1650:1650:void <init>(android.support.v4.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,android.support.v4.app.Fragment) -> <init>
    1653:1658:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$2$1 -> android.support.v4.app.FragmentManagerImpl$2$1:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    1658:1658:void <init>(android.support.v4.app.FragmentManagerImpl$2) -> <init>
    1661:1663:void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    1675:1675:void <init>(android.support.v4.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.support.v4.app.Fragment) -> <init>
    1678:1684:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    1739:1739:void <init>(android.support.v4.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.support.v4.app.Fragment) -> <init>
    1742:1745:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    4017:4018:void <init>(android.view.View,android.view.animation.Animation$AnimationListener) -> <init>
    4034:4044:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    4035:4035:void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    4038:4038:void run() -> run
android.support.v4.app.FragmentManagerImpl$AnimationListenerWrapper -> android.support.v4.app.FragmentManagerImpl$AnimationListenerWrapper:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3978:3978:void <init>(android.view.animation.Animation$AnimationListener,android.support.v4.app.FragmentManagerImpl$1) -> <init>
    3981:3982:void <init>(android.view.animation.Animation$AnimationListener) -> <init>
    3996:3997:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    4004:4005:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    3988:3989:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator -> android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3954:3954:void <init>(android.animation.Animator,android.support.v4.app.FragmentManagerImpl$1) -> <init>
    3954:3954:void <init>(android.view.animation.Animation,android.support.v4.app.FragmentManagerImpl$1) -> <init>
    3958:3962:void <init>(android.view.animation.Animation) -> <init>
    3966:3970:void <init>(android.animation.Animator) -> <init>
android.support.v4.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    4054:4055:void <init>(android.view.View) -> <init>
    4065:4066:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    4060:4060:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$EndViewTransitionAnimator -> android.support.v4.app.FragmentManagerImpl$EndViewTransitionAnimator:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    4084:4087:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    4092:4098:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    4106:4112:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    4119:4120:void run() -> run
android.support.v4.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder -> android.support.v4.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3813:3813:void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerImpl$OpGenerator -> android.support.v4.app.FragmentManagerImpl$OpGenerator:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener -> android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    3886:3888:void <init>(android.support.v4.app.BackStackRecord,boolean) -> <init>
    3880:3880:boolean access$300(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener) -> access$300
    3880:3880:android.support.v4.app.BackStackRecord access$400(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener) -> access$400
    3947:3947:void cancelTransaction() -> cancelTransaction
    3929:3939:void completeTransaction() -> completeTransaction
    3919:3919:boolean isReady() -> isReady
    3898:3902:void onStartEnterTransition() -> onStartEnterTransition
    3912:3912:void startListening() -> startListening
android.support.v4.app.FragmentManagerNonConfig -> android.support.v4.app.FragmentManagerNonConfig:
    42:45:void <init>(java.util.List,java.util.List,java.util.List) -> <init>
    59:59:java.util.List getChildNonConfigs() -> getChildNonConfigs
    52:52:java.util.List getFragments() -> getFragments
    66:66:java.util.List getViewModelStores() -> getViewModelStores
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    646:646:void <clinit>() -> <clinit>
    618:621:void <init>() -> <init>
    618:629:void <init>(android.os.Parcel) -> <init>
    639:643:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
# {"id":"sourceFile","fileName":"FragmentManager.java"}
    647:647:void <init>() -> <init>
    647:647:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    650:650:android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    647:647:java.lang.Object[] newArray(int) -> newArray
    655:655:android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    129:129:void <clinit>() -> <clinit>
    43:53:void <init>(android.support.v4.app.Fragment) -> <init>
    56:67:void <init>(android.os.Parcel) -> <init>
    73:105:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig,android.arch.lifecycle.ViewModelStore) -> instantiate
    116:126:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    130:130:void <init>() -> <init>
    130:130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    133:133:android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    130:130:java.lang.Object[] newArray(int) -> newArray
    138:138:android.support.v4.app.FragmentState[] newArray(int) -> newArray
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    119:119:void <clinit>() -> <clinit>
    102:103:void <init>(android.os.Parcel) -> <init>
    114:115:java.lang.String toString() -> toString
    108:109:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    120:120:void <init>() -> <init>
    120:120:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    123:123:android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    120:120:java.lang.Object[] newArray(int) -> newArray
    128:128:android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    44:44:void <init>() -> <init>
android.support.v4.app.FragmentTransition -> android.support.v4.app.FragmentTransition:
    44:61:void <clinit>() -> <clinit>
    39:39:void access$000(java.util.ArrayList,int) -> access$000
    39:39:java.util.ArrayList access$100(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View) -> access$100
    39:39:void access$200(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean) -> access$200
    39:39:android.support.v4.util.ArrayMap access$300(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> access$300
    39:39:android.view.View access$400(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> access$400
    646:649:void addSharedElementsWithMatchingNames(java.util.ArrayList,android.support.v4.util.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1118:1203:void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1070:1073:void calculateFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    161:186:android.support.v4.util.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1087:1093:void calculatePopFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    976:977:void callSharedElementStartEnd(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean) -> callSharedElementStartEnd
    469:470:boolean canHandleAll(android.support.v4.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    837:879:android.support.v4.util.ArrayMap captureInSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    782:815:android.support.v4.util.ArrayMap captureOutSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    423:463:android.support.v4.app.FragmentTransitionImpl chooseImpl(android.support.v4.app.Fragment,android.support.v4.app.Fragment) -> chooseImpl
    999:1009:java.util.ArrayList configureEnteringExitingViews(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    689:734:java.lang.Object configureSharedElementsOrdered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    560:622:java.lang.Object configureSharedElementsReordered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    311:365:void configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap) -> configureTransitionsOrdered
    213:264:void configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap) -> configureTransitionsReordered
    1216:1217:android.support.v4.app.FragmentTransition$FragmentContainerTransition ensureContainer(android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    508:510:java.lang.Object getEnterTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,boolean) -> getEnterTransition
    521:523:java.lang.Object getExitTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,boolean) -> getExitTransition
    909:916:android.view.View getInEpicenterView(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    494:497:java.lang.Object getSharedElementTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    1037:1053:java.lang.Object mergeTransitions(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,android.support.v4.app.Fragment,boolean) -> mergeTransitions
    277:283:void replaceHide(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList) -> replaceHide
    66:68:android.support.v4.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    954:957:void retainValues(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> retainValues
    392:392:void scheduleTargetChange(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.support.v4.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    933:942:void setOutEpicenter(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,android.support.v4.util.ArrayMap,boolean,android.support.v4.app.BackStackRecord) -> setOutEpicenter
    1022:1024:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    105:136:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> startTransitions
android.support.v4.app.FragmentTransition$1 -> android.support.v4.app.FragmentTransition$1:
    283:283:void <init>(java.util.ArrayList) -> <init>
    286:286:void run() -> run
android.support.v4.app.FragmentTransition$2 -> android.support.v4.app.FragmentTransition$2:
    392:392:void <init>(java.lang.Object,android.support.v4.app.FragmentTransitionImpl,android.view.View,android.support.v4.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    395:411:void run() -> run
android.support.v4.app.FragmentTransition$3 -> android.support.v4.app.FragmentTransition$3:
    622:622:void <init>(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,android.view.View,android.support.v4.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    625:628:void run() -> run
android.support.v4.app.FragmentTransition$4 -> android.support.v4.app.FragmentTransition$4:
    734:734:void <init>(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    737:755:void run() -> run
android.support.v4.app.FragmentTransition$FragmentContainerTransition -> android.support.v4.app.FragmentTransition$FragmentContainerTransition:
    1226:1226:void <init>() -> <init>
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    32:32:void <init>() -> <init>
    288:289:void addTarget(java.lang.Object,android.view.View) -> addTarget
    92:109:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    206:206:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    36:36:boolean canHandle(java.lang.Object) -> canHandle
    43:43:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    119:121:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    179:197:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    127:135:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    296:297:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    261:279:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    143:144:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    214:215:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    77:81:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    304:305:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    61:71:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    250:254:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    53:54:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    81:81:void <init>(android.support.v4.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    144:144:void <init>(android.support.v4.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    151:155:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    215:215:void <init>(android.support.v4.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    218:225:void onTransitionStart(android.transition.Transition) -> onTransitionStart
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    305:305:void <init>(android.support.v4.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    308:311:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionImpl -> android.support.v4.app.FragmentTransitionImpl:
    38:38:void <init>() -> <init>
    311:324:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    189:202:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    337:337:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    356:358:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    212:222:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    76:77:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    348:348:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    130:135:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    292:292:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    233:233:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    149:169:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
android.support.v4.app.FragmentTransitionImpl$1 -> android.support.v4.app.FragmentTransitionImpl$1:
    169:169:void <init>(android.support.v4.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    172:174:void run() -> run
android.support.v4.app.FragmentTransitionImpl$2 -> android.support.v4.app.FragmentTransitionImpl$2:
    233:233:void <init>(android.support.v4.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    236:242:void run() -> run
android.support.v4.app.FragmentTransitionImpl$3 -> android.support.v4.app.FragmentTransitionImpl$3:
    292:292:void <init>(android.support.v4.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    295:300:void run() -> run
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    40:40:void <init>() -> <init>
    128:128:android.support.v4.app.LoaderManager getInstance(android.arch.lifecycle.LifecycleOwner) -> getInstance
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    371:373:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore) -> <init>
    498:498:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:481:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    149:151:android.support.v4.content.Loader destroy(boolean) -> destroy
    212:215:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    76:77:void onActive() -> onActive
    82:83:void onInactive() -> onInactive
    189:189:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
android.support.v4.app.LoaderManagerImpl$LoaderViewModel -> android.support.v4.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:361:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:android.support.v4.app.LoaderManagerImpl$LoaderViewModel getInstance(android.arch.lifecycle.ViewModelStore) -> getInstance
    335:338:void markForRedelivery() -> markForRedelivery
    344:350:void onCleared() -> onCleared
android.support.v4.app.LoaderManagerImpl$LoaderViewModel$1 -> android.support.v4.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:android.arch.lifecycle.ViewModel create(java.lang.Class) -> create
android.support.v4.app.OneShotPreDrawListener -> android.support.v4.app.OneShotPreDrawListener:
    41:44:void <init>(android.view.View,java.lang.Runnable) -> <init>
    55:57:android.support.v4.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    63:64:boolean onPreDraw() -> onPreDraw
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    88:88:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    73:78:void removeListener() -> removeListener
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
    23:23:void <init>(java.lang.String) -> <init>
android.support.v4.app.SupportActivity -> android.support.v4.app.SupportActivity:
# {"id":"sourceFile","fileName":"ComponentActivity.java"}
    43:52:void <init>() -> <init>
    95:95:android.arch.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    71:72:void onCreate(android.os.Bundle) -> onCreate
    78:79:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    150:150:void <clinit>() -> <clinit>
android.support.v4.graphics.drawable.IconCompat -> android.support.v4.graphics.drawable.IconCompat:
    178:178:void <clinit>() -> <clinit>
    174:301:void <init>() -> <init>
    941:975:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    350:356:int getResId() -> getResId
    887:899:int getResId(android.graphics.drawable.Icon) -> getResId
    332:338:java.lang.String getResPackage() -> getResPackage
    858:870:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    723:751:void onPostParceling() -> onPostParceling
    687:716:void onPreParceling(boolean) -> onPreParceling
    646:682:java.lang.String toString() -> toString
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    10:10:void <init>() -> <init>
    12:12:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    16:16:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesCompatParcelizer -> android.support.v4.media.AudioAttributesCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi21Parcelizer -> android.support.v4.media.AudioAttributesImplApi21Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplApi26Parcelizer -> android.support.v4.media.AudioAttributesImplApi26Parcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.AudioAttributesImplBaseParcelizer -> android.support.v4.media.AudioAttributesImplBaseParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    2278:2289:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    572:572:void <clinit>() -> <clinit>
    546:548:void <init>(android.os.Parcel) -> <init>
    565:569:java.lang.String toString() -> toString
    558:559:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    573:573:void <init>() -> <init>
    573:573:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    576:576:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    573:573:java.lang.Object[] newArray(int) -> newArray
    581:581:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    2310:2326:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    426:426:void <clinit>() -> <clinit>
    195:203:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    206:216:void <init>(android.os.Parcel) -> <init>
    380:418:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    336:362:java.lang.Object getMediaDescription() -> getMediaDescription
    321:321:java.lang.String toString() -> toString
    305:315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    427:427:void <init>() -> <init>
    427:427:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    430:433:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    427:427:java.lang.Object[] newArray(int) -> newArray
    439:439:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    459:459:void <init>() -> <init>
    560:560:android.support.v4.media.MediaDescriptionCompat build() -> build
    503:503:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    538:538:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    515:515:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    527:527:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    469:469:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    549:549:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    491:491:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    480:480:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    299:632:void <clinit>() -> <clinit>
    364:365:void <init>(android.os.Parcel) -> <init>
    598:604:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    553:553:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    633:633:void <init>() -> <init>
    633:633:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    636:636:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    633:633:java.lang.Object[] newArray(int) -> newArray
    641:641:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    131:131:void <clinit>() -> <clinit>
    109:111:void <init>(int,float) -> <init>
    122:122:int describeContents() -> describeContents
    116:117:java.lang.String toString() -> toString
    127:128:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    140:140:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    145:145:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    67:68:void <init>() -> <init>
    96:233:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    212:216:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    2051:2051:android.support.v4.media.session.IMediaSession getDefaultImpl() -> getDefaultImpl
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    831:832:void <init>(android.os.IBinder) -> <init>
    836:836:android.os.IBinder asBinder() -> asBinder
    906:921:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    696:701:void <init>() -> <init>
    828:828:void binderDied() -> binderDied
android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$MediaControllerCallbackApi21:
    860:861:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    934:941:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    925:928:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    901:903:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    888:894:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    909:911:void onQueueChanged(java.util.List) -> onQueueChanged
    917:919:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    866:868:void onSessionDestroyed() -> onSessionDestroyed
    874:881:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    949:950:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    1003:1006:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    955:957:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    1034:1036:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    979:981:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    971:973:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    987:989:void onQueueChanged(java.util.List) -> onQueueChanged
    995:997:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    1012:1014:void onRepeatModeChanged(int) -> onRepeatModeChanged
    963:965:void onSessionDestroyed() -> onSessionDestroyed
    1055:1057:void onSessionReady() -> onSessionReady
    1025:1028:void onShuffleModeChanged(int) -> onShuffleModeChanged
    1042:1049:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    2290:2305:void processPendingCallbacksLocked() -> processPendingCallbacksLocked
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    2318:2331:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    2337:2337:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2367:2367:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2349:2349:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2355:2355:void onQueueChanged(java.util.List) -> onQueueChanged
    2361:2361:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2343:2343:void onSessionDestroyed() -> onSessionDestroyed
    2373:2373:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    1384:1384:void <init>(int,int,int,int,int) -> <init>
    1389:1394:void <init>(int,androidx.media.AudioAttributesCompat,int,int,int) -> <init>
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    1059:1059:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
    1076:1082:android.os.Bundle unparcelWithClassLoader(android.os.Bundle) -> unparcelWithClassLoader
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    2270:2270:void <clinit>() -> <clinit>
    2165:2174:void <init>(android.media.session.MediaSession$QueueItem,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    2177:2179:void <init>(android.os.Parcel) -> <init>
    2238:2246:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    2260:2265:java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    2286:2286:java.lang.String toString() -> toString
    2198:2199:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    2271:2271:void <init>() -> <init>
    2271:2271:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2275:2275:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    2271:2271:java.lang.Object[] newArray(int) -> newArray
    2280:2280:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    2310:2310:void <clinit>() -> <clinit>
    2305:2306:void <init>(android.os.Parcel) -> <init>
    2329:2329:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    2310:2310:void <init>() -> <init>
    2310:2310:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2313:2313:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    2310:2310:java.lang.Object[] newArray(int) -> newArray
    2318:2318:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    2115:2115:void <clinit>() -> <clinit>
    1930:1930:void <init>(java.lang.Object) -> <init>
    1921:1940:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,androidx.versionedparcelable.VersionedParcelable) -> <init>
    2010:2021:boolean equals(java.lang.Object) -> equals
    2042:2044:android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    1999:2002:int hashCode() -> hashCode
    2052:2054:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> setExtraBinder
    2072:2074:void setSession2Token(androidx.versionedparcelable.VersionedParcelable) -> setSession2Token
    1990:1993:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    2116:2116:void <init>() -> <init>
    2116:2116:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2120:2125:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    2116:2116:java.lang.Object[] newArray(int) -> newArray
    2130:2130:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    67:67:void <clinit>() -> <clinit>
    44:49:void <init>(android.os.Parcel) -> <init>
    59:63:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    68:68:java.lang.Object[] newArray(int) -> newArray
    76:76:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    871:871:void <clinit>() -> <clinit>
    564:575:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    578:590:void <init>(android.os.Parcel) -> <init>
    807:836:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    595:607:java.lang.String toString() -> toString
    617:628:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    872:872:void <init>() -> <init>
    872:872:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    875:875:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    872:872:java.lang.Object[] newArray(int) -> newArray
    880:880:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    978:978:void <clinit>() -> <clinit>
    900:904:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    907:911:void <init>(android.os.Parcel) -> <init>
    939:953:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    1035:1035:java.lang.String toString() -> toString
    916:919:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    979:979:void <init>() -> <init>
    979:979:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    983:983:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    979:979:java.lang.Object[] newArray(int) -> newArray
    988:988:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.os.BuildCompat -> android.support.v4.os.BuildCompat:
    87:87:boolean isAtLeastP() -> isAtLeastP
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    15:16:void <init>() -> <init>
    27:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    43:62:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    68:69:void <init>(android.os.IBinder) -> <init>
    73:73:android.os.IBinder asBinder() -> asBinder
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    142:142:void <clinit>() -> <clinit>
    136:139:void <init>(android.os.Parcel) -> <init>
    128:133:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    143:143:void <init>() -> <init>
    143:143:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    146:146:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    143:143:java.lang.Object[] newArray(int) -> newArray
    150:150:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    65:65:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    68:71:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    54:56:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    61:61:void run() -> run
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    54:54:void <init>() -> <init>
    179:179:java.util.Set entrySet() -> entrySet
    72:120:android.support.v4.util.MapCollections getCollection() -> getCollection
    191:191:java.util.Set keySet() -> keySet
    139:141:void putAll(java.util.Map) -> putAll
    161:161:boolean retainAll(java.util.Collection) -> retainAll
    203:203:java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    73:73:void <init>(android.support.v4.util.ArrayMap) -> <init>
    116:116:void colClear() -> colClear
    81:81:java.lang.Object colGetEntry(int,int) -> colGetEntry
    96:96:java.util.Map colGetMap() -> colGetMap
    76:76:int colGetSize() -> colGetSize
    86:86:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    91:91:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    101:101:void colPut(java.lang.Object,java.lang.Object) -> colPut
    111:111:void colRemoveAt(int) -> colRemoveAt
    106:106:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
android.support.v4.util.ArraySet -> android.support.v4.util.ArraySet:
    53:54:void <clinit>() -> <clinit>
    241:241:void <init>() -> <init>
    247:254:void <init>(int) -> <init>
    50:50:int access$000(android.support.v4.util.ArraySet) -> access$000
    50:50:java.lang.Object[] access$100(android.support.v4.util.ArraySet) -> access$100
    361:401:boolean add(java.lang.Object) -> add
    749:752:boolean addAll(java.util.Collection) -> addAll
    162:196:void allocArrays(int) -> allocArrays
    282:286:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    734:736:boolean containsAll(java.util.Collection) -> containsAll
    295:303:void ensureCapacity(int) -> ensureCapacity
    591:600:boolean equals(java.lang.Object) -> equals
    201:232:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    663:711:android.support.v4.util.MapCollections getCollection() -> getCollection
    619:622:int hashCode() -> hashCode
    84:111:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    122:149:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    723:723:java.util.Iterator iterator() -> iterator
    462:464:boolean remove(java.lang.Object) -> remove
    765:766:boolean removeAll(java.util.Collection) -> removeAll
    476:520:java.lang.Object removeAt(int) -> removeAt
    780:782:boolean retainAll(java.util.Collection) -> retainAll
    551:551:int size() -> size
    557:558:java.lang.Object[] toArray() -> toArray
    565:572:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    636:654:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
android.support.v4.util.ArraySet$1 -> android.support.v4.util.ArraySet$1:
    664:664:void <init>(android.support.v4.util.ArraySet) -> <init>
    707:707:void colClear() -> colClear
    672:672:java.lang.Object colGetEntry(int,int) -> colGetEntry
    687:687:java.util.Map colGetMap() -> colGetMap
    667:667:int colGetSize() -> colGetSize
    677:677:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    682:682:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    692:692:void colPut(java.lang.Object,java.lang.Object) -> colPut
    702:702:void colRemoveAt(int) -> colRemoveAt
    697:697:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    25:25:int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    33:45:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    35:44:void <init>(java.lang.String) -> <init>
    48:48:void close() -> close
    52:52:void flush() -> flush
    68:70:void flushBuilder() -> flushBuilder
    57:62:void write(char[],int,int) -> write
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    30:30:void <init>() -> <init>
    457:459:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    516:520:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    531:534:java.util.Set getEntrySet() -> getEntrySet
    538:541:java.util.Set getKeySet() -> getKeySet
    545:548:java.util.Collection getValues() -> getValues
    467:472:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    476:483:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    488:491:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    497:507:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    39:43:void <init>(android.support.v4.util.MapCollections,int) -> <init>
    48:48:boolean hasNext() -> hasNext
    53:56:java.lang.Object next() -> next
    62:68:void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    165:165:void <init>(android.support.v4.util.MapCollections) -> <init>
    165:165:boolean add(java.lang.Object) -> add
    168:168:boolean add(java.util.Map$Entry) -> add
    173:177:boolean addAll(java.util.Collection) -> addAll
    182:182:void clear() -> clear
    187:195:boolean contains(java.lang.Object) -> contains
    200:202:boolean containsAll(java.util.Collection) -> containsAll
    251:251:boolean equals(java.lang.Object) -> equals
    257:261:int hashCode() -> hashCode
    211:211:boolean isEmpty() -> isEmpty
    216:216:java.util.Iterator iterator() -> iterator
    221:221:boolean remove(java.lang.Object) -> remove
    226:226:boolean removeAll(java.util.Collection) -> removeAll
    231:231:boolean retainAll(java.util.Collection) -> retainAll
    236:236:int size() -> size
    241:241:java.lang.Object[] toArray() -> toArray
    246:246:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    267:267:void <init>(android.support.v4.util.MapCollections) -> <init>
    271:271:boolean add(java.lang.Object) -> add
    276:276:boolean addAll(java.util.Collection) -> addAll
    281:281:void clear() -> clear
    286:286:boolean contains(java.lang.Object) -> contains
    291:291:boolean containsAll(java.util.Collection) -> containsAll
    341:341:boolean equals(java.lang.Object) -> equals
    347:349:int hashCode() -> hashCode
    296:296:boolean isEmpty() -> isEmpty
    301:301:java.util.Iterator iterator() -> iterator
    306:308:boolean remove(java.lang.Object) -> remove
    316:316:boolean removeAll(java.util.Collection) -> removeAll
    321:321:boolean retainAll(java.util.Collection) -> retainAll
    326:326:int size() -> size
    331:331:java.lang.Object[] toArray() -> toArray
    336:336:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    75:79:void <init>(android.support.v4.util.MapCollections) -> <init>
    135:144:boolean equals(java.lang.Object) -> equals
    108:112:java.lang.Object getKey() -> getKey
    117:121:java.lang.Object getValue() -> getValue
    84:84:boolean hasNext() -> hasNext
    149:156:int hashCode() -> hashCode
    72:72:java.lang.Object next() -> next
    89:91:java.util.Map$Entry next() -> next
    97:103:void remove() -> remove
    126:130:java.lang.Object setValue(java.lang.Object) -> setValue
    161:161:java.lang.String toString() -> toString
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    355:355:void <init>(android.support.v4.util.MapCollections) -> <init>
    359:359:boolean add(java.lang.Object) -> add
    364:364:boolean addAll(java.util.Collection) -> addAll
    369:369:void clear() -> clear
    374:374:boolean contains(java.lang.Object) -> contains
    379:381:boolean containsAll(java.util.Collection) -> containsAll
    390:390:boolean isEmpty() -> isEmpty
    395:395:java.util.Iterator iterator() -> iterator
    400:402:boolean remove(java.lang.Object) -> remove
    410:415:boolean removeAll(java.util.Collection) -> removeAll
    426:431:boolean retainAll(java.util.Collection) -> retainAll
    442:442:int size() -> size
    447:447:java.lang.Object[] toArray() -> toArray
    452:452:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Preconditions -> android.support.v4.util.Preconditions:
    116:116:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    233:236:void <init>() -> <init>
    163:193:void allocArrays(int) -> allocArrays
    74:77:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    266:276:void clear() -> clear
    308:308:boolean containsKey(java.lang.Object) -> containsKey
    348:348:boolean containsValue(java.lang.Object) -> containsValue
    285:297:void ensureCapacity(int) -> ensureCapacity
    590:630:boolean equals(java.lang.Object) -> equals
    198:225:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    358:359:java.lang.Object get(java.lang.Object) -> get
    649:654:int hashCode() -> hashCode
    85:112:int indexOf(java.lang.Object,int) -> indexOf
    318:318:int indexOfKey(java.lang.Object) -> indexOfKey
    123:150:int indexOfNull() -> indexOfNull
    322:332:int indexOfValue(java.lang.Object) -> indexOfValue
    397:397:boolean isEmpty() -> isEmpty
    368:368:java.lang.Object keyAt(int) -> keyAt
    409:466:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    497:499:java.lang.Object remove(java.lang.Object) -> remove
    511:566:java.lang.Object removeAt(int) -> removeAt
    388:389:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    574:574:int size() -> size
    668:693:java.lang.String toString() -> toString
    377:377:java.lang.Object valueAt(int) -> valueAt
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    48:48:void <clinit>() -> <clinit>
    59:59:void <init>() -> <init>
    49:78:void <init>(int) -> <init>
    341:349:void clear() -> clear
    47:47:java.lang.Object clone() -> clone
    86:88:android.support.v4.util.SparseArrayCompat clone() -> clone
    122:127:void delete(int) -> delete
    165:185:void gc() -> gc
    100:100:java.lang.Object get(int) -> get
    109:114:java.lang.Object get(int,java.lang.Object) -> get
    268:272:int keyAt(int) -> keyAt
    196:238:void put(int,java.lang.Object) -> put
    136:136:void remove(int) -> remove
    247:251:int size() -> size
    395:416:java.lang.String toString() -> toString
    282:286:java.lang.Object valueAt(int) -> valueAt
android.support.v4.view.AbsSavedState -> android.support.v4.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(android.support.v4.view.AbsSavedState$1) -> <init>
    37:38:void <init>() -> <init>
    68:70:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    85:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.view.AbsSavedState$1 -> android.support.v4.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
android.support.v4.view.AbsSavedState$2 -> android.support.v4.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:95:android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:android.support.v4.view.AbsSavedState[] newArray(int) -> newArray
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.LayoutInflaterCompat:
    71:86:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    139:149:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    453:469:void <clinit>() -> <clinit>
    2093:2099:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2314:2315:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    3048:3051:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    2071:2077:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1429:1435:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1402:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    2126:2126:void <clinit>() -> <clinit>
    2097:2109:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2118:2123:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    2126:2126:void <init>() -> <init>
    2126:2126:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2126:2126:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2129:2129:android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2134:2134:android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2126:2126:java.lang.Object[] newArray(int) -> newArray
    2139:2139:android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    2013:2013:void <clinit>() -> <clinit>
    1996:1997:void <init>(android.os.Parcel) -> <init>
    2008:2009:java.lang.String toString() -> toString
    2002:2003:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$SavedState$1:
    2014:2014:void <init>() -> <init>
    2014:2014:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2017:2017:android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2014:2014:java.lang.Object[] newArray(int) -> newArray
    2022:2022:android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    1495:1495:void <clinit>() -> <clinit>
    1485:1486:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1491:1492:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    1495:1495:void <init>() -> <init>
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1498:1498:android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1503:1503:android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object[] newArray(int) -> newArray
    1508:1508:android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
android.util.CameraPerformanceTracker -> android.util.CameraPerformanceTracker:
    40:50:void <init>() -> <init>
    63:95:void onEvent(int) -> onEvent
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    111:276:void <init>() -> <init>
    96:96:void access$001(androidx.activity.ComponentActivity) -> access$001
    411:412:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    441:441:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    492:500:void ensureViewModelStore() -> ensureViewModelStore
    689:689:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    466:466:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    550:550:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    556:556:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    482:487:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    418:420:void initViewTreeOwners() -> initViewTreeOwners
    634:635:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    539:539:void onBackPressed() -> onBackPressed
    306:312:void onCreate(android.os.Bundle) -> onCreate
    654:658:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    338:357:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    319:325:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    695:714:void reportFullyDrawn() -> reportFullyDrawn
    389:390:void setContentView(int) -> setContentView
    395:396:void setContentView(android.view.View) -> setContentView
    403:404:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    570:570:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    584:584:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    601:601:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    618:618:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    122:122:void <init>(androidx.activity.ComponentActivity) -> <init>
    129:133:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    144:144:void <init>(androidx.activity.ComponentActivity) -> <init>
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    238:238:void <init>(androidx.activity.ComponentActivity) -> <init>
    242:246:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    252:252:void <init>(androidx.activity.ComponentActivity) -> <init>
    256:261:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    266:266:void <init>(androidx.activity.ComponentActivity) -> <init>
    270:271:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    106:106:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    45:46:void <init>(android.app.Activity) -> <init>
    101:108:void initializeReflectiveFields() -> initializeReflectiveFields
    51:94:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    46:55:void <init>(boolean) -> <init>
    103:103:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:92:void remove() -> remove
    107:107:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:71:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    59:78:void <init>(java.lang.Runnable) -> <init>
    148:153:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    114:116:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    187:197:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    223:226:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    246:250:void cancel() -> cancel
    232:240:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    203:204:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    209:210:void cancel() -> cancel
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
    42:49:void <init>() -> <init>
    73:76:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:108:void clearAvailableContext() -> clearAvailableContext
    97:99:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
    109:109:void <clinit>() -> <clinit>
    45:47:void <init>(int,android.content.Intent) -> <init>
    50:52:void <init>(android.os.Parcel) -> <init>
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    90:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
    34:34:void <init>() -> <init>
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
    51:76:void <init>() -> <init>
    399:400:void bindRcKey(int,java.lang.String) -> bindRcKey
    318:322:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    359:367:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    389:392:int generateRandomNumber() -> generateRandomNumber
    290:302:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    271:277:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    199:216:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    372:377:int registerKey(java.lang.String) -> registerKey
    243:261:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    134:152:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
    216:216:void <init>(androidx.activity.result.ActivityResultRegistry,int,androidx.activity.result.contract.ActivityResultContract,java.lang.String) -> <init>
    224:224:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
    409:411:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$LifecycleContainer:
    430:433:void clearObservers() -> clearObservers
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
    132:132:void <clinit>() -> <clinit>
    124:128:void <init>(android.os.Parcel) -> <init>
    151:154:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
    39:39:void <init>() -> <init>
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
    158:158:void <init>() -> <init>
    158:158:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    229:238:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    93:93:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:45:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:53:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> createAsync
    59:59:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:72:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:49:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    76:77:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    67:67:boolean contains(java.lang.Object) -> contains
    42:42:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    47:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    57:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    151:152:java.util.Iterator descendingIterator() -> descendingIterator
    170:170:java.util.Map$Entry eldest() -> eldest
    185:202:boolean equals(java.lang.Object) -> equals
    47:52:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    208:210:int hashCode() -> hashCode
    141:142:java.util.Iterator iterator() -> iterator
    161:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    177:177:java.util.Map$Entry newest() -> newest
    76:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    67:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    99:124:java.lang.Object remove(java.lang.Object) -> remove
    131:131:int size() -> size
    217:227:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    284:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    294:294:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    289:289:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    301:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    311:311:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    306:306:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    368:370:void <init>(java.lang.Object,java.lang.Object) -> <init>
    401:405:boolean equals(java.lang.Object) -> equals
    376:376:java.lang.Object getKey() -> getKey
    382:382:java.lang.Object getValue() -> getValue
    410:410:int hashCode() -> hashCode
    387:387:java.lang.Object setValue(java.lang.Object) -> setValue
    392:392:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    322:324:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    338:341:boolean hasNext() -> hasNext
    318:318:java.lang.Object next() -> next
    346:352:java.util.Map$Entry next() -> next
    330:332:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    235:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    242:242:boolean hasNext() -> hasNext
    230:230:java.lang.Object next() -> next
    272:273:java.util.Map$Entry next() -> next
    264:267:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    248:258:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> androidx.arch.core.internal.SafeIterableMap$SupportRemove:
    356:356:void <init>() -> <init>
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    62:62:void <init>() -> <init>
    87:88:boolean containsAll(java.util.Collection) -> containsAll
    152:154:java.util.Set entrySet() -> entrySet
    640:644:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    169:171:java.util.Set keySet() -> keySet
    101:103:void putAll(java.util.Map) -> putAll
    113:117:boolean removeAll(java.util.Collection) -> removeAll
    127:133:boolean retainAll(java.util.Collection) -> retainAll
    621:631:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    186:188:java.util.Collection values() -> values
androidx.collection.ArrayMap$EntrySet -> androidx.collection.ArrayMap$EntrySet:
    193:193:void <init>(androidx.collection.ArrayMap) -> <init>
    193:193:boolean add(java.lang.Object) -> add
    197:197:boolean add(java.util.Map$Entry) -> add
    202:206:boolean addAll(java.util.Collection) -> addAll
    211:211:void clear() -> clear
    216:224:boolean contains(java.lang.Object) -> contains
    229:230:boolean containsAll(java.util.Collection) -> containsAll
    282:282:boolean equals(java.lang.Object) -> equals
    288:292:int hashCode() -> hashCode
    239:239:boolean isEmpty() -> isEmpty
    244:244:java.util.Iterator iterator() -> iterator
    250:250:boolean remove(java.lang.Object) -> remove
    256:256:boolean removeAll(java.util.Collection) -> removeAll
    262:262:boolean retainAll(java.util.Collection) -> retainAll
    267:267:int size() -> size
    272:272:java.lang.Object[] toArray() -> toArray
    277:277:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$KeyIterator -> androidx.collection.ArrayMap$KeyIterator:
    495:496:void <init>(androidx.collection.ArrayMap) -> <init>
    501:501:java.lang.Object elementAt(int) -> elementAt
    506:506:void removeAt(int) -> removeAt
androidx.collection.ArrayMap$KeySet -> androidx.collection.ArrayMap$KeySet:
    298:298:void <init>(androidx.collection.ArrayMap) -> <init>
    301:301:boolean add(java.lang.Object) -> add
    306:306:boolean addAll(java.util.Collection) -> addAll
    311:311:void clear() -> clear
    316:316:boolean contains(java.lang.Object) -> contains
    321:321:boolean containsAll(java.util.Collection) -> containsAll
    376:376:boolean equals(java.lang.Object) -> equals
    382:384:int hashCode() -> hashCode
    326:326:boolean isEmpty() -> isEmpty
    331:331:java.util.Iterator iterator() -> iterator
    336:338:boolean remove(java.lang.Object) -> remove
    346:346:boolean removeAll(java.util.Collection) -> removeAll
    351:351:boolean retainAll(java.util.Collection) -> retainAll
    356:356:int size() -> size
    361:364:java.lang.Object[] toArray() -> toArray
    371:371:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$MapIterator -> androidx.collection.ArrayMap$MapIterator:
    531:533:void <init>(androidx.collection.ArrayMap) -> <init>
    589:598:boolean equals(java.lang.Object) -> equals
    562:566:java.lang.Object getKey() -> getKey
    571:575:java.lang.Object getValue() -> getValue
    538:538:boolean hasNext() -> hasNext
    603:610:int hashCode() -> hashCode
    526:526:java.lang.Object next() -> next
    543:545:java.util.Map$Entry next() -> next
    551:557:void remove() -> remove
    580:584:java.lang.Object setValue(java.lang.Object) -> setValue
    615:615:java.lang.String toString() -> toString
androidx.collection.ArrayMap$ValueCollection -> androidx.collection.ArrayMap$ValueCollection:
    390:390:void <init>(androidx.collection.ArrayMap) -> <init>
    393:393:boolean add(java.lang.Object) -> add
    398:398:boolean addAll(java.util.Collection) -> addAll
    403:403:void clear() -> clear
    408:408:boolean contains(java.lang.Object) -> contains
    413:414:boolean containsAll(java.util.Collection) -> containsAll
    423:423:boolean isEmpty() -> isEmpty
    428:428:java.util.Iterator iterator() -> iterator
    433:435:boolean remove(java.lang.Object) -> remove
    443:448:boolean removeAll(java.util.Collection) -> removeAll
    459:464:boolean retainAll(java.util.Collection) -> retainAll
    475:475:int size() -> size
    480:483:java.lang.Object[] toArray() -> toArray
    490:490:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$ValueIterator -> androidx.collection.ArrayMap$ValueIterator:
    511:512:void <init>(androidx.collection.ArrayMap) -> <init>
    517:517:java.lang.Object elementAt(int) -> elementAt
    522:522:void removeAt(int) -> removeAt
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    78:79:void <clinit>() -> <clinit>
    279:279:void <init>() -> <init>
    286:293:void <init>(int) -> <init>
    416:469:boolean add(java.lang.Object) -> add
    752:755:boolean addAll(java.util.Collection) -> addAll
    174:230:void allocArrays(int) -> allocArrays
    89:91:int binarySearch(int) -> binarySearch
    333:343:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    738:739:boolean containsAll(java.util.Collection) -> containsAll
    352:364:void ensureCapacity(int) -> ensureCapacity
    636:645:boolean equals(java.lang.Object) -> equals
    239:270:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    664:667:int hashCode() -> hashCode
    96:123:int indexOf(java.lang.Object,int) -> indexOf
    386:386:int indexOf(java.lang.Object) -> indexOf
    134:161:int indexOfNull() -> indexOfNull
    404:404:boolean isEmpty() -> isEmpty
    711:711:java.util.Iterator iterator() -> iterator
    504:506:boolean remove(java.lang.Object) -> remove
    768:769:boolean removeAll(java.util.Collection) -> removeAll
    519:566:java.lang.Object removeAt(int) -> removeAt
    783:785:boolean retainAll(java.util.Collection) -> retainAll
    596:596:int size() -> size
    602:603:java.lang.Object[] toArray() -> toArray
    610:617:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    681:699:java.lang.String toString() -> toString
    396:396:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$ElementIterator -> androidx.collection.ArraySet$ElementIterator:
    715:716:void <init>(androidx.collection.ArraySet) -> <init>
    721:721:java.lang.Object elementAt(int) -> elementAt
    726:726:void removeAt(int) -> removeAt
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.IndexBasedArrayIterator -> androidx.collection.IndexBasedArrayIterator:
    27:28:void <init>(int) -> <init>
    36:36:boolean hasNext() -> hasNext
    41:44:java.lang.Object next() -> next
    50:56:void remove() -> remove
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    441:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    218:238:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    354:358:long keyAt(int) -> keyAt
    249:291:void put(long,java.lang.Object) -> put
    139:144:void remove(long) -> remove
    328:332:int size() -> size
    495:516:java.lang.String toString() -> toString
    374:378:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    165:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    687:721:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    381:382:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    738:743:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    423:423:boolean isEmpty() -> isEmpty
    392:392:java.lang.Object keyAt(int) -> keyAt
    437:494:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    528:530:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    543:545:java.lang.Object remove(java.lang.Object) -> remove
    558:562:boolean remove(java.lang.Object,java.lang.Object) -> remove
    576:626:java.lang.Object removeAt(int) -> removeAt
    639:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    655:659:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    414:415:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    670:670:int size() -> size
    757:782:java.lang.String toString() -> toString
    402:402:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    445:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    231:251:void gc() -> gc
    362:366:int keyAt(int) -> keyAt
    341:345:int size() -> size
    499:520:java.lang.String toString() -> toString
    376:380:java.lang.Object valueAt(int) -> valueAt
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3396:3396:void <clinit>() -> <clinit>
    3358:3369:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3379:3392:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    3397:3397:void <init>() -> <init>
    3397:3397:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3397:3397:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3400:3400:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3405:3405:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3397:3397:java.lang.Object[] newArray(int) -> newArray
    3410:3410:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    105:108:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    48:64:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:63:void <init>() -> <init>
    136:140:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    127:131:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    113:113:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    85:86:void onCreate(android.os.Bundle) -> onCreate
    92:93:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    122:122:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:81:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    159:162:void <clinit>() -> <clinit>
    552:555:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    208:208:void <clinit>() -> <clinit>
    155:379:void <init>() -> <init>
    1211:1245:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    436:442:int getResId() -> getResId
    1157:1169:int getResId(android.graphics.drawable.Icon) -> getResId
    858:895:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    9:9:void <init>() -> <init>
    11:19:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    24:32:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    37:37:void <init>() -> <init>
    69:91:void cancel() -> cancel
    46:48:boolean isCanceled() -> isCanceled
    111:122:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    153:155:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    51:54:boolean equals(java.lang.Object,java.lang.Object) -> equals
androidx.core.util.Pair -> androidx.core.util.Pair:
    37:39:void <init>(java.lang.Object,java.lang.Object) -> <init>
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    119:119:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    136:136:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    96:106:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:138:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:174:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    83:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:153:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    72:87:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    140:150:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:46:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:64:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:71:boolean onPreDraw() -> onPreDraw
    90:90:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:95:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:85:void removeListener() -> removeListener
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    470:4480:void <clinit>() -> <clinit>
    4129:4132:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4121:4124:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    1789:1790:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    4245:4245:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1101:1102:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    2409:2415:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    3654:3657:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    4422:4455:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    4249:4249:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    2433:2436:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1128:1138:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    2387:2393:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4462:4476:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2826:2826:void <init>() -> <init>
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    4250:4250:void <init>(int,java.lang.Class,int,int) -> <init>
    4250:4250:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4255:4255:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4483:4485:void <init>() -> <init>
    4527:4533:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4490:4492:void onGlobalLayout() -> onGlobalLayout
    4501:4501:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4539:4539:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4364:4368:void <init>(int,java.lang.Class,int,int) -> <init>
    4402:4402:boolean extrasAvailable() -> extrasAvailable
    4398:4398:boolean frameworkAvailable() -> frameworkAvailable
    4387:4391:java.lang.Object get(android.view.View) -> get
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4552:4552:void <clinit>() -> <clinit>
    4548:4567:void <init>() -> <init>
    4577:4581:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4587:4598:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4606:4620:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4570:4573:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4665:4670:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4632:4655:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4705:4729:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2197:2197:void <clinit>() -> <clinit>
    2179:2180:void <init>(android.os.Parcel) -> <init>
    2192:2193:java.lang.String toString() -> toString
    2185:2186:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2198:2198:void <init>() -> <init>
    2198:2198:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2198:2198:java.lang.Object[] newArray(int) -> newArray
    2206:2206:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:40:void <init>() -> <init>
    70:72:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    87:87:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    90:90:void <init>() -> <init>
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2201:2201:void <clinit>() -> <clinit>
    2172:2184:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2193:2198:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2201:2201:void <init>() -> <init>
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2204:2204:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2209:2209:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object[] newArray(int) -> newArray
    2214:2214:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.fragment.R$styleable -> androidx.fragment.R$styleable:
    3313:4761:void <clinit>() -> <clinit>
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    38:141:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    264:276:void bumpBackStackNesting(int) -> bumpBackStackNesting
    310:311:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    183:184:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    58:58:void dump(java.lang.String,java.io.PrintWriter) -> dump
    63:130:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    402:458:void executeOps() -> executeOps
    470:525:void executePopOps(boolean) -> executePopOps
    553:613:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    345:352:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    685:685:java.lang.String getName() -> getName
    358:361:boolean interactsWith(int) -> interactsWith
    373:386:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    677:679:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    658:660:boolean isPostponed() -> isPostponed
    284:288:void runOnCommitRunnables() -> runOnCommitRunnables
    668:671:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    42:54:java.lang.String toString() -> toString
    632:650:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackRecordState -> androidx.fragment.app.BackStackRecordState:
    204:204:void <clinit>() -> <clinit>
    50:83:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    86:100:void <init>(android.os.Parcel) -> <init>
    148:178:void fillInBackStackRecord(androidx.fragment.app.BackStackRecord) -> fillInBackStackRecord
    111:120:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    188:201:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackRecordState$1 -> androidx.fragment.app.BackStackRecordState$1:
    205:205:void <init>() -> <init>
    205:205:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    208:208:androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel) -> createFromParcel
    205:205:java.lang.Object[] newArray(int) -> newArray
    213:213:androidx.fragment.app.BackStackRecordState[] newArray(int) -> newArray
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    75:75:void <clinit>() -> <clinit>
    40:42:void <init>(android.os.Parcel) -> <init>
    71:72:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    76:76:void <init>() -> <init>
    76:76:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    79:79:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    76:76:java.lang.Object[] newArray(int) -> newArray
    84:84:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
    52:52:void <init>(android.view.ViewGroup) -> <init>
    721:722:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    680:694:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    61:126:void executeOperations(java.util.List,boolean) -> executeOperations
    703:713:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    662:666:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    132:272:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    287:648:java.util.Map startTransitions(java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
    103:103:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    106:108:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
    181:181:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    184:190:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
    197:197:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator) -> <init>
    200:200:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
    245:245:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    255:255:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
    255:255:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    258:259:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
    272:272:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    275:277:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
    453:453:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    456:457:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
    492:492:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    495:495:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
    577:577:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    580:580:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
    628:628:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo) -> <init>
    631:631:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
    761:766:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    771:777:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
    731:733:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    755:755:void completeSpecialEffect() -> completeSpecialEffect
    738:738:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    743:743:androidx.core.os.CancellationSignal getSignal() -> getSignal
    747:750:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
    792:818:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    842:849:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    862:871:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    837:837:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    824:824:java.lang.Object getTransition() -> getTransition
    832:832:boolean hasSharedElementTransition() -> hasSharedElementTransition
    828:828:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    122:122:void <clinit>() -> <clinit>
    134:537:void <init>() -> <init>
    2759:2786:void callStartTransitionListener(boolean) -> callStartTransitionListener
    2886:2886:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2803:2873:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3253:3256:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    665:665:boolean equals(java.lang.Object) -> equals
    2878:2881:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    915:915:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2614:2615:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2639:2640:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3326:3329:android.view.View getAnimatingAway() -> getAnimatingAway
    3341:3344:android.animation.Animator getAnimator() -> getAnimator
    1075:1078:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    888:888:android.content.Context getContext() -> getContext
    2397:2400:java.lang.Object getEnterTransition() -> getEnterTransition
    3312:3315:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2476:2479:java.lang.Object getExitTransition() -> getExitTransition
    3319:3322:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3363:3366:android.view.View getFocusedView() -> getFocusedView
    942:942:java.lang.Object getHost() -> getHost
    1673:1678:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    319:319:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    410:413:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3260:3263:int getNextAnim() -> getNextAnim
    3274:3277:int getNextTransition() -> getNextTransition
    1087:1087:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1039:1041:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3352:3355:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2514:2517:java.lang.Object getReenterTransition() -> getReenterTransition
    965:965:android.content.res.Resources getResources() -> getResources
    2436:2439:java.lang.Object getReturnTransition() -> getReturnTransition
    456:456:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2547:2550:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2585:2589:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3290:3291:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3298:3299:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    856:862:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    1952:1952:android.view.View getView() -> getView
    397:405:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    672:672:int hashCode() -> hashCode
    568:572:void initLifecycle() -> initLifecycle
    2165:2180:void initState() -> initState
    611:631:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    3377:3380:boolean isHideReplaced() -> isHideReplaced
    658:658:boolean isInBackStack() -> isInBackStack
    1198:1199:boolean isMenuVisible() -> isMenuVisible
    3370:3373:boolean isPostponed() -> isPostponed
    1135:1135:boolean isRemoving() -> isRemoving
    1144:1145:boolean isRemovingParent() -> isRemovingParent
    763:766:boolean isStateSaved() -> isStateSaved
    3042:3042:void noteStateNotSaved() -> noteStateNotSaved
    1997:1997:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1490:1491:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1780:1784:void onAttach(android.content.Context) -> onAttach
    1799:1799:void onAttach(android.app.Activity) -> onAttach
    2086:2086:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1867:1870:void onCreate(android.os.Bundle) -> onCreate
    2296:2296:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1924:1925:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2155:2155:void onDestroy() -> onDestroy
    2145:2145:void onDestroyView() -> onDestroyView
    2190:2190:void onDetach() -> onDetach
    1623:1623:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1728:1732:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1748:1748:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2130:2130:void onLowMemory() -> onLowMemory
    2112:2112:void onPause() -> onPause
    2036:2036:void onResume() -> onResume
    2024:2024:void onStart() -> onStart
    2123:2123:void onStop() -> onStop
    2013:2013:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2983:2992:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2905:2918:void performAttach() -> performAttach
    3067:3068:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3122:3126:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2922:2945:void performCreate(android.os.Bundle) -> performCreate
    3087:3092:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2950:2970:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3204:3211:void performDestroy() -> performDestroy
    3183:3200:void performDestroyView() -> performDestroyView
    3217:3231:void performDetach() -> performDetach
    1655:1655:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3072:3073:void performLowMemory() -> performLowMemory
    3057:3058:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3110:3116:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3132:3136:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3151:3160:void performPause() -> performPause
    3062:3063:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3099:3104:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3046:3052:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3025:3038:void performResume() -> performResume
    3141:3145:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3007:3020:void performStart() -> performStart
    3167:3176:void performStop() -> performStop
    2977:2978:void performViewCreated() -> performViewCreated
    927:929:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    899:901:android.content.Context requireContext() -> requireContext
    1963:1965:android.view.View requireView() -> requireView
    1888:1892:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    638:653:void restoreViewState(android.os.Bundle) -> restoreViewState
    2996:3002:void restoreViewState() -> restoreViewState
    3333:3333:void setAnimatingAway(android.view.View) -> setAnimatingAway
    3337:3337:void setAnimator(android.animation.Animator) -> setAnimator
    724:727:void setArguments(android.os.Bundle) -> setArguments
    3359:3359:void setFocusedView(android.view.View) -> setFocusedView
    3384:3384:void setHideReplaced(boolean) -> setHideReplaced
    3267:3270:void setNextAnim(int) -> setNextAnim
    3281:3285:void setNextTransition(int) -> setNextTransition
    3236:3248:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    3348:3348:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    3306:3308:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    2732:2746:void startPostponedEnterTransition() -> startPostponedEnterTransition
    678:696:java.lang.String toString() -> toString
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    256:256:void <init>(androidx.fragment.app.Fragment) -> <init>
    259:259:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    2739:2739:void <init>(androidx.fragment.app.Fragment) -> <init>
    2742:2742:void run() -> run
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2778:2778:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2781:2781:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2886:2886:void <init>(androidx.fragment.app.Fragment) -> <init>
    2890:2894:android.view.View onFindViewById(int) -> onFindViewById
    2899:2899:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    2926:2926:void <init>(androidx.fragment.app.Fragment) -> <init>
    2930:2932:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    3510:3543:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    516:516:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
    306:306:void <init>() -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    490:490:void <clinit>() -> <clinit>
    472:475:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    486:486:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    491:491:void <init>() -> <init>
    491:491:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    491:491:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    494:494:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    499:499:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    491:491:java.lang.Object[] newArray(int) -> newArray
    504:504:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    84:104:void <init>() -> <init>
    313:313:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    532:545:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    578:578:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    125:140:void init() -> init
    791:791:void markFragmentsCreated() -> markFragmentsCreated
    797:812:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    163:164:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    259:261:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:272:void onCreate(android.os.Bundle) -> onCreate
    281:285:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    292:294:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    303:305:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    321:323:void onDestroy() -> onDestroy
    331:332:void onLowMemory() -> onLowMemory
    340:349:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    235:235:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    391:392:void onNewIntent(android.content.Intent) -> onNewIntent
    362:364:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    372:375:void onPause() -> onPause
    251:251:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    422:423:void onPostResume() -> onPostResume
    459:459:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    444:448:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    603:604:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    411:414:void onResume() -> onResume
    433:434:void onResumeFragments() -> onResumeFragments
    467:482:void onStart() -> onStart
    401:401:void onStateNotSaved() -> onStateNotSaved
    490:496:void onStop() -> onStop
    515:515:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
    126:126:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    130:135:android.os.Bundle saveState() -> saveState
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.FragmentActivity$2:
    140:140:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    143:149:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    692:693:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    784:784:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    703:703:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    715:715:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    709:709:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    766:766:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    772:772:android.view.View onFindViewById(int) -> onFindViewById
    687:687:java.lang.Object onGetHost() -> onGetHost
    737:737:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    732:732:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    777:778:boolean onHasView() -> onHasView
    726:726:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    742:742:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
    130:193:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback) -> animateRemoveFragment
    46:112:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean) -> loadAnimation
    202:208:int transitToAnimResourceId(int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$1 -> androidx.fragment.app.FragmentAnim$1:
    134:134:void <init>(androidx.fragment.app.Fragment) -> <init>
    137:142:void onCancel() -> onCancel
androidx.fragment.app.FragmentAnim$2 -> androidx.fragment.app.FragmentAnim$2:
    150:150:void <init>(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    160:160:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$2$1 -> androidx.fragment.app.FragmentAnim$2$1:
    160:160:void <init>(androidx.fragment.app.FragmentAnim$2) -> <init>
    163:165:void run() -> run
androidx.fragment.app.FragmentAnim$3 -> androidx.fragment.app.FragmentAnim$3:
    179:179:void <init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    182:188:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
    221:225:void <init>(android.view.animation.Animation) -> <init>
    229:233:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
    249:259:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    264:271:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    279:286:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    293:299:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
    105:178:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    373:377:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    286:291:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    304:309:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    229:234:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    239:246:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    262:269:void endViewTransition(android.view.View) -> endViewTransition
    219:222:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    351:355:void removeAllViewsInLayout() -> removeAllViewsInLayout
    361:363:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    327:328:void removeView(android.view.View) -> removeView
    314:316:void removeViewAt(int) -> removeViewAt
    321:322:void removeViewInLayout(android.view.View) -> removeViewInLayout
    334:337:void removeViews(int,int) -> removeViews
    343:346:void removeViewsInLayout(int,int) -> removeViewsInLayout
    274:274:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    197:205:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    251:257:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:61:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:116:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    251:251:void dispatchActivityCreated() -> dispatchActivityCreated
    367:367:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    429:429:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    240:240:void dispatchCreate() -> dispatchCreate
    391:391:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    334:334:void dispatchDestroy() -> dispatchDestroy
    379:379:void dispatchLowMemory() -> dispatchLowMemory
    345:345:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    416:416:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    440:440:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    284:284:void dispatchPause() -> dispatchPause
    356:356:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    403:403:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    273:273:void dispatchResume() -> dispatchResume
    262:262:void dispatchStart() -> dispatchStart
    295:295:void dispatchStop() -> dispatchStop
    451:451:boolean execPendingActions() -> execPendingActions
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    142:142:void noteStateNotSaved() -> noteStateNotSaved
    134:135:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    193:198:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    152:152:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    70:71:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:54:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    91:91:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    81:99:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    242:242:android.app.Activity getActivity() -> getActivity
    247:247:android.content.Context getContext() -> getContext
    252:252:android.os.Handler getHandler() -> getHandler
    128:128:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
    36:37:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    44:44:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    51:173:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
    158:158:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    161:166:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    46:54:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:163:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:115:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:146:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:280:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:294:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:222:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:100:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:130:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:208:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:251:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:194:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:236:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:179:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:266:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    97:524:void <init>() -> <init>
    97:97:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    97:97:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    97:97:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2476:2485:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2591:2594:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    853:856:void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> addCancellationSignal
    1728:1739:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3523:3523:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    2935:3043:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1810:1817:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    578:578:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    1505:1512:void cancelExitAnimation(androidx.fragment.app.Fragment) -> cancelExitAnimation
    3553:3555:boolean checkForMenus() -> checkForMenus
    1863:1864:void checkStateLoss() -> checkStateLoss
    2007:2009:void cleanupExec() -> cleanupExec
    894:894:void clearFragmentResult(java.lang.String) -> clearFragmentResult
    2530:2536:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    2260:2268:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    2366:2396:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1556:1601:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1714:1723:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1530:1538:void destroyFragmentView(androidx.fragment.app.Fragment) -> destroyFragmentView
    1794:1804:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3175:3178:void dispatchActivityCreated() -> dispatchActivityCreated
    3157:3160:void dispatchAttach() -> dispatchAttach
    3264:3266:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3341:3346:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3164:3167:void dispatchCreate() -> dispatchCreate
    3280:3306:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3210:3226:void dispatchDestroy() -> dispatchDestroy
    3206:3206:void dispatchDestroyView() -> dispatchDestroyView
    3272:3274:void dispatchLowMemory() -> dispatchLowMemory
    3248:3250:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3533:3534:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3327:3332:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3355:3360:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3378:3379:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    3196:3196:void dispatchPause() -> dispatchPause
    3256:3258:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3312:3318:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3384:3386:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    3189:3192:void dispatchResume() -> dispatchResume
    3182:3185:void dispatchStart() -> dispatchStart
    3232:3244:void dispatchStateChange(int) -> dispatchStateChange
    3200:3202:void dispatchStop() -> dispatchStop
    3171:3171:void dispatchViewCreated() -> dispatchViewCreated
    2576:2578:void doPendingDeferredStart() -> doPendingDeferredStart
    1228:1307:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2514:2523:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1950:1979:void ensureExecReady(boolean) -> ensureExecReady
    2016:2031:boolean execPendingActions(boolean) -> execPendingActions
    1983:1999:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    2414:2424:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2140:2254:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    2042:2068:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1859:1859:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    2689:2726:int findBackStackIndex(java.lang.String,int,boolean) -> findBackStackIndex
    1833:1833:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1850:1850:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1854:1854:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2495:2503:void forcePostponedTransactions() -> forcePostponedTransactions
    2555:2571:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    817:817:int getBackStackEntryCount() -> getBackStackEntryCount
    1120:1120:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2923:2923:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    2448:2463:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3440:3450:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    2928:2928:androidx.fragment.app.FragmentStore getFragmentStore() -> getFragmentStore
    1110:1110:java.util.List getFragments() -> getFragments
    2913:2913:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3593:3593:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3488:3488:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2918:2918:androidx.fragment.app.Fragment getParent() -> getParent
    3403:3403:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3473:3483:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    1033:1035:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1115:1115:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    664:675:void handleOnBackPressed() -> handleOnBackPressed
    1767:1773:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3569:3570:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1189:1189:boolean isDestroyed() -> isDestroyed
    142:142:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3565:3565:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    655:655:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    636:643:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1329:1329:boolean isStateAtLeast(int) -> isStateAtLeast
    1884:1884:boolean isStateSaved() -> isStateSaved
    2285:2291:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1611:1642:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1334:1498:void moveToState(androidx.fragment.app.Fragment,int) -> moveToState
    1542:1542:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1656:1693:void moveToState(int,boolean) -> moveToState
    3084:3092:void noteStateNotSaved() -> noteStateNotSaved
    1042:1048:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    1312:1323:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    712:712:boolean popBackStackImmediate() -> popBackStackImmediate
    784:809:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2661:2667:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2313:2341:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    867:874:void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> removeCancellationSignal
    1746:1756:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    2090:2126:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2583:2585:void reportBackStackChanged() -> reportBackStackChanged
    2816:2908:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    2755:2799:android.os.Parcelable saveAllState() -> saveAllState
    1927:1936:void scheduleCommit() -> scheduleCommit
    1521:1524:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3407:3412:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3366:3374:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2436:2442:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1784:1789:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1699:1700:void startPendingDeferredFragments() -> startPendingDeferredFragments
    1195:1215:java.lang.String toString() -> toString
    612:622:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
    434:434:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    437:437:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
    3019:3019:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    3019:3019:void onActivityResult(java.lang.Object) -> onActivityResult
    3022:3039:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.FragmentManager$11:
    3045:3045:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    3045:3045:void onActivityResult(java.lang.Object) -> onActivityResult
    3049:3073:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
    452:452:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    461:462:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onComplete
    456:456:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onStart
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
    479:479:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    484:484:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
    489:489:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    493:493:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
    524:524:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    527:527:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    911:924:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
    1570:1570:void <init>(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1573:1576:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
    2943:2943:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2948:2948:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
    2991:2991:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2991:2991:void onActivityResult(java.lang.Object) -> onActivityResult
    2994:3012:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
    3797:3797:void <init>() -> <init>
    3797:3797:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3828:3828:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
    3783:3783:void <clinit>() -> <clinit>
    3767:3769:void <init>(android.os.Parcel) -> <init>
    3779:3780:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
    3784:3784:void <init>() -> <init>
    3784:3784:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3787:3787:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3784:3784:java.lang.Object[] newArray(int) -> newArray
    3792:3792:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
    3694:3696:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3753:3753:void cancelTransaction() -> cancelTransaction
    3737:3745:void completeTransaction() -> completeTransaction
    3727:3727:boolean isReady() -> isReady
    3706:3710:void onStartEnterTransition() -> onStartEnterTransition
    3720:3720:void startListening() -> startListening
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    68:68:void <clinit>() -> <clinit>
    32:37:void <init>() -> <init>
    32:48:void <init>(android.os.Parcel) -> <init>
    58:65:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    77:77:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    57:87:void <init>(boolean) -> <init>
    112:123:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:200:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    275:281:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:171:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    178:181:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    286:288:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:104:void onCleared() -> onCleared
    154:162:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    96:96:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    295:322:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:45:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    165:165:void <clinit>() -> <clinit>
    44:56:void <init>(androidx.fragment.app.Fragment) -> <init>
    59:72:void <init>(android.os.Parcel) -> <init>
    81:103:androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> instantiate
    111:140:java.lang.String toString() -> toString
    150:162:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    166:166:void <init>() -> <init>
    166:166:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    169:169:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    166:166:java.lang.Object[] newArray(int) -> newArray
    174:174:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
    50:64:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    50:86:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    50:119:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    553:557:void activityCreated() -> activityCreated
    808:809:void addViewToContainer() -> addViewToContainer
    404:441:void attach() -> attach
    146:227:int computeExpectedState() -> computeExpectedState
    445:456:void create() -> create
    461:549:void createView() -> createView
    730:780:void destroy() -> destroy
    709:726:void destroyFragmentView() -> destroyFragmentView
    785:800:void detach() -> detach
    358:371:void ensureInflatedView() -> ensureInflatedView
    125:125:androidx.fragment.app.Fragment getFragment() -> getFragment
    591:599:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    234:354:void moveToExpectedState() -> moveToExpectedState
    605:609:void pause() -> pause
    377:399:void restoreState(java.lang.ClassLoader) -> restoreState
    570:587:void resume() -> resume
    657:686:android.os.Bundle saveBasicState() -> saveBasicState
    622:642:androidx.fragment.app.FragmentState saveState() -> saveState
    693:704:void saveViewState() -> saveViewState
    135:135:void setFragmentManagerState(int) -> setFragmentManagerState
    562:566:void start() -> start
    613:617:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
    510:510:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    513:514:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
    153:153:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
    34:38:void <init>() -> <init>
    90:96:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    164:167:void burpActive() -> burpActive
    292:292:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    100:102:void dispatchStateChange(int) -> dispatchStateChange
    372:398:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    315:317:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    248:258:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    270:282:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    302:305:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    340:362:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    208:211:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    230:235:java.util.List getActiveFragments() -> getActiveFragments
    297:297:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    220:225:java.util.List getFragments() -> getFragments
    47:47:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    71:85:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    139:154:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    109:125:void moveToExpectedState() -> moveToExpectedState
    132:135:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    51:51:void resetActiveFragments() -> resetActiveFragments
    55:65:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    172:181:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    190:203:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    43:43:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    114:114:void <clinit>() -> <clinit>
    96:97:void <init>(android.os.Parcel) -> <init>
    109:110:java.lang.String toString() -> toString
    102:103:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    105:139:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    245:245:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    251:252:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    143:147:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    693:697:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    256:287:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    793:793:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    74:74:void <init>() -> <init>
    77:82:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    85:90:void <init>(int,androidx.fragment.app.Fragment,boolean) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    48:81:void <clinit>() -> <clinit>
    695:698:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1173:1259:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1125:1128:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    187:212:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1142:1148:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    1030:1031:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    518:519:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    889:931:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    831:866:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    472:512:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1054:1064:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    738:783:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    609:671:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    354:414:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsOrdered
    237:294:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsReordered
    1272:1273:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    557:559:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    570:572:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    962:969:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    543:546:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1092:1108:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    307:328:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    86:88:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    1007:1010:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    441:441:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    986:995:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1077:1079:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    127:161:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    275:275:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    278:278:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    328:328:void <init>(java.util.ArrayList) -> <init>
    331:331:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    396:396:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    399:399:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    441:441:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    444:460:void run() -> run
androidx.fragment.app.FragmentTransition$5 -> androidx.fragment.app.FragmentTransition$5:
    671:671:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    674:677:void run() -> run
androidx.fragment.app.FragmentTransition$6 -> androidx.fragment.app.FragmentTransition$6:
    783:783:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    786:804:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1282:1282:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    34:34:void <init>() -> <init>
    332:333:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:111:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:216:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    45:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    189:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    340:341:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    305:323:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:146:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:225:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    79:83:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    348:349:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:271:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:73:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:298:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    55:56:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:165:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    155:156:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    241:241:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    228:235:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    277:277:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    45:45:void <init>() -> <init>
    358:371:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    219:232:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    384:384:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    403:405:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    242:252:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    82:107:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    395:395:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    160:165:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    339:339:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    302:302:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    263:263:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    179:199:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    199:199:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    202:204:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    263:263:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    266:272:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    339:339:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    342:347:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    29:31:void <init>() -> <init>
    53:54:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    68:68:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    62:62:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    37:39:void initialize() -> initialize
    47:47:boolean isInitialized() -> isInitialized
    72:72:void performRestore(android.os.Bundle) -> performRestore
    76:76:void performSave(android.os.Bundle) -> performSave
    58:58:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
    25:31:void <init>(java.lang.String) -> <init>
    35:35:void close() -> close
    39:39:void flush() -> flush
    55:57:void flushBuilder() -> flushBuilder
    44:49:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
    84:93:void <init>(android.view.ViewGroup) -> <init>
    190:221:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    152:157:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    170:175:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    179:184:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    161:166:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    257:297:void executePendingOperations() -> executePendingOperations
    132:133:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    142:143:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    301:331:void forceCompleteAllOperations() -> forceCompleteAllOperations
    250:252:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    118:125:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    55:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:78:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    229:246:void markPostponedState() -> markPostponedState
    335:341:void updateFinalState() -> updateFinalState
    225:225:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
    204:204:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    207:208:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
    214:214:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    217:218:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
    441:604:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
    705:707:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    741:742:void complete() -> complete
    712:735:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
    502:524:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    642:642:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    589:598:void cancel() -> cancel
    683:692:void complete() -> complete
    668:669:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    539:539:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    558:558:androidx.fragment.app.Fragment getFragment() -> getFragment
    549:549:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    562:562:boolean isCanceled() -> isCanceled
    674:674:boolean isComplete() -> isComplete
    656:657:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    604:636:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    568:585:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
    524:524:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    527:527:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
    481:493:void <clinit>() -> <clinit>
    481:481:void <init>(java.lang.String,int) -> <init>
    481:481:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    481:481:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
    382:398:void <clinit>() -> <clinit>
    382:382:void <init>(java.lang.String,int) -> <init>
    441:472:void applyState(android.view.View) -> applyState
    409:412:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    425:431:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    382:382:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    382:382:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:23:void <init>(java.lang.String) -> <init>
androidx.legacy.app.FragmentTabHost$SavedState -> androidx.legacy.app.FragmentTabHost$SavedState:
    110:110:void <clinit>() -> <clinit>
    93:94:void <init>(android.os.Parcel) -> <init>
    105:106:java.lang.String toString() -> toString
    99:100:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.legacy.app.FragmentTabHost$SavedState$1 -> androidx.legacy.app.FragmentTabHost$SavedState$1:
    111:111:void <init>() -> <init>
    111:111:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    114:114:androidx.legacy.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    111:111:java.lang.Object[] newArray(int) -> newArray
    119:119:androidx.legacy.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    105:160:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    81:85:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:64:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    91:100:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    169:179:void <init>(java.util.Map) -> <init>
    185:186:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    193:194:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    205:208:void <init>(int,java.lang.reflect.Method) -> <init>
    237:242:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
    214:228:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    26:27:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    32:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    27:29:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    34:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    79:86:void <init>() -> <init>
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.Lifecycle$1:
    169:258:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    128:157:void <clinit>() -> <clinit>
    129:129:void <init>(java.lang.String,int) -> <init>
    169:175:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    258:272:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
    213:219:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    128:128:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    128:128:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    280:320:void <clinit>() -> <clinit>
    281:281:void <init>(java.lang.String,int) -> <init>
    329:329:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    280:280:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    280:280:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    91:91:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    51:97:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    172:206:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    272:285:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    162:167:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    335:335:androidx.lifecycle.LifecycleRegistry createUnsafe(androidx.lifecycle.LifecycleOwner) -> createUnsafe
    315:317:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    253:266:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    249:249:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    133:134:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    153:158:boolean isSynced() -> isSynced
    109:110:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    339:339:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    138:149:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    210:210:void popParentState() -> popParentState
    214:214:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    219:232:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    120:121:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    293:310:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    346:348:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    352:355:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    105:111:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    119:138:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    207:207:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    143:148:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    200:200:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    68:98:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    154:192:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    61:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    60:112:void <init>() -> <init>
    486:487:void assertMainThread(java.lang.String) -> assertMainThread
    378:397:void changeActiveCounter(int) -> changeActiveCounter
    117:133:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:158:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    244:250:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    306:309:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:93:void run() -> run
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    437:437:void detachObserver() -> detachObserver
    417:426:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    411:411:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    460:468:void activeStateChanged(boolean) -> activeStateChanged
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    40:40:void <init>() -> <init>
    50:50:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    30:32:void <init>(java.lang.Object) -> <init>
    37:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    37:37:void <init>() -> <init>
    60:68:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch
    140:144:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    82:82:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    94:94:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    88:88:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    42:54:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    100:102:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    133:136:void onDestroy() -> onDestroy
    121:122:void onPause() -> onPause
    114:116:void onResume() -> onResume
    107:109:void onStart() -> onStart
    127:128:void onStop() -> onStop
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
    164:164:void <init>() -> <init>
    178:178:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    196:196:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    187:187:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    224:224:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    201:201:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    210:210:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    167:167:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    98:102:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    45:50:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    41:41:boolean isAttached() -> isAttached
    55:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    107:111:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
    111:111:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    115:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$OnRecreation:
    75:75:void <init>() -> <init>
    79:91:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    25:26:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    31:32:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    107:111:void <init>() -> <init>
    125:138:void clear() -> clear
    186:190:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    177:182:java.lang.Object getTag(java.lang.String) -> getTag
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    125:127:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    146:150:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    171:189:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    65:65:void <init>() -> <init>
    81:81:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
    54:54:void <init>() -> <init>
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:64:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:45:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
    49:49:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
    50:50:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    43:43:void <init>() -> <init>
    131:131:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    381:383:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    518:518:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    44:44:boolean isLoggingEnabled(int) -> isLoggingEnabled
    496:496:void markForRedelivery() -> markForRedelivery
    502:511:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    152:154:androidx.loader.content.Loader destroy(boolean) -> destroy
    220:223:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    79:80:void onActive() -> onActive
    85:86:void onInactive() -> onInactive
    137:139:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    192:192:void setValue(java.lang.Object) -> setValue
    203:209:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    290:290:void <clinit>() -> <clinit>
    289:305:void <init>() -> <init>
    364:371:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    301:301:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    344:347:void markForRedelivery() -> markForRedelivery
    353:359:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    290:290:void <init>() -> <init>
    295:295:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.localbroadcastmanager.content.LocalBroadcastManager -> androidx.localbroadcastmanager.content.LocalBroadcastManager:
    106:106:void <clinit>() -> <clinit>
    96:121:void <init>(android.content.Context) -> <init>
    304:315:void executePendingBroadcasts() -> executePendingBroadcasts
    111:116:androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    146:163:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    176:201:void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
androidx.localbroadcastmanager.content.LocalBroadcastManager$1 -> androidx.localbroadcastmanager.content.LocalBroadcastManager$1:
    121:121:void <init>(androidx.localbroadcastmanager.content.LocalBroadcastManager,android.os.Looper) -> <init>
    125:130:void handleMessage(android.os.Message) -> handleMessage
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord:
    61:63:void <init>(android.content.IntentFilter,android.content.BroadcastReceiver) -> <init>
    68:77:java.lang.String toString() -> toString
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    173:185:void <clinit>() -> <clinit>
    250:250:void <init>() -> <init>
    253:254:void <init>(androidx.media.AudioAttributesImpl) -> <init>
    619:626:boolean equals(java.lang.Object) -> equals
    493:493:int hashCode() -> hashCode
    498:498:java.lang.String toString() -> toString
    609:609:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    536:536:java.lang.String usageToString(int) -> usageToString
    305:311:androidx.media.AudioAttributesCompat wrap(java.lang.Object) -> wrap
androidx.media.AudioAttributesCompat$Builder -> androidx.media.AudioAttributesCompat$Builder:
    373:381:void <init>() -> <init>
    409:409:androidx.media.AudioAttributesCompat build() -> build
    486:486:androidx.media.AudioAttributesCompat$Builder setLegacyStreamType(int) -> setLegacyStreamType
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    11:11:void <init>() -> <init>
    14:15:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    21:22:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21 -> androidx.media.AudioAttributesImplApi21:
    46:56:void <init>() -> <init>
    60:60:void <init>(android.media.AudioAttributes) -> <init>
    46:65:void <init>(android.media.AudioAttributes,int) -> <init>
    116:120:boolean equals(java.lang.Object) -> equals
    111:111:int hashCode() -> hashCode
    126:126:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21$Builder -> androidx.media.AudioAttributesImplApi21$Builder:
    132:133:void <init>() -> <init>
    143:143:androidx.media.AudioAttributesImpl build() -> build
    129:129:androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int) -> setLegacyStreamType
    174:174:androidx.media.AudioAttributesImplApi21$Builder setLegacyStreamType(int) -> setLegacyStreamType
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    11:11:void <init>() -> <init>
    14:16:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:24:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi26 -> androidx.media.AudioAttributesImplApi26:
    41:41:void <init>() -> <init>
    45:45:void <init>(android.media.AudioAttributes) -> <init>
androidx.media.AudioAttributesImplApi26$Builder -> androidx.media.AudioAttributesImplApi26$Builder:
    55:55:void <init>() -> <init>
    65:65:androidx.media.AudioAttributesImpl build() -> build
androidx.media.AudioAttributesImplApi26Parcelizer -> androidx.media.AudioAttributesImplApi26Parcelizer:
    11:11:void <init>() -> <init>
    14:16:androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel) -> read
    22:24:void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> androidx.media.AudioAttributesImplBase:
    63:91:void <init>() -> <init>
    63:97:void <init>(int,int,int,int) -> <init>
    156:162:boolean equals(java.lang.Object) -> equals
    126:126:int getContentType() -> getContentType
    136:137:int getFlags() -> getFlags
    113:116:int getLegacyStreamType() -> getLegacyStreamType
    131:131:int getUsage() -> getUsage
    151:151:int hashCode() -> hashCode
    169:180:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplBase$Builder -> androidx.media.AudioAttributesImplBase$Builder:
    184:189:void <init>() -> <init>
    202:202:androidx.media.AudioAttributesImpl build() -> build
    277:313:androidx.media.AudioAttributesImplBase$Builder setInternalLegacyStreamType(int) -> setInternalLegacyStreamType
    183:183:androidx.media.AudioAttributesImpl$Builder setLegacyStreamType(int) -> setLegacyStreamType
    266:271:androidx.media.AudioAttributesImplBase$Builder setLegacyStreamType(int) -> setLegacyStreamType
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    11:11:void <init>() -> <init>
    14:18:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    24:28:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:43:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:64:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:92:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
    96:100:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    112:112:void add(java.lang.String) -> add
    106:107:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    44:52:void <init>() -> <init>
    76:84:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    190:208:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:229:void performSave(android.os.Bundle) -> performSave
    109:111:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    167:180:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:203:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:38:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:62:void performRestore(android.os.Bundle) -> performRestore
    74:74:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
    53:53:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState:
    1503:1503:void <clinit>() -> <clinit>
    1493:1494:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1499:1500:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1:
    1503:1503:void <init>() -> <init>
    1503:1503:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1503:1503:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1506:1506:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1511:1511:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1503:1503:java.lang.Object[] newArray(int) -> newArray
    1516:1516:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState:
    264:264:void <clinit>() -> <clinit>
    254:255:void <init>(android.os.Parcel) -> <init>
    260:261:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState$1:
    265:265:void <init>() -> <init>
    265:265:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    268:268:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    265:265:java.lang.Object[] newArray(int) -> newArray
    273:273:androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState[] newArray(int) -> newArray
androidx.tracing.Trace -> androidx.tracing.Trace:
    80:81:void beginSection(java.lang.String) -> beginSection
    93:94:void endSection() -> endSection
    229:237:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    159:169:boolean isEnabledFallback() -> isEnabledFallback
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
    49:49:void beginSection(java.lang.String) -> beginSection
    60:60:void endSection() -> endSection
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    58:58:void <clinit>() -> <clinit>
    36:37:void <init>(android.os.Parcel) -> <init>
    54:55:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    61:61:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    66:66:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    52:52:void <init>() -> <init>
    1442:1443:java.lang.Class findParcelClass(androidx.versionedparcelable.VersionedParcelable) -> findParcelClass
    1448:1450:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    360:363:boolean readBoolean(boolean,int) -> readBoolean
    433:436:byte[] readByteArray(byte[],int) -> readByteArray
    1401:1414:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    370:373:int readInt(int,int) -> readInt
    442:445:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    412:415:java.lang.String readString(java.lang.String,int) -> readString
    1329:1332:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1345:1349:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    264:265:void writeBoolean(boolean,int) -> writeBoolean
    274:275:void writeByteArray(byte[],int) -> writeByteArray
    295:296:void writeInt(int,int) -> writeInt
    352:353:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    331:332:void writeString(java.lang.String,int) -> writeString
    1423:1436:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    912:913:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    920:927:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    933:938:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    46:46:void <init>(android.os.Parcel) -> <init>
    37:54:void <init>(android.os.Parcel,int,int,java.lang.String) -> <init>
    93:103:void closeField() -> closeField
    113:113:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    241:241:boolean readBoolean() -> readBoolean
    219:224:byte[] readByteArray() -> readByteArray
    72:77:boolean readField(int) -> readField
    189:189:int readInt() -> readInt
    231:231:android.os.Parcelable readParcelable() -> readParcelable
    209:209:java.lang.String readString() -> readString
    58:65:int readUntilField(int) -> readUntilField
    83:88:void setOutputField(int) -> setOutputField
    174:174:void writeBoolean(boolean) -> writeBoolean
    120:123:void writeByteArray(byte[]) -> writeByteArray
    139:139:void writeInt(int) -> writeInt
    169:169:void writeParcelable(android.os.Parcelable) -> writeParcelable
    159:159:void writeString(java.lang.String) -> writeString
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1403:1403:void <clinit>() -> <clinit>
    1420:1426:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1398:1399:java.lang.String toString() -> toString
    1391:1393:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1403:1403:void <init>() -> <init>
    1403:1403:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1403:1403:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1406:1406:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1411:1411:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1403:1403:java.lang.Object[] newArray(int) -> newArray
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
com.adobe.xmp.XMPException -> com.adobe.xmp.XMPException:
    30:31:void <init>(java.lang.String,int) -> <init>
    43:44:void <init>(java.lang.String,int,java.lang.Throwable) -> <init>
    53:53:int getErrorCode() -> getErrorCode
com.adobe.xmp.XMPMetaFactory -> com.adobe.xmp.XMPMetaFactory:
    31:33:void <clinit>() -> <clinit>
    49:49:com.adobe.xmp.XMPSchemaRegistry getSchemaRegistry() -> getSchemaRegistry
    144:144:com.adobe.xmp.XMPMeta parseFromBuffer(byte[]) -> parseFromBuffer
    160:160:com.adobe.xmp.XMPMeta parseFromBuffer(byte[],com.adobe.xmp.options.ParseOptions) -> parseFromBuffer
com.adobe.xmp.XMPUtils -> com.adobe.xmp.XMPUtils:
    470:470:java.lang.String convertFromDate(com.adobe.xmp.XMPDateTime) -> convertFromDate
    264:281:boolean convertToBoolean(java.lang.String) -> convertToBoolean
    450:456:com.adobe.xmp.XMPDateTime convertToDate(java.lang.String) -> convertToDate
    409:420:double convertToDouble(java.lang.String) -> convertToDouble
    315:330:int convertToInteger(java.lang.String) -> convertToInteger
    362:377:long convertToLong(java.lang.String) -> convertToLong
    499:503:byte[] decodeBase64(java.lang.String) -> decodeBase64
com.adobe.xmp.impl.Base64 -> com.adobe.xmp.impl.Base64:
    31:70:void <clinit>() -> <clinit>
    192:234:byte[] decode(byte[]) -> decode
com.adobe.xmp.impl.ByteBuffer -> com.adobe.xmp.impl.ByteBuffer:
    31:40:void <init>(int) -> <init>
    31:50:void <init>(byte[]) -> <init>
    31:88:void <init>(java.io.InputStream) -> <init>
    184:185:void append(byte) -> append
    198:200:void append(byte[],int,int) -> append
    210:210:void append(byte[]) -> append
    167:173:int charAt(int) -> charAt
    319:323:void ensureCapacity(int) -> ensureCapacity
    120:120:java.io.InputStream getByteStream() -> getByteStream
    233:307:java.lang.String getEncoding() -> getEncoding
    130:130:int length() -> length
com.adobe.xmp.impl.FixASCIIControlsReader -> com.adobe.xmp.impl.FixASCIIControlsReader:
    37:50:void <init>(java.io.Reader) -> <init>
    114:206:char processChar(char) -> processChar
    67:96:int read(char[],int,int) -> read
com.adobe.xmp.impl.ISO8601Converter -> com.adobe.xmp.impl.ISO8601Converter:
    77:77:com.adobe.xmp.XMPDateTime parse(java.lang.String) -> parse
    89:269:com.adobe.xmp.XMPDateTime parse(java.lang.String,com.adobe.xmp.XMPDateTime) -> parse
    311:377:java.lang.String render(com.adobe.xmp.XMPDateTime) -> render
com.adobe.xmp.impl.Latin1Converter -> com.adobe.xmp.impl.Latin1Converter:
    68:151:com.adobe.xmp.impl.ByteBuffer convert(com.adobe.xmp.impl.ByteBuffer) -> convert
    188:188:byte[] convertToUTF8(byte) -> convertToUTF8
com.adobe.xmp.impl.ParameterAsserts -> com.adobe.xmp.impl.ParameterAsserts:
    39:41:void assertArrayName(java.lang.String) -> assertArrayName
    125:129:void assertNotNull(java.lang.Object) -> assertNotNull
    81:83:void assertPrefix(java.lang.String) -> assertPrefix
    53:55:void assertPropName(java.lang.String) -> assertPropName
    67:69:void assertSchemaNS(java.lang.String) -> assertSchemaNS
    95:97:void assertSpecificLang(java.lang.String) -> assertSpecificLang
com.adobe.xmp.impl.ParseRDF -> com.adobe.xmp.impl.ParseRDF:
    989:1074:com.adobe.xmp.impl.XMPNode addChildNode(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,java.lang.String,boolean) -> addChildNode
    1094:1100:com.adobe.xmp.impl.XMPNode addQualifierNode(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String) -> addQualifierNode
    1120:1169:void fixupQualifiedNode(com.adobe.xmp.impl.XMPNode) -> fixupQualifiedNode
    1256:1315:int getRDFTermKind(org.w3c.dom.Node) -> getRDFTermKind
    1209:1215:boolean isPropertyElementName(int) -> isPropertyElementName
    1182:1190:boolean isWhitespaceNode(org.w3c.dom.Node) -> isWhitespaceNode
    89:90:com.adobe.xmp.impl.XMPMetaImpl parse(org.w3c.dom.Node) -> parse
    823:967:void rdf_EmptyPropertyElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> rdf_EmptyPropertyElement
    620:661:void rdf_LiteralPropertyElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> rdf_LiteralPropertyElement
    164:177:void rdf_NodeElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> rdf_NodeElement
    210:263:void rdf_NodeElementAttrs(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> rdf_NodeElementAttrs
    130:136:void rdf_NodeElementList(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node) -> rdf_NodeElementList
    751:751:void rdf_ParseTypeCollectionPropertyElement() -> rdf_ParseTypeCollectionPropertyElement
    676:676:void rdf_ParseTypeLiteralPropertyElement() -> rdf_ParseTypeLiteralPropertyElement
    765:765:void rdf_ParseTypeOtherPropertyElement() -> rdf_ParseTypeOtherPropertyElement
    699:735:void rdf_ParseTypeResourcePropertyElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> rdf_ParseTypeResourcePropertyElement
    364:464:void rdf_PropertyElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> rdf_PropertyElement
    283:296:void rdf_PropertyElementList(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> rdf_PropertyElementList
    106:112:void rdf_RDF(com.adobe.xmp.impl.XMPMetaImpl,org.w3c.dom.Node) -> rdf_RDF
    489:598:void rdf_ResourcePropertyElement(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.impl.XMPNode,org.w3c.dom.Node,boolean) -> rdf_ResourcePropertyElement
com.adobe.xmp.impl.ParseState -> com.adobe.xmp.impl.ParseState:
# {"id":"sourceFile","fileName":"ISO8601Converter.java"}
    392:400:void <init>(java.lang.String) -> <init>
    428:429:char ch(int) -> ch
    439:440:char ch() -> ch
    474:500:int gatherInt(java.lang.String,int) -> gatherInt
    418:418:boolean hasNext() -> hasNext
    409:409:int length() -> length
    459:459:int pos() -> pos
    450:450:void skip() -> skip
com.adobe.xmp.impl.Utils -> com.adobe.xmp.impl.Utils:
    34:34:void <clinit>() -> <clinit>
    283:285:boolean checkUUIDFormat(java.lang.String) -> checkUUIDFormat
    485:498:void initCharTables() -> initCharTables
    476:476:boolean isNameChar(char) -> isNameChar
    459:459:boolean isNameStartChar(char) -> isNameStartChar
    308:314:boolean isXMLName(java.lang.String) -> isXMLName
    332:338:boolean isXMLNameNS(java.lang.String) -> isXMLNameNS
    65:99:java.lang.String normalizeLangValue(java.lang.String) -> normalizeLangValue
    124:148:java.lang.String[] splitNameAndValue(java.lang.String) -> splitNameAndValue
com.adobe.xmp.impl.XMPDateTimeImpl -> com.adobe.xmp.impl.XMPDateTimeImpl:
    32:56:void <init>() -> <init>
    32:87:void <init>(java.util.Calendar) -> <init>
    278:288:int compareTo(java.lang.Object) -> compareTo
    316:325:java.util.Calendar getCalendar() -> getCalendar
    177:177:int getDay() -> getDay
    206:206:int getHour() -> getHour
    335:335:java.lang.String getISO8601String() -> getISO8601String
    224:224:int getMinute() -> getMinute
    148:148:int getMonth() -> getMonth
    260:260:int getNanoSecond() -> getNanoSecond
    242:242:int getSecond() -> getSecond
    298:298:java.util.TimeZone getTimeZone() -> getTimeZone
    130:130:int getYear() -> getYear
    188:196:void setDay(int) -> setDay
    215:215:void setHour(int) -> setHour
    233:233:void setMinute(int) -> setMinute
    159:167:void setMonth(int) -> setMonth
    269:269:void setNanoSecond(int) -> setNanoSecond
    251:251:void setSecond(int) -> setSecond
    307:307:void setTimeZone(java.util.TimeZone) -> setTimeZone
    139:139:void setYear(int) -> setYear
    344:344:java.lang.String toString() -> toString
com.adobe.xmp.impl.XMPMetaImpl -> com.adobe.xmp.impl.XMPMetaImpl:
    36:36:void <clinit>() -> <clinit>
    58:67:void <init>() -> <init>
    58:80:void <init>(com.adobe.xmp.impl.XMPNode) -> <init>
    1237:1238:java.lang.Object clone() -> clone
    287:291:boolean doesPropertyExist(java.lang.String,java.lang.String) -> doesPropertyExist
    1388:1419:java.lang.Object evaluateNodeValue(int,com.adobe.xmp.impl.XMPNode) -> evaluateNodeValue
    790:790:java.lang.Integer getPropertyInteger(java.lang.String,java.lang.String) -> getPropertyInteger
    732:746:java.lang.Object getPropertyObject(java.lang.String,java.lang.String,int) -> getPropertyObject
    1279:1279:com.adobe.xmp.impl.XMPNode getRoot() -> getRoot
    446:619:void setLocalizedText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.adobe.xmp.options.PropertyOptions) -> setLocalizedText
    1226:1226:void setPacketHeader(java.lang.String) -> setPacketHeader
com.adobe.xmp.impl.XMPMetaParser -> com.adobe.xmp.impl.XMPMetaParser:
    48:50:void <clinit>() -> <clinit>
    394:402:javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory() -> createDocumentBuilderFactory
    326:369:java.lang.Object[] findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[]) -> findRootNode
    74:101:com.adobe.xmp.XMPMeta parse(java.lang.Object,com.adobe.xmp.options.ParseOptions) -> parse
    271:286:org.w3c.dom.Document parseInputSource(org.xml.sax.InputSource) -> parseInputSource
    126:136:org.w3c.dom.Document parseXml(java.lang.Object,com.adobe.xmp.options.ParseOptions) -> parseXml
    186:223:org.w3c.dom.Document parseXmlFromBytebuffer(com.adobe.xmp.impl.ByteBuffer,com.adobe.xmp.options.ParseOptions) -> parseXmlFromBytebuffer
    153:167:org.w3c.dom.Document parseXmlFromInputStream(java.io.InputStream,com.adobe.xmp.options.ParseOptions) -> parseXmlFromInputStream
    241:255:org.w3c.dom.Document parseXmlFromString(java.lang.String,com.adobe.xmp.options.ParseOptions) -> parseXmlFromString
com.adobe.xmp.impl.XMPNode -> com.adobe.xmp.impl.XMPNode:
    38:38:void <clinit>() -> <clinit>
    47:77:void <init>(java.lang.String,java.lang.String,com.adobe.xmp.options.PropertyOptions) -> <init>
    89:89:void <init>(java.lang.String,com.adobe.xmp.options.PropertyOptions) -> <init>
    133:135:void addChild(com.adobe.xmp.impl.XMPNode) -> addChild
    149:151:void addChild(int,com.adobe.xmp.impl.XMPNode) -> addChild
    264:287:void addQualifier(com.adobe.xmp.impl.XMPNode) -> addQualifier
    899:902:void assertChildNotExisting(java.lang.String) -> assertChildNotExisting
    915:918:void assertQualifierNotExisting(java.lang.String) -> assertQualifierNotExisting
    199:201:void cleanupChildren() -> cleanupChildren
    427:436:java.lang.Object clone() -> clone
    452:461:void cloneSubtree(com.adobe.xmp.impl.XMPNode) -> cloneSubtree
    491:497:int compareTo(java.lang.Object) -> compareTo
    879:882:com.adobe.xmp.impl.XMPNode find(java.util.List,java.lang.String) -> find
    232:232:com.adobe.xmp.impl.XMPNode findChildByName(java.lang.String) -> findChildByName
    341:341:com.adobe.xmp.impl.XMPNode findQualifierByName(java.lang.String) -> findQualifierByName
    121:121:com.adobe.xmp.impl.XMPNode getChild(int) -> getChild
    825:829:java.util.List getChildren() -> getChildren
    220:221:int getChildrenLength() -> getChildrenLength
    584:584:boolean getHasAliases() -> getHasAliases
    620:620:boolean getHasValueChild() -> getHasValueChild
    507:507:java.lang.String getName() -> getName
    543:547:com.adobe.xmp.options.PropertyOptions getOptions() -> getOptions
    111:111:com.adobe.xmp.impl.XMPNode getParent() -> getParent
    242:242:com.adobe.xmp.impl.XMPNode getQualifier(int) -> getQualifier
    847:851:java.util.List getQualifier() -> getQualifier
    251:252:int getQualifierLength() -> getQualifierLength
    838:838:java.util.List getUnmodifiableChildren() -> getUnmodifiableChildren
    525:525:java.lang.String getValue() -> getValue
    350:350:boolean hasChildren() -> hasChildren
    376:376:boolean hasQualifier() -> hasQualifier
    602:602:boolean isAlias() -> isAlias
    566:566:boolean isImplicit() -> isImplicit
    805:805:boolean isLanguageNode() -> isLanguageNode
    814:814:boolean isTypeNode() -> isTypeNode
    360:366:java.util.Iterator iterateChildren() -> iterateChildren
    386:412:java.util.Iterator iterateQualifier() -> iterateQualifier
    174:175:void removeChild(int) -> removeChild
    187:188:void removeChild(com.adobe.xmp.impl.XMPNode) -> removeChild
    211:211:void removeChildren() -> removeChildren
    298:314:void removeQualifier(com.adobe.xmp.impl.XMPNode) -> removeQualifier
    325:330:void removeQualifiers() -> removeQualifiers
    163:164:void replaceChild(int,com.adobe.xmp.impl.XMPNode) -> replaceChild
    611:611:void setAlias(boolean) -> setAlias
    593:593:void setHasAliases(boolean) -> setHasAliases
    629:629:void setHasValueChild(boolean) -> setHasValueChild
    575:575:void setImplicit(boolean) -> setImplicit
    516:516:void setName(java.lang.String) -> setName
    557:557:void setOptions(com.adobe.xmp.options.PropertyOptions) -> setOptions
    864:864:void setParent(com.adobe.xmp.impl.XMPNode) -> setParent
    534:534:void setValue(java.lang.String) -> setValue
com.adobe.xmp.impl.XMPNode$1 -> com.adobe.xmp.impl.XMPNode$1:
    391:391:void <init>(com.adobe.xmp.impl.XMPNode,java.util.Iterator) -> <init>
    394:394:boolean hasNext() -> hasNext
    399:399:java.lang.Object next() -> next
    404:404:void remove() -> remove
com.adobe.xmp.impl.XMPNodeUtils -> com.adobe.xmp.impl.XMPNodeUtils:
    780:790:void appendLangItem(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String) -> appendLangItem
    819:887:java.lang.Object[] chooseLocalizedText(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String) -> chooseLocalizedText
    297:313:void deleteNode(com.adobe.xmp.impl.XMPNode) -> deleteNode
    747:763:void detectAltText(com.adobe.xmp.impl.XMPNode) -> detectAltText
    150:175:com.adobe.xmp.impl.XMPNode findChildNode(com.adobe.xmp.impl.XMPNode,java.lang.String,boolean) -> findChildNode
    568:586:int findIndexedItem(com.adobe.xmp.impl.XMPNode,java.lang.String,boolean) -> findIndexedItem
    201:283:com.adobe.xmp.impl.XMPNode findNode(com.adobe.xmp.impl.XMPNode,com.adobe.xmp.impl.xpath.XMPPath,boolean,com.adobe.xmp.options.PropertyOptions) -> findNode
    540:547:com.adobe.xmp.impl.XMPNode findQualifierNode(com.adobe.xmp.impl.XMPNode,java.lang.String,boolean) -> findQualifierNode
    76:76:com.adobe.xmp.impl.XMPNode findSchemaNode(com.adobe.xmp.impl.XMPNode,java.lang.String,boolean) -> findSchemaNode
    100:127:com.adobe.xmp.impl.XMPNode findSchemaNode(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String,boolean) -> findSchemaNode
    462:513:com.adobe.xmp.impl.XMPNode followXPathStep(com.adobe.xmp.impl.XMPNode,com.adobe.xmp.impl.xpath.XMPPathSegment,boolean) -> followXPathStep
    609:626:int lookupFieldSelector(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String) -> lookupFieldSelector
    904:916:int lookupLanguageItem(com.adobe.xmp.impl.XMPNode,java.lang.String) -> lookupLanguageItem
    655:682:int lookupQualSelector(com.adobe.xmp.impl.XMPNode,java.lang.String,java.lang.String,int) -> lookupQualSelector
    705:730:void normalizeLangArray(com.adobe.xmp.impl.XMPNode) -> normalizeLangArray
    354:378:com.adobe.xmp.options.PropertyOptions verifySetOptions(com.adobe.xmp.options.PropertyOptions,java.lang.Object) -> verifySetOptions
com.adobe.xmp.impl.XMPNormalizer -> com.adobe.xmp.impl.XMPNormalizer:
    40:40:void <clinit>() -> <clinit>
    524:557:void compareAliasedSubtrees(com.adobe.xmp.impl.XMPNode,com.adobe.xmp.impl.XMPNode,boolean) -> compareAliasedSubtrees
    500:505:void deleteEmptySchemas(com.adobe.xmp.impl.XMPNode) -> deleteEmptySchemas
    448:480:void fixGPSTimeStamp(com.adobe.xmp.impl.XMPNode) -> fixGPSTimeStamp
    666:693:void initDCArrays() -> initDCArrays
    594:650:void migrateAudioCopyright(com.adobe.xmp.XMPMeta,com.adobe.xmp.impl.XMPNode) -> migrateAudioCopyright
    293:405:void moveExplicitAliases(com.adobe.xmp.impl.XMPNode,com.adobe.xmp.options.ParseOptions) -> moveExplicitAliases
    188:227:void normalizeDCArrays(com.adobe.xmp.impl.XMPNode) -> normalizeDCArrays
    62:69:com.adobe.xmp.XMPMeta process(com.adobe.xmp.impl.XMPMetaImpl,com.adobe.xmp.options.ParseOptions) -> process
    245:274:void repairAltText(com.adobe.xmp.impl.XMPNode) -> repairAltText
    131:169:void touchUpDataModel(com.adobe.xmp.impl.XMPMetaImpl) -> touchUpDataModel
    420:434:void transplantArrayItemAlias(java.util.Iterator,com.adobe.xmp.impl.XMPNode,com.adobe.xmp.impl.XMPNode) -> transplantArrayItemAlias
    90:113:void tweakOldXMP(com.adobe.xmp.impl.XMPNode) -> tweakOldXMP
com.adobe.xmp.impl.XMPSchemaRegistryImpl -> com.adobe.xmp.impl.XMPSchemaRegistryImpl:
    38:63:void <init>() -> <init>
    270:270:com.adobe.xmp.properties.XMPAliasInfo findAlias(java.lang.String) -> findAlias
    142:142:java.lang.String getNamespacePrefix(java.lang.String) -> getNamespacePrefix
    151:155:java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    336:422:void registerAlias(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.adobe.xmp.options.AliasOptions) -> registerAlias
    78:118:java.lang.String registerNamespace(java.lang.String,java.lang.String) -> registerNamespace
    442:488:void registerStandardAliases() -> registerStandardAliases
    187:241:void registerStandardNamespaces() -> registerStandardNamespaces
com.adobe.xmp.impl.XMPSchemaRegistryImpl$1 -> com.adobe.xmp.impl.XMPSchemaRegistryImpl$1:
    381:381:void <init>(com.adobe.xmp.impl.XMPSchemaRegistryImpl,java.lang.String,java.lang.String,java.lang.String,com.adobe.xmp.options.AliasOptions) -> <init>
    411:411:com.adobe.xmp.options.AliasOptions getAliasForm() -> getAliasForm
    387:387:java.lang.String getNamespace() -> getNamespace
    395:395:java.lang.String getPrefix() -> getPrefix
    403:403:java.lang.String getPropName() -> getPropName
    416:417:java.lang.String toString() -> toString
com.adobe.xmp.impl.xpath.PathPosition -> com.adobe.xmp.impl.xpath.PathPosition:
# {"id":"sourceFile","fileName":"XMPPathParser.java"}
    524:535:void <init>() -> <init>
com.adobe.xmp.impl.xpath.XMPPath -> com.adobe.xmp.impl.xpath.XMPPath:
    21:47:void <init>() -> <init>
    57:57:void add(com.adobe.xmp.impl.xpath.XMPPathSegment) -> add
    67:67:com.adobe.xmp.impl.xpath.XMPPathSegment getSegment(int) -> getSegment
    76:76:int size() -> size
    86:104:java.lang.String toString() -> toString
com.adobe.xmp.impl.xpath.XMPPathParser -> com.adobe.xmp.impl.xpath.XMPPathParser:
    88:161:com.adobe.xmp.impl.xpath.XMPPath expandXPath(java.lang.String,java.lang.String) -> expandXPath
    238:321:com.adobe.xmp.impl.xpath.XMPPathSegment parseIndexSegment(com.adobe.xmp.impl.xpath.PathPosition) -> parseIndexSegment
    338:382:void parseRootNode(java.lang.String,com.adobe.xmp.impl.xpath.PathPosition,com.adobe.xmp.impl.xpath.XMPPath) -> parseRootNode
    208:221:com.adobe.xmp.impl.xpath.XMPPathSegment parseStructSegment(com.adobe.xmp.impl.xpath.PathPosition) -> parseStructSegment
    174:194:void skipPathDelimiter(java.lang.String,com.adobe.xmp.impl.xpath.PathPosition) -> skipPathDelimiter
    399:417:void verifyQualName(java.lang.String) -> verifyQualName
    431:433:void verifySimpleXMLName(java.lang.String) -> verifySimpleXMLName
    458:508:java.lang.String verifyXPathRoot(java.lang.String,java.lang.String) -> verifyXPathRoot
com.adobe.xmp.impl.xpath.XMPPathSegment -> com.adobe.xmp.impl.xpath.XMPPathSegment:
    48:50:void <init>(java.lang.String,int) -> <init>
    113:113:int getAliasForm() -> getAliasForm
    59:59:int getKind() -> getKind
    77:77:java.lang.String getName() -> getName
    104:104:boolean isAlias() -> isAlias
    95:95:void setAlias(boolean) -> setAlias
    122:122:void setAliasForm(int) -> setAliasForm
    68:68:void setKind(int) -> setKind
    86:86:void setName(java.lang.String) -> setName
    131:144:java.lang.String toString() -> toString
com.adobe.xmp.options.AliasOptions -> com.adobe.xmp.options.AliasOptions:
    40:40:void <init>() -> <init>
    51:51:void <init>(int) -> <init>
    69:69:boolean isArray() -> isArray
    129:129:boolean isArrayAltText() -> isArrayAltText
    60:60:boolean isSimple() -> isSimple
    139:139:com.adobe.xmp.options.AliasOptions setArrayAltText(boolean) -> setArrayAltText
    99:99:com.adobe.xmp.options.AliasOptions setArrayOrdered(boolean) -> setArrayOrdered
    151:151:com.adobe.xmp.options.PropertyOptions toPropertyOptions() -> toPropertyOptions
com.adobe.xmp.options.Options -> com.adobe.xmp.options.Options:
    27:36:void <init>() -> <init>
    27:50:void <init>(int) -> <init>
    236:243:void assertOptionsValid(int) -> assertOptionsValid
    139:139:boolean equals(java.lang.Object) -> equals
    99:99:boolean getOption(int) -> getOption
    119:119:int getOptions() -> getOptions
    148:148:int hashCode() -> hashCode
    109:109:void setOption(int,boolean) -> setOption
    129:130:void setOptions(int) -> setOptions
    190:190:java.lang.String toString() -> toString
com.adobe.xmp.options.ParseOptions -> com.adobe.xmp.options.ParseOptions:
    40:41:void <init>() -> <init>
    110:110:boolean getAcceptLatin1() -> getAcceptLatin1
    90:90:boolean getFixControlChars() -> getFixControlChars
    130:130:boolean getOmitNormalization() -> getOmitNormalization
    50:50:boolean getRequireXMPMeta() -> getRequireXMPMeta
    70:70:boolean getStrictAliasing() -> getStrictAliasing
com.adobe.xmp.options.PropertyOptions -> com.adobe.xmp.options.PropertyOptions:
    56:56:void <init>() -> <init>
    69:69:void <init>(int) -> <init>
    420:425:void assertConsistency(int) -> assertConsistency
    142:142:boolean getHasLanguage() -> getHasLanguage
    199:199:boolean isArray() -> isArray
    263:263:boolean isArrayAltText() -> isArrayAltText
    241:241:boolean isArrayAlternate() -> isArrayAlternate
    220:220:boolean isArrayOrdered() -> isArrayOrdered
    311:311:boolean isCompositeProperty() -> isCompositeProperty
    124:124:boolean isQualifier() -> isQualifier
    289:289:boolean isSchemaNode() -> isSchemaNode
    320:320:boolean isSimple() -> isSimple
    178:178:boolean isStruct() -> isStruct
    351:351:void mergeWith(com.adobe.xmp.options.PropertyOptions) -> mergeWith
    209:209:com.adobe.xmp.options.PropertyOptions setArray(boolean) -> setArray
    273:273:com.adobe.xmp.options.PropertyOptions setArrayAltText(boolean) -> setArrayAltText
    251:251:com.adobe.xmp.options.PropertyOptions setArrayAlternate(boolean) -> setArrayAlternate
    230:230:com.adobe.xmp.options.PropertyOptions setArrayOrdered(boolean) -> setArrayOrdered
    152:152:com.adobe.xmp.options.PropertyOptions setHasLanguage(boolean) -> setHasLanguage
    111:111:com.adobe.xmp.options.PropertyOptions setHasQualifiers(boolean) -> setHasQualifiers
    170:170:com.adobe.xmp.options.PropertyOptions setHasType(boolean) -> setHasType
    134:134:com.adobe.xmp.options.PropertyOptions setQualifier(boolean) -> setQualifier
    299:299:com.adobe.xmp.options.PropertyOptions setSchemaNode(boolean) -> setSchemaNode
    188:188:com.adobe.xmp.options.PropertyOptions setStruct(boolean) -> setStruct
    89:89:com.adobe.xmp.options.PropertyOptions setURI(boolean) -> setURI
com.android.camera.AccessibilityUtil -> com.android.camera.AccessibilityUtil:
    22:22:void <clinit>() -> <clinit>
    32:69:void <init>(com.android.camera.ui.PreviewOverlay,android.view.View) -> <init>
    21:21:float access$000(com.android.camera.AccessibilityUtil) -> access$000
    21:21:com.android.camera.ui.PreviewOverlay access$100(com.android.camera.AccessibilityUtil) -> access$100
    21:21:android.widget.Button access$200(com.android.camera.AccessibilityUtil) -> access$200
    21:21:android.widget.Button access$300(com.android.camera.AccessibilityUtil) -> access$300
    111:118:boolean containsGoogleAccessibilityService() -> containsGoogleAccessibilityService
    93:93:android.view.accessibility.AccessibilityManager getAccessibilityManager() -> getAccessibilityManager
    85:86:void hideZoomUI() -> hideZoomUI
    131:132:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    100:101:boolean isTouchExplorationEnabled() -> isTouchExplorationEnabled
    78:81:void showZoomUI(float) -> showZoomUI
com.android.camera.AccessibilityUtil$1 -> com.android.camera.AccessibilityUtil$1:
    32:32:void <init>(com.android.camera.AccessibilityUtil) -> <init>
    35:43:void onClick(android.view.View) -> onClick
com.android.camera.AccessibilityUtil$2 -> com.android.camera.AccessibilityUtil$2:
    48:48:void <init>(com.android.camera.AccessibilityUtil) -> <init>
    51:59:void onClick(android.view.View) -> onClick
com.android.camera.AnimationManager -> com.android.camera.AnimationManager:
    28:28:void <init>() -> <init>
    175:179:void cancelAnimations() -> cancelAnimations
com.android.camera.ButtonManager -> com.android.camera.ButtonManager:
    106:113:void <init>(com.android.camera.app.AppController) -> <init>
    39:39:float access$000(com.android.camera.ButtonManager) -> access$000
    39:39:com.android.camera.app.AppController access$100(com.android.camera.ButtonManager) -> access$100
    39:39:com.android.camera.settings.SettingsManager access$200(com.android.camera.ButtonManager) -> access$200
    448:470:void disableButton(int) -> disableButton
    514:516:void disableButtonClick(int) -> disableButtonClick
    438:439:void disableCameraButtonAndBlock() -> disableCameraButtonAndBlock
    487:505:void enableButton(int) -> enableButton
    526:528:void enableButtonClick(int) -> enableButtonClick
    478:479:void enableCameraButton() -> enableCameraButton
    248:288:com.android.camera.MultiToggleImageButton getButtonOrError(int) -> getButtonOrError
    153:179:void getButtonsReferences(android.view.View) -> getButtonsReferences
    626:626:float getExposureCompensationStep() -> getExposureCompensationStep
    300:325:android.widget.ImageButton getImageButtonOrError(int) -> getImageButtonOrError
    538:545:void hideButton(int) -> hideButton
    337:337:void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback) -> initializeButton
    349:380:void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback,com.android.camera.ButtonManager$ButtonCallback) -> initializeButton
    755:764:void initializeCameraButton(com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback,com.android.camera.ButtonManager$ButtonCallback,int) -> initializeCameraButton
    856:865:void initializeCountdownButton(com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback,com.android.camera.ButtonManager$ButtonCallback,int) -> initializeCountdownButton
    668:678:void initializeFlashButton(com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback,com.android.camera.ButtonManager$ButtonCallback,int) -> initializeFlashButton
    896:915:void initializeGridLinesButton(com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback,com.android.camera.ButtonManager$ButtonCallback,int) -> initializeGridLinesButton
    823:831:void initializeHdrButton(com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback,com.android.camera.ButtonManager$ButtonCallback,int) -> initializeHdrButton
    845:847:void initializeHdrButtonIcons(com.android.camera.MultiToggleImageButton,int) -> initializeHdrButtonIcons
    790:798:void initializeHdrPlusButton(com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback,com.android.camera.ButtonManager$ButtonCallback,int) -> initializeHdrPlusButton
    812:814:void initializeHdrPlusButtonIcons(com.android.camera.MultiToggleImageButton,int) -> initializeHdrPlusButtonIcons
    726:736:void initializeHdrPlusFlashButton(com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback,com.android.camera.ButtonManager$ButtonCallback,int) -> initializeHdrPlusFlashButton
    926:990:void initializePanoOrientationButtons(com.android.camera.ButtonManager$ButtonCallback) -> initializePanoOrientationButtons
    390:411:void initializePushButton(int,android.view.View$OnClickListener,int,int) -> initializePushButton
    429:429:void initializePushButton(int,android.view.View$OnClickListener) -> initializePushButton
    697:707:void initializeTorchButton(com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback,com.android.camera.ButtonManager$ButtonCallback,int) -> initializeTorchButton
    635:642:boolean isEnabled(int) -> isEnabled
    919:919:boolean isPanoEnabled() -> isPanoEnabled
    654:658:boolean isVisible(int) -> isVisible
    122:122:void load(android.view.View) -> load
    187:226:void onSettingChanged(com.android.camera.settings.SettingsManager,java.lang.String) -> onSettingChanged
    576:579:void setExposureCompensationCallback(com.android.camera.app.CameraAppUI$BottomBarUISpec$ExposureCompensationSetCallback) -> setExposureCompensationCallback
    601:611:void setExposureCompensationParameters(int,int,float) -> setExposureCompensationParameters
    145:145:void setListener(com.android.camera.ButtonManager$ButtonStatusListener) -> setListener
    1001:1001:void setPreChangeCallback(com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback) -> setPreChangeCallback
    570:570:void setToInitialState() -> setToInitialState
    616:618:void setVisible(android.view.View,boolean) -> setVisible
    556:563:void showButton(int) -> showButton
    881:885:void updateExposureButtons() -> updateExposureButtons
    995:997:void updatePanoButtons() -> updatePanoButtons
com.android.camera.ButtonManager$1 -> com.android.camera.ButtonManager$1:
    579:579:void <init>(com.android.camera.ButtonManager,com.android.camera.app.CameraAppUI$BottomBarUISpec$ExposureCompensationSetCallback) -> <init>
    582:587:void onOptionClicked(android.view.View) -> onOptionClicked
com.android.camera.ButtonManager$10 -> com.android.camera.ButtonManager$10:
    970:970:void <init>(com.android.camera.ButtonManager,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    973:978:void onOptionClicked(android.view.View) -> onOptionClicked
com.android.camera.ButtonManager$11 -> com.android.camera.ButtonManager$11:
    1001:1001:void <init>(com.android.camera.ButtonManager,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    1004:1005:void stateChanged(android.view.View,int) -> stateChanged
com.android.camera.ButtonManager$2 -> com.android.camera.ButtonManager$2:
    678:678:void <init>(com.android.camera.ButtonManager,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    681:684:void stateChanged(android.view.View,int) -> stateChanged
com.android.camera.ButtonManager$3 -> com.android.camera.ButtonManager$3:
    707:707:void <init>(com.android.camera.ButtonManager,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    710:713:void stateChanged(android.view.View,int) -> stateChanged
com.android.camera.ButtonManager$4 -> com.android.camera.ButtonManager$4:
    736:736:void <init>(com.android.camera.ButtonManager,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    739:742:void stateChanged(android.view.View,int) -> stateChanged
com.android.camera.ButtonManager$5 -> com.android.camera.ButtonManager$5:
    764:764:void <init>(com.android.camera.ButtonManager,com.android.camera.MultiToggleImageButton,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    767:779:void stateChanged(android.view.View,int) -> stateChanged
com.android.camera.ButtonManager$6 -> com.android.camera.ButtonManager$6:
    798:798:void <init>(com.android.camera.ButtonManager,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    801:804:void stateChanged(android.view.View,int) -> stateChanged
com.android.camera.ButtonManager$7 -> com.android.camera.ButtonManager$7:
    831:831:void <init>(com.android.camera.ButtonManager,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    834:837:void stateChanged(android.view.View,int) -> stateChanged
com.android.camera.ButtonManager$8 -> com.android.camera.ButtonManager$8:
    865:865:void <init>(com.android.camera.ButtonManager,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    868:871:void stateChanged(android.view.View,int) -> stateChanged
com.android.camera.ButtonManager$9 -> com.android.camera.ButtonManager$9:
    902:902:void <init>(com.android.camera.ButtonManager,com.android.camera.ButtonManager$ButtonCallback) -> <init>
    905:908:void stateChanged(android.view.View,int) -> stateChanged
com.android.camera.CameraActivity -> com.android.camera.CameraActivity:
    182:182:void <clinit>() -> <clinit>
    177:1393:void <init>() -> <init>
    177:177:com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper access$000(com.android.camera.CameraActivity) -> access$000
    177:177:com.android.camera.debug.Log$Tag access$100() -> access$100
    177:177:void access$1000(com.android.camera.CameraActivity,com.android.camera.data.FilmstripItem) -> access$1000
    177:177:boolean access$1100(com.android.camera.CameraActivity) -> access$1100
    177:177:android.app.ActionBar access$1200(com.android.camera.CameraActivity) -> access$1200
    177:177:boolean access$1302(com.android.camera.CameraActivity,boolean) -> access$1302
    177:177:void access$1400(com.android.camera.CameraActivity) -> access$1400
    177:177:boolean access$1500(com.android.camera.CameraActivity) -> access$1500
    177:177:boolean access$1502(com.android.camera.CameraActivity,boolean) -> access$1502
    177:177:int access$1600(com.android.camera.CameraActivity) -> access$1600
    177:177:void access$1700(com.android.camera.CameraActivity,boolean) -> access$1700
    177:177:void access$1800(com.android.camera.CameraActivity,int) -> access$1800
    177:177:com.android.camera.widget.Preloader access$1900(com.android.camera.CameraActivity) -> access$1900
    177:177:com.android.camera.settings.SettingsManager access$200(com.android.camera.CameraActivity) -> access$200
    177:177:android.net.Uri[] access$2000(com.android.camera.CameraActivity) -> access$2000
    177:177:com.android.camera.data.PhotoItemFactory access$2100(com.android.camera.CameraActivity) -> access$2100
    177:177:void access$2200(com.android.camera.CameraActivity,int) -> access$2200
    177:177:void access$2300(com.android.camera.CameraActivity,int) -> access$2300
    177:177:int access$2400(com.android.camera.CameraActivity) -> access$2400
    177:177:void access$2500(com.android.camera.CameraActivity,android.graphics.Bitmap,int) -> access$2500
    177:177:void access$2600(com.android.camera.CameraActivity,int) -> access$2600
    177:177:com.android.camera.FatalErrorHandler access$2700(com.android.camera.CameraActivity) -> access$2700
    177:177:com.android.camera.CameraModule access$2800(com.android.camera.CameraActivity) -> access$2800
    177:177:android.widget.FrameLayout access$2900(com.android.camera.CameraActivity) -> access$2900
    177:177:com.android.camera.app.CameraAppUI access$300(com.android.camera.CameraActivity) -> access$300
    177:177:boolean access$3000(com.android.camera.CameraActivity) -> access$3000
    177:177:boolean access$3002(com.android.camera.CameraActivity,boolean) -> access$3002
    177:177:boolean access$3102(com.android.camera.CameraActivity,boolean) -> access$3102
    177:177:com.android.camera.app.MemoryManager access$3200(com.android.camera.CameraActivity) -> access$3200
    177:177:void access$3300(com.android.camera.CameraActivity) -> access$3300
    177:177:void access$3400(com.android.camera.CameraActivity) -> access$3400
    177:177:boolean access$3500(com.android.camera.CameraActivity) -> access$3500
    177:177:java.lang.Runnable access$3600(com.android.camera.CameraActivity) -> access$3600
    177:177:android.os.Handler access$3700(com.android.camera.CameraActivity) -> access$3700
    177:177:java.lang.Object access$3800(com.android.camera.CameraActivity) -> access$3800
    177:177:long access$3900(com.android.camera.CameraActivity) -> access$3900
    177:177:long access$3902(com.android.camera.CameraActivity,long) -> access$3902
    177:177:java.lang.String access$400(com.android.camera.CameraActivity,int) -> access$400
    177:177:void access$4000(com.android.camera.CameraActivity,boolean) -> access$4000
    177:177:boolean access$4102(com.android.camera.CameraActivity,boolean) -> access$4102
    177:177:android.view.ViewGroup access$4200(com.android.camera.CameraActivity) -> access$4200
    177:177:float access$500(com.android.camera.CameraActivity,int) -> access$500
    177:177:void access$600(com.android.camera.CameraActivity,int) -> access$600
    177:177:com.android.camera.filmstrip.FilmstripController access$800(com.android.camera.CameraActivity) -> access$800
    177:177:com.android.camera.data.LocalFilmstripDataAdapter access$900(com.android.camera.CameraActivity) -> access$900
    1113:1113:void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener) -> addPreviewAreaSizeChangedListener
    1940:1962:void checkPermissions() -> checkPermissions
    2735:2736:void closeModule(com.android.camera.CameraModule) -> closeModule
    1043:1043:android.app.Dialog createDialog() -> createDialog
    2697:2712:int currentUserInterfaceMode() -> currentUserInterfaceMode
    1832:1839:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    1325:1334:void enableKeepScreenOn(boolean) -> enableKeepScreenOn
    617:623:float fileAgeFromAdapterAtIndex(int) -> fileAgeFromAdapterAtIndex
    607:613:java.lang.String fileNameFromAdapterAtIndex(int) -> fileNameFromAdapterAtIndex
    2168:2173:void fillTemporarySessions() -> fillTemporarySessions
    2908:2908:void finishActivityWithIntentCanceled() -> finishActivityWithIntentCanceled
    2903:2903:void finishActivityWithIntentCompleted(android.content.Intent) -> finishActivityWithIntentCompleted
    2912:2915:void finishActivityWithIntentResult(int,android.content.Intent) -> finishActivityWithIntentResult
    2561:2561:void freezeScreenUntilPreviewReady() -> freezeScreenUntilPreviewReady
    1033:1033:android.content.Context getAndroidContext() -> getAndroidContext
    2853:2854:long getAutoFocusTime() -> getAutoFocusTime
    2624:2627:com.android.camera.ButtonManager getButtonManager() -> getButtonManager
    302:302:com.android.camera.app.CameraAppUI getCameraAppUI() -> getCameraAppUI
    1038:1038:com.android.camera.one.config.OneCameraFeatureConfig getCameraFeatureConfig() -> getCameraFeatureConfig
    1345:1345:com.android.camera.one.OneCameraOpener getCameraOpener() -> getCameraOpener
    1340:1340:com.android.camera.app.CameraProvider getCameraProvider() -> getCameraProvider
    1073:1080:java.lang.String getCameraScope() -> getCameraScope
    2878:2879:long getCaptureStartTime() -> getCaptureStartTime
    1085:1085:com.android.camera.module.ModuleController getCurrentModuleController() -> getCurrentModuleController
    1057:1057:int getCurrentModuleIndex() -> getCurrentModuleIndex
    2606:2606:com.android.camera.FatalErrorHandler getFatalErrorHandler() -> getFatalErrorHandler
    2843:2846:long getFirstPreviewTime() -> getFirstPreviewTime
    2873:2874:long getJpegCallbackFinishTime() -> getJpegCallbackFinishTime
    1217:1217:com.android.camera.app.LocationManager getLocationManager() -> getLocationManager
    1707:1740:int getModeIndex() -> getModeIndex
    2566:2570:int getModuleId(int) -> getModuleId
    1162:1162:android.widget.FrameLayout getModuleLayoutRoot() -> getModuleLayoutRoot
    307:307:com.android.camera.app.ModuleManager getModuleManager() -> getModuleManager
    1062:1063:java.lang.String getModuleScope() -> getModuleScope
    1212:1212:com.android.camera.app.OrientationManager getOrientationManager() -> getOrientationManager
    2868:2869:long getPictureDisplayedToJpegCallbackTime() -> getPictureDisplayedToJpegCallbackTime
    2484:2487:int getPreferredChildModeIndex(int) -> getPreferredChildModeIndex
    1804:1806:int getPreviewVisibility() -> getPreviewVisibility
    1090:1090:int getQuickSwitchToModuleId(int) -> getQuickSwitchToModuleId
    2596:2596:com.android.camera.settings.ResolutionSetting getResolutionSetting() -> getResolutionSetting
    2601:2601:com.android.camera.app.CameraServices getServices() -> getServices
    2591:2591:com.android.camera.settings.SettingsManager getSettingsManager() -> getSettingsManager
    2858:2859:long getShutterLag() -> getShutterLag
    2863:2864:long getShutterToPictureDisplayedTime() -> getShutterToPictureDisplayedTime
    2370:2372:long getStorageSpaceBytes() -> getStorageSpaceBytes
    837:837:void hideSessionProgress() -> hideSessionProgress
    2794:2821:void hideUndoDeletionBar(boolean) -> hideUndoDeletionBar
    1238:1250:void indicateCapture(android.graphics.Bitmap,int) -> indicateCapture
    2267:2277:void initMaxBrightness() -> initMaxBrightness
    1380:1382:boolean isCaptureIntent() -> isCaptureIntent
    2479:2479:boolean isPaused() -> isPaused
    2883:2884:boolean isRecording() -> isRecording
    2474:2474:boolean isSecureCamera() -> isSecureCamera
    1177:1177:boolean isShutterEnabled() -> isShutterEnabled
    2919:2924:void keepScreenOnForAWhile() -> keepScreenOnForAWhile
    1049:1052:void launchActivityByIntent(android.content.Intent) -> launchActivityByIntent
    2643:2650:void launchEditor(com.android.camera.data.FilmstripItem) -> launchEditor
    2683:2688:void launchTinyPlanetEditor(com.android.camera.data.FilmstripItem) -> launchTinyPlanetEditor
    1222:1223:void lockOrientation() -> lockOrientation
    1265:1320:void notifyNewMedia(android.net.Uri) -> notifyNewMedia
    2332:2334:void onBackPressed() -> onBackPressed
    550:551:void onCameraDisabled(int) -> onCameraDisabled
    510:538:void onCameraOpened(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onCameraOpened
    2253:2261:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    2664:2669:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    2656:2659:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2347:2366:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    1440:1698:void onCreateTasks(android.os.Bundle) -> onCreateTasks
    2212:2248:void onDestroyTasks() -> onDestroyTasks
    556:557:void onDeviceOpenFailure(int,java.lang.String) -> onDeviceOpenFailure
    562:563:void onDeviceOpenedAlready(int,java.lang.String) -> onDeviceOpenedAlready
    2282:2295:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2300:2327:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2495:2519:void onModeSelected(int) -> onModeSelected
    1435:1435:void onNewIntentTasks(android.content.Intent) -> onNewIntentTasks
    1367:1375:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1847:1902:void onPauseTasks() -> onPauseTasks
    1102:1102:void onPreviewReadyToStart() -> onPreviewReadyToStart
    1107:1107:void onPreviewStarted() -> onPreviewStarted
    568:569:void onReconnectionFailure(com.android.ex.camera2.portability.CameraAgent,java.lang.String) -> onReconnectionFailure
    1907:1927:void onResumeTasks() -> onResumeTasks
    574:575:void onSettingChanged(com.android.camera.settings.SettingsManager,java.lang.String) -> onSettingChanged
    2528:2536:void onSettingsSelected() -> onSettingsSelected
    886:892:boolean onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
    2178:2198:void onStartTasks() -> onStartTasks
    2204:2207:void onStopTasks() -> onStopTasks
    1824:1826:void onUserInteraction() -> onUserInteraction
    2722:2730:void openModule(com.android.camera.CameraModule) -> openModule
    2740:2744:void performDeletion() -> performDeletion
    1967:2009:void preloadFilmstripItems() -> preloadFilmstripItems
    1349:1359:void removeItemAt(int) -> removeItemAt
    1119:1119:void removePreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener) -> removePreviewAreaSizeChangedListener
    543:545:void resetExposureCompensationToDefault(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> resetExposureCompensationToDefault
    2928:2930:void resetScreenOn() -> resetScreenOn
    2015:2164:void resume() -> resume
    821:833:void setFilmstripUiVisibility(boolean) -> setFilmstripUiVisibility
    2578:2586:void setModuleFromModeIndex(int) -> setModuleFromModeIndex
    2958:2962:void setNfcBeamPushUriFromData(com.android.camera.data.FilmstripItem) -> setNfcBeamPushUriFromData
    1157:1157:void setPreviewStatusListener(com.android.camera.ui.PreviewStatusListener) -> setPreviewStatusListener
    2455:2456:void setResultEx(int) -> setResultEx
    2460:2462:void setResultEx(int,android.content.Intent) -> setResultEx
    1816:1819:void setRotationAnimation() -> setRotationAnimation
    1172:1172:void setShutterEnabled(boolean) -> setShutterEnabled
    2834:2834:void setSwipingEnabled(boolean) -> setSwipingEnabled
    864:876:void setupNfcBeamPush() -> setupNfcBeamPush
    1124:1124:void setupOneShotPreviewListener() -> setupOneShotPreviewListener
    1752:1770:boolean shouldUseNoOpLocation() -> shouldUseNoOpLocation
    3041:3053:void showDetailsDialog(int) -> showDetailsDialog
    849:850:void showProcessError(int) -> showProcessError
    2748:2790:void showUndoDeletionBar() -> showUndoDeletionBar
    1182:1182:void startFlashAnimation(boolean) -> startFlashAnimation
    2937:2952:boolean startGallery() -> startGallery
    1229:1230:void unlockOrientation() -> unlockOrientation
    3060:3070:void updateActionBarMenu(com.android.camera.data.FilmstripItem) -> updateActionBarMenu
    3000:3037:void updateBottomControlsByData(com.android.camera.data.FilmstripItem) -> updateBottomControlsByData
    1137:1137:void updatePreviewAspectRatio(float) -> updatePreviewAspectRatio
    1797:1799:void updatePreviewRendering(int) -> updatePreviewRendering
    1152:1152:void updatePreviewTransform(android.graphics.Matrix) -> updatePreviewTransform
    1785:1792:void updatePreviewVisibility() -> updatePreviewVisibility
    854:854:void updateSessionProgress(int) -> updateSessionProgress
    858:859:void updateSessionProgressText(int) -> updateSessionProgressText
    2418:2450:void updateStorageHint(long) -> updateStorageHint
    2394:2414:void updateStorageSpaceAndHint(com.android.camera.CameraActivity$OnStorageUpdateDoneListener) -> updateStorageSpaceAndHint
    2970:2991:void updateUiByData(int) -> updateUiByData
com.android.camera.CameraActivity$1 -> com.android.camera.CameraActivity$1:
    283:283:void <init>(com.android.camera.CameraActivity) -> <init>
    286:286:void run() -> run
com.android.camera.CameraActivity$10 -> com.android.camera.CameraActivity$10:
    1290:1290:void <init>(com.android.camera.CameraActivity) -> <init>
    1290:1290:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1293:1294:com.android.camera.data.FilmstripItem doInBackground(com.android.camera.data.FilmstripItem[]) -> doInBackground
    1290:1290:void onPostExecute(java.lang.Object) -> onPostExecute
    1301:1307:void onPostExecute(com.android.camera.data.FilmstripItem) -> onPostExecute
com.android.camera.CameraActivity$10$1 -> com.android.camera.CameraActivity$10$1:
    1307:1307:void <init>(com.android.camera.CameraActivity$10,com.android.camera.data.FilmstripItem) -> <init>
    1310:1314:void run() -> run
com.android.camera.CameraActivity$11 -> com.android.camera.CameraActivity$11:
    1394:1394:void <init>(com.android.camera.CameraActivity) -> <init>
    1398:1398:void onCameraError(int) -> onCameraError
    1403:1407:void onCameraException(java.lang.RuntimeException,java.lang.String,int,int) -> onCameraException
    1411:1415:void onDispatchThreadException(java.lang.RuntimeException) -> onDispatchThreadException
    1418:1428:void onFatalError() -> onFatalError
com.android.camera.CameraActivity$12 -> com.android.camera.CameraActivity$12:
    1566:1566:void <init>(com.android.camera.CameraActivity) -> <init>
    1569:1571:void onVisibilityChanged(boolean) -> onVisibilityChanged
com.android.camera.CameraActivity$13 -> com.android.camera.CameraActivity$13:
    1662:1662:void <init>(com.android.camera.CameraActivity) -> <init>
    1665:1666:void run() -> run
com.android.camera.CameraActivity$14 -> com.android.camera.CameraActivity$14:
    1678:1678:void <init>(com.android.camera.CameraActivity) -> <init>
    1695:1695:void onCameraAccessException() -> onCameraAccessException
    1690:1690:void onFirstRunDialogCancelled() -> onFirstRunDialogCancelled
    1682:1682:void onFirstRunStateReady() -> onFirstRunStateReady
com.android.camera.CameraActivity$15 -> com.android.camera.CameraActivity$15:
    1976:1976:void <init>(com.android.camera.CameraActivity) -> <init>
    1976:1976:void onCallback(java.lang.Object) -> onCallback
    1979:1979:void onCallback(java.lang.Void) -> onCallback
com.android.camera.CameraActivity$16 -> com.android.camera.CameraActivity$16:
    1989:1989:void <init>(com.android.camera.CameraActivity) -> <init>
    1992:1995:void onClick(android.view.View) -> onClick
com.android.camera.CameraActivity$17 -> com.android.camera.CameraActivity$17:
    2113:2113:void <init>(com.android.camera.CameraActivity) -> <init>
    2113:2113:void onCallback(java.lang.Object) -> onCallback
    2116:2116:void onCallback(java.lang.Void) -> onCallback
com.android.camera.CameraActivity$18 -> com.android.camera.CameraActivity$18:
    2128:2128:void <init>(com.android.camera.CameraActivity) -> <init>
    2131:2131:void onChange() -> onChange
com.android.camera.CameraActivity$19 -> com.android.camera.CameraActivity$19:
    2142:2142:void <init>(com.android.camera.CameraActivity) -> <init>
    2145:2146:void onSystemUiVisibilityChange(int) -> onSystemUiVisibilityChange
com.android.camera.CameraActivity$2 -> com.android.camera.CameraActivity$2:
    314:314:void <init>(com.android.camera.CameraActivity) -> <init>
    317:317:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.camera.CameraActivity$20 -> com.android.camera.CameraActivity$20:
    2394:2394:void <init>(com.android.camera.CameraActivity,com.android.camera.CameraActivity$OnStorageUpdateDoneListener) -> <init>
    2394:2394:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    2397:2400:java.lang.Long doInBackground(java.lang.Void[]) -> doInBackground
    2394:2394:void onPostExecute(java.lang.Object) -> onPostExecute
    2405:2411:void onPostExecute(java.lang.Long) -> onPostExecute
com.android.camera.CameraActivity$21 -> com.android.camera.CameraActivity$21:
    2538:2538:void <init>(com.android.camera.CameraActivity,android.content.Intent) -> <init>
    2552:2552:void onDismissCancelled() -> onDismissCancelled
    2548:2548:void onDismissError() -> onDismissError
    2544:2544:void onDismissSucceeded() -> onDismissSucceeded
com.android.camera.CameraActivity$22 -> com.android.camera.CameraActivity$22:
    2758:2758:void <init>(com.android.camera.CameraActivity) -> <init>
    2761:2768:void onClick(android.view.View) -> onClick
com.android.camera.CameraActivity$23 -> com.android.camera.CameraActivity$23:
    2776:2776:void <init>(com.android.camera.CameraActivity) -> <init>
    2779:2782:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.camera.CameraActivity$24 -> com.android.camera.CameraActivity$24:
    2799:2799:void <init>(com.android.camera.CameraActivity) -> <init>
    2807:2807:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.CameraActivity$3 -> com.android.camera.CameraActivity$3:
    327:327:void <init>(com.android.camera.CameraActivity) -> <init>
    327:327:void access$700(com.android.camera.CameraActivity$3,com.android.camera.data.FilmstripItem) -> access$700
    442:442:int getCurrentDataId() -> getCurrentDataId
    446:446:com.android.camera.data.FilmstripItem getCurrentLocalData() -> getCurrentLocalData
    457:472:android.content.Intent getShareIntentByData(com.android.camera.data.FilmstripItem) -> getShareIntentByData
    486:493:android.content.Intent getShareIntentFromType(java.lang.String) -> getShareIntentFromType
    391:397:void onDelete() -> onDelete
    365:376:void onEdit() -> onEdit
    335:357:void onExternalViewer() -> onExternalViewer
    501:504:void onProgressErrorClicked() -> onProgressErrorClicked
    402:425:void onShare() -> onShare
    381:386:void onTinyPlanet() -> onTinyPlanet
    430:434:void share(com.android.camera.data.FilmstripItem) -> share
com.android.camera.CameraActivity$3$1 -> com.android.camera.CameraActivity$3$1:
    418:418:void <init>(com.android.camera.CameraActivity$3,com.android.camera.data.FilmstripItem) -> <init>
    418:418:void onCallback(java.lang.Object) -> onCallback
    421:421:void onCallback(java.lang.Void) -> onCallback
com.android.camera.CameraActivity$4 -> com.android.camera.CameraActivity$4:
    627:627:void <init>(com.android.camera.CameraActivity) -> <init>
    766:772:void onDataFocusChanged(int,int) -> onDataFocusChanged
    726:729:void onDataReloaded() -> onDataReloaded
    734:737:void onDataUpdated(int) -> onDataUpdated
    714:715:void onEnterFilmstrip(int) -> onEnterFilmstrip
    702:703:void onEnterFullScreenUiHidden(int) -> onEnterFullScreenUiHidden
    690:691:void onEnterFullScreenUiShown(int) -> onEnterFullScreenUiShown
    742:743:void onEnterZoomView(int) -> onEnterZoomView
    643:651:void onFilmstripHidden() -> onFilmstripHidden
    656:660:void onFilmstripShown() -> onFilmstripShown
    680:685:void onFocusedDataDemoted(int) -> onFocusedDataDemoted
    670:675:void onFocusedDataPromoted(int) -> onFocusedDataPromoted
    782:782:void onScroll(int,int,int) -> onScroll
    635:638:void onSwipeOutBegin() -> onSwipeOutBegin
    749:761:void onZoomAtIndexChanged(int,float) -> onZoomAtIndexChanged
com.android.camera.CameraActivity$4$1 -> com.android.camera.CameraActivity$4$1:
    772:772:void <init>(com.android.camera.CameraActivity$4,int) -> <init>
    775:775:void run() -> run
com.android.camera.CameraActivity$5 -> com.android.camera.CameraActivity$5:
    787:787:void <init>(com.android.camera.CameraActivity) -> <init>
    790:797:void onMetadataUpdated(java.util.List) -> onMetadataUpdated
com.android.camera.CameraActivity$6 -> com.android.camera.CameraActivity$6:
    876:876:void <init>(com.android.camera.CameraActivity) -> <init>
    879:879:android.net.Uri[] createBeamUris(android.nfc.NfcEvent) -> createBeamUris
com.android.camera.CameraActivity$7 -> com.android.camera.CameraActivity$7:
    899:899:void <init>(com.android.camera.CameraActivity) -> <init>
    1017:1019:void onSessionCanceled(android.net.Uri) -> onSessionCanceled
    987:993:void onSessionCaptureIndicatorUpdate(android.graphics.Bitmap,int) -> onSessionCaptureIndicatorUpdate
    920:952:void onSessionDone(android.net.Uri) -> onSessionDone
    999:1011:void onSessionFailed(android.net.Uri,int,boolean) -> onSessionFailed
    962:968:void onSessionProgress(android.net.Uri,int) -> onSessionProgress
    974:980:void onSessionProgressText(android.net.Uri,int) -> onSessionProgressText
    902:908:void onSessionQueued(android.net.Uri) -> onSessionQueued
    914:915:void onSessionUpdated(android.net.Uri) -> onSessionUpdated
com.android.camera.CameraActivity$8 -> com.android.camera.CameraActivity$8:
    1125:1125:void <init>(com.android.camera.CameraActivity) -> <init>
    1128:1129:void onPreviewFrame(byte[],com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onPreviewFrame
com.android.camera.CameraActivity$9 -> com.android.camera.CameraActivity$9:
    1250:1250:void <init>(com.android.camera.CameraActivity,android.graphics.Bitmap,int) -> <init>
    1253:1255:void run() -> run
com.android.camera.CameraActivity$MainHandler -> com.android.camera.CameraActivity$MainHandler:
    583:584:void <init>(com.android.camera.CameraActivity,android.os.Looper) -> <init>
    589:597:void handleMessage(android.os.Message) -> handleMessage
com.android.camera.CameraDisabledException -> com.android.camera.CameraDisabledException:
    23:23:void <init>() -> <init>
com.android.camera.CameraModule -> com.android.camera.CameraModule:
    32:34:void <init>(com.android.camera.app.AppController) -> <init>
    68:68:com.android.camera.app.CameraProvider getCameraProvider() -> getCameraProvider
    61:61:com.android.camera.app.CameraServices getServices() -> getServices
com.android.camera.CaptureActivity -> com.android.camera.CaptureActivity:
    22:22:void <init>() -> <init>
com.android.camera.CaptureLayoutHelper -> com.android.camera.CaptureLayoutHelper:
    46:79:void <init>(int,int,int) -> <init>
    119:126:android.graphics.RectF getBottomBarRect() -> getBottomBarRect
    250:360:com.android.camera.CaptureLayoutHelper$PositionConfiguration getPositionConfiguration(int,int,float,int) -> getPositionConfiguration
    136:143:android.graphics.RectF getPreviewRect() -> getPreviewRect
    165:200:android.graphics.RectF getUncoveredPreviewRect() -> getUncoveredPreviewRect
    225:228:void onNonDecorWindowSizeChanged(int,int,int) -> onNonDecorWindowSizeChanged
    84:88:void onPreviewAspectRatioChanged(float) -> onPreviewAspectRatioChanged
    373:377:void round(android.graphics.RectF) -> round
    97:97:void setShowBottomBar(boolean) -> setShowBottomBar
    213:220:boolean shouldOverlayBottomBar() -> shouldOverlayBottomBar
    105:108:void updatePositionConfiguration() -> updatePositionConfiguration
com.android.camera.CaptureLayoutHelper$PositionConfiguration -> com.android.camera.CaptureLayoutHelper$PositionConfiguration:
    60:72:void <init>() -> <init>
com.android.camera.CaptureModule -> com.android.camera.CaptureModule:
    115:125:void <clinit>() -> <clinit>
    347:347:void <init>(com.android.camera.app.AppController) -> <init>
    127:385:void <init>(com.android.camera.app.AppController,boolean) -> <init>
    107:107:float access$002(com.android.camera.CaptureModule,float) -> access$002
    107:107:com.android.camera.one.OneCamera access$100(com.android.camera.CaptureModule) -> access$100
    107:107:void access$1000(com.android.camera.CaptureModule) -> access$1000
    107:107:com.android.camera.one.OneCamera access$102(com.android.camera.CaptureModule,com.android.camera.one.OneCamera) -> access$102
    107:107:void access$1100(com.android.camera.CaptureModule) -> access$1100
    107:107:void access$1200(com.android.camera.CaptureModule) -> access$1200
    107:107:com.android.camera.CaptureModule$ModuleState access$1300(com.android.camera.CaptureModule) -> access$1300
    107:107:com.android.camera.CaptureModule$ModuleState access$1302(com.android.camera.CaptureModule,com.android.camera.CaptureModule$ModuleState) -> access$1302
    107:107:com.android.camera.app.AppController access$1400(com.android.camera.CaptureModule) -> access$1400
    107:107:com.android.camera.async.MainThread access$1500(com.android.camera.CaptureModule) -> access$1500
    107:107:void access$1600(com.android.camera.CaptureModule) -> access$1600
    107:107:com.android.camera.session.CaptureSession access$1700(com.android.camera.CaptureModule) -> access$1700
    107:107:android.media.MediaActionSound access$1800(com.android.camera.CaptureModule) -> access$1800
    107:107:void access$1900(com.android.camera.CaptureModule) -> access$1900
    107:107:com.android.camera.ui.focus.FocusController access$200(com.android.camera.CaptureModule) -> access$200
    107:107:com.android.camera.one.OneCameraManager access$2000(com.android.camera.CaptureModule) -> access$2000
    107:107:com.android.camera.util.Size access$2100(com.android.camera.CaptureModule) -> access$2100
    107:107:boolean access$2200(com.android.camera.CaptureModule,com.android.camera.util.Size) -> access$2200
    107:107:com.android.camera.one.OneCamera$Facing access$2300(com.android.camera.CaptureModule) -> access$2300
    107:107:com.android.camera.one.OneCamera$Facing access$2302(com.android.camera.CaptureModule,com.android.camera.one.OneCamera$Facing) -> access$2302
    107:107:com.android.camera.settings.SettingsManager access$2400(com.android.camera.CaptureModule) -> access$2400
    107:107:boolean access$2500(com.android.camera.CaptureModule) -> access$2500
    107:107:void access$2600(com.android.camera.CaptureModule) -> access$2600
    107:107:boolean access$2702(com.android.camera.CaptureModule,boolean) -> access$2702
    107:107:void access$2800(com.android.camera.CaptureModule) -> access$2800
    107:107:boolean access$2902(com.android.camera.CaptureModule,boolean) -> access$2902
    107:107:void access$300(com.android.camera.CaptureModule,int,int,boolean) -> access$300
    107:107:com.android.camera.one.OneCamera$Facing access$3000(com.android.camera.CaptureModule,int) -> access$3000
    107:107:boolean access$3102(com.android.camera.CaptureModule,boolean) -> access$3102
    107:107:boolean access$3200(com.android.camera.CaptureModule) -> access$3200
    107:107:java.util.concurrent.Semaphore access$3300(com.android.camera.CaptureModule) -> access$3300
    107:107:void access$3400(com.android.camera.CaptureModule) -> access$3400
    107:107:android.graphics.SurfaceTexture access$3500(com.android.camera.CaptureModule) -> access$3500
    107:107:void access$3600(com.android.camera.CaptureModule) -> access$3600
    107:107:com.android.camera.CaptureModuleUI access$3700(com.android.camera.CaptureModule) -> access$3700
    107:107:boolean access$400() -> access$400
    107:107:com.android.camera.debug.Log$Tag access$500() -> access$500
    107:107:com.android.camera.one.OneCameraCharacteristics access$600(com.android.camera.CaptureModule) -> access$600
    107:107:void access$700(com.android.camera.CaptureModule,int,int) -> access$700
    107:107:java.lang.Object access$800(com.android.camera.CaptureModule) -> access$800
    107:107:android.graphics.SurfaceTexture access$902(com.android.camera.CaptureModule,android.graphics.SurfaceTexture) -> access$902
    603:610:void cancelCountDown() -> cancelCountDown
    1503:1520:void closeCamera() -> closeCamera
    555:562:com.android.camera.session.CaptureSession createAndStartCaptureSession() -> createAndStartCaptureSession
    567:574:com.android.camera.session.CaptureSession createAndStartUntrackedCaptureSession() -> createAndStartUntrackedCaptureSession
    508:526:void decorateSessionAtCaptureTime(com.android.camera.session.CaptureSession) -> decorateSessionAtCaptureTime
    805:845:com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec() -> getBottomBarSpec
    1113:1138:com.android.camera.ButtonManager$ButtonCallback getCameraCallback() -> getCameraCallback
    1542:1543:com.android.camera.one.OneCamera$Facing getFacingFromCameraId(int) -> getFacingFromCameraId
    773:773:com.android.camera.hardware.HardwareSpec getHardwareSpec() -> getHardwareSpec
    1070:1088:com.android.camera.ButtonManager$ButtonCallback getHdrButtonCallback() -> getHdrButtonCallback
    1021:1022:java.lang.String getPeekAccessibilityString() -> getPeekAccessibilityString
    660:662:android.graphics.SurfaceTexture getPreviewSurfaceTexture() -> getPreviewSurfaceTexture
    580:580:long getSessionTime() -> getSessionTime
    762:767:void hardResetSettings(com.android.camera.settings.SettingsManager) -> hardResetSettings
    402:442:void init(com.android.camera.CameraActivity,boolean,boolean) -> init
    634:641:void initSurfaceTextureConsumer() -> initSurfaceTextureConsumer
    1274:1283:boolean is16by9AspectRatio(com.android.camera.util.Size) -> is16by9AspectRatio
    984:1005:void measureAutoFocusScans(com.android.camera.one.OneCamera$AutoFocusState,long) -> measureAutoFocusScans
    585:590:void onCountDownFinished() -> onCountDownFinished
    957:977:void onFocusStatusUpdate(com.android.camera.one.OneCamera$AutoFocusState,long) -> onFocusStatusUpdate
    867:870:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    886:886:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    752:752:void onLayoutOrientationChanged(boolean) -> onLayoutOrientationChanged
    1187:1190:void onPreviewStarted() -> onPreviewStarted
    616:616:void onQuickExpose() -> onQuickExpose
    1014:1016:void onReadyStateChanged(boolean) -> onReadyStateChanged
    596:598:void onRemainingSecondsChanged(int) -> onRemainingSecondsChanged
    488:502:void onShutterButtonClick() -> onShutterButtonClick
    477:477:void onShutterButtonFocus(boolean) -> onShutterButtonFocus
    449:468:void onShutterButtonLongPressed() -> onShutterButtonLongPressed
    483:483:void onShutterCoordinate(com.android.camera.ui.TouchCoordinate) -> onShutterCoordinate
    1316:1499:void openCameraAndStartPreview() -> openCameraAndStartPreview
    726:740:void pause() -> pause
    645:648:void reopenCamera() -> reopenCamera
    1208:1209:boolean requiresNexus4SpecificFixFor16By9Previews() -> requiresNexus4SpecificFixFor16By9Previews
    1554:1554:void resetTextureBufferSize() -> resetTextureBufferSize
    676:721:void resume() -> resume
    897:934:void startActiveFocusAt(int,int) -> startActiveFocusAt
    943:949:void startPassiveFocus() -> startPassiveFocus
    1527:1535:void switchCamera() -> switchCamera
    1169:1179:void switchToRegularCapture() -> switchToRegularCapture
    531:547:void takePictureNow() -> takePictureNow
    390:396:boolean updateCameraCharacteristics() -> updateCameraCharacteristics
    1292:1309:void updatePreviewBufferDimension() -> updatePreviewBufferDimension
    666:671:void updatePreviewBufferSize() -> updatePreviewBufferSize
    1218:1262:void updatePreviewTransform(int,int,boolean) -> updatePreviewTransform
com.android.camera.CaptureModule$1 -> com.android.camera.CaptureModule$1:
    173:173:void <init>(com.android.camera.CaptureModule) -> <init>
    176:178:void onZoomRatioChanged(float) -> onZoomRatioChanged
com.android.camera.CaptureModule$10 -> com.android.camera.CaptureModule$10:
    648:648:void <init>(com.android.camera.CaptureModule) -> <init>
    651:653:void run() -> run
com.android.camera.CaptureModule$11 -> com.android.camera.CaptureModule$11:
    773:773:void <init>(com.android.camera.CaptureModule) -> <init>
    798:798:boolean isFlashSupported() -> isFlashSupported
    776:776:boolean isFrontCameraSupported() -> isFrontCameraSupported
    791:792:boolean isHdrPlusSupported() -> isHdrPlusSupported
    781:785:boolean isHdrSupported() -> isHdrSupported
com.android.camera.CaptureModule$12 -> com.android.camera.CaptureModule$12:
    846:846:void <init>(com.android.camera.CaptureModule) -> <init>
    849:850:void setExposure(int) -> setExposure
com.android.camera.CaptureModule$13 -> com.android.camera.CaptureModule$13:
    1071:1071:void <init>(com.android.camera.CaptureModule) -> <init>
    1074:1084:void onStateChanged(int) -> onStateChanged
com.android.camera.CaptureModule$14 -> com.android.camera.CaptureModule$14:
    1088:1088:void <init>(com.android.camera.CaptureModule) -> <init>
    1091:1100:void onStateChanged(int) -> onStateChanged
com.android.camera.CaptureModule$15 -> com.android.camera.CaptureModule$15:
    1114:1114:void <init>(com.android.camera.CaptureModule) -> <init>
    1117:1134:void onStateChanged(int) -> onStateChanged
com.android.camera.CaptureModule$16 -> com.android.camera.CaptureModule$16:
    1138:1138:void <init>(com.android.camera.CaptureModule) -> <init>
    1141:1156:void onStateChanged(int) -> onStateChanged
com.android.camera.CaptureModule$17 -> com.android.camera.CaptureModule$17:
    1374:1374:void <init>(com.android.camera.CaptureModule) -> <init>
    1397:1398:void onCameraClosed() -> onCameraClosed
    1403:1442:void onCameraOpened(com.android.camera.one.OneCamera) -> onCameraOpened
    1377:1391:void onFailure() -> onFailure
com.android.camera.CaptureModule$17$1 -> com.android.camera.CaptureModule$17$1:
    1433:1433:void <init>(com.android.camera.CaptureModule$17) -> <init>
    1436:1437:void run() -> run
com.android.camera.CaptureModule$17$2 -> com.android.camera.CaptureModule$17$2:
    1443:1443:void <init>(com.android.camera.CaptureModule$17) -> <init>
    1473:1474:void onReadyForCapture() -> onReadyForCapture
    1450:1452:void onSetupFailed() -> onSetupFailed
com.android.camera.CaptureModule$17$2$1 -> com.android.camera.CaptureModule$17$2$1:
    1452:1452:void <init>(com.android.camera.CaptureModule$17$2) -> <init>
    1455:1460:void run() -> run
com.android.camera.CaptureModule$17$2$2 -> com.android.camera.CaptureModule$17$2$2:
    1474:1474:void <init>(com.android.camera.CaptureModule$17$2) -> <init>
    1477:1492:void run() -> run
com.android.camera.CaptureModule$18 -> com.android.camera.CaptureModule$18:
    959:959:void <clinit>() -> <clinit>
com.android.camera.CaptureModule$2 -> com.android.camera.CaptureModule$2:
    185:185:void <init>(com.android.camera.CaptureModule) -> <init>
    188:189:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
com.android.camera.CaptureModule$3 -> com.android.camera.CaptureModule$3:
    194:194:void <init>(com.android.camera.CaptureModule) -> <init>
    217:217:android.view.GestureDetector$OnGestureListener getGestureListener() -> getGestureListener
    200:200:void onPreviewLayoutChanged(android.view.View,int,int,int,int,int,int,int,int) -> onPreviewLayoutChanged
    239:246:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    251:255:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    261:262:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    267:271:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    205:205:boolean shouldAutoAdjustTransformMatrixOnLayout() -> shouldAutoAdjustTransformMatrixOnLayout
com.android.camera.CaptureModule$3$1 -> com.android.camera.CaptureModule$3$1:
    217:217:void <init>(com.android.camera.CaptureModule$3) -> <init>
    220:226:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.android.camera.CaptureModule$4 -> com.android.camera.CaptureModule$4:
    277:277:void <init>(com.android.camera.CaptureModule) -> <init>
    280:280:void onRemoteThumbnailAvailable(byte[]) -> onRemoteThumbnailAvailable
com.android.camera.CaptureModule$4$1 -> com.android.camera.CaptureModule$4$1:
    280:280:void <init>(com.android.camera.CaptureModule$4,byte[]) -> <init>
    283:284:void run() -> run
com.android.camera.CaptureModule$5 -> com.android.camera.CaptureModule$5:
    365:365:void <init>(com.android.camera.CaptureModule) -> <init>
    373:373:void lockOrientation() -> lockOrientation
    368:368:void unlockOrientation() -> unlockOrientation
com.android.camera.CaptureModule$6 -> com.android.camera.CaptureModule$6:
    376:376:void <init>(com.android.camera.CaptureModule) -> <init>
    381:381:void onBurstReadyStateChanged(boolean) -> onBurstReadyStateChanged
com.android.camera.CaptureModule$7 -> com.android.camera.CaptureModule$7:
    434:434:void <init>(com.android.camera.CaptureModule) -> <init>
    437:437:void onClick(android.view.View) -> onClick
com.android.camera.CaptureModule$8 -> com.android.camera.CaptureModule$8:
    457:457:void <init>(com.android.camera.CaptureModule) -> <init>
    460:460:com.android.camera.session.CaptureSession createAndStartEmpty() -> createAndStartEmpty
com.android.camera.CaptureModule$9 -> com.android.camera.CaptureModule$9:
    616:616:void <init>(com.android.camera.CaptureModule) -> <init>
    620:621:void run() -> run
com.android.camera.CaptureModule$ModuleState -> com.android.camera.CaptureModule$ModuleState:
    291:294:void <clinit>() -> <clinit>
    291:291:void <init>(java.lang.String,int) -> <init>
    291:291:com.android.camera.CaptureModule$ModuleState valueOf(java.lang.String) -> valueOf
    291:291:com.android.camera.CaptureModule$ModuleState[] values() -> values
com.android.camera.CaptureModuleUI -> com.android.camera.CaptureModuleUI:
    44:44:void <clinit>() -> <clinit>
    61:93:void <init>(com.android.camera.CameraActivity,android.view.View,com.android.camera.CaptureModuleUI$CaptureModuleUIListener) -> <init>
    38:38:com.android.camera.CaptureModuleUI$CaptureModuleUIListener access$000(com.android.camera.CaptureModuleUI) -> access$000
    156:156:void cancelCountDown() -> cancelCountDown
    100:100:com.android.camera.CameraActivity getActivity() -> getActivity
    122:122:com.android.camera.ui.focus.FocusRing getFocusRing() -> getFocusRing
    182:183:void initializeZoom(float) -> initializeZoom
    149:149:boolean isCountingDown() -> isCountingDown
    189:190:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    142:142:void setCountdownFinishedListener(com.android.camera.ui.CountDownView$OnCountDownStatusListener) -> setCountdownFinishedListener
    135:135:void startCountdown(int) -> startCountdown
com.android.camera.CaptureModuleUI$1 -> com.android.camera.CaptureModuleUI$1:
    64:64:void <init>(com.android.camera.CaptureModuleUI) -> <init>
    67:67:void onZoomValueChanged(float) -> onZoomValueChanged
com.android.camera.CaptureModuleUtil -> com.android.camera.CaptureModuleUtil:
    35:35:void <clinit>() -> <clinit>
    57:57:com.android.camera.util.Size getOptimalPreviewSize(com.android.camera.util.Size[],double,android.app.Activity) -> getOptimalPreviewSize
    73:97:com.android.camera.util.Size getOptimalPreviewSize(com.android.camera.util.Size[],double,java.lang.Double,android.app.Activity) -> getOptimalPreviewSize
com.android.camera.Exif -> com.android.camera.Exif:
    25:25:void <clinit>() -> <clinit>
    28:32:com.android.camera.exif.ExifInterface getExif(byte[]) -> getExif
    39:43:int getOrientation(com.android.camera.exif.ExifInterface) -> getOrientation
    50:51:int getOrientation(byte[]) -> getOrientation
com.android.camera.FatalErrorHandler$Reason -> com.android.camera.FatalErrorHandler$Reason:
    35:48:void <clinit>() -> <clinit>
    66:69:void <init>(java.lang.String,int,int,int,boolean) -> <init>
    94:94:boolean doesFinishActivity() -> doesFinishActivity
    86:86:int getDialogMsgId() -> getDialogMsgId
    77:77:int getFeedbackMsgId() -> getFeedbackMsgId
    35:35:com.android.camera.FatalErrorHandler$Reason valueOf(java.lang.String) -> valueOf
    35:35:com.android.camera.FatalErrorHandler$Reason[] values() -> values
com.android.camera.FatalErrorHandlerImpl -> com.android.camera.FatalErrorHandlerImpl:
    27:27:void <clinit>() -> <clinit>
    31:32:void <init>(android.app.Activity) -> <init>
    117:122:void handleFatalError(com.android.camera.FatalErrorHandler$Reason) -> handleFatalError
    100:111:void onCameraDisabledFailure() -> onCameraDisabledFailure
    52:62:void onCameraOpenFailure() -> onCameraOpenFailure
    68:78:void onCameraReconnectFailure() -> onCameraReconnectFailure
    84:94:void onGenericCameraAccessFailure() -> onGenericCameraAccessFailure
    37:46:void onMediaStorageFailure() -> onMediaStorageFailure
com.android.camera.FocusOverlayManager -> com.android.camera.FocusOverlayManager:
    69:76:void <clinit>() -> <clinit>
    78:167:void <init>(com.android.camera.app.AppController,java.util.List,com.android.ex.camera2.portability.CameraCapabilities,com.android.camera.FocusOverlayManager$Listener,boolean,android.os.Looper,com.android.camera.ui.focus.FocusRing) -> <init>
    67:67:void access$000(com.android.camera.FocusOverlayManager) -> access$000
    435:437:void autoFocus(int) -> autoFocus
    445:445:void autoFocus() -> autoFocus
    453:453:void autoFocusAndCapture() -> autoFocusAndCapture
    457:465:void cancelAutoFocus() -> cancelAutoFocus
    469:471:void capture() -> capture
    549:555:android.graphics.Rect computeCameraRectFromPreviewCoordinates(int,int,int) -> computeCameraRectFromPreviewCoordinates
    254:268:void focusAndCapture(com.android.ex.camera2.portability.CameraCapabilities$FocusMode) -> focusAndCapture
    337:337:int getAERegionSizePx() -> getAERegionSizePx
    332:332:int getAFRegionSizePx() -> getAFRegionSizePx
    583:583:boolean getAeAwbLock() -> getAeAwbLock
    523:523:java.util.List getFocusAreas() -> getFocusAreas
    477:519:com.android.ex.camera2.portability.CameraCapabilities$FocusMode getFocusMode(com.android.ex.camera2.portability.CameraCapabilities$FocusMode) -> getFocusMode
    527:527:java.util.List getMeteringAreas() -> getMeteringAreas
    341:347:void initializeFocusAreas(int,int) -> initializeFocusAreas
    351:357:void initializeMeteringAreas(int,int) -> initializeMeteringAreas
    563:563:boolean isFocusCompleted() -> isFocusCompleted
    567:567:boolean isFocusingSnapOnFinish() -> isFocusingSnapOnFinish
    222:224:void lockAeAwbIfNeeded() -> lockAeAwbIfNeeded
    587:587:boolean needAutoFocusCall(com.android.ex.camera2.portability.CameraCapabilities$FocusMode) -> needAutoFocusCall
    273:300:void onAutoFocus(boolean,boolean) -> onAutoFocus
    309:327:void onAutoFocusMoving(boolean) -> onAutoFocusMoving
    418:418:void onCameraReleased() -> onCameraReleased
    197:197:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    405:408:void onPreviewStarted() -> onPreviewStarted
    414:414:void onPreviewStopped() -> onPreviewStopped
    236:250:void onShutterUp(com.android.ex.camera2.portability.CameraCapabilities$FocusMode) -> onShutterUp
    361:400:void onSingleTapUp(int,int) -> onSingleTapUp
    575:575:void overrideFocusMode(com.android.ex.camera2.portability.CameraCapabilities$FocusMode) -> overrideFocusMode
    571:571:void removeMessages() -> removeMessages
    211:215:void resetCoordinateTransformer() -> resetCoordinateTransformer
    531:544:void resetTouchFocus() -> resetTouchFocus
    579:579:void setAeAwbLock(boolean) -> setAeAwbLock
    206:207:void setDisplayOrientation(int) -> setDisplayOrientation
    201:202:void setMirror(boolean) -> setMirror
    187:191:void setPreviewRect(android.graphics.Rect) -> setPreviewRect
    229:231:void unlockAeAwbIfNeeded() -> unlockAeAwbIfNeeded
    178:182:void updateCapabilities(com.android.ex.camera2.portability.CameraCapabilities) -> updateCapabilities
com.android.camera.FocusOverlayManager$MainHandler -> com.android.camera.FocusOverlayManager$MainHandler:
    135:136:void <init>(com.android.camera.FocusOverlayManager,android.os.Looper) -> <init>
    141:149:void handleMessage(android.os.Message) -> handleMessage
com.android.camera.MediaSaverImpl -> com.android.camera.MediaSaverImpl:
    40:40:void <clinit>() -> <clinit>
    58:60:void <init>(android.content.ContentResolver) -> <init>
    39:39:com.android.camera.debug.Log$Tag access$000() -> access$000
    39:39:long access$122(com.android.camera.MediaSaverImpl,long) -> access$122
    39:39:void access$200(com.android.camera.MediaSaverImpl) -> access$200
    71:71:void addImage(byte[],java.lang.String,long,android.location.Location,int,int,int,com.android.camera.exif.ExifInterface,com.android.camera.app.MediaSaver$OnMediaSavedListener) -> addImage
    79:91:void addImage(byte[],java.lang.String,long,android.location.Location,int,int,int,com.android.camera.exif.ExifInterface,com.android.camera.app.MediaSaver$OnMediaSavedListener,java.lang.String) -> addImage
    99:99:void addImage(byte[],java.lang.String,long,android.location.Location,int,com.android.camera.exif.ExifInterface,com.android.camera.app.MediaSaver$OnMediaSavedListener) -> addImage
    112:112:void addVideo(android.net.Uri,android.content.ContentValues,com.android.camera.app.MediaSaver$OnMediaSavedListener) -> addVideo
    65:65:boolean isQueueFull() -> isQueueFull
    131:132:void onQueueAvailable() -> onQueueAvailable
    125:126:void onQueueFull() -> onQueueFull
    117:121:void setQueueListener(com.android.camera.app.MediaSaver$QueueListener) -> setQueueListener
com.android.camera.MediaSaverImpl$ImageSaveTask -> com.android.camera.MediaSaverImpl$ImageSaveTask:
    151:162:void <init>(com.android.camera.MediaSaverImpl,byte[],java.lang.String,long,android.location.Location,int,int,int,java.lang.String,com.android.camera.exif.ExifInterface,android.content.ContentResolver,com.android.camera.app.MediaSaver$OnMediaSavedListener) -> <init>
    136:136:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    172:185:android.net.Uri doInBackground(java.lang.Void[]) -> doInBackground
    136:136:void onPostExecute(java.lang.Object) -> onPostExecute
    192:198:void onPostExecute(android.net.Uri) -> onPostExecute
com.android.camera.MediaSaverImpl$VideoSaveTask -> com.android.camera.MediaSaverImpl$VideoSaveTask:
    210:214:void <init>(com.android.camera.MediaSaverImpl,android.net.Uri,android.content.ContentValues,com.android.camera.app.MediaSaver$OnMediaSavedListener,android.content.ContentResolver) -> <init>
    203:203:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    220:225:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    203:203:void onPostExecute(java.lang.Object) -> onPostExecute
    232:233:void onPostExecute(java.lang.Void) -> onPostExecute
com.android.camera.MultiToggleImageButton -> com.android.camera.MultiToggleImageButton:
    68:80:void <init>(android.content.Context) -> <init>
    68:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:94:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    48:48:android.graphics.Bitmap access$000(com.android.camera.MultiToggleImageButton,int,int) -> access$000
    48:48:void access$100(com.android.camera.MultiToggleImageButton,int,boolean) -> access$100
    48:48:int access$200(com.android.camera.MultiToggleImageButton) -> access$200
    48:48:int access$300(com.android.camera.MultiToggleImageButton) -> access$300
    48:48:android.animation.ValueAnimator access$400(com.android.camera.MultiToggleImageButton) -> access$400
    48:48:boolean access$500(com.android.camera.MultiToggleImageButton) -> access$500
    48:48:void access$600(com.android.camera.MultiToggleImageButton) -> access$600
    48:48:android.graphics.Matrix access$700(com.android.camera.MultiToggleImageButton) -> access$700
    371:411:android.graphics.Bitmap combine(int,int) -> combine
    123:123:int getState() -> getState
    252:265:void init() -> init
    244:248:void nextState() -> nextState
    325:334:void overrideContentDescriptions(int) -> overrideContentDescriptions
    303:315:void overrideImageIds(int) -> overrideImageIds
    282:294:void parseAttributes(android.content.Context,android.util.AttributeSet) -> parseAttributes
    351:351:void setAnimDirection(int) -> setAnimDirection
    216:216:void setClickEnabled(boolean) -> setClickEnabled
    361:364:void setImageByState(int) -> setImageByState
    356:357:void setImageLevel(int) -> setImageLevel
    115:115:void setOnPreChangeListener(com.android.camera.MultiToggleImageButton$OnStateChangeListener) -> setOnPreChangeListener
    103:103:void setOnStateChangeListener(com.android.camera.MultiToggleImageButton$OnStateChangeListener) -> setOnStateChangeListener
    343:343:void setParentSize(int) -> setParentSize
    133:133:void setState(int) -> setState
    143:143:void setState(int,boolean) -> setState
    153:206:void setStateAnimatedInternal(int,boolean) -> setStateAnimatedInternal
    220:239:void setStateInternal(int,boolean) -> setStateInternal
com.android.camera.MultiToggleImageButton$1 -> com.android.camera.MultiToggleImageButton$1:
    166:166:void <init>(com.android.camera.MultiToggleImageButton,int,boolean) -> <init>
    166:166:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    169:169:android.graphics.Bitmap doInBackground(java.lang.Integer[]) -> doInBackground
    166:166:void onPostExecute(java.lang.Object) -> onPostExecute
    175:203:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
com.android.camera.MultiToggleImageButton$1$1 -> com.android.camera.MultiToggleImageButton$1$1:
    191:191:void <init>(com.android.camera.MultiToggleImageButton$1) -> <init>
    199:200:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    194:194:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.MultiToggleImageButton$2 -> com.android.camera.MultiToggleImageButton$2:
    252:252:void <init>(com.android.camera.MultiToggleImageButton) -> <init>
    255:256:void onClick(android.view.View) -> onClick
com.android.camera.MultiToggleImageButton$3 -> com.android.camera.MultiToggleImageButton$3:
    265:265:void <init>(com.android.camera.MultiToggleImageButton) -> <init>
    268:276:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.OnScreenHint -> com.android.camera.OnScreenHint:
    45:45:void <clinit>() -> <clinit>
    50:169:void <init>(android.app.Activity) -> <init>
    44:44:void access$000(com.android.camera.OnScreenHint) -> access$000
    44:44:void access$100(com.android.camera.OnScreenHint) -> access$100
    91:91:void cancel() -> cancel
    151:160:void handleHide() -> handleHide
    138:148:void handleShow() -> handleShow
    106:114:com.android.camera.OnScreenHint makeText(android.app.Activity,java.lang.CharSequence) -> makeText
    125:134:void setText(java.lang.CharSequence) -> setText
    81:84:void show() -> show
com.android.camera.OnScreenHint$1 -> com.android.camera.OnScreenHint$1:
    162:162:void <init>(com.android.camera.OnScreenHint) -> <init>
    165:165:void run() -> run
com.android.camera.OnScreenHint$2 -> com.android.camera.OnScreenHint$2:
    169:169:void <init>(com.android.camera.OnScreenHint) -> <init>
    172:172:void run() -> run
com.android.camera.PanoProgressBar -> com.android.camera.PanoProgressBar:
    30:30:void <clinit>() -> <clinit>
    34:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    169:188:void onDraw(android.graphics.Canvas) -> onDraw
    103:105:void onSizeChanged(int,int,int,int) -> onSizeChanged
    87:88:void setBackgroundColor(int) -> setBackgroundColor
com.android.camera.PermissionsActivity -> com.android.camera.PermissionsActivity:
    32:36:void <clinit>() -> <clinit>
    31:55:void <init>() -> <init>
    31:31:com.android.camera.debug.Log$Tag access$000() -> access$000
    141:160:void buildPermissionsRequest() -> buildPermissionsRequest
    102:136:void checkPermissions() -> checkPermissions
    209:228:void handlePermissionsFailure() -> handlePermissionsFailure
    203:205:void handlePermissionsSuccess() -> handlePermissionsSuccess
    65:85:void onCreateTasks(android.os.Bundle) -> onCreateTasks
    97:98:void onDestroyTasks() -> onDestroyTasks
    166:198:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    91:92:void onResumeTasks() -> onResumeTasks
com.android.camera.PermissionsActivity$1 -> com.android.camera.PermissionsActivity$1:
    55:55:void <init>(com.android.camera.PermissionsActivity) -> <init>
    58:59:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.camera.PermissionsActivity$2 -> com.android.camera.PermissionsActivity$2:
    222:222:void <init>(com.android.camera.PermissionsActivity) -> <init>
    225:225:void onClick(android.content.DialogInterface,int) -> onClick
com.android.camera.PermissionsActivity$3 -> com.android.camera.PermissionsActivity$3:
    212:212:void <init>(com.android.camera.PermissionsActivity) -> <init>
    216:216:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.android.camera.PhotoModule -> com.android.camera.PhotoModule:
    111:111:void <clinit>() -> <clinit>
    141:597:void <init>(com.android.camera.app.AppController) -> <init>
    101:101:boolean access$1000(com.android.camera.PhotoModule) -> access$1000
    101:101:com.android.camera.app.AppController access$1100(com.android.camera.PhotoModule) -> access$1100
    101:101:void access$1200(com.android.camera.PhotoModule) -> access$1200
    101:101:com.android.camera.debug.Log$Tag access$1300() -> access$1300
    101:101:void access$1400(com.android.camera.PhotoModule) -> access$1400
    101:101:com.android.ex.camera2.portability.CameraCapabilities access$1500(com.android.camera.PhotoModule) -> access$1500
    101:101:void access$1600(com.android.camera.PhotoModule) -> access$1600
    101:101:com.android.ex.camera2.portability.CameraAgent$CameraProxy access$1700(com.android.camera.PhotoModule) -> access$1700
    101:101:com.android.ex.camera2.portability.CameraSettings access$1800(com.android.camera.PhotoModule) -> access$1800
    101:101:void access$1900(com.android.camera.PhotoModule) -> access$1900
    101:101:long access$2000(com.android.camera.PhotoModule) -> access$2000
    101:101:long access$2002(com.android.camera.PhotoModule,long) -> access$2002
    101:101:void access$2100(com.android.camera.PhotoModule) -> access$2100
    101:101:long access$2200(com.android.camera.PhotoModule) -> access$2200
    101:101:long access$2202(com.android.camera.PhotoModule,long) -> access$2202
    101:101:long access$2300(com.android.camera.PhotoModule) -> access$2300
    101:101:long access$2302(com.android.camera.PhotoModule,long) -> access$2302
    101:101:boolean access$2400(com.android.camera.PhotoModule) -> access$2400
    101:101:com.android.ex.camera2.portability.CameraCapabilities$SceneMode access$2500(com.android.camera.PhotoModule) -> access$2500
    101:101:com.android.camera.PhotoUI access$2600(com.android.camera.PhotoModule) -> access$2600
    101:101:long access$2700(com.android.camera.PhotoModule) -> access$2700
    101:101:long access$2702(com.android.camera.PhotoModule,long) -> access$2702
    101:101:void access$2800(com.android.camera.PhotoModule) -> access$2800
    101:101:com.android.camera.PhotoModule$NamedImages access$2900(com.android.camera.PhotoModule) -> access$2900
    101:101:boolean access$3000(com.android.camera.PhotoModule) -> access$3000
    101:101:com.android.camera.PhotoModule$ResizeBundle access$3200(com.android.camera.PhotoModule,com.android.camera.PhotoModule$ResizeBundle) -> access$3200
    101:101:boolean access$3300(com.android.camera.PhotoModule) -> access$3300
    101:101:int access$3400(com.android.camera.PhotoModule) -> access$3400
    101:101:com.android.camera.ui.TouchCoordinate access$3500(com.android.camera.PhotoModule) -> access$3500
    101:101:com.android.camera.ui.TouchCoordinate access$3502(com.android.camera.PhotoModule,com.android.camera.ui.TouchCoordinate) -> access$3502
    101:101:boolean access$3600(com.android.camera.PhotoModule) -> access$3600
    101:101:boolean access$3602(com.android.camera.PhotoModule,boolean) -> access$3602
    101:101:int access$3700(com.android.camera.PhotoModule) -> access$3700
    101:101:android.net.Uri access$3800(com.android.camera.PhotoModule) -> access$3800
    101:101:void access$3900(com.android.camera.PhotoModule,byte[]) -> access$3900
    101:101:com.android.camera.CameraActivity access$400(com.android.camera.PhotoModule) -> access$400
    101:101:com.android.camera.hardware.HeadingSensor access$4000(com.android.camera.PhotoModule) -> access$4000
    101:101:com.android.camera.app.MediaSaver$OnMediaSavedListener access$4100(com.android.camera.PhotoModule) -> access$4100
    101:101:boolean access$4200(com.android.camera.PhotoModule) -> access$4200
    101:101:byte[] access$4302(com.android.camera.PhotoModule,byte[]) -> access$4302
    101:101:boolean access$4400(com.android.camera.PhotoModule) -> access$4400
    101:101:long access$4500(com.android.camera.PhotoModule) -> access$4500
    101:101:void access$4600(com.android.camera.PhotoModule,int) -> access$4600
    101:101:com.android.camera.FocusOverlayManager access$4700(com.android.camera.PhotoModule) -> access$4700
    101:101:void access$4800(com.android.camera.PhotoModule) -> access$4800
    101:101:boolean access$4900(com.android.camera.PhotoModule) -> access$4900
    101:101:void access$500(com.android.camera.PhotoModule) -> access$500
    101:101:java.lang.Runnable access$5000(com.android.camera.PhotoModule) -> access$5000
    101:101:android.os.Handler access$5100(com.android.camera.PhotoModule) -> access$5100
    101:101:void access$600(com.android.camera.PhotoModule) -> access$600
    101:101:void access$700(com.android.camera.PhotoModule) -> access$700
    101:101:void access$800(com.android.camera.PhotoModule,int) -> access$800
    101:101:void access$900(com.android.camera.PhotoModule) -> access$900
    726:727:void addIdleHandler() -> addIdleHandler
    1107:1108:void animateAfterShutter() -> animateAfterShutter
    1612:1619:void autoFocus() -> autoFocus
    1624:1629:void cancelAutoFocus() -> cancelAutoFocus
    427:433:void cancelCountDown() -> cancelCountDown
    1114:1157:boolean capture() -> capture
    287:299:void checkDisplayRotation() -> checkDisplayRotation
    1753:1769:boolean checkPreviewPreconditions() -> checkPreviewPreconditions
    1712:1721:void closeCamera() -> closeCamera
    822:853:com.android.camera.PhotoModule$ResizeBundle cropJpegDataToAspectRatio(com.android.camera.PhotoModule$ResizeBundle) -> cropJpegDataToAspectRatio
    1400:1416:void focusAndCapture() -> focusAndCapture
    627:662:com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec() -> getBottomBarSpec
    617:622:com.android.camera.hardware.HardwareSpec getHardwareSpec() -> getHardwareSpec
    375:376:java.lang.String getPeekAccessibilityString() -> getPeekAccessibilityString
    609:611:void hardResetSettings(com.android.camera.settings.SettingsManager) -> hardResetSettings
    381:418:void init(com.android.camera.CameraActivity,boolean,boolean) -> init
    2193:2199:void initializeCapabilities() -> initializeCapabilities
    442:444:void initializeControlByIntent() -> initializeControlByIntent
    699:714:void initializeFirstTime() -> initializeFirstTime
    1500:1524:void initializeFocusManager() -> initializeFocusManager
    720:722:void initializeSecondTime() -> initializeSecondTime
    1488:1489:boolean isCameraFrontFacing() -> isCameraFrontFacing
    2171:2173:boolean isCameraIdle() -> isCameraIdle
    2179:2181:boolean isImageCaptureIntent() -> isImageCaptureIntent
    1650:1650:boolean onBackPressed() -> onBackPressed
    1200:1244:void onCameraAvailable(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onCameraAvailable
    476:477:void onCameraOpened() -> onCameraOpened
    1249:1250:void onCaptureCancelled() -> onCaptureCancelled
    1266:1350:void onCaptureDone() -> onCaptureDone
    1255:1261:void onCaptureRetake() -> onCaptureRetake
    1430:1435:void onCountDownFinished() -> onCountDownFinished
    274:274:void onError() -> onError
    1659:1679:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1691:1704:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1595:1595:void onLayoutOrientationChanged(boolean) -> onLayoutOrientationChanged
    2224:2224:void onMemoryStateChanged(int) -> onMemoryStateChanged
    449:452:void onPreviewStarted() -> onPreviewStarted
    463:467:void onPreviewUIDestroyed() -> onPreviewUIDestroyed
    457:458:void onPreviewUIReady() -> onPreviewUIReady
    1422:1424:void onRemainingSecondsChanged(int) -> onRemainingSecondsChanged
    1851:1874:void onSettingChanged(com.android.camera.settings.SettingsManager,java.lang.String) -> onSettingChanged
    1366:1395:void onShutterButtonClick() -> onShutterButtonClick
    1356:1356:void onShutterCoordinate(com.android.camera.ui.TouchCoordinate) -> onShutterCoordinate
    1634:1645:void onSingleTapUp(android.view.View,int,int) -> onSingleTapUp
    2205:2214:void onZoomChanged(float) -> onZoomChanged
    670:677:void openCameraCommon() -> openCameraCommon
    1180:1193:void overrideCameraSettings(com.android.ex.camera2.portability.CameraCapabilities$FlashMode,com.android.ex.camera2.portability.CameraCapabilities$FocusMode) -> overrideCameraSettings
    1538:1585:void pause() -> pause
    511:514:void requestCameraOpen() -> requestCameraOpen
    1440:1481:void resume() -> resume
    2239:2249:void saveToDebugUri(byte[]) -> saveToDebugUri
    1902:1903:void setAutoExposureLockIfSupported() -> setAutoExposureLockIfSupported
    1909:1910:void setAutoWhiteBalanceLockIfSupported() -> setAutoWhiteBalanceLockIfSupported
    2133:2145:void setCameraParameters(int) -> setCameraParameters
    2152:2164:void setCameraParametersWhenIdle(int) -> setCameraParametersWhenIdle
    1090:1090:void setCameraState(int) -> setCameraState
    1726:1738:void setDisplayOrientation() -> setDisplayOrientation
    2116:2124:void setExposureCompensation(int) -> setExposureCompensation
    1915:1916:void setFocusAreasIfSupported() -> setFocusAreasIfSupported
    1163:1163:void setFocusParameters() -> setFocusParameters
    1921:1922:void setMeteringAreasIfSupported() -> setMeteringAreasIfSupported
    2185:2188:void setupCaptureParams() -> setupCaptureParams
    1744:1746:void setupPreview() -> setupPreview
    738:746:void startFaceDetection() -> startFaceDetection
    472:472:void startPreCaptureAnimation() -> startPreCaptureAnimation
    1779:1830:void startPreview() -> startPreview
    752:760:void stopFaceDetection() -> stopFaceDetection
    1837:1846:void stopPreview() -> stopPreview
    481:501:void switchCamera() -> switchCamera
    341:360:void switchToGcamCapture() -> switchToGcamCapture
    2098:2106:void updateAutoFocusMoveCallback() -> updateAutoFocusMoveCallback
    1600:1601:void updateCameraOrientation() -> updateCameraOrientation
    1881:1889:void updateCameraParametersInitialize() -> updateCameraParametersInitialize
    1929:1960:void updateCameraParametersPreference() -> updateCameraParametersPreference
    1895:1896:void updateCameraParametersZoom() -> updateCameraParametersZoom
    2030:2044:void updateParametersExposureCompensation() -> updateParametersExposureCompensation
    2086:2092:void updateParametersFlashMode() -> updateParametersFlashMode
    2024:2026:void updateParametersPictureQuality() -> updateParametersPictureQuality
    1970:2020:void updateParametersPictureSize() -> updateParametersPictureSize
    2049:2081:void updateParametersSceneMode() -> updateParametersSceneMode
    682:682:void updatePreviewAspectRatio(float) -> updatePreviewAspectRatio
    1171:1174:void updateSceneMode() -> updateSceneMode
com.android.camera.PhotoModule$1 -> com.android.camera.PhotoModule$1:
    172:172:void <init>(com.android.camera.PhotoModule) -> <init>
    175:175:void run() -> run
com.android.camera.PhotoModule$10 -> com.android.camera.PhotoModule$10:
    639:639:void <init>(com.android.camera.PhotoModule) -> <init>
    642:642:void setExposure(int) -> setExposure
com.android.camera.PhotoModule$11 -> com.android.camera.PhotoModule$11:
    727:727:void <init>(com.android.camera.PhotoModule) -> <init>
    730:730:boolean queueIdle() -> queueIdle
com.android.camera.PhotoModule$12 -> com.android.camera.PhotoModule$12:
    1815:1815:void <init>(com.android.camera.PhotoModule) -> <init>
    1818:1822:void onPreviewStarted() -> onPreviewStarted
com.android.camera.PhotoModule$2 -> com.android.camera.PhotoModule$2:
    257:257:void <init>(com.android.camera.PhotoModule) -> <init>
    262:264:void onMediaSaved(android.net.Uri) -> onMediaSaved
com.android.camera.PhotoModule$3 -> com.android.camera.PhotoModule$3:
    299:299:void <init>(com.android.camera.PhotoModule) -> <init>
    302:302:void run() -> run
com.android.camera.PhotoModule$4 -> com.android.camera.PhotoModule$4:
    418:418:void <init>(com.android.camera.PhotoModule) -> <init>
    421:421:void onClick(android.view.View) -> onClick
com.android.camera.PhotoModule$5 -> com.android.camera.PhotoModule$5:
    518:518:void <init>(com.android.camera.PhotoModule) -> <init>
    524:549:void onStateChanged(int) -> onStateChanged
com.android.camera.PhotoModule$6 -> com.android.camera.PhotoModule$6:
    554:554:void <init>(com.android.camera.PhotoModule) -> <init>
    557:578:void onStateChanged(int) -> onStateChanged
com.android.camera.PhotoModule$7 -> com.android.camera.PhotoModule$7:
    583:583:void <init>(com.android.camera.PhotoModule) -> <init>
    586:586:void onClick(android.view.View) -> onClick
com.android.camera.PhotoModule$8 -> com.android.camera.PhotoModule$8:
    590:590:void <init>(com.android.camera.PhotoModule) -> <init>
    593:593:void onClick(android.view.View) -> onClick
com.android.camera.PhotoModule$9 -> com.android.camera.PhotoModule$9:
    597:597:void <init>(com.android.camera.PhotoModule) -> <init>
    600:601:void onClick(android.view.View) -> onClick
com.android.camera.PhotoModule$AutoFocusCallback -> com.android.camera.PhotoModule$AutoFocusCallback:
    1032:1032:void <init>(com.android.camera.PhotoModule) -> <init>
    1032:1032:void <init>(com.android.camera.PhotoModule,com.android.camera.PhotoModule$1) -> <init>
    1035:1043:void onAutoFocus(boolean,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onAutoFocus
com.android.camera.PhotoModule$AutoFocusMoveCallback -> com.android.camera.PhotoModule$AutoFocusMoveCallback:
    1047:1047:void <init>(com.android.camera.PhotoModule) -> <init>
    1047:1047:void <init>(com.android.camera.PhotoModule,com.android.camera.PhotoModule$1) -> <init>
    1052:1053:void onAutoFocusMoving(boolean,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onAutoFocusMoving
com.android.camera.PhotoModule$JpegPictureCallback -> com.android.camera.PhotoModule$JpegPictureCallback:
    861:862:void <init>(com.android.camera.PhotoModule,android.location.Location) -> <init>
    867:927:void onPictureTaken(byte[],com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onPictureTaken
    933:1028:void saveFinalPhoto(byte[],com.android.camera.PhotoModule$NamedImages$NamedEntity,com.android.camera.exif.ExifInterface,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> saveFinalPhoto
com.android.camera.PhotoModule$JpegPictureCallback$1 -> com.android.camera.PhotoModule$JpegPictureCallback$1:
    913:913:void <init>(com.android.camera.PhotoModule$JpegPictureCallback,com.android.camera.PhotoModule$NamedImages$NamedEntity,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> <init>
    913:913:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    917:917:com.android.camera.PhotoModule$ResizeBundle doInBackground(com.android.camera.PhotoModule$ResizeBundle[]) -> doInBackground
    913:913:void onPostExecute(java.lang.Object) -> onPostExecute
    922:922:void onPostExecute(com.android.camera.PhotoModule$ResizeBundle) -> onPostExecute
com.android.camera.PhotoModule$MainHandler -> com.android.camera.PhotoModule$MainHandler:
    316:317:void <init>(com.android.camera.PhotoModule) -> <init>
    322:333:void handleMessage(android.os.Message) -> handleMessage
com.android.camera.PhotoModule$NamedImages -> com.android.camera.PhotoModule$NamedImages:
    1063:1064:void <init>() -> <init>
    1075:1079:com.android.camera.PhotoModule$NamedImages$NamedEntity getNextNameEntity() -> getNextNameEntity
    1068:1071:void nameNewImage(long) -> nameNewImage
com.android.camera.PhotoModule$NamedImages$NamedEntity -> com.android.camera.PhotoModule$NamedImages$NamedEntity:
    1083:1083:void <init>() -> <init>
com.android.camera.PhotoModule$PostViewPictureCallback -> com.android.camera.PhotoModule$PostViewPictureCallback:
    789:789:void <init>(com.android.camera.PhotoModule) -> <init>
    789:789:void <init>(com.android.camera.PhotoModule,com.android.camera.PhotoModule$1) -> <init>
    793:795:void onPictureTaken(byte[],com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onPictureTaken
com.android.camera.PhotoModule$RawPictureCallback -> com.android.camera.PhotoModule$RawPictureCallback:
    800:800:void <init>(com.android.camera.PhotoModule) -> <init>
    800:800:void <init>(com.android.camera.PhotoModule,com.android.camera.PhotoModule$1) -> <init>
    804:806:void onPictureTaken(byte[],com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onPictureTaken
com.android.camera.PhotoModule$ResizeBundle -> com.android.camera.PhotoModule$ResizeBundle:
    810:810:void <init>() -> <init>
    810:810:void <init>(com.android.camera.PhotoModule$1) -> <init>
com.android.camera.PhotoModule$ShutterCallback -> com.android.camera.PhotoModule$ShutterCallback:
    769:770:void <init>(com.android.camera.PhotoModule,boolean) -> <init>
    775:779:void onShutter(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onShutter
com.android.camera.PhotoModule$ShutterCallback$1 -> com.android.camera.PhotoModule$ShutterCallback$1:
    779:779:void <init>(com.android.camera.PhotoModule$ShutterCallback) -> <init>
    782:782:void run() -> run
com.android.camera.PhotoUI -> com.android.camera.PhotoUI:
    49:49:void <clinit>() -> <clinit>
    59:215:void <init>(com.android.camera.CameraActivity,com.android.camera.PhotoController,android.view.View) -> <init>
    46:46:com.android.camera.PhotoController access$000(com.android.camera.PhotoUI) -> access$000
    46:46:android.app.Dialog access$102(com.android.camera.PhotoUI,android.app.Dialog) -> access$102
    46:46:android.widget.ImageView access$200(com.android.camera.PhotoUI) -> access$200
    46:46:com.android.camera.PhotoUI$DecodeImageForReview access$302(com.android.camera.PhotoUI,com.android.camera.PhotoUI$DecodeImageForReview) -> access$302
    304:305:void animateCapture(byte[],int,boolean) -> animateCapture
    335:335:void animateFlash() -> animateFlash
    148:148:void cancelCountDown() -> cancelCountDown
    405:406:void clearFaces() -> clearFaces
    255:255:com.android.camera.ui.focus.FocusRing getFocusRing() -> getFocusRing
    92:92:android.view.GestureDetector$OnGestureListener getGestureListener() -> getGestureListener
    248:249:void hideIntentReviewImageView() -> hideIntentReviewImageView
    362:365:void hidePostCaptureAlert() -> hidePostCaptureAlert
    220:221:void initIntentReviewImageView() -> initIntentReviewImageView
    315:317:void initializeSecondTime(com.android.ex.camera2.portability.CameraCapabilities,com.android.ex.camera2.portability.CameraSettings) -> initializeSecondTime
    322:330:void initializeZoom(com.android.ex.camera2.portability.CameraCapabilities,com.android.ex.camera2.portability.CameraSettings) -> initializeZoom
    141:141:boolean isCountingDown() -> isCountingDown
    342:345:boolean onBackPressed() -> onBackPressed
    299:299:void onCameraOpened(com.android.ex.camera2.portability.CameraCapabilities,com.android.ex.camera2.portability.CameraSettings) -> onCameraOpened
    434:435:void onFaceDetection(android.hardware.Camera$Face[],com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onFaceDetection
    394:401:void onPause() -> onPause
    153:156:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    118:118:void onPreviewFlipped() -> onPreviewFlipped
    105:107:void onPreviewLayoutChanged(android.view.View,int,int,int,int,int,int,int,int) -> onPreviewLayoutChanged
    423:428:void onStartFaceDetection(int,boolean) -> onStartFaceDetection
    276:276:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    286:286:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    411:412:void pauseFaceDetection() -> pauseFaceDetection
    417:418:void resumeFaceDetection() -> resumeFaceDetection
    134:134:void setCountdownFinishedListener(com.android.camera.ui.CountDownView$OnCountDownStatusListener) -> setCountdownFinishedListener
    369:370:void setDisplayOrientation(int) -> setDisplayOrientation
    390:390:void setSwipingEnabled(boolean) -> setSwipingEnabled
    354:358:void showCapturedImageForReview(byte[],int,boolean) -> showCapturedImageForReview
    239:240:void showIntentReviewImageView() -> showIntentReviewImageView
    127:127:void startCountdown(int) -> startCountdown
    260:270:void updatePreviewAspectRatio(float) -> updatePreviewAspectRatio
com.android.camera.PhotoUI$1 -> com.android.camera.PhotoUI$1:
    74:74:void <init>(com.android.camera.PhotoUI) -> <init>
    77:77:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.android.camera.PhotoUI$2 -> com.android.camera.PhotoUI$2:
    82:82:void <init>(com.android.camera.PhotoUI) -> <init>
    85:85:void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.camera.PhotoUI$3 -> com.android.camera.PhotoUI$3:
    222:222:void <init>(com.android.camera.PhotoUI) -> <init>
    225:230:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
com.android.camera.PhotoUI$DecodeImageForReview -> com.android.camera.PhotoUI$DecodeImageForReview:
    178:179:void <init>(com.android.camera.PhotoUI,byte[],int,boolean) -> <init>
    177:177:void onPostExecute(java.lang.Object) -> onPostExecute
    184:191:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
com.android.camera.PhotoUI$DecodeTask -> com.android.camera.PhotoUI$DecodeTask:
    164:167:void <init>(com.android.camera.PhotoUI,byte[],int,boolean) -> <init>
    159:159:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    173:173:android.graphics.Bitmap doInBackground(java.lang.Void[]) -> doInBackground
com.android.camera.PhotoUI$ZoomChangeListener -> com.android.camera.PhotoUI$ZoomChangeListener:
    374:374:void <init>(com.android.camera.PhotoUI) -> <init>
    374:374:void <init>(com.android.camera.PhotoUI,com.android.camera.PhotoUI$1) -> <init>
    377:377:void onZoomValueChanged(float) -> onZoomValueChanged
com.android.camera.ProxyLauncher -> com.android.camera.ProxyLauncher:
    23:23:void <init>() -> <init>
    38:43:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    29:32:void onCreate(android.os.Bundle) -> onCreate
com.android.camera.SecureCameraActivity -> com.android.camera.SecureCameraActivity:
    22:22:void <init>() -> <init>
com.android.camera.SetActivitiesCameraReceiver -> com.android.camera.SetActivitiesCameraReceiver:
    31:33:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    53:56:boolean hasCamera(android.content.Context) -> hasCamera
    41:47:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    65:70:void setComponent(android.content.Context,java.lang.String,int) -> setComponent
com.android.camera.ShutterButton -> com.android.camera.ShutterButton:
    39:39:void <clinit>() -> <clinit>
    42:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:java.util.List access$000(com.android.camera.ShutterButton) -> access$000
    38:38:void access$200(com.android.camera.ShutterButton,boolean) -> access$200
    91:92:void addOnShutterButtonListener(com.android.camera.ShutterButton$OnShutterButtonListener) -> addOnShutterButtonListener
    178:179:void callShutterButtonFocus(boolean) -> callShutterButtonFocus
    107:122:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    139:173:void drawableStateChanged() -> drawableStateChanged
    185:190:boolean performClick() -> performClick
    100:101:void removeOnShutterButtonListener(com.android.camera.ShutterButton$OnShutterButtonListener) -> removeOnShutterButtonListener
com.android.camera.ShutterButton$1 -> com.android.camera.ShutterButton$1:
    164:164:void <init>(com.android.camera.ShutterButton,boolean) -> <init>
    167:167:void run() -> run
com.android.camera.ShutterButton$LongPressGestureListener -> com.android.camera.ShutterButton$LongPressGestureListener:
    68:68:void <init>(com.android.camera.ShutterButton) -> <init>
    68:68:void <init>(com.android.camera.ShutterButton,com.android.camera.ShutterButton$1) -> <init>
    71:72:void onLongPress(android.view.MotionEvent) -> onLongPress
com.android.camera.SoundPlayer -> com.android.camera.SoundPlayer:
    35:50:void <init>(android.content.Context) -> <init>
    57:58:void loadSound(int) -> loadSound
    66:70:void play(int,float) -> play
    89:90:void release() -> release
    77:81:void unloadSound(int) -> unloadSound
com.android.camera.Storage -> com.android.camera.Storage:
    58:58:void <clinit>() -> <clinit>
    48:48:void <init>(android.content.Context,com.android.camera.Storage$1) -> <init>
    60:82:void <init>(android.content.Context) -> <init>
    268:272:android.net.Uri addEmptyPlaceholder(com.android.camera.util.Size) -> addEmptyPlaceholder
    133:135:android.net.Uri addImage(android.content.ContentResolver,java.lang.String,long,android.location.Location,int,com.android.camera.exif.ExifInterface,byte[],int,int,java.lang.String) -> addImage
    163:177:android.net.Uri addImageToMediaStore(android.content.ContentResolver,java.lang.String,long,android.location.Location,int,long,android.graphics.Bitmap,int,int,java.lang.String,com.android.camera.exif.ExifInterface) -> addImageToMediaStore
    229:230:android.net.Uri addPlaceholder(android.graphics.Bitmap) -> addPlaceholder
    409:409:boolean containsPlaceholderSize(android.net.Uri) -> containsPlaceholderSize
    483:485:void ensureOSXCompatible() -> ensureOSXCompatible
    301:304:android.net.Uri generateUniquePlaceholderUri() -> generateUniquePlaceholderUri
    453:473:long getAvailableSpace() -> getAvailableSpace
    429:429:android.net.Uri getContentUriForSessionUri(android.net.Uri) -> getContentUriForSessionUri
    203:217:android.content.ContentValues getContentValuesForData(java.lang.String,long,android.location.Location,java.lang.String,boolean) -> getContentValuesForData
    401:401:com.google.common.base.Optional getPlaceholderForSession(android.net.Uri) -> getPlaceholderForSession
    439:439:android.net.Uri getSessionUriFromContentUri(android.net.Uri) -> getSessionUriFromContentUri
    419:419:android.graphics.Point getSizeForSession(android.net.Uri) -> getSizeForSession
    78:78:com.android.camera.Storage instance() -> instance
    449:449:boolean isSessionUri(android.net.Uri) -> isSessionUri
    238:240:void removePlaceholder(android.net.Uri) -> removePlaceholder
    252:257:void replacePlaceholder(android.net.Uri,android.graphics.Bitmap) -> replacePlaceholder
    295:296:android.net.Uri updateImage(android.net.Uri,android.content.ContentResolver,java.lang.String,long,android.location.Location,int,com.android.camera.exif.ExifInterface,byte[],int,int,java.lang.String) -> updateImage
    363:373:android.net.Uri updateImage(android.net.Uri,android.content.ContentResolver,java.lang.String,long,android.location.Location,int,int,android.graphics.Bitmap,int,int,java.lang.String,com.android.camera.exif.ExifInterface) -> updateImage
    185:196:void writeBitmap(android.net.Uri,com.android.camera.exif.ExifInterface,android.graphics.Bitmap,android.content.ContentResolver) -> writeBitmap
com.android.camera.Storage$1 -> com.android.camera.Storage$1:
    64:64:void <init>(com.android.camera.Storage,int) -> <init>
    64:64:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    67:67:int sizeOf(android.net.Uri,android.graphics.Bitmap) -> sizeOf
com.android.camera.Storage$Singleton -> com.android.camera.Storage$Singleton:
    74:74:void <clinit>() -> <clinit>
    73:73:com.android.camera.Storage access$100() -> access$100
com.android.camera.TextureViewHelper -> com.android.camera.TextureViewHelper:
    49:49:void <clinit>() -> <clinit>
    54:88:void <init>(android.view.TextureView,com.android.camera.CaptureLayoutHelper,com.android.camera.app.CameraProvider,com.android.camera.app.AppController) -> <init>
    167:168:void addAspectRatioChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAspectRatioChangedListener) -> addAspectRatioChangedListener
    442:447:void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener) -> addPreviewAreaSizeChangedListener
    129:132:void clearTransform() -> clearTransform
    399:399:android.graphics.RectF getPreviewArea() -> getPreviewArea
    418:422:android.graphics.Bitmap getPreviewBitmap(int) -> getPreviewBitmap
    271:307:android.graphics.Matrix getPreviewRotationalTransform(int,android.graphics.RectF,android.graphics.RectF) -> getPreviewRotationalTransform
    408:413:android.graphics.RectF getTextureArea() -> getTextureArea
    158:161:void onAspectRatioChanged() -> onAspectRatioChanged
    105:118:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    379:384:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    467:472:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    485:486:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    478:479:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    493:494:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    459:460:void removePreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener) -> removePreviewAreaSizeChangedListener
    149:153:void setAspectRatio(float) -> setAspectRatio
    99:99:void setAutoAdjustTransform(boolean) -> setAutoAdjustTransform
    237:237:void setOnLayoutChangeListener(android.view.View$OnLayoutChangeListener) -> setOnLayoutChangeListener
    241:241:void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener) -> setSurfaceTextureListener
    136:145:void updateAspectRatio(float) -> updateAspectRatio
    231:233:void updatePreviewArea(android.graphics.Matrix) -> updatePreviewArea
    202:223:void updateTransform(android.graphics.Matrix) -> updateTransform
    329:373:boolean updateTransform() -> updateTransform
com.android.camera.TextureViewHelper$1 -> com.android.camera.TextureViewHelper$1:
    384:384:void <init>(com.android.camera.TextureViewHelper,java.util.List,android.graphics.RectF) -> <init>
    387:388:void run() -> run
com.android.camera.TextureViewHelper$2 -> com.android.camera.TextureViewHelper$2:
    292:292:void <clinit>() -> <clinit>
com.android.camera.Thumbnail -> com.android.camera.Thumbnail:
    26:26:android.graphics.Bitmap createVideoThumbnailBitmap(java.io.FileDescriptor,int) -> createVideoThumbnailBitmap
    36:64:android.graphics.Bitmap createVideoThumbnailBitmap(java.lang.String,java.io.FileDescriptor,int) -> createVideoThumbnailBitmap
com.android.camera.VideoModule -> com.android.camera.VideoModule:
    95:95:void <clinit>() -> <clinit>
    128:532:void <init>(com.android.camera.app.AppController) -> <init>
    90:90:boolean access$1000(com.android.camera.VideoModule) -> access$1000
    90:90:boolean access$1002(com.android.camera.VideoModule,boolean) -> access$1002
    90:90:android.net.Uri access$102(com.android.camera.VideoModule,android.net.Uri) -> access$102
    90:90:void access$1100(com.android.camera.VideoModule) -> access$1100
    90:90:long access$1200(com.android.camera.VideoModule) -> access$1200
    90:90:android.os.Handler access$1300(com.android.camera.VideoModule) -> access$1300
    90:90:void access$1400(com.android.camera.VideoModule) -> access$1400
    90:90:com.android.camera.debug.Log$Tag access$1500() -> access$1500
    90:90:boolean access$1600(com.android.camera.VideoModule) -> access$1600
    90:90:void access$1700(com.android.camera.VideoModule,boolean) -> access$1700
    90:90:int access$1802(com.android.camera.VideoModule,int) -> access$1802
    90:90:void access$2000(com.android.camera.VideoModule) -> access$2000
    90:90:boolean access$202(com.android.camera.VideoModule,boolean) -> access$202
    90:90:com.android.ex.camera2.portability.CameraAgent$CameraProxy access$2100(com.android.camera.VideoModule) -> access$2100
    90:90:void access$2200(com.android.camera.VideoModule) -> access$2200
    90:90:android.media.MediaRecorder access$2300(com.android.camera.VideoModule) -> access$2300
    90:90:void access$2400(com.android.camera.VideoModule) -> access$2400
    90:90:void access$2500(com.android.camera.VideoModule) -> access$2500
    90:90:com.android.ex.camera2.portability.CameraSettings access$2602(com.android.camera.VideoModule,com.android.ex.camera2.portability.CameraSettings) -> access$2602
    90:90:long access$2702(com.android.camera.VideoModule,long) -> access$2702
    90:90:com.android.camera.VideoUI access$2800(com.android.camera.VideoModule) -> access$2800
    90:90:boolean access$2902(com.android.camera.VideoModule,boolean) -> access$2902
    90:90:com.android.camera.CameraActivity access$300(com.android.camera.VideoModule) -> access$300
    90:90:void access$3000(com.android.camera.VideoModule,byte[],android.location.Location) -> access$3000
    90:90:boolean access$400(com.android.camera.VideoModule) -> access$400
    90:90:com.android.camera.FocusOverlayManager access$500(com.android.camera.VideoModule) -> access$500
    90:90:com.android.camera.app.AppController access$600(com.android.camera.VideoModule) -> access$600
    90:90:void access$700(com.android.camera.VideoModule) -> access$700
    90:90:int access$800(com.android.camera.VideoModule) -> access$800
    90:90:boolean access$900(com.android.camera.VideoModule) -> access$900
    90:90:boolean access$902(com.android.camera.VideoModule,boolean) -> access$902
    2006:2007:void autoFocus() -> autoFocus
    2013:2015:void cancelAutoFocus() -> cancelAutoFocus
    1001:1012:void closeCamera() -> closeCamera
    1969:1975:void closeVideoFileDescriptor() -> closeVideoFileDescriptor
    319:323:java.lang.String createName(long) -> createName
    897:897:float currentZoomValue() -> currentZoomValue
    1074:1084:void doReturnToCaller(boolean) -> doReturnToCaller
    1880:1910:void enableTorchMode(boolean) -> enableTorchMode
    1220:1239:void generateVideoValues() -> generateVideoValues
    556:573:com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec() -> getBottomBarSpec
    808:847:android.graphics.Point getDesiredPreviewSize(com.android.ex.camera2.portability.CameraCapabilities,android.media.CamcorderProfile,android.graphics.Point,android.app.Activity) -> getDesiredPreviewSize
    546:551:com.android.camera.hardware.HardwareSpec getHardwareSpec() -> getHardwareSpec
    314:315:java.lang.String getPeekAccessibilityString() -> getPeekAccessibilityString
    1427:1444:android.graphics.Bitmap getVideoThumbnail() -> getVideoThumbnail
    328:364:void init(com.android.camera.CameraActivity,boolean,boolean) -> init
    373:378:void initializeControlByIntent() -> initializeControlByIntent
    461:480:void initializeFocusManager() -> initializeFocusManager
    1089:1195:void initializeRecorder() -> initializeRecorder
    856:861:void installIntentFilter() -> installIntentFilter
    442:443:boolean isCameraFrontFacing() -> isCameraFrontFacing
    1333:1333:boolean isRecording() -> isRecording
    1069:1070:boolean isVideoCaptureIntent() -> isVideoCaptureIntent
    1244:1253:void logVideoCapture(long) -> logVideoCapture
    1545:1586:java.lang.String millisecondToTimeString(long,boolean) -> millisecondToTimeString
    1018:1022:boolean onBackPressed() -> onBackPressed
    582:611:void onCameraAvailable(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onCameraAvailable
    1283:1287:void onError(android.media.MediaRecorder,int,int) -> onError
    1295:1305:void onInfo(android.media.MediaRecorder,int,int) -> onInfo
    1032:1049:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1058:1062:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1810:1810:void onLayoutOrientationChanged(boolean) -> onLayoutOrientationChanged
    1995:1995:void onMemoryStateChanged(int) -> onMemoryStateChanged
    486:486:void onOrientationChanged(com.android.camera.app.OrientationManager,com.android.camera.app.OrientationManager$DeviceOrientation) -> onOrientationChanged
    970:973:void onPreviewStarted() -> onPreviewStarted
    1986:1986:void onPreviewUIDestroyed() -> onPreviewUIDestroyed
    1981:1981:void onPreviewUIReady() -> onPreviewUIReady
    1915:1916:void onPreviewVisibilityChanged(int) -> onPreviewVisibilityChanged
    642:646:void onReviewCancelClicked(android.view.View) -> onReviewCancelClicked
    632:633:void onReviewDoneClicked(android.view.View) -> onReviewDoneClicked
    627:627:void onReviewPlayClicked(android.view.View) -> onReviewPlayClicked
    688:713:void onShutterButtonClick() -> onShutterButtonClick
    384:398:void onSingleTapUp(android.view.View,int,int) -> onSingleTapUp
    655:671:void onStopVideoRecording() -> onStopVideoRecording
    677:678:void onVideoSaved() -> onVideoSaved
    903:912:void onZoomChanged(float) -> onZoomChanged
    1766:1800:void pause() -> pause
    730:766:void readVideoPreferences() -> readVideoPreferences
    1211:1215:void releaseMediaRecorder() -> releaseMediaRecorder
    1990:1990:void requestCamera(int) -> requestCamera
    851:851:void resizeForPreviewAspectRatio() -> resizeForPreviewAspectRatio
    1326:1326:void restoreRingerMode() -> restoreRingerMode
    1728:1761:void resume() -> resume
    1257:1269:void saveVideo() -> saveVideo
    1634:1694:void setCameraParameters() -> setCameraParameters
    865:874:void setDisplayOrientation() -> setDisplayOrientation
    2036:2038:void setFocusParameters() -> setFocusParameters
    1203:1206:void setRecordLocation() -> setRecordLocation
    1450:1455:void showCaptureResult() -> showCaptureResult
    1858:1868:void showVideoSnapshotUI(boolean) -> showVideoSnapshotUI
    1315:1319:void silenceSoundsAndVibrations() -> silenceSoundsAndVibrations
    615:621:void startPlayVideoActivity() -> startPlayVideoActivity
    916:965:void startPreview() -> startPreview
    1337:1344:void startVideoRecording() -> startVideoRecording
    983:997:void stopPreview() -> stopPreview
    1462:1539:boolean stopVideoRecording() -> stopVideoRecording
    1937:1950:void storeImage(byte[],android.location.Location) -> storeImage
    1819:1848:void switchCamera() -> switchCamera
    403:421:void takeASnapshot() -> takeASnapshot
    426:434:void updateAutoFocusMoveCallback() -> updateAutoFocusMoveCallback
    880:884:void updateCameraOrientation() -> updateCameraOrientation
    777:787:void updateDesiredPreviewSize() -> updateDesiredPreviewSize
    1702:1723:void updateFocusParameters() -> updateFocusParameters
    890:890:void updatePreviewAspectRatio(float) -> updatePreviewAspectRatio
    1590:1625:void updateRecordingTime() -> updateRecordingTime
com.android.camera.VideoModule$1 -> com.android.camera.VideoModule$1:
    186:186:void <init>(com.android.camera.VideoModule) -> <init>
    190:193:void onMediaSaved(android.net.Uri) -> onMediaSaved
com.android.camera.VideoModule$10 -> com.android.camera.VideoModule$10:
    956:956:void <init>(com.android.camera.VideoModule) -> <init>
    959:959:void onPreviewStarted() -> onPreviewStarted
com.android.camera.VideoModule$11 -> com.android.camera.VideoModule$11:
    1344:1344:void <init>(com.android.camera.VideoModule) -> <init>
    1348:1419:void onStorageUpdateDone(long) -> onStorageUpdateDone
com.android.camera.VideoModule$11$1 -> com.android.camera.VideoModule$11$1:
    1388:1388:void <init>(com.android.camera.VideoModule$11) -> <init>
    1391:1391:void run() -> run
com.android.camera.VideoModule$2 -> com.android.camera.VideoModule$2:
    199:199:void <init>(com.android.camera.VideoModule) -> <init>
    203:203:void onMediaSaved(android.net.Uri) -> onMediaSaved
com.android.camera.VideoModule$3 -> com.android.camera.VideoModule$3:
    213:213:void <init>(com.android.camera.VideoModule) -> <init>
    216:219:void onAutoFocus(boolean,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onAutoFocus
com.android.camera.VideoModule$4 -> com.android.camera.VideoModule$4:
    225:225:void <init>(com.android.camera.VideoModule) -> <init>
    228:228:void onAutoFocusMoving(boolean,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onAutoFocusMoving
com.android.camera.VideoModule$5 -> com.android.camera.VideoModule$5:
    490:490:void <init>(com.android.camera.VideoModule) -> <init>
    493:497:void onStateChanged(int) -> onStateChanged
com.android.camera.VideoModule$6 -> com.android.camera.VideoModule$6:
    502:502:void <init>(com.android.camera.VideoModule) -> <init>
    505:515:void onStateChanged(int) -> onStateChanged
com.android.camera.VideoModule$7 -> com.android.camera.VideoModule$7:
    519:519:void <init>(com.android.camera.VideoModule) -> <init>
    522:522:void onClick(android.view.View) -> onClick
com.android.camera.VideoModule$8 -> com.android.camera.VideoModule$8:
    526:526:void <init>(com.android.camera.VideoModule) -> <init>
    529:529:void onClick(android.view.View) -> onClick
com.android.camera.VideoModule$9 -> com.android.camera.VideoModule$9:
    532:532:void <init>(com.android.camera.VideoModule) -> <init>
    535:535:void onClick(android.view.View) -> onClick
com.android.camera.VideoModule$JpegPictureCallback -> com.android.camera.VideoModule$JpegPictureCallback:
    1923:1924:void <init>(com.android.camera.VideoModule,android.location.Location) -> <init>
    1929:1932:void onPictureTaken(byte[],com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onPictureTaken
com.android.camera.VideoModule$MainHandler -> com.android.camera.VideoModule$MainHandler:
    236:236:void <init>(com.android.camera.VideoModule) -> <init>
    236:236:void <init>(com.android.camera.VideoModule,com.android.camera.VideoModule$1) -> <init>
    239:281:void handleMessage(android.os.Message) -> handleMessage
com.android.camera.VideoModule$MyBroadcastReceiver -> com.android.camera.VideoModule$MyBroadcastReceiver:
    289:289:void <init>(com.android.camera.VideoModule) -> <init>
    289:289:void <init>(com.android.camera.VideoModule,com.android.camera.VideoModule$1) -> <init>
    292:297:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.camera.VideoUI -> com.android.camera.VideoUI:
    41:41:void <clinit>() -> <clinit>
    55:98:void <init>(com.android.camera.CameraActivity,com.android.camera.VideoController,android.view.View) -> <init>
    40:40:com.android.camera.VideoController access$000(com.android.camera.VideoUI) -> access$000
    123:123:void cancelAnimations() -> cancelAnimations
    116:116:com.android.camera.ui.focus.FocusRing getFocusRing() -> getFocusRing
    217:217:android.view.GestureDetector$OnGestureListener getGestureListener() -> getGestureListener
    249:249:android.graphics.Point getPreviewScreenSize() -> getPreviewScreenSize
    229:231:void hidePassiveFocusIndicator() -> hidePassiveFocusIndicator
    140:145:void initializeMiscControls() -> initializeMiscControls
    195:199:void initializeZoom(com.android.ex.camera2.portability.CameraSettings,com.android.ex.camera2.portability.CameraCapabilities) -> initializeZoom
    298:298:void onPause() -> onPause
    74:74:void onPreviewFlipped() -> onPreviewFlipped
    278:278:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    283:284:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    156:158:void setAspectRatio(float) -> setAspectRatio
    129:136:void setOrientationIndicator(int,boolean) -> setOrientationIndicator
    103:112:void setPreviewSize(int,int) -> setPreviewSize
    204:204:void setRecordingTime(java.lang.String) -> setRecordingTime
    208:208:void setRecordingTimeTextColor(int) -> setRecordingTimeTextColor
    163:163:void setSwipingEnabled(boolean) -> setSwipingEnabled
    239:240:void showPassiveFocusIndicator() -> showPassiveFocusIndicator
    171:180:void showRecordingUI(boolean) -> showRecordingUI
    190:191:void showReviewControls() -> showReviewControls
    185:186:void showReviewImage(android.graphics.Bitmap) -> showReviewImage
com.android.camera.VideoUI$1 -> com.android.camera.VideoUI$1:
    78:78:void <init>(com.android.camera.VideoUI) -> <init>
    81:81:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.android.camera.VideoUI$ZoomChangeListener -> com.android.camera.VideoUI$ZoomChangeListener:
    260:260:void <init>(com.android.camera.VideoUI) -> <init>
    260:260:void <init>(com.android.camera.VideoUI,com.android.camera.VideoUI$1) -> <init>
    263:263:void onZoomValueChanged(float) -> onZoomValueChanged
com.android.camera.app.CameraApp -> com.android.camera.app.CameraApp:
    35:35:void <init>() -> <init>
    79:81:void clearNotifications() -> clearNotifications
    47:71:void onCreate() -> onCreate
com.android.camera.app.CameraAppUI -> com.android.camera.app.CameraAppUI:
    482:482:void <clinit>() -> <clinit>
    494:840:void <init>(com.android.camera.app.AppController,com.android.camera.ui.MainActivityLayout,boolean) -> <init>
    86:86:com.android.camera.ui.PreviewStatusListener access$000(com.android.camera.app.CameraAppUI) -> access$000
    86:86:android.widget.FrameLayout access$100(com.android.camera.app.CameraAppUI) -> access$100
    86:86:com.android.camera.widget.FilmstripLayout access$1100(com.android.camera.app.CameraAppUI) -> access$1100
    86:86:com.android.camera.ui.ModeTransitionView access$1200(com.android.camera.app.CameraAppUI) -> access$1200
    86:86:com.android.camera.ui.MainActivityLayout access$1300(com.android.camera.app.CameraAppUI) -> access$1300
    86:86:int access$1400(com.android.camera.app.CameraAppUI) -> access$1400
    86:86:int access$1402(com.android.camera.app.CameraAppUI,int) -> access$1402
    86:86:com.android.camera.ui.StickyBottomCaptureLayout access$1500(com.android.camera.app.CameraAppUI) -> access$1500
    86:86:com.android.camera.ui.ModeListView access$1600(com.android.camera.app.CameraAppUI) -> access$1600
    86:86:java.lang.Runnable access$1702(com.android.camera.app.CameraAppUI,java.lang.Runnable) -> access$1702
    86:86:int access$1802(com.android.camera.app.CameraAppUI,int) -> access$1802
    86:86:com.android.camera.app.AppController access$1900(com.android.camera.app.CameraAppUI) -> access$1900
    86:86:android.view.TextureView access$200(com.android.camera.app.CameraAppUI) -> access$200
    86:86:boolean access$2000(com.android.camera.app.CameraAppUI) -> access$2000
    86:86:void access$2100(com.android.camera.app.CameraAppUI) -> access$2100
    86:86:com.android.camera.widget.ModeOptionsOverlay access$2300(com.android.camera.app.CameraAppUI) -> access$2300
    86:86:com.android.camera.ui.BottomBar access$2400(com.android.camera.app.CameraAppUI) -> access$2400
    86:86:com.android.camera.TextureViewHelper access$300(com.android.camera.app.CameraAppUI) -> access$300
    86:86:android.view.GestureDetector access$400(com.android.camera.app.CameraAppUI) -> access$400
    86:86:int access$500(com.android.camera.app.CameraAppUI) -> access$500
    86:86:int access$502(com.android.camera.app.CameraAppUI,int) -> access$502
    86:86:boolean access$600(com.android.camera.app.CameraAppUI) -> access$600
    86:86:boolean access$700(com.android.camera.app.CameraAppUI) -> access$700
    86:86:int access$800(com.android.camera.app.CameraAppUI) -> access$800
    86:86:void access$900(com.android.camera.app.CameraAppUI,int) -> access$900
    1295:1295:void addPreviewAreaChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener) -> addPreviewAreaChangedListener
    1927:1927:void addShutterListener(com.android.camera.ShutterButton$OnShutterButtonListener) -> addShutterListener
    1889:1889:void animateBottomBarToFullSize(int) -> animateBottomBarToFullSize
    1885:1885:void animateBottomBarToVideoStop(int) -> animateBottomBarToVideoStop
    2024:2024:void applyModuleSpecs(com.android.camera.hardware.HardwareSpec,com.android.camera.app.CameraAppUI$BottomBarUISpec) -> applyModuleSpecs
    2033:2232:void applyModuleSpecs(com.android.camera.hardware.HardwareSpec,com.android.camera.app.CameraAppUI$BottomBarUISpec,boolean) -> applyModuleSpecs
    1835:1841:boolean areBottomControlsUsed(com.android.camera.module.ModuleController) -> areBottomControlsUsed
    895:902:void clearClingForViewer(int) -> clearClingForViewer
    1402:1414:void clearModuleUI() -> clearModuleUI
    1516:1516:void disableModeOptions() -> disableModeOptions
    1507:1508:void enableModeOptions() -> enableModeOptions
    849:858:void freezeScreenUntilPreviewReady() -> freezeScreenUntilPreviewReady
    656:656:long getCoverHiddenTime() -> getCoverHiddenTime
    1585:1585:int getCurrentModeIndex() -> getCurrentModeIndex
    2246:2246:com.android.camera.ButtonManager$ButtonCallback getDisableButtonCallback(int) -> getDisableButtonCallback
    1662:1662:com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls() -> getFilmstripBottomControls
    1654:1654:com.android.camera.filmstrip.FilmstripContentPanel getFilmstripContentPanel() -> getFilmstripContentPanel
    2294:2294:int getFilmstripVisibility() -> getFilmstripVisibility
    1781:1781:com.android.camera.ButtonManager$ButtonCallback getGridLinesCallback() -> getGridLinesCallback
    1395:1395:android.widget.FrameLayout getModuleRootView() -> getModuleRootView
    2256:2256:java.lang.String getResourceString(int) -> getResourceString
    1700:1700:int getSurfaceHeight() -> getSurfaceHeight
    1686:1686:android.graphics.SurfaceTexture getSurfaceTexture() -> getSurfaceTexture
    1693:1693:int getSurfaceWidth() -> getSurfaceWidth
    1038:1038:void hideAccessibilityZoomUI() -> hideAccessibilityZoomUI
    1857:1857:void hideBottomBar() -> hideBottomBar
    1670:1670:void hideBottomControls() -> hideBottomControls
    1629:1629:void hideCaptureIndicator() -> hideCaptureIndicator
    2290:2290:void hideFilmstrip() -> hideFilmstrip
    1771:1772:void hideGridLines() -> hideGridLines
    1071:1077:void hideModeCover() -> hideModeCover
    1811:1811:void hideModeOptions() -> hideModeOptions
    927:957:void initDisplayListener() -> initDisplayListener
    1997:1997:boolean isInIntentReview() -> isInIntentReview
    1908:1908:boolean isShutterButtonEnabled() -> isShutterButtonEnabled
    1186:1189:boolean onBackPressed() -> onBackPressed
    1236:1277:void onChangeCamera() -> onChangeCamera
    917:918:void onDestroy() -> onDestroy
    1536:1539:void onModeButtonPressed(int) -> onModeButtonPressed
    1166:1177:void onModeListClosed() -> onModeListClosed
    1135:1158:void onModeListOpenProgress(float) -> onModeListOpenProgress
    1550:1568:void onModeSelected(int) -> onModeSelected
    1458:1460:void onNewPreviewFrame() -> onNewPreviewFrame
    1217:1228:void onPreviewListenerChanged() -> onPreviewListenerChanged
    1429:1431:void onPreviewReadyToStart() -> onPreviewReadyToStart
    1439:1451:void onPreviewStarted() -> onPreviewStarted
    1084:1091:void onPreviewVisiblityChanged(int) -> onPreviewVisiblityChanged
    2004:2007:void onSettingChanged(com.android.camera.settings.SettingsManager,java.lang.String) -> onSettingChanged
    1577:1580:void onSettingsSelected() -> onSettingsSelected
    1705:1712:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    1727:1730:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    1717:1721:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    1737:1750:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    971:1002:void onSwipeDetected(int) -> onSwipeDetected
    1029:1030:void openModeList() -> openModeList
    1102:1102:void pausePreviewRendering() -> pausePreviewRendering
    1314:1376:void prepareModuleUI() -> prepareModuleUI
    1303:1303:void removePreviewAreaChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener) -> removePreviewAreaChangedListener
    1934:1934:void removeShutterListener(com.android.camera.ShutterButton$OnShutterButtonListener) -> removeShutterListener
    1821:1825:void resetBottomControls(com.android.camera.module.ModuleController,int) -> resetBottomControls
    1011:1020:void resume() -> resume
    1109:1109:void resumePreviewRendering() -> resumePreviewRendering
    1864:1864:void setBottomBarColor(int) -> setBottomBarColor
    1871:1871:void setBottomBarColorsForModeIndex(int) -> setBottomBarColorsForModeIndex
    1879:1881:void setBottomBarShutterIcon(int) -> setBottomBarShutterIcon
    1944:1944:void setCancelShutterButtonListener(android.view.View$OnClickListener) -> setCancelShutterButtonListener
    1521:1530:void setDisableAllUserInteractions(boolean) -> setDisableAllUserInteractions
    1677:1677:void setFilmstripBottomControlsListener(com.android.camera.app.CameraAppUI$BottomPanel$Listener) -> setFilmstripBottomControlsListener
    1912:1912:void setIndicatorBottomBarWrapperVisible(boolean) -> setIndicatorBottomBarWrapperVisible
    1202:1204:void setPreviewStatusListener(com.android.camera.ui.PreviewStatusListener) -> setPreviewStatusListener
    1598:1598:void setShouldSuppressCaptureIndicator(boolean) -> setShouldSuppressCaptureIndicator
    1893:1894:void setShutterButtonEnabled(boolean) -> setShutterButtonEnabled
    1904:1904:void setShutterButtonImportantToA11y(boolean) -> setShutterButtonImportantToA11y
    910:913:void setSwipeEnabled(boolean) -> setSwipeEnabled
    869:884:void setupClingForViewer(int) -> setupClingForViewer
    2274:2276:boolean shouldShowAspectRatioDialog() -> shouldShowAspectRatioDialog
    1034:1034:void showAccessibilityZoomUI(float) -> showAccessibilityZoomUI
    1850:1850:void showBottomBar() -> showBottomBar
    1666:1666:void showBottomControls() -> showBottomControls
    2285:2286:void showFilmstrip() -> showFilmstrip
    1762:1763:void showGridLines() -> showGridLines
    1047:1060:void showModeCoverUntilPreviewReady() -> showModeCoverUntilPreviewReady
    1802:1803:void showModeOptions() -> showModeOptions
    1064:1066:void showShimmyDelayed() -> showShimmyDelayed
    1607:1610:void startCaptureIndicatorRevealAnimation(java.lang.String) -> startCaptureIndicatorRevealAnimation
    1636:1636:void startFlashAnimation(boolean) -> startFlashAnimation
    1284:1286:void syncModeOptionIndicators() -> syncModeOptionIndicators
    1961:1964:void transitionToCancel() -> transitionToCancel
    1951:1954:void transitionToCapture() -> transitionToCapture
    1971:1975:void transitionToIntentCaptureLayout() -> transitionToIntentCaptureLayout
    1982:1990:void transitionToIntentReviewLayout() -> transitionToIntentReviewLayout
    1619:1622:void updateCaptureIndicatorThumbnail(android.graphics.Bitmap,int) -> updateCaptureIndicatorThumbnail
    1572:1572:void updateModeSpecificUIColors() -> updateModeSpecificUIColors
    667:667:void updatePreviewAspectRatio(float) -> updatePreviewAspectRatio
    711:711:void updatePreviewTransform(android.graphics.Matrix) -> updatePreviewTransform
com.android.camera.app.CameraAppUI$1 -> com.android.camera.app.CameraAppUI$1:
    547:547:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    551:552:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.camera.app.CameraAppUI$10 -> com.android.camera.app.CameraAppUI$10:
    1377:1377:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    1380:1381:void onPreviewAspectRatioChanged(float) -> onPreviewAspectRatioChanged
com.android.camera.app.CameraAppUI$11 -> com.android.camera.app.CameraAppUI$11:
    1550:1550:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    1553:1553:void run() -> run
com.android.camera.app.CameraAppUI$12 -> com.android.camera.app.CameraAppUI$12:
    1781:1781:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    1784:1788:void onStateChanged(int) -> onStateChanged
com.android.camera.app.CameraAppUI$13 -> com.android.camera.app.CameraAppUI$13:
    1894:1894:void <init>(com.android.camera.app.CameraAppUI,boolean) -> <init>
    1897:1897:void run() -> run
com.android.camera.app.CameraAppUI$14 -> com.android.camera.app.CameraAppUI$14:
    2193:2193:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    2196:2196:void onClick(android.view.View) -> onClick
com.android.camera.app.CameraAppUI$15 -> com.android.camera.app.CameraAppUI$15:
    2246:2246:void <init>(com.android.camera.app.CameraAppUI,int) -> <init>
    2249:2249:void onStateChanged(int) -> onStateChanged
com.android.camera.app.CameraAppUI$2 -> com.android.camera.app.CameraAppUI$2:
    615:615:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    618:622:android.graphics.Bitmap getPreviewFrame(int) -> getPreviewFrame
    628:631:android.graphics.Bitmap getPreviewOverlayAndControls() -> getPreviewOverlayAndControls
    637:647:android.graphics.Bitmap getScreenShot(int) -> getScreenShot
com.android.camera.app.CameraAppUI$3 -> com.android.camera.app.CameraAppUI$3:
    814:814:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    817:817:void onHitStateFinished() -> onHitStateFinished
com.android.camera.app.CameraAppUI$4 -> com.android.camera.app.CameraAppUI$4:
    825:825:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    828:828:void onClick(android.view.View) -> onClick
com.android.camera.app.CameraAppUI$5 -> com.android.camera.app.CameraAppUI$5:
    833:833:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    836:836:void onClick(android.view.View) -> onClick
com.android.camera.app.CameraAppUI$6 -> com.android.camera.app.CameraAppUI$6:
    852:852:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    855:855:void run() -> run
com.android.camera.app.CameraAppUI$7 -> com.android.camera.app.CameraAppUI$7:
    930:930:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    938:947:void onDisplayChanged(int) -> onDisplayChanged
com.android.camera.app.CameraAppUI$8 -> com.android.camera.app.CameraAppUI$8:
    980:980:void <init>(com.android.camera.app.CameraAppUI,int) -> <init>
    984:992:void onAnimationFinished(boolean) -> onAnimationFinished
com.android.camera.app.CameraAppUI$8$1 -> com.android.camera.app.CameraAppUI$8$1:
    984:984:void <init>(com.android.camera.app.CameraAppUI$8) -> <init>
    987:987:void run() -> run
com.android.camera.app.CameraAppUI$9 -> com.android.camera.app.CameraAppUI$9:
    1051:1051:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    1054:1056:void run() -> run
com.android.camera.app.CameraAppUI$BottomBarUISpec -> com.android.camera.app.CameraAppUI$BottomBarUISpec:
    269:478:void <init>() -> <init>
com.android.camera.app.CameraAppUI$MyGestureListener -> com.android.camera.app.CameraAppUI$MyGestureListener:
    735:735:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    735:735:void <init>(com.android.camera.app.CameraAppUI,com.android.camera.app.CameraAppUI$1) -> <init>
    772:773:boolean onDown(android.view.MotionEvent) -> onDown
    740:757:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    765:767:void setSwipeState(int) -> setSwipeState
com.android.camera.app.CameraAppUI$MyTouchListener -> com.android.camera.app.CameraAppUI$MyTouchListener:
    718:719:void <init>(com.android.camera.app.CameraAppUI) -> <init>
    718:718:void <init>(com.android.camera.app.CameraAppUI,com.android.camera.app.CameraAppUI$1) -> <init>
    722:727:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.camera.app.CameraController -> com.android.camera.app.CameraController:
    41:41:void <clinit>() -> <clinit>
    55:95:void <init>(android.content.Context,com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback,android.os.Handler,com.android.ex.camera2.portability.CameraAgent,com.android.ex.camera2.portability.CameraAgent,com.android.camera.device.ActiveCameraDeviceTracker) -> <init>
    319:324:void checkAndOpenCamera(com.android.ex.camera2.portability.CameraAgent,int,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback) -> checkAndOpenCamera
    306:314:void closeCamera(boolean) -> closeCamera
    109:112:com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics getCharacteristics(int) -> getCharacteristics
    118:118:com.android.camera.device.CameraId getCurrentCameraId() -> getCurrentCameraId
    139:142:int getFirstFrontCameraId() -> getFirstFrontCameraId
    123:126:int getNumberOfCameras() -> getNumberOfCameras
    184:185:void onCameraDisabled(int) -> onCameraDisabled
    171:178:void onCameraOpened(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onCameraOpened
    191:192:void onDeviceOpenFailure(int,java.lang.String) -> onDeviceOpenFailure
    198:199:void onDeviceOpenedAlready(int,java.lang.String) -> onDeviceOpenedAlready
    205:206:void onReconnectionFailure(com.android.ex.camera2.portability.CameraAgent,java.lang.String) -> onReconnectionFailure
    272:294:void releaseCamera(int) -> releaseCamera
    298:298:void removeCallbackReceiver() -> removeCallbackReceiver
    212:212:void requestCamera(int) -> requestCamera
    217:262:void requestCamera(int,boolean) -> requestCamera
    101:103:void setCameraExceptionHandler(com.android.ex.camera2.portability.CameraExceptionHandler) -> setCameraExceptionHandler
    335:335:void setOneShotPreviewCallback(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraPreviewDataCallback) -> setOneShotPreviewCallback
    267:267:boolean waitingForCamera() -> waitingForCamera
com.android.camera.app.CameraController$1 -> com.android.camera.app.CameraController$1:
    324:324:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback,int) -> <init>
    327:327:void run() -> run
com.android.camera.app.CameraServicesImpl -> com.android.camera.app.CameraServicesImpl:
    40:40:void <init>(android.content.Context,com.android.camera.app.CameraServicesImpl$1) -> <init>
    63:78:void <init>(android.content.Context) -> <init>
    83:83:com.android.camera.session.CaptureSessionManager getCaptureSessionManager() -> getCaptureSessionManager
    99:99:com.android.camera.app.MediaSaver getMediaSaver() -> getMediaSaver
    88:88:com.android.camera.app.MemoryManager getMemoryManager() -> getMemoryManager
    93:93:com.android.camera.app.MotionManager getMotionManager() -> getMotionManager
    104:104:com.android.camera.remote.RemoteShutterListener getRemoteShutterListener() -> getRemoteShutterListener
    109:109:com.android.camera.settings.SettingsManager getSettingsManager() -> getSettingsManager
    53:53:com.android.camera.app.CameraServicesImpl instance() -> instance
com.android.camera.app.CameraServicesImpl$Singleton -> com.android.camera.app.CameraServicesImpl$Singleton:
    45:46:void <clinit>() -> <clinit>
    44:44:com.android.camera.app.CameraServicesImpl access$100() -> access$100
com.android.camera.app.FilmstripBottomPanel -> com.android.camera.app.FilmstripBottomPanel:
    57:66:void <init>(com.android.camera.app.AppController,android.view.ViewGroup) -> <init>
    38:38:boolean access$000(com.android.camera.app.FilmstripBottomPanel) -> access$000
    38:38:android.widget.ImageButton access$100(com.android.camera.app.FilmstripBottomPanel) -> access$100
    38:38:com.android.camera.app.AppController access$200(com.android.camera.app.FilmstripBottomPanel) -> access$200
    38:38:com.android.camera.app.CameraAppUI$BottomPanel$Listener access$300(com.android.camera.app.FilmstripBottomPanel) -> access$300
    38:38:com.android.camera.widget.ExternalViewerButton access$400(com.android.camera.app.FilmstripBottomPanel) -> access$400
    81:81:void clearClingForViewer(int) -> clearClingForViewer
    86:86:com.android.camera.widget.Cling getClingForViewer(int) -> getClingForViewer
    290:297:void hide() -> hide
    186:186:void hideControls() -> hideControls
    176:176:void hideProgress() -> hideProgress
    165:165:void hideProgressError() -> hideProgressError
    76:76:void setClingForViewer(int,com.android.camera.widget.Cling) -> setClingForViewer
    127:127:void setDeleteButtonVisibility(boolean) -> setDeleteButtonVisibility
    100:101:void setEditButtonVisibility(boolean) -> setEditButtonVisibility
    71:71:void setListener(com.android.camera.app.CameraAppUI$BottomPanel$Listener) -> setListener
    152:152:void setProgress(int) -> setProgress
    147:147:void setProgressText(java.lang.CharSequence) -> setProgressText
    137:137:void setShareButtonVisibility(boolean) -> setShareButtonVisibility
    142:142:void setShareEnabled(boolean) -> setShareEnabled
    122:122:void setTinyPlanetEnabled(boolean) -> setTinyPlanetEnabled
    111:112:void setViewerButtonVisibility(int) -> setViewerButtonVisibility
    92:94:void setVisible(boolean) -> setVisible
    219:220:void setupDeleteButton() -> setupDeleteButton
    190:202:void setupEditButton() -> setupEditButton
    243:250:void setupProgressUi() -> setupProgressUi
    231:232:void setupShareButton() -> setupShareButton
    206:208:void setupViewButton() -> setupViewButton
    275:286:void show() -> show
    181:181:void showControls() -> showControls
    157:160:void showProgressError(java.lang.CharSequence) -> showProgressError
    266:270:void updateMiddleFillerLayoutVisibility() -> updateMiddleFillerLayoutVisibility
com.android.camera.app.FilmstripBottomPanel$1 -> com.android.camera.app.FilmstripBottomPanel$1:
    191:191:void <init>(com.android.camera.app.FilmstripBottomPanel) -> <init>
    194:197:void onClick(android.view.View) -> onClick
com.android.camera.app.FilmstripBottomPanel$2 -> com.android.camera.app.FilmstripBottomPanel$2:
    208:208:void <init>(com.android.camera.app.FilmstripBottomPanel) -> <init>
    211:212:void onClick(android.view.View) -> onClick
com.android.camera.app.FilmstripBottomPanel$3 -> com.android.camera.app.FilmstripBottomPanel$3:
    220:220:void <init>(com.android.camera.app.FilmstripBottomPanel) -> <init>
    223:224:void onClick(android.view.View) -> onClick
com.android.camera.app.FilmstripBottomPanel$4 -> com.android.camera.app.FilmstripBottomPanel$4:
    232:232:void <init>(com.android.camera.app.FilmstripBottomPanel) -> <init>
    235:236:void onClick(android.view.View) -> onClick
com.android.camera.app.FilmstripBottomPanel$5 -> com.android.camera.app.FilmstripBottomPanel$5:
    250:250:void <init>(com.android.camera.app.FilmstripBottomPanel) -> <init>
    253:254:void onClick(android.view.View) -> onClick
com.android.camera.app.FilmstripBottomPanel$6 -> com.android.camera.app.FilmstripBottomPanel$6:
    279:279:void <init>(com.android.camera.app.FilmstripBottomPanel) -> <init>
    282:282:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.app.FirstRunDetector -> com.android.camera.app.FirstRunDetector:
    27:27:void <init>(com.android.camera.stats.profiler.Profiler,com.android.camera.app.FirstRunDetector$1) -> <init>
    44:47:void <init>(com.android.camera.stats.profiler.Profiler) -> <init>
    78:108:void initializeTimeOfFirstRun(android.content.Context) -> initializeTimeOfFirstRun
    38:38:com.android.camera.app.FirstRunDetector instance() -> instance
com.android.camera.app.FirstRunDetector$Singleton -> com.android.camera.app.FirstRunDetector$Singleton:
    33:34:void <clinit>() -> <clinit>
    32:32:com.android.camera.app.FirstRunDetector access$100() -> access$100
com.android.camera.app.FirstRunDialog -> com.android.camera.app.FirstRunDialog:
    52:52:void <clinit>() -> <clinit>
    94:100:void <init>(com.android.camera.app.AppController,android.content.Context,com.android.camera.settings.ResolutionSetting,com.android.camera.settings.SettingsManager,com.android.camera.one.OneCameraManager,com.android.camera.app.FirstRunDialog$FirstRunDialogListener) -> <init>
    43:43:com.android.camera.one.OneCameraManager access$000(com.android.camera.app.FirstRunDialog) -> access$000
    43:43:com.android.camera.settings.ResolutionSetting access$100(com.android.camera.app.FirstRunDialog) -> access$100
    43:43:com.android.camera.app.FirstRunDialog$FirstRunDialogListener access$200(com.android.camera.app.FirstRunDialog) -> access$200
    43:43:com.android.camera.settings.SettingsManager access$300(com.android.camera.app.FirstRunDialog) -> access$300
    43:43:android.app.Dialog access$402(com.android.camera.app.FirstRunDialog,android.app.Dialog) -> access$402
    43:43:void access$500(com.android.camera.app.FirstRunDialog) -> access$500
    43:43:boolean access$600(com.android.camera.app.FirstRunDialog) -> access$600
    43:43:void access$700(com.android.camera.app.FirstRunDialog) -> access$700
    43:43:android.app.Dialog access$802(com.android.camera.app.FirstRunDialog,android.app.Dialog) -> access$802
    213:219:void checkLocationPermission() -> checkLocationPermission
    126:136:void dismiss() -> dismiss
    160:209:void promptAspectRatioPreferenceDialog() -> promptAspectRatioPreferenceDialog
    231:272:void promptLocationPreferenceDialog() -> promptLocationPreferenceDialog
    150:150:boolean shouldShowAspectRatioDialog() -> shouldShowAspectRatioDialog
    146:146:boolean shouldShowLocationDialog() -> shouldShowLocationDialog
    107:118:void showIfNecessary() -> showIfNecessary
com.android.camera.app.FirstRunDialog$1 -> com.android.camera.app.FirstRunDialog$1:
    162:162:void <init>(com.android.camera.app.FirstRunDialog) -> <init>
    167:190:void onConfirm(com.android.camera.exif.Rational) -> onConfirm
com.android.camera.app.FirstRunDialog$2 -> com.android.camera.app.FirstRunDialog$2:
    199:199:void <init>(com.android.camera.app.FirstRunDialog) -> <init>
    202:204:void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.camera.app.FirstRunDialog$3 -> com.android.camera.app.FirstRunDialog$3:
    233:233:void <init>(com.android.camera.app.FirstRunDialog) -> <init>
    237:252:void onConfirm(boolean) -> onConfirm
com.android.camera.app.FirstRunDialog$4 -> com.android.camera.app.FirstRunDialog$4:
    262:262:void <init>(com.android.camera.app.FirstRunDialog) -> <init>
    265:267:void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.camera.app.LegacyLocationProvider -> com.android.camera.app.LegacyLocationProvider:
    31:31:void <clinit>() -> <clinit>
    37:43:void <init>(android.content.Context) -> <init>
    30:30:com.android.camera.debug.Log$Tag access$000() -> access$000
    77:77:void disconnect() -> disconnect
    48:59:android.location.Location getCurrentLocation() -> getCurrentLocation
    65:70:void recordLocation(boolean) -> recordLocation
    83:110:void startReceivingLocationUpdates() -> startReceivingLocationUpdates
    115:124:void stopReceivingLocationUpdates() -> stopReceivingLocationUpdates
com.android.camera.app.LegacyLocationProvider$LocationListener -> com.android.camera.app.LegacyLocationProvider$LocationListener:
    131:136:void <init>(com.android.camera.app.LegacyLocationProvider,java.lang.String) -> <init>
    175:175:android.location.Location current() -> current
    141:150:void onLocationChanged(android.location.Location) -> onLocationChanged
    159:159:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    168:168:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.android.camera.app.LocationManager -> com.android.camera.app.LocationManager:
    30:30:void <clinit>() -> <clinit>
    34:39:void <init>(android.content.Context,boolean) -> <init>
    62:62:void disconnect() -> disconnect
    55:55:android.location.Location getCurrentLocation() -> getCurrentLocation
    46:47:void recordLocation(boolean) -> recordLocation
com.android.camera.app.MemoryManagerImpl -> com.android.camera.app.MemoryManagerImpl:
    38:45:void <clinit>() -> <clinit>
    50:89:void <init>(int,com.android.camera.app.MemoryQuery) -> <init>
    95:101:void addListener(com.android.camera.app.MemoryManager$MemoryListener) -> addListener
    72:78:com.android.camera.app.MemoryManagerImpl create(android.content.Context,com.android.camera.app.MediaSaver) -> create
    152:166:int getMaxAllowedNativeMemory(android.content.Context) -> getMaxAllowedNativeMemory
    141:141:int getMaxAllowedNativeMemoryAllocation() -> getMaxAllowedNativeMemoryAllocation
    179:183:void notifyCaptureStateUpdate(int) -> notifyCaptureStateUpdate
    171:175:void notifyLowMemory() -> notifyLowMemory
    121:121:void onLowMemory() -> onLowMemory
    136:136:void onQueueStatus(boolean) -> onQueueStatus
    126:128:void onTrimMemory(int) -> onTrimMemory
    146:146:java.util.HashMap queryMemory() -> queryMemory
    106:112:void removeListener(com.android.camera.app.MemoryManager$MemoryListener) -> removeListener
com.android.camera.app.MemoryQuery -> com.android.camera.app.MemoryQuery:
    32:32:void <clinit>() -> <clinit>
    33:56:void <init>(android.app.ActivityManager) -> <init>
    67:124:java.util.HashMap queryMemory() -> queryMemory
com.android.camera.app.ModuleManagerImpl -> com.android.camera.app.ModuleManagerImpl:
    34:34:void <clinit>() -> <clinit>
    36:40:void <init>() -> <init>
    105:107:com.android.camera.app.ModuleManager$ModuleAgent getModuleAgent(int) -> getModuleAgent
    115:129:int getQuickSwitchToModuleId(int,com.android.camera.settings.SettingsManager,android.content.Context) -> getQuickSwitchToModuleId
    82:84:java.util.List getSupportedModeIndexList() -> getSupportedModeIndexList
    46:56:void registerModule(com.android.camera.app.ModuleManager$ModuleAgent) -> registerModule
    91:92:boolean setDefaultModuleIndex(int) -> setDefaultModuleIndex
com.android.camera.app.MotionManager -> com.android.camera.app.MotionManager:
    29:32:void <init>(android.content.Context) -> <init>
com.android.camera.app.NoOpLocationProvider -> com.android.camera.app.NoOpLocationProvider:
    27:27:void <init>(android.content.Context) -> <init>
com.android.camera.app.OrientationManager$DeviceNaturalOrientation -> com.android.camera.app.OrientationManager$DeviceNaturalOrientation:
    9:11:void <clinit>() -> <clinit>
    14:15:void <init>(java.lang.String,int,int) -> <init>
    9:9:com.android.camera.app.OrientationManager$DeviceNaturalOrientation valueOf(java.lang.String) -> valueOf
    9:9:com.android.camera.app.OrientationManager$DeviceNaturalOrientation[] values() -> values
com.android.camera.app.OrientationManager$DeviceOrientation -> com.android.camera.app.OrientationManager$DeviceOrientation:
    19:23:void <clinit>() -> <clinit>
    27:28:void <init>(java.lang.String,int,int) -> <init>
    48:66:com.android.camera.app.OrientationManager$DeviceOrientation from(int) -> from
    35:35:int getDegrees() -> getDegrees
    19:19:com.android.camera.app.OrientationManager$DeviceOrientation valueOf(java.lang.String) -> valueOf
    19:19:com.android.camera.app.OrientationManager$DeviceOrientation[] values() -> values
com.android.camera.app.OrientationManagerImpl -> com.android.camera.app.OrientationManagerImpl:
    45:45:void <clinit>() -> <clinit>
    60:84:void <init>(android.app.Activity,android.os.Handler) -> <init>
    44:44:com.android.camera.app.OrientationManager$DeviceOrientation access$000(com.android.camera.app.OrientationManagerImpl) -> access$000
    44:44:com.android.camera.app.OrientationManager$DeviceOrientation access$002(com.android.camera.app.OrientationManagerImpl,com.android.camera.app.OrientationManager$DeviceOrientation) -> access$002
    44:44:com.android.camera.app.OrientationManager$DeviceOrientation access$100(com.android.camera.app.OrientationManager$DeviceOrientation,int) -> access$100
    44:44:com.android.camera.debug.Log$Tag access$200() -> access$200
    44:44:java.util.List access$300(com.android.camera.app.OrientationManagerImpl) -> access$300
    44:44:android.os.Handler access$400(com.android.camera.app.OrientationManagerImpl) -> access$400
    116:119:void addOnOrientationChangeListener(com.android.camera.app.OrientationManager$OnOrientationChangeListener) -> addOnOrientationChangeListener
    178:181:int calculateCurrentScreenOrientation() -> calculateCurrentScreenOrientation
    100:101:com.android.camera.app.OrientationManager$DeviceNaturalOrientation getDeviceNaturalOrientation() -> getDeviceNaturalOrientation
    106:106:com.android.camera.app.OrientationManager$DeviceOrientation getDeviceOrientation() -> getDeviceOrientation
    111:111:com.android.camera.app.OrientationManager$DeviceOrientation getDisplayRotation() -> getDisplayRotation
    262:273:boolean isDefaultToPortrait(android.app.Activity) -> isDefaultToPortrait
    131:137:boolean isInLandscape() -> isInLandscape
    146:146:boolean isInPortrait() -> isInPortrait
    151:158:void lockOrientation() -> lockOrientation
    95:95:void pause() -> pause
    124:125:void removeOnOrientationChangeListener(com.android.camera.app.OrientationManager$OnOrientationChangeListener) -> removeOnOrientationChangeListener
    88:91:void resume() -> resume
    234:248:com.android.camera.app.OrientationManager$DeviceOrientation roundOrientation(com.android.camera.app.OrientationManager$DeviceOrientation,int) -> roundOrientation
    164:169:void unlockOrientation() -> unlockOrientation
com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener -> com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener:
    202:203:void <init>(com.android.camera.app.OrientationManagerImpl,android.content.Context) -> <init>
    212:222:void onOrientationChanged(int) -> onOrientationChanged
com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener$1 -> com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener$1:
    222:222:void <init>(com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener,com.android.camera.app.OrientationManager$OnOrientationChangeListener,com.android.camera.app.OrientationManager$DeviceOrientation) -> <init>
    225:225:void run() -> run
com.android.camera.async.AndroidPriorityThread -> com.android.camera.async.AndroidPriorityThread:
    19:20:void <init>(int,java.lang.Runnable) -> <init>
    25:26:void run() -> run
com.android.camera.async.BufferQueue$BufferQueueClosedException -> com.android.camera.async.BufferQueue$BufferQueueClosedException:
    80:80:void <init>() -> <init>
com.android.camera.async.ConcurrentBufferQueue -> com.android.camera.async.ConcurrentBufferQueue:
    93:97:void <init>(com.android.camera.async.ConcurrentBufferQueue$UnusedElementProcessor) -> <init>
    102:102:void <init>() -> <init>
    111:137:void close() -> close
    198:205:void discardNext() -> discardNext
    157:163:java.lang.Object doWithNextEntry(com.android.camera.async.ConcurrentBufferQueue$Entry) -> doWithNextEntry
    169:170:java.lang.Object getNext() -> getNext
    176:180:java.lang.Object getNext(long,java.util.concurrent.TimeUnit) -> getNext
    215:215:boolean isClosed() -> isClosed
    223:223:com.android.camera.async.ConcurrentBufferQueue$Entry makeClosingMarker() -> makeClosingMarker
    219:219:com.android.camera.async.ConcurrentBufferQueue$Entry makeEntry(java.lang.Object) -> makeEntry
    185:191:java.lang.Object peekNext() -> peekNext
    145:152:void update(java.lang.Object) -> update
com.android.camera.async.ConcurrentBufferQueue$1 -> com.android.camera.async.ConcurrentBufferQueue$1:
    102:102:void <init>() -> <init>
com.android.camera.async.ConcurrentBufferQueue$Entry -> com.android.camera.async.ConcurrentBufferQueue$Entry:
    58:58:void <init>(java.lang.Object,boolean,com.android.camera.async.ConcurrentBufferQueue$1) -> <init>
    62:64:void <init>(java.lang.Object,boolean) -> <init>
    72:72:java.lang.Object getValue() -> getValue
    68:68:boolean isClosingMarker() -> isClosingMarker
com.android.camera.async.ConcurrentState -> com.android.camera.async.ConcurrentState:
    54:59:void <init>(java.lang.Object) -> <init>
    32:32:java.util.Set access$000(com.android.camera.async.ConcurrentState) -> access$000
    77:79:com.android.camera.async.SafeCloseable addCallback(java.lang.Runnable,java.util.concurrent.Executor) -> addCallback
    95:95:java.lang.Object get() -> get
    67:69:void update(java.lang.Object) -> update
com.android.camera.async.ConcurrentState$1 -> com.android.camera.async.ConcurrentState$1:
    79:79:void <init>(com.android.camera.async.ConcurrentState,com.android.camera.async.ConcurrentState$ExecutorListenerPair) -> <init>
    82:82:void close() -> close
com.android.camera.async.ConcurrentState$ExecutorListenerPair -> com.android.camera.async.ConcurrentState$ExecutorListenerPair:
    37:39:void <init>(java.util.concurrent.Executor,java.lang.Runnable) -> <init>
    47:47:void run() -> run
com.android.camera.async.CountableBufferQueue -> com.android.camera.async.CountableBufferQueue:
    56:60:void <init>(com.android.camera.async.Updatable,com.android.camera.async.ConcurrentBufferQueue$UnusedElementProcessor) -> <init>
    28:28:void access$000(com.android.camera.async.CountableBufferQueue) -> access$000
    128:128:void close() -> close
    74:78:void decrementSize() -> decrementSize
    103:103:void discardNext() -> discardNext
    83:84:java.lang.Object getNext() -> getNext
    91:92:java.lang.Object getNext(long,java.util.concurrent.TimeUnit) -> getNext
    133:133:boolean isClosed() -> isClosed
    98:98:java.lang.Object peekNext() -> peekNext
    115:122:void update(java.lang.Object) -> update
com.android.camera.async.CountableBufferQueue$DecrementingProcessor -> com.android.camera.async.CountableBufferQueue$DecrementingProcessor:
    29:29:void <init>(com.android.camera.async.CountableBufferQueue,com.android.camera.async.ConcurrentBufferQueue$UnusedElementProcessor,com.android.camera.async.CountableBufferQueue$1) -> <init>
    33:34:void <init>(com.android.camera.async.CountableBufferQueue,com.android.camera.async.ConcurrentBufferQueue$UnusedElementProcessor) -> <init>
    39:40:void process(java.lang.Object) -> process
com.android.camera.async.FilteredCallback -> com.android.camera.async.FilteredCallback:
    36:38:void <init>(com.android.camera.util.Callback) -> <init>
    43:47:void onCallback(java.lang.Object) -> onCallback
com.android.camera.async.FilteredUpdatable -> com.android.camera.async.FilteredUpdatable:
    31:35:void <init>(com.android.camera.async.Updatable) -> <init>
    56:60:void setNewValue(java.lang.Object) -> setNewValue
    40:52:void update(java.lang.Object) -> update
com.android.camera.async.ForwardingBufferQueue -> com.android.camera.async.ForwardingBufferQueue:
    28:29:void <init>(com.android.camera.async.BufferQueue) -> <init>
    55:55:void discardNext() -> discardNext
    39:39:java.lang.Object getNext() -> getNext
    45:45:java.lang.Object getNext(long,java.util.concurrent.TimeUnit) -> getNext
    60:60:boolean isClosed() -> isClosed
    50:50:java.lang.Object peekNext() -> peekNext
    65:65:java.lang.String toString() -> toString
com.android.camera.async.ForwardingObservable -> com.android.camera.async.ForwardingObservable:
    31:32:void <init>(com.android.camera.async.Observable) -> <init>
    39:39:com.android.camera.async.SafeCloseable addCallback(java.lang.Runnable,java.util.concurrent.Executor) -> addCallback
    45:45:java.lang.Object get() -> get
com.android.camera.async.Futures2 -> com.android.camera.async.Futures2:
    73:73:com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture) -> nonCancellationPropagating
com.android.camera.async.Futures2$1 -> com.android.camera.async.Futures2$1:
    73:73:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
com.android.camera.async.HandlerExecutor -> com.android.camera.async.HandlerExecutor:
    32:33:void <init>(android.os.Handler) -> <init>
    38:38:void execute(java.lang.Runnable) -> execute
com.android.camera.async.HandlerFactory -> com.android.camera.async.HandlerFactory:
    25:25:void <init>() -> <init>
    32:42:android.os.Handler create(com.android.camera.async.Lifetime,java.lang.String) -> create
    52:63:android.os.Handler create(com.android.camera.async.Lifetime,java.lang.String,int) -> create
com.android.camera.async.HandlerFactory$1 -> com.android.camera.async.HandlerFactory$1:
    35:35:void <init>(com.android.camera.async.HandlerFactory,android.os.HandlerThread) -> <init>
    38:38:void close() -> close
com.android.camera.async.HandlerFactory$2 -> com.android.camera.async.HandlerFactory$2:
    56:56:void <init>(com.android.camera.async.HandlerFactory,android.os.HandlerThread) -> <init>
    59:59:void close() -> close
com.android.camera.async.Lifetime -> com.android.camera.async.Lifetime:
    45:49:void <init>() -> <init>
    52:57:void <init>(com.android.camera.async.Lifetime) -> <init>
    65:73:com.android.camera.async.SafeCloseable add(com.android.camera.async.SafeCloseable) -> add
    80:97:void close() -> close
com.android.camera.async.Listenable -> com.android.camera.async.Listenable:
    32:37:void <init>(com.android.camera.async.ConcurrentState,com.android.camera.async.MainThread) -> <init>
    25:25:com.android.camera.async.ConcurrentState access$000(com.android.camera.async.Listenable) -> access$000
    65:71:void clear() -> clear
    79:82:void close() -> close
    44:58:void setCallback(com.android.camera.util.Callback) -> setCallback
com.android.camera.async.Listenable$1 -> com.android.camera.async.Listenable$1:
    52:52:void <init>(com.android.camera.async.Listenable,com.android.camera.util.Callback) -> <init>
    55:55:void run() -> run
com.android.camera.async.MainThread -> com.android.camera.async.MainThread:
    40:40:void <clinit>() -> <clinit>
    28:28:void <init>(android.os.Handler,com.android.camera.async.MainThread$1) -> <init>
    30:30:void <init>(android.os.Handler) -> <init>
    28:28:java.lang.ThreadLocal access$100() -> access$100
    51:51:void checkMainThread() -> checkMainThread
    34:34:com.android.camera.async.MainThread create() -> create
    66:66:com.android.camera.async.MainThread createFakeForTesting() -> createFakeForTesting
    58:58:boolean isMainThread() -> isMainThread
com.android.camera.async.MainThread$1 -> com.android.camera.async.MainThread$1:
    40:40:void <init>() -> <init>
    40:40:java.lang.Object initialValue() -> initialValue
    43:43:java.lang.Boolean initialValue() -> initialValue
com.android.camera.async.MainThread$2 -> com.android.camera.async.MainThread$2:
    66:66:void <init>(android.os.Handler) -> <init>
    70:75:void execute(java.lang.Runnable) -> execute
com.android.camera.async.ObservableCombiner -> com.android.camera.async.ObservableCombiner:
    46:48:void <init>(java.util.List,com.google.common.base.Supplier) -> <init>
    85:88:com.android.camera.async.SafeCloseable addCallback(java.lang.Runnable,java.util.concurrent.Executor) -> addCallback
    97:97:java.lang.Object get() -> get
    78:78:com.android.camera.async.Observable transform(java.util.List,com.google.common.base.Supplier) -> transform
com.android.camera.async.Observables -> com.android.camera.async.Observables:
    36:36:void <clinit>() -> <clinit>
    35:35:com.android.camera.async.SafeCloseable access$000() -> access$000
    112:117:com.android.camera.async.SafeCloseable addThreadSafeCallback(com.android.camera.async.Observable,com.android.camera.async.Updatable) -> addThreadSafeCallback
    92:92:com.android.camera.async.Observable of(java.lang.Object) -> of
    53:53:com.android.camera.async.Observable transform(com.android.camera.async.Observable,com.google.common.base.Function) -> transform
    74:74:com.android.camera.async.Observable transform(java.util.List,com.google.common.base.Supplier) -> transform
com.android.camera.async.Observables$1 -> com.android.camera.async.Observables$1:
    36:36:void <init>() -> <init>
com.android.camera.async.Observables$2 -> com.android.camera.async.Observables$2:
    53:53:void <init>(com.google.common.base.Function,com.android.camera.async.Observable) -> <init>
    64:64:com.android.camera.async.SafeCloseable addCallback(java.lang.Runnable,java.util.concurrent.Executor) -> addCallback
    57:57:java.lang.Object get() -> get
com.android.camera.async.Observables$3 -> com.android.camera.async.Observables$3:
    92:92:void <init>(java.lang.Object) -> <init>
    103:103:com.android.camera.async.SafeCloseable addCallback(java.lang.Runnable,java.util.concurrent.Executor) -> addCallback
    96:96:java.lang.Object get() -> get
com.android.camera.async.Observables$4 -> com.android.camera.async.Observables$4:
    112:112:void <init>(com.android.camera.async.Updatable,com.android.camera.async.Observable) -> <init>
    115:115:void run() -> run
com.android.camera.async.RefCountBase -> com.android.camera.async.RefCountBase:
    33:33:void <init>(com.android.camera.async.SafeCloseable) -> <init>
    36:42:void <init>(com.android.camera.async.SafeCloseable,int) -> <init>
    46:50:void addRef() -> addRef
    59:72:void close() -> close
    54:54:com.android.camera.async.SafeCloseable get() -> get
    77:79:int getRefCount() -> getRefCount
com.android.camera.async.ResettingDelayedExecutor -> com.android.camera.async.ResettingDelayedExecutor:
    41:46:void <init>(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit) -> <init>
    74:80:void close() -> close
    63:69:void execute(java.lang.Runnable) -> execute
    53:58:void reset() -> reset
com.android.camera.async.UpdatableCountDownLatch -> com.android.camera.async.UpdatableCountDownLatch:
    28:28:void <init>(int) -> <init>
    33:33:void update(java.lang.Object) -> update
com.android.camera.burst.BurstCaptureCommand -> com.android.camera.burst.BurstCaptureCommand:
    96:105:void <init>(com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,com.android.camera.one.v2.sharedimagereader.ManagedImageReader,android.view.Surface,com.android.camera.async.Lifetime,com.android.camera.burst.EvictionHandler,com.android.camera.burst.BurstController,java.lang.Runnable,int) -> <init>
    51:51:android.view.Surface access$000(com.android.camera.burst.BurstCaptureCommand) -> access$000
    51:51:com.android.camera.burst.EvictionHandler access$100(com.android.camera.burst.BurstCaptureCommand) -> access$100
    186:189:void checkAndApplyNexus5FrameRateWorkaround(com.android.camera.one.v2.core.RequestBuilder) -> checkAndApplyNexus5FrameRateWorkaround
    111:179:void run() -> run
com.android.camera.burst.BurstCaptureCommand$1 -> com.android.camera.burst.BurstCaptureCommand$1:
    132:132:void <init>(com.android.camera.burst.BurstCaptureCommand) -> <init>
    137:137:android.view.Surface bind(com.android.camera.async.BufferQueue) -> bind
com.android.camera.burst.BurstCaptureCommand$2 -> com.android.camera.burst.BurstCaptureCommand$2:
    143:143:void <init>(com.android.camera.burst.BurstCaptureCommand) -> <init>
    146:147:void onCompleted(android.hardware.camera2.TotalCaptureResult) -> onCompleted
com.android.camera.burst.BurstController$ImageStreamProperties -> com.android.camera.burst.BurstController$ImageStreamProperties:
    62:66:void <init>(int,int,int,boolean) -> <init>
com.android.camera.burst.BurstControllerImpl -> com.android.camera.burst.BurstControllerImpl:
    35:35:void <init>(android.content.Context) -> <init>
com.android.camera.burst.BurstFacadeFactory -> com.android.camera.burst.BurstFacadeFactory:
    80:88:com.android.camera.burst.BurstFacade create(android.content.Context,com.android.camera.burst.OrientationLockController,com.android.camera.burst.BurstReadyStateChangeListener) -> create
com.android.camera.burst.BurstFacadeFactory$BurstFacadeStub -> com.android.camera.burst.BurstFacadeFactory$BurstFacadeStub:
    41:41:void <init>() -> <init>
com.android.camera.burst.BurstFacadeImpl -> com.android.camera.burst.BurstFacadeImpl:
    52:52:void <clinit>() -> <clinit>
    57:120:void <init>(android.content.Context,com.android.camera.burst.OrientationLockController,com.android.camera.burst.BurstReadyStateChangeListener) -> <init>
    182:182:android.view.Surface getInputSurface() -> getInputSurface
    187:195:void initialize(android.graphics.SurfaceTexture) -> initialize
    214:217:void reEnableUI() -> reEnableUI
    200:204:void release() -> release
    210:210:void setBurstTaker(com.android.camera.burst.BurstTaker) -> setBurstTaker
    128:163:void startBurst(com.android.camera.session.CaptureSession$CaptureSessionCreator,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.one.OneCamera$Facing,int) -> startBurst
    169:175:boolean stopBurst() -> stopBurst
com.android.camera.burst.BurstFacadeImpl$1 -> com.android.camera.burst.BurstFacadeImpl$1:
    72:72:void <init>(com.android.camera.burst.BurstFacadeImpl) -> <init>
com.android.camera.burst.BurstFacadeImpl$BurstModuleState -> com.android.camera.burst.BurstFacadeImpl$BurstModuleState:
    46:49:void <clinit>() -> <clinit>
    46:46:void <init>(java.lang.String,int) -> <init>
    46:46:com.android.camera.burst.BurstFacadeImpl$BurstModuleState valueOf(java.lang.String) -> valueOf
    46:46:com.android.camera.burst.BurstFacadeImpl$BurstModuleState[] values() -> values
com.android.camera.burst.BurstTakerImpl -> com.android.camera.burst.BurstTakerImpl:
    71:78:void <init>(com.android.camera.one.v2.commands.CameraCommandExecutor,com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,com.android.camera.one.v2.sharedimagereader.ManagedImageReader,android.view.Surface,java.lang.Runnable,int) -> <init>
    84:94:void startBurst(com.android.camera.burst.EvictionHandler,com.android.camera.burst.BurstController) -> startBurst
    99:104:void stopBurst() -> stopBurst
com.android.camera.burst.RingBuffer -> com.android.camera.burst.RingBuffer:
    35:45:void <init>(int,com.android.camera.burst.EvictionHandler) -> <init>
    99:100:void addImage(com.android.camera.one.v2.camera2proxy.ImageProxy) -> addImage
    87:91:void close() -> close
    74:79:java.util.List getAndRemoveAllImages() -> getAndRemoveAllImages
    54:68:void insertImage(com.android.camera.one.v2.camera2proxy.ImageProxy) -> insertImage
    94:96:void removeAndCloseImage(long) -> removeAndCloseImage
com.android.camera.burst.SurfaceTextureContainer -> com.android.camera.burst.SurfaceTextureContainer:
    32:34:void <init>(android.graphics.SurfaceTexture) -> <init>
    47:47:void close() -> close
    42:42:android.view.Surface getSurface() -> getSurface
    38:38:android.graphics.SurfaceTexture getSurfaceTexture() -> getSurfaceTexture
com.android.camera.burst.ToastingBurstFacadeDecorator -> com.android.camera.burst.ToastingBurstFacadeDecorator:
    67:69:void <init>(com.android.camera.burst.BurstFacade,com.android.camera.burst.ToastingBurstFacadeDecorator$BurstToaster) -> <init>
    104:104:android.view.Surface getInputSurface() -> getInputSurface
    94:94:void initialize(android.graphics.SurfaceTexture) -> initialize
    99:99:void release() -> release
    109:109:void setBurstTaker(com.android.camera.burst.BurstTaker) -> setBurstTaker
    75:76:void startBurst(com.android.camera.session.CaptureSession$CaptureSessionCreator,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.one.OneCamera$Facing,int) -> startBurst
    83:87:boolean stopBurst() -> stopBurst
com.android.camera.burst.ToastingBurstFacadeDecorator$BurstToaster -> com.android.camera.burst.ToastingBurstFacadeDecorator$BurstToaster:
    40:41:void <init>(android.content.Context) -> <init>
    45:45:void showToastBurstStarted() -> showToastBurstStarted
    49:49:void showToastBurstStopped() -> showToastBurstStopped
com.android.camera.captureintent.CaptureIntentConfig -> com.android.camera.captureintent.CaptureIntentConfig:
    30:30:void <clinit>() -> <clinit>
com.android.camera.captureintent.CaptureIntentModule -> com.android.camera.captureintent.CaptureIntentModule:
    66:66:void <clinit>() -> <clinit>
    81:249:void <init>(com.android.camera.app.AppController,android.content.Intent,java.lang.String) -> <init>
    65:65:com.android.camera.captureintent.stateful.StateMachine access$000(com.android.camera.captureintent.CaptureIntentModule) -> access$000
    209:210:java.lang.String getPeekAccessibilityString() -> getPeekAccessibilityString
    134:140:void init(com.android.camera.CameraActivity,boolean,boolean) -> init
    218:218:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    233:233:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    123:123:void onShutterButtonClick() -> onShutterButtonClick
    118:118:void onShutterCoordinate(com.android.camera.ui.TouchCoordinate) -> onShutterCoordinate
    157:159:void pause() -> pause
    151:152:void resume() -> resume
com.android.camera.captureintent.CaptureIntentModule$1 -> com.android.camera.captureintent.CaptureIntentModule$1:
    140:140:void <init>(com.android.camera.captureintent.CaptureIntentModule) -> <init>
    143:143:void onClick(android.view.View) -> onClick
com.android.camera.captureintent.CaptureIntentModule$2 -> com.android.camera.captureintent.CaptureIntentModule$2:
    241:241:void <init>(com.android.camera.captureintent.CaptureIntentModule) -> <init>
    244:244:void onZoomRatioChanged(float) -> onZoomRatioChanged
com.android.camera.captureintent.CaptureIntentModule$3 -> com.android.camera.captureintent.CaptureIntentModule$3:
    249:249:void <init>(com.android.camera.captureintent.CaptureIntentModule) -> <init>
    271:271:android.view.GestureDetector$OnGestureListener getGestureListener() -> getGestureListener
    253:254:void onPreviewLayoutChanged(android.view.View,int,int,int,int,int,int,int,int) -> onPreviewLayoutChanged
    289:289:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    294:294:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    305:305:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    259:259:boolean shouldAutoAdjustTransformMatrixOnLayout() -> shouldAutoAdjustTransformMatrixOnLayout
com.android.camera.captureintent.CaptureIntentModule$3$1 -> com.android.camera.captureintent.CaptureIntentModule$3$1:
    271:271:void <init>(com.android.camera.captureintent.CaptureIntentModule$3) -> <init>
    274:275:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.android.camera.captureintent.CaptureIntentModuleUI -> com.android.camera.captureintent.CaptureIntentModuleUI:
    62:276:void <init>(com.android.camera.app.CameraAppUI,android.view.View,com.android.camera.captureintent.CaptureIntentModuleUI$Listener) -> <init>
    43:43:android.graphics.RectF access$002(com.android.camera.captureintent.CaptureIntentModuleUI,android.graphics.RectF) -> access$002
    43:43:com.android.camera.ui.CountDownView access$100(com.android.camera.captureintent.CaptureIntentModuleUI) -> access$100
    43:43:com.android.camera.ui.ProgressOverlay access$200(com.android.camera.captureintent.CaptureIntentModuleUI) -> access$200
    43:43:android.widget.ImageView access$300(com.android.camera.captureintent.CaptureIntentModuleUI) -> access$300
    43:43:com.android.camera.captureintent.CaptureIntentModuleUI$Listener access$400(com.android.camera.captureintent.CaptureIntentModuleUI) -> access$400
    131:132:void applyModuleSpecs(com.android.camera.hardware.HardwareSpec,com.android.camera.app.CameraAppUI$BottomBarUISpec) -> applyModuleSpecs
    226:226:void cancelCountDown() -> cancelCountDown
    271:272:void freezeScreenUntilPreviewReady() -> freezeScreenUntilPreviewReady
    198:198:com.android.camera.ui.focus.FocusRing getFocusRing() -> getFocusRing
    112:112:android.graphics.RectF getPreviewRect() -> getPreviewRect
    119:119:com.android.camera.util.Size getPreviewSurfaceSize() -> getPreviewSurfaceSize
    193:194:void initializeZoom(float) -> initializeZoom
    152:153:void onModulePaused() -> onModulePaused
    139:145:void onModuleResumed() -> onModuleResumed
    182:183:void onPreviewStarted() -> onPreviewStarted
    233:233:void setCountdownFinishedListener(com.android.camera.ui.CountDownView$OnCountDownStatusListener) -> setCountdownFinishedListener
    202:203:void setShutterButtonEnabled(boolean) -> setShutterButtonEnabled
    257:267:void showPictureCaptureUI() -> showPictureCaptureUI
    242:250:void showPictureReviewUI(android.graphics.Bitmap) -> showPictureReviewUI
    217:219:void startCountdown(int) -> startCountdown
    207:208:void startFlashAnimation(boolean) -> startFlashAnimation
    174:175:void updatePreviewAspectRatio(float) -> updatePreviewAspectRatio
    162:163:void updatePreviewTransform(android.graphics.Matrix) -> updatePreviewTransform
com.android.camera.captureintent.CaptureIntentModuleUI$1 -> com.android.camera.captureintent.CaptureIntentModuleUI$1:
    63:63:void <init>(com.android.camera.captureintent.CaptureIntentModuleUI) -> <init>
    66:82:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
com.android.camera.captureintent.CaptureIntentModuleUI$2 -> com.android.camera.captureintent.CaptureIntentModuleUI$2:
    277:277:void <init>(com.android.camera.captureintent.CaptureIntentModuleUI) -> <init>
    280:280:void onZoomValueChanged(float) -> onZoomValueChanged
com.android.camera.captureintent.CaptureIntentSession -> com.android.camera.captureintent.CaptureIntentSession:
    45:45:void <clinit>() -> <clinit>
    49:76:void <init>(java.lang.String,android.location.Location,com.android.camera.session.CaptureSessionManager,com.android.camera.session.SessionNotifier) -> <init>
    149:149:void cancel() -> cancel
    193:193:void finishWithFailure(int,boolean) -> finishWithFailure
    213:213:com.android.camera.stats.CaptureSessionStatsCollector getCollector() -> getCollector
    86:86:android.location.Location getLocation() -> getLocation
    97:97:int getProgress() -> getProgress
    107:107:int getProgressMessageId() -> getProgressMessageId
    81:81:java.lang.String getTitle() -> getTitle
    183:183:android.net.Uri getUri() -> getUri
    154:163:com.google.common.util.concurrent.ListenableFuture saveAndFinish(byte[],int,int,int,com.android.camera.exif.ExifInterface) -> saveAndFinish
    103:103:void setProgress(int) -> setProgress
    112:112:void setProgressMessage(int) -> setProgressMessage
    126:127:void startEmpty(com.android.camera.session.CaptureSession$ImageLifecycleListener,com.android.camera.util.Size) -> startEmpty
    132:132:void startSession(com.android.camera.session.CaptureSession$ImageLifecycleListener,android.graphics.Bitmap,int) -> startSession
    116:116:void updateThumbnail(android.graphics.Bitmap) -> updateThumbnail
com.android.camera.captureintent.CaptureIntentSessionFactory -> com.android.camera.captureintent.CaptureIntentSessionFactory:
    27:27:void <init>() -> <init>
    34:34:com.android.camera.session.CaptureSession createNewSession(com.android.camera.session.CaptureSessionManager,com.android.camera.session.SessionNotifier,java.lang.String,long,android.location.Location) -> createNewSession
com.android.camera.captureintent.PictureDecoder -> com.android.camera.captureintent.PictureDecoder:
    36:53:android.graphics.Bitmap decode(byte[],int,int,boolean) -> decode
com.android.camera.captureintent.PreviewTransformCalculator -> com.android.camera.captureintent.PreviewTransformCalculator:
    28:28:void <clinit>() -> <clinit>
    32:33:void <init>(com.android.camera.app.OrientationManager) -> <init>
    46:100:android.graphics.Matrix toTransformMatrix(com.android.camera.util.Size,com.android.camera.util.Size) -> toTransformMatrix
com.android.camera.captureintent.event.EventCameraBusy -> com.android.camera.captureintent.event.EventCameraBusy:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventCameraQuickExpose -> com.android.camera.captureintent.event.EventCameraQuickExpose:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventCameraReady -> com.android.camera.captureintent.event.EventCameraReady:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventClickOnCameraKey -> com.android.camera.captureintent.event.EventClickOnCameraKey:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventFastPictureBitmapAvailable -> com.android.camera.captureintent.event.EventFastPictureBitmapAvailable:
    26:27:void <init>(android.graphics.Bitmap) -> <init>
    31:31:android.graphics.Bitmap getThumbnailBitmap() -> getThumbnailBitmap
com.android.camera.captureintent.event.EventOnOpenCameraFailed -> com.android.camera.captureintent.event.EventOnOpenCameraFailed:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventOnOpenCameraSucceeded -> com.android.camera.captureintent.event.EventOnOpenCameraSucceeded:
    27:28:void <init>(com.android.camera.one.OneCamera) -> <init>
    32:32:com.android.camera.one.OneCamera getCamera() -> getCamera
com.android.camera.captureintent.event.EventOnStartPreviewFailed -> com.android.camera.captureintent.event.EventOnStartPreviewFailed:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventOnStartPreviewSucceeded -> com.android.camera.captureintent.event.EventOnStartPreviewSucceeded:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventOnSurfaceTextureAvailable -> com.android.camera.captureintent.event.EventOnSurfaceTextureAvailable:
    26:27:void <init>(android.graphics.SurfaceTexture) -> <init>
    31:31:android.graphics.SurfaceTexture getSurfaceTexture() -> getSurfaceTexture
com.android.camera.captureintent.event.EventOnSurfaceTextureDestroyed -> com.android.camera.captureintent.event.EventOnSurfaceTextureDestroyed:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventOnSurfaceTextureUpdated -> com.android.camera.captureintent.event.EventOnSurfaceTextureUpdated:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventOnTextureViewLayoutChanged -> com.android.camera.captureintent.event.EventOnTextureViewLayoutChanged:
    25:26:void <init>(com.android.camera.util.Size) -> <init>
    30:30:com.android.camera.util.Size getLayoutSize() -> getLayoutSize
com.android.camera.captureintent.event.EventPause -> com.android.camera.captureintent.event.EventPause:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventPictureCompressed -> com.android.camera.captureintent.event.EventPictureCompressed:
    25:27:void <init>(byte[],int) -> <init>
    35:35:int getOrientation() -> getOrientation
    31:31:byte[] getPictureData() -> getPictureData
com.android.camera.captureintent.event.EventPictureDecoded -> com.android.camera.captureintent.event.EventPictureDecoded:
    27:29:void <init>(android.graphics.Bitmap,byte[]) -> <init>
    33:33:android.graphics.Bitmap getPictureBitmap() -> getPictureBitmap
    37:37:byte[] getPictureData() -> getPictureData
com.android.camera.captureintent.event.EventResume -> com.android.camera.captureintent.event.EventResume:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventTapOnCancelIntentButton -> com.android.camera.captureintent.event.EventTapOnCancelIntentButton:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventTapOnCancelShutterButton -> com.android.camera.captureintent.event.EventTapOnCancelShutterButton:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventTapOnConfirmPhotoButton -> com.android.camera.captureintent.event.EventTapOnConfirmPhotoButton:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventTapOnPreview -> com.android.camera.captureintent.event.EventTapOnPreview:
    26:27:void <init>(android.graphics.Point) -> <init>
    31:31:android.graphics.Point getTapPoint() -> getTapPoint
com.android.camera.captureintent.event.EventTapOnRetakePhotoButton -> com.android.camera.captureintent.event.EventTapOnRetakePhotoButton:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventTapOnShutterButton -> com.android.camera.captureintent.event.EventTapOnShutterButton:
    25:26:void <init>(com.android.camera.ui.TouchCoordinate) -> <init>
    30:30:com.android.camera.ui.TouchCoordinate getTouchCoordinate() -> getTouchCoordinate
com.android.camera.captureintent.event.EventTapOnSwitchCameraButton -> com.android.camera.captureintent.event.EventTapOnSwitchCameraButton:
    21:21:void <init>() -> <init>
com.android.camera.captureintent.event.EventTimerCountDownToZero -> com.android.camera.captureintent.event.EventTimerCountDownToZero:
    25:26:void <init>(com.android.camera.captureintent.resource.ResourceCaptureTools$CaptureLoggingInfo) -> <init>
    30:30:com.android.camera.captureintent.resource.ResourceCaptureTools$CaptureLoggingInfo getCaptureLoggingInfo() -> getCaptureLoggingInfo
com.android.camera.captureintent.event.EventZoomRatioChanged -> com.android.camera.captureintent.event.EventZoomRatioChanged:
    24:25:void <init>(float) -> <init>
    29:29:float getZoomRatio() -> getZoomRatio
com.android.camera.captureintent.resource.ResourceCaptureToolsImpl -> com.android.camera.captureintent.resource.ResourceCaptureToolsImpl:
    44:44:void <clinit>() -> <clinit>
    91:230:void <init>(com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase,com.android.camera.session.CaptureSessionManager,com.android.camera.ui.focus.FocusController,com.android.camera.hardware.HeadingSensor,com.android.camera.SoundPlayer,android.media.MediaActionSound) -> <init>
    110:116:void close() -> close
    63:80:com.android.camera.async.RefCountBase create(com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase) -> create
    136:136:com.android.camera.session.CaptureSessionManager getCaptureSessionManager() -> getCaptureSessionManager
    141:141:com.android.camera.ui.focus.FocusController getFocusController() -> getFocusController
    217:217:com.android.camera.async.MainThread getMainThread() -> getMainThread
    146:146:android.media.MediaActionSound getMediaActionSound() -> getMediaActionSound
    222:222:com.android.camera.captureintent.CaptureIntentModuleUI getModuleUI() -> getModuleUI
    121:121:com.android.camera.async.RefCountBase getResourceConstructed() -> getResourceConstructed
    131:131:com.android.camera.async.RefCountBase getResourceOpenedCamera() -> getResourceOpenedCamera
    126:126:com.android.camera.async.RefCountBase getResourceSurfaceTexture() -> getResourceSurfaceTexture
    209:211:void playCountDownSound(int) -> playCountDownSound
    153:203:void takePictureNow(com.android.camera.one.OneCamera$PictureCallback,com.android.camera.captureintent.resource.ResourceCaptureTools$CaptureLoggingInfo) -> takePictureNow
com.android.camera.captureintent.resource.ResourceCaptureToolsImpl$1 -> com.android.camera.captureintent.resource.ResourceCaptureToolsImpl$1:
    160:160:void <init>(com.android.camera.captureintent.resource.ResourceCaptureToolsImpl,com.android.camera.captureintent.resource.ResourceConstructed) -> <init>
    163:163:void run() -> run
com.android.camera.captureintent.resource.ResourceCaptureToolsImpl$2 -> com.android.camera.captureintent.resource.ResourceCaptureToolsImpl$2:
    231:231:void <init>(com.android.camera.captureintent.resource.ResourceCaptureToolsImpl) -> <init>
com.android.camera.captureintent.resource.ResourceConstructedImpl -> com.android.camera.captureintent.resource.ResourceConstructedImpl:
    103:123:void <init>(android.content.Intent,com.android.camera.captureintent.CaptureIntentModuleUI,java.lang.String,com.android.camera.async.MainThread,android.content.Context,com.android.camera.one.OneCameraOpener,com.android.camera.one.OneCameraManager,com.android.camera.app.LocationManager,com.android.camera.app.OrientationManager,com.android.camera.settings.SettingsManager,com.android.camera.burst.BurstFacade,com.android.camera.settings.CameraFacingSetting,com.android.camera.settings.ResolutionSetting,com.android.camera.app.AppController,com.android.camera.FatalErrorHandler) -> <init>
    128:128:void close() -> close
    78:82:com.android.camera.async.RefCountBase create(android.content.Intent,com.android.camera.captureintent.CaptureIntentModuleUI,java.lang.String,com.android.camera.async.MainThread,android.content.Context,com.android.camera.one.OneCameraOpener,com.android.camera.one.OneCameraManager,com.android.camera.app.LocationManager,com.android.camera.app.OrientationManager,com.android.camera.settings.SettingsManager,com.android.camera.burst.BurstFacade,com.android.camera.app.AppController,com.android.camera.FatalErrorHandler) -> create
    208:208:com.android.camera.app.AppController getAppController() -> getAppController
    183:183:com.android.camera.burst.BurstFacade getBurstFacade() -> getBurstFacade
    188:188:com.android.camera.settings.CameraFacingSetting getCameraFacingSetting() -> getCameraFacingSetting
    198:198:android.os.Handler getCameraHandler() -> getCameraHandler
    153:153:android.content.Context getContext() -> getContext
    213:213:com.android.camera.FatalErrorHandler getFatalErrorHandler() -> getFatalErrorHandler
    133:133:android.content.Intent getIntent() -> getIntent
    168:168:com.android.camera.app.LocationManager getLocationManager() -> getLocationManager
    148:148:com.android.camera.async.MainThread getMainThread() -> getMainThread
    138:138:com.android.camera.captureintent.CaptureIntentModuleUI getModuleUI() -> getModuleUI
    158:158:com.android.camera.one.OneCameraManager getOneCameraManager() -> getOneCameraManager
    163:163:com.android.camera.one.OneCameraOpener getOneCameraOpener() -> getOneCameraOpener
    173:173:com.android.camera.app.OrientationManager getOrientationManager() -> getOrientationManager
    193:193:com.android.camera.settings.ResolutionSetting getResolutionSetting() -> getResolutionSetting
    178:178:com.android.camera.settings.SettingsManager getSettingsManager() -> getSettingsManager
    203:203:com.android.camera.SoundPlayer getSoundPlayer() -> getSoundPlayer
com.android.camera.captureintent.resource.ResourceOpenedCameraImpl -> com.android.camera.captureintent.resource.ResourceOpenedCameraImpl:
    31:31:void <clinit>() -> <clinit>
    74:81:void <init>(com.android.camera.one.OneCamera,com.android.camera.device.CameraId,com.android.camera.one.OneCamera$Facing,com.android.camera.one.OneCameraCharacteristics,com.android.camera.util.Size,com.android.camera.one.OneCameraCaptureSetting) -> <init>
    86:88:void close() -> close
    63:65:com.android.camera.async.RefCountBase create(com.android.camera.one.OneCamera,com.android.camera.device.CameraId,com.android.camera.one.OneCamera$Facing,com.android.camera.one.OneCameraCharacteristics,com.android.camera.util.Size,com.android.camera.one.OneCameraCaptureSetting) -> create
    93:93:com.android.camera.one.OneCamera getCamera() -> getCamera
    108:108:com.android.camera.one.OneCameraCharacteristics getCameraCharacteristics() -> getCameraCharacteristics
    103:103:com.android.camera.one.OneCamera$Facing getCameraFacing() -> getCameraFacing
    98:98:com.android.camera.device.CameraId getCameraId() -> getCameraId
    118:118:com.android.camera.one.OneCameraCaptureSetting getCaptureSetting() -> getCaptureSetting
    113:113:com.android.camera.util.Size getPictureSize() -> getPictureSize
    123:123:float getZoomRatio() -> getZoomRatio
    128:129:void setZoomRatio(float) -> setZoomRatio
    135:135:void startPreview(android.view.Surface,com.android.camera.one.OneCamera$CaptureReadyCallback) -> startPreview
    140:140:void triggerFocusAndMeterAtPoint(android.graphics.PointF) -> triggerFocusAndMeterAtPoint
com.android.camera.captureintent.resource.ResourceSurfaceTextureImpl -> com.android.camera.captureintent.resource.ResourceSurfaceTextureImpl:
    33:33:void <clinit>() -> <clinit>
    67:74:void <init>(com.android.camera.async.RefCountBase,android.graphics.SurfaceTexture,com.android.camera.captureintent.PreviewTransformCalculator) -> <init>
    156:156:void close() -> close
    57:61:com.android.camera.async.RefCountBase create(com.android.camera.async.RefCountBase,android.graphics.SurfaceTexture) -> create
    83:83:android.view.Surface createPreviewSurface() -> createPreviewSurface
    78:78:com.android.camera.async.RefCountBase getResourceConstructed() -> getResourceConstructed
    120:125:void setPreviewLayoutSize(com.android.camera.util.Size) -> setPreviewLayoutSize
    99:115:void setPreviewSize(com.android.camera.util.Size) -> setPreviewSize
    139:151:void updatePreviewTransform() -> updatePreviewTransform
    134:134:void updateSurfaceTextureDefaultBufferSize(com.android.camera.util.Size) -> updateSurfaceTextureDefaultBufferSize
com.android.camera.captureintent.resource.ResourceSurfaceTextureImpl$1 -> com.android.camera.captureintent.resource.ResourceSurfaceTextureImpl$1:
    106:106:void <init>(com.android.camera.captureintent.resource.ResourceSurfaceTextureImpl) -> <init>
    109:109:void run() -> run
com.android.camera.captureintent.resource.ResourceSurfaceTextureNexus4Impl -> com.android.camera.captureintent.resource.ResourceSurfaceTextureNexus4Impl:
    43:43:void <clinit>() -> <clinit>
    63:63:void <init>(com.android.camera.async.RefCountBase,android.graphics.SurfaceTexture,com.android.camera.captureintent.PreviewTransformCalculator) -> <init>
    52:56:com.android.camera.async.RefCountBase create(com.android.camera.async.RefCountBase,android.graphics.SurfaceTexture) -> create
    68:83:void setPreviewSize(com.android.camera.util.Size) -> setPreviewSize
com.android.camera.captureintent.resource.ResourceSurfaceTextureNexus4Impl$1 -> com.android.camera.captureintent.resource.ResourceSurfaceTextureNexus4Impl$1:
    71:71:void <init>(com.android.camera.captureintent.resource.ResourceSurfaceTextureNexus4Impl,com.android.camera.util.AspectRatio) -> <init>
    74:75:void run() -> run
com.android.camera.captureintent.state.StateBackground -> com.android.camera.captureintent.state.StateBackground:
    56:59:void <init>(com.android.camera.captureintent.stateful.StateMachine,com.android.camera.async.RefCountBase) -> <init>
    64:67:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase) -> <init>
    38:38:com.android.camera.async.RefCountBase access$000(com.android.camera.captureintent.state.StateBackground) -> access$000
    44:44:com.android.camera.captureintent.state.StateBackground create(com.android.camera.captureintent.stateful.StateMachine,com.android.camera.async.RefCountBase) -> create
    50:50:com.android.camera.captureintent.state.StateBackground from(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase) -> from
    111:111:com.google.common.base.Optional onEnter() -> onEnter
    116:116:void onLeave() -> onLeave
    72:106:void registerEventHandlers() -> registerEventHandlers
com.android.camera.captureintent.state.StateBackground$1 -> com.android.camera.captureintent.state.StateBackground$1:
    72:72:void <init>(com.android.camera.captureintent.state.StateBackground) -> <init>
    72:72:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    75:76:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventResume) -> processEvent
com.android.camera.captureintent.state.StateBackground$2 -> com.android.camera.captureintent.state.StateBackground$2:
    83:83:void <init>(com.android.camera.captureintent.state.StateBackground) -> <init>
    83:83:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    87:103:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnSurfaceTextureAvailable) -> processEvent
com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture -> com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture:
    58:63:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase) -> <init>
    38:38:com.android.camera.async.RefCountBase access$000(com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture) -> access$000
    38:38:com.android.camera.async.RefCountBase access$100(com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture) -> access$100
    50:50:com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture from(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase) -> from
    106:106:com.android.camera.async.RefCountBase getResourceSurfaceTexture() -> getResourceSurfaceTexture
    95:95:com.google.common.base.Optional onEnter() -> onEnter
    100:101:void onLeave() -> onLeave
    68:88:void registerEventHandlers() -> registerEventHandlers
com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture$1 -> com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture$1:
    68:68:void <init>(com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture) -> <init>
    68:68:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    71:74:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventResume) -> processEvent
com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture$2 -> com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture$2:
    81:81:void <init>(com.android.camera.captureintent.state.StateBackgroundWithSurfaceTexture) -> <init>
    81:81:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    84:85:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnSurfaceTextureDestroyed) -> processEvent
com.android.camera.captureintent.state.StateFatal -> com.android.camera.captureintent.state.StateFatal:
    43:45:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase) -> <init>
    34:34:com.android.camera.async.RefCountBase access$000(com.android.camera.captureintent.state.StateFatal) -> access$000
    39:39:com.android.camera.captureintent.state.StateFatal from(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase) -> from
    50:56:com.google.common.base.Optional onEnter() -> onEnter
com.android.camera.captureintent.state.StateFatal$1 -> com.android.camera.captureintent.state.StateFatal$1:
    50:50:void <init>(com.android.camera.captureintent.state.StateFatal) -> <init>
    53:53:void run() -> run
com.android.camera.captureintent.state.StateForeground -> com.android.camera.captureintent.state.StateForeground:
    50:53:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase) -> <init>
    37:37:com.android.camera.async.RefCountBase access$000(com.android.camera.captureintent.state.StateForeground) -> access$000
    44:44:com.android.camera.captureintent.state.StateForeground from(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase) -> from
    98:98:com.google.common.base.Optional onEnter() -> onEnter
    103:103:void onLeave() -> onLeave
    58:92:void registerEventHandlers() -> registerEventHandlers
com.android.camera.captureintent.state.StateForeground$1 -> com.android.camera.captureintent.state.StateForeground$1:
    58:58:void <init>(com.android.camera.captureintent.state.StateForeground) -> <init>
    58:58:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    61:62:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventPause) -> processEvent
com.android.camera.captureintent.state.StateForeground$2 -> com.android.camera.captureintent.state.StateForeground$2:
    69:69:void <init>(com.android.camera.captureintent.state.StateForeground) -> <init>
    69:69:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    73:89:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnSurfaceTextureAvailable) -> processEvent
com.android.camera.captureintent.state.StateForegroundWithSurfaceTexture -> com.android.camera.captureintent.state.StateForegroundWithSurfaceTexture:
    53:57:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase) -> <init>
    43:43:com.android.camera.captureintent.state.StateForegroundWithSurfaceTexture from(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase) -> from
    88:88:com.android.camera.async.RefCountBase getResourceSurfaceTexture() -> getResourceSurfaceTexture
    64:76:com.google.common.base.Optional onEnter() -> onEnter
    82:83:void onLeave() -> onLeave
com.android.camera.captureintent.state.StateIntentCompleted -> com.android.camera.captureintent.state.StateIntentCompleted:
    55:58:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.google.common.base.Optional) -> <init>
    32:32:com.google.common.base.Optional access$000(com.android.camera.captureintent.state.StateIntentCompleted) -> access$000
    40:41:com.android.camera.captureintent.state.StateIntentCompleted from(com.android.camera.captureintent.state.StateSavingPicture,com.android.camera.async.RefCountBase,android.content.Intent) -> from
    47:48:com.android.camera.captureintent.state.StateIntentCompleted from(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase) -> from
    63:74:com.google.common.base.Optional onEnter() -> onEnter
com.android.camera.captureintent.state.StateIntentCompleted$1 -> com.android.camera.captureintent.state.StateIntentCompleted$1:
    64:64:void <init>(com.android.camera.captureintent.state.StateIntentCompleted,com.android.camera.app.AppController) -> <init>
    67:70:void run() -> run
com.android.camera.captureintent.state.StateOpeningCamera -> com.android.camera.captureintent.state.StateOpeningCamera:
    57:57:void <clinit>() -> <clinit>
    74:118:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase,com.android.camera.one.OneCamera$Facing,com.android.camera.device.CameraId,com.android.camera.one.OneCameraCharacteristics) -> <init>
    56:56:boolean access$000(com.android.camera.captureintent.state.StateOpeningCamera) -> access$000
    56:56:boolean access$002(com.android.camera.captureintent.state.StateOpeningCamera,boolean) -> access$002
    56:56:com.android.camera.async.RefCountBase access$100(com.android.camera.captureintent.state.StateOpeningCamera) -> access$100
    56:56:com.android.camera.debug.Log$Tag access$1000() -> access$1000
    56:56:java.lang.String access$1100(com.android.camera.captureintent.state.StateOpeningCamera) -> access$1100
    56:56:com.android.camera.async.RefCountBase access$200(com.android.camera.captureintent.state.StateOpeningCamera) -> access$200
    56:56:com.android.camera.hardware.HardwareSpec access$300(com.android.camera.captureintent.state.StateOpeningCamera) -> access$300
    56:56:com.android.camera.app.CameraAppUI$BottomBarUISpec access$400(com.android.camera.captureintent.state.StateOpeningCamera) -> access$400
    56:56:com.android.camera.device.CameraId access$500(com.android.camera.captureintent.state.StateOpeningCamera) -> access$500
    56:56:com.android.camera.one.OneCamera$Facing access$600(com.android.camera.captureintent.state.StateOpeningCamera) -> access$600
    56:56:com.android.camera.one.OneCameraCharacteristics access$700(com.android.camera.captureintent.state.StateOpeningCamera) -> access$700
    56:56:com.android.camera.util.Size access$800(com.android.camera.captureintent.state.StateOpeningCamera) -> access$800
    56:56:com.android.camera.one.OneCameraCaptureSetting access$900(com.android.camera.captureintent.state.StateOpeningCamera) -> access$900
    98:98:com.android.camera.captureintent.state.StateOpeningCamera from(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase,com.android.camera.one.OneCamera$Facing,com.android.camera.device.CameraId,com.android.camera.one.OneCameraCharacteristics) -> from
    255:311:com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec() -> getBottomBarSpec
    230:230:com.android.camera.hardware.HardwareSpec getHardwareSpec() -> getHardwareSpec
    226:226:boolean isPaused() -> isPaused
    184:215:com.google.common.base.Optional onEnter() -> onEnter
    220:221:void onLeave() -> onLeave
    123:179:void registerEventHandlers() -> registerEventHandlers
com.android.camera.captureintent.state.StateOpeningCamera$1 -> com.android.camera.captureintent.state.StateOpeningCamera$1:
    74:74:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    87:87:void onCameraOpened(com.android.camera.one.OneCamera) -> onCameraOpened
    77:77:void onFailure() -> onFailure
com.android.camera.captureintent.state.StateOpeningCamera$10 -> com.android.camera.captureintent.state.StateOpeningCamera$10:
    311:311:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    314:314:void onClick(android.view.View) -> onClick
com.android.camera.captureintent.state.StateOpeningCamera$2 -> com.android.camera.captureintent.state.StateOpeningCamera$2:
    123:123:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    123:123:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    126:127:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventPause) -> processEvent
com.android.camera.captureintent.state.StateOpeningCamera$3 -> com.android.camera.captureintent.state.StateOpeningCamera$3:
    134:134:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    134:134:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    137:164:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnOpenCameraSucceeded) -> processEvent
com.android.camera.captureintent.state.StateOpeningCamera$3$1 -> com.android.camera.captureintent.state.StateOpeningCamera$3$1:
    147:147:void <init>(com.android.camera.captureintent.state.StateOpeningCamera$3) -> <init>
    150:151:void run() -> run
com.android.camera.captureintent.state.StateOpeningCamera$4 -> com.android.camera.captureintent.state.StateOpeningCamera$4:
    171:171:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    171:171:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    174:176:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnOpenCameraFailed) -> processEvent
com.android.camera.captureintent.state.StateOpeningCamera$5 -> com.android.camera.captureintent.state.StateOpeningCamera$5:
    230:230:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    249:249:boolean isFlashSupported() -> isFlashSupported
    233:234:boolean isFrontCameraSupported() -> isFrontCameraSupported
com.android.camera.captureintent.state.StateOpeningCamera$6 -> com.android.camera.captureintent.state.StateOpeningCamera$6:
    258:258:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    261:261:void onStateChanged(int) -> onStateChanged
com.android.camera.captureintent.state.StateOpeningCamera$7 -> com.android.camera.captureintent.state.StateOpeningCamera$7:
    287:287:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    290:291:void setExposure(int) -> setExposure
com.android.camera.captureintent.state.StateOpeningCamera$8 -> com.android.camera.captureintent.state.StateOpeningCamera$8:
    297:297:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    300:300:void onClick(android.view.View) -> onClick
com.android.camera.captureintent.state.StateOpeningCamera$9 -> com.android.camera.captureintent.state.StateOpeningCamera$9:
    304:304:void <init>(com.android.camera.captureintent.state.StateOpeningCamera) -> <init>
    307:307:void onClick(android.view.View) -> onClick
com.android.camera.captureintent.state.StateReadyForCapture -> com.android.camera.captureintent.state.StateReadyForCapture:
    82:82:void <clinit>() -> <clinit>
    111:647:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase) -> <init>
    124:647:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase) -> <init>
    81:81:com.android.camera.async.RefCountBase access$000(com.android.camera.captureintent.state.StateReadyForCapture) -> access$000
    81:81:boolean access$100(com.android.camera.captureintent.state.StateReadyForCapture) -> access$100
    81:81:boolean access$102(com.android.camera.captureintent.state.StateReadyForCapture,boolean) -> access$102
    81:81:void access$200(com.android.camera.captureintent.state.StateReadyForCapture,com.android.camera.ui.TouchCoordinate) -> access$200
    81:81:boolean access$300(com.android.camera.captureintent.state.StateReadyForCapture) -> access$300
    81:81:boolean access$302(com.android.camera.captureintent.state.StateReadyForCapture,boolean) -> access$302
    81:81:void access$400(com.android.camera.captureintent.state.StateReadyForCapture) -> access$400
    81:81:void access$500(com.android.camera.captureintent.state.StateReadyForCapture,com.android.camera.captureintent.resource.ResourceCaptureTools$CaptureLoggingInfo) -> access$500
    81:81:boolean access$600(com.android.camera.captureintent.state.StateReadyForCapture) -> access$600
    81:81:boolean access$602(com.android.camera.captureintent.state.StateReadyForCapture,boolean) -> access$602
    81:81:boolean access$700(com.android.camera.captureintent.state.StateReadyForCapture) -> access$700
    81:81:boolean access$702(com.android.camera.captureintent.state.StateReadyForCapture,boolean) -> access$702
    81:81:void access$800(com.android.camera.captureintent.state.StateReadyForCapture,com.android.camera.one.OneCamera$AutoFocusState) -> access$800
    194:195:void cancelCountDown() -> cancelCountDown
    96:96:com.android.camera.captureintent.state.StateReadyForCapture from(com.android.camera.captureintent.state.StateStartingPreview,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase) -> from
    103:103:com.android.camera.captureintent.state.StateReadyForCapture from(com.android.camera.captureintent.state.StateReviewingPicture,com.android.camera.async.RefCountBase) -> from
    513:531:com.google.common.base.Optional onEnter() -> onEnter
    548:561:void onFocusStateUpdated(com.android.camera.one.OneCamera$AutoFocusState) -> onFocusStateUpdated
    536:544:void onLeave() -> onLeave
    211:507:void registerEventHandlers() -> registerEventHandlers
    166:167:void startCountDown(int,com.android.camera.captureintent.resource.ResourceCaptureTools$CaptureLoggingInfo) -> startCountDown
    135:159:void takePicture(com.android.camera.ui.TouchCoordinate) -> takePicture
    205:206:void takePictureNow(com.android.camera.captureintent.resource.ResourceCaptureTools$CaptureLoggingInfo) -> takePictureNow
com.android.camera.captureintent.state.StateReadyForCapture$1 -> com.android.camera.captureintent.state.StateReadyForCapture$1:
    142:142:void <init>(com.android.camera.captureintent.state.StateReadyForCapture,com.android.camera.ui.TouchCoordinate,int) -> <init>
    150:150:int getCountDownDuration() -> getCountDownDuration
    145:145:com.android.camera.ui.TouchCoordinate getTouchPointInsideShutterButton() -> getTouchPointInsideShutterButton
com.android.camera.captureintent.state.StateReadyForCapture$10 -> com.android.camera.captureintent.state.StateReadyForCapture$10:
    308:308:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    308:308:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    311:339:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventTapOnSwitchCameraButton) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$10$1 -> com.android.camera.captureintent.state.StateReadyForCapture$10$1:
    315:315:void <init>(com.android.camera.captureintent.state.StateReadyForCapture$10,com.android.camera.captureintent.resource.ResourceConstructed) -> <init>
    318:318:void run() -> run
com.android.camera.captureintent.state.StateReadyForCapture$11 -> com.android.camera.captureintent.state.StateReadyForCapture$11:
    348:348:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    348:348:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    351:383:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventTapOnPreview) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$12 -> com.android.camera.captureintent.state.StateReadyForCapture$12:
    390:390:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    390:390:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    393:395:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventZoomRatioChanged) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$13 -> com.android.camera.captureintent.state.StateReadyForCapture$13:
    402:402:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    402:402:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    405:425:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventPictureCompressed) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$13$1 -> com.android.camera.captureintent.state.StateReadyForCapture$13$1:
    412:412:void <init>(com.android.camera.captureintent.state.StateReadyForCapture$13,byte[],int) -> <init>
    415:420:void run() -> run
com.android.camera.captureintent.state.StateReadyForCapture$14 -> com.android.camera.captureintent.state.StateReadyForCapture$14:
    432:432:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    432:432:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    439:446:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventPictureDecoded) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$15 -> com.android.camera.captureintent.state.StateReadyForCapture$15:
    453:453:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    453:453:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    456:461:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventFastPictureBitmapAvailable) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$16 -> com.android.camera.captureintent.state.StateReadyForCapture$16:
    468:468:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    468:468:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    471:493:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventCameraQuickExpose) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$16$1 -> com.android.camera.captureintent.state.StateReadyForCapture$16$1:
    472:472:void <init>(com.android.camera.captureintent.state.StateReadyForCapture$16) -> <init>
    476:488:void run() -> run
com.android.camera.captureintent.state.StateReadyForCapture$17 -> com.android.camera.captureintent.state.StateReadyForCapture$17:
    500:500:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    500:500:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    503:504:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventTapOnCancelShutterButton) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$18 -> com.android.camera.captureintent.state.StateReadyForCapture$18:
    522:522:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    525:528:void run() -> run
com.android.camera.captureintent.state.StateReadyForCapture$19 -> com.android.camera.captureintent.state.StateReadyForCapture$19:
    567:567:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    571:571:void onFocusStatusUpdate(com.android.camera.one.OneCamera$AutoFocusState,long) -> onFocusStatusUpdate
com.android.camera.captureintent.state.StateReadyForCapture$2 -> com.android.camera.captureintent.state.StateReadyForCapture$2:
    167:167:void <init>(com.android.camera.captureintent.state.StateReadyForCapture,com.android.camera.captureintent.resource.ResourceCaptureTools$CaptureLoggingInfo,int) -> <init>
    170:187:void run() -> run
com.android.camera.captureintent.state.StateReadyForCapture$2$1 -> com.android.camera.captureintent.state.StateReadyForCapture$2$1:
    172:172:void <init>(com.android.camera.captureintent.state.StateReadyForCapture$2) -> <init>
    182:182:void onCountDownFinished() -> onCountDownFinished
    176:177:void onRemainingSecondsChanged(int) -> onRemainingSecondsChanged
com.android.camera.captureintent.state.StateReadyForCapture$20 -> com.android.camera.captureintent.state.StateReadyForCapture$20:
    576:576:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    576:576:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    579:586:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventCameraBusy) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$20$1 -> com.android.camera.captureintent.state.StateReadyForCapture$20$1:
    579:579:void <init>(com.android.camera.captureintent.state.StateReadyForCapture$20) -> <init>
    582:582:void run() -> run
com.android.camera.captureintent.state.StateReadyForCapture$21 -> com.android.camera.captureintent.state.StateReadyForCapture$21:
    591:591:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    591:591:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    594:600:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventCameraReady) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$21$1 -> com.android.camera.captureintent.state.StateReadyForCapture$21$1:
    594:594:void <init>(com.android.camera.captureintent.state.StateReadyForCapture$21) -> <init>
    597:597:void run() -> run
com.android.camera.captureintent.state.StateReadyForCapture$22 -> com.android.camera.captureintent.state.StateReadyForCapture$22:
    605:605:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    613:615:void onReadyStateChanged(boolean) -> onReadyStateChanged
com.android.camera.captureintent.state.StateReadyForCapture$23 -> com.android.camera.captureintent.state.StateReadyForCapture$23:
    620:620:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    623:623:void onQuickExpose() -> onQuickExpose
com.android.camera.captureintent.state.StateReadyForCapture$24 -> com.android.camera.captureintent.state.StateReadyForCapture$24:
    648:648:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    657:657:void onSessionPictureDataUpdate(byte[],int) -> onSessionPictureDataUpdate
    651:651:void onSessionThumbnailUpdate(android.graphics.Bitmap) -> onSessionThumbnailUpdate
com.android.camera.captureintent.state.StateReadyForCapture$25 -> com.android.camera.captureintent.state.StateReadyForCapture$25:
    549:549:void <clinit>() -> <clinit>
com.android.camera.captureintent.state.StateReadyForCapture$3 -> com.android.camera.captureintent.state.StateReadyForCapture$3:
    195:195:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    198:199:void run() -> run
com.android.camera.captureintent.state.StateReadyForCapture$4 -> com.android.camera.captureintent.state.StateReadyForCapture$4:
    211:211:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    211:211:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    214:217:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventPause) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$5 -> com.android.camera.captureintent.state.StateReadyForCapture$5:
    224:224:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    224:224:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    227:240:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnSurfaceTextureUpdated) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$6 -> com.android.camera.captureintent.state.StateReadyForCapture$6:
    247:247:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    247:247:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    250:252:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnTextureViewLayoutChanged) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$7 -> com.android.camera.captureintent.state.StateReadyForCapture$7:
    268:268:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    268:268:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    271:272:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventTapOnShutterButton) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$8 -> com.android.camera.captureintent.state.StateReadyForCapture$8:
    279:279:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    279:279:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    282:287:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventClickOnCameraKey) -> processEvent
com.android.camera.captureintent.state.StateReadyForCapture$9 -> com.android.camera.captureintent.state.StateReadyForCapture$9:
    294:294:void <init>(com.android.camera.captureintent.state.StateReadyForCapture) -> <init>
    294:294:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    297:301:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventTimerCountDownToZero) -> processEvent
com.android.camera.captureintent.state.StateReviewingPicture -> com.android.camera.captureintent.state.StateReviewingPicture:
    49:49:void <clinit>() -> <clinit>
    76:230:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,android.graphics.Bitmap,com.google.common.base.Optional) -> <init>
    48:48:com.android.camera.async.RefCountBase access$000(com.android.camera.captureintent.state.StateReviewingPicture) -> access$000
    48:48:com.google.common.base.Optional access$100(com.android.camera.captureintent.state.StateReviewingPicture) -> access$100
    48:48:com.google.common.base.Optional access$102(com.android.camera.captureintent.state.StateReviewingPicture,com.google.common.base.Optional) -> access$102
    48:48:boolean access$200(com.android.camera.captureintent.state.StateReviewingPicture) -> access$200
    48:48:boolean access$202(com.android.camera.captureintent.state.StateReviewingPicture,boolean) -> access$202
    48:48:boolean access$300(com.android.camera.captureintent.state.StateReviewingPicture) -> access$300
    48:48:void access$400(com.android.camera.captureintent.state.StateReviewingPicture,android.graphics.Bitmap) -> access$400
    48:48:android.graphics.Bitmap access$500(com.android.camera.captureintent.state.StateReviewingPicture) -> access$500
    67:67:com.android.camera.captureintent.state.StateReviewingPicture from(com.android.camera.captureintent.state.StateReadyForCapture,com.android.camera.async.RefCountBase,android.graphics.Bitmap,com.google.common.base.Optional) -> from
    207:210:com.google.common.base.Optional onEnter() -> onEnter
    215:217:void onLeave() -> onLeave
    88:202:void registerEventHandlers() -> registerEventHandlers
    221:222:void showPicture(android.graphics.Bitmap) -> showPicture
com.android.camera.captureintent.state.StateReviewingPicture$1 -> com.android.camera.captureintent.state.StateReviewingPicture$1:
    88:88:void <init>(com.android.camera.captureintent.state.StateReviewingPicture) -> <init>
    88:88:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    91:94:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventPause) -> processEvent
com.android.camera.captureintent.state.StateReviewingPicture$2 -> com.android.camera.captureintent.state.StateReviewingPicture$2:
    101:101:void <init>(com.android.camera.captureintent.state.StateReviewingPicture) -> <init>
    101:101:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    104:106:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnTextureViewLayoutChanged) -> processEvent
com.android.camera.captureintent.state.StateReviewingPicture$3 -> com.android.camera.captureintent.state.StateReviewingPicture$3:
    113:113:void <init>(com.android.camera.captureintent.state.StateReviewingPicture) -> <init>
    113:113:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    116:118:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventTapOnCancelIntentButton) -> processEvent
com.android.camera.captureintent.state.StateReviewingPicture$4 -> com.android.camera.captureintent.state.StateReviewingPicture$4:
    125:125:void <init>(com.android.camera.captureintent.state.StateReviewingPicture) -> <init>
    125:125:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    129:138:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventTapOnConfirmPhotoButton) -> processEvent
com.android.camera.captureintent.state.StateReviewingPicture$5 -> com.android.camera.captureintent.state.StateReviewingPicture$5:
    145:145:void <init>(com.android.camera.captureintent.state.StateReviewingPicture) -> <init>
    145:145:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    148:149:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventTapOnRetakePhotoButton) -> processEvent
com.android.camera.captureintent.state.StateReviewingPicture$6 -> com.android.camera.captureintent.state.StateReviewingPicture$6:
    156:156:void <init>(com.android.camera.captureintent.state.StateReviewingPicture) -> <init>
    156:156:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    160:187:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventPictureCompressed) -> processEvent
com.android.camera.captureintent.state.StateReviewingPicture$6$1 -> com.android.camera.captureintent.state.StateReviewingPicture$6$1:
    173:173:void <init>(com.android.camera.captureintent.state.StateReviewingPicture$6,byte[],int) -> <init>
    176:181:void run() -> run
com.android.camera.captureintent.state.StateReviewingPicture$7 -> com.android.camera.captureintent.state.StateReviewingPicture$7:
    194:194:void <init>(com.android.camera.captureintent.state.StateReviewingPicture) -> <init>
    194:194:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    197:199:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventPictureDecoded) -> processEvent
com.android.camera.captureintent.state.StateReviewingPicture$8 -> com.android.camera.captureintent.state.StateReviewingPicture$8:
    222:222:void <init>(com.android.camera.captureintent.state.StateReviewingPicture) -> <init>
    225:225:void run() -> run
com.android.camera.captureintent.state.StateReviewingPicture$9 -> com.android.camera.captureintent.state.StateReviewingPicture$9:
    231:231:void <init>(com.android.camera.captureintent.state.StateReviewingPicture) -> <init>
    239:239:void onSessionPictureDataUpdate(byte[],int) -> onSessionPictureDataUpdate
com.android.camera.captureintent.state.StateSavingPicture -> com.android.camera.captureintent.state.StateSavingPicture:
    42:42:void <clinit>() -> <clinit>
    58:61:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,byte[]) -> <init>
    51:51:com.android.camera.captureintent.state.StateSavingPicture from(com.android.camera.captureintent.state.StateReviewingPicture,com.android.camera.async.RefCountBase,byte[]) -> from
    74:105:com.google.common.base.Optional onEnter() -> onEnter
    110:110:void onLeave() -> onLeave
com.android.camera.captureintent.state.StateStartingPreview -> com.android.camera.captureintent.state.StateStartingPreview:
    49:49:void <clinit>() -> <clinit>
    87:94:void <init>(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase,com.android.camera.one.OneCamera,com.android.camera.device.CameraId,com.android.camera.one.OneCamera$Facing,com.android.camera.one.OneCameraCharacteristics,com.android.camera.util.Size,com.android.camera.one.OneCameraCaptureSetting) -> <init>
    48:48:com.android.camera.async.RefCountBase access$000(com.android.camera.captureintent.state.StateStartingPreview) -> access$000
    48:48:com.android.camera.async.RefCountBase access$100(com.android.camera.captureintent.state.StateStartingPreview) -> access$100
    48:48:com.android.camera.async.RefCountBase access$200(com.android.camera.captureintent.state.StateStartingPreview) -> access$200
    48:48:com.android.camera.debug.Log$Tag access$300() -> access$300
    65:65:com.android.camera.captureintent.state.StateStartingPreview from(com.android.camera.captureintent.stateful.State,com.android.camera.async.RefCountBase,com.android.camera.async.RefCountBase,com.android.camera.one.OneCamera,com.android.camera.device.CameraId,com.android.camera.one.OneCamera$Facing,com.android.camera.one.OneCameraCharacteristics,com.android.camera.util.Size,com.android.camera.one.OneCameraCaptureSetting) -> from
    159:205:com.google.common.base.Optional onEnter() -> onEnter
    210:212:void onLeave() -> onLeave
    99:151:void registerEventHandlers() -> registerEventHandlers
com.android.camera.captureintent.state.StateStartingPreview$1 -> com.android.camera.captureintent.state.StateStartingPreview$1:
    99:99:void <init>(com.android.camera.captureintent.state.StateStartingPreview) -> <init>
    99:99:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    102:105:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventPause) -> processEvent
com.android.camera.captureintent.state.StateStartingPreview$2 -> com.android.camera.captureintent.state.StateStartingPreview$2:
    112:112:void <init>(com.android.camera.captureintent.state.StateStartingPreview) -> <init>
    112:112:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    115:116:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnTextureViewLayoutChanged) -> processEvent
com.android.camera.captureintent.state.StateStartingPreview$3 -> com.android.camera.captureintent.state.StateStartingPreview$3:
    123:123:void <init>(com.android.camera.captureintent.state.StateStartingPreview) -> <init>
    123:123:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    126:136:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnStartPreviewSucceeded) -> processEvent
com.android.camera.captureintent.state.StateStartingPreview$3$1 -> com.android.camera.captureintent.state.StateStartingPreview$3$1:
    126:126:void <init>(com.android.camera.captureintent.state.StateStartingPreview$3) -> <init>
    129:129:void run() -> run
com.android.camera.captureintent.state.StateStartingPreview$4 -> com.android.camera.captureintent.state.StateStartingPreview$4:
    143:143:void <init>(com.android.camera.captureintent.state.StateStartingPreview) -> <init>
    143:143:com.google.common.base.Optional processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    146:148:com.google.common.base.Optional processEvent(com.android.camera.captureintent.event.EventOnStartPreviewFailed) -> processEvent
com.android.camera.captureintent.state.StateStartingPreview$5 -> com.android.camera.captureintent.state.StateStartingPreview$5:
    189:189:void <init>(com.android.camera.captureintent.state.StateStartingPreview) -> <init>
    197:197:void onReadyForCapture() -> onReadyForCapture
    192:192:void onSetupFailed() -> onSetupFailed
com.android.camera.captureintent.stateful.State -> com.android.camera.captureintent.stateful.State:
    31:31:void <clinit>() -> <clinit>
com.android.camera.captureintent.stateful.StateImpl -> com.android.camera.captureintent.stateful.StateImpl:
    34:36:void <init>(com.android.camera.captureintent.stateful.StateMachine) -> <init>
    40:40:void <init>(com.android.camera.captureintent.stateful.State) -> <init>
    64:64:com.android.camera.captureintent.stateful.EventHandler getEventHandler(java.lang.Class) -> getEventHandler
    59:59:int getEventHandlerCount() -> getEventHandlerCount
    45:45:com.android.camera.captureintent.stateful.StateMachine getStateMachine() -> getStateMachine
    50:50:com.google.common.base.Optional onEnter() -> onEnter
    75:75:void removeEventHandler(java.lang.Class) -> removeEventHandler
    70:70:void setEventHandler(java.lang.Class,com.android.camera.captureintent.stateful.EventHandler) -> setEventHandler
com.android.camera.captureintent.stateful.StateMachineImpl -> com.android.camera.captureintent.stateful.StateMachineImpl:
    29:29:void <clinit>() -> <clinit>
    40:43:void <init>() -> <init>
    52:74:void jumpToState(com.android.camera.captureintent.stateful.State) -> jumpToState
    103:118:void processEvent(com.android.camera.captureintent.stateful.Event) -> processEvent
    89:98:boolean setInitialState(com.android.camera.captureintent.stateful.State) -> setInitialState
com.android.camera.captureintent.stateful.StateMachineImpl$StateUninitialized -> com.android.camera.captureintent.stateful.StateMachineImpl$StateUninitialized:
    126:126:void <init>(com.android.camera.captureintent.stateful.StateMachine) -> <init>
com.android.camera.data.CameraFilmstripDataAdapter -> com.android.camera.data.CameraFilmstripDataAdapter:
    40:40:void <clinit>() -> <clinit>
    54:65:void <init>(android.content.Context,com.android.camera.data.PhotoItemFactory,com.android.camera.data.VideoItemFactory) -> <init>
    39:39:com.android.camera.debug.Log$Tag access$100() -> access$100
    39:39:com.android.camera.data.PhotoItemFactory access$200(com.android.camera.data.CameraFilmstripDataAdapter) -> access$200
    39:39:long access$300(com.android.camera.data.CameraFilmstripDataAdapter) -> access$300
    39:39:long access$302(com.android.camera.data.CameraFilmstripDataAdapter,long) -> access$302
    39:39:com.android.camera.data.VideoItemFactory access$400(com.android.camera.data.CameraFilmstripDataAdapter) -> access$400
    39:39:void access$500(com.android.camera.data.CameraFilmstripDataAdapter,com.android.camera.data.FilmstripItemList) -> access$500
    39:39:android.content.Context access$600(com.android.camera.data.CameraFilmstripDataAdapter) -> access$600
    39:39:com.android.camera.data.FilmstripItemList access$700(com.android.camera.data.CameraFilmstripDataAdapter) -> access$700
    39:39:com.android.camera.filmstrip.FilmstripDataAdapter$Listener access$800(com.android.camera.data.CameraFilmstripDataAdapter) -> access$800
    39:39:com.android.camera.data.LocalFilmstripDataAdapter$FilmstripItemListener access$900(com.android.camera.data.CameraFilmstripDataAdapter) -> access$900
    174:183:boolean addOrUpdate(com.android.camera.data.FilmstripItem) -> addOrUpdate
    288:290:void cancelItems(java.util.List) -> cancelItems
    221:221:void clear() -> clear
    209:215:boolean executeDeletion() -> executeDeletion
    193:193:int findByContentUri(android.net.Uri) -> findByContentUri
    306:306:int getCount() -> getCount
    128:128:com.android.camera.data.FilmstripItem getFilmstripItemAt(int) -> getFilmstripItemAt
    115:118:com.android.camera.data.FilmstripItem getItemAt(int) -> getItemAt
    106:110:int getItemViewType(int) -> getItemViewType
    297:299:java.util.List getItemsInRange(int,int) -> getItemsInRange
    123:123:int getTotalNumber() -> getTotalNumber
    140:147:android.view.View getView(android.view.View,int,com.android.camera.data.FilmstripItem$VideoClickedCallback) -> getView
    253:260:void insertItem(com.android.camera.data.FilmstripItem) -> insertItem
    98:101:boolean isMetadataUpdatedAt(int) -> isMetadataUpdatedAt
    277:280:java.util.List preloadItems(java.util.List) -> preloadItems
    226:239:void refresh(android.net.Uri) -> refresh
    161:169:void removeAt(int) -> removeAt
    266:271:void replaceItemList(com.android.camera.data.FilmstripItemList) -> replaceItemList
    81:82:void requestLoad(com.android.camera.util.Callback) -> requestLoad
    75:76:void requestLoadNewPhotos() -> requestLoadNewPhotos
    153:155:void setListener(com.android.camera.filmstrip.FilmstripDataAdapter$Listener) -> setListener
    70:70:void setLocalDataListener(com.android.camera.data.LocalFilmstripDataAdapter$FilmstripItemListener) -> setLocalDataListener
    133:134:void suggestViewSizeBound(int,int) -> suggestViewSizeBound
    198:203:boolean undoDeletion() -> undoDeletion
    244:245:void updateItemAt(int,com.android.camera.data.FilmstripItem) -> updateItemAt
    87:87:android.os.AsyncTask updateMetadataAt(int) -> updateMetadataAt
    91:92:android.os.AsyncTask updateMetadataAt(int,boolean) -> updateMetadataAt
com.android.camera.data.CameraFilmstripDataAdapter$DeletionTask -> com.android.camera.data.CameraFilmstripDataAdapter$DeletionTask:
    449:449:void <init>(com.android.camera.data.CameraFilmstripDataAdapter) -> <init>
    449:449:void <init>(com.android.camera.data.CameraFilmstripDataAdapter,com.android.camera.data.CameraFilmstripDataAdapter$1) -> <init>
    449:449:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    452:457:java.lang.Void doInBackground(com.android.camera.data.FilmstripItem[]) -> doInBackground
com.android.camera.data.CameraFilmstripDataAdapter$LoadNewPhotosTask -> com.android.camera.data.CameraFilmstripDataAdapter$LoadNewPhotosTask:
    314:316:void <init>(com.android.camera.data.CameraFilmstripDataAdapter,android.content.Context,long) -> <init>
    309:309:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    326:331:java.util.List doInBackground(android.content.ContentResolver[]) -> doInBackground
    309:309:void onPostExecute(java.lang.Object) -> onPostExecute
    337:356:void onPostExecute(java.util.List) -> onPostExecute
com.android.camera.data.CameraFilmstripDataAdapter$MetadataUpdateTask -> com.android.camera.data.CameraFilmstripDataAdapter$MetadataUpdateTask:
    466:468:void <init>(com.android.camera.data.CameraFilmstripDataAdapter,boolean) -> <init>
    463:463:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    477:484:java.util.List doInBackground(java.lang.Integer[]) -> doInBackground
    463:463:void onPostExecute(java.lang.Object) -> onPostExecute
    496:512:void onPostExecute(java.util.List) -> onPostExecute
com.android.camera.data.CameraFilmstripDataAdapter$MetadataUpdateTask$1 -> com.android.camera.data.CameraFilmstripDataAdapter$MetadataUpdateTask$1:
    497:497:void <init>(com.android.camera.data.CameraFilmstripDataAdapter$MetadataUpdateTask,java.util.List) -> <init>
    505:505:boolean isDataUpdated(int) -> isDataUpdated
com.android.camera.data.CameraFilmstripDataAdapter$QueryTask -> com.android.camera.data.CameraFilmstripDataAdapter$QueryTask:
    378:379:void <init>(com.android.camera.data.CameraFilmstripDataAdapter,com.android.camera.util.Callback) -> <init>
    372:372:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    392:431:com.android.camera.data.CameraFilmstripDataAdapter$QueryTaskResult doInBackground(android.content.Context[]) -> doInBackground
    372:372:void onPostExecute(java.lang.Object) -> onPostExecute
    438:445:void onPostExecute(com.android.camera.data.CameraFilmstripDataAdapter$QueryTaskResult) -> onPostExecute
com.android.camera.data.CameraFilmstripDataAdapter$QueryTaskResult -> com.android.camera.data.CameraFilmstripDataAdapter$QueryTaskResult:
    366:368:void <init>(com.android.camera.data.CameraFilmstripDataAdapter,com.android.camera.data.FilmstripItemList,long) -> <init>
com.android.camera.data.FilmstripContentObserver -> com.android.camera.data.FilmstripContentObserver:
    33:37:void <init>() -> <init>
    70:70:boolean isMediaDataChangedDuringPause() -> isMediaDataChangedDuringPause
    54:58:void onChange(boolean) -> onChange
    63:65:void setActivityPaused(boolean) -> setActivityPaused
    41:41:void setForegroundChangeListener(com.android.camera.data.FilmstripContentObserver$ChangeListener) -> setForegroundChangeListener
com.android.camera.data.FilmstripContentQueries -> com.android.camera.data.FilmstripContentQueries:
    34:34:void <clinit>() -> <clinit>
    63:79:java.util.List forCameraPath(android.content.ContentResolver,android.net.Uri,java.lang.String[],long,java.lang.String,com.android.camera.data.FilmstripContentQueries$CursorToFilmstripItemFactory) -> forCameraPath
com.android.camera.data.FilmstripDataAdapterProxy -> com.android.camera.data.FilmstripDataAdapterProxy:
    51:56:void <init>(android.content.Context,com.android.camera.data.LocalFilmstripDataAdapter) -> <init>
    88:88:boolean addOrUpdate(com.android.camera.data.FilmstripItem) -> addOrUpdate
    128:128:void cancelItems(java.util.List) -> cancelItems
    93:93:void clear() -> clear
    98:98:boolean executeDeletion() -> executeDeletion
    138:138:int getCount() -> getCount
    133:133:java.util.List getItemsInRange(int,int) -> getItemsInRange
    123:123:java.util.List preloadItems(java.util.List) -> preloadItems
    108:108:void refresh(android.net.Uri) -> refresh
    78:78:void requestLoad(com.android.camera.util.Callback) -> requestLoad
    83:83:void requestLoadNewPhotos() -> requestLoadNewPhotos
    68:68:void setListener(com.android.camera.filmstrip.FilmstripDataAdapter$Listener) -> setListener
    73:73:void setLocalDataListener(com.android.camera.data.LocalFilmstripDataAdapter$FilmstripItemListener) -> setLocalDataListener
    61:63:void suggestViewSizeBound(int,int) -> suggestViewSizeBound
    103:103:boolean undoDeletion() -> undoDeletion
com.android.camera.data.FilmstripItem -> com.android.camera.data.FilmstripItem:
    33:33:void <clinit>() -> <clinit>
com.android.camera.data.FilmstripItemAttributes -> com.android.camera.data.FilmstripItemAttributes:
    41:42:void <clinit>() -> <clinit>
    24:24:void <init>(java.util.EnumSet,com.android.camera.data.FilmstripItemAttributes$1) -> <init>
    44:45:void <init>(java.util.EnumSet) -> <init>
    64:64:boolean canDelete() -> canDelete
    59:59:boolean canEdit() -> canEdit
    54:54:boolean canShare() -> canShare
    68:68:boolean canSwipeAway() -> canSwipeAway
    72:72:boolean canZoomInPlace() -> canZoomInPlace
    49:49:boolean hasDetailedCaptureInfo() -> hasDetailedCaptureInfo
    81:81:boolean isImage() -> isImage
    76:76:boolean isRendering() -> isRendering
    85:85:boolean isVideo() -> isVideo
com.android.camera.data.FilmstripItemAttributes$Attributes -> com.android.camera.data.FilmstripItemAttributes$Attributes:
    25:36:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    25:25:com.android.camera.data.FilmstripItemAttributes$Attributes valueOf(java.lang.String) -> valueOf
    25:25:com.android.camera.data.FilmstripItemAttributes$Attributes[] values() -> values
com.android.camera.data.FilmstripItemAttributes$Builder -> com.android.camera.data.FilmstripItemAttributes$Builder:
    91:92:void <init>() -> <init>
    99:99:com.android.camera.data.FilmstripItemAttributes build() -> build
    94:94:com.android.camera.data.FilmstripItemAttributes$Builder with(com.android.camera.data.FilmstripItemAttributes$Attributes) -> with
com.android.camera.data.FilmstripItemBase -> com.android.camera.data.FilmstripItemBase:
    50:63:void <init>(android.content.Context,com.android.camera.data.GlideFilmstripManager,com.android.camera.data.FilmstripItemData,com.android.camera.data.FilmstripItemAttributes) -> <init>
    73:75:boolean delete() -> delete
    144:158:void deleteIfEmptyCameraSubDir(java.io.File) -> deleteIfEmptyCameraSubDir
    136:139:com.bumptech.glide.load.Key generateSignature(com.android.camera.data.FilmstripItemData) -> generateSignature
    116:116:com.android.camera.data.FilmstripItemAttributes getAttributes() -> getAttributes
    68:68:com.android.camera.data.FilmstripItemData getData() -> getData
    126:126:com.android.camera.util.Size getDimensions() -> getDimensions
    95:111:com.google.common.base.Optional getMediaDetails() -> getMediaDetails
    121:121:com.android.camera.data.Metadata getMetadata() -> getMetadata
    131:131:int getOrientation() -> getOrientation
    82:84:void setSuggestedSize(int,int) -> setSuggestedSize
com.android.camera.data.FilmstripItemData -> com.android.camera.data.FilmstripItemData:
    59:70:void <init>(long,java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,android.net.Uri,com.android.camera.util.Size,long,int,com.android.camera.data.Location) -> <init>
    74:74:long getContentId() -> getContentId
    97:97:java.util.Date getCreationDate() -> getCreationDate
    128:128:com.android.camera.util.Size getDimensions() -> getDimensions
    112:112:java.lang.String getFilePath() -> getFilePath
    105:105:java.util.Date getLastModifiedDate() -> getLastModifiedDate
    147:147:com.android.camera.data.Location getLocation() -> getLocation
    89:89:java.lang.String getMimeType() -> getMimeType
    143:143:int getOrientation() -> getOrientation
    135:135:long getSizeInBytes() -> getSizeInBytes
    81:81:java.lang.String getTitle() -> getTitle
    119:119:android.net.Uri getUri() -> getUri
    152:177:java.lang.String toString() -> toString
com.android.camera.data.FilmstripItemData$Builder -> com.android.camera.data.FilmstripItemData$Builder:
    181:182:void <clinit>() -> <clinit>
    184:197:void <init>(android.net.Uri) -> <init>
    201:201:com.android.camera.data.FilmstripItemData build() -> build
    217:227:com.android.camera.data.FilmstripItemData$Builder from(com.android.camera.data.FilmstripItemData) -> from
    247:247:com.android.camera.data.FilmstripItemData$Builder withCreationDate(java.util.Date) -> withCreationDate
    262:262:com.android.camera.data.FilmstripItemData$Builder withDimensions(com.android.camera.util.Size) -> withDimensions
    252:252:com.android.camera.data.FilmstripItemData$Builder withLastModifiedDate(java.util.Date) -> withLastModifiedDate
com.android.camera.data.FilmstripItemList -> com.android.camera.data.FilmstripItemList:
    54:54:void <clinit>() -> <clinit>
    33:56:void <init>() -> <init>
    90:91:void add(com.android.camera.data.FilmstripItem) -> add
    95:96:void add(int,com.android.camera.data.FilmstripItem) -> add
    100:101:void addAll(java.util.List) -> addAll
    59:59:com.android.camera.data.FilmstripItem get(int) -> get
    119:122:int indexOf(android.net.Uri) -> indexOf
    71:76:com.android.camera.data.FilmstripItem remove(int) -> remove
    85:86:void set(int,com.android.camera.data.FilmstripItem) -> set
    106:106:int size() -> size
    110:110:void sort(java.util.Comparator) -> sort
com.android.camera.data.FilmstripItemList$UriWrapper -> com.android.camera.data.FilmstripItemList$UriWrapper:
    41:42:void <init>(android.net.Uri) -> <init>
    47:50:boolean equals(java.lang.Object) -> equals
com.android.camera.data.FilmstripItemType -> com.android.camera.data.FilmstripItemType:
    23:28:void <clinit>() -> <clinit>
    23:23:void <init>(java.lang.String,int) -> <init>
    23:23:com.android.camera.data.FilmstripItemType valueOf(java.lang.String) -> valueOf
    23:23:com.android.camera.data.FilmstripItemType[] values() -> values
com.android.camera.data.FilmstripItemUtils -> com.android.camera.data.FilmstripItemUtils:
    36:36:void <clinit>() -> <clinit>
    66:72:android.graphics.Point decodeBitmapDimension(java.io.InputStream) -> decodeBitmapDimension
    53:53:boolean isMimeTypeImage(java.lang.String) -> isMimeTypeImage
    43:43:boolean isMimeTypeVideo(java.lang.String) -> isMimeTypeVideo
    97:150:android.graphics.Bitmap loadImageThumbnailFromStream(java.io.InputStream,int,int,int,int,int,int) -> loadImageThumbnailFromStream
    164:177:android.graphics.Bitmap loadVideoThumbnail(java.lang.String) -> loadVideoThumbnail
com.android.camera.data.FixedLastProxyAdapter -> com.android.camera.data.FixedLastProxyAdapter:
    47:51:void <init>(android.content.Context,com.android.camera.data.LocalFilmstripDataAdapter,com.android.camera.data.FilmstripItem) -> <init>
    81:81:int findByContentUri(android.net.Uri) -> findByContentUri
    141:146:com.android.camera.data.FilmstripItem getFilmstripItemAt(int) -> getFilmstripItemAt
    62:67:com.android.camera.data.FilmstripItem getItemAt(int) -> getItemAt
    129:134:int getItemViewType(int) -> getItemViewType
    110:110:int getTotalNumber() -> getTotalNumber
    115:121:android.view.View getView(android.view.View,int,com.android.camera.data.FilmstripItem$VideoClickedCallback) -> getView
    163:166:boolean isMetadataUpdatedAt(int) -> isMetadataUpdatedAt
    74:75:void removeAt(int) -> removeAt
    56:57:void setListener(com.android.camera.filmstrip.FilmstripDataAdapter$Listener) -> setListener
    86:93:void updateItemAt(int,com.android.camera.data.FilmstripItem) -> updateItemAt
    153:156:android.os.AsyncTask updateMetadataAt(int) -> updateMetadataAt
com.android.camera.data.FixedLastProxyAdapter$1 -> com.android.camera.data.FixedLastProxyAdapter$1:
    93:93:void <init>(com.android.camera.data.FixedLastProxyAdapter,int) -> <init>
    101:101:boolean isDataUpdated(int) -> isDataUpdated
com.android.camera.data.GlideFilmstripManager -> com.android.camera.data.GlideFilmstripManager:
    48:81:void <clinit>() -> <clinit>
    100:122:void <init>(android.content.Context) -> <init>
    192:212:com.android.camera.util.Size clampSize(com.android.camera.util.Size,double,com.android.camera.util.Size) -> clampSize
    233:288:java.lang.Integer computeEglMaxTextureSize() -> computeEglMaxTextureSize
    216:225:com.android.camera.util.Size computeFitWithinSize(com.android.camera.util.Size,com.android.camera.util.Size) -> computeFitWithinSize
    62:77:com.android.camera.util.Size getMaxImageDisplaySize() -> getMaxImageDisplaySize
    131:137:com.bumptech.glide.DrawableRequestBuilder loadFull(android.net.Uri,com.bumptech.glide.load.Key,com.android.camera.util.Size) -> loadFull
    161:167:com.bumptech.glide.GenericRequestBuilder loadMediaStoreThumb(android.net.Uri,com.bumptech.glide.load.Key) -> loadMediaStoreThumb
    146:151:com.bumptech.glide.DrawableRequestBuilder loadScreen(android.net.Uri,com.bumptech.glide.load.Key,com.android.camera.util.Size) -> loadScreen
    177:182:com.bumptech.glide.GenericRequestBuilder loadTinyThumb(android.net.Uri,com.bumptech.glide.load.Key) -> loadTinyThumb
com.android.camera.data.Location -> com.android.camera.data.Location:
    27:28:void <clinit>() -> <clinit>
    33:35:void <init>(double,double) -> <init>
    67:76:boolean equals(java.lang.Object) -> equals
    95:101:com.android.camera.data.Location from(double,double) -> from
    47:48:java.lang.String getLocationString() -> getLocationString
    87:89:int hashCode() -> hashCode
    59:59:java.lang.String toString() -> toString
com.android.camera.data.MediaDetails -> com.android.camera.data.MediaDetails:
    35:35:void <clinit>() -> <clinit>
    33:38:void <init>() -> <init>
    83:83:void addDetail(int,java.lang.Object) -> addDetail
    138:169:void extractExifInfo(com.android.camera.data.MediaDetails,java.lang.String) -> extractExifInfo
    177:184:java.lang.String formatDuration(android.content.Context,long) -> formatDuration
    87:87:java.lang.Object getDetail(int) -> getDetail
    108:108:int getUnit(int) -> getUnit
    104:104:boolean hasUnit(int) -> hasUnit
    96:96:java.util.Iterator iterator() -> iterator
    115:128:void setExifData(com.android.camera.data.MediaDetails,com.android.camera.exif.ExifTag,int) -> setExifData
    100:100:void setUnit(int,int) -> setUnit
    91:91:int size() -> size
com.android.camera.data.MediaDetails$FlashState -> com.android.camera.data.MediaDetails$FlashState:
    73:74:void <init>(int) -> <init>
    78:78:boolean isFlashFired() -> isFlashFired
com.android.camera.data.Metadata -> com.android.camera.data.Metadata:
    25:41:void <init>() -> <init>
    72:72:int getVideoHeight() -> getVideoHeight
    64:64:int getVideoWidth() -> getVideoWidth
    104:104:boolean isHasRgbzData() -> isHasRgbzData
    44:44:boolean isLoaded() -> isLoaded
    80:80:boolean isPanorama() -> isPanorama
    88:88:boolean isPanorama360() -> isPanorama360
    96:96:boolean isUsePanoramaViewer() -> isUsePanoramaViewer
    60:60:boolean isVideoRotated() -> isVideoRotated
    108:108:void setHasRgbzData(boolean) -> setHasRgbzData
    48:48:void setLoaded(boolean) -> setLoaded
    84:84:void setPanorama(boolean) -> setPanorama
    92:92:void setPanorama360(boolean) -> setPanorama360
    100:100:void setUsePanoramaViewer(boolean) -> setUsePanoramaViewer
    76:76:void setVideoHeight(int) -> setVideoHeight
    56:56:void setVideoOrientation(java.lang.String) -> setVideoOrientation
    68:68:void setVideoWidth(int) -> setVideoWidth
com.android.camera.data.MetadataLoader -> com.android.camera.data.MetadataLoader:
    41:49:boolean loadMetadata(android.content.Context,com.android.camera.data.FilmstripItem) -> loadMetadata
com.android.camera.data.NewestFirstComparator -> com.android.camera.data.NewestFirstComparator:
    40:44:void <init>(java.util.Date) -> <init>
    28:28:int compare(java.lang.Object,java.lang.Object) -> compare
    49:64:int compare(com.android.camera.data.FilmstripItem,com.android.camera.data.FilmstripItem) -> compare
    74:74:int compareDate(java.util.Date,java.util.Date) -> compareDate
    86:86:boolean isFuture(java.util.Date) -> isFuture
com.android.camera.data.PanoramaMetadataLoader -> com.android.camera.data.PanoramaMetadataLoader:
    35:44:boolean loadPanoramaMetadata(android.content.Context,android.net.Uri,com.android.camera.data.Metadata) -> loadPanoramaMetadata
com.android.camera.data.PhotoDataFactory -> com.android.camera.data.PhotoDataFactory:
    30:30:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    95:119:com.android.camera.util.Size decodeBitmapDimensions(java.lang.String) -> decodeBitmapDimensions
    33:72:com.android.camera.data.FilmstripItemData fromCursor(android.database.Cursor) -> fromCursor
com.android.camera.data.PhotoDataQuery -> com.android.camera.data.PhotoDataQuery:
    27:45:void <clinit>() -> <clinit>
com.android.camera.data.PhotoItem -> com.android.camera.data.PhotoItem:
    50:62:void <clinit>() -> <clinit>
    66:71:void <init>(android.content.Context,com.android.camera.data.GlideFilmstripManager,com.android.camera.data.FilmstripItemData,com.android.camera.data.PhotoItemFactory) -> <init>
    92:95:boolean delete() -> delete
    133:150:void fillImageView(android.widget.ImageView) -> fillImageView
    221:262:com.google.common.base.Optional generateThumbnail(int,int) -> generateThumbnail
    161:161:com.android.camera.data.FilmstripItemType getItemViewType() -> getItemViewType
    100:104:com.google.common.base.Optional getMediaDetails() -> getMediaDetails
    120:127:android.view.View getView(com.google.common.base.Optional,com.android.camera.data.LocalFilmstripDataAdapter,boolean,com.android.camera.data.FilmstripItem$VideoClickedCallback) -> getView
    155:156:void recycle(android.view.View) -> recycle
    112:112:com.android.camera.data.FilmstripItem refresh() -> refresh
    184:187:void renderFullRes(android.view.View) -> renderFullRes
    214:216:com.bumptech.glide.DrawableRequestBuilder renderFullSize(android.net.Uri) -> renderFullSize
    196:210:com.bumptech.glide.DrawableRequestBuilder renderScreenSize(android.net.Uri) -> renderScreenSize
    175:178:void renderThumbnail(android.view.View) -> renderThumbnail
    166:169:void renderTiny(android.view.View) -> renderTiny
    192:192:com.bumptech.glide.GenericRequestBuilder renderTinySize(android.net.Uri) -> renderTinySize
    82:82:void setSessionPlaceholderBitmap(com.google.common.base.Optional) -> setSessionPlaceholderBitmap
    87:87:java.lang.String toString() -> toString
com.android.camera.data.PhotoItemFactory -> com.android.camera.data.PhotoItemFactory:
    30:30:void <clinit>() -> <clinit>
    38:42:void <init>(android.content.Context,com.android.camera.data.GlideFilmstripManager,android.content.ContentResolver,com.android.camera.data.PhotoDataFactory) -> <init>
    29:29:com.android.camera.data.FilmstripItem get(android.database.Cursor) -> get
    47:51:com.android.camera.data.PhotoItem get(android.database.Cursor) -> get
    58:64:com.android.camera.data.PhotoItem get(android.net.Uri) -> get
    72:72:java.util.List queryAll() -> queryAll
    77:78:java.util.List queryAll(android.net.Uri,long) -> queryAll
    85:89:com.android.camera.data.PhotoItem queryContentUri(android.net.Uri) -> queryContentUri
com.android.camera.data.PlaceholderItem -> com.android.camera.data.PlaceholderItem:
    36:41:void <clinit>() -> <clinit>
    50:76:void <init>(android.view.View,com.android.camera.data.FilmstripItemType,int,int) -> <init>
    140:140:com.google.common.base.Optional generateThumbnail(int,int) -> generateThumbnail
    86:86:com.android.camera.data.FilmstripItemAttributes getAttributes() -> getAttributes
    81:81:com.android.camera.data.FilmstripItemData getData() -> getData
    145:145:com.android.camera.util.Size getDimensions() -> getDimensions
    91:91:com.android.camera.data.FilmstripItemType getItemViewType() -> getItemViewType
    130:130:com.google.common.base.Optional getMediaDetails() -> getMediaDetails
    135:135:com.android.camera.data.Metadata getMetadata() -> getMetadata
    150:150:int getOrientation() -> getOrientation
    108:108:android.view.View getView(com.google.common.base.Optional,com.android.camera.data.LocalFilmstripDataAdapter,boolean,com.android.camera.data.FilmstripItem$VideoClickedCallback) -> getView
com.android.camera.data.RgbzMetadataLoader -> com.android.camera.data.RgbzMetadataLoader:
    36:37:boolean loadRgbzMetadata(android.content.Context,android.net.Uri,com.android.camera.data.Metadata) -> loadRgbzMetadata
com.android.camera.data.SessionItem -> com.android.camera.data.SessionItem:
    65:81:void <init>(android.content.Context,android.net.Uri,com.android.camera.util.Size) -> <init>
    55:62:com.google.common.base.Optional create(android.content.Context,android.net.Uri) -> create
    174:174:com.google.common.base.Optional generateThumbnail(int,int) -> generateThumbnail
    169:169:com.android.camera.data.FilmstripItemAttributes getAttributes() -> getAttributes
    164:164:com.android.camera.data.FilmstripItemData getData() -> getData
    184:184:com.android.camera.util.Size getDimensions() -> getDimensions
    117:117:com.android.camera.data.FilmstripItemType getItemViewType() -> getItemViewType
    139:139:com.google.common.base.Optional getMediaDetails() -> getMediaDetails
    159:159:com.android.camera.data.Metadata getMetadata() -> getMetadata
    189:189:int getOrientation() -> getOrientation
    85:89:com.android.camera.util.Size getSessionSize(android.net.Uri) -> getSessionSize
    97:110:android.view.View getView(com.google.common.base.Optional,com.android.camera.data.LocalFilmstripDataAdapter,boolean,com.android.camera.data.FilmstripItem$VideoClickedCallback) -> getView
    179:179:void recycle(android.view.View) -> recycle
    144:152:com.android.camera.data.FilmstripItem refresh() -> refresh
com.android.camera.data.VideoDataFactory -> com.android.camera.data.VideoDataFactory:
    29:33:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    36:75:com.android.camera.data.VideoItemData fromCursor(android.database.Cursor) -> fromCursor
com.android.camera.data.VideoDataQuery -> com.android.camera.data.VideoDataQuery:
    23:41:void <clinit>() -> <clinit>
com.android.camera.data.VideoItem -> com.android.camera.data.VideoItem:
    52:62:void <clinit>() -> <clinit>
    70:71:void <init>(android.content.Context,com.android.camera.data.GlideFilmstripManager,com.android.camera.data.VideoItemData,com.android.camera.data.VideoItemFactory) -> <init>
    123:126:boolean delete() -> delete
    219:220:com.google.common.base.Optional generateThumbnail(int,int) -> generateThumbnail
    90:94:int getBestHeight() -> getBestHeight
    81:85:int getBestWidth() -> getBestWidth
    112:118:com.android.camera.util.Size getDimensions() -> getDimensions
    107:107:int getHeight() -> getHeight
    214:214:com.android.camera.data.FilmstripItemType getItemViewType() -> getItemViewType
    131:136:com.google.common.base.Optional getMediaDetails() -> getMediaDetails
    154:182:android.view.View getView(com.google.common.base.Optional,com.android.camera.data.LocalFilmstripDataAdapter,boolean,com.android.camera.data.FilmstripItem$VideoClickedCallback) -> getView
    234:236:com.android.camera.data.VideoItem$VideoViewHolder getViewHolder(android.view.View) -> getViewHolder
    103:103:int getWidth() -> getWidth
    206:208:void recycle(android.view.View) -> recycle
    143:143:com.android.camera.data.FilmstripItem refresh() -> refresh
    195:198:void renderThumbnail(android.view.View) -> renderThumbnail
    190:190:void renderTiny(android.view.View) -> renderTiny
    229:230:void renderTiny(com.android.camera.data.VideoItem$VideoViewHolder) -> renderTiny
    225:225:java.lang.String toString() -> toString
com.android.camera.data.VideoItem$1 -> com.android.camera.data.VideoItem$1:
    169:169:void <init>(com.android.camera.data.VideoItem,com.android.camera.data.FilmstripItem$VideoClickedCallback) -> <init>
    172:172:void onClick(android.view.View) -> onClick
com.android.camera.data.VideoItem$VideoViewHolder -> com.android.camera.data.VideoItem$VideoViewHolder:
    46:48:void <init>(android.widget.ImageView,android.widget.ImageView) -> <init>
    42:42:android.widget.ImageView access$000(com.android.camera.data.VideoItem$VideoViewHolder) -> access$000
    42:42:android.widget.ImageView access$100(com.android.camera.data.VideoItem$VideoViewHolder) -> access$100
com.android.camera.data.VideoItemData -> com.android.camera.data.VideoItemData:
    35:37:void <init>(long,java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.lang.String,android.net.Uri,com.android.camera.util.Size,long,int,com.android.camera.data.Location,long) -> <init>
    41:41:long getVideoDurationMillis() -> getVideoDurationMillis
com.android.camera.data.VideoItemFactory -> com.android.camera.data.VideoItemFactory:
    31:31:void <clinit>() -> <clinit>
    41:45:void <init>(android.content.Context,com.android.camera.data.GlideFilmstripManager,android.content.ContentResolver,com.android.camera.data.VideoDataFactory) -> <init>
    30:30:com.android.camera.data.FilmstripItem get(android.database.Cursor) -> get
    50:54:com.android.camera.data.VideoItem get(android.database.Cursor) -> get
    62:68:com.android.camera.data.VideoItem get(android.net.Uri) -> get
    76:76:java.util.List queryAll() -> queryAll
    82:83:java.util.List queryAll(android.net.Uri,long) -> queryAll
    90:95:com.android.camera.data.VideoItem queryContentUri(android.net.Uri) -> queryContentUri
com.android.camera.data.VideoRotationMetadataLoader -> com.android.camera.data.VideoRotationMetadataLoader:
    24:24:void <clinit>() -> <clinit>
    35:54:boolean loadRotationMetadata(com.android.camera.data.FilmstripItem) -> loadRotationMetadata
com.android.camera.debug.DebugPropertyHelper -> com.android.camera.debug.DebugPropertyHelper:
    43:43:boolean isPropertyOn(java.lang.String) -> isPropertyOn
    51:51:boolean showCaptureDebugUI() -> showCaptureDebugUI
com.android.camera.debug.Log -> com.android.camera.debug.Log:
    34:36:void <clinit>() -> <clinit>
    23:23:com.android.camera.debug.Log$Tag access$000() -> access$000
    65:66:void d(com.android.camera.debug.Log$Tag,java.lang.String) -> d
    83:84:void d(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable) -> d
    89:90:void e(com.android.camera.debug.Log$Tag,java.lang.String) -> e
    107:108:void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable) -> e
    113:114:void i(com.android.camera.debug.Log$Tag,java.lang.String) -> i
    131:132:void i(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable) -> i
    221:221:boolean isDebugOsBuild() -> isDebugOsBuild
    195:209:boolean isLoggable(com.android.camera.debug.Log$Tag,int) -> isLoggable
    216:217:boolean shouldLog(com.android.camera.debug.Log$Tag,int) -> shouldLog
    137:138:void v(com.android.camera.debug.Log$Tag,java.lang.String) -> v
    161:162:void w(com.android.camera.debug.Log$Tag,java.lang.String) -> w
    179:180:void w(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable) -> w
com.android.camera.debug.Log$Tag -> com.android.camera.debug.Log$Tag:
    50:55:void <init>(java.lang.String) -> <init>
    60:60:java.lang.String toString() -> toString
com.android.camera.debug.LogHelper -> com.android.camera.debug.LogHelper:
    18:18:void <init>() -> <init>
    24:24:com.android.camera.debug.LogHelper instance() -> instance
com.android.camera.debug.LogHelper$Singleton -> com.android.camera.debug.LogHelper$Singleton:
    20:20:void <clinit>() -> <clinit>
    19:19:com.android.camera.debug.LogHelper access$000() -> access$000
com.android.camera.debug.Loggers -> com.android.camera.debug.Loggers:
    41:41:com.android.camera.debug.Logger$Factory tagFactory() -> tagFactory
com.android.camera.debug.Loggers$TagLogger -> com.android.camera.debug.Loggers$TagLogger:
    151:152:void <init>(com.android.camera.debug.Log$Tag) -> <init>
    157:157:void d(java.lang.String) -> d
    167:167:void e(java.lang.String) -> e
    172:172:void e(java.lang.String,java.lang.Throwable) -> e
    177:177:void i(java.lang.String) -> i
    187:187:void v(java.lang.String) -> v
    197:197:void w(java.lang.String) -> w
com.android.camera.debug.Loggers$TagLoggerFactory -> com.android.camera.debug.Loggers$TagLoggerFactory:
    84:84:void <init>() -> <init>
    84:84:void <init>(com.android.camera.debug.Loggers$1) -> <init>
    95:95:com.android.camera.debug.Logger create(com.android.camera.debug.Log$Tag) -> create
    90:90:com.android.camera.debug.Loggers$TagLoggerFactory instance() -> instance
com.android.camera.debug.Loggers$TagLoggerFactory$Singleton -> com.android.camera.debug.Loggers$TagLoggerFactory$Singleton:
    86:86:void <clinit>() -> <clinit>
    85:85:com.android.camera.debug.Loggers$TagLoggerFactory access$300() -> access$300
com.android.camera.device.ActiveCameraDeviceTracker -> com.android.camera.device.ActiveCameraDeviceTracker:
    32:32:void <clinit>() -> <clinit>
    54:55:void <init>() -> <init>
    65:72:com.android.camera.device.CameraId getActiveOrPreviousCamera() -> getActiveOrPreviousCamera
    42:42:com.android.camera.device.ActiveCameraDeviceTracker instance() -> instance
    87:92:void onCameraClosed(com.android.camera.device.CameraId) -> onCameraClosed
    76:83:void onCameraOpening(com.android.camera.device.CameraId) -> onCameraOpening
com.android.camera.device.ActiveCameraDeviceTracker$Singleton -> com.android.camera.device.ActiveCameraDeviceTracker$Singleton:
    38:38:void <clinit>() -> <clinit>
com.android.camera.device.CameraId -> com.android.camera.device.CameraId:
    60:62:void <init>(java.lang.String,java.lang.Integer) -> <init>
    57:57:java.lang.String computeCameraIdFromLegacyId(int) -> computeCameraIdFromLegacyId
    44:44:java.lang.Integer computeLegacyIdFromCamera2Id(java.lang.String) -> computeLegacyIdFromCamera2Id
    98:107:boolean equals(java.lang.Object) -> equals
    34:34:com.android.camera.device.CameraId from(java.lang.String) -> from
    30:30:com.android.camera.device.CameraId fromLegacyId(int) -> fromLegacyId
    78:83:int getLegacyValue() -> getLegacyValue
    69:69:java.lang.String getValue() -> getValue
    112:112:int hashCode() -> hashCode
    117:117:java.lang.String toString() -> toString
com.android.camera.exif.CountedDataInputStream -> com.android.camera.exif.CountedDataInputStream:
    27:27:void <clinit>() -> <clinit>
    29:36:void <init>(java.io.InputStream) -> <init>
    96:96:java.nio.ByteOrder getByteOrder() -> getByteOrder
    40:40:int getReadByteCount() -> getReadByteCount
    45:46:int read(byte[]) -> read
    52:53:int read(byte[],int,int) -> read
    59:60:int read() -> read
    110:112:int readInt() -> readInt
    83:84:void readOrThrow(byte[],int,int) -> readOrThrow
    88:88:void readOrThrow(byte[]) -> readOrThrow
    100:102:short readShort() -> readShort
    132:134:java.lang.String readString(int,java.nio.charset.Charset) -> readString
    116:116:long readUnsignedInt() -> readUnsignedInt
    106:106:int readUnsignedShort() -> readUnsignedShort
    92:92:void setByteOrder(java.nio.ByteOrder) -> setByteOrder
    66:67:long skip(long) -> skip
    72:72:void skipOrThrow(long) -> skipOrThrow
    76:79:void skipTo(long) -> skipTo
com.android.camera.exif.ExifData -> com.android.camera.exif.ExifData:
    35:42:void <clinit>() -> <clinit>
    46:52:void <init>(java.nio.ByteOrder) -> <init>
    139:139:void addIfdData(com.android.camera.exif.IfdData) -> addIfdData
    170:171:com.android.camera.exif.ExifTag addTag(com.android.camera.exif.ExifTag) -> addTag
    181:183:com.android.camera.exif.ExifTag addTag(com.android.camera.exif.ExifTag,int) -> addTag
    320:335:boolean equals(java.lang.Object) -> equals
    255:261:java.util.List getAllTags() -> getAllTags
    120:120:java.nio.ByteOrder getByteOrder() -> getByteOrder
    62:62:byte[] getCompressedThumbnail() -> getCompressedThumbnail
    128:129:com.android.camera.exif.IfdData getIfdData(int) -> getIfdData
    147:150:com.android.camera.exif.IfdData getOrCreateIfdData(int) -> getOrCreateIfdData
    106:106:byte[] getStrip(int) -> getStrip
    97:97:int getStripCount() -> getStripCount
    160:161:com.android.camera.exif.ExifTag getTag(short,int) -> getTag
    76:76:boolean hasCompressedThumbnail() -> hasCompressedThumbnail
    113:113:boolean hasUncompressedStrip() -> hasUncompressedStrip
    205:209:void removeTag(short,int) -> removeTag
    69:69:void setCompressedThumbnail(byte[]) -> setCompressedThumbnail
    83:89:void setStripBytes(int,byte[]) -> setStripBytes
com.android.camera.exif.ExifInterface -> com.android.camera.exif.ExifInterface:
    77:714:void <clinit>() -> <clinit>
    713:2041:void <init>() -> <init>
    1944:1951:boolean addDateTimeStampTag(int,long,java.util.TimeZone) -> addDateTimeStampTag
    1991:2005:boolean addGpsDateTimeStampTag(long) -> addGpsDateTimeStampTag
    1966:1980:boolean addGpsTags(double,double) -> addGpsTags
    1477:1488:com.android.camera.exif.ExifTag buildTag(int,int,java.lang.Object) -> buildTag
    1502:1503:com.android.camera.exif.ExifTag buildTag(int,java.lang.Object) -> buildTag
    1507:1515:com.android.camera.exif.ExifTag buildUninitializedTag(int) -> buildUninitializedTag
    1428:1432:int getDefinedTagDefaultIfd(int) -> getDefinedTagDefaultIfd
    948:951:java.io.OutputStream getExifWriterStream(java.io.OutputStream) -> getExifWriterStream
    2362:2369:int getFlagsFromAllowedIfds(int[]) -> getFlagsFromAllowedIfds
    1840:1840:short getOrientationValueForRotation(int) -> getOrientationValueForRotation
    1156:1159:com.android.camera.exif.ExifTag getTag(int,int) -> getTag
    1170:1171:com.android.camera.exif.ExifTag getTag(int) -> getTag
    2044:2048:android.util.SparseIntArray getTagInfo() -> getTagInfo
    1244:1248:java.lang.Integer getTagIntValue(int,int) -> getTagIntValue
    1255:1256:java.lang.Integer getTagIntValue(int) -> getTagIntValue
    1320:1324:int[] getTagIntValues(int,int) -> getTagIntValues
    2059:2321:void initTagInfo() -> initTagInfo
    2351:2354:boolean isIfdAllowed(int,int) -> isIfdAllowed
    1462:1462:boolean isOffsetTag(short) -> isOffsetTag
    728:728:void readExif(byte[]) -> readExif
    740:748:void readExif(java.io.InputStream) -> readExif
    761:768:void readExif(java.lang.String) -> readExif
    1562:1562:com.android.camera.exif.ExifTag setTag(com.android.camera.exif.ExifTag) -> setTag
    1531:1535:boolean setTagValue(int,int,java.lang.Object) -> setTagValue
    1548:1549:boolean setTagValue(int,java.lang.Object) -> setTagValue
    2011:2017:com.android.camera.exif.Rational[] toExifLatLong(double) -> toExifLatLong
    800:804:void writeExif(byte[],java.io.OutputStream) -> writeExif
    818:822:void writeExif(android.graphics.Bitmap,java.io.OutputStream) -> writeExif
com.android.camera.exif.ExifInvalidFormatException -> com.android.camera.exif.ExifInvalidFormatException:
    21:21:void <init>(java.lang.String) -> <init>
com.android.camera.exif.ExifOutputStream -> com.android.camera.exif.ExifOutputStream:
    61:61:void <clinit>() -> <clinit>
    78:87:void <init>(java.io.OutputStream,com.android.camera.exif.ExifInterface) -> <init>
    436:474:int calculateAllOffset() -> calculateAllOffset
    310:315:int calculateOffsetOfIfd(com.android.camera.exif.IfdData,int) -> calculateOffsetOfIfd
    323:430:void createRequiredIfdAndTag() -> createRequiredIfdAndTag
    107:109:int requestByteToBuffer(int,byte[],int,int) -> requestByteToBuffer
    95:95:void setExifData(com.android.camera.exif.ExifData) -> setExifData
    244:248:java.util.ArrayList stripNullValueTags(com.android.camera.exif.ExifData) -> stripNullValueTags
    119:187:void write(byte[],int,int) -> write
    197:198:void write(int) -> write
    206:206:void write(byte[]) -> write
    265:277:void writeAllTags(com.android.camera.exif.OrderedDataOutputStream) -> writeAllTags
    210:239:void writeExifData() -> writeExifData
    283:304:void writeIfd(com.android.camera.exif.IfdData,com.android.camera.exif.OrderedDataOutputStream) -> writeIfd
    482:513:void writeTagValue(com.android.camera.exif.ExifTag,com.android.camera.exif.OrderedDataOutputStream) -> writeTagValue
    255:259:void writeThumbnail(com.android.camera.exif.OrderedDataOutputStream) -> writeThumbnail
com.android.camera.exif.ExifParser -> com.android.camera.exif.ExifParser:
    71:177:void <clinit>() -> <clinit>
    148:228:void <init>(java.io.InputStream,int,com.android.camera.exif.ExifInterface) -> <init>
    638:642:boolean checkAllowed(int,int) -> checkAllowed
    587:633:void checkOffsetOrImageTag(com.android.camera.exif.ExifTag) -> checkOffsetOrImageTag
    914:914:java.nio.ByteOrder getByteOrder() -> getByteOrder
    490:493:int getCompressedImageSize() -> getCompressedImageSize
    452:452:int getCurrentIfd() -> getCurrentIfd
    462:462:int getStripIndex() -> getStripIndex
    480:482:int getStripSize() -> getStripSize
    432:432:com.android.camera.exif.ExifTag getTag() -> getTag
    184:192:boolean isIfdRequested(int) -> isIfdRequested
    198:198:boolean isThumbnailRequested() -> isThumbnailRequested
    392:401:boolean needToParseOffsetsInCurrentIfd() -> needToParseOffsetsInCurrentIfd
    272:348:int next() -> next
    254:254:com.android.camera.exif.ExifParser parse(java.io.InputStream,com.android.camera.exif.ExifInterface) -> parse
    738:748:void parseTiffHeader() -> parseTiffHeader
    808:808:int read(byte[]) -> read
    647:727:void readFullTagValue(com.android.camera.exif.ExifTag) -> readFullTagValue
    863:863:int readLong() -> readLong
    870:872:com.android.camera.exif.Rational readRational() -> readRational
    817:817:java.lang.String readString(int) -> readString
    827:827:java.lang.String readString(int,java.nio.charset.Charset) -> readString
    534:576:com.android.camera.exif.ExifTag readTag() -> readTag
    846:846:long readUnsignedLong() -> readUnsignedLong
    854:856:com.android.camera.exif.Rational readUnsignedRational() -> readUnsignedRational
    838:838:int readUnsignedShort() -> readUnsignedShort
    525:525:void registerCompressedImage(long) -> registerCompressedImage
    513:514:void registerForTagValue(com.android.camera.exif.ExifTag) -> registerForTagValue
    521:521:void registerIfd(int,long) -> registerIfd
    529:529:void registerUncompressedStrip(int,long) -> registerUncompressedStrip
    754:784:boolean seekTiffData(java.io.InputStream) -> seekTiffData
    364:386:void skipRemainingTagsInCurrentIfd() -> skipRemainingTagsInCurrentIfd
    497:499:void skipTo(int) -> skipTo
com.android.camera.exif.ExifParser$ExifTagEvent -> com.android.camera.exif.ExifParser$ExifTagEvent:
    904:906:void <init>(com.android.camera.exif.ExifTag,boolean) -> <init>
com.android.camera.exif.ExifParser$IfdEvent -> com.android.camera.exif.ExifParser$IfdEvent:
    894:896:void <init>(int,boolean) -> <init>
com.android.camera.exif.ExifParser$ImageEvent -> com.android.camera.exif.ExifParser$ImageEvent:
    879:881:void <init>(int) -> <init>
    884:886:void <init>(int,int) -> <init>
com.android.camera.exif.ExifReader -> com.android.camera.exif.ExifReader:
    29:29:void <clinit>() -> <clinit>
    33:34:void <init>(com.android.camera.exif.ExifInterface) -> <init>
    46:88:com.android.camera.exif.ExifData read(java.io.InputStream) -> read
com.android.camera.exif.ExifTag -> com.android.camera.exif.ExifTag:
    70:105:void <clinit>() -> <clinit>
    128:134:void <init>(short,short,int,int,boolean) -> <init>
    883:883:boolean checkBadComponentCount(int) -> checkBadComponentCount
    951:954:boolean checkOverflowForRational(com.android.camera.exif.Rational[]) -> checkOverflowForRational
    922:922:boolean checkOverflowForUnsignedLong(long[]) -> checkOverflowForUnsignedLong
    931:931:boolean checkOverflowForUnsignedLong(int[]) -> checkOverflowForUnsignedLong
    940:943:boolean checkOverflowForUnsignedRational(com.android.camera.exif.Rational[]) -> checkOverflowForUnsignedRational
    913:913:boolean checkOverflowForUnsignedShort(int[]) -> checkOverflowForUnsignedShort
    966:995:boolean equals(java.lang.Object) -> equals
    729:739:long forceGetValueAsLong(long) -> forceGetValueAsLong
    748:774:java.lang.String forceGetValueAsString() -> forceGetValueAsString
    214:214:void forceSetComponentCount(int) -> forceSetComponentCount
    837:837:void getBytes(byte[]) -> getBytes
    851:856:void getBytes(byte[],int,int) -> getBytes
    206:206:int getComponentCount() -> getComponentCount
    197:197:int getDataSize() -> getDataSize
    190:190:short getDataType() -> getDataType
    150:150:int getElementSize(short) -> getElementSize
    163:163:int getIfd() -> getIfd
    864:864:int getOffset() -> getOffset
    826:830:com.android.camera.exif.Rational getRational(int) -> getRational
    816:816:byte[] getStringByte() -> getStringByte
    174:174:short getTagId() -> getTagId
    717:717:java.lang.Object getValue() -> getValue
    575:576:byte[] getValueAsBytes() -> getValueAsBytes
    652:658:int[] getValueAsInts() -> getValueAsInts
    690:691:long[] getValueAsLongs() -> getValueAsLongs
    622:626:com.android.camera.exif.Rational getValueAsRational(com.android.camera.exif.Rational) -> getValueAsRational
    640:641:com.android.camera.exif.Rational getValueAsRational(long) -> getValueAsRational
    606:607:com.android.camera.exif.Rational[] getValueAsRationals() -> getValueAsRationals
    541:546:java.lang.String getValueAsString() -> getValueAsString
    789:795:long getValueAt(int) -> getValueAt
    879:879:boolean hasDefinedCount() -> hasDefinedCount
    222:222:boolean hasValue() -> hasValue
    875:875:void setHasDefinedCount(boolean) -> setHasDefinedCount
    167:167:void setIfd(int) -> setIfd
    871:871:void setOffset(int) -> setOffset
    237:255:boolean setValue(int[]) -> setValue
    271:271:boolean setValue(int) -> setValue
    287:294:boolean setValue(long[]) -> setValue
    308:308:boolean setValue(long) -> setValue
    328:345:boolean setValue(java.lang.String) -> setValue
    364:377:boolean setValue(com.android.camera.exif.Rational[]) -> setValue
    395:395:boolean setValue(com.android.camera.exif.Rational) -> setValue
    412:420:boolean setValue(byte[],int,int) -> setValue
    428:428:boolean setValue(byte[]) -> setValue
    442:442:boolean setValue(byte) -> setValue
    460:511:boolean setValue(java.lang.Object) -> setValue
    1003:1005:java.lang.String toString() -> toString
com.android.camera.exif.IfdData -> com.android.camera.exif.IfdData:
    33:33:void <clinit>() -> <clinit>
    31:47:void <init>(int) -> <init>
    134:143:boolean equals(java.lang.Object) -> equals
    58:58:com.android.camera.exif.ExifTag[] getAllTags() -> getAllTags
    71:71:int getId() -> getId
    51:51:int[] getIfds() -> getIfds
    119:119:int getOffsetToNextIfd() -> getOffsetToNextIfd
    79:79:com.android.camera.exif.ExifTag getTag(short) -> getTag
    105:105:int getTagCount() -> getTagCount
    98:98:void removeTag(short) -> removeTag
    112:112:void setOffsetToNextIfd(int) -> setOffsetToNextIfd
    86:87:com.android.camera.exif.ExifTag setTag(com.android.camera.exif.ExifTag) -> setTag
com.android.camera.exif.OrderedDataOutputStream -> com.android.camera.exif.OrderedDataOutputStream:
    26:29:void <init>(java.io.OutputStream) -> <init>
    33:33:com.android.camera.exif.OrderedDataOutputStream setByteOrder(java.nio.ByteOrder) -> setByteOrder
    45:47:com.android.camera.exif.OrderedDataOutputStream writeInt(int) -> writeInt
    52:53:com.android.camera.exif.OrderedDataOutputStream writeRational(com.android.camera.exif.Rational) -> writeRational
    38:40:com.android.camera.exif.OrderedDataOutputStream writeShort(short) -> writeShort
com.android.camera.exif.Rational -> com.android.camera.exif.Rational:
    35:37:void <init>(long,long) -> <init>
    78:80:boolean equals(java.lang.Object) -> equals
    59:59:long getDenominator() -> getDenominator
    52:52:long getNumerator() -> getNumerator
    67:67:double toDouble() -> toDouble
    87:87:java.lang.String toString() -> toString
com.android.camera.hardware.HardwareSpecImpl -> com.android.camera.hardware.HardwareSpecImpl:
    43:57:void <init>(com.android.camera.app.CameraProvider,com.android.ex.camera2.portability.CameraCapabilities,com.android.camera.one.config.OneCameraFeatureConfig,boolean) -> <init>
    77:77:boolean isFlashSupported() -> isFlashSupported
    85:86:boolean isFlashSupported(com.android.ex.camera2.portability.CameraCapabilities) -> isFlashSupported
    62:62:boolean isFrontCameraSupported() -> isFrontCameraSupported
    72:72:boolean isHdrPlusSupported() -> isHdrPlusSupported
    67:67:boolean isHdrSupported() -> isHdrSupported
com.android.camera.hardware.HeadingSensor -> com.android.camera.hardware.HeadingSensor:
    31:31:void <clinit>() -> <clinit>
    36:61:void <init>(android.hardware.SensorManager) -> <init>
    80:85:void activate() -> activate
    95:99:void deactivate() -> deactivate
    71:71:int getCurrentHeading() -> getCurrentHeading
    106:125:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.android.camera.module.ModulesInfo -> com.android.camera.module.ModulesInfo:
    45:45:void <clinit>() -> <clinit>
    44:44:com.android.camera.debug.Log$Tag access$000() -> access$000
    235:235:void registerCaptureIntentModule(com.android.camera.app.ModuleManager,int,java.lang.String,boolean) -> registerCaptureIntentModule
    210:210:void registerGcamModule(com.android.camera.app.ModuleManager,int,java.lang.String,com.android.camera.one.config.OneCameraFeatureConfig$HdrPlusSupportLevel) -> registerGcamModule
    79:79:void registerPhotoModule(com.android.camera.app.ModuleManager,int,java.lang.String,boolean) -> registerPhotoModule
    160:160:void registerPhotoSphereModule(com.android.camera.app.ModuleManager,int,java.lang.String) -> registerPhotoSphereModule
    185:185:void registerRefocusModule(com.android.camera.app.ModuleManager,int,java.lang.String) -> registerRefocusModule
    110:110:void registerVideoModule(com.android.camera.app.ModuleManager,int,java.lang.String) -> registerVideoModule
    135:135:void registerWideAngleModule(com.android.camera.app.ModuleManager,int,java.lang.String) -> registerWideAngleModule
    49:74:void setupModules(android.content.Context,com.android.camera.app.ModuleManager,com.android.camera.one.config.OneCameraFeatureConfig) -> setupModules
com.android.camera.module.ModulesInfo$1 -> com.android.camera.module.ModulesInfo$1:
    79:79:void <init>(int,boolean,java.lang.String) -> <init>
    102:103:com.android.camera.module.ModuleController createModule(com.android.camera.app.AppController,android.content.Intent) -> createModule
    83:83:int getModuleId() -> getModuleId
    97:97:java.lang.String getScopeNamespace() -> getScopeNamespace
    92:92:boolean requestAppForCamera() -> requestAppForCamera
com.android.camera.module.ModulesInfo$2 -> com.android.camera.module.ModulesInfo$2:
    110:110:void <init>(int,java.lang.String) -> <init>
    128:128:com.android.camera.module.ModuleController createModule(com.android.camera.app.AppController,android.content.Intent) -> createModule
    113:113:int getModuleId() -> getModuleId
    123:123:java.lang.String getScopeNamespace() -> getScopeNamespace
com.android.camera.module.ModulesInfo$3 -> com.android.camera.module.ModulesInfo$3:
    135:135:void <init>(int,java.lang.String) -> <init>
    153:153:com.android.camera.module.ModuleController createModule(com.android.camera.app.AppController,android.content.Intent) -> createModule
    138:138:int getModuleId() -> getModuleId
    148:148:java.lang.String getScopeNamespace() -> getScopeNamespace
com.android.camera.module.ModulesInfo$4 -> com.android.camera.module.ModulesInfo$4:
    160:160:void <init>(int,java.lang.String) -> <init>
    178:178:com.android.camera.module.ModuleController createModule(com.android.camera.app.AppController,android.content.Intent) -> createModule
    163:163:int getModuleId() -> getModuleId
    173:173:java.lang.String getScopeNamespace() -> getScopeNamespace
com.android.camera.module.ModulesInfo$5 -> com.android.camera.module.ModulesInfo$5:
    185:185:void <init>(int,java.lang.String) -> <init>
    203:203:com.android.camera.module.ModuleController createModule(com.android.camera.app.AppController,android.content.Intent) -> createModule
    188:188:int getModuleId() -> getModuleId
    198:198:java.lang.String getScopeNamespace() -> getScopeNamespace
com.android.camera.module.ModulesInfo$6 -> com.android.camera.module.ModulesInfo$6:
    210:210:void <init>(int,java.lang.String,com.android.camera.one.config.OneCameraFeatureConfig$HdrPlusSupportLevel) -> <init>
    228:228:com.android.camera.module.ModuleController createModule(com.android.camera.app.AppController,android.content.Intent) -> createModule
    213:213:int getModuleId() -> getModuleId
    223:223:java.lang.String getScopeNamespace() -> getScopeNamespace
com.android.camera.module.ModulesInfo$7 -> com.android.camera.module.ModulesInfo$7:
    235:235:void <init>(int,boolean,java.lang.String) -> <init>
    253:259:com.android.camera.module.ModuleController createModule(com.android.camera.app.AppController,android.content.Intent) -> createModule
    238:238:int getModuleId() -> getModuleId
    248:248:java.lang.String getScopeNamespace() -> getScopeNamespace
    243:243:boolean requestAppForCamera() -> requestAppForCamera
com.android.camera.one.FlashSetting -> com.android.camera.one.FlashSetting:
    38:38:void <init>(com.android.camera.async.Observable) -> <init>
com.android.camera.one.FlashSetting$FlashStringToEnum -> com.android.camera.one.FlashSetting$FlashStringToEnum:
    29:29:void <init>() -> <init>
    29:29:void <init>(com.android.camera.one.FlashSetting$1) -> <init>
    29:29:java.lang.Object apply(java.lang.Object) -> apply
    33:33:com.android.camera.one.OneCamera$PhotoCaptureParameters$Flash apply(java.lang.String) -> apply
com.android.camera.one.OneCamera$AutoFocusState -> com.android.camera.one.OneCamera$AutoFocusState:
    57:71:void <clinit>() -> <clinit>
    57:57:void <init>(java.lang.String,int) -> <init>
    57:57:com.android.camera.one.OneCamera$AutoFocusState valueOf(java.lang.String) -> valueOf
    57:57:com.android.camera.one.OneCamera$AutoFocusState[] values() -> values
com.android.camera.one.OneCamera$CaptureParameters -> com.android.camera.one.OneCamera$CaptureParameters:
    279:283:void <init>(java.lang.String,int,android.location.Location,java.io.File) -> <init>
com.android.camera.one.OneCamera$Facing -> com.android.camera.one.OneCamera$Facing:
    41:42:void <clinit>() -> <clinit>
    41:41:void <init>(java.lang.String,int) -> <init>
    41:41:com.android.camera.one.OneCamera$Facing valueOf(java.lang.String) -> valueOf
    41:41:com.android.camera.one.OneCamera$Facing[] values() -> values
com.android.camera.one.OneCamera$FocusState -> com.android.camera.one.OneCamera$FocusState:
    224:226:void <init>(float,boolean) -> <init>
    233:240:boolean equals(java.lang.Object) -> equals
    248:249:int hashCode() -> hashCode
    255:255:java.lang.String toString() -> toString
com.android.camera.one.OneCamera$PhotoCaptureParameters -> com.android.camera.one.OneCamera$PhotoCaptureParameters:
    342:347:void <init>(java.lang.String,int,android.location.Location,java.io.File,com.android.camera.one.OneCamera$PictureCallback,com.android.camera.one.OneCamera$PictureSaverCallback,int,float,float) -> <init>
com.android.camera.one.OneCamera$PhotoCaptureParameters$Flash -> com.android.camera.one.OneCamera$PhotoCaptureParameters$Flash:
    295:296:void <clinit>() -> <clinit>
    307:308:void <init>(java.lang.String,int,java.lang.String) -> <init>
    318:325:com.android.camera.one.OneCamera$PhotoCaptureParameters$Flash decodeSettingsString(java.lang.String) -> decodeSettingsString
    313:313:java.lang.String encodeSettingsString() -> encodeSettingsString
    295:295:com.android.camera.one.OneCamera$PhotoCaptureParameters$Flash valueOf(java.lang.String) -> valueOf
    295:295:com.android.camera.one.OneCamera$PhotoCaptureParameters$Flash[] values() -> values
com.android.camera.one.OneCameraAccessException -> com.android.camera.one.OneCameraAccessException:
    23:23:void <init>(java.lang.String) -> <init>
    27:27:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.android.camera.one.OneCameraCaptureSetting -> com.android.camera.one.OneCameraCaptureSetting:
    77:82:void <init>(com.android.camera.util.Size,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.async.Observable,boolean) -> <init>
    49:64:com.android.camera.one.OneCameraCaptureSetting create(com.android.camera.util.Size,com.android.camera.settings.SettingsManager,com.android.camera.hardware.HardwareSpec,java.lang.String,boolean) -> create
    86:86:com.android.camera.util.Size getCaptureSize() -> getCaptureSize
    94:94:com.android.camera.async.Observable getExposureSetting() -> getExposureSetting
    90:90:com.android.camera.async.Observable getFlashSetting() -> getFlashSetting
    98:98:com.android.camera.async.Observable getHdrSceneSetting() -> getHdrSceneSetting
com.android.camera.one.OneCameraCharacteristics$FaceDetectMode -> com.android.camera.one.OneCameraCharacteristics$FaceDetectMode:
    37:38:void <clinit>() -> <clinit>
    37:37:void <init>(java.lang.String,int) -> <init>
    37:37:com.android.camera.one.OneCameraCharacteristics$FaceDetectMode valueOf(java.lang.String) -> valueOf
    37:37:com.android.camera.one.OneCameraCharacteristics$FaceDetectMode[] values() -> values
com.android.camera.one.OneCameraCharacteristics$SupportedHardwareLevel -> com.android.camera.one.OneCameraCharacteristics$SupportedHardwareLevel:
    33:34:void <clinit>() -> <clinit>
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:com.android.camera.one.OneCameraCharacteristics$SupportedHardwareLevel valueOf(java.lang.String) -> valueOf
    33:33:com.android.camera.one.OneCameraCharacteristics$SupportedHardwareLevel[] values() -> values
com.android.camera.one.OneCameraException -> com.android.camera.one.OneCameraException:
    27:27:void <init>(java.lang.String) -> <init>
com.android.camera.one.OneCameraModule -> com.android.camera.one.OneCameraModule:
    68:78:com.android.camera.one.OneCameraManager provideOneCameraManager() -> provideOneCameraManager
    48:56:com.android.camera.one.OneCameraOpener provideOneCameraOpener(com.android.camera.one.config.OneCameraFeatureConfig,android.content.Context,com.android.camera.device.ActiveCameraDeviceTracker,android.util.DisplayMetrics) -> provideOneCameraOpener
com.android.camera.one.Settings3A -> com.android.camera.one.Settings3A:
    25:25:void <init>() -> <init>
com.android.camera.one.config.OneCameraFeatureConfig -> com.android.camera.one.config.OneCameraFeatureConfig:
    100:105:void <init>(boolean,com.google.common.base.Function,com.android.camera.one.config.OneCameraFeatureConfig$HdrPlusSupportLevel,int,int) -> <init>
    121:121:com.android.camera.one.config.OneCameraFeatureConfig$CaptureSupportLevel getCaptureSupportLevel(android.hardware.camera2.CameraCharacteristics) -> getCaptureSupportLevel
    128:131:com.android.camera.one.config.OneCameraFeatureConfig$HdrPlusSupportLevel getHdrPlusSupportLevel(com.android.camera.one.OneCamera$Facing) -> getHdrPlusSupportLevel
    147:147:int getMaxAllowedImageReaderCount() -> getMaxAllowedImageReaderCount
    112:112:boolean isUsingCaptureModule() -> isUsingCaptureModule
com.android.camera.one.config.OneCameraFeatureConfig$CaptureSupportLevel -> com.android.camera.one.config.OneCameraFeatureConfig$CaptureSupportLevel:
    36:50:void <clinit>() -> <clinit>
    36:36:void <init>(java.lang.String,int) -> <init>
    56:64:com.google.common.base.Optional fromFlag(int) -> fromFlag
    36:36:com.android.camera.one.config.OneCameraFeatureConfig$CaptureSupportLevel valueOf(java.lang.String) -> valueOf
    36:36:com.android.camera.one.config.OneCameraFeatureConfig$CaptureSupportLevel[] values() -> values
com.android.camera.one.config.OneCameraFeatureConfig$HdrPlusSupportLevel -> com.android.camera.one.config.OneCameraFeatureConfig$HdrPlusSupportLevel:
    70:76:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    70:70:com.android.camera.one.config.OneCameraFeatureConfig$HdrPlusSupportLevel valueOf(java.lang.String) -> valueOf
    70:70:com.android.camera.one.config.OneCameraFeatureConfig$HdrPlusSupportLevel[] values() -> values
com.android.camera.one.config.OneCameraFeatureConfigCreator -> com.android.camera.one.config.OneCameraFeatureConfigCreator:
    36:36:void <clinit>() -> <clinit>
    35:35:com.google.common.base.Optional access$000(android.hardware.camera2.CameraCharacteristics,android.content.ContentResolver) -> access$000
    35:35:com.android.camera.debug.Log$Tag access$100() -> access$100
    35:35:boolean access$200(android.hardware.camera2.CameraCharacteristics) -> access$200
    59:59:com.google.common.base.Function buildCaptureModuleDetector(android.content.ContentResolver) -> buildCaptureModuleDetector
    45:54:com.android.camera.one.config.OneCameraFeatureConfig createDefault(android.content.ContentResolver,com.android.camera.app.MemoryManager) -> createDefault
    161:178:com.google.common.base.Optional getCaptureSupportLevelOverride(android.hardware.camera2.CameraCharacteristics,android.content.ContentResolver) -> getCaptureSupportLevelOverride
    134:146:boolean supportsReprocessing(android.hardware.camera2.CameraCharacteristics) -> supportsReprocessing
com.android.camera.one.config.OneCameraFeatureConfigCreator$1 -> com.android.camera.one.config.OneCameraFeatureConfigCreator$1:
    59:59:void <init>(android.content.ContentResolver) -> <init>
    59:59:java.lang.Object apply(java.lang.Object) -> apply
    64:128:com.android.camera.one.config.OneCameraFeatureConfig$CaptureSupportLevel apply(android.hardware.camera2.CameraCharacteristics) -> apply
com.android.camera.one.v1.LegacyOneCameraManagerImpl -> com.android.camera.one.v1.LegacyOneCameraManagerImpl:
    36:36:void <clinit>() -> <clinit>
    97:101:void <init>(com.android.camera.device.CameraId,com.android.camera.device.CameraId,android.hardware.Camera$CameraInfo[]) -> <init>
    168:180:com.android.camera.one.OneCameraCharacteristics computeCameraCharacteristics(com.android.camera.device.CameraId) -> computeCameraCharacteristics
    121:123:com.android.camera.device.CameraId findFirstCameraFacing(com.android.camera.one.OneCamera$Facing) -> findFirstCameraFacing
    133:159:com.android.camera.one.OneCameraCharacteristics getOneCameraCharacteristics(com.android.camera.device.CameraId) -> getOneCameraCharacteristics
    111:111:boolean hasCameraFacing(com.android.camera.one.OneCamera$Facing) -> hasCameraFacing
    51:87:com.google.common.base.Optional instance() -> instance
com.android.camera.one.v1.LegacyOneCameraOpenerImpl -> com.android.camera.one.v1.LegacyOneCameraOpenerImpl:
    43:43:void <init>() -> <init>
    36:37:com.google.common.base.Optional create() -> create
    56:56:void open(com.android.camera.device.CameraId,com.android.camera.one.OneCameraCaptureSetting,android.os.Handler,com.android.camera.async.MainThread,com.android.camera.one.v2.photo.ImageRotationCalculator,com.android.camera.burst.BurstFacade,com.android.camera.SoundPlayer,com.android.camera.one.OneCamera$OpenCallback,com.android.camera.FatalErrorHandler) -> open
com.android.camera.one.v1.OneCameraCharacteristicsImpl -> com.android.camera.one.v1.OneCameraCharacteristicsImpl:
    41:61:void <init>(android.hardware.Camera$CameraInfo,android.hardware.Camera$Parameters) -> <init>
    98:98:float getAvailableMaxDigitalZoom() -> getAvailableMaxDigitalZoom
    83:87:com.android.camera.one.OneCamera$Facing getCameraDirection() -> getCameraDirection
    166:169:float getExposureCompensationStep() -> getExposureCompensationStep
    127:127:com.android.camera.ui.motion.LinearScale getLensFocusRange() -> getLensFocusRange
    158:161:int getMaxExposureCompensation() -> getMaxExposureCompensation
    150:153:int getMinExposureCompensation() -> getMinExposureCompensation
    93:93:android.graphics.Rect getSensorInfoActiveArraySize() -> getSensorInfoActiveArraySize
    78:78:int getSensorOrientation() -> getSensorOrientation
    119:120:java.util.List getSupportedFaceDetectModes() -> getSupportedFaceDetectModes
    114:114:com.android.camera.one.OneCameraCharacteristics$SupportedHardwareLevel getSupportedHardwareLevel() -> getSupportedHardwareLevel
    68:68:java.util.List getSupportedPictureSizes(int) -> getSupportedPictureSizes
    73:73:java.util.List getSupportedPreviewSizes() -> getSupportedPreviewSizes
    186:186:boolean isAutoExposureSupported() -> isAutoExposureSupported
    175:175:boolean isAutoFocusSupported() -> isAutoFocusSupported
    180:180:boolean isContinuousPictureAutoFocusSupported() -> isContinuousPictureAutoFocusSupported
    141:145:boolean isExposureCompensationSupported() -> isExposureCompensationSupported
    103:103:boolean isFlashSupported() -> isFlashSupported
    108:108:boolean isHdrSceneSupported() -> isHdrSceneSupported
com.android.camera.one.v2.AutoFocusHelper -> com.android.camera.one.v2.AutoFocusHelper:
    36:44:void <clinit>() -> <clinit>
    58:70:com.android.camera.one.OneCamera$AutoFocusState stateFromCamera2State(int) -> stateFromCamera2State
com.android.camera.one.v2.Camera2OneCameraManagerImpl -> com.android.camera.one.v2.Camera2OneCameraManagerImpl:
    46:46:void <clinit>() -> <clinit>
    67:78:void <init>(android.hardware.camera2.CameraManager) -> <init>
    51:63:com.google.common.base.Optional create() -> create
    137:149:java.lang.String findCameraId(com.android.camera.one.OneCamera$Facing) -> findCameraId
    156:162:java.lang.String findFirstBackCameraId() -> findFirstBackCameraId
    114:115:com.android.camera.device.CameraId findFirstCameraFacing(com.android.camera.one.OneCamera$Facing) -> findFirstCameraFacing
    186:195:java.lang.String findFirstCameraIdFacing(int) -> findFirstCameraIdFacing
    170:176:java.lang.String findFirstFrontCameraId() -> findFirstFrontCameraId
    129:131:android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(com.android.camera.device.CameraId) -> getCameraCharacteristics
    122:122:com.android.camera.one.OneCameraCharacteristics getOneCameraCharacteristics(com.android.camera.device.CameraId) -> getOneCameraCharacteristics
    95:95:boolean hasCameraFacing(com.android.camera.one.OneCamera$Facing) -> hasCameraFacing
com.android.camera.one.v2.Camera2OneCameraOpenerImpl -> com.android.camera.one.v2.Camera2OneCameraOpenerImpl:
    53:53:void <clinit>() -> <clinit>
    94:99:void <init>(com.android.camera.one.config.OneCameraFeatureConfig,android.content.Context,android.hardware.camera2.CameraManager,com.android.camera.device.ActiveCameraDeviceTracker,android.util.DisplayMetrics) -> <init>
    52:52:android.hardware.camera2.CameraManager access$000(com.android.camera.one.v2.Camera2OneCameraOpenerImpl) -> access$000
    52:52:com.android.camera.one.config.OneCameraFeatureConfig access$100(com.android.camera.one.v2.Camera2OneCameraOpenerImpl) -> access$100
    52:52:android.util.DisplayMetrics access$200(com.android.camera.one.v2.Camera2OneCameraOpenerImpl) -> access$200
    52:52:android.content.Context access$300(com.android.camera.one.v2.Camera2OneCameraOpenerImpl) -> access$300
    52:52:com.android.camera.debug.Log$Tag access$400() -> access$400
    66:82:com.google.common.base.Optional create(com.android.camera.one.config.OneCameraFeatureConfig,android.content.Context,com.android.camera.device.ActiveCameraDeviceTracker,android.util.DisplayMetrics) -> create
    114:212:void open(com.android.camera.device.CameraId,com.android.camera.one.OneCameraCaptureSetting,android.os.Handler,com.android.camera.async.MainThread,com.android.camera.one.v2.photo.ImageRotationCalculator,com.android.camera.burst.BurstFacade,com.android.camera.SoundPlayer,com.android.camera.one.OneCamera$OpenCallback,com.android.camera.FatalErrorHandler) -> open
com.android.camera.one.v2.Camera2OneCameraOpenerImpl$1 -> com.android.camera.one.v2.Camera2OneCameraOpenerImpl$1:
    118:124:void <init>(com.android.camera.one.v2.Camera2OneCameraOpenerImpl,com.android.camera.one.OneCamera$OpenCallback,com.android.camera.FatalErrorHandler,com.android.camera.one.OneCameraCaptureSetting,com.android.camera.async.MainThread,com.android.camera.one.v2.photo.ImageRotationCalculator,com.android.camera.burst.BurstFacade,com.android.camera.SoundPlayer) -> <init>
    139:141:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    128:133:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    147:154:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    160:190:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
com.android.camera.one.v2.Camera2OneCameraOpenerImpl$2 -> com.android.camera.one.v2.Camera2OneCameraOpenerImpl$2:
    197:197:void <init>(com.android.camera.one.v2.Camera2OneCameraOpenerImpl,com.android.camera.one.OneCamera$OpenCallback) -> <init>
    200:200:void run() -> run
com.android.camera.one.v2.Camera2OneCameraOpenerImpl$3 -> com.android.camera.one.v2.Camera2OneCameraOpenerImpl$3:
    205:205:void <init>(com.android.camera.one.v2.Camera2OneCameraOpenerImpl,com.android.camera.one.OneCamera$OpenCallback) -> <init>
    208:208:void run() -> run
com.android.camera.one.v2.CloseWhenDoneImageReader -> com.android.camera.one.v2.CloseWhenDoneImageReader:
    65:68:void <init>(com.android.camera.one.v2.camera2proxy.ImageReaderProxy) -> <init>
    37:37:void access$000(com.android.camera.one.v2.CloseWhenDoneImageReader) -> access$000
    84:92:com.android.camera.one.v2.camera2proxy.ImageProxy acquireNextImage() -> acquireNextImage
    113:122:void close() -> close
    72:78:void decrementImageCount() -> decrementImageCount
com.android.camera.one.v2.CloseWhenDoneImageReader$ImageDecorator -> com.android.camera.one.v2.CloseWhenDoneImageReader$ImageDecorator:
    42:44:void <init>(com.android.camera.one.v2.CloseWhenDoneImageReader,com.android.camera.one.v2.camera2proxy.ImageProxy) -> <init>
    49:51:void close() -> close
com.android.camera.one.v2.LoggingImageReader -> com.android.camera.one.v2.LoggingImageReader:
    53:55:void <init>(com.android.camera.one.v2.camera2proxy.ImageReaderProxy,com.android.camera.debug.Logger$Factory) -> <init>
    31:31:void access$000(com.android.camera.one.v2.LoggingImageReader) -> access$000
    61:61:com.android.camera.one.v2.camera2proxy.ImageProxy acquireNextImage() -> acquireNextImage
    81:82:void close() -> close
    75:76:com.android.camera.one.v2.camera2proxy.ImageProxy decorateNewImage(com.android.camera.one.v2.camera2proxy.ImageProxy) -> decorateNewImage
    94:94:void decrementOpenImageCount() -> decrementOpenImageCount
    86:89:void incrementOpenImageCount() -> incrementOpenImageCount
com.android.camera.one.v2.LoggingImageReader$LoggingImageProxy -> com.android.camera.one.v2.LoggingImageReader$LoggingImageProxy:
    35:37:void <init>(com.android.camera.one.v2.LoggingImageReader,com.android.camera.one.v2.camera2proxy.ImageProxy) -> <init>
    42:44:void close() -> close
com.android.camera.one.v2.OneCameraCharacteristicsImpl -> com.android.camera.one.v2.OneCameraCharacteristicsImpl:
    51:51:void <clinit>() -> <clinit>
    55:56:void <init>(android.hardware.camera2.CameraCharacteristics) -> <init>
    118:118:float getAvailableMaxDigitalZoom() -> getAvailableMaxDigitalZoom
    103:107:com.android.camera.one.OneCamera$Facing getCameraDirection() -> getCameraDirection
    230:235:float getExposureCompensationStep() -> getExposureCompensationStep
    188:188:com.android.camera.ui.motion.LinearScale getLensFocusRange() -> getLensFocusRange
    220:225:int getMaxExposureCompensation() -> getMaxExposureCompensation
    210:215:int getMinExposureCompensation() -> getMinExposureCompensation
    113:113:android.graphics.Rect getSensorInfoActiveArraySize() -> getSensorInfoActiveArraySize
    98:98:int getSensorOrientation() -> getSensorOrientation
    166:179:java.util.List getSupportedFaceDetectModes() -> getSupportedFaceDetectModes
    142:160:com.android.camera.one.OneCameraCharacteristics$SupportedHardwareLevel getSupportedHardwareLevel() -> getSupportedHardwareLevel
    63:73:java.util.List getSupportedPictureSizes(int) -> getSupportedPictureSizes
    82:91:java.util.List getSupportedPreviewSizes() -> getSupportedPreviewSizes
    262:265:boolean isAutoExposureSupported() -> isAutoExposureSupported
    240:243:boolean isAutoFocusSupported() -> isAutoFocusSupported
    248:257:boolean isContinuousPictureAutoFocusSupported() -> isContinuousPictureAutoFocusSupported
    200:205:boolean isExposureCompensationSupported() -> isExposureCompensationSupported
    123:123:boolean isFlashSupported() -> isFlashSupported
    130:132:boolean isHdrSceneSupported() -> isHdrSceneSupported
com.android.camera.one.v2.OneCameraCreator -> com.android.camera.one.v2.OneCameraCreator:
    46:46:void <clinit>() -> <clinit>
    63:128:com.android.camera.one.OneCamera create(android.hardware.camera2.CameraDevice,android.hardware.camera2.CameraCharacteristics,com.android.camera.one.config.OneCameraFeatureConfig,com.android.camera.one.OneCameraCaptureSetting,android.util.DisplayMetrics,android.content.Context,com.android.camera.async.MainThread,com.android.camera.one.v2.photo.ImageRotationCalculator,com.android.camera.burst.BurstFacade,com.android.camera.SoundPlayer,com.android.camera.FatalErrorHandler) -> create
com.android.camera.one.v2.OneCameraCreator$1 -> com.android.camera.one.v2.OneCameraCreator$1:
    79:79:void <clinit>() -> <clinit>
com.android.camera.one.v2.SimpleOneCameraFactory -> com.android.camera.one.v2.SimpleOneCameraFactory:
    93:96:void <init>(int,int,com.android.camera.one.v2.photo.ImageRotationCalculator) -> <init>
    81:81:com.android.camera.one.v2.photo.ImageRotationCalculator access$000(com.android.camera.one.v2.SimpleOneCameraFactory) -> access$000
    111:255:com.android.camera.one.OneCamera createOneCamera(com.android.camera.one.v2.camera2proxy.CameraDeviceProxy,com.android.camera.one.OneCameraCharacteristics,com.android.camera.one.config.OneCameraFeatureConfig$CaptureSupportLevel,com.android.camera.async.MainThread,com.android.camera.util.Size,com.android.camera.one.v2.imagesaver.ImageSaver$Builder,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.burst.BurstFacade,com.android.camera.FatalErrorHandler) -> createOneCamera
com.android.camera.one.v2.SimpleOneCameraFactory$1 -> com.android.camera.one.v2.SimpleOneCameraFactory$1:
    129:129:void <init>(com.android.camera.one.v2.SimpleOneCameraFactory,com.android.camera.one.v2.camera2proxy.ImageReaderProxy,com.android.camera.one.v2.camera2proxy.CameraDeviceProxy,com.android.camera.one.OneCameraCharacteristics,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.one.config.OneCameraFeatureConfig$CaptureSupportLevel,com.android.camera.one.v2.imagesaver.ImageSaver$Builder,com.android.camera.async.MainThread,com.android.camera.async.Lifetime) -> <init>
    138:244:com.android.camera.one.v2.initialization.CameraStarter$CameraControls startCamera(com.android.camera.async.Lifetime,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,android.view.Surface,com.android.camera.async.Observable,com.android.camera.async.Updatable,com.android.camera.async.Updatable) -> startCamera
com.android.camera.one.v2.SimpleOneCameraFactory$1$1 -> com.android.camera.one.v2.SimpleOneCameraFactory$1$1:
    143:143:void <init>(com.android.camera.one.v2.SimpleOneCameraFactory$1) -> <init>
    143:143:java.lang.Object get() -> get
    149:149:java.util.concurrent.ExecutorService get() -> get
com.android.camera.one.v2.SimpleOneCameraFactory$1$2 -> com.android.camera.one.v2.SimpleOneCameraFactory$1$2:
    229:229:void <init>(com.android.camera.one.v2.SimpleOneCameraFactory$1,com.android.camera.async.Observable,com.android.camera.async.Observable) -> <init>
    229:229:java.lang.Object get() -> get
    232:234:java.lang.Boolean get() -> get
com.android.camera.one.v2.ZslOneCameraFactory -> com.android.camera.one.v2.ZslOneCameraFactory:
    80:80:void <clinit>() -> <clinit>
    87:109:void <init>(int,int) -> <init>
    79:79:int access$000(com.android.camera.one.v2.ZslOneCameraFactory) -> access$000
    79:79:void access$100(com.android.camera.one.v2.ZslOneCameraFactory,com.android.camera.one.v2.core.RequestTemplate) -> access$100
    79:79:int access$200(com.android.camera.one.v2.ZslOneCameraFactory) -> access$200
    127:129:void applyNexus5BackCameraFrameRateWorkaround(com.android.camera.one.v2.core.RequestTemplate) -> applyNexus5BackCameraFrameRateWorkaround
    144:327:com.android.camera.one.OneCamera createOneCamera(com.android.camera.one.v2.camera2proxy.CameraDeviceProxy,com.android.camera.one.OneCameraCharacteristics,com.android.camera.one.config.OneCameraFeatureConfig$CaptureSupportLevel,com.android.camera.async.MainThread,com.android.camera.util.Size,com.android.camera.one.v2.imagesaver.ImageSaver$Builder,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.burst.BurstFacade,com.android.camera.FatalErrorHandler) -> createOneCamera
com.android.camera.one.v2.ZslOneCameraFactory$1 -> com.android.camera.one.v2.ZslOneCameraFactory$1:
    164:164:void <init>(com.android.camera.one.v2.ZslOneCameraFactory,com.android.camera.one.v2.camera2proxy.ImageReaderProxy,com.android.camera.one.v2.camera2proxy.CameraDeviceProxy,com.android.camera.one.OneCameraCharacteristics,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.async.Lifetime,com.android.camera.async.MainThread,com.android.camera.one.v2.imagesaver.ImageSaver$Builder,com.android.camera.burst.BurstFacade,com.android.camera.FatalErrorHandler) -> <init>
    173:317:com.android.camera.one.v2.initialization.CameraStarter$CameraControls startCamera(com.android.camera.async.Lifetime,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,android.view.Surface,com.android.camera.async.Observable,com.android.camera.async.Updatable,com.android.camera.async.Updatable) -> startCamera
com.android.camera.one.v2.ZslOneCameraFactory$1$1 -> com.android.camera.one.v2.ZslOneCameraFactory$1$1:
    187:187:void <init>(com.android.camera.one.v2.ZslOneCameraFactory$1) -> <init>
    187:187:java.lang.Object get() -> get
    193:193:java.util.concurrent.ExecutorService get() -> get
com.android.camera.one.v2.ZslOneCameraFactory$1$2 -> com.android.camera.one.v2.ZslOneCameraFactory$1$2:
    301:301:void <init>(com.android.camera.one.v2.ZslOneCameraFactory$1,com.android.camera.async.Observable,com.android.camera.async.Observable) -> <init>
    301:301:java.lang.Object get() -> get
    304:306:java.lang.Boolean get() -> get
com.android.camera.one.v2.autofocus.AEMeteringRegion -> com.android.camera.one.v2.autofocus.AEMeteringRegion:
    33:35:void <init>(com.google.common.base.Supplier,com.google.common.base.Supplier) -> <init>
    28:28:java.lang.Object get() -> get
    40:40:android.hardware.camera2.params.MeteringRectangle[] get() -> get
com.android.camera.one.v2.autofocus.AETriggerResult -> com.android.camera.one.v2.autofocus.AETriggerResult:
    57:61:void <clinit>() -> <clinit>
    66:70:void <init>() -> <init>
    95:97:boolean get() -> get
    55:55:void update(java.lang.Object) -> update
    75:83:void update(com.android.camera.one.v2.camera2proxy.CaptureResultProxy) -> update
com.android.camera.one.v2.autofocus.AFMeteringRegion -> com.android.camera.one.v2.autofocus.AFMeteringRegion:
    33:35:void <init>(com.google.common.base.Supplier,com.google.common.base.Supplier) -> <init>
    28:28:java.lang.Object get() -> get
    40:40:android.hardware.camera2.params.MeteringRectangle[] get() -> get
com.android.camera.one.v2.autofocus.AFScanHoldResetCommand -> com.android.camera.one.v2.autofocus.AFScanHoldResetCommand:
    40:44:void <init>(com.android.camera.one.v2.commands.CameraCommand,com.android.camera.async.ResettingDelayedExecutor,java.lang.Runnable,com.android.camera.async.Updatable) -> <init>
    31:31:com.android.camera.async.Updatable access$000(com.android.camera.one.v2.autofocus.AFScanHoldResetCommand) -> access$000
    31:31:java.lang.Runnable access$100(com.android.camera.one.v2.autofocus.AFScanHoldResetCommand) -> access$100
    52:54:void run() -> run
com.android.camera.one.v2.autofocus.AFScanHoldResetCommand$1 -> com.android.camera.one.v2.autofocus.AFScanHoldResetCommand$1:
    54:54:void <init>(com.android.camera.one.v2.autofocus.AFScanHoldResetCommand) -> <init>
    57:58:void run() -> run
com.android.camera.one.v2.autofocus.AFTriggerResult -> com.android.camera.one.v2.autofocus.AFTriggerResult:
    55:58:void <clinit>() -> <clinit>
    63:65:void <init>() -> <init>
    92:94:boolean get() -> get
    53:53:void update(java.lang.Object) -> update
    72:80:void update(com.android.camera.one.v2.camera2proxy.CaptureResultProxy) -> update
com.android.camera.one.v2.autofocus.FullAFScanCommand -> com.android.camera.one.v2.autofocus.FullAFScanCommand:
    51:54:void <init>(com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,int) -> <init>
    141:150:com.android.camera.one.v2.core.RequestBuilder createAFCancelRequest(com.android.camera.one.v2.autofocus.AFTriggerResult) -> createAFCancelRequest
    113:122:com.android.camera.one.v2.core.RequestBuilder createAFIdleRequest(com.android.camera.one.v2.autofocus.AFTriggerResult) -> createAFIdleRequest
    128:134:com.android.camera.one.v2.core.RequestBuilder createAFTriggerRequest(com.android.camera.one.v2.autofocus.AFTriggerResult) -> createAFTriggerRequest
    64:108:void run() -> run
com.android.camera.one.v2.autofocus.GlobalMeteringParameters -> com.android.camera.one.v2.autofocus.GlobalMeteringParameters:
    27:27:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    36:36:com.android.camera.one.v2.autofocus.MeteringParameters create() -> create
    46:46:android.hardware.camera2.params.MeteringRectangle[] getAERegions(android.graphics.Rect) -> getAERegions
    41:41:android.hardware.camera2.params.MeteringRectangle[] getAFRegions(android.graphics.Rect) -> getAFRegions
com.android.camera.one.v2.autofocus.GlobalMeteringParameters$Singleton -> com.android.camera.one.v2.autofocus.GlobalMeteringParameters$Singleton:
    32:32:void <clinit>() -> <clinit>
    31:31:com.android.camera.one.v2.autofocus.GlobalMeteringParameters access$000() -> access$000
com.android.camera.one.v2.autofocus.ManualAutoFocusFactory -> com.android.camera.one.v2.autofocus.ManualAutoFocusFactory:
    51:54:void <init>(com.android.camera.one.v2.autofocus.ManualAutoFocus,com.google.common.base.Supplier,com.google.common.base.Supplier) -> <init>
    79:116:com.android.camera.one.v2.autofocus.ManualAutoFocusFactory create(com.android.camera.async.Lifetime,com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.commands.CameraCommandExecutor,com.google.common.base.Supplier,int,java.lang.Runnable,com.android.camera.one.v2.core.RequestBuilder$Factory,int,com.android.camera.one.Settings3A,java.util.concurrent.ScheduledExecutorService,int,boolean,boolean) -> create
    124:124:com.google.common.base.Supplier provideAEMeteringRegion() -> provideAEMeteringRegion
    128:128:com.google.common.base.Supplier provideAFMeteringRegion() -> provideAFMeteringRegion
    120:120:com.android.camera.one.v2.autofocus.ManualAutoFocus provideManualAutoFocus() -> provideManualAutoFocus
com.android.camera.one.v2.autofocus.ManualAutoFocusImpl -> com.android.camera.one.v2.autofocus.ManualAutoFocusImpl:
    37:41:void <init>(com.android.camera.async.Updatable,java.lang.Runnable,int,com.android.camera.one.Settings3A) -> <init>
    46:49:void triggerFocusAndMeterAtPoint(float,float) -> triggerFocusAndMeterAtPoint
com.android.camera.one.v2.autofocus.PointMeteringParameters -> com.android.camera.one.v2.autofocus.PointMeteringParameters:
    34:38:void <init>(android.graphics.PointF,android.graphics.PointF,int,com.android.camera.one.Settings3A) -> <init>
    149:149:int clamp(int,int,int) -> clamp
    60:66:com.android.camera.one.v2.autofocus.PointMeteringParameters createForNormalizedCoordinates(android.graphics.PointF,android.graphics.PointF,int,com.android.camera.one.Settings3A) -> createForNormalizedCoordinates
    76:77:android.hardware.camera2.params.MeteringRectangle[] getAERegions(android.graphics.Rect) -> getAERegions
    87:88:android.hardware.camera2.params.MeteringRectangle[] getAFRegions(android.graphics.Rect) -> getAFRegions
    95:123:android.hardware.camera2.params.MeteringRectangle regionForNormalizedCoord(android.graphics.PointF,android.graphics.Rect) -> regionForNormalizedCoord
    133:144:android.graphics.PointF transformPortraitCoordinatesToSensorCoordinates(android.graphics.PointF) -> transformPortraitCoordinatesToSensorCoordinates
com.android.camera.one.v2.autofocus.TriggerStateMachine -> com.android.camera.one.v2.autofocus.TriggerStateMachine:
    63:68:void <init>(int,java.util.Set) -> <init>
    76:92:boolean update(long,java.lang.Integer,java.lang.Integer) -> update
com.android.camera.one.v2.autofocus.TriggerStateMachine$State -> com.android.camera.one.v2.autofocus.TriggerStateMachine$State:
    50:52:void <clinit>() -> <clinit>
    50:50:void <init>(java.lang.String,int) -> <init>
    50:50:com.android.camera.one.v2.autofocus.TriggerStateMachine$State valueOf(java.lang.String) -> valueOf
    50:50:com.android.camera.one.v2.autofocus.TriggerStateMachine$State[] values() -> values
com.android.camera.one.v2.camera2proxy.AndroidCameraCaptureSessionProxy -> com.android.camera.one.v2.camera2proxy.AndroidCameraCaptureSessionProxy:
    82:83:void <init>(android.hardware.camera2.CameraCaptureSession) -> <init>
    89:91:void abortCaptures() -> abortCaptures
    109:111:int captureBurst(java.util.List,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy$CaptureCallback,android.os.Handler) -> captureBurst
    117:117:void close() -> close
    129:131:int setRepeatingBurst(java.util.List,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy$CaptureCallback,android.os.Handler) -> setRepeatingBurst
com.android.camera.one.v2.camera2proxy.AndroidCameraCaptureSessionProxy$AndroidCaptureCallback -> com.android.camera.one.v2.camera2proxy.AndroidCameraCaptureSessionProxy$AndroidCaptureCallback:
    34:34:void <init>(com.android.camera.one.v2.camera2proxy.AndroidCameraCaptureSessionProxy,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy$CaptureCallback,com.android.camera.one.v2.camera2proxy.AndroidCameraCaptureSessionProxy$1) -> <init>
    37:38:void <init>(com.android.camera.one.v2.camera2proxy.AndroidCameraCaptureSessionProxy,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy$CaptureCallback) -> <init>
    58:58:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    64:64:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    51:51:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
    76:76:void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
    70:70:void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    44:44:void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long) -> onCaptureStarted
com.android.camera.one.v2.camera2proxy.AndroidCameraDeviceProxy -> com.android.camera.one.v2.camera2proxy.AndroidCameraDeviceProxy:
    70:71:void <init>(android.hardware.camera2.CameraDevice) -> <init>
    95:95:void close() -> close
    90:90:android.hardware.camera2.CaptureRequest$Builder createCaptureRequest(int) -> createCaptureRequest
    84:84:void createCaptureSession(java.util.List,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy$StateCallback,android.os.Handler) -> createCaptureSession
com.android.camera.one.v2.camera2proxy.AndroidCameraDeviceProxy$AndroidCaptureSessionStateCallback -> com.android.camera.one.v2.camera2proxy.AndroidCameraDeviceProxy$AndroidCaptureSessionStateCallback:
    33:33:void <init>(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy$StateCallback,com.android.camera.one.v2.camera2proxy.AndroidCameraDeviceProxy$1) -> <init>
    38:39:void <init>(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy$StateCallback) -> <init>
    59:59:void onActive(android.hardware.camera2.CameraCaptureSession) -> onActive
    64:64:void onClosed(android.hardware.camera2.CameraCaptureSession) -> onClosed
    49:49:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    44:44:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    54:54:void onReady(android.hardware.camera2.CameraCaptureSession) -> onReady
com.android.camera.one.v2.camera2proxy.AndroidCaptureResultProxy -> com.android.camera.one.v2.camera2proxy.AndroidCaptureResultProxy:
    35:36:void <init>(android.hardware.camera2.CaptureResult) -> <init>
    41:41:java.lang.Object get(android.hardware.camera2.CaptureResult$Key) -> get
    55:55:long getFrameNumber() -> getFrameNumber
    51:51:com.android.camera.one.v2.camera2proxy.CaptureRequestProxy getRequest() -> getRequest
com.android.camera.one.v2.camera2proxy.AndroidImageProxy -> com.android.camera.one.v2.camera2proxy.AndroidImageProxy:
    98:120:void <init>(android.media.Image) -> <init>
    200:202:void close() -> close
    220:227:boolean equals(java.lang.Object) -> equals
    160:160:int getFormat() -> getFormat
    168:168:int getHeight() -> getHeight
    176:176:java.util.List getPlanes() -> getPlanes
    184:184:long getTimestamp() -> getTimestamp
    192:192:int getWidth() -> getWidth
    232:232:int hashCode() -> hashCode
    207:212:java.lang.String toString() -> toString
com.android.camera.one.v2.camera2proxy.AndroidImageProxy$Plane -> com.android.camera.one.v2.camera2proxy.AndroidImageProxy$Plane:
    48:55:void <init>(com.android.camera.one.v2.camera2proxy.AndroidImageProxy,android.media.Image$Plane) -> <init>
    79:79:java.nio.ByteBuffer getBuffer() -> getBuffer
    71:71:int getPixelStride() -> getPixelStride
    63:63:int getRowStride() -> getRowStride
com.android.camera.one.v2.camera2proxy.AndroidImageReaderProxy -> com.android.camera.one.v2.camera2proxy.AndroidImageReaderProxy:
    38:40:void <init>(android.media.ImageReader) -> <init>
    129:136:com.android.camera.one.v2.camera2proxy.ImageProxy acquireNextImage() -> acquireNextImage
    156:158:void close() -> close
    86:88:int getHeight() -> getHeight
    93:95:int getImageFormat() -> getImageFormat
    100:102:int getMaxImages() -> getMaxImages
    108:110:android.view.Surface getSurface() -> getSurface
    79:81:int getWidth() -> getWidth
    74:74:java.lang.String imageFormatToString(int) -> imageFormatToString
    47:47:com.android.camera.one.v2.camera2proxy.ImageReaderProxy newInstance(int,int,int,int) -> newInstance
    143:151:void setOnImageAvailableListener(com.android.camera.one.v2.camera2proxy.ImageReaderProxy$OnImageAvailableListener,android.os.Handler) -> setOnImageAvailableListener
    164:170:java.lang.String toString() -> toString
com.android.camera.one.v2.camera2proxy.AndroidImageReaderProxy$1 -> com.android.camera.one.v2.camera2proxy.AndroidImageReaderProxy$1:
    145:145:void <init>(com.android.camera.one.v2.camera2proxy.AndroidImageReaderProxy,com.android.camera.one.v2.camera2proxy.ImageReaderProxy$OnImageAvailableListener) -> <init>
    148:148:void onImageAvailable(android.media.ImageReader) -> onImageAvailable
com.android.camera.one.v2.camera2proxy.AndroidTotalCaptureResultProxy -> com.android.camera.one.v2.camera2proxy.AndroidTotalCaptureResultProxy:
    53:54:void <init>(android.hardware.camera2.TotalCaptureResult) -> <init>
com.android.camera.one.v2.camera2proxy.CameraCaptureSessionClosedException -> com.android.camera.one.v2.camera2proxy.CameraCaptureSessionClosedException:
    25:25:void <init>() -> <init>
    29:29:void <init>(java.lang.String) -> <init>
    37:37:void <init>(java.lang.Throwable) -> <init>
com.android.camera.one.v2.camera2proxy.CameraDeviceRequestBuilderFactory -> com.android.camera.one.v2.camera2proxy.CameraDeviceRequestBuilderFactory:
    31:32:void <init>(com.android.camera.one.v2.camera2proxy.CameraDeviceProxy) -> <init>
    37:38:com.android.camera.one.v2.core.RequestBuilder create(int) -> create
com.android.camera.one.v2.camera2proxy.CaptureRequestBuilderProxy -> com.android.camera.one.v2.camera2proxy.CaptureRequestBuilderProxy:
    29:30:void <init>(android.hardware.camera2.CaptureRequest$Builder) -> <init>
    37:37:void addTarget(android.view.Surface) -> addTarget
    44:44:android.hardware.camera2.CaptureRequest build() -> build
    65:65:void set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> set
    72:72:void setTag(java.lang.Object) -> setTag
com.android.camera.one.v2.camera2proxy.CaptureRequestProxy -> com.android.camera.one.v2.camera2proxy.CaptureRequestProxy:
    33:34:void <init>(android.hardware.camera2.CaptureRequest) -> <init>
    53:53:boolean equals(java.lang.Object) -> equals
    39:39:java.lang.Object get(android.hardware.camera2.CaptureRequest$Key) -> get
    57:57:int hashCode() -> hashCode
com.android.camera.one.v2.camera2proxy.ForwardingImageProxy -> com.android.camera.one.v2.camera2proxy.ForwardingImageProxy:
    36:37:void <init>(com.android.camera.one.v2.camera2proxy.ImageProxy) -> <init>
    101:101:void close() -> close
    118:125:boolean equals(java.lang.Object) -> equals
    61:61:int getFormat() -> getFormat
    69:69:int getHeight() -> getHeight
    77:77:java.util.List getPlanes() -> getPlanes
    85:85:long getTimestamp() -> getTimestamp
    93:93:int getWidth() -> getWidth
    130:130:int hashCode() -> hashCode
    106:110:java.lang.String toString() -> toString
com.android.camera.one.v2.camera2proxy.ForwardingImageReader -> com.android.camera.one.v2.camera2proxy.ForwardingImageReader:
    28:29:void <init>(com.android.camera.one.v2.camera2proxy.ImageReaderProxy) -> <init>
    67:67:com.android.camera.one.v2.camera2proxy.ImageProxy acquireNextImage() -> acquireNextImage
    79:79:void close() -> close
    49:49:int getMaxImages() -> getMaxImages
    55:55:android.view.Surface getSurface() -> getSurface
    74:74:void setOnImageAvailableListener(com.android.camera.one.v2.camera2proxy.ImageReaderProxy$OnImageAvailableListener,android.os.Handler) -> setOnImageAvailableListener
    84:84:java.lang.String toString() -> toString
com.android.camera.one.v2.commands.BasicPreviewCommandFactory -> com.android.camera.one.v2.commands.BasicPreviewCommandFactory:
    28:29:void <init>(com.android.camera.one.v2.core.FrameServer) -> <init>
    34:34:com.android.camera.one.v2.commands.CameraCommand get(com.android.camera.one.v2.core.RequestBuilder$Factory,int) -> get
com.android.camera.one.v2.commands.CameraCommandExecutor -> com.android.camera.one.v2.commands.CameraCommandExecutor:
    88:93:void <init>(com.android.camera.debug.Logger$Factory,com.android.camera.util.Provider) -> <init>
    40:40:com.android.camera.debug.Logger access$000(com.android.camera.one.v2.commands.CameraCommandExecutor) -> access$000
    135:142:void close() -> close
    101:111:java.util.concurrent.Future execute(com.android.camera.one.v2.commands.CameraCommand) -> execute
    120:126:void flush() -> flush
com.android.camera.one.v2.commands.CameraCommandExecutor$CommandRunnable -> com.android.camera.one.v2.commands.CameraCommandExecutor$CommandRunnable:
    44:45:void <init>(com.android.camera.one.v2.commands.CameraCommandExecutor,com.android.camera.one.v2.commands.CameraCommand) -> <init>
    51:73:void run() -> run
com.android.camera.one.v2.commands.PreviewCommand -> com.android.camera.one.v2.commands.PreviewCommand:
    43:46:void <init>(com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,int) -> <init>
    51:55:void run() -> run
com.android.camera.one.v2.commands.ResettingRunnableCameraCommand -> com.android.camera.one.v2.commands.ResettingRunnableCameraCommand:
    44:48:void <init>(com.android.camera.one.v2.commands.CameraCommandExecutor,com.android.camera.one.v2.commands.CameraCommand) -> <init>
    53:58:void run() -> run
com.android.camera.one.v2.commands.UpdateRequestCommand -> com.android.camera.one.v2.commands.UpdateRequestCommand:
    49:52:void <init>(com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,int) -> <init>
    61:74:void run() -> run
com.android.camera.one.v2.commands.ZslPreviewCommand -> com.android.camera.one.v2.commands.ZslPreviewCommand:
    62:71:void <init>(com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,int,com.android.camera.one.v2.core.RequestBuilder$Factory,int,com.android.camera.one.v2.core.RequestBuilder$Factory,int,int) -> <init>
    106:110:java.util.List createWarmupBurst(com.android.camera.one.v2.core.RequestBuilder$Factory,int,int) -> createWarmupBurst
    76:101:void run() -> run
com.android.camera.one.v2.commands.ZslPreviewCommandFactory -> com.android.camera.one.v2.commands.ZslPreviewCommandFactory:
    34:37:void <init>(com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,com.android.camera.one.v2.core.RequestBuilder$Factory) -> <init>
    42:42:com.android.camera.one.v2.commands.CameraCommand get(com.android.camera.one.v2.core.RequestBuilder$Factory,int) -> get
com.android.camera.one.v2.common.BasicCameraFactory -> com.android.camera.one.v2.common.BasicCameraFactory:
    88:162:void <init>(com.android.camera.async.Lifetime,com.android.camera.one.OneCameraCharacteristics,com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,com.android.camera.one.v2.commands.CameraCommandExecutor,com.android.camera.one.v2.commands.PreviewCommandFactory,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.async.Observable,com.android.camera.async.Observable,int) -> <init>
    170:170:com.android.camera.one.v2.autofocus.ManualAutoFocus provideManualAutoFocus() -> provideManualAutoFocus
    166:166:com.android.camera.one.v2.core.RequestBuilder$Factory provideMeteredZoomedRequestBuilder() -> provideMeteredZoomedRequestBuilder
    174:174:java.lang.Runnable providePreviewUpdater() -> providePreviewUpdater
com.android.camera.one.v2.common.ControlModeSelector -> com.android.camera.one.v2.common.ControlModeSelector:
    36:39:void <init>(com.google.common.base.Supplier,com.google.common.base.Supplier,com.android.camera.one.OneCameraCharacteristics$SupportedHardwareLevel) -> <init>
    28:28:java.lang.Object get() -> get
    44:55:java.lang.Integer get() -> get
com.android.camera.one.v2.common.ControlSceneModeSelector -> com.android.camera.one.v2.common.ControlSceneModeSelector:
    42:45:void <init>(com.google.common.base.Supplier,com.google.common.base.Supplier,com.android.camera.one.OneCameraCharacteristics$SupportedHardwareLevel) -> <init>
    30:30:java.lang.Object get() -> get
    50:61:java.lang.Integer get() -> get
com.android.camera.one.v2.common.FlashBasedAEMode -> com.android.camera.one.v2.common.FlashBasedAEMode:
    33:35:void <init>(com.google.common.base.Supplier,com.google.common.base.Supplier) -> <init>
    27:27:java.lang.Object get() -> get
    41:49:java.lang.Integer get() -> get
com.android.camera.one.v2.common.FlashBasedAEMode$1 -> com.android.camera.one.v2.common.FlashBasedAEMode$1:
    45:45:void <clinit>() -> <clinit>
com.android.camera.one.v2.common.PictureSizeCalculator -> com.android.camera.one.v2.common.PictureSizeCalculator:
    50:51:void <init>(com.android.camera.one.OneCameraCharacteristics) -> <init>
    148:156:com.android.camera.one.v2.common.PictureSizeCalculator$Configuration computeConfiguration(com.android.camera.util.Size,int) -> computeConfiguration
    161:165:com.android.camera.util.Size getLargestSupportedSize(java.util.List) -> getLargestSupportedSize
    174:174:android.graphics.Rect getPostCrop(com.android.camera.util.AspectRatio,com.android.camera.util.Size) -> getPostCrop
    113:129:com.android.camera.util.Size getSmallestSupportedSizeContainingTarget(java.util.List,com.android.camera.util.Size) -> getSmallestSupportedSizeContainingTarget
com.android.camera.one.v2.common.PictureSizeCalculator$Configuration -> com.android.camera.one.v2.common.PictureSizeCalculator$Configuration:
    54:54:void <init>(com.android.camera.util.Size,android.graphics.Rect,com.android.camera.one.v2.common.PictureSizeCalculator$1) -> <init>
    58:60:void <init>(com.android.camera.util.Size,android.graphics.Rect) -> <init>
    90:98:boolean equals(java.lang.Object) -> equals
    75:75:com.android.camera.util.Size getNativeOutputSize() -> getNativeOutputSize
    68:68:android.graphics.Rect getPostCaptureCrop() -> getPostCaptureCrop
    107:107:int hashCode() -> hashCode
    80:83:java.lang.String toString() -> toString
com.android.camera.one.v2.common.SimpleCaptureStream -> com.android.camera.one.v2.common.SimpleCaptureStream:
    31:32:void <init>(android.view.Surface) -> <init>
    39:40:android.view.Surface bind(com.android.camera.async.BufferQueue) -> bind
com.android.camera.one.v2.common.StatisticsFaceDetectMode -> com.android.camera.one.v2.common.StatisticsFaceDetectMode:
    31:32:void <init>(com.google.common.base.Supplier) -> <init>
    28:28:java.lang.Object get() -> get
    37:45:java.lang.Integer get() -> get
com.android.camera.one.v2.common.ZoomedCropRegion -> com.android.camera.one.v2.common.ZoomedCropRegion:
    31:33:void <init>(android.graphics.Rect,com.google.common.base.Supplier) -> <init>
    27:27:java.lang.Object get() -> get
    38:44:android.graphics.Rect get() -> get
com.android.camera.one.v2.core.FrameServer$RequestType -> com.android.camera.one.v2.core.FrameServer$RequestType:
    63:64:void <clinit>() -> <clinit>
    63:63:void <init>(java.lang.String,int) -> <init>
    63:63:com.android.camera.one.v2.core.FrameServer$RequestType valueOf(java.lang.String) -> valueOf
    63:63:com.android.camera.one.v2.core.FrameServer$RequestType[] values() -> values
com.android.camera.one.v2.core.FrameServer$SessionClosedException -> com.android.camera.one.v2.core.FrameServer$SessionClosedException:
    60:60:void <init>() -> <init>
com.android.camera.one.v2.core.FrameServerFactory -> com.android.camera.one.v2.core.FrameServerFactory:
    32:47:void <init>(com.android.camera.async.Lifetime,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,com.android.camera.async.HandlerFactory) -> <init>
    66:66:com.android.camera.one.v2.core.FrameServer provideEphemeralFrameServer() -> provideEphemeralFrameServer
    55:55:com.android.camera.one.v2.core.FrameServer provideFrameServer() -> provideFrameServer
    74:74:com.android.camera.async.Observable provideReadyState() -> provideReadyState
com.android.camera.one.v2.core.FrameServerImpl -> com.android.camera.one.v2.core.FrameServerImpl:
    83:85:void <init>(com.android.camera.one.v2.core.FrameServer$Session) -> <init>
    35:35:com.android.camera.one.v2.core.FrameServer$Session access$000(com.android.camera.one.v2.core.FrameServerImpl) -> access$000
    35:35:java.util.concurrent.locks.ReentrantLock access$100(com.android.camera.one.v2.core.FrameServerImpl) -> access$100
    35:35:com.android.camera.one.v2.core.FrameServer$Session createExclusiveSession() -> createExclusiveSession
    91:94:com.android.camera.one.v2.core.FrameServerImpl$Session createExclusiveSession() -> createExclusiveSession
    35:35:com.android.camera.one.v2.core.FrameServer$Session tryCreateExclusiveSession() -> tryCreateExclusiveSession
    100:104:com.android.camera.one.v2.core.FrameServerImpl$Session tryCreateExclusiveSession() -> tryCreateExclusiveSession
com.android.camera.one.v2.core.FrameServerImpl$Session -> com.android.camera.one.v2.core.FrameServerImpl$Session:
    36:36:void <init>(com.android.camera.one.v2.core.FrameServerImpl,com.android.camera.one.v2.core.FrameServerImpl$1) -> <init>
    40:42:void <init>(com.android.camera.one.v2.core.FrameServerImpl) -> <init>
    67:72:void close() -> close
    49:62:void submitRequest(java.util.List,com.android.camera.one.v2.core.FrameServer$RequestType) -> submitRequest
com.android.camera.one.v2.core.ObservableFrameServer -> com.android.camera.one.v2.core.ObservableFrameServer:
    77:80:void <init>(com.android.camera.one.v2.core.FrameServer) -> <init>
    41:41:java.util.concurrent.atomic.AtomicInteger access$000(com.android.camera.one.v2.core.ObservableFrameServer) -> access$000
    41:41:com.android.camera.async.ConcurrentState access$100(com.android.camera.one.v2.core.ObservableFrameServer) -> access$100
    118:118:com.android.camera.async.SafeCloseable addCallback(java.lang.Runnable,java.util.concurrent.Executor) -> addCallback
    86:98:com.android.camera.one.v2.core.FrameServer$Session createExclusiveSession() -> createExclusiveSession
    40:40:java.lang.Object get() -> get
    124:124:java.lang.Boolean get() -> get
    105:111:com.android.camera.one.v2.core.FrameServer$Session tryCreateExclusiveSession() -> tryCreateExclusiveSession
com.android.camera.one.v2.core.ObservableFrameServer$SessionImpl -> com.android.camera.one.v2.core.ObservableFrameServer$SessionImpl:
    51:51:void <init>(com.android.camera.one.v2.core.ObservableFrameServer,com.android.camera.one.v2.core.FrameServer$Session,com.android.camera.one.v2.core.ObservableFrameServer$1) -> <init>
    55:57:void <init>(com.android.camera.one.v2.core.ObservableFrameServer,com.android.camera.one.v2.core.FrameServer$Session) -> <init>
    69:72:void close() -> close
    64:64:void submitRequest(java.util.List,com.android.camera.one.v2.core.FrameServer$RequestType) -> submitRequest
com.android.camera.one.v2.core.RequestBuilder -> com.android.camera.one.v2.core.RequestBuilder:
    132:135:void <init>(com.android.camera.one.v2.camera2proxy.CaptureRequestBuilderProxy) -> <init>
    147:147:void addResponseListener(com.android.camera.one.v2.core.ResponseListener) -> addResponseListener
    169:174:void addStream(com.android.camera.one.v2.core.CaptureStream) -> addStream
    184:184:com.android.camera.one.v2.core.Request build() -> build
    156:156:void setParam(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> setParam
com.android.camera.one.v2.core.RequestBuilder$RequestImpl -> com.android.camera.one.v2.core.RequestBuilder$RequestImpl:
    92:95:void <init>(com.android.camera.one.v2.camera2proxy.CaptureRequestBuilderProxy,java.util.List,com.android.camera.one.v2.core.ResponseListener) -> <init>
    114:115:void abort() -> abort
    101:104:com.android.camera.one.v2.camera2proxy.CaptureRequestBuilderProxy allocateCaptureRequest() -> allocateCaptureRequest
    109:109:com.android.camera.one.v2.core.ResponseListener getResponseListener() -> getResponseListener
com.android.camera.one.v2.core.RequestBuilder$UnregisteredStreamProvider -> com.android.camera.one.v2.core.RequestBuilder$UnregisteredStreamProvider:
    53:53:void <init>(com.android.camera.one.v2.core.CaptureStream,com.android.camera.async.BufferQueue,com.android.camera.one.v2.camera2proxy.CaptureRequestBuilderProxy,com.android.camera.one.v2.core.RequestBuilder$1) -> <init>
    62:66:void <init>(com.android.camera.one.v2.core.CaptureStream,com.android.camera.async.BufferQueue,com.android.camera.one.v2.camera2proxy.CaptureRequestBuilderProxy) -> <init>
    75:75:void abort() -> abort
    70:70:void allocate() -> allocate
com.android.camera.one.v2.core.RequestTemplate -> com.android.camera.one.v2.core.RequestTemplate:
    62:66:void <init>(com.android.camera.one.v2.core.RequestBuilder$Factory) -> <init>
    88:88:void addResponseListener(com.android.camera.one.v2.core.ResponseListener) -> addResponseListener
    95:95:com.android.camera.one.v2.core.RequestTemplate addStream(com.android.camera.one.v2.core.CaptureStream) -> addStream
    101:109:com.android.camera.one.v2.core.RequestBuilder create(int) -> create
    70:70:com.android.camera.one.v2.core.RequestTemplate setParam(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> setParam
    79:79:com.android.camera.one.v2.core.RequestTemplate setParam(android.hardware.camera2.CaptureRequest$Key,com.google.common.base.Supplier) -> setParam
com.android.camera.one.v2.core.RequestTemplate$Parameter -> com.android.camera.one.v2.core.RequestTemplate$Parameter:
    43:43:void <init>(android.hardware.camera2.CaptureRequest$Key,com.google.common.base.Supplier,com.android.camera.one.v2.core.RequestTemplate$1) -> <init>
    47:49:void <init>(android.hardware.camera2.CaptureRequest$Key,com.google.common.base.Supplier) -> <init>
    53:53:void addToBuilder(com.android.camera.one.v2.core.RequestBuilder) -> addToBuilder
com.android.camera.one.v2.core.ResourceAcquisitionFailedException -> com.android.camera.one.v2.core.ResourceAcquisitionFailedException:
    30:30:void <init>(java.lang.Exception) -> <init>
com.android.camera.one.v2.core.ResponseListener -> com.android.camera.one.v2.core.ResponseListener:
    29:29:void <init>() -> <init>
com.android.camera.one.v2.core.ResponseListenerBroadcaster -> com.android.camera.one.v2.core.ResponseListenerBroadcaster:
    34:35:void <init>(com.android.camera.one.v2.core.ResponseListener[]) -> <init>
    38:39:void <init>(java.util.Collection) -> <init>
    58:59:void onCompleted(android.hardware.camera2.TotalCaptureResult) -> onCompleted
    65:66:void onFailed(android.hardware.camera2.CaptureFailure) -> onFailed
    51:52:void onProgressed(android.hardware.camera2.CaptureResult) -> onProgressed
    44:45:void onStarted(long) -> onStarted
com.android.camera.one.v2.core.ResponseListeners -> com.android.camera.one.v2.core.ResponseListeners:
    69:69:com.android.camera.one.v2.core.ResponseListener forFinalMetadata(com.android.camera.async.Updatable) -> forFinalMetadata
    115:115:com.android.camera.one.v2.core.ResponseListener forFrameExposure(com.android.camera.async.Updatable) -> forFrameExposure
    128:128:com.android.camera.one.v2.core.ResponseListener forListeners(com.android.camera.one.v2.core.ResponseListener[]) -> forListeners
    83:83:com.android.camera.one.v2.core.ResponseListener forPartialMetadata(com.android.camera.async.Updatable) -> forPartialMetadata
    102:102:com.android.camera.one.v2.core.ResponseListener forTimestamps(com.android.camera.async.Updatable) -> forTimestamps
com.android.camera.one.v2.core.ResponseListeners$1 -> com.android.camera.one.v2.core.ResponseListeners$1:
    69:69:void <init>(com.android.camera.async.Updatable,com.android.camera.async.Updatable) -> <init>
    72:72:void onCompleted(android.hardware.camera2.TotalCaptureResult) -> onCompleted
com.android.camera.one.v2.core.ResponseListeners$2 -> com.android.camera.one.v2.core.ResponseListeners$2:
    83:83:void <init>(com.android.camera.async.Updatable,com.android.camera.async.Updatable) -> <init>
    91:91:void onCompleted(android.hardware.camera2.TotalCaptureResult) -> onCompleted
    86:86:void onProgressed(android.hardware.camera2.CaptureResult) -> onProgressed
com.android.camera.one.v2.core.ResponseListeners$3 -> com.android.camera.one.v2.core.ResponseListeners$3:
    102:102:void <init>(com.android.camera.async.Updatable,com.android.camera.async.Updatable) -> <init>
    105:105:void onStarted(long) -> onStarted
com.android.camera.one.v2.core.ResponseListeners$4 -> com.android.camera.one.v2.core.ResponseListeners$4:
    115:115:void <init>(com.android.camera.async.Updatable,com.android.camera.async.Updatable) -> <init>
    119:119:void onStarted(long) -> onStarted
com.android.camera.one.v2.core.ResponseListeners$ResponseListenerBase -> com.android.camera.one.v2.core.ResponseListeners$ResponseListenerBase:
    42:42:void <init>(com.android.camera.async.Updatable,com.android.camera.one.v2.core.ResponseListeners$1) -> <init>
    45:46:void <init>(com.android.camera.async.Updatable) -> <init>
    56:56:boolean equals(java.lang.Object) -> equals
    51:51:int hashCode() -> hashCode
com.android.camera.one.v2.core.TagDispatchCaptureSession -> com.android.camera.one.v2.core.TagDispatchCaptureSession:
    105:108:void <init>(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,android.os.Handler) -> <init>
    112:113:java.lang.Object generateTag() -> generateTag
    138:162:void submitRequest(java.util.List,com.android.camera.one.v2.core.FrameServer$RequestType) -> submitRequest
com.android.camera.one.v2.core.TagDispatchCaptureSession$CaptureCallback -> com.android.camera.one.v2.core.TagDispatchCaptureSession$CaptureCallback:
    52:53:void <init>(java.util.Map) -> <init>
    73:74:void onCaptureCompleted(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    80:81:void onCaptureFailed(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    66:67:void onCaptureProgressed(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
    86:87:void onCaptureSequenceAborted(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,int) -> onCaptureSequenceAborted
    94:95:void onCaptureSequenceCompleted(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,int,long) -> onCaptureSequenceCompleted
    59:60:void onCaptureStarted(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,android.hardware.camera2.CaptureRequest,long,long) -> onCaptureStarted
com.android.camera.one.v2.errorhandling.FastCameraReset -> com.android.camera.one.v2.errorhandling.FastCameraReset:
    47:52:void <init>(com.android.camera.debug.Logger$Factory,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,com.android.camera.one.v2.commands.CameraCommandExecutor,java.lang.Runnable,com.android.camera.stats.UsageStatistics) -> <init>
    58:74:void run() -> run
com.android.camera.one.v2.errorhandling.FatalErrorDialogFailureHandler -> com.android.camera.one.v2.errorhandling.FatalErrorDialogFailureHandler:
    35:37:void <init>(com.android.camera.FatalErrorHandler,com.android.camera.stats.UsageStatistics) -> <init>
    42:45:void run() -> run
com.android.camera.one.v2.errorhandling.FramerateJankDetector -> com.android.camera.one.v2.errorhandling.FramerateJankDetector:
    44:55:void <init>(com.android.camera.debug.Logger$Factory,com.android.camera.stats.UsageStatistics) -> <init>
    60:79:void onCompleted(android.hardware.camera2.TotalCaptureResult) -> onCompleted
com.android.camera.one.v2.errorhandling.RecoverySuccessCallback -> com.android.camera.one.v2.errorhandling.RecoverySuccessCallback:
    30:31:void <init>(com.android.camera.stats.UsageStatistics) -> <init>
    26:26:void onCallback(java.lang.Object) -> onCallback
    37:37:void onCallback(java.lang.String) -> onCallback
com.android.camera.one.v2.errorhandling.RepeatFailureDetector -> com.android.camera.one.v2.errorhandling.RepeatFailureDetector:
    81:90:void <init>(com.android.camera.debug.Logger$Factory,int,java.util.List,com.android.camera.util.Callback) -> <init>
    95:103:void onCompleted(android.hardware.camera2.TotalCaptureResult) -> onCompleted
    110:124:void onFailed(android.hardware.camera2.CaptureFailure) -> onFailed
com.android.camera.one.v2.errorhandling.RepeatFailureHandlerComponent -> com.android.camera.one.v2.errorhandling.RepeatFailureHandlerComponent:
    40:41:void <init>(com.android.camera.one.v2.errorhandling.RepeatFailureDetector) -> <init>
    52:64:com.android.camera.one.v2.errorhandling.RepeatFailureHandlerComponent create(com.android.camera.debug.Logger$Factory,com.android.camera.FatalErrorHandler,com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,com.android.camera.one.v2.commands.CameraCommandExecutor,java.lang.Runnable,com.android.camera.stats.UsageStatistics,int) -> create
    45:45:com.android.camera.one.v2.core.ResponseListener provideResponseListener() -> provideResponseListener
com.android.camera.one.v2.face.FaceDetect -> com.android.camera.one.v2.face.FaceDetect:
    33:40:com.android.camera.one.OneCameraCharacteristics$FaceDetectMode getHighestFaceDetectMode(com.android.camera.one.OneCameraCharacteristics) -> getHighestFaceDetectMode
com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver -> com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver:
    156:156:void <clinit>() -> <clinit>
    172:176:void <init>(com.android.camera.one.v2.photo.ImageRotationCalculator,com.android.camera.processing.imagebackend.ImageBackend,android.graphics.Rect) -> <init>
    189:193:void <init>(com.android.camera.one.v2.photo.ImageRotationCalculator,com.android.camera.processing.imagebackend.ImageBackend,java.util.concurrent.Executor,android.graphics.Rect) -> <init>
    56:56:android.graphics.Rect access$000(com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver) -> access$000
    56:56:java.util.concurrent.Executor access$100(com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver) -> access$100
    206:213:com.android.camera.one.v2.imagesaver.ImageSaver build(com.android.camera.one.OneCamera$PictureSaverCallback,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.session.CaptureSession) -> build
com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver$ImageSaverImpl -> com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver$ImageSaverImpl:
    67:71:void <init>(com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver,com.android.camera.session.CaptureSession,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.processing.imagebackend.ImageBackend,com.android.camera.processing.imagebackend.ImageProcessorListener) -> <init>
    79:93:void saveAndCloseImage(com.android.camera.one.v2.camera2proxy.ImageProxy,com.google.common.base.Optional,com.google.common.util.concurrent.ListenableFuture) -> saveAndCloseImage
com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver$JpegImageProcessorListener -> com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver$JpegImageProcessorListener:
    98:98:void <init>(com.android.camera.processing.imagebackend.ImageProcessorProxyListener,com.android.camera.session.CaptureSession,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.one.OneCamera$PictureSaverCallback,com.android.camera.one.v2.imagesaver.JpegImageBackendImageSaver$1) -> <init>
    107:111:void <init>(com.android.camera.processing.imagebackend.ImageProcessorProxyListener,com.android.camera.session.CaptureSession,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.one.OneCamera$PictureSaverCallback) -> <init>
    121:137:void onResultCompressed(com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo,com.android.camera.processing.imagebackend.TaskImageContainer$CompressedPayload) -> onResultCompressed
com.android.camera.one.v2.imagesaver.MetadataImage -> com.android.camera.one.v2.imagesaver.MetadataImage:
    38:39:void <init>(com.android.camera.one.v2.camera2proxy.ImageProxy,com.google.common.util.concurrent.ListenableFuture) -> <init>
    46:46:com.google.common.util.concurrent.ListenableFuture getMetadata() -> getMetadata
com.android.camera.one.v2.imagesaver.MostRecentImageSaver -> com.android.camera.one.v2.imagesaver.MostRecentImageSaver:
    41:44:void <init>(com.android.camera.one.v2.imagesaver.SingleImageSaver) -> <init>
    56:57:void addFullSizeImage(com.android.camera.one.v2.camera2proxy.ImageProxy,com.google.common.util.concurrent.ListenableFuture) -> addFullSizeImage
    63:83:void close() -> close
    87:92:void closeAllImages() -> closeAllImages
    97:105:void closeOlderImages(long,java.util.Map) -> closeOlderImages
    110:113:void closeOlderImages() -> closeOlderImages
    139:144:com.android.camera.one.v2.imagesaver.MetadataImage getLastImage() -> getLastImage
    118:133:com.google.common.base.Optional getMostRecentFullSizeImageTimestamp() -> getMostRecentFullSizeImageTimestamp
    153:153:com.android.camera.one.v2.camera2proxy.ImageProxy getThumbnail(long) -> getThumbnail
com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver -> com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver:
    180:184:void <init>(com.android.camera.one.v2.photo.ImageRotationCalculator,com.android.camera.processing.imagebackend.ImageBackend,android.graphics.Rect) -> <init>
    198:202:void <init>(com.android.camera.one.v2.photo.ImageRotationCalculator,com.android.camera.processing.imagebackend.ImageBackend,android.graphics.Rect,java.util.concurrent.Executor) -> <init>
    52:52:android.graphics.Rect access$000(com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver) -> access$000
    52:52:java.util.concurrent.Executor access$100(com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver) -> access$100
    52:52:com.android.camera.processing.imagebackend.ImageBackend access$200(com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver) -> access$200
    215:220:com.android.camera.one.v2.imagesaver.ImageSaver build(com.android.camera.one.OneCamera$PictureSaverCallback,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.session.CaptureSession) -> build
com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver$1 -> com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver$1:
    114:114:void <clinit>() -> <clinit>
com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver$ImageSaverImpl -> com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver$ImageSaverImpl:
    67:70:void <init>(com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver,com.android.camera.session.CaptureSession,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.processing.imagebackend.ImageProcessorListener) -> <init>
    78:94:void saveAndCloseImage(com.android.camera.one.v2.camera2proxy.ImageProxy,com.google.common.base.Optional,com.google.common.util.concurrent.ListenableFuture) -> saveAndCloseImage
com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver$YuvImageProcessorListener -> com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver$YuvImageProcessorListener:
    99:99:void <init>(com.android.camera.session.CaptureSession,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.one.OneCamera$PictureSaverCallback,com.android.camera.one.v2.imagesaver.YuvImageBackendImageSaver$1) -> <init>
    106:109:void <init>(com.android.camera.session.CaptureSession,com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.one.OneCamera$PictureSaverCallback) -> <init>
    127:129:void onResultCompressed(com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo,com.android.camera.processing.imagebackend.TaskImageContainer$CompressedPayload) -> onResultCompressed
    137:155:void onResultUncompressed(com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo,com.android.camera.processing.imagebackend.TaskImageContainer$UncompressedPayload) -> onResultUncompressed
    114:114:void onStart(com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo) -> onStart
com.android.camera.one.v2.initialization.Camera2PreviewSizeSelector -> com.android.camera.one.v2.initialization.Camera2PreviewSizeSelector:
    35:36:void <init>(java.util.List) -> <init>
    57:57:com.android.camera.util.Size getLargestPictureSize() -> getLargestPictureSize
    43:48:com.android.camera.util.Size pickPreviewSize(com.android.camera.util.Size) -> pickPreviewSize
com.android.camera.one.v2.initialization.Camera2PreviewSizeSelector$1 -> com.android.camera.one.v2.initialization.Camera2PreviewSizeSelector$1:
    57:57:void <init>(com.android.camera.one.v2.initialization.Camera2PreviewSizeSelector) -> <init>
    57:57:int compare(java.lang.Object,java.lang.Object) -> compare
    60:62:int compare(com.android.camera.util.Size,com.android.camera.util.Size) -> compare
com.android.camera.one.v2.initialization.CameraStarter$CameraControls -> com.android.camera.one.v2.initialization.CameraStarter$CameraControls:
    40:42:void <init>(com.android.camera.one.v2.photo.PictureTaker,com.android.camera.one.v2.autofocus.ManualAutoFocus) -> <init>
    50:50:com.android.camera.one.v2.autofocus.ManualAutoFocus getManualAutoFocus() -> getManualAutoFocus
    46:46:com.android.camera.one.v2.photo.PictureTaker getPictureTaker() -> getPictureTaker
com.android.camera.one.v2.initialization.CaptureSessionCreator -> com.android.camera.one.v2.initialization.CaptureSessionCreator:
    42:44:void <init>(com.android.camera.one.v2.camera2proxy.CameraDeviceProxy,android.os.Handler) -> <init>
    56:92:com.google.common.util.concurrent.ListenableFuture createCaptureSession(java.util.List) -> createCaptureSession
com.android.camera.one.v2.initialization.CaptureSessionCreator$1 -> com.android.camera.one.v2.initialization.CaptureSessionCreator$1:
    58:58:void <init>(com.android.camera.one.v2.initialization.CaptureSessionCreator,com.google.common.util.concurrent.SettableFuture) -> <init>
    87:88:void onClosed(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy) -> onClosed
    66:67:void onConfigureFailed(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy) -> onConfigureFailed
    72:76:void onConfigured(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy) -> onConfigured
com.android.camera.one.v2.initialization.DeferredManualAutoFocus -> com.android.camera.one.v2.initialization.DeferredManualAutoFocus:
    32:33:void <init>(java.util.concurrent.Future) -> <init>
    38:41:void triggerFocusAndMeterAtPoint(float,float) -> triggerFocusAndMeterAtPoint
com.android.camera.one.v2.initialization.DeferredPictureTaker -> com.android.camera.one.v2.initialization.DeferredPictureTaker:
    34:35:void <init>(java.util.concurrent.Future) -> <init>
    40:43:void takePicture(com.android.camera.one.OneCamera$PhotoCaptureParameters,com.android.camera.session.CaptureSession) -> takePicture
com.android.camera.one.v2.initialization.GenericOneCameraImpl -> com.android.camera.one.v2.initialization.GenericOneCameraImpl:
    75:88:void <init>(com.android.camera.async.SafeCloseable,com.android.camera.one.v2.photo.PictureTaker,com.android.camera.one.v2.autofocus.ManualAutoFocus,com.android.camera.ui.motion.LinearScale,java.util.concurrent.Executor,com.android.camera.async.Listenable,com.android.camera.async.Listenable,com.android.camera.async.Listenable,float,com.android.camera.async.Updatable,com.android.camera.one.OneCamera$Facing,com.android.camera.one.PreviewSizeSelector,com.android.camera.one.v2.initialization.PreviewStarter) -> <init>
    54:54:com.android.camera.ui.motion.LinearScale access$000(com.android.camera.one.v2.initialization.GenericOneCameraImpl) -> access$000
    168:168:void close() -> close
    173:173:com.android.camera.one.OneCamera$Facing getDirection() -> getDirection
    178:178:float getMaxZoom() -> getMaxZoom
    188:188:com.android.camera.util.Size pickPreviewSize(com.android.camera.util.Size,android.app.Activity) -> pickPreviewSize
    120:123:void setFocusDistanceListener(com.android.camera.one.OneCamera$FocusDistanceListener) -> setFocusDistanceListener
    103:103:void setFocusStateListener(com.android.camera.one.OneCamera$FocusStateListener) -> setFocusStateListener
    136:147:void setReadyStateChangedListener(com.android.camera.one.OneCamera$ReadyStateChangedListener) -> setReadyStateChangedListener
    183:183:void setZoom(float) -> setZoom
    152:163:void startPreview(android.view.Surface,com.android.camera.one.OneCamera$CaptureReadyCallback) -> startPreview
    98:98:void takePicture(com.android.camera.one.OneCamera$PhotoCaptureParameters,com.android.camera.session.CaptureSession) -> takePicture
    93:93:void triggerFocusAndMeterAtPoint(float,float) -> triggerFocusAndMeterAtPoint
com.android.camera.one.v2.initialization.GenericOneCameraImpl$1 -> com.android.camera.one.v2.initialization.GenericOneCameraImpl$1:
    103:103:void <init>(com.android.camera.one.v2.initialization.GenericOneCameraImpl,com.android.camera.one.OneCamera$FocusStateListener) -> <init>
    103:103:void onCallback(java.lang.Object) -> onCallback
    109:110:void onCallback(java.lang.Integer) -> onCallback
com.android.camera.one.v2.initialization.GenericOneCameraImpl$2 -> com.android.camera.one.v2.initialization.GenericOneCameraImpl$2:
    123:123:void <init>(com.android.camera.one.v2.initialization.GenericOneCameraImpl,com.android.camera.one.OneCamera$FocusDistanceListener) -> <init>
    123:123:void onCallback(java.lang.Object) -> onCallback
    126:127:void onCallback(com.android.camera.one.OneCamera$FocusState) -> onCallback
com.android.camera.one.v2.initialization.GenericOneCameraImpl$3 -> com.android.camera.one.v2.initialization.GenericOneCameraImpl$3:
    140:140:void <init>(com.android.camera.one.v2.initialization.GenericOneCameraImpl,com.android.camera.one.OneCamera$ReadyStateChangedListener) -> <init>
    140:140:void onCallback(java.lang.Object) -> onCallback
    143:143:void onCallback(java.lang.Boolean) -> onCallback
com.android.camera.one.v2.initialization.GenericOneCameraImpl$4 -> com.android.camera.one.v2.initialization.GenericOneCameraImpl$4:
    153:153:void <init>(com.android.camera.one.v2.initialization.GenericOneCameraImpl,com.android.camera.one.OneCamera$CaptureReadyCallback) -> <init>
    161:161:void onFailure(java.lang.Throwable) -> onFailure
    153:153:void onSuccess(java.lang.Object) -> onSuccess
    156:156:void onSuccess(java.lang.Void) -> onSuccess
com.android.camera.one.v2.initialization.InitializedOneCameraFactory -> com.android.camera.one.v2.initialization.InitializedOneCameraFactory:
    75:152:void <init>(com.android.camera.async.Lifetime,com.android.camera.one.v2.initialization.CameraStarter,com.android.camera.one.v2.camera2proxy.CameraDeviceProxy,java.util.List,com.android.camera.async.MainThread,com.android.camera.async.HandlerFactory,float,java.util.List,com.android.camera.ui.motion.LinearScale,com.android.camera.one.OneCamera$Facing) -> <init>
    158:158:com.android.camera.one.OneCamera provideOneCamera() -> provideOneCamera
com.android.camera.one.v2.initialization.InitializedOneCameraFactory$1 -> com.android.camera.one.v2.initialization.InitializedOneCameraFactory$1:
    136:136:void <init>(com.android.camera.one.v2.initialization.InitializedOneCameraFactory,com.android.camera.one.v2.initialization.CameraStarter,com.android.camera.async.Lifetime,com.android.camera.async.ConcurrentState,com.android.camera.one.v2.initialization.MetadataCallback,com.android.camera.async.ConcurrentState,com.google.common.util.concurrent.SettableFuture,com.google.common.util.concurrent.SettableFuture) -> <init>
    140:145:void onCameraCaptureSessionCreated(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy,android.view.Surface) -> onCameraCaptureSessionCreated
com.android.camera.one.v2.initialization.MetadataCallback -> com.android.camera.one.v2.initialization.MetadataCallback:
    41:44:void <init>(com.android.camera.async.Updatable,com.android.camera.async.Updatable,com.android.camera.async.Updatable) -> <init>
    33:33:void update(java.lang.Object) -> update
    49:51:void update(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> update
    55:57:void updateFocusMode(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> updateFocusMode
    62:64:void updateFocusState(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> updateFocusState
    69:76:void updateOneCameraFocusState(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> updateOneCameraFocusState
com.android.camera.one.v2.initialization.PreviewStarter -> com.android.camera.one.v2.initialization.PreviewStarter:
    55:58:void <init>(java.util.List,com.android.camera.one.v2.initialization.CaptureSessionCreator,com.android.camera.one.v2.initialization.PreviewStarter$CameraCaptureSessionCreatedListener) -> <init>
    36:36:com.android.camera.one.v2.initialization.PreviewStarter$CameraCaptureSessionCreatedListener access$000(com.android.camera.one.v2.initialization.PreviewStarter) -> access$000
    68:94:com.google.common.util.concurrent.ListenableFuture startPreview(android.view.Surface) -> startPreview
com.android.camera.one.v2.initialization.PreviewStarter$1 -> com.android.camera.one.v2.initialization.PreviewStarter$1:
    87:87:void <init>(com.android.camera.one.v2.initialization.PreviewStarter,android.view.Surface) -> <init>
    87:87:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
    91:92:com.google.common.util.concurrent.ListenableFuture apply(com.android.camera.one.v2.camera2proxy.CameraCaptureSessionProxy) -> apply
com.android.camera.one.v2.photo.ConvergedImageCaptureCommand -> com.android.camera.one.v2.photo.ConvergedImageCaptureCommand:
    102:113:void <init>(com.android.camera.one.v2.sharedimagereader.ManagedImageReader,com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,int,int,java.util.List,boolean) -> <init>
    133:144:void <init>(com.android.camera.one.v2.sharedimagereader.ManagedImageReader,com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,int,int,java.util.List,boolean,boolean) -> <init>
    224:256:void captureBurst(com.android.camera.one.v2.core.FrameServer$Session,com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageStream,com.android.camera.async.Updatable,com.android.camera.one.v2.imagesaver.ImageSaver) -> captureBurst
    74:83:com.android.camera.one.v2.core.RequestBuilder$Factory resetFocusExposureModes(com.android.camera.one.v2.core.RequestBuilder$Factory,boolean) -> resetFocusExposureModes
    267:294:void resetRepeating(com.android.camera.one.v2.core.FrameServer$Session) -> resetRepeating
    153:171:void run(com.android.camera.async.Updatable,com.android.camera.one.v2.imagesaver.ImageSaver) -> run
    200:217:void waitForAEConvergence(com.android.camera.one.v2.core.FrameServer$Session) -> waitForAEConvergence
    177:194:void waitForAFConvergence(com.android.camera.one.v2.core.FrameServer$Session) -> waitForAFConvergence
com.android.camera.one.v2.photo.FlashBasedPhotoCommand -> com.android.camera.one.v2.photo.FlashBasedPhotoCommand:
    44:49:void <init>(com.android.camera.debug.Logger$Factory,com.google.common.base.Supplier,com.android.camera.one.v2.photo.ImageCaptureCommand,com.android.camera.one.v2.photo.ImageCaptureCommand,com.android.camera.one.v2.photo.ImageCaptureCommand) -> <init>
    57:66:void run(com.android.camera.async.Updatable,com.android.camera.one.v2.imagesaver.ImageSaver) -> run
com.android.camera.one.v2.photo.ImageRotationCalculatorImpl -> com.android.camera.one.v2.photo.ImageRotationCalculatorImpl:
    49:52:void <init>(com.android.camera.app.OrientationManager,int,boolean) -> <init>
    60:62:com.android.camera.one.v2.photo.ImageRotationCalculator from(com.android.camera.app.OrientationManager,com.android.camera.one.OneCameraCharacteristics) -> from
    75:75:com.google.common.base.Supplier getSupplier() -> getSupplier
    68:70:com.android.camera.app.OrientationManager$DeviceOrientation toImageRotation() -> toImageRotation
com.android.camera.one.v2.photo.ImageRotationCalculatorImpl$1 -> com.android.camera.one.v2.photo.ImageRotationCalculatorImpl$1:
    75:75:void <init>(com.android.camera.one.v2.photo.ImageRotationCalculatorImpl) -> <init>
    75:75:java.lang.Object get() -> get
    78:78:java.lang.Integer get() -> get
com.android.camera.one.v2.photo.LegacyPictureTakerFactory -> com.android.camera.one.v2.photo.LegacyPictureTakerFactory:
    42:45:void <init>(com.android.camera.one.v2.imagesaver.ImageSaver$Builder,com.android.camera.one.v2.commands.CameraCommandExecutor,com.android.camera.async.MainThread,com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,com.android.camera.one.v2.sharedimagereader.ManagedImageReader) -> <init>
    51:51:com.android.camera.one.v2.photo.PictureTaker providePictureTaker() -> providePictureTaker
com.android.camera.one.v2.photo.MetadataFuture -> com.android.camera.one.v2.photo.MetadataFuture:
    35:36:void <init>() -> <init>
    56:56:com.google.common.util.concurrent.ListenableFuture getMetadata() -> getMetadata
    41:42:void onCompleted(android.hardware.camera2.TotalCaptureResult) -> onCompleted
    47:51:void onFailed(android.hardware.camera2.CaptureFailure) -> onFailed
com.android.camera.one.v2.photo.PictureCallbackAdapter -> com.android.camera.one.v2.photo.PictureCallbackAdapter:
    38:40:void <init>(com.android.camera.one.OneCamera$PictureCallback,java.util.concurrent.Executor) -> <init>
    33:33:com.android.camera.one.OneCamera$PictureCallback access$000(com.android.camera.one.v2.photo.PictureCallbackAdapter) -> access$000
    33:33:java.util.concurrent.Executor access$100(com.android.camera.one.v2.photo.PictureCallbackAdapter) -> access$100
    44:44:com.android.camera.async.Updatable provideQuickExposeUpdatable() -> provideQuickExposeUpdatable
com.android.camera.one.v2.photo.PictureCallbackAdapter$1 -> com.android.camera.one.v2.photo.PictureCallbackAdapter$1:
    44:44:void <init>(com.android.camera.one.v2.photo.PictureCallbackAdapter) -> <init>
    44:44:void update(java.lang.Object) -> update
    47:47:void update(java.lang.Void) -> update
com.android.camera.one.v2.photo.PictureCallbackAdapter$1$1 -> com.android.camera.one.v2.photo.PictureCallbackAdapter$1$1:
    47:47:void <init>(com.android.camera.one.v2.photo.PictureCallbackAdapter$1) -> <init>
    49:49:void run() -> run
com.android.camera.one.v2.photo.PictureTakerFactory -> com.android.camera.one.v2.photo.PictureTakerFactory:
    36:37:void <init>(com.android.camera.one.v2.photo.PictureTakerImpl) -> <init>
    49:89:com.android.camera.one.v2.photo.PictureTakerFactory create(com.android.camera.debug.Logger$Factory,com.android.camera.async.MainThread,com.android.camera.one.v2.commands.CameraCommandExecutor,com.android.camera.one.v2.imagesaver.ImageSaver$Builder,com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,com.android.camera.one.v2.sharedimagereader.ManagedImageReader,com.google.common.base.Supplier,boolean) -> create
    94:94:com.android.camera.one.v2.photo.PictureTaker providePictureTaker() -> providePictureTaker
com.android.camera.one.v2.photo.PictureTakerImpl -> com.android.camera.one.v2.photo.PictureTakerImpl:
    40:44:void <init>(com.android.camera.async.MainThread,com.android.camera.one.v2.commands.CameraCommandExecutor,com.android.camera.one.v2.imagesaver.ImageSaver$Builder,com.android.camera.one.v2.photo.ImageCaptureCommand) -> <init>
    33:33:com.android.camera.one.v2.photo.ImageCaptureCommand access$000(com.android.camera.one.v2.photo.PictureTakerImpl) -> access$000
    81:96:void takePicture(com.android.camera.one.OneCamera$PhotoCaptureParameters,com.android.camera.session.CaptureSession) -> takePicture
com.android.camera.one.v2.photo.PictureTakerImpl$PictureTakerCommand -> com.android.camera.one.v2.photo.PictureTakerImpl$PictureTakerCommand:
    47:47:void <init>(com.android.camera.one.v2.photo.PictureTakerImpl,com.android.camera.async.Updatable,com.android.camera.one.v2.imagesaver.ImageSaver,com.android.camera.session.CaptureSession,com.android.camera.one.v2.photo.PictureTakerImpl$1) -> <init>
    54:57:void <init>(com.android.camera.one.v2.photo.PictureTakerImpl,com.android.camera.async.Updatable,com.android.camera.one.v2.imagesaver.ImageSaver,com.android.camera.session.CaptureSession) -> <init>
    64:67:void run() -> run
    73:75:java.lang.String toString() -> toString
com.android.camera.one.v2.photo.SimpleImageCaptureCommand -> com.android.camera.one.v2.photo.SimpleImageCaptureCommand:
    50:53:void <init>(com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,com.android.camera.one.v2.sharedimagereader.ManagedImageReader) -> <init>
    63:89:void run(com.android.camera.async.Updatable,com.android.camera.one.v2.imagesaver.ImageSaver) -> run
com.android.camera.one.v2.photo.ZslPictureTakerFactory -> com.android.camera.one.v2.photo.ZslPictureTakerFactory:
    53:54:void <init>(com.android.camera.one.v2.photo.PictureTakerImpl) -> <init>
    70:99:com.android.camera.one.v2.photo.ZslPictureTakerFactory create(com.android.camera.debug.Logger$Factory,com.android.camera.async.MainThread,com.android.camera.one.v2.commands.CameraCommandExecutor,com.android.camera.one.v2.imagesaver.ImageSaver$Builder,com.android.camera.one.v2.core.FrameServer,com.android.camera.one.v2.core.RequestBuilder$Factory,com.android.camera.one.v2.sharedimagereader.ManagedImageReader,com.android.camera.async.BufferQueue,com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPool,com.google.common.base.Supplier,com.android.camera.one.v2.core.ResponseManager) -> create
    103:103:com.android.camera.one.v2.photo.PictureTaker providePictureTaker() -> providePictureTaker
com.android.camera.one.v2.photo.zsl.AcceptableZslImageFilter -> com.android.camera.one.v2.photo.zsl.AcceptableZslImageFilter:
    36:38:void <init>(boolean,boolean) -> <init>
    28:28:boolean apply(java.lang.Object) -> apply
    44:49:boolean apply(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> apply
    69:73:boolean isAEAcceptable(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> isAEAcceptable
    85:89:boolean isAFAcceptable(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> isAFAcceptable
    55:59:boolean isLensStationary(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> isLensStationary
com.android.camera.one.v2.photo.zsl.AutoFlashZslImageFilter -> com.android.camera.one.v2.photo.zsl.AutoFlashZslImageFilter:
    69:73:void <init>(com.android.camera.debug.Logger$Factory,com.android.camera.one.v2.photo.zsl.AcceptableZslImageFilter) -> <init>
    59:59:boolean apply(java.lang.Object) -> apply
    138:143:boolean apply(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> apply
    131:131:com.android.camera.one.v2.photo.zsl.AutoFlashZslImageFilter create(com.android.camera.debug.Logger$Factory,boolean) -> create
    59:59:void update(java.lang.Object) -> update
    148:164:void update(com.android.camera.one.v2.camera2proxy.CaptureResultProxy) -> update
com.android.camera.one.v2.photo.zsl.AutoFlashZslImageFilter$AEConvergedTotalCaptureResult -> com.android.camera.one.v2.photo.zsl.AutoFlashZslImageFilter$AEConvergedTotalCaptureResult:
    84:85:void <init>(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> <init>
    91:97:java.lang.Object get(android.hardware.camera2.CaptureResult$Key) -> get
    114:114:long getFrameNumber() -> getFrameNumber
    109:109:com.android.camera.one.v2.camera2proxy.CaptureRequestProxy getRequest() -> getRequest
com.android.camera.one.v2.photo.zsl.ZslImageCaptureCommand -> com.android.camera.one.v2.photo.zsl.ZslImageCaptureCommand:
    67:73:void <init>(com.android.camera.debug.Logger$Factory,com.android.camera.async.BufferQueue,com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPool,com.android.camera.one.v2.photo.ImageCaptureCommand,com.google.common.base.Predicate,long) -> <init>
    105:115:java.util.List filterImagesWithinMaxLookBack(java.util.List) -> filterImagesWithinMaxLookBack
    82:99:java.util.List getAllAvailableImages() -> getAllAvailableImages
    166:183:void run(com.android.camera.async.Updatable,com.android.camera.one.v2.imagesaver.ImageSaver) -> run
    124:156:androidx.core.util.Pair tryGetZslImage() -> tryGetZslImage
com.android.camera.one.v2.sharedimagereader.AllocatingImageStream -> com.android.camera.one.v2.sharedimagereader.AllocatingImageStream:
    59:63:void <init>(int,com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool,com.android.camera.async.BufferQueue,com.android.camera.async.BufferQueueController,com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributor,android.view.Surface) -> <init>
    67:71:void allocate() -> allocate
    79:80:android.view.Surface bind(com.android.camera.async.BufferQueue) -> bind
    85:89:void close() -> close
com.android.camera.one.v2.sharedimagereader.ImageStreamImpl -> com.android.camera.one.v2.sharedimagereader.ImageStreamImpl:
    44:50:void <init>(com.android.camera.async.BufferQueue,com.android.camera.async.BufferQueueController,com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributor,android.view.Surface) -> <init>
    56:58:android.view.Surface bind(com.android.camera.async.BufferQueue) -> bind
    63:63:void close() -> close
    34:34:com.android.camera.one.v2.camera2proxy.ImageProxy getNext() -> getNext
com.android.camera.one.v2.sharedimagereader.ManagedImageReader -> com.android.camera.one.v2.sharedimagereader.ManagedImageReader:
    89:93:void <init>(com.android.camera.async.Lifetime,com.android.camera.one.v2.sharedimagereader.ticketpool.TicketPool,android.view.Surface,com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributor) -> <init>
    150:157:com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageStream createPreallocatedStream(int) -> createPreallocatedStream
    128:128:com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageStream createStream(int) -> createStream
    97:110:com.android.camera.one.v2.sharedimagereader.AllocatingImageStream createUnallocatedStream(int) -> createUnallocatedStream
com.android.camera.one.v2.sharedimagereader.SharedImageReaderFactory -> com.android.camera.one.v2.sharedimagereader.SharedImageReaderFactory:
    56:65:void <init>(com.android.camera.async.Lifetime,com.android.camera.one.v2.camera2proxy.ImageReaderProxy,com.android.camera.async.HandlerFactory) -> <init>
    77:77:com.android.camera.async.Observable provideAvailableImageCount() -> provideAvailableImageCount
    69:69:com.android.camera.async.Updatable provideGlobalTimestampQueue() -> provideGlobalTimestampQueue
    73:73:com.android.camera.one.v2.sharedimagereader.ManagedImageReader provideSharedImageReader() -> provideSharedImageReader
com.android.camera.one.v2.sharedimagereader.TicketRequiredFilter -> com.android.camera.one.v2.sharedimagereader.TicketRequiredFilter:
    37:39:void <init>(com.android.camera.one.v2.sharedimagereader.ticketpool.TicketProvider,com.android.camera.async.BufferQueueController) -> <init>
    54:54:void close() -> close
    59:59:boolean isClosed() -> isClosed
    32:32:void update(java.lang.Object) -> update
    44:48:void update(com.android.camera.one.v2.camera2proxy.ImageProxy) -> update
com.android.camera.one.v2.sharedimagereader.ZslSharedImageReaderFactory -> com.android.camera.one.v2.sharedimagereader.ZslSharedImageReaderFactory:
    66:101:void <init>(com.android.camera.async.Lifetime,com.android.camera.one.v2.camera2proxy.ImageReaderProxy,com.android.camera.async.HandlerFactory,int) -> <init>
    121:121:com.android.camera.async.Observable provideAvailableImageCount() -> provideAvailableImageCount
    109:109:com.android.camera.one.v2.core.ResponseListener provideGlobalResponseListener() -> provideGlobalResponseListener
    117:117:com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPool provideMetadataPool() -> provideMetadataPool
    105:105:com.android.camera.one.v2.sharedimagereader.ManagedImageReader provideSharedImageReader() -> provideSharedImageReader
    113:113:com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageStream provideZSLStream() -> provideZSLStream
com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorFactory -> com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorFactory:
    42:54:void <init>(com.android.camera.async.Lifetime,com.android.camera.one.v2.camera2proxy.ImageReaderProxy,com.android.camera.async.HandlerFactory) -> <init>
    64:64:com.android.camera.async.Updatable provideGlobalTimestampCallback() -> provideGlobalTimestampCallback
    60:60:com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributor provideImageDistributor() -> provideImageDistributor
com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorImpl -> com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorImpl:
    78:81:void <init>(com.android.camera.debug.Logger$Factory,com.android.camera.async.BufferQueue) -> <init>
    211:213:void addRoute(com.android.camera.async.BufferQueue,com.android.camera.async.BufferQueueController) -> addRoute
    98:191:void distributeImage(com.android.camera.one.v2.camera2proxy.ImageProxy) -> distributeImage
com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorImpl$DispatchRecord -> com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorImpl$DispatchRecord:
    43:43:void <init>(com.android.camera.async.BufferQueue,com.android.camera.async.BufferQueueController,com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorImpl$1) -> <init>
    48:50:void <init>(com.android.camera.async.BufferQueue,com.android.camera.async.BufferQueueController) -> <init>
com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorOnImageAvailableListener -> com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorOnImageAvailableListener:
    39:41:void <init>(com.android.camera.one.v2.camera2proxy.ImageReaderProxy,com.android.camera.one.v2.sharedimagereader.imagedistributor.ImageDistributorImpl) -> <init>
    46:48:void onImageAvailable() -> onImageAvailable
com.android.camera.one.v2.sharedimagereader.imagedistributor.RefCountedImageProxy -> com.android.camera.one.v2.sharedimagereader.imagedistributor.RefCountedImageProxy:
    38:39:void <init>(com.android.camera.one.v2.camera2proxy.ImageProxy,int) -> <init>
    44:44:void close() -> close
com.android.camera.one.v2.sharedimagereader.imagedistributor.SingleCloseImageProxy -> com.android.camera.one.v2.sharedimagereader.imagedistributor.SingleCloseImageProxy:
    35:36:void <init>(com.android.camera.one.v2.camera2proxy.ImageProxy) -> <init>
    41:42:void close() -> close
com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolFactory -> com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolFactory:
    29:31:void <init>(com.android.camera.async.BufferQueueController) -> <init>
    43:43:com.android.camera.async.BufferQueueController provideImageQueue() -> provideImageQueue
    39:39:com.android.camera.async.Updatable provideMetadataCallback() -> provideMetadataCallback
    35:35:com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPool provideMetadataPool() -> provideMetadataPool
    48:48:com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolImpl provideMetadataPoolImpl() -> provideMetadataPoolImpl
com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolImpl -> com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolImpl:
    44:46:void <init>() -> <init>
    39:39:java.lang.Object access$000(com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolImpl) -> access$000
    39:39:java.util.Map access$100(com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolImpl) -> access$100
    51:53:int getMapSize() -> getMapSize
    58:64:com.google.common.util.concurrent.SettableFuture getOrCreateFuture(long) -> getOrCreateFuture
    71:86:com.google.common.util.concurrent.ListenableFuture removeMetadataFuture(long) -> removeMetadataFuture
    38:38:void update(java.lang.Object) -> update
    91:93:void update(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> update
com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolImpl$1 -> com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolImpl$1:
    73:73:void <init>(com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPoolImpl,long) -> <init>
    83:83:void onFailure(java.lang.Throwable) -> onFailure
    73:73:void onSuccess(java.lang.Object) -> onSuccess
    76:78:void onSuccess(com.android.camera.one.v2.camera2proxy.TotalCaptureResultProxy) -> onSuccess
com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataReleasingImageQueue -> com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataReleasingImageQueue:
    55:57:void <init>(com.android.camera.async.BufferQueueController,com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPool) -> <init>
    34:34:com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataPool access$000(com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataReleasingImageQueue) -> access$000
    67:67:void close() -> close
    72:72:boolean isClosed() -> isClosed
    32:32:void update(java.lang.Object) -> update
    62:62:void update(com.android.camera.one.v2.camera2proxy.ImageProxy) -> update
com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataReleasingImageQueue$MetadataReleasingImageProxy -> com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataReleasingImageQueue$MetadataReleasingImageProxy:
    36:37:void <init>(com.android.camera.one.v2.sharedimagereader.metadatasynchronizer.MetadataReleasingImageQueue,com.android.camera.one.v2.camera2proxy.ImageProxy) -> <init>
    43:47:void close() -> close
com.android.camera.one.v2.sharedimagereader.ringbuffer.AvailableTicketCounter -> com.android.camera.one.v2.sharedimagereader.ringbuffer.AvailableTicketCounter:
    46:49:void <init>(java.util.List) -> <init>
    55:57:com.android.camera.async.SafeCloseable addCallback(java.lang.Runnable,java.util.concurrent.Executor) -> addCallback
    64:65:int compute() -> compute
    86:90:void freeze() -> freeze
    39:39:java.lang.Object get() -> get
    73:77:java.lang.Integer get() -> get
    102:105:void unfreeze() -> unfreeze
com.android.camera.one.v2.sharedimagereader.ringbuffer.DynamicRingBuffer -> com.android.camera.one.v2.sharedimagereader.ringbuffer.DynamicRingBuffer:
    73:80:void <init>(com.android.camera.one.v2.sharedimagereader.ticketpool.TicketPool) -> <init>
    160:168:java.util.Collection acquire(int) -> acquire
    127:127:void close() -> close
    148:148:void discardNext() -> discardNext
    174:174:com.android.camera.async.Observable getAvailableTicketCount() -> getAvailableTicketCount
    58:58:java.lang.Object getNext() -> getNext
    58:58:java.lang.Object getNext(long,java.util.concurrent.TimeUnit) -> getNext
    132:132:com.android.camera.one.v2.camera2proxy.ImageProxy getNext() -> getNext
    138:138:com.android.camera.one.v2.camera2proxy.ImageProxy getNext(long,java.util.concurrent.TimeUnit) -> getNext
    153:153:boolean isClosed() -> isClosed
    58:58:java.lang.Object peekNext() -> peekNext
    143:143:com.android.camera.one.v2.camera2proxy.ImageProxy peekNext() -> peekNext
    192:195:void setMaxSize(int) -> setMaxSize
    202:212:void shrinkToFitMaxSize() -> shrinkToFitMaxSize
    180:188:com.android.camera.one.v2.sharedimagereader.ticketpool.Ticket tryAcquire() -> tryAcquire
    119:122:com.android.camera.one.v2.sharedimagereader.ticketpool.Ticket tryAcquireLowPriorityTicket() -> tryAcquireLowPriorityTicket
    58:58:void update(java.lang.Object) -> update
    96:114:void update(com.android.camera.one.v2.camera2proxy.ImageProxy) -> update
com.android.camera.one.v2.sharedimagereader.ringbuffer.DynamicRingBufferFactory -> com.android.camera.one.v2.sharedimagereader.ringbuffer.DynamicRingBufferFactory:
    46:59:void <init>(com.android.camera.async.Lifetime,com.android.camera.one.v2.sharedimagereader.ticketpool.TicketPool,com.android.camera.async.Observable) -> <init>
    67:67:com.android.camera.async.BufferQueueController provideRingBufferInput() -> provideRingBufferInput
    71:71:com.android.camera.async.BufferQueue provideRingBufferOutput() -> provideRingBufferOutput
    63:63:com.android.camera.one.v2.sharedimagereader.ticketpool.TicketPool provideTicketPool() -> provideTicketPool
com.android.camera.one.v2.sharedimagereader.ringbuffer.DynamicRingBufferFactory$1 -> com.android.camera.one.v2.sharedimagereader.ringbuffer.DynamicRingBufferFactory$1:
    49:49:void <init>(com.android.camera.one.v2.sharedimagereader.ringbuffer.DynamicRingBufferFactory,com.android.camera.one.v2.sharedimagereader.ringbuffer.DynamicRingBuffer,com.android.camera.async.Observable) -> <init>
    52:52:void run() -> run
com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool -> com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool:
    85:91:void <init>(int) -> <init>
    37:37:java.util.concurrent.locks.ReentrantLock access$000(com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool) -> access$000
    37:37:void access$100(com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool) -> access$100
    37:37:void access$200(com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool) -> access$200
    120:151:java.util.Collection acquire(int) -> acquire
    187:202:void close() -> close
    166:166:com.android.camera.async.Observable getAvailableTicketCount() -> getAvailableTicketCount
    96:113:void releaseTicket() -> releaseTicket
    171:182:com.android.camera.one.v2.sharedimagereader.ticketpool.Ticket tryAcquire() -> tryAcquire
    156:159:void updateAvailableTicketCount() -> updateAvailableTicketCount
com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool$TicketImpl -> com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool$TicketImpl:
    41:42:void <init>(com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool) -> <init>
    47:52:void close() -> close
com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool$Waiter -> com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool$Waiter:
    57:57:void <init>(com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool,int,java.util.concurrent.locks.Condition,com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool$1) -> <init>
    61:63:void <init>(com.android.camera.one.v2.sharedimagereader.ticketpool.FiniteTicketPool,int,java.util.concurrent.locks.Condition) -> <init>
    67:67:java.util.concurrent.locks.Condition getCondition() -> getCondition
    71:71:int getTicketsRequested() -> getTicketsRequested
com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool -> com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool:
    147:153:void <init>(com.android.camera.one.v2.sharedimagereader.ticketpool.TicketPool) -> <init>
    377:392:void abortWaitersOnCapacityDecrease() -> abortWaitersOnCapacityDecrease
    51:51:java.util.concurrent.locks.ReentrantLock access$000(com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool) -> access$000
    51:51:java.util.ArrayDeque access$100(com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool) -> access$100
    51:51:int access$200(com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool) -> access$200
    51:51:void access$300(com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool) -> access$300
    51:51:void access$400(com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool) -> access$400
    174:178:java.util.Collection acquire(int) -> acquire
    302:321:java.util.Collection acquireParentTickets(int) -> acquireParentTickets
    287:287:void close() -> close
    186:186:com.android.camera.async.Observable getAvailableTicketCount() -> getAvailableTicketCount
    277:282:void releaseAllCapacity() -> releaseAllCapacity
    245:270:void releaseCapacity(int) -> releaseCapacity
    356:373:void releaseWaitersOnTicketAvailability() -> releaseWaitersOnTicketAvailability
    215:230:void reserveCapacity(int) -> reserveCapacity
    192:203:com.android.camera.one.v2.sharedimagereader.ticketpool.Ticket tryAcquire() -> tryAcquire
    336:351:java.util.List tryAcquireAtomically(int) -> tryAcquireAtomically
    158:167:void updateCurrentTicketCount() -> updateCurrentTicketCount
com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool$TicketImpl -> com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool$TicketImpl:
    75:75:void <init>(com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool,com.android.camera.one.v2.sharedimagereader.ticketpool.Ticket,com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool$1) -> <init>
    79:81:void <init>(com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool,com.android.camera.one.v2.sharedimagereader.ticketpool.Ticket) -> <init>
    86:107:void close() -> close
com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool$Waiter -> com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool$Waiter:
    52:52:void <init>(java.util.concurrent.locks.Condition,int,com.android.camera.one.v2.sharedimagereader.ticketpool.ReservableTicketPool$1) -> <init>
    56:58:void <init>(java.util.concurrent.locks.Condition,int) -> <init>
    62:62:java.util.concurrent.locks.Condition getDoneCondition() -> getDoneCondition
    66:66:int getRequestedTicketCount() -> getRequestedTicketCount
com.android.camera.one.v2.sharedimagereader.ticketpool.TicketPool$NoCapacityAvailableException -> com.android.camera.one.v2.sharedimagereader.ticketpool.TicketPool$NoCapacityAvailableException:
    37:37:void <init>() -> <init>
com.android.camera.one.v2.sharedimagereader.util.ImageCloser -> com.android.camera.one.v2.sharedimagereader.util.ImageCloser:
    22:22:void <init>() -> <init>
    22:22:void process(java.lang.Object) -> process
    25:25:void process(com.android.camera.one.v2.camera2proxy.ImageProxy) -> process
com.android.camera.one.v2.sharedimagereader.util.TicketImageProxy -> com.android.camera.one.v2.sharedimagereader.util.TicketImageProxy:
    36:38:void <init>(com.android.camera.one.v2.camera2proxy.ImageProxy,com.android.camera.one.v2.sharedimagereader.ticketpool.Ticket) -> <init>
    43:50:void close() -> close
com.android.camera.processing.ProcessingService -> com.android.camera.processing.ProcessingService:
    74:74:void <clinit>() -> <clinit>
    59:100:void <init>() -> <init>
    59:59:void access$000(com.android.camera.processing.ProcessingService) -> access$000
    59:59:void access$100(com.android.camera.processing.ProcessingService) -> access$100
    59:59:com.android.camera.processing.ProcessingServiceManager access$200(com.android.camera.processing.ProcessingService) -> access$200
    59:59:com.android.camera.processing.ProcessingTask access$300(com.android.camera.processing.ProcessingService) -> access$300
    59:59:com.android.camera.processing.ProcessingTask access$302(com.android.camera.processing.ProcessingService,com.android.camera.processing.ProcessingTask) -> access$302
    59:59:java.util.concurrent.locks.Lock access$400(com.android.camera.processing.ProcessingService) -> access$400
    59:59:boolean access$500(com.android.camera.processing.ProcessingService) -> access$500
    186:211:void asyncProcessAllTasksAndShutdown() -> asyncProcessAllTasksAndShutdown
    262:266:android.app.Notification$Builder createInProgressNotificationBuilder() -> createInProgressNotificationBuilder
    251:251:com.android.camera.app.CameraServices getServices() -> getServices
    104:117:void onCreate() -> onCreate
    122:131:void onDestroy() -> onDestroy
    271:272:void onProgressChanged(int) -> onProgressChanged
    136:142:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    277:278:void onStatusMessageChanged(int) -> onStatusMessageChanged
    156:165:void pause() -> pause
    255:255:void postNotification() -> postNotification
    219:239:void processAndNotify(com.android.camera.processing.ProcessingTask) -> processAndNotify
    243:244:void resetNotification() -> resetNotification
    169:178:void resume() -> resume
com.android.camera.processing.ProcessingService$1 -> com.android.camera.processing.ProcessingService$1:
    189:189:void <init>(com.android.camera.processing.ProcessingService,java.lang.String) -> <init>
    193:208:void run() -> run
com.android.camera.processing.ProcessingService$ServiceController -> com.android.camera.processing.ProcessingService$ServiceController:
    63:63:void <init>(com.android.camera.processing.ProcessingService) -> <init>
    66:69:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.camera.processing.ProcessingServiceManager -> com.android.camera.processing.ProcessingServiceManager:
    37:37:void <clinit>() -> <clinit>
    36:36:void <init>(android.content.Context,com.android.camera.processing.ProcessingServiceManager$1) -> <init>
    52:68:void <init>(android.content.Context) -> <init>
    79:85:void enqueueTask(com.android.camera.processing.ProcessingTask) -> enqueueTask
    150:150:com.android.camera.processing.imagebackend.ImageBackend getImageBackend() -> getImageBackend
    45:45:com.android.camera.processing.ProcessingServiceManager instance() -> instance
    96:103:com.android.camera.processing.ProcessingTask popNextSession() -> popNextSession
    159:160:void startService() -> startService
com.android.camera.processing.ProcessingServiceManager$Singleton -> com.android.camera.processing.ProcessingServiceManager$Singleton:
    40:41:void <clinit>() -> <clinit>
    39:39:com.android.camera.processing.ProcessingServiceManager access$100() -> access$100
com.android.camera.processing.ProcessingTask$ProcessingResult -> com.android.camera.processing.ProcessingTask$ProcessingResult:
    40:42:void <init>(boolean,com.android.camera.session.CaptureSession) -> <init>
com.android.camera.processing.imagebackend.ImageBackend -> com.android.camera.processing.imagebackend.ImageBackend:
    90:137:void <clinit>() -> <clinit>
    141:161:void <init>(com.android.camera.processing.ProcessingTaskConsumer,int) -> <init>
    89:89:int access$300(com.android.camera.processing.imagebackend.ImageBackend) -> access$300
    89:89:int access$308(com.android.camera.processing.imagebackend.ImageBackend) -> access$308
    89:89:int access$400(com.android.camera.processing.imagebackend.ImageBackend) -> access$400
    304:315:boolean appendTasks(com.android.camera.processing.imagebackend.ImageToProcess,java.util.Set) -> appendTasks
    327:329:boolean appendTasks(com.android.camera.processing.imagebackend.ImageToProcess,com.android.camera.processing.imagebackend.TaskImageContainer) -> appendTasks
    760:773:void closeImageExecutorSafe(com.android.camera.processing.imagebackend.ImageToProcess,java.util.concurrent.Executor) -> closeImageExecutorSafe
    647:656:boolean decrementTaskDone(com.android.camera.processing.imagebackend.ImageShadowTask) -> decrementTaskDone
    197:197:com.android.camera.processing.imagebackend.ImageProcessorProxyListener getProxyListener() -> getProxyListener
    737:748:void incrementSemaphoreReferenceCount(com.android.camera.processing.imagebackend.ImageToProcess,int) -> incrementSemaphoreReferenceCount
    625:635:void incrementTaskDone(java.util.Set) -> incrementTaskDone
    588:614:void initializeTaskDone(java.util.Set,com.google.common.base.Optional) -> initializeTaskDone
    207:207:void logWrapper(java.lang.String) -> logWrapper
    786:788:int numPropagatedImageReferences(com.android.camera.processing.imagebackend.ImageToProcess,java.util.Set) -> numPropagatedImageReferences
    430:457:boolean receiveImage(com.android.camera.processing.imagebackend.ImageToProcess,java.util.Set,boolean,boolean,com.google.common.base.Optional) -> receiveImage
    490:543:boolean receiveImage(com.android.camera.processing.imagebackend.ImageToProcess,java.util.concurrent.Executor,java.util.Set,com.android.camera.session.CaptureSession,com.google.common.base.Optional) -> receiveImage
    251:286:void releaseSemaphoreReference(com.android.camera.processing.imagebackend.ImageToProcess,java.util.concurrent.Executor) -> releaseSemaphoreReference
    667:691:void scheduleTasks(java.util.Set) -> scheduleTasks
    702:722:com.android.camera.processing.imagebackend.ImageBackend$ImageReleaseProtocol setSemaphoreReferenceCount(com.android.camera.processing.imagebackend.ImageToProcess,int,boolean,boolean) -> setSemaphoreReferenceCount
    393:398:java.lang.String toString() -> toString
com.android.camera.processing.imagebackend.ImageBackend$1 -> com.android.camera.processing.imagebackend.ImageBackend$1:
    527:527:void <init>(com.android.camera.processing.imagebackend.ImageBackend,com.android.camera.processing.imagebackend.ImageProcessorListener) -> <init>
    530:530:void run() -> run
com.android.camera.processing.imagebackend.ImageBackend$2 -> com.android.camera.processing.imagebackend.ImageBackend$2:
    760:760:void <init>(com.android.camera.processing.imagebackend.ImageBackend,com.android.camera.processing.imagebackend.ImageToProcess) -> <init>
    763:766:void run() -> run
com.android.camera.processing.imagebackend.ImageBackend$3 -> com.android.camera.processing.imagebackend.ImageBackend$3:
    676:676:void <clinit>() -> <clinit>
com.android.camera.processing.imagebackend.ImageBackend$AverageThreadFactory -> com.android.camera.processing.imagebackend.ImageBackend$AverageThreadFactory:
    935:935:void <init>(com.android.camera.processing.imagebackend.ImageBackend) -> <init>
    935:935:void <init>(com.android.camera.processing.imagebackend.ImageBackend,com.android.camera.processing.imagebackend.ImageBackend$1) -> <init>
    938:938:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.android.camera.processing.imagebackend.ImageBackend$BlockSignalProtocol -> com.android.camera.processing.imagebackend.ImageBackend$BlockSignalProtocol:
    851:881:void <init>() -> <init>
    870:876:int addCount(int) -> addCount
    885:896:void block() -> block
    863:865:int getCount() -> getCount
    856:858:void setCount(int) -> setCount
    900:902:void signal() -> signal
com.android.camera.processing.imagebackend.ImageBackend$FastThreadFactory -> com.android.camera.processing.imagebackend.ImageBackend$FastThreadFactory:
    927:927:void <init>(com.android.camera.processing.imagebackend.ImageBackend) -> <init>
    927:927:void <init>(com.android.camera.processing.imagebackend.ImageBackend,com.android.camera.processing.imagebackend.ImageBackend$1) -> <init>
    930:930:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.android.camera.processing.imagebackend.ImageBackend$ImageReleaseProtocol -> com.android.camera.processing.imagebackend.ImageBackend$ImageReleaseProtocol:
    919:921:void <init>(boolean,boolean) -> <init>
com.android.camera.processing.imagebackend.ImageBackend$SlowThreadFactory -> com.android.camera.processing.imagebackend.ImageBackend$SlowThreadFactory:
    943:943:void <init>(com.android.camera.processing.imagebackend.ImageBackend) -> <init>
    943:943:void <init>(com.android.camera.processing.imagebackend.ImageBackend,com.android.camera.processing.imagebackend.ImageBackend$1) -> <init>
    946:946:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.android.camera.processing.imagebackend.ImageBackend$TaskDoneWrapper -> com.android.camera.processing.imagebackend.ImageBackend$TaskDoneWrapper:
    818:821:void <init>(com.android.camera.processing.imagebackend.ImageBackend,com.android.camera.processing.imagebackend.ImageBackend,com.android.camera.processing.imagebackend.ImageShadowTask,com.android.camera.processing.imagebackend.TaskImageContainer) -> <init>
    829:838:void run() -> run
com.android.camera.processing.imagebackend.ImageConsumer$ImageTaskFlags -> com.android.camera.processing.imagebackend.ImageConsumer$ImageTaskFlags:
    60:65:void <clinit>() -> <clinit>
    60:60:void <init>(java.lang.String,int) -> <init>
    60:60:com.android.camera.processing.imagebackend.ImageConsumer$ImageTaskFlags valueOf(java.lang.String) -> valueOf
    60:60:com.android.camera.processing.imagebackend.ImageConsumer$ImageTaskFlags[] values() -> values
com.android.camera.processing.imagebackend.ImageProcessorProxyListener -> com.android.camera.processing.imagebackend.ImageProcessorProxyListener:
    42:42:void <clinit>() -> <clinit>
    60:62:void <init>() -> <init>
    125:129:java.util.List filteredListeners(long) -> filteredListeners
    74:76:int getMapSize() -> getMapSize
    87:89:int getNumRegisteredListeners() -> getNumRegisteredListeners
    164:169:void onResultCompressed(com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo,com.android.camera.processing.imagebackend.TaskImageContainer$CompressedPayload) -> onResultCompressed
    176:181:void onResultUncompressed(com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo,com.android.camera.processing.imagebackend.TaskImageContainer$UncompressedPayload) -> onResultUncompressed
    187:192:void onResultUri(com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo,android.net.Uri) -> onResultUri
    152:157:void onStart(com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo) -> onStart
    104:119:void registerListener(com.android.camera.processing.imagebackend.ImageProcessorListener,com.android.camera.one.v2.camera2proxy.ImageProxy) -> registerListener
    137:147:void unregisterListener(com.android.camera.processing.imagebackend.ImageProcessorListener) -> unregisterListener
com.android.camera.processing.imagebackend.ImageShadowTask -> com.android.camera.processing.imagebackend.ImageShadowTask:
    48:48:void <clinit>() -> <clinit>
    73:79:void <init>(com.android.camera.processing.imagebackend.ImageBackend$BlockSignalProtocol,com.android.camera.session.CaptureSession,com.google.common.base.Optional) -> <init>
    84:84:com.android.camera.processing.imagebackend.ImageBackend$BlockSignalProtocol getProtocol() -> getProtocol
    92:92:java.lang.Runnable getRunnableWhenDone() -> getRunnableWhenDone
    136:136:com.android.camera.session.CaptureSession getSession() -> getSession
    98:107:com.android.camera.processing.ProcessingTask$ProcessingResult process(android.content.Context,com.android.camera.app.CameraServices,com.android.camera.session.CaptureSession) -> process
com.android.camera.processing.imagebackend.ImageToProcess -> com.android.camera.processing.imagebackend.ImageToProcess:
    46:50:void <init>(com.android.camera.one.v2.camera2proxy.ImageProxy,com.android.camera.app.OrientationManager$DeviceOrientation,com.google.common.util.concurrent.ListenableFuture,android.graphics.Rect) -> <init>
com.android.camera.processing.imagebackend.TaskCompressImageToJpeg -> com.android.camera.processing.imagebackend.TaskCompressImageToJpeg:
    78:79:void <init>(com.android.camera.processing.imagebackend.ImageToProcess,java.util.concurrent.Executor,com.android.camera.processing.imagebackend.ImageTaskManager,com.android.camera.session.CaptureSession,com.android.camera.processing.memory.LruResourcePool) -> <init>
    88:88:int compressJpegFromYUV420Image(com.android.camera.one.v2.camera2proxy.ImageProxy,java.nio.ByteBuffer,int,android.graphics.Rect,int) -> compressJpegFromYUV420Image
    401:413:com.android.camera.exif.ExifInterface createExif(com.google.common.base.Optional,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,com.google.common.util.concurrent.ListenableFuture) -> createExif
    98:102:java.util.Map exifGetMinimalTags(com.android.camera.exif.ExifInterface) -> exifGetMinimalTags
    436:444:com.android.camera.util.Size getImageSizeForOrientation(int,int,com.android.camera.app.OrientationManager$DeviceOrientation) -> getImageSizeForOrientation
    423:423:int getJpegCompressionQuality() -> getJpegCompressionQuality
    109:378:void run() -> run
com.android.camera.processing.imagebackend.TaskCompressImageToJpeg$1 -> com.android.camera.processing.imagebackend.TaskCompressImageToJpeg$1:
    346:346:void <init>(com.android.camera.processing.imagebackend.TaskCompressImageToJpeg,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage) -> <init>
    346:346:void onSuccess(java.lang.Object) -> onSuccess
    349:350:void onSuccess(com.google.common.base.Optional) -> onSuccess
com.android.camera.processing.imagebackend.TaskConvertImageToRGBPreview -> com.android.camera.processing.imagebackend.TaskConvertImageToRGBPreview:
    74:74:void <clinit>() -> <clinit>
    95:97:void <init>(com.android.camera.processing.imagebackend.ImageToProcess,java.util.concurrent.Executor,com.android.camera.processing.imagebackend.ImageTaskManager,com.android.camera.processing.imagebackend.TaskImageContainer$ProcessingPriority,com.android.camera.session.CaptureSession,com.android.camera.util.Size,com.android.camera.processing.imagebackend.TaskConvertImageToRGBPreview$ThumbnailShape) -> <init>
    139:150:int calculateBestSubsampleFactor(com.android.camera.util.Size,com.android.camera.util.Size) -> calculateBestSubsampleFactor
    807:808:com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage calculateInputImage(com.android.camera.processing.imagebackend.ImageToProcess,android.graphics.Rect) -> calculateInputImage
    181:181:int calculateMemoryOffsetFromPixelOffsets(int,int,int,int,int,int,int,int) -> calculateMemoryOffsetFromPixelOffsets
    820:833:com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage calculateResultImage(com.android.camera.processing.imagebackend.ImageToProcess,int) -> calculateResultImage
    229:484:int[] colorInscribedDataCircleFromYuvImage(com.android.camera.one.v2.camera2proxy.ImageProxy,android.graphics.Rect,int) -> colorInscribedDataCircleFromYuvImage
    542:768:int[] colorSubSampleFromYuvImage(com.android.camera.one.v2.camera2proxy.ImageProxy,android.graphics.Rect,int,boolean) -> colorSubSampleFromYuvImage
    123:123:int inscribedCircleRadius(int,int) -> inscribedCircleRadius
    101:101:void logWrapper(java.lang.String) -> logWrapper
    904:907:void onPreviewDone(com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,int[],com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo$Destination) -> onPreviewDone
    108:108:int quantizeBy2(int) -> quantizeBy2
    867:890:void run() -> run
    848:856:int[] runSelectedConversion(com.android.camera.one.v2.camera2proxy.ImageProxy,android.graphics.Rect,int) -> runSelectedConversion
    783:794:int[] stubColorInscribedDataCircleFromYuvImage(com.android.camera.one.v2.camera2proxy.ImageProxy,int) -> stubColorInscribedDataCircleFromYuvImage
com.android.camera.processing.imagebackend.TaskConvertImageToRGBPreview$1 -> com.android.camera.processing.imagebackend.TaskConvertImageToRGBPreview$1:
    848:848:void <clinit>() -> <clinit>
com.android.camera.processing.imagebackend.TaskConvertImageToRGBPreview$ThumbnailShape -> com.android.camera.processing.imagebackend.TaskConvertImageToRGBPreview$ThumbnailShape:
    48:52:void <clinit>() -> <clinit>
    48:48:void <init>(java.lang.String,int) -> <init>
    48:48:com.android.camera.processing.imagebackend.TaskConvertImageToRGBPreview$ThumbnailShape valueOf(java.lang.String) -> valueOf
    48:48:com.android.camera.processing.imagebackend.TaskConvertImageToRGBPreview$ThumbnailShape[] values() -> values
com.android.camera.processing.imagebackend.TaskImageContainer -> com.android.camera.processing.imagebackend.TaskImageContainer:
    142:142:void <clinit>() -> <clinit>
    183:189:void <init>(com.android.camera.processing.imagebackend.ImageToProcess,java.util.concurrent.Executor,com.android.camera.processing.imagebackend.ImageTaskManager,com.android.camera.processing.imagebackend.TaskImageContainer$ProcessingPriority,com.android.camera.session.CaptureSession) -> <init>
    209:210:com.android.camera.app.OrientationManager$DeviceOrientation addOrientation(com.android.camera.app.OrientationManager$DeviceOrientation,com.android.camera.app.OrientationManager$DeviceOrientation) -> addOrientation
    303:303:com.android.camera.processing.imagebackend.TaskImageContainer$ProcessingPriority getProcessingPriority() -> getProcessingPriority
    226:226:android.graphics.Rect guaranteedSafeCrop(com.android.camera.one.v2.camera2proxy.ImageProxy,android.graphics.Rect) -> guaranteedSafeCrop
    246:260:android.graphics.Rect guaranteedSafeCrop(int,int,android.graphics.Rect) -> guaranteedSafeCrop
    292:294:void onStart(long,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo$Destination) -> onStart
    279:279:boolean requiresCropOperation(com.android.camera.one.v2.camera2proxy.ImageProxy,android.graphics.Rect) -> requiresCropOperation
    197:202:android.graphics.Rect rotateBoundingBox(android.graphics.Rect,com.android.camera.app.OrientationManager$DeviceOrientation) -> rotateBoundingBox
com.android.camera.processing.imagebackend.TaskImageContainer$CompressedPayload -> com.android.camera.processing.imagebackend.TaskImageContainer$CompressedPayload:
    56:57:void <init>(byte[]) -> <init>
com.android.camera.processing.imagebackend.TaskImageContainer$ProcessingPriority -> com.android.camera.processing.imagebackend.TaskImageContainer$ProcessingPriority:
    138:139:void <clinit>() -> <clinit>
    138:138:void <init>(java.lang.String,int) -> <init>
    138:138:com.android.camera.processing.imagebackend.TaskImageContainer$ProcessingPriority valueOf(java.lang.String) -> valueOf
    138:138:com.android.camera.processing.imagebackend.TaskImageContainer$ProcessingPriority[] values() -> values
com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage -> com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage:
    79:84:void <init>(com.android.camera.app.OrientationManager$DeviceOrientation,int,int,int,android.graphics.Rect) -> <init>
com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo -> com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo:
    129:133:void <init>(long,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo$Destination) -> <init>
com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo$Destination -> com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo$Destination:
    114:117:void <clinit>() -> <clinit>
    114:114:void <init>(java.lang.String,int) -> <init>
    114:114:com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo$Destination valueOf(java.lang.String) -> valueOf
    114:114:com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo$Destination[] values() -> values
com.android.camera.processing.imagebackend.TaskImageContainer$UncompressedPayload -> com.android.camera.processing.imagebackend.TaskImageContainer$UncompressedPayload:
    44:45:void <init>(int[]) -> <init>
com.android.camera.processing.imagebackend.TaskJpegEncode -> com.android.camera.processing.imagebackend.TaskJpegEncode:
    42:42:void <clinit>() -> <clinit>
    67:67:void <init>(com.android.camera.processing.imagebackend.ImageToProcess,java.util.concurrent.Executor,com.android.camera.processing.imagebackend.ImageTaskManager,com.android.camera.processing.imagebackend.TaskImageContainer$ProcessingPriority,com.android.camera.session.CaptureSession) -> <init>
    191:199:byte[] decompressCropAndRecompressJpegData(byte[],android.graphics.Rect,int) -> decompressCropAndRecompressJpegData
    212:214:void onJpegEncodeDone(long,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,byte[],com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo$Destination) -> onJpegEncodeDone
    228:230:void onUriResolved(long,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage,android.net.Uri,com.android.camera.processing.imagebackend.TaskImageContainer$TaskInfo$Destination) -> onUriResolved
com.android.camera.processing.imagebackend.TaskPreviewChainedJpeg -> com.android.camera.processing.imagebackend.TaskPreviewChainedJpeg:
    51:53:void <init>(com.android.camera.processing.imagebackend.ImageToProcess,java.util.concurrent.Executor,com.android.camera.processing.imagebackend.ImageTaskManager,com.android.camera.session.CaptureSession,com.android.camera.util.Size,com.android.camera.processing.memory.LruResourcePool) -> <init>
    63:91:void run() -> run
com.android.camera.processing.memory.ByteBufferDirectPool -> com.android.camera.processing.memory.ByteBufferDirectPool:
    27:27:void <init>(int) -> <init>
    25:25:java.lang.Object create(java.lang.Object) -> create
    32:32:java.nio.ByteBuffer create(java.lang.Integer) -> create
    25:25:java.lang.Object recycle(java.lang.Object,java.lang.Object) -> recycle
    38:39:java.nio.ByteBuffer recycle(java.lang.Integer,java.nio.ByteBuffer) -> recycle
com.android.camera.processing.memory.LruPool -> com.android.camera.processing.memory.LruPool:
    117:117:void <init>(int) -> <init>
    120:128:void <init>(int,com.android.camera.processing.memory.LruPool$Configuration) -> <init>
    146:158:java.lang.Object acquire(java.lang.Object) -> acquire
    172:189:void add(java.lang.Object,java.lang.Object) -> add
    251:252:int checkedSizeOf(java.lang.Object,java.lang.Object) -> checkedSizeOf
    227:245:void unsafeTrimToSize(int) -> unsafeTrimToSize
com.android.camera.processing.memory.LruPool$Configuration -> com.android.camera.processing.memory.LruPool$Configuration:
    49:49:void <init>() -> <init>
com.android.camera.processing.memory.SimpleLruResourcePool -> com.android.camera.processing.memory.SimpleLruResourcePool:
    36:40:void <init>(int) -> <init>
    30:30:void access$000(com.android.camera.processing.memory.SimpleLruResourcePool,java.lang.Object,java.lang.Object) -> access$000
    46:56:com.android.camera.processing.memory.LruResourcePool$Resource acquire(java.lang.Object) -> acquire
    76:76:void release(java.lang.Object,java.lang.Object) -> release
com.android.camera.processing.memory.SimpleLruResourcePool$SynchronizedResource -> com.android.camera.processing.memory.SimpleLruResourcePool$SynchronizedResource:
    95:100:void <init>(com.android.camera.processing.memory.SimpleLruResourcePool,java.lang.Object,java.lang.Object) -> <init>
    116:122:void close() -> close
    106:110:java.lang.Object get() -> get
com.android.camera.session.CaptureSessionFactoryImpl -> com.android.camera.session.CaptureSessionFactoryImpl:
    33:37:void <init>(com.android.camera.app.MediaSaver,com.android.camera.session.PlaceholderManager,com.android.camera.session.SessionStorageManager,com.android.camera.session.StackSaverFactory) -> <init>
    44:48:com.android.camera.session.CaptureSession createNewSession(com.android.camera.session.CaptureSessionManager,com.android.camera.session.SessionNotifier,java.lang.String,long,android.location.Location) -> createNewSession
com.android.camera.session.CaptureSessionImpl -> com.android.camera.session.CaptureSessionImpl:
    48:48:void <clinit>() -> <clinit>
    63:120:void <init>(java.lang.String,long,android.location.Location,com.android.camera.session.TemporarySessionFile,com.android.camera.session.CaptureSessionManager,com.android.camera.session.SessionNotifier,com.android.camera.session.PlaceholderManager,com.android.camera.app.MediaSaver,com.android.camera.session.StackSaver) -> <init>
    47:47:com.android.camera.session.CaptureSession$ImageLifecycleListener access$000(com.android.camera.session.CaptureSessionImpl) -> access$000
    442:446:void addProgressListener(com.android.camera.session.CaptureSession$ProgressListener) -> addProgressListener
    282:294:void cancel() -> cancel
    456:456:void finalizeSession() -> finalizeSession
    431:437:void finishWithFailure(int,boolean) -> finishWithFailure
    125:125:com.android.camera.stats.CaptureSessionStatsCollector getCollector() -> getCollector
    135:135:android.location.Location getLocation() -> getLocation
    145:145:int getProgress() -> getProgress
    163:163:int getProgressMessageId() -> getProgressMessageId
    344:344:com.android.camera.session.StackSaver getStackSaver() -> getStackSaver
    130:130:java.lang.String getTitle() -> getTitle
    397:397:android.net.Uri getUri() -> getUri
    464:464:boolean isStarted() -> isStarted
    460:460:void onCaptureIndicatorUpdate(android.graphics.Bitmap,int) -> onCaptureIndicatorUpdate
    299:339:com.google.common.util.concurrent.ListenableFuture saveAndFinish(byte[],int,int,int,com.android.camera.exif.ExifInterface) -> saveAndFinish
    150:159:void setProgress(int) -> setProgress
    168:173:void setProgressMessage(int) -> setProgressMessage
    201:216:void startEmpty(com.android.camera.session.CaptureSession$ImageLifecycleListener,com.android.camera.util.Size) -> startEmpty
    221:237:void startSession(com.android.camera.session.CaptureSession$ImageLifecycleListener,android.graphics.Bitmap,int) -> startSession
    191:194:void updateCaptureIndicatorThumbnail(android.graphics.Bitmap,int) -> updateCaptureIndicatorThumbnail
    179:186:void updateThumbnail(android.graphics.Bitmap) -> updateThumbnail
com.android.camera.session.CaptureSessionImpl$1 -> com.android.camera.session.CaptureSessionImpl$1:
    310:310:void <init>(com.android.camera.session.CaptureSessionImpl,com.google.common.util.concurrent.SettableFuture) -> <init>
    313:316:void onMediaSaved(android.net.Uri) -> onMediaSaved
com.android.camera.session.CaptureSessionManagerImpl -> com.android.camera.session.CaptureSessionManagerImpl:
    243:243:void <clinit>() -> <clinit>
    254:275:void <init>(com.android.camera.session.CaptureSessionFactory,com.android.camera.session.SessionStorageManager,com.android.camera.async.MainThread) -> <init>
    61:61:java.util.LinkedList access$000(com.android.camera.session.CaptureSessionManagerImpl) -> access$000
    61:61:com.android.camera.async.MainThread access$100(com.android.camera.session.CaptureSessionManagerImpl) -> access$100
    61:61:void access$200(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri) -> access$200
    61:61:java.util.Map access$400(com.android.camera.session.CaptureSessionManagerImpl) -> access$400
    307:309:void addSessionListener(com.android.camera.session.CaptureSessionManager$SessionListener) -> addSessionListener
    280:280:com.android.camera.session.CaptureSession createNewSession(java.lang.String,long,android.location.Location) -> createNewSession
    350:350:void fillTemporarySession(com.android.camera.session.CaptureSessionManager$SessionListener) -> fillTemporarySession
    373:377:void finalizeSession(android.net.Uri) -> finalizeSession
    331:333:int getErrorMessageId(android.net.Uri) -> getErrorMessageId
    326:326:boolean hasErrorMessage(android.net.Uri) -> hasErrorMessage
    345:345:void putErrorMessage(android.net.Uri,int) -> putErrorMessage
    286:288:void putSession(android.net.Uri,com.android.camera.session.CaptureSession) -> putSession
    340:340:void removeErrorMessage(android.net.Uri) -> removeErrorMessage
    300:302:com.android.camera.session.CaptureSession removeSession(android.net.Uri) -> removeSession
    314:316:void removeSessionListener(com.android.camera.session.CaptureSessionManager$SessionListener) -> removeSessionListener
com.android.camera.session.CaptureSessionManagerImpl$1 -> com.android.camera.session.CaptureSessionManagerImpl$1:
    350:350:void <init>(com.android.camera.session.CaptureSessionManagerImpl,com.android.camera.session.CaptureSessionManager$SessionListener) -> <init>
    353:361:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl:
    63:63:void <init>(com.android.camera.session.CaptureSessionManagerImpl) -> <init>
    63:63:void <init>(com.android.camera.session.CaptureSessionManagerImpl,com.android.camera.session.CaptureSessionManagerImpl$1) -> <init>
    201:201:void notifySessionCaptureIndicatorAvailable(android.graphics.Bitmap,int) -> notifySessionCaptureIndicatorAvailable
    230:230:void notifySessionPictureDataAvailable(byte[],int) -> notifySessionPictureDataAvailable
    215:215:void notifySessionThumbnailAvailable(android.graphics.Bitmap) -> notifySessionThumbnailAvailable
    178:178:void notifySessionUpdated(android.net.Uri) -> notifySessionUpdated
    123:123:void notifyTaskCanceled(android.net.Uri) -> notifyTaskCanceled
    88:88:void notifyTaskDone(android.net.Uri) -> notifyTaskDone
    108:108:void notifyTaskFailed(android.net.Uri,int,boolean) -> notifyTaskFailed
    142:142:void notifyTaskProgress(android.net.Uri,int) -> notifyTaskProgress
    160:160:void notifyTaskProgressText(android.net.Uri,int) -> notifyTaskProgressText
    70:70:void notifyTaskQueued(android.net.Uri) -> notifyTaskQueued
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$1 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$1:
    70:70:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,android.net.Uri) -> <init>
    73:77:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$10 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$10:
    230:230:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,byte[],int) -> <init>
    233:237:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$2 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$2:
    88:88:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,android.net.Uri) -> <init>
    91:96:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$3 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$3:
    108:108:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,android.net.Uri,int,boolean) -> <init>
    111:116:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$4 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$4:
    123:123:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,android.net.Uri) -> <init>
    126:131:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$5 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$5:
    142:142:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,android.net.Uri,int) -> <init>
    145:149:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$6 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$6:
    160:160:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,android.net.Uri,int) -> <init>
    163:167:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$7 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$7:
    178:178:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,android.net.Uri) -> <init>
    181:185:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$8 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$8:
    201:201:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,android.graphics.Bitmap,int) -> <init>
    204:208:void run() -> run
com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$9 -> com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl$9:
    215:215:void <init>(com.android.camera.session.CaptureSessionManagerImpl$SessionNotifierImpl,android.graphics.Bitmap) -> <init>
    218:222:void run() -> run
com.android.camera.session.PlaceholderManager -> com.android.camera.session.PlaceholderManager:
    42:42:void <clinit>() -> <clinit>
    58:59:void <init>(android.content.Context) -> <init>
    137:140:android.net.Uri finishPlaceholder(com.android.camera.session.PlaceholderManager$Placeholder,android.location.Location,int,com.android.camera.exif.ExifInterface,byte[],int,int,java.lang.String) -> finishPlaceholder
    72:73:com.android.camera.session.PlaceholderManager$Placeholder insertEmptyPlaceholder(java.lang.String,com.android.camera.util.Size,long) -> insertEmptyPlaceholder
    87:98:com.android.camera.session.PlaceholderManager$Placeholder insertPlaceholder(java.lang.String,android.graphics.Bitmap,long) -> insertPlaceholder
    171:171:void removePlaceholder(com.android.camera.session.PlaceholderManager$Placeholder) -> removePlaceholder
    151:152:void replacePlaceholder(com.android.camera.session.PlaceholderManager$Placeholder,android.graphics.Bitmap) -> replacePlaceholder
com.android.camera.session.PlaceholderManager$Placeholder -> com.android.camera.session.PlaceholderManager$Placeholder:
    51:54:void <init>(java.lang.String,android.net.Uri,long) -> <init>
com.android.camera.session.SessionStorageManagerImpl -> com.android.camera.session.SessionStorageManagerImpl:
    32:32:void <clinit>() -> <clinit>
    58:60:void <init>(java.io.File,java.io.File) -> <init>
    54:55:com.android.camera.session.SessionStorageManager create(android.content.Context) -> create
com.android.camera.session.StackSaverFactory -> com.android.camera.session.StackSaverFactory:
    39:41:void <init>(java.lang.String,android.content.ContentResolver) -> <init>
    53:53:com.android.camera.session.StackSaver create(java.lang.String,android.location.Location) -> create
com.android.camera.session.StackSaverImpl -> com.android.camera.session.StackSaverImpl:
    39:39:void <clinit>() -> <clinit>
    57:60:void <init>(java.io.File,android.location.Location,android.content.ContentResolver) -> <init>
com.android.camera.session.TemporarySessionFile -> com.android.camera.session.TemporarySessionFile:
    41:45:void <init>(com.android.camera.session.SessionStorageManager,java.lang.String,java.lang.String) -> <init>
com.android.camera.settings.AppUpgrader -> com.android.camera.settings.AppUpgrader:
    40:40:void <clinit>() -> <clinit>
    101:102:void <init>(com.android.camera.app.AppController) -> <init>
    365:395:void copyPreferences(android.content.SharedPreferences,android.content.SharedPreferences) -> copyPreferences
    292:309:void forceLocationChoice(com.android.camera.settings.SettingsManager) -> forceLocationChoice
    112:123:int getLastVersion(com.android.camera.settings.SettingsManager) -> getLastVersion
    492:500:void updateN516by9ResolutionIfNeeded(com.android.camera.settings.SettingsManager) -> updateN516by9ResolutionIfNeeded
    128:171:void upgrade(com.android.camera.settings.SettingsManager,int,int) -> upgrade
    407:417:void upgradeCameraSettingsFiles(com.android.camera.settings.SettingsManager,android.content.Context) -> upgradeCameraSettingsFiles
    322:347:void upgradeCameraSizeSetting(com.android.camera.settings.SettingsManager,android.content.Context,com.android.ex.camera2.portability.CameraDeviceInfo,com.android.camera.settings.SettingsUtil$CameraDeviceSelector) -> upgradeCameraSizeSetting
    446:450:void upgradeMaxBrightness(com.android.camera.settings.SettingsManager) -> upgradeMaxBrightness
    423:438:void upgradeModuleSettingsFiles(com.android.camera.settings.SettingsManager,android.content.Context,com.android.camera.app.AppController) -> upgradeModuleSettingsFiles
    464:476:void upgradeSelectedModeIndex(com.android.camera.settings.SettingsManager,android.content.Context) -> upgradeSelectedModeIndex
    184:280:void upgradeTypesToStrings(com.android.camera.settings.SettingsManager) -> upgradeTypesToStrings
com.android.camera.settings.CameraFacingSetting -> com.android.camera.settings.CameraFacingSetting:
    45:60:void <init>(android.content.res.Resources,com.android.camera.settings.SettingsManager,java.lang.String,com.android.camera.app.AppController) -> <init>
    103:109:com.android.camera.one.OneCamera$Facing getCameraFacing() -> getCameraFacing
    138:141:com.android.camera.one.OneCamera$Facing getDefaultCameraFacing() -> getDefaultCameraFacing
    85:85:boolean isFacingBack() -> isFacingBack
    66:66:java.lang.String toString() -> toString
com.android.camera.settings.CameraPictureSizesCacher -> com.android.camera.settings.CameraPictureSizesCacher:
    110:121:com.google.common.base.Optional getCachedSizesForCamera(int,android.content.Context) -> getCachedSizesForCamera
    70:94:java.util.List getSizesForCamera(int,android.content.Context) -> getSizesForCamera
    45:54:void updateSizesForCamera(android.content.Context,int,java.util.List) -> updateSizesForCamera
com.android.camera.settings.CameraSettingsActivity -> com.android.camera.settings.CameraSettingsActivity:
    63:63:void <init>() -> <init>
    79:127:void onCreate(android.os.Bundle) -> onCreate
    132:134:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
com.android.camera.settings.CameraSettingsActivity$CameraSettingsFragment -> com.android.camera.settings.CameraSettingsActivity$CameraSettingsFragment:
    145:146:void <clinit>() -> <clinit>
    140:152:void <init>() -> <init>
    303:309:void fillEntriesAndSummaries(android.preference.PreferenceGroup) -> fillEntriesAndSummaries
    260:266:android.preference.PreferenceScreen findByKey(android.preference.PreferenceScreen,java.lang.String) -> findByKey
    246:254:android.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    515:520:java.lang.String getSizeSummaryString(com.android.camera.util.Size) -> getSizeSummaryString
    500:506:void loadSizes() -> loadSizes
    159:186:void onCreate(android.os.Bundle) -> onCreate
    345:347:void onPause() -> onPause
    191:224:void onResume() -> onResume
    352:358:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    320:335:boolean recursiveDelete(android.preference.PreferenceGroup,android.preference.Preference) -> recursiveDelete
    369:381:void setEntries(android.preference.Preference) -> setEntries
    423:431:void setEntriesForSelection(java.util.List,android.preference.ListPreference) -> setEntriesForSelection
    449:457:void setEntriesForSelection(com.android.camera.settings.SettingsUtil$SelectedVideoQualities,android.preference.ListPreference) -> setEntriesForSelection
    231:233:void setPreferenceScreenIntent(android.preference.PreferenceScreen) -> setPreferenceScreenIntent
    390:406:void setSummary(android.preference.Preference) -> setSummary
    468:476:void setSummaryForSelection(java.util.List,android.preference.ListPreference) -> setSummaryForSelection
    491:492:void setSummaryForSelection(com.android.camera.settings.SettingsUtil$SelectedVideoQualities,android.preference.ListPreference) -> setSummaryForSelection
    282:295:void setVisibilities() -> setVisibilities
com.android.camera.settings.CameraSettingsActivity$CameraSettingsFragment$1 -> com.android.camera.settings.CameraSettingsActivity$CameraSettingsFragment$1:
    199:199:void <init>(com.android.camera.settings.CameraSettingsActivity$CameraSettingsFragment) -> <init>
com.android.camera.settings.DefaultsStore -> com.android.camera.settings.DefaultsStore:
    63:63:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    80:84:java.lang.String getDefaultValue(java.lang.String) -> getDefaultValue
    92:96:java.lang.String[] getPossibleValues(java.lang.String) -> getPossibleValues
    71:72:void storeDefaults(java.lang.String,java.lang.String,java.lang.String[]) -> storeDefaults
com.android.camera.settings.DefaultsStore$Defaults -> com.android.camera.settings.DefaultsStore$Defaults:
    48:50:void <init>(java.lang.String,java.lang.String[]) -> <init>
    54:54:java.lang.String getDefaultValue() -> getDefaultValue
    58:58:java.lang.String[] getPossibleValues() -> getPossibleValues
com.android.camera.settings.Keys -> com.android.camera.settings.Keys:
    224:224:boolean areGridLinesOn(com.android.camera.settings.SettingsManager) -> areGridLinesOn
    193:193:boolean isCameraBackFacing(com.android.camera.settings.SettingsManager,java.lang.String) -> isCameraBackFacing
    208:208:boolean isHdrOn(com.android.camera.settings.SettingsManager) -> isHdrOn
    200:200:boolean isHdrPlusOn(com.android.camera.settings.SettingsManager) -> isHdrPlusOn
    232:232:boolean isMaxBrightnessOn(com.android.camera.settings.SettingsManager) -> isMaxBrightnessOn
    217:217:boolean requestsReturnToHdrPlus(com.android.camera.settings.SettingsManager,java.lang.String) -> requestsReturnToHdrPlus
    91:182:void setDefaults(com.android.camera.settings.SettingsManager,android.content.Context) -> setDefaults
com.android.camera.settings.ManagedSwitchPreference -> com.android.camera.settings.ManagedSwitchPreference:
    37:37:void <init>(android.content.Context) -> <init>
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:45:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    88:92:com.android.camera.app.CameraApp getCameraApp() -> getCameraApp
    50:58:boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    68:77:boolean persistBoolean(boolean) -> persistBoolean
com.android.camera.settings.PictureSizeLoader -> com.android.camera.settings.PictureSizeLoader:
    80:80:void <init>(android.content.Context) -> <init>
    91:97:void <init>(android.content.Context,boolean) -> <init>
    115:121:com.android.camera.settings.PictureSizeLoader$PictureSizes computePictureSizes() -> computePictureSizes
    151:156:com.google.common.base.Optional computeQualitiesForCamera(com.android.camera.settings.SettingsUtil$CameraDeviceSelector) -> computeQualitiesForCamera
    127:146:java.util.List computeSizesForCamera(com.android.camera.settings.SettingsUtil$CameraDeviceSelector) -> computeSizesForCamera
    101:101:void release() -> release
com.android.camera.settings.PictureSizeLoader$PictureSizes -> com.android.camera.settings.PictureSizeLoader$PictureSizes:
    58:62:void <init>(java.util.List,java.util.List,com.google.common.base.Optional,com.google.common.base.Optional) -> <init>
com.android.camera.settings.ResolutionSetting -> com.android.camera.settings.ResolutionSetting:
    42:42:void <clinit>() -> <clinit>
    51:57:void <init>(com.android.camera.settings.SettingsManager,com.android.camera.one.OneCameraManager,android.content.ContentResolver) -> <init>
    184:185:com.android.camera.exif.Rational getPictureAspectRatio(com.android.camera.device.CameraId,com.android.camera.one.OneCamera$Facing) -> getPictureAspectRatio
    111:169:com.android.camera.util.Size getPictureSize(com.android.camera.device.CameraId,com.android.camera.one.OneCamera$Facing) -> getPictureSize
    70:101:void setPictureAspectRatio(com.android.camera.device.CameraId,com.android.camera.exif.Rational) -> setPictureAspectRatio
com.android.camera.settings.ResolutionUtil -> com.android.camera.settings.ResolutionUtil:
    58:75:void <clinit>() -> <clinit>
    172:172:int area(com.android.camera.util.Size) -> area
    335:338:int aspectRatioDenominator(com.android.camera.util.Size) -> aspectRatioDenominator
    306:307:int aspectRatioNumerator(com.android.camera.util.Size) -> aspectRatioNumerator
    431:441:java.util.List filterDisallowedListedSizes(java.util.List,java.lang.String) -> filterDisallowedListedSizes
    224:225:float fuzzAspectRatio(float) -> fuzzAspectRatio
    319:323:com.android.camera.util.Size getApproximateSize(com.android.camera.util.Size) -> getApproximateSize
    349:357:com.android.camera.exif.Rational getAspectRatio(com.android.camera.util.Size) -> getAspectRatio
    411:414:android.util.DisplayMetrics getDisplayMetrics(android.app.Activity) -> getDisplayMetrics
    133:155:java.util.List getDisplayableSizesFromSupported(java.util.List,boolean) -> getDisplayableSizesFromSupported
    376:400:com.android.camera.util.Size getLargestPictureSize(com.android.camera.exif.Rational,java.util.List) -> getLargestPictureSize
    361:361:boolean hasSameAspectRatio(com.android.camera.exif.Rational,com.android.camera.exif.Rational) -> hasSameAspectRatio
    457:463:boolean isDisallowedListed(com.android.camera.util.Size,java.lang.String) -> isDisallowedListed
    468:469:boolean isDisallowedListed(com.android.camera.util.Size,java.util.Set) -> isDisallowedListed
    243:263:java.util.List parseAvailableSizes(java.util.List,boolean) -> parseAvailableSizes
    185:210:java.util.List pickUpToThree(java.util.List) -> pickUpToThree
    291:296:com.android.camera.util.Size reduce(com.android.camera.util.Size) -> reduce
com.android.camera.settings.ResolutionUtil$1 -> com.android.camera.settings.ResolutionUtil$1:
    263:263:void <init>() -> <init>
    263:263:int compare(java.lang.Object,java.lang.Object) -> compare
    266:266:int compare(com.android.camera.settings.ResolutionUtil$ResolutionBucket,com.android.camera.settings.ResolutionUtil$ResolutionBucket) -> compare
com.android.camera.settings.ResolutionUtil$ResolutionBucket -> com.android.camera.settings.ResolutionUtil$ResolutionBucket:
    83:97:void <init>() -> <init>
    83:83:void <init>(com.android.camera.settings.ResolutionUtil$1) -> <init>
    106:115:void add(com.android.camera.util.Size) -> add
com.android.camera.settings.ResolutionUtil$ResolutionBucket$1 -> com.android.camera.settings.ResolutionUtil$ResolutionBucket$1:
    107:107:void <init>(com.android.camera.settings.ResolutionUtil$ResolutionBucket) -> <init>
    107:107:int compare(java.lang.Object,java.lang.Object) -> compare
    111:112:int compare(com.android.camera.util.Size,com.android.camera.util.Size) -> compare
com.android.camera.settings.SettingObserver -> com.android.camera.settings.SettingObserver:
    59:63:void <init>(com.android.camera.settings.SettingsManager,java.lang.String,java.lang.String,java.lang.Class) -> <init>
    33:33:com.android.camera.settings.SettingsManager access$000(com.android.camera.settings.SettingObserver) -> access$000
    88:89:com.android.camera.async.SafeCloseable addCallback(java.lang.Runnable,java.util.concurrent.Executor) -> addCallback
    97:110:java.lang.Object get() -> get
    80:80:com.android.camera.settings.SettingObserver ofBoolean(com.android.camera.settings.SettingsManager,java.lang.String,java.lang.String) -> ofBoolean
    68:68:com.android.camera.settings.SettingObserver ofInteger(com.android.camera.settings.SettingsManager,java.lang.String,java.lang.String) -> ofInteger
    74:74:com.android.camera.settings.SettingObserver ofString(com.android.camera.settings.SettingsManager,java.lang.String,java.lang.String) -> ofString
com.android.camera.settings.SettingObserver$Listener -> com.android.camera.settings.SettingObserver$Listener:
    34:34:void <init>(com.android.camera.settings.SettingObserver,java.lang.Runnable,java.util.concurrent.Executor,com.android.camera.settings.SettingObserver$1) -> <init>
    38:40:void <init>(com.android.camera.settings.SettingObserver,java.lang.Runnable,java.util.concurrent.Executor) -> <init>
    50:50:void close() -> close
    45:45:void onSettingChanged(com.android.camera.settings.SettingsManager,java.lang.String) -> onSettingChanged
com.android.camera.settings.SettingsManager -> com.android.camera.settings.SettingsManager:
    77:77:void <clinit>() -> <clinit>
    84:108:void <init>(android.content.Context) -> <init>
    196:216:void addListener(com.android.camera.settings.SettingsManager$OnSettingChangedListener) -> addListener
    155:159:void closePreferences(android.content.SharedPreferences) -> closePreferences
    575:575:java.lang.String convert(int) -> convert
    597:597:boolean convertToBoolean(java.lang.String) -> convertToBoolean
    586:586:int convertToInt(java.lang.String) -> convertToInt
    418:422:boolean getBoolean(java.lang.String,java.lang.String,boolean) -> getBoolean
    430:432:boolean getBoolean(java.lang.String,java.lang.String) -> getBoolean
    356:360:boolean getBooleanDefault(java.lang.String) -> getBooleanDefault
    163:163:java.lang.String getCameraSettingScope(java.lang.String) -> getCameraSettingScope
    118:120:android.content.SharedPreferences getDefaultPreferences() -> getDefaultPreferences
    447:462:int getIndexOfCurrentValue(java.lang.String,java.lang.String) -> getIndexOfCurrentValue
    396:400:int getInteger(java.lang.String,java.lang.String,java.lang.Integer) -> getInteger
    408:410:int getInteger(java.lang.String,java.lang.String) -> getInteger
    346:349:java.lang.Integer getIntegerDefault(java.lang.String) -> getIntegerDefault
    167:167:java.lang.String getModuleSettingScope(java.lang.String) -> getModuleSettingScope
    280:290:android.content.SharedPreferences getPreferencesFromScope(java.lang.String) -> getPreferencesFromScope
    182:182:android.content.SharedPreferences$OnSharedPreferenceChangeListener getSharedPreferenceListener(com.android.camera.settings.SettingsManager$OnSettingChangedListener) -> getSharedPreferenceListener
    368:377:java.lang.String getString(java.lang.String,java.lang.String,java.lang.String) -> getString
    386:388:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    337:339:java.lang.String getStringDefault(java.lang.String) -> getStringDefault
    550:554:boolean isDefault(java.lang.String,java.lang.String) -> isDefault
    539:542:boolean isSet(java.lang.String,java.lang.String) -> isSet
    129:141:android.content.SharedPreferences openPreferences(java.lang.String) -> openPreferences
    561:564:void remove(java.lang.String,java.lang.String) -> remove
    254:264:void removeAllListeners() -> removeAllListeners
    224:246:void removeListener(com.android.camera.settings.SettingsManager$OnSettingChangedListener) -> removeListener
    470:473:void set(java.lang.String,java.lang.String,java.lang.String) -> set
    481:483:void set(java.lang.String,java.lang.String,int) -> set
    492:494:void set(java.lang.String,java.lang.String,boolean) -> set
    299:301:void setDefaults(java.lang.String,java.lang.String,java.lang.String[]) -> setDefaults
    310:317:void setDefaults(java.lang.String,int,int[]) -> setDefaults
    326:330:void setDefaults(java.lang.String,boolean) -> setDefaults
    501:503:void setToDefault(java.lang.String,java.lang.String) -> setToDefault
    519:532:void setValueByIndex(java.lang.String,java.lang.String,int) -> setValueByIndex
com.android.camera.settings.SettingsManager$1 -> com.android.camera.settings.SettingsManager$1:
    182:182:void <init>(com.android.camera.settings.SettingsManager,com.android.camera.settings.SettingsManager$OnSettingChangedListener) -> <init>
    186:186:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.android.camera.settings.SettingsUpgrader -> com.android.camera.settings.SettingsUpgrader:
    28:28:void <clinit>() -> <clinit>
    42:44:void <init>(java.lang.String,int) -> <init>
    79:79:int getLastVersion(com.android.camera.settings.SettingsManager) -> getLastVersion
    93:97:boolean removeBoolean(android.content.SharedPreferences,java.lang.String) -> removeBoolean
    112:116:int removeInteger(android.content.SharedPreferences,java.lang.String) -> removeInteger
    131:135:java.lang.String removeString(android.content.SharedPreferences,java.lang.String) -> removeString
    52:56:void upgrade(com.android.camera.settings.SettingsManager) -> upgrade
com.android.camera.settings.SettingsUtil -> com.android.camera.settings.SettingsUtil:
    119:511:void <clinit>() -> <clinit>
    376:378:int findClosestSize(java.util.List,int) -> findClosestSize
    480:487:int getCameraId(com.android.ex.camera2.portability.CameraDeviceInfo,com.android.camera.settings.SettingsUtil$CameraDeviceSelector) -> getCameraId
    182:182:com.android.camera.util.Size getCameraPictureSize(java.lang.String,java.util.List,int) -> getCameraPictureSize
    50:50:int getMaxVideoDuration(android.content.Context) -> getMaxVideoDuration
    336:347:int getNextSupportedVideoQualityIndex(int,int) -> getNextSupportedVideoQualityIndex
    161:164:com.android.camera.util.Size getPhotoSize(java.lang.String,java.util.List,int) -> getPhotoSize
    195:290:com.android.camera.settings.SettingsUtil$SelectedPictureSizes getSelectedCameraPictureSizes(java.util.List,int) -> getSelectedCameraPictureSizes
    309:327:com.android.camera.settings.SettingsUtil$SelectedVideoQualities getSelectedVideoQualities(int) -> getSelectedVideoQualities
    305:305:int getVideoQuality(java.lang.String,int) -> getVideoQuality
    362:362:boolean isVideoQualitySupported(int) -> isVideoQualitySupported
    409:417:com.android.camera.util.Size sizeFromSettingString(java.lang.String) -> sizeFromSettingString
    396:396:java.lang.String sizeToSettingString(com.android.camera.util.Size) -> sizeToSettingString
com.android.camera.settings.SettingsUtil$1 -> com.android.camera.settings.SettingsUtil$1:
    206:206:void <init>() -> <init>
    206:206:int compare(java.lang.Object,java.lang.Object) -> compare
    209:210:int compare(com.android.camera.util.Size,com.android.camera.util.Size) -> compare
com.android.camera.settings.SettingsUtil$4 -> com.android.camera.settings.SettingsUtil$4:
    505:505:void <init>() -> <init>
    508:508:boolean useCamera(com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics) -> useCamera
com.android.camera.settings.SettingsUtil$5 -> com.android.camera.settings.SettingsUtil$5:
    511:511:void <init>() -> <init>
    514:514:boolean useCamera(com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics) -> useCamera
com.android.camera.settings.SettingsUtil$SelectedPictureSizes -> com.android.camera.settings.SettingsUtil$SelectedPictureSizes:
    57:57:void <init>() -> <init>
    75:87:com.android.camera.util.Size getFromSetting(java.lang.String,java.util.List) -> getFromSetting
    92:92:java.lang.String toString() -> toString
com.android.camera.settings.SettingsUtil$SelectedVideoQualities -> com.android.camera.settings.SettingsUtil$SelectedVideoQualities:
    97:100:void <init>() -> <init>
    105:114:int getFromSetting(java.lang.String) -> getFromSetting
com.android.camera.stats.Camera2FaceProxy -> com.android.camera.stats.Camera2FaceProxy:
    30:32:void <init>(android.graphics.Rect,int) -> <init>
    36:36:com.android.camera.stats.Camera2FaceProxy from(android.hardware.camera2.params.Face) -> from
com.android.camera.stats.CaptureSessionStatsCollector -> com.android.camera.stats.CaptureSessionStatsCollector:
    36:56:void <init>() -> <init>
    36:64:void <init>(com.android.camera.stats.UsageStatistics) -> <init>
    118:128:void decorateAtTimeCaptureRequest(int,java.lang.String,boolean,boolean,float,java.lang.String,boolean,float,com.android.camera.ui.TouchCoordinate,java.lang.Boolean,android.graphics.Rect) -> decorateAtTimeCaptureRequest
    75:85:void decorateAtTimeOfCaptureRequestAvailable(com.android.camera.one.v2.camera2proxy.CaptureResultProxy) -> decorateAtTimeOfCaptureRequestAvailable
    142:142:void decorateAtTimeWriteToDisk(com.android.camera.exif.ExifInterface) -> decorateAtTimeWriteToDisk
    196:196:long getElapsedRealTime() -> getElapsedRealTime
    189:189:boolean isValidForPhotoCaptureEvent() -> isValidForPhotoCaptureEvent
    149:149:void markProcessingTimeStart() -> markProcessingTimeStart
    156:160:void photoCaptureDoneEvent() -> photoCaptureDoneEvent
com.android.camera.stats.CaptureStats -> com.android.camera.stats.CaptureStats:
    10:10:void <init>(boolean) -> <init>
com.android.camera.stats.SessionStatsCollector -> com.android.camera.stats.SessionStatsCollector:
    5:5:void <init>() -> <init>
    25:25:void autofocusActive(boolean) -> autofocusActive
    28:28:void autofocusManualTrigger() -> autofocusManualTrigger
    34:34:void autofocusMoving(boolean) -> autofocusMoving
    31:31:void autofocusResult(boolean) -> autofocusResult
    22:22:void faceScanActive(boolean) -> faceScanActive
    9:12:com.android.camera.stats.SessionStatsCollector instance() -> instance
    19:19:void previewActive(boolean) -> previewActive
    37:37:void sessionActive(boolean) -> sessionActive
com.android.camera.stats.UsageStatistics -> com.android.camera.stats.UsageStatistics:
    29:29:void <init>() -> <init>
    36:39:com.android.camera.stats.UsageStatistics instance() -> instance
com.android.camera.stats.profiler.GuardingProfile -> com.android.camera.stats.profiler.GuardingProfile:
    31:34:void <init>(com.android.camera.stats.profiler.Writer,com.android.camera.stats.profiler.Writer,java.lang.String,int) -> <init>
    44:47:void onMark(double,double,java.lang.String) -> onMark
    39:39:void onStart() -> onStart
    53:56:void onStop(double,double) -> onStop
    62:63:void onStop(double,double,java.lang.String) -> onStop
com.android.camera.stats.profiler.GuardingProfiler -> com.android.camera.stats.profiler.GuardingProfiler:
    32:32:void <init>(com.android.camera.stats.profiler.Writer,com.android.camera.stats.profiler.Writer) -> <init>
    36:39:void <init>(com.android.camera.stats.profiler.Writer,com.android.camera.stats.profiler.Writer,int) -> <init>
    44:44:com.android.camera.stats.profiler.Profile create(java.lang.String) -> create
com.android.camera.stats.profiler.LoggingProfile -> com.android.camera.stats.profiler.LoggingProfile:
    28:30:void <init>(com.android.camera.stats.profiler.Writer,java.lang.String) -> <init>
    40:40:void onMark(double,double,java.lang.String) -> onMark
    35:35:void onStart() -> onStart
    45:45:void onStop(double,double) -> onStop
    50:50:void onStop(double,double,java.lang.String) -> onStop
com.android.camera.stats.profiler.LoggingProfiler -> com.android.camera.stats.profiler.LoggingProfiler:
    26:27:void <init>(com.android.camera.stats.profiler.Writer) -> <init>
    32:33:com.android.camera.stats.profiler.Profile create(java.lang.String) -> create
com.android.camera.stats.profiler.ProfileBase -> com.android.camera.stats.profiler.ProfileBase:
    33:34:void <init>(java.lang.String) -> <init>
    77:79:java.lang.String format(double,java.lang.String) -> format
    89:91:java.lang.String format(double,java.lang.String,java.lang.String) -> format
    102:107:java.lang.String format(double,java.lang.String,double,java.lang.String) -> format
    139:139:double getTimeFromLastMillis(long) -> getTimeFromLastMillis
    135:135:double getTotalMillis(long) -> getTotalMillis
    48:48:void mark() -> mark
    54:56:void mark(java.lang.String) -> mark
    39:41:com.android.camera.stats.profiler.Profile start() -> start
    61:63:void stop() -> stop
    68:70:void stop(java.lang.String) -> stop
com.android.camera.stats.profiler.Profilers -> com.android.camera.stats.profiler.Profilers:
    27:33:void <clinit>() -> <clinit>
    26:26:void <init>(com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.GuardingProfiler,com.android.camera.stats.profiler.Profilers$1) -> <init>
    62:68:void <init>(com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.LoggingProfiler,com.android.camera.stats.profiler.GuardingProfiler) -> <init>
    26:26:com.android.camera.debug.Log$Tag access$1200() -> access$1200
    26:26:com.android.camera.stats.profiler.Writer access$500() -> access$500
    26:26:com.android.camera.stats.profiler.Writer access$600() -> access$600
    26:26:com.android.camera.stats.profiler.Writer access$700() -> access$700
    26:26:com.android.camera.stats.profiler.Writer access$800() -> access$800
    26:26:com.android.camera.stats.profiler.Writer access$900() -> access$900
    112:112:com.android.camera.stats.profiler.GuardingProfiler guard() -> guard
    116:116:com.android.camera.stats.profiler.Profile guard(java.lang.String) -> guard
    47:47:com.android.camera.stats.profiler.Profilers instance() -> instance
com.android.camera.stats.profiler.Profilers$DebugWriter -> com.android.camera.stats.profiler.Profilers$DebugWriter:
    123:123:void <init>() -> <init>
    123:123:void <init>(com.android.camera.stats.profiler.Profilers$1) -> <init>
    126:126:void write(java.lang.String) -> write
com.android.camera.stats.profiler.Profilers$ErrorWriter -> com.android.camera.stats.profiler.Profilers$ErrorWriter:
    130:130:void <init>() -> <init>
    130:130:void <init>(com.android.camera.stats.profiler.Profilers$1) -> <init>
    133:133:void write(java.lang.String) -> write
com.android.camera.stats.profiler.Profilers$InfoWriter -> com.android.camera.stats.profiler.Profilers$InfoWriter:
    137:137:void <init>() -> <init>
    137:137:void <init>(com.android.camera.stats.profiler.Profilers$1) -> <init>
    140:140:void write(java.lang.String) -> write
com.android.camera.stats.profiler.Profilers$Singleton -> com.android.camera.stats.profiler.Profilers$Singleton:
    36:42:void <clinit>() -> <clinit>
    35:35:com.android.camera.stats.profiler.Profilers access$1100() -> access$1100
com.android.camera.stats.profiler.Profilers$VerboseWriter -> com.android.camera.stats.profiler.Profilers$VerboseWriter:
    144:144:void <init>() -> <init>
    144:144:void <init>(com.android.camera.stats.profiler.Profilers$1) -> <init>
    147:147:void write(java.lang.String) -> write
com.android.camera.stats.profiler.Profilers$WarningWriter -> com.android.camera.stats.profiler.Profilers$WarningWriter:
    151:151:void <init>() -> <init>
    151:151:void <init>(com.android.camera.stats.profiler.Profilers$1) -> <init>
    154:154:void write(java.lang.String) -> write
com.android.camera.tinyplanet.TinyPlanetFragment -> com.android.camera.tinyplanet.TinyPlanetFragment:
    86:86:void <clinit>() -> <clinit>
    66:139:void <init>() -> <init>
    66:66:java.lang.Boolean access$000(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$000
    66:66:java.lang.Boolean access$002(com.android.camera.tinyplanet.TinyPlanetFragment,java.lang.Boolean) -> access$002
    66:66:java.lang.Boolean access$100(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$100
    66:66:void access$1000(com.android.camera.tinyplanet.TinyPlanetFragment,int) -> access$1000
    66:66:java.lang.Boolean access$102(com.android.camera.tinyplanet.TinyPlanetFragment,java.lang.Boolean) -> access$102
    66:66:void access$1100(com.android.camera.tinyplanet.TinyPlanetFragment,int) -> access$1100
    66:66:void access$1200(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$1200
    66:66:android.app.ProgressDialog access$1300(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$1300
    66:66:android.app.ProgressDialog access$1302(com.android.camera.tinyplanet.TinyPlanetFragment,android.app.ProgressDialog) -> access$1302
    66:66:com.android.camera.tinyplanet.TinyPlanetFragment$TinyPlanetImage access$1400(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$1400
    66:66:java.lang.String access$1500(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$1500
    66:66:java.util.concurrent.locks.Lock access$200(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$200
    66:66:android.graphics.Bitmap access$300(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$300
    66:66:android.graphics.Bitmap access$400(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$400
    66:66:int access$500(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$500
    66:66:float access$600(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$600
    66:66:float access$700(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$700
    66:66:com.android.camera.tinyplanet.TinyPlanetPreview access$800(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$800
    66:66:void access$900(com.android.camera.tinyplanet.TinyPlanetFragment) -> access$900
    374:383:byte[] addExif(byte[]) -> addExif
    334:363:com.android.camera.tinyplanet.TinyPlanetFragment$TinyPlanetImage createFinalTinyPlanet() -> createFinalTinyPlanet
    448:480:android.graphics.Bitmap createPaddedBitmap(android.graphics.Bitmap,com.adobe.xmp.XMPMeta,int) -> createPaddedBitmap
    262:274:android.graphics.Bitmap createPaddedSourceImage(android.net.Uri,boolean) -> createPaddedSourceImage
    387:390:int getDisplaySize() -> getDisplaySize
    434:436:java.io.InputStream getInputStream(android.net.Uri) -> getInputStream
    489:490:int getInt(com.adobe.xmp.XMPMeta,java.lang.String) -> getInt
    420:421:void onAngleChange(int) -> onAngleChange
    185:186:void onCreate(android.os.Bundle) -> onCreate
    286:324:void onCreateTinyPlanet() -> onCreateTinyPlanet
    192:252:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    395:409:void onSizeChanged(int) -> onSizeChanged
    415:416:void onZoomChange(int) -> onZoomChange
    428:429:void scheduleUpdate() -> scheduleUpdate
com.android.camera.tinyplanet.TinyPlanetFragment$1 -> com.android.camera.tinyplanet.TinyPlanetFragment$1:
    139:139:void <init>(com.android.camera.tinyplanet.TinyPlanetFragment) -> <init>
    142:179:void run() -> run
com.android.camera.tinyplanet.TinyPlanetFragment$1$1 -> com.android.camera.tinyplanet.TinyPlanetFragment$1$1:
    150:150:void <init>(com.android.camera.tinyplanet.TinyPlanetFragment$1) -> <init>
    150:150:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    153:164:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    150:150:void onPostExecute(java.lang.Object) -> onPostExecute
    170:177:void onPostExecute(java.lang.Void) -> onPostExecute
com.android.camera.tinyplanet.TinyPlanetFragment$2 -> com.android.camera.tinyplanet.TinyPlanetFragment$2:
    202:202:void <init>(com.android.camera.tinyplanet.TinyPlanetFragment) -> <init>
    215:215:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.android.camera.tinyplanet.TinyPlanetFragment$3 -> com.android.camera.tinyplanet.TinyPlanetFragment$3:
    221:221:void <init>(com.android.camera.tinyplanet.TinyPlanetFragment) -> <init>
    234:234:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.android.camera.tinyplanet.TinyPlanetFragment$4 -> com.android.camera.tinyplanet.TinyPlanetFragment$4:
    239:239:void <init>(com.android.camera.tinyplanet.TinyPlanetFragment) -> <init>
    242:242:void onClick(android.view.View) -> onClick
com.android.camera.tinyplanet.TinyPlanetFragment$5 -> com.android.camera.tinyplanet.TinyPlanetFragment$5:
    292:292:void <init>(com.android.camera.tinyplanet.TinyPlanetFragment,java.lang.String) -> <init>
    292:292:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    300:300:com.android.camera.tinyplanet.TinyPlanetFragment$TinyPlanetImage doInBackground(java.lang.Void[]) -> doInBackground
    292:292:void onPostExecute(java.lang.Object) -> onPostExecute
    306:320:void onPostExecute(com.android.camera.tinyplanet.TinyPlanetFragment$TinyPlanetImage) -> onPostExecute
    295:295:void onPreExecute() -> onPreExecute
com.android.camera.tinyplanet.TinyPlanetFragment$5$1 -> com.android.camera.tinyplanet.TinyPlanetFragment$5$1:
    309:309:void <init>(com.android.camera.tinyplanet.TinyPlanetFragment$5,com.android.camera.CameraActivity) -> <init>
    314:316:void onMediaSaved(android.net.Uri) -> onMediaSaved
com.android.camera.tinyplanet.TinyPlanetFragment$TinyPlanetImage -> com.android.camera.tinyplanet.TinyPlanetFragment$TinyPlanetImage:
    129:131:void <init>(byte[],int) -> <init>
com.android.camera.tinyplanet.TinyPlanetNative -> com.android.camera.tinyplanet.TinyPlanetNative:
    26:26:void <clinit>() -> <clinit>
com.android.camera.tinyplanet.TinyPlanetPreview -> com.android.camera.tinyplanet.TinyPlanetPreview:
    45:52:void <init>(android.content.Context) -> <init>
    45:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:60:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    81:89:void onDraw(android.graphics.Canvas) -> onDraw
    104:115:void onLayout(boolean,int,int,int,int) -> onLayout
    95:99:void onMeasure(int,int) -> onMeasure
    67:69:void setBitmap(android.graphics.Bitmap,java.util.concurrent.locks.Lock) -> setBitmap
    73:75:void setPreviewSizeChangeListener(com.android.camera.tinyplanet.TinyPlanetPreview$PreviewSizeListener) -> setPreviewSizeChangeListener
com.android.camera.ui.AnimatedCircleDrawable -> com.android.camera.ui.AnimatedCircleDrawable:
    35:44:void <init>(int) -> <init>
    104:113:void animateToFullSize() -> animateToFullSize
    86:99:void animateToSmallRadius() -> animateToSmallRadius
    142:142:int diagonalLength(int,int) -> diagonalLength
    118:123:void draw(android.graphics.Canvas) -> draw
    138:138:int map(int,int,int,int,int) -> map
    78:79:boolean onLevelChange(int) -> onLevelChange
    66:67:void setAlpha(int) -> setAlpha
    48:49:void setColor(int) -> setColor
    53:55:void updatePaintColor() -> updatePaintColor
com.android.camera.ui.AnimatedCircleDrawable$1 -> com.android.camera.ui.AnimatedCircleDrawable$1:
    93:93:void <init>(com.android.camera.ui.AnimatedCircleDrawable) -> <init>
    96:96:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.AnimatedCircleDrawable$2 -> com.android.camera.ui.AnimatedCircleDrawable$2:
    107:107:void <init>(com.android.camera.ui.AnimatedCircleDrawable) -> <init>
    110:110:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.BottomBar -> com.android.camera.ui.BottomBar:
    50:50:void <clinit>() -> <clinit>
    74:109:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:48:void access$000(com.android.camera.ui.BottomBar) -> access$000
    48:48:void access$100(com.android.camera.ui.BottomBar) -> access$100
    48:48:android.graphics.RectF access$200(com.android.camera.ui.BottomBar) -> access$200
    48:48:void access$300(com.android.camera.ui.BottomBar) -> access$300
    48:48:void access$400(com.android.camera.ui.BottomBar) -> access$400
    48:48:com.android.camera.ShutterButton access$500(com.android.camera.ui.BottomBar) -> access$500
    520:529:void animateToFullSize(int) -> animateToFullSize
    504:513:void animateToVideoStop(int) -> animateToVideoStop
    392:398:android.graphics.drawable.LayerDrawable applyCircleDrawableToShutterBackground(android.graphics.drawable.LayerDrawable) -> applyCircleDrawableToShutterBackground
    479:480:android.graphics.drawable.TransitionDrawable crossfadeDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> crossfadeDrawable
    222:225:void extendTouchAreaToMatchParent(int) -> extendTouchAreaToMatchParent
    298:298:boolean isInIntentReview() -> isInIntentReview
    472:472:boolean isShutterButtonEnabled() -> isShutterButtonEnabled
    405:405:android.graphics.drawable.LayerDrawable newDrawableFromConstantState(android.graphics.drawable.Drawable$ConstantState) -> newDrawableFromConstantState
    170:218:void onFinishInflate() -> onFinishInflate
    345:361:void onMeasure(int,int) -> onMeasure
    130:130:void refreshPaintColor() -> refreshPaintColor
    435:437:void setBackgroundAlpha(int) -> setBackgroundAlpha
    374:376:void setBackgroundColor(int) -> setBackgroundColor
    380:383:void setBackgroundPressedColor(int) -> setBackgroundPressedColor
    302:304:void setButtonImageLevels(int) -> setButtonImageLevels
    134:145:void setCancelBackgroundColor(int,int) -> setCancelBackgroundColor
    164:164:void setCancelButtonDown() -> setCancelButtonDown
    160:160:void setCancelButtonUp() -> setCancelButtonUp
    154:155:void setCaptureButtonDown() -> setCaptureButtonDown
    150:150:void setCaptureButtonUp() -> setCaptureButtonUp
    340:340:void setCaptureLayoutHelper(com.android.camera.CaptureLayoutHelper) -> setCaptureLayoutHelper
    431:431:void setColorsForModeIndex(int) -> setColorsForModeIndex
    319:332:void setOverlayBottomBar(boolean) -> setOverlayBottomBar
    113:125:void setPaintColor(int,int) -> setPaintColor
    447:447:void setShutterButtonEnabled(boolean) -> setShutterButtonEnabled
    493:497:void setShutterButtonIcon(int) -> setShutterButtonIcon
    462:464:void setShutterButtonImportantToA11y(boolean) -> setShutterButtonImportantToA11y
    409:427:void setupShutterBackgroundForModeIndex(int) -> setupShutterBackgroundForModeIndex
    263:267:void transitionToCancel() -> transitionToCancel
    251:255:void transitionToCapture() -> transitionToCapture
    275:279:void transitionToIntentCaptureLayout() -> transitionToIntentCaptureLayout
    287:291:void transitionToIntentReviewLayout() -> transitionToIntentReviewLayout
com.android.camera.ui.BottomBar$1 -> com.android.camera.ui.BottomBar$1:
    180:180:void <init>(com.android.camera.ui.BottomBar) -> <init>
    183:191:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.camera.ui.BottomBar$2 -> com.android.camera.ui.BottomBar$2:
    200:200:void <init>(com.android.camera.ui.BottomBar) -> <init>
    203:211:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.camera.ui.BottomBar$3 -> com.android.camera.ui.BottomBar$3:
    225:225:void <init>(com.android.camera.ui.BottomBar,android.view.View,android.view.View) -> <init>
    228:241:void run() -> run
com.android.camera.ui.BottomBar$4 -> com.android.camera.ui.BottomBar$4:
    447:447:void <init>(com.android.camera.ui.BottomBar,boolean) -> <init>
    450:451:void run() -> run
com.android.camera.ui.CaptureAnimationOverlay -> com.android.camera.ui.CaptureAnimationOverlay:
    40:40:void <clinit>() -> <clinit>
    52:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:android.graphics.Paint access$000(com.android.camera.ui.CaptureAnimationOverlay) -> access$000
    38:38:android.animation.AnimatorSet access$102(com.android.camera.ui.CaptureAnimationOverlay,android.animation.AnimatorSet) -> access$102
    140:143:void onDraw(android.graphics.Canvas) -> onDraw
    135:135:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    100:130:void startFlashAnimation(boolean) -> startFlashAnimation
com.android.camera.ui.CaptureAnimationOverlay$1 -> com.android.camera.ui.CaptureAnimationOverlay$1:
    62:62:void <init>(com.android.camera.ui.CaptureAnimationOverlay) -> <init>
    65:67:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.CaptureAnimationOverlay$2 -> com.android.camera.ui.CaptureAnimationOverlay$2:
    70:70:void <init>(com.android.camera.ui.CaptureAnimationOverlay) -> <init>
    78:79:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    73:73:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.ui.CountDownView -> com.android.camera.ui.CountDownView:
    38:38:void <clinit>() -> <clinit>
    42:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:36:int access$100(com.android.camera.ui.CountDownView) -> access$100
    36:36:void access$200(com.android.camera.ui.CountDownView,int) -> access$200
    157:160:void cancelCountDown() -> cancelCountDown
    74:74:boolean isCountingDown() -> isCountingDown
    125:126:void onFinishInflate() -> onFinishInflate
    82:82:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    86:104:void remainingSecondsChanged(int) -> remainingSecondsChanged
    133:133:void setCountDownStatusListener(com.android.camera.ui.CountDownView$OnCountDownStatusListener) -> setCountDownStatusListener
    143:150:void startCountDown(int) -> startCountDown
    109:120:void startFadeOutAnimation() -> startFadeOutAnimation
com.android.camera.ui.CountDownView$MainHandler -> com.android.camera.ui.CountDownView$MainHandler:
    164:164:void <init>(com.android.camera.ui.CountDownView) -> <init>
    164:164:void <init>(com.android.camera.ui.CountDownView,com.android.camera.ui.CountDownView$1) -> <init>
    167:168:void handleMessage(android.os.Message) -> handleMessage
com.android.camera.ui.DetailsDialog -> com.android.camera.ui.DetailsDialog:
    45:45:void access$000(java.lang.String,java.lang.Object[]) -> access$000
    55:67:android.app.Dialog create(android.content.Context,com.android.camera.data.MediaDetails) -> create
    344:345:void fail(java.lang.String,java.lang.Object[]) -> fail
    294:332:java.lang.String getDetailsName(android.content.Context,int) -> getDetailsName
com.android.camera.ui.DetailsDialog$1 -> com.android.camera.ui.DetailsDialog$1:
    62:62:void <init>() -> <init>
    65:65:void onClick(android.content.DialogInterface,int) -> onClick
com.android.camera.ui.DetailsDialog$DetailsAdapter -> com.android.camera.ui.DetailsDialog$DetailsAdapter:
    78:87:void <init>(android.content.Context,com.android.camera.data.MediaDetails) -> <init>
    220:220:int getCount() -> getCount
    225:225:java.lang.Object getItem(int) -> getItem
    237:242:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    250:258:void onResolutionAvailable(int,int) -> onResolutionAvailable
    202:205:void resolveResolution(java.lang.String) -> resolveResolution
    93:197:void setDetails(android.content.Context,com.android.camera.data.MediaDetails) -> setDetails
    266:271:java.lang.String toLocalInteger(java.lang.Object) -> toLocalInteger
    282:282:java.lang.String toLocalNumber(int) -> toLocalNumber
    287:287:java.lang.String toLocalNumber(double) -> toLocalNumber
com.android.camera.ui.FaceView -> com.android.camera.ui.FaceView:
    38:38:void <clinit>() -> <clinit>
    39:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    36:36:boolean access$002(com.android.camera.ui.FaceView,boolean) -> access$002
    36:36:android.hardware.Camera$Face[] access$102(com.android.camera.ui.FaceView,android.hardware.Camera$Face[]) -> access$102
    36:36:android.hardware.Camera$Face[] access$200(com.android.camera.ui.FaceView) -> access$200
    137:138:void clear() -> clear
    155:191:void onDraw(android.graphics.Canvas) -> onDraw
    196:196:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    142:142:void pause() -> pause
    146:146:void resume() -> resume
    111:111:void setDisplayOrientation(int) -> setDisplayOrientation
    90:107:void setFaces(android.hardware.Camera$Face[]) -> setFaces
    124:124:void setMirror(boolean) -> setMirror
com.android.camera.ui.FaceView$1 -> com.android.camera.ui.FaceView$1:
    62:62:void <init>(com.android.camera.ui.FaceView) -> <init>
    65:69:void handleMessage(android.os.Message) -> handleMessage
com.android.camera.ui.FilmstripGestureRecognizer -> com.android.camera.ui.FilmstripGestureRecognizer:
    32:32:void <clinit>() -> <clinit>
    52:57:void <init>(android.content.Context,com.android.camera.ui.FilmstripGestureRecognizer$Listener) -> <init>
    30:30:com.android.camera.ui.FilmstripGestureRecognizer$Listener access$300(com.android.camera.ui.FilmstripGestureRecognizer) -> access$300
    71:78:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    62:65:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.camera.ui.FilmstripGestureRecognizer$MyDoubleTapListener -> com.android.camera.ui.FilmstripGestureRecognizer$MyDoubleTapListener:
    117:117:void <init>(com.android.camera.ui.FilmstripGestureRecognizer) -> <init>
    117:117:void <init>(com.android.camera.ui.FilmstripGestureRecognizer,com.android.camera.ui.FilmstripGestureRecognizer$1) -> <init>
    126:126:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    121:121:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.android.camera.ui.FilmstripGestureRecognizer$MyGestureListener -> com.android.camera.ui.FilmstripGestureRecognizer$MyGestureListener:
    87:87:void <init>(com.android.camera.ui.FilmstripGestureRecognizer) -> <init>
    87:87:void <init>(com.android.camera.ui.FilmstripGestureRecognizer,com.android.camera.ui.FilmstripGestureRecognizer$1) -> <init>
    108:109:boolean onDown(android.view.MotionEvent) -> onDown
    103:103:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    91:91:void onLongPress(android.view.MotionEvent) -> onLongPress
    97:97:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
com.android.camera.ui.FilmstripGestureRecognizer$MyScaleListener -> com.android.camera.ui.FilmstripGestureRecognizer$MyScaleListener:
    135:135:void <init>(com.android.camera.ui.FilmstripGestureRecognizer) -> <init>
    135:135:void <init>(com.android.camera.ui.FilmstripGestureRecognizer,com.android.camera.ui.FilmstripGestureRecognizer$1) -> <init>
    145:146:boolean onScale(android.view.ScaleGestureDetector) -> onScale
    139:140:boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    151:151:void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.android.camera.ui.GridLines -> com.android.camera.ui.GridLines:
    36:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:57:void onDraw(android.graphics.Canvas) -> onDraw
    65:65:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    69:70:void setDrawBounds(android.graphics.RectF) -> setDrawBounds
com.android.camera.ui.MainActivityLayout -> com.android.camera.ui.MainActivityLayout:
    37:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    135:136:void onFinishInflate() -> onFinishInflate
    78:116:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    150:155:void onMeasure(int,int) -> onMeasure
    126:128:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    141:145:void redirectTouchEventsTo(android.view.View) -> redirectTouchEventsTo
    165:169:void setNonDecorWindowSizeChangedListener(com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener) -> setNonDecorWindowSizeChangedListener
    73:73:void setSwipeEnabled(boolean) -> setSwipeEnabled
com.android.camera.ui.ModeIconView -> com.android.camera.ui.ModeIconView:
    43:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    77:80:void draw(android.graphics.Canvas) -> draw
    128:128:int getHighlightColor() -> getHighlightColor
    88:88:android.graphics.drawable.Drawable getIconDrawableClone() -> getIconDrawableClone
    95:95:int getIconDrawableSize() -> getIconDrawableSize
    121:121:void setHighlightColor(int) -> setHighlightColor
    63:71:void setIconDrawable(android.graphics.drawable.Drawable) -> setIconDrawable
    107:112:void setSelected(boolean) -> setSelected
com.android.camera.ui.ModeListView -> com.android.camera.ui.ModeListView:
    65:69:void <clinit>() -> <clinit>
    105:1099:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:65:void access$100(com.android.camera.ui.ModeListView,boolean) -> access$100
    65:65:void access$1200(com.android.camera.ui.ModeListView) -> access$1200
    65:65:boolean access$1300(com.android.camera.ui.ModeListView,android.view.MotionEvent) -> access$1300
    65:65:android.view.View access$1402(com.android.camera.ui.ModeListView,android.view.View) -> access$1402
    65:65:com.android.camera.ui.ModeSelectorItem[] access$1500(com.android.camera.ui.ModeListView) -> access$1500
    65:65:void access$1600(com.android.camera.ui.ModeListView,android.view.MotionEvent) -> access$1600
    65:65:android.view.View access$1900(com.android.camera.ui.ModeListView) -> access$1900
    65:65:float access$2000(com.android.camera.ui.ModeListView) -> access$2000
    65:65:float access$2002(com.android.camera.ui.ModeListView,float) -> access$2002
    65:65:void access$2100(com.android.camera.ui.ModeListView,float) -> access$2100
    65:65:long access$2200(com.android.camera.ui.ModeListView) -> access$2200
    65:65:long access$2202(com.android.camera.ui.ModeListView,long) -> access$2202
    65:65:android.animation.Animator access$2300(com.android.camera.ui.ModeListView,int,int,android.animation.TimeInterpolator,int[]) -> access$2300
    65:65:void access$2600(com.android.camera.ui.ModeListView) -> access$2600
    65:65:com.android.camera.debug.Log$Tag access$2700() -> access$2700
    65:65:void access$2800(com.android.camera.ui.ModeListView) -> access$2800
    65:65:int access$2900(com.android.camera.ui.ModeListView) -> access$2900
    65:65:void access$300(com.android.camera.ui.ModeListView) -> access$300
    65:65:android.animation.Animator access$3000(com.android.camera.ui.ModeListView,int[]) -> access$3000
    65:65:void access$3100(com.android.camera.ui.ModeListView,int,float,float) -> access$3100
    65:65:boolean access$3200(com.android.camera.ui.ModeListView) -> access$3200
    65:65:android.animation.Animator access$3300(com.android.camera.ui.ModeListView) -> access$3300
    65:65:int access$3500(com.android.camera.ui.ModeListView) -> access$3500
    65:65:int access$3502(com.android.camera.ui.ModeListView,int) -> access$3502
    65:65:int access$3600(com.android.camera.ui.ModeListView) -> access$3600
    65:65:int access$3602(com.android.camera.ui.ModeListView,int) -> access$3602
    65:65:com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider access$3700(com.android.camera.ui.ModeListView) -> access$3700
    65:65:com.android.camera.CaptureLayoutHelper access$3800(com.android.camera.ui.ModeListView) -> access$3800
    65:65:long access$3902(com.android.camera.ui.ModeListView,long) -> access$3902
    65:65:void access$400(com.android.camera.ui.ModeListView) -> access$400
    65:65:float access$4002(com.android.camera.ui.ModeListView,float) -> access$4002
    65:65:com.android.camera.ui.ModeListView$ModeSwitchListener access$4100(com.android.camera.ui.ModeListView) -> access$4100
    65:65:void access$4200(com.android.camera.ui.ModeListView,com.android.camera.ui.ModeSelectorItem) -> access$4200
    65:65:void access$4800(com.android.camera.ui.ModeListView,int) -> access$4800
    65:65:com.android.camera.ui.ModeListView$CurrentStateManager access$500(com.android.camera.ui.ModeListView) -> access$500
    65:65:int access$600(com.android.camera.ui.ModeListView) -> access$600
    65:65:int access$602(com.android.camera.ui.ModeListView,int) -> access$602
    65:65:int access$700(com.android.camera.ui.ModeListView,float,float) -> access$700
    65:65:void access$800(com.android.camera.ui.ModeListView,boolean) -> access$800
    65:65:android.animation.Animator access$900(com.android.camera.ui.ModeListView) -> access$900
    1829:1829:android.animation.Animator animateListToWidth(int[]) -> animateListToWidth
    1843:1871:android.animation.Animator animateListToWidth(int,int,android.animation.TimeInterpolator,int[]) -> animateListToWidth
    1881:1899:android.animation.Animator animateListToWidthAtVelocity(float,int) -> animateListToWidthAtVelocity
    1726:1729:void cancelForwardingTouchEvent() -> cancelForwardingTouchEvent
    1104:1105:void disableA11yOnModeSelectorItems() -> disableA11yOnModeSelectorItems
    1413:1422:void draw(android.graphics.Canvas) -> draw
    1110:1111:void enableA11yOnModeSelectorItems() -> enableA11yOnModeSelectorItems
    1321:1329:void forwardTouchEventToChild(android.view.MotionEvent) -> forwardTouchEventToChild
    1508:1516:int getFocusItem(float,float) -> getFocusItem
    1916:1929:float getMaxMovementBasedOnPosition(int,int) -> getMaxMovementBasedOnPosition
    1255:1260:int getModeIndex(int) -> getModeIndex
    1481:1481:void hideAnimated() -> hideAnimated
    1137:1185:void init(java.util.List) -> init
    1199:1245:void initializeModeSelectorItems() -> initializeModeSelectorItems
    1603:1613:void insertNewPosition(float,long) -> insertNewPosition
    1087:1089:boolean isTouchInsideList(android.view.MotionEvent) -> isTouchInsideList
    1908:1908:boolean onBackPressed() -> onBackPressed
    1073:1076:void onItemSelected(com.android.camera.ui.ModeSelectorItem) -> onItemSelected
    1347:1354:void onLayout(boolean,int,int,int,int) -> onLayout
    1746:1746:boolean onMenuPressed() -> onMenuPressed
    1695:1716:void onModeListOpenRatioUpdate(float) -> onModeListOpenRatioUpdate
    1265:1266:void onModeSelected(int) -> onModeSelected
    1368:1372:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    1299:1311:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1527:1554:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    1674:1685:void onVisibleWidthChanged(int) -> onVisibleWidthChanged
    1521:1522:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1735:1737:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1662:1665:void reset() -> reset
    1488:1489:void resetModeSelectors() -> resetModeSelectors
    1570:1589:void scroll(int,float,float) -> scroll
    1125:1128:void setBackgroundAlpha(int) -> setBackgroundAlpha
    1195:1195:void setCameraModuleScreenShotProvider(com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider) -> setCameraModuleScreenShotProvider
    1363:1363:void setCaptureLayoutHelper(com.android.camera.CaptureLayoutHelper) -> setCaptureLayoutHelper
    1285:1285:void setModeListOpenListener(com.android.camera.ui.ModeListView$ModeListOpenListener) -> setModeListOpenListener
    1276:1276:void setModeSwitchListener(com.android.camera.ui.ModeListView$ModeSwitchListener) -> setModeSwitchListener
    1435:1443:void setShouldShowSettingsCling(boolean) -> setShouldShowSettingsCling
    1340:1341:void setSwipeMode(boolean) -> setSwipeMode
    1560:1564:void setVisibility(int) -> setVisibility
    1293:1293:void setVisibilityChangedListener(com.android.camera.ui.ModeListView$ModeListVisibilityChangedListener) -> setVisibilityChangedListener
    1764:1771:boolean shouldSnapBack() -> shouldSnapBack
    1467:1467:void showModeSwitcherHint() -> showModeSwitcherHint
    1454:1456:void showSettingsClingIfEnabled(boolean) -> showSettingsClingIfEnabled
    1785:1792:android.animation.Animator snapBack(boolean) -> snapBack
    1801:1801:android.animation.Animator snapBack() -> snapBack
    1806:1816:android.animation.Animator snapToFullScreen() -> snapToFullScreen
    1912:1912:void startModeSelectionAnimation() -> startModeSelectionAnimation
    1377:1390:void updateModeListLayout() -> updateModeListLayout
    1394:1407:void updateSettingsButtonLayout(android.graphics.RectF) -> updateSettingsButtonLayout
com.android.camera.ui.ModeListView$1 -> com.android.camera.ui.ModeListView$1:
    1004:1004:void <init>(com.android.camera.ui.ModeListView) -> <init>
    1016:1025:float getInterpolation(float) -> getInterpolation
com.android.camera.ui.ModeListView$2 -> com.android.camera.ui.ModeListView$2:
    1036:1036:void <init>(com.android.camera.ui.ModeListView) -> <init>
    1061:1062:boolean onDown(android.view.MotionEvent) -> onDown
    1054:1055:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    1040:1041:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    1047:1047:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.android.camera.ui.ModeListView$3 -> com.android.camera.ui.ModeListView$3:
    1166:1166:void <init>(com.android.camera.ui.ModeListView) -> <init>
    1174:1174:void onClick(android.view.View) -> onClick
com.android.camera.ui.ModeListView$3$1 -> com.android.camera.ui.ModeListView$3$1:
    1174:1174:void <init>(com.android.camera.ui.ModeListView$3) -> <init>
    1177:1177:void run() -> run
com.android.camera.ui.ModeListView$4 -> com.android.camera.ui.ModeListView$4:
    1232:1232:void <init>(com.android.camera.ui.ModeListView,com.android.camera.ui.ModeSelectorItem) -> <init>
    1235:1235:void onClick(android.view.View) -> onClick
com.android.camera.ui.ModeListView$CurrentStateManager -> com.android.camera.ui.ModeListView$CurrentStateManager:
    142:142:void <init>(com.android.camera.ui.ModeListView) -> <init>
    142:142:void <init>(com.android.camera.ui.ModeListView,com.android.camera.ui.ModeListView$1) -> <init>
    146:146:com.android.camera.ui.ModeListView$ModeListState getCurrentState() -> getCurrentState
    150:151:void setCurrentState(com.android.camera.ui.ModeListView$ModeListState) -> setCurrentState
com.android.camera.ui.ModeListView$FullyHiddenState -> com.android.camera.ui.ModeListView$FullyHiddenState:
    326:330:void <init>(com.android.camera.ui.ModeListView) -> <init>
    325:325:android.animation.Animator access$1002(com.android.camera.ui.ModeListView$FullyHiddenState,android.animation.Animator) -> access$1002
    421:423:void onCurrentState() -> onCurrentState
    364:367:boolean onMenuPressed() -> onMenuPressed
    335:338:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    355:357:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    373:376:boolean shouldHandleVisibilityChange(int) -> shouldHandleVisibilityChange
    344:345:void showSwitcherHint() -> showSwitcherHint
    385:414:void snapOpenAndShow() -> snapOpenAndShow
com.android.camera.ui.ModeListView$FullyHiddenState$1 -> com.android.camera.ui.ModeListView$FullyHiddenState$1:
    390:390:void <init>(com.android.camera.ui.ModeListView$FullyHiddenState) -> <init>
    398:399:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.ModeListView$FullyShownState -> com.android.camera.ui.ModeListView$FullyShownState:
    432:433:void <init>(com.android.camera.ui.ModeListView) -> <init>
    432:432:void <init>(com.android.camera.ui.ModeListView,com.android.camera.ui.ModeListView$1) -> <init>
    432:432:android.animation.Animator access$1702(com.android.camera.ui.ModeListView$FullyShownState,android.animation.Animator) -> access$1702
    533:536:void hide() -> hide
    483:483:boolean onBackPressed() -> onBackPressed
    542:544:void onCurrentState() -> onCurrentState
    495:495:void onItemSelected(com.android.camera.ui.ModeSelectorItem) -> onItemSelected
    489:489:boolean onMenuPressed() -> onMenuPressed
    440:441:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    474:475:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    456:466:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    448:448:boolean shouldHandleTouchEvent(android.view.MotionEvent) -> shouldHandleTouchEvent
    502:527:void snapBackAndHide() -> snapBackAndHide
com.android.camera.ui.ModeListView$FullyShownState$1 -> com.android.camera.ui.ModeListView$FullyShownState$1:
    504:504:void <init>(com.android.camera.ui.ModeListView$FullyShownState) -> <init>
    512:513:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.ModeListView$ModeListState -> com.android.camera.ui.ModeListView$ModeListState:
    161:162:void <init>(com.android.camera.ui.ModeListView) -> <init>
    161:161:void <init>(com.android.camera.ui.ModeListView,com.android.camera.ui.ModeListView$1) -> <init>
    188:188:com.android.camera.widget.AnimationEffects getCurrentAnimationEffects() -> getCurrentAnimationEffects
    286:286:void hideAnimated() -> hideAnimated
    170:170:void onCurrentState() -> onCurrentState
com.android.camera.ui.ModeListView$ModeListVisibilityChangedListener -> com.android.camera.ui.ModeListView$ModeListVisibilityChangedListener:
    944:945:void <init>() -> <init>
    944:944:void access$4300(com.android.camera.ui.ModeListView$ModeListVisibilityChangedListener,boolean) -> access$4300
    961:963:void onVisibilityEvent(boolean) -> onVisibilityEvent
com.android.camera.ui.ModeListView$PeepholeAnimationEffect -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect:
    1938:1965:void <init>(com.android.camera.ui.ModeListView) -> <init>
    1933:1933:android.graphics.Paint access$4400(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> access$4400
    1933:1933:android.graphics.Paint access$4500(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> access$4500
    1933:1933:float access$4602(com.android.camera.ui.ModeListView$PeepholeAnimationEffect,float) -> access$4602
    1933:1933:android.animation.ValueAnimator access$4700(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> access$4700
    2205:2208:boolean cancelAnimation() -> cancelAnimation
    2118:2124:void drawBackground(android.graphics.Canvas) -> drawBackground
    2081:2084:void drawForeground(android.graphics.Canvas) -> drawForeground
    2089:2090:void setAnimationStartingPosition(int,int) -> setAnimationStartingPosition
    2105:2106:void setBackground(android.graphics.Bitmap,android.graphics.RectF) -> setBackground
    2113:2113:void setBackgroundOverlay(android.graphics.Bitmap) -> setBackgroundOverlay
    2094:2094:void setModeSpecificColor(int) -> setModeSpecificColor
    2069:2070:void setSize(int,int) -> setSize
    1969:2059:void setupAnimators() -> setupAnimators
    2133:2133:boolean shouldDrawSuper() -> shouldDrawSuper
    2177:2196:void startAnimation(android.animation.Animator$AnimatorListener) -> startAnimation
    2139:2172:void startFadeoutAnimation(android.animation.Animator$AnimatorListener,com.android.camera.ui.ModeSelectorItem,int,int,int) -> startFadeoutAnimation
com.android.camera.ui.ModeListView$PeepholeAnimationEffect$1 -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect$1:
    1972:1972:void <init>(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> <init>
    1975:1976:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.ModeListView$PeepholeAnimationEffect$2 -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect$2:
    1979:1979:void <init>(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> <init>
    1989:1989:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1983:1983:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.ui.ModeListView$PeepholeAnimationEffect$3 -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect$3:
    1998:1998:void <init>(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> <init>
    2001:2003:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.ModeListView$PeepholeAnimationEffect$4 -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect$4:
    2006:2006:void <init>(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> <init>
    2016:2016:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2010:2010:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.ui.ModeListView$PeepholeAnimationEffect$5 -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect$5:
    2032:2032:void <init>(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> <init>
    2036:2037:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.ModeListView$PeepholeAnimationEffect$6 -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect$6:
    2040:2040:void <init>(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> <init>
    2050:2050:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2044:2044:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.ui.ModeListView$PeepholeAnimationEffect$7 -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect$7:
    2059:2059:void <init>(com.android.camera.ui.ModeListView$PeepholeAnimationEffect) -> <init>
    2062:2062:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.ModeListView$PeepholeAnimationEffect$8 -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect$8:
    2147:2147:void <init>(com.android.camera.ui.ModeListView$PeepholeAnimationEffect,com.android.camera.ui.ModeSelectorItem,int) -> <init>
    2153:2153:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.ModeListView$PeepholeAnimationEffect$8$1 -> com.android.camera.ui.ModeListView$PeepholeAnimationEffect$8$1:
    2153:2153:void <init>(com.android.camera.ui.ModeListView$PeepholeAnimationEffect$8) -> <init>
    2157:2158:void run() -> run
com.android.camera.ui.ModeListView$ScrollingState -> com.android.camera.ui.ModeListView$ScrollingState:
    778:781:void <init>(com.android.camera.ui.ModeListView) -> <init>
    777:777:android.animation.Animator access$3402(com.android.camera.ui.ModeListView$ScrollingState,android.animation.Animator) -> access$3402
    788:788:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    805:813:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    797:797:boolean shouldHandleTouchEvent(android.view.MotionEvent) -> shouldHandleTouchEvent
com.android.camera.ui.ModeListView$ScrollingState$1 -> com.android.camera.ui.ModeListView$ScrollingState$1:
    813:813:void <init>(com.android.camera.ui.ModeListView$ScrollingState,boolean) -> <init>
    821:827:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.ModeListView$SelectedState -> com.android.camera.ui.ModeListView$SelectedState:
    855:888:void <init>(com.android.camera.ui.ModeListView,com.android.camera.ui.ModeSelectorItem) -> <init>
    909:911:void hide() -> hide
    898:898:void startModeSelectionAnimation() -> startModeSelectionAnimation
com.android.camera.ui.ModeListView$SelectedState$1 -> com.android.camera.ui.ModeListView$SelectedState$1:
    898:898:void <init>(com.android.camera.ui.ModeListView$SelectedState) -> <init>
    901:902:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.ModeListView$ShimmyState -> com.android.camera.ui.ModeListView$ShimmyState:
    559:580:void <init>(com.android.camera.ui.ModeListView) -> <init>
    557:557:void access$1800(com.android.camera.ui.ModeListView$ShimmyState) -> access$1800
    557:557:android.animation.Animator access$2402(com.android.camera.ui.ModeListView$ShimmyState,android.animation.Animator) -> access$2402
    557:557:void access$2500(com.android.camera.ui.ModeListView$ShimmyState,boolean) -> access$2500
    685:690:void cancelAnimation() -> cancelAnimation
    756:757:void hide() -> hide
    762:763:void hideAnimated() -> hideAnimated
    634:634:void hideShimmyWithDelay() -> hideShimmyWithDelay
    705:751:void onAnimationEnd(boolean) -> onAnimationEnd
    696:697:void onCurrentState() -> onCurrentState
    629:630:void onItemSelected(com.android.camera.ui.ModeSelectorItem) -> onItemSelected
    587:591:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    617:623:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    639:641:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    598:608:boolean shouldHandleTouchEvent(android.view.MotionEvent) -> shouldHandleTouchEvent
    650:656:void startHidingShimmy() -> startHidingShimmy
com.android.camera.ui.ModeListView$ShimmyState$1 -> com.android.camera.ui.ModeListView$ShimmyState$1:
    561:561:void <init>(com.android.camera.ui.ModeListView$ShimmyState) -> <init>
    564:564:void run() -> run
com.android.camera.ui.ModeListView$ShimmyState$2 -> com.android.camera.ui.ModeListView$ShimmyState$2:
    656:657:void <init>(com.android.camera.ui.ModeListView$ShimmyState) -> <init>
    671:671:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    665:666:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.ModeListView$ShimmyState$3 -> com.android.camera.ui.ModeListView$ShimmyState$3:
    723:723:void <init>(com.android.camera.ui.ModeListView$ShimmyState,android.animation.ValueAnimator) -> <init>
    726:727:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.ModeListView$ShimmyState$4 -> com.android.camera.ui.ModeListView$ShimmyState$4:
    730:730:void <init>(com.android.camera.ui.ModeListView$ShimmyState) -> <init>
    738:738:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.ModeListView$ShimmyState$5 -> com.android.camera.ui.ModeListView$ShimmyState$5:
    763:763:void <init>(com.android.camera.ui.ModeListView$ShimmyState) -> <init>
    766:766:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.ModeListView$TimeBasedPosition -> com.android.camera.ui.ModeListView$TimeBasedPosition:
    974:976:void <init>(float,long) -> <init>
    984:984:long getTimeStamp() -> getTimeStamp
com.android.camera.ui.ModeSelectorItem -> com.android.camera.ui.ModeSelectorItem:
    47:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    201:207:void draw(android.graphics.Canvas) -> draw
    223:223:int getHighlightColor() -> getHighlightColor
    265:265:com.android.camera.ui.ModeIconView getIcon() -> getIcon
    240:242:void getIconCenterLocationInWindow(int[]) -> getIconCenterLocationInWindow
    231:231:int getMaxVisibleWidth() -> getMaxVisibleWidth
    258:258:int getModeId() -> getModeId
    189:189:int getVisibleWidth() -> getVisibleWidth
    72:82:void onFinishInflate() -> onFinishInflate
    133:137:void onLayout(boolean,int,int,int,int) -> onLayout
    124:124:void onSwipeModeChanged(boolean) -> onSwipeModeChanged
    111:111:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    216:216:void setHighlightColor(int) -> setHighlightColor
    152:156:void setImageResource(int) -> setImageResource
    251:251:void setModeId(int) -> setModeId
    99:99:void setSelected(boolean) -> setSelected
    128:128:void setText(java.lang.CharSequence) -> setText
    272:272:void setTextAlpha(float) -> setTextAlpha
    168:179:void setVisibleWidth(int) -> setVisibleWidth
    94:94:void setVisibleWidthChangedListener(com.android.camera.ui.ModeSelectorItem$VisibleWidthChangedListener) -> setVisibleWidthChangedListener
com.android.camera.ui.ModeTransitionView -> com.android.camera.ui.ModeTransitionView:
    48:48:void <clinit>() -> <clinit>
    67:113:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:47:float access$000(com.android.camera.ui.ModeTransitionView) -> access$000
    47:47:float access$002(com.android.camera.ui.ModeTransitionView,float) -> access$002
    47:47:float access$102(com.android.camera.ui.ModeTransitionView,float) -> access$102
    47:47:android.graphics.drawable.Drawable access$200(com.android.camera.ui.ModeTransitionView) -> access$200
    47:47:int access$300(com.android.camera.ui.ModeTransitionView) -> access$300
    47:47:int access$400(com.android.camera.ui.ModeTransitionView) -> access$400
    47:47:int access$500(com.android.camera.ui.ModeTransitionView) -> access$500
    47:47:android.animation.AnimatorSet access$602(com.android.camera.ui.ModeTransitionView,android.animation.AnimatorSet) -> access$602
    47:47:android.graphics.Rect access$700(com.android.camera.ui.ModeTransitionView) -> access$700
    47:47:int access$802(com.android.camera.ui.ModeTransitionView,int) -> access$802
    47:47:com.android.camera.app.CameraAppUI$AnimationFinishedListener access$900(com.android.camera.ui.ModeTransitionView) -> access$900
    47:47:com.android.camera.app.CameraAppUI$AnimationFinishedListener access$902(com.android.camera.ui.ModeTransitionView,com.android.camera.app.CameraAppUI$AnimationFinishedListener) -> access$902
    167:167:float getScrollDistance() -> getScrollDistance
    576:578:void hideImageCover() -> hideImageCover
    511:550:void hideModeCover(com.android.camera.app.CameraAppUI$AnimationFinishedListener) -> hideModeCover
    172:190:void onDraw(android.graphics.Canvas) -> onDraw
    195:200:void onLayout(boolean,int,int,int,int) -> onLayout
    301:304:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    556:559:void setAlpha(float) -> setAlpha
    475:477:void setIconDrawable(android.graphics.drawable.Drawable) -> setIconDrawable
    155:163:void setScrollDistance(float) -> setScrollDistance
    488:498:void setupModeCover(int,int) -> setupModeCover
    566:568:void setupModeCover(android.graphics.Bitmap) -> setupModeCover
    313:324:void snap() -> snap
    329:329:void snapShadeTo(int,int) -> snapShadeTo
    342:376:void snapShadeTo(int,int,boolean) -> snapShadeTo
    208:210:void startPeepHoleAnimation() -> startPeepHoleAnimation
    217:295:void startPeepHoleAnimation(float,float) -> startPeepHoleAnimation
    454:463:void updateIconDrawableByResourceId(int) -> updateIconDrawableByResourceId
    120:143:void updateShade() -> updateShade
com.android.camera.ui.ModeTransitionView$1 -> com.android.camera.ui.ModeTransitionView$1:
    95:95:void <init>(com.android.camera.ui.ModeTransitionView) -> <init>
    98:99:boolean onDown(android.view.MotionEvent) -> onDown
    106:108:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
com.android.camera.ui.ModeTransitionView$2 -> com.android.camera.ui.ModeTransitionView$2:
    243:243:void <init>(com.android.camera.ui.ModeTransitionView,android.animation.ValueAnimator,android.animation.ValueAnimator,android.animation.ValueAnimator) -> <init>
    247:258:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.ModeTransitionView$3 -> com.android.camera.ui.ModeTransitionView$3:
    262:262:void <init>(com.android.camera.ui.ModeTransitionView) -> <init>
    272:281:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    266:266:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.ui.ModeTransitionView$4 -> com.android.camera.ui.ModeTransitionView$4:
    345:345:void <init>(com.android.camera.ui.ModeTransitionView,int,int,boolean) -> <init>
    353:361:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.ModeTransitionView$5 -> com.android.camera.ui.ModeTransitionView$5:
    524:524:void <init>(com.android.camera.ui.ModeTransitionView,com.android.camera.app.CameraAppUI$AnimationFinishedListener) -> <init>
    532:536:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.ui.PreviewOverlay -> com.android.camera.ui.PreviewOverlay:
    57:57:void <clinit>() -> <clinit>
    63:112:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:50:com.android.camera.ui.PreviewOverlay$ZoomProcessor access$100(com.android.camera.ui.PreviewOverlay) -> access$100
    50:50:com.android.camera.ui.PreviewOverlay$OnZoomChangedListener access$200(com.android.camera.ui.PreviewOverlay) -> access$200
    50:50:long access$300(com.android.camera.ui.PreviewOverlay) -> access$300
    50:50:long access$302(com.android.camera.ui.PreviewOverlay,long) -> access$302
    50:50:com.android.camera.ui.PreviewOverlay$ZoomGestureDetector access$400(com.android.camera.ui.PreviewOverlay) -> access$400
    173:173:float getZoomAtLevel(int) -> getZoomAtLevel
    208:209:void onDraw(android.graphics.Canvas) -> onDraw
    202:202:void onPreviewAreaChanged(android.graphics.RectF) -> onPreviewAreaChanged
    179:187:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    237:241:void reset() -> reset
    221:221:void setGestureListener(android.view.GestureDetector$OnGestureListener) -> setGestureListener
    197:197:void setOnPreviewTouchedListener(com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener) -> setOnPreviewTouchedListener
    230:230:void setTouchListener(android.view.View$OnTouchListener) -> setTouchListener
    125:126:void setupZoom(float,float,com.android.camera.ui.PreviewOverlay$OnZoomChangedListener) -> setupZoom
    137:144:float zoomIn(android.view.View,float) -> zoomIn
    155:162:float zoomOut(android.view.View,float) -> zoomOut
com.android.camera.ui.PreviewOverlay$ZoomGestureDetector -> com.android.camera.ui.PreviewOverlay$ZoomGestureDetector:
    253:254:void <init>(com.android.camera.ui.PreviewOverlay) -> <init>
    275:275:float getAngle() -> getAngle
    259:265:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.camera.ui.PreviewOverlay$ZoomProcessor -> com.android.camera.ui.PreviewOverlay$ZoomProcessor:
    284:313:void <init>(com.android.camera.ui.PreviewOverlay) -> <init>
    283:283:void access$000(com.android.camera.ui.PreviewOverlay$ZoomProcessor,float,float) -> access$000
    336:360:void draw(android.graphics.Canvas) -> draw
    428:432:void hideZoomUI() -> hideZoomUI
    327:332:void layout(int,int,int,int) -> layout
    365:387:boolean onScale(android.view.ScaleGestureDetector) -> onScale
    393:401:boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    407:411:void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
    323:323:void setZoom(float) -> setZoom
    318:318:void setZoomMax(float) -> setZoomMax
    436:437:void setupZoom(float,float) -> setupZoom
    419:424:void showZoomUI() -> showZoomUI
com.android.camera.ui.ProgressOverlay -> com.android.camera.ui.ProgressOverlay:
    40:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:69:void onDraw(android.graphics.Canvas) -> onDraw
    46:49:void onLayout(boolean,int,int,int,int) -> onLayout
    58:63:void setBounds(android.graphics.RectF) -> setBounds
com.android.camera.ui.ProgressRenderer -> com.android.camera.ui.ProgressRenderer:
    36:59:void <init>(android.content.Context,android.view.View) -> <init>
    31:31:android.view.View access$000(com.android.camera.ui.ProgressRenderer) -> access$000
    118:123:android.graphics.Paint createProgressPaint(int,float) -> createProgressPaint
    86:100:void onDraw(android.graphics.Canvas,int,int) -> onDraw
com.android.camera.ui.ProgressRenderer$1 -> com.android.camera.ui.ProgressRenderer$1:
    40:40:void <init>(com.android.camera.ui.ProgressRenderer) -> <init>
    43:43:void run() -> run
com.android.camera.ui.ProgressRenderer$2 -> com.android.camera.ui.ProgressRenderer$2:
    101:101:void <init>(com.android.camera.ui.ProgressRenderer) -> <init>
    104:104:void run() -> run
com.android.camera.ui.RadioOptions -> com.android.camera.ui.RadioOptions:
    60:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:31:void access$000(com.android.camera.ui.RadioOptions,android.view.View) -> access$000
    75:76:void onFinishInflate() -> onFinishInflate
    51:51:void setOnOptionClickListener(com.android.camera.ui.RadioOptions$OnOptionClickListener) -> setOnOptionClickListener
    103:104:void setSelectedOptionByTag(java.lang.Object) -> setSelectedOptionByTag
    119:126:void setSelectedOptionByView(android.view.View) -> setSelectedOptionByView
    85:94:void updateListeners() -> updateListeners
com.android.camera.ui.RadioOptions$1 -> com.android.camera.ui.RadioOptions$1:
    85:85:void <init>(com.android.camera.ui.RadioOptions) -> <init>
    88:88:void onClick(android.view.View) -> onClick
com.android.camera.ui.RotateLayout -> com.android.camera.ui.RotateLayout:
    31:31:void <clinit>() -> <clinit>
    33:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:49:void onFinishInflate() -> onFinishInflate
    57:64:void onLayout(boolean,int,int,int,int) -> onLayout
    72:106:void onMeasure(int,int) -> onMeasure
    117:120:void setOrientation(int,boolean) -> setOrientation
com.android.camera.ui.StickyBottomCaptureLayout -> com.android.camera.ui.StickyBottomCaptureLayout:
    44:44:void <clinit>() -> <clinit>
    48:81:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:com.android.camera.CaptureLayoutHelper access$000(com.android.camera.ui.StickyBottomCaptureLayout) -> access$000
    42:42:com.android.camera.widget.ModeOptionsOverlay access$100(com.android.camera.ui.StickyBottomCaptureLayout) -> access$100
    42:42:android.graphics.PointF access$200(com.android.camera.ui.StickyBottomCaptureLayout,android.graphics.RectF,boolean,float) -> access$200
    42:42:void access$300(com.android.camera.ui.StickyBottomCaptureLayout,float) -> access$300
    42:42:void access$400(com.android.camera.ui.StickyBottomCaptureLayout,float) -> access$400
    42:42:com.android.camera.widget.RoundedThumbnailView access$500(com.android.camera.ui.StickyBottomCaptureLayout) -> access$500
    186:191:void animateCaptureIndicatorToX(float) -> animateCaptureIndicatorToX
    202:207:void animateCaptureIndicatorToY(float) -> animateCaptureIndicatorToY
    139:181:android.graphics.PointF getRoundedThumbnailPosition(android.graphics.RectF,boolean,float) -> getRoundedThumbnailPosition
    86:89:void onFinishInflate() -> onFinishInflate
    101:123:void onLayout(boolean,int,int,int,int) -> onLayout
    96:96:void setCaptureLayoutHelper(com.android.camera.CaptureLayoutHelper) -> setCaptureLayoutHelper
com.android.camera.ui.StickyBottomCaptureLayout$1 -> com.android.camera.ui.StickyBottomCaptureLayout$1:
    50:50:void <init>(com.android.camera.ui.StickyBottomCaptureLayout) -> <init>
    67:75:void onBeginToHideModeOptions() -> onBeginToHideModeOptions
    53:61:void onBeginToShowModeOptions() -> onBeginToShowModeOptions
com.android.camera.ui.StickyBottomCaptureLayout$2 -> com.android.camera.ui.StickyBottomCaptureLayout$2:
    191:191:void <init>(com.android.camera.ui.StickyBottomCaptureLayout) -> <init>
    194:195:void run() -> run
com.android.camera.ui.StickyBottomCaptureLayout$3 -> com.android.camera.ui.StickyBottomCaptureLayout$3:
    207:207:void <init>(com.android.camera.ui.StickyBottomCaptureLayout) -> <init>
    210:211:void run() -> run
com.android.camera.ui.TopRightWeightedLayout -> com.android.camera.ui.TopRightWeightedLayout:
    37:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:72:void checkOrientation(int) -> checkOrientation
    100:152:void fixGravityAndPadding(int) -> fixGravityAndPadding
    48:49:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    42:43:void onFinishInflate() -> onFinishInflate
    81:86:void reverseChildren() -> reverseChildren
com.android.camera.ui.TouchCircleDrawable -> com.android.camera.ui.TouchCircleDrawable:
    51:85:void <init>(android.content.res.Resources,int,int) -> <init>
    94:94:void <init>(android.content.res.Resources) -> <init>
    48:48:int access$002(com.android.camera.ui.TouchCircleDrawable,int) -> access$002
    48:48:android.animation.ValueAnimator$AnimatorUpdateListener access$100(com.android.camera.ui.TouchCircleDrawable) -> access$100
    48:48:boolean access$202(com.android.camera.ui.TouchCircleDrawable,boolean) -> access$202
    48:48:android.animation.Animator$AnimatorListener access$300(com.android.camera.ui.TouchCircleDrawable) -> access$300
    187:240:void animate() -> animate
    127:139:void draw(android.graphics.Canvas) -> draw
    145:145:void setAlpha(int) -> setAlpha
    257:257:void setAnimatorListener(android.animation.Animator$AnimatorListener) -> setAnimatorListener
    114:115:void setCenter(android.graphics.Point) -> setCenter
    164:166:void setColor(int) -> setColor
    150:150:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    170:172:void setIconDrawable(android.graphics.drawable.Drawable,int) -> setIconDrawable
    104:105:void setSize(int,int) -> setSize
    267:267:void setUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener) -> setUpdateListener
    176:177:void updateIconBounds() -> updateIconBounds
com.android.camera.ui.TouchCircleDrawable$1 -> com.android.camera.ui.TouchCircleDrawable$1:
    193:193:void <init>(com.android.camera.ui.TouchCircleDrawable) -> <init>
    196:199:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.ui.TouchCircleDrawable$2 -> com.android.camera.ui.TouchCircleDrawable$2:
    204:204:void <init>(com.android.camera.ui.TouchCircleDrawable) -> <init>
    225:228:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    216:219:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    234:235:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    207:210:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.ui.TouchCoordinate -> com.android.camera.ui.TouchCoordinate:
    35:39:void <init>(float,float,float,float) -> <init>
com.android.camera.ui.ZoomView -> com.android.camera.ui.ZoomView:
    41:41:void <clinit>() -> <clinit>
    43:180:void <init>(android.content.Context) -> <init>
    39:39:android.graphics.BitmapRegionDecoder access$000(com.android.camera.ui.ZoomView) -> access$000
    39:39:java.io.InputStream access$100(com.android.camera.ui.ZoomView) -> access$100
    39:39:com.android.camera.debug.Log$Tag access$200() -> access$200
    39:39:int access$300(com.android.camera.ui.ZoomView) -> access$300
    39:39:int access$400(com.android.camera.ui.ZoomView) -> access$400
    39:39:int access$402(com.android.camera.ui.ZoomView,int) -> access$402
    39:39:int access$500(com.android.camera.ui.ZoomView) -> access$500
    39:39:int access$502(com.android.camera.ui.ZoomView,int) -> access$502
    39:39:int access$600(com.android.camera.ui.ZoomView,int,int) -> access$600
    39:39:com.android.camera.ui.ZoomView$DecodePartialBitmap access$702(com.android.camera.ui.ZoomView,com.android.camera.ui.ZoomView$DecodePartialBitmap) -> access$702
    39:39:void access$800(com.android.camera.ui.ZoomView,boolean) -> access$800
    236:258:android.graphics.RectF adjustToFitInBounds(android.graphics.RectF,int,int) -> adjustToFitInBounds
    223:225:void cancelPartialDecodingTask() -> cancelPartialDecodingTask
    274:276:java.io.InputStream getInputStream() -> getInputStream
    290:293:int getSampleFactor(int,int) -> getSampleFactor
    206:211:void loadBitmap(android.net.Uri,int,android.graphics.RectF) -> loadBitmap
    195:201:void resetDecoder() -> resetDecoder
    216:218:void showPartiallyDecodedImage(boolean) -> showPartiallyDecodedImage
    265:267:void startPartialDecodingTask(android.graphics.RectF) -> startPartialDecodingTask
com.android.camera.ui.ZoomView$1 -> com.android.camera.ui.ZoomView$1:
    180:180:void <init>(com.android.camera.ui.ZoomView) -> <init>
    186:188:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.camera.ui.ZoomView$DecodePartialBitmap -> com.android.camera.ui.ZoomView$DecodePartialBitmap:
    53:53:void <init>(com.android.camera.ui.ZoomView) -> <init>
    53:53:void <init>(com.android.camera.ui.ZoomView,com.android.camera.ui.ZoomView$1) -> <init>
    53:53:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    63:160:android.graphics.Bitmap doInBackground(android.graphics.RectF[]) -> doInBackground
    53:53:void onPostExecute(java.lang.Object) -> onPostExecute
    165:172:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    58:58:void onPreExecute() -> onPreExecute
com.android.camera.ui.focus.AutoFocusRing -> com.android.camera.ui.focus.AutoFocusRing:
    30:30:void <clinit>() -> <clinit>
    43:43:void <init>(com.android.camera.ui.motion.Invalidator,android.graphics.Paint,float,float) -> <init>
    48:76:void draw(long,long,android.graphics.Canvas) -> draw
    80:99:void processStates(long) -> processStates
com.android.camera.ui.focus.CameraCoordinateTransformer -> com.android.camera.ui.focus.CameraCoordinateTransformer:
    28:28:void <clinit>() -> <clinit>
    41:48:void <init>(boolean,int,android.graphics.RectF) -> <init>
    79:95:android.graphics.Matrix cameraToPreviewTransform(boolean,int,android.graphics.RectF) -> cameraToPreviewTransform
    107:107:boolean hasNonZeroArea(android.graphics.RectF) -> hasNonZeroArea
    101:102:android.graphics.Matrix inverse(android.graphics.Matrix) -> inverse
    72:73:android.graphics.RectF toCameraSpace(android.graphics.RectF) -> toCameraSpace
com.android.camera.ui.focus.FocusController -> com.android.camera.ui.focus.FocusController:
    31:31:void <clinit>() -> <clinit>
    37:40:void <init>(com.android.camera.ui.focus.FocusRing,com.android.camera.ui.focus.FocusSound,com.android.camera.async.MainThread) -> <init>
    30:30:com.android.camera.debug.Log$Tag access$000() -> access$000
    30:30:com.android.camera.ui.focus.FocusRing access$100(com.android.camera.ui.focus.FocusController) -> access$100
    104:104:void clearFocusIndicator() -> clearFocusIndicator
    119:119:void configurePreviewDimensions(android.graphics.RectF) -> configurePreviewDimensions
    146:147:void onFocusDistance(float,com.android.camera.ui.motion.LinearScale) -> onFocusDistance
    133:133:void setFocusRatio(float) -> setFocusRatio
    87:87:void showActiveFocusAt(int,int) -> showActiveFocusAt
    49:49:void showPassiveFocusAtCenter() -> showPassiveFocusAtCenter
com.android.camera.ui.focus.FocusController$1 -> com.android.camera.ui.focus.FocusController$1:
    49:49:void <init>(com.android.camera.ui.focus.FocusController) -> <init>
    52:54:void run() -> run
com.android.camera.ui.focus.FocusController$3 -> com.android.camera.ui.focus.FocusController$3:
    87:87:void <init>(com.android.camera.ui.focus.FocusController,int,int) -> <init>
    90:92:void run() -> run
com.android.camera.ui.focus.FocusController$4 -> com.android.camera.ui.focus.FocusController$4:
    104:104:void <init>(com.android.camera.ui.focus.FocusController) -> <init>
    107:108:void run() -> run
com.android.camera.ui.focus.FocusController$5 -> com.android.camera.ui.focus.FocusController$5:
    119:119:void <init>(com.android.camera.ui.focus.FocusController,android.graphics.RectF) -> <init>
    122:123:void run() -> run
com.android.camera.ui.focus.FocusController$6 -> com.android.camera.ui.focus.FocusController$6:
    133:133:void <init>(com.android.camera.ui.focus.FocusController,float) -> <init>
    136:138:void run() -> run
com.android.camera.ui.focus.FocusRingRenderer -> com.android.camera.ui.focus.FocusRingRenderer:
    34:34:void <clinit>() -> <clinit>
    55:86:void <init>(com.android.camera.ui.motion.Invalidator,android.graphics.Paint,float,float) -> <init>
    223:231:long computeEnterStartTimeMillis(long,float) -> computeEnterStartTimeMillis
    206:214:long computeExitStartTimeMs(long,float) -> computeExitStartTimeMs
    180:185:void exit(long) -> exit
    99:99:int getCenterX() -> getCenterX
    112:112:int getCenterY() -> getCenterY
    136:136:boolean isActive() -> isActive
    151:151:boolean isEntering() -> isEntering
    143:143:boolean isExiting() -> isExiting
    95:95:void setCenterX(int) -> setCenterX
    108:108:void setCenterY(int) -> setCenterY
    121:128:void setRadius(long,float) -> setRadius
    159:168:void start(long,float,float) -> start
    197:202:void stop(long) -> stop
com.android.camera.ui.focus.FocusRingRenderer$FocusState -> com.android.camera.ui.focus.FocusRingRenderer$FocusState:
    39:44:void <clinit>() -> <clinit>
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:com.android.camera.ui.focus.FocusRingRenderer$FocusState valueOf(java.lang.String) -> valueOf
    39:39:com.android.camera.ui.focus.FocusRingRenderer$FocusState[] values() -> values
com.android.camera.ui.focus.FocusRingView -> com.android.camera.ui.focus.FocusRingView:
    43:43:void <clinit>() -> <clinit>
    61:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    191:193:void centerAutofocusRing() -> centerAutofocusRing
    145:149:void centerFocusLocation() -> centerFocusLocation
    197:202:android.graphics.Point computeCenter() -> computeCenter
    159:163:void configurePreviewDimensions(android.graphics.RectF) -> configurePreviewDimensions
    93:93:boolean isActiveFocusRunning() -> isActiveFocusRunning
    88:88:boolean isPassiveFocusRunning() -> isPassiveFocusRunning
    206:211:android.graphics.Paint makePaint(android.content.res.Resources,int) -> makePaint
    169:178:void onDraw(android.graphics.Canvas) -> onDraw
    137:140:void setFocusLocation(float,float) -> setFocusLocation
    182:186:void setRadius(float) -> setRadius
    154:154:void setRadiusRatio(float) -> setRadiusRatio
    111:119:void startActiveFocus() -> startActiveFocus
    98:106:void startPassiveFocus() -> startPassiveFocus
    124:131:void stopFocusAnimations() -> stopFocusAnimations
com.android.camera.ui.focus.FocusSound -> com.android.camera.ui.focus.FocusSound:
    31:35:void <init>(com.android.camera.SoundPlayer,int) -> <init>
com.android.camera.ui.focus.LensRangeCalculator -> com.android.camera.ui.focus.LensRangeCalculator:
    55:69:com.android.camera.ui.motion.LinearScale getDiopterToRatioCalculator(android.hardware.camera2.CameraCharacteristics) -> getDiopterToRatioCalculator
    36:36:com.android.camera.ui.motion.LinearScale getNoOp() -> getNoOp
com.android.camera.ui.focus.ManualFocusRing -> com.android.camera.ui.focus.ManualFocusRing:
    39:39:void <init>(com.android.camera.ui.motion.Invalidator,android.graphics.Paint,float) -> <init>
    44:66:void draw(long,long,android.graphics.Canvas) -> draw
    70:90:void processStates(long) -> processStates
com.android.camera.ui.motion.AnimationClock -> com.android.camera.ui.motion.AnimationClock:
    24:24:void <init>() -> <init>
com.android.camera.ui.motion.AnimationClock$SystemTimeClock -> com.android.camera.ui.motion.AnimationClock$SystemTimeClock:
    32:32:void <init>() -> <init>
    36:36:long getTimeMillis() -> getTimeMillis
com.android.camera.ui.motion.DampedSpring -> com.android.camera.ui.motion.DampedSpring:
    37:37:void <init>() -> <init>
    32:52:void <init>(float,float) -> <init>
    75:75:float getTarget() -> getTarget
    132:133:boolean isActive() -> isActive
    85:85:void setTarget(float) -> setTarget
    68:68:void setValue(float) -> setValue
    142:143:void stop() -> stop
    100:125:float update(float) -> update
com.android.camera.ui.motion.DynamicAnimator -> com.android.camera.ui.motion.DynamicAnimator:
    32:44:void <init>(com.android.camera.ui.motion.Invalidator,com.android.camera.ui.motion.AnimationClock) -> <init>
    48:76:void draw(android.graphics.Canvas) -> draw
    106:114:long getTimeMillis() -> getTimeMillis
    88:93:void invalidate() -> invalidate
com.android.camera.ui.motion.InterpolatorHelper -> com.android.camera.ui.motion.InterpolatorHelper:
    33:43:android.view.animation.Interpolator getLinearOutSlowInInterpolator(android.content.Context) -> getLinearOutSlowInInterpolator
com.android.camera.ui.motion.LinearScale -> com.android.camera.ui.motion.LinearScale:
    30:38:void <init>(float,float,float,float) -> <init>
    45:49:float clamp(float) -> clamp
    56:56:boolean isInDomain(float) -> isInDomain
    66:66:float scale(float) -> scale
    79:79:java.lang.String toString() -> toString
com.android.camera.ui.motion.UnitBezier -> com.android.camera.ui.motion.UnitBezier:
    45:47:void <init>(float,float,float,float) -> <init>
    81:106:float solve(float,com.android.camera.ui.motion.UnitBezier$DerivableFloatFn) -> solve
    72:72:float tAt(float) -> tAt
    59:59:float valueAt(float) -> valueAt
com.android.camera.ui.motion.UnitBezier$CubicBezierFn -> com.android.camera.ui.motion.UnitBezier$CubicBezierFn:
    144:147:void <init>(float,float) -> <init>
    154:154:float derivative(float) -> derivative
    151:151:float value(float) -> value
com.android.camera.ui.motion.UnitCurves -> com.android.camera.ui.motion.UnitCurves:
    23:26:void <clinit>() -> <clinit>
    42:42:float mapEnterCurveToExitCurveAtT(com.android.camera.ui.motion.UnitCurve,com.android.camera.ui.motion.UnitCurve,float) -> mapEnterCurveToExitCurveAtT
com.android.camera.util.AndroidContext -> com.android.camera.util.AndroidContext:
    52:53:void <init>(android.content.Context) -> <init>
    57:57:android.content.Context get() -> get
    35:36:void initialize(android.content.Context) -> initialize
    45:46:com.android.camera.util.AndroidContext instance() -> instance
com.android.camera.util.AndroidServices -> com.android.camera.util.AndroidServices:
    46:46:void <clinit>() -> <clinit>
    45:45:void <init>(android.content.Context,com.android.camera.util.AndroidServices$1) -> <init>
    62:63:void <init>(android.content.Context) -> <init>
    135:135:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    140:147:java.lang.Object getSystemService(java.lang.String,android.content.Context) -> getSystemService
    58:58:com.android.camera.util.AndroidServices instance() -> instance
    75:75:android.view.accessibility.AccessibilityManager provideAccessibilityManager() -> provideAccessibilityManager
    67:67:android.app.ActivityManager provideActivityManager() -> provideActivityManager
    71:71:android.media.AudioManager provideAudioManager() -> provideAudioManager
    83:87:android.hardware.camera2.CameraManager provideCameraManager() -> provideCameraManager
    95:95:android.app.admin.DevicePolicyManager provideDevicePolicyManager() -> provideDevicePolicyManager
    99:99:android.hardware.display.DisplayManager provideDisplayManager() -> provideDisplayManager
    103:103:android.app.KeyguardManager provideKeyguardManager() -> provideKeyguardManager
    107:107:android.view.LayoutInflater provideLayoutInflater() -> provideLayoutInflater
    111:111:android.location.LocationManager provideLocationManager() -> provideLocationManager
    115:115:android.app.NotificationManager provideNotificationManager() -> provideNotificationManager
    119:119:android.os.PowerManager providePowerManager() -> providePowerManager
    123:123:android.hardware.SensorManager provideSensorManager() -> provideSensorManager
    131:131:android.view.WindowManager provideWindowManager(android.app.Activity) -> provideWindowManager
com.android.camera.util.AndroidServices$Singleton -> com.android.camera.util.AndroidServices$Singleton:
    53:54:void <clinit>() -> <clinit>
    52:52:com.android.camera.util.AndroidServices access$100() -> access$100
com.android.camera.util.ApiHelper -> com.android.camera.util.ApiHelper:
    27:74:void <clinit>() -> <clinit>
    93:95:boolean isKitKatMR2OrHigher() -> isKitKatMR2OrHigher
    88:89:boolean isKitKatOrHigher() -> isKitKatOrHigher
    108:108:boolean isLMr1OrHigher() -> isLMr1OrHigher
    103:104:boolean isLOrHigher() -> isLOrHigher
    99:99:boolean isLollipop() -> isLollipop
    112:112:boolean isLorLMr1() -> isLorLMr1
    117:118:boolean isMOrHigher() -> isMOrHigher
com.android.camera.util.AspectRatio -> com.android.camera.util.AspectRatio:
    33:34:void <clinit>() -> <clinit>
    43:45:void <init>(int,int) -> <init>
    83:90:boolean equals(java.lang.Object) -> equals
    68:68:int getHeight() -> getHeight
    173:190:android.graphics.Rect getLargestCenterCrop(com.android.camera.util.Size) -> getLargestCenterCrop
    72:72:int getWidth() -> getWidth
    98:98:int hashCode() -> hashCode
    154:154:boolean isWiderThan(com.android.camera.util.AspectRatio) -> isWiderThan
    49:52:com.android.camera.util.AspectRatio of(int,int) -> of
    56:56:com.android.camera.util.AspectRatio of(com.android.camera.util.Size) -> of
    64:64:com.android.camera.util.AspectRatio of16x9() -> of16x9
    76:76:float toFloat() -> toFloat
    103:103:java.lang.String toString() -> toString
com.android.camera.util.CameraUtil -> com.android.camera.util.CameraUtil:
    70:676:void <clinit>() -> <clinit>
    69:69:void <init>(android.content.Context,com.android.camera.util.CameraUtil$1) -> <init>
    132:134:void <init>(android.content.Context) -> <init>
    754:756:void broadcastNewPicture(android.content.Context,android.net.Uri) -> broadcastNewPicture
    273:273:void closeSilently(java.io.Closeable) -> closeSilently
    221:228:int computeInitialSampleSize(android.graphics.BitmapFactory$Options,int,int) -> computeInitialSampleSize
    203:213:int computeSampleSize(android.graphics.BitmapFactory$Options,int,int) -> computeSampleSize
    748:750:java.lang.String createJpegName(long) -> createJpegName
    1183:1189:java.lang.String getCameraModeContentDescription(int,android.content.Context) -> getCameraModeContentDescription
    1237:1244:int getCameraModeCoverIconResId(int,android.content.Context) -> getCameraModeCoverIconResId
    1146:1153:int getCameraModeIconResId(int,android.content.Context) -> getCameraModeIconResId
    1219:1225:int getCameraModeParentModeId(int,android.content.Context) -> getCameraModeParentModeId
    1165:1171:java.lang.String getCameraModeText(int,android.content.Context) -> getCameraModeText
    1201:1207:int getCameraShutterIconId(int,android.content.Context) -> getCameraShutterIconId
    1127:1134:int getCameraThemeColorId(int,android.content.Context) -> getCameraThemeColorId
    471:474:com.android.camera.util.Size getDefaultDisplaySize(android.app.Activity) -> getDefaultDisplaySize
    454:456:int getDisplayRotation(android.app.Activity) -> getDisplayRotation
    1317:1319:int getImageRotation(int,int,boolean) -> getImageRotation
    858:860:int[] getMaxPreviewFpsRange(java.util.List) -> getMaxPreviewFpsRange
    479:483:com.android.camera.util.Size getOptimalPreviewSize(java.util.List,double,android.app.Activity) -> getOptimalPreviewSize
    509:509:int getOptimalPreviewSizeIndex(java.util.List,double,android.app.Activity) -> getOptimalPreviewSizeIndex
    536:579:int getOptimalPreviewSizeIndex(java.util.List,double,java.lang.Double,android.app.Activity) -> getOptimalPreviewSizeIndex
    612:635:com.android.camera.util.Size getOptimalVideoSnapshotPictureSize(java.util.List,int,int) -> getOptimalVideoSnapshotPictureSize
    815:815:int[] getPhotoPreviewFpsRange(com.android.ex.camera2.portability.CameraCapabilities) -> getPhotoPreviewFpsRange
    819:853:int[] getPhotoPreviewFpsRange(java.util.List) -> getPhotoPreviewFpsRange
    719:722:void inlineRectToRectF(android.graphics.RectF,android.graphics.Rect) -> inlineRectToRectF
    81:81:com.android.camera.util.CameraUtil instance() -> instance
    246:263:android.graphics.Bitmap makeBitmap(byte[],int) -> makeBitmap
    1051:1065:void playVideo(com.android.camera.CameraActivity,android.net.Uri,java.lang.String) -> playVideo
    738:744:void prepareMatrix(android.graphics.Matrix,boolean,int,int,int) -> prepareMatrix
    726:727:android.graphics.Rect rectFToRect(android.graphics.RectF) -> rectFToRect
    732:732:android.graphics.RectF rectToRectF(android.graphics.Rect) -> rectToRectF
    990:1010:android.graphics.Point resizeToFill(int,int,int,int,int) -> resizeToFill
    142:142:android.graphics.Bitmap rotate(android.graphics.Bitmap,int) -> rotate
    151:175:android.graphics.Bitmap rotateAndMirror(android.graphics.Bitmap,int,boolean) -> rotateAndMirror
    772:801:void setGpsParameters(com.android.ex.camera2.portability.CameraSettings,android.location.Location) -> setGpsParameters
    293:327:void showError(android.app.Activity,int,int,boolean,java.lang.Exception) -> showError
    867:869:void throwIfCameraDisabled() -> throwIfCameraDisabled
com.android.camera.util.CameraUtil$1 -> com.android.camera.util.CameraUtil$1:
    294:294:void <init>(boolean,android.app.Activity) -> <init>
    297:298:void onClick(android.content.DialogInterface,int) -> onClick
com.android.camera.util.CameraUtil$2 -> com.android.camera.util.CameraUtil$2:
    304:304:void <init>(android.app.Activity,int,java.lang.Exception,boolean) -> <init>
    307:309:void onClick(android.content.DialogInterface,int) -> onClick
com.android.camera.util.CameraUtil$ImageFileNamer -> com.android.camera.util.CameraUtil$ImageFileNamer:
    1027:1028:void <init>(java.lang.String) -> <init>
    1032:1042:java.lang.String generateName(long) -> generateName
com.android.camera.util.CameraUtil$Singleton -> com.android.camera.util.CameraUtil$Singleton:
    73:74:void <clinit>() -> <clinit>
    72:72:com.android.camera.util.CameraUtil access$100() -> access$100
com.android.camera.util.ExifUtil -> com.android.camera.util.ExifUtil:
    38:38:void <clinit>() -> <clinit>
    46:47:void <init>(com.android.camera.exif.ExifInterface) -> <init>
    130:177:void addCaptureResultToExif(com.android.camera.one.v2.camera2proxy.CaptureResultProxy) -> addCaptureResultToExif
    184:184:void addExifTag(int,java.lang.Object) -> addExifTag
    95:95:void addExifVersionToExif() -> addExifVersionToExif
    121:126:void addImageDataToExif(com.android.camera.processing.imagebackend.TaskImageContainer$TaskImage) -> addImageDataToExif
    80:90:void addLocationToExif(android.location.Location) -> addLocationToExif
    116:117:void addMakeAndModelToExif() -> addMakeAndModelToExif
    99:112:void addTimestampToExif() -> addTimestampToExif
    210:210:java.lang.Double log2(java.lang.Float) -> log2
    217:217:java.lang.Double log2(java.lang.Double) -> log2
    60:70:void populateExif(com.google.common.base.Optional,com.google.common.base.Optional,com.google.common.base.Optional) -> populateExif
    190:190:com.android.camera.exif.Rational ratio(java.lang.Long,java.lang.Long) -> ratio
    196:196:com.android.camera.exif.Rational rational(java.lang.Float,java.lang.Long) -> rational
    203:203:com.android.camera.exif.Rational rational(java.lang.Double,java.lang.Long) -> rational
com.android.camera.util.GalleryHelper -> com.android.camera.util.GalleryHelper:
    52:56:java.lang.CharSequence getGalleryAppName(android.content.Context,android.content.Intent) -> getGalleryAppName
    43:43:android.graphics.drawable.Drawable getGalleryIcon(android.content.Context,android.content.Intent) -> getGalleryIcon
    37:37:void setGalleryIntentClassName(android.content.Intent) -> setGalleryIntentClassName
com.android.camera.util.GcamHelper -> com.android.camera.util.GcamHelper:
    43:43:com.android.camera.one.config.OneCameraFeatureConfig$HdrPlusSupportLevel determineHdrPlusSupportLevel(android.content.ContentResolver,boolean) -> determineHdrPlusSupportLevel
com.android.camera.util.GoogleHelpHelper -> com.android.camera.util.GoogleHelpHelper:
    25:25:void <init>(android.app.Activity) -> <init>
com.android.camera.util.Gusterpolator -> com.android.camera.util.Gusterpolator:
    28:60:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    72:80:float getInterpolation(float) -> getInterpolation
com.android.camera.util.IntentHelper -> com.android.camera.util.IntentHelper:
    30:30:void <clinit>() -> <clinit>
    52:52:java.lang.CharSequence getGalleryAppName(android.content.Context,android.content.Intent) -> getGalleryAppName
    48:48:android.graphics.drawable.Drawable getGalleryIcon(android.content.Context,android.content.Intent) -> getGalleryIcon
    33:40:android.content.Intent getGalleryIntent(android.content.Context) -> getGalleryIntent
    56:57:android.content.Intent getVideoPlayerIntent(android.net.Uri) -> getVideoPlayerIntent
com.android.camera.util.JpegUtilNative -> com.android.camera.util.JpegUtilNative:
    35:39:void <clinit>() -> <clinit>
    212:271:int compressJpegFromYUV420Image(com.android.camera.one.v2.camera2proxy.ImageProxy,java.nio.ByteBuffer,int,android.graphics.Rect,int) -> compressJpegFromYUV420Image
    146:159:int compressJpegFromYUV420p(int,int,java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int,java.nio.ByteBuffer,int,int,int,int,int,int) -> compressJpegFromYUV420p
com.android.camera.util.PhotoSphereHelper -> com.android.camera.util.PhotoSphereHelper:
    81:81:void <clinit>() -> <clinit>
    88:88:com.android.camera.util.PhotoSphereHelper$PanoramaMetadata getPanoramaMetadata(android.content.Context,android.net.Uri) -> getPanoramaMetadata
com.android.camera.util.PhotoSphereHelper$PanoramaMetadata -> com.android.camera.util.PhotoSphereHelper$PanoramaMetadata:
    35:37:void <init>(boolean,boolean) -> <init>
com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper -> com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper:
    43:43:void <init>(android.app.Activity) -> <init>
com.android.camera.util.QuickActivity -> com.android.camera.util.QuickActivity:
    57:57:void <clinit>() -> <clinit>
    56:85:void <init>() -> <init>
    56:56:boolean access$000(com.android.camera.util.QuickActivity) -> access$000
    56:56:boolean access$002(com.android.camera.util.QuickActivity,boolean) -> access$002
    56:56:com.android.camera.debug.Log$Tag access$100() -> access$100
    208:212:boolean isKeyguardLocked() -> isKeyguardLocked
    218:222:boolean isKeyguardSecure() -> isKeyguardSecure
    204:204:void logLifecycle(java.lang.String,boolean) -> logLifecycle
    109:115:void onCreate(android.os.Bundle) -> onCreate
    196:199:void onDestroy() -> onDestroy
    99:104:void onNewIntent(android.content.Intent) -> onNewIntent
    160:172:void onPause() -> onPause
    188:191:void onRestart() -> onRestart
    128:155:void onResume() -> onResume
    120:123:void onStart() -> onStart
    177:183:void onStop() -> onStop
    229:233:void requestDismissKeyguard(android.app.Activity,android.app.KeyguardManager$KeyguardDismissCallback) -> requestDismissKeyguard
com.android.camera.util.QuickActivity$1 -> com.android.camera.util.QuickActivity$1:
    85:85:void <init>(com.android.camera.util.QuickActivity) -> <init>
    88:92:void run() -> run
com.android.camera.util.ReleaseHelper -> com.android.camera.util.ReleaseHelper:
    31:31:void showReleaseInfoDialog(android.app.Activity,com.android.camera.util.Callback) -> showReleaseInfoDialog
com.android.camera.util.RemoteShutterHelper -> com.android.camera.util.RemoteShutterHelper:
    26:26:com.android.camera.remote.RemoteShutterListener create(android.content.Context) -> create
com.android.camera.util.RemoteShutterHelper$1 -> com.android.camera.util.RemoteShutterHelper$1:
    26:26:void <init>() -> <init>
com.android.camera.util.Size -> com.android.camera.util.Size:
    40:42:void <init>(android.graphics.Point) -> <init>
    46:48:void <init>(android.util.Size) -> <init>
    51:53:void <init>(int,int) -> <init>
    65:67:void <init>(android.hardware.Camera$Size) -> <init>
    70:72:void <init>(com.android.ex.camera2.portability.Size) -> <init>
    123:123:long area() -> area
    207:209:java.util.List buildListFromCameraSizes(java.util.List) -> buildListFromCameraSizes
    160:162:java.util.List convert(java.util.List) -> convert
    133:138:boolean equals(java.lang.Object) -> equals
    80:80:int getHeight() -> getHeight
    76:76:int getWidth() -> getWidth
    143:143:int hashCode() -> hashCode
    88:88:int height() -> height
    174:179:java.lang.String listToString(java.util.List) -> listToString
    189:194:java.util.List stringToList(java.lang.String) -> stringToList
    147:147:com.android.ex.camera2.portability.Size toPortabilitySize() -> toPortabilitySize
    93:93:java.lang.String toString() -> toString
    84:84:int width() -> width
com.android.camera.util.XmpUtil -> com.android.camera.util.XmpUtil:
    49:74:void <clinit>() -> <clinit>
    106:121:com.adobe.xmp.XMPMeta extractXMPMeta(java.io.InputStream) -> extractXMPMeta
    318:326:int getXMPContentEnd(byte[]) -> getXMPContentEnd
    292:298:boolean hasXMPHeader(byte[]) -> hasXMPHeader
    340:400:java.util.List parse(java.io.InputStream,boolean) -> parse
com.android.camera.util.XmpUtil$Section -> com.android.camera.util.XmpUtil$Section:
    63:63:void <init>() -> <init>
    63:63:void <init>(com.android.camera.util.XmpUtil$1) -> <init>
com.android.camera.widget.AnimationEffects -> com.android.camera.widget.AnimationEffects:
    27:27:void <init>() -> <init>
com.android.camera.widget.AspectRatioDialogLayout -> com.android.camera.widget.AspectRatioDialogLayout:
    50:55:void <init>(android.content.Context,com.android.camera.exif.Rational) -> <init>
    32:32:void access$000(com.android.camera.widget.AspectRatioDialogLayout,com.android.camera.exif.Rational) -> access$000
    32:32:com.android.camera.widget.AspectRatioDialogLayout$AspectRatioDialogListener access$100(com.android.camera.widget.AspectRatioDialogLayout) -> access$100
    32:32:com.android.camera.exif.Rational access$200(com.android.camera.widget.AspectRatioDialogLayout) -> access$200
    64:73:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    108:117:void setAspectRatio(com.android.camera.exif.Rational) -> setAspectRatio
    59:59:void setListener(com.android.camera.widget.AspectRatioDialogLayout$AspectRatioDialogListener) -> setListener
    77:97:void updateSubviewReferences() -> updateSubviewReferences
com.android.camera.widget.AspectRatioDialogLayout$1 -> com.android.camera.widget.AspectRatioDialogLayout$1:
    85:85:void <init>(com.android.camera.widget.AspectRatioDialogLayout) -> <init>
    88:88:void onClick(android.view.View) -> onClick
com.android.camera.widget.AspectRatioDialogLayout$2 -> com.android.camera.widget.AspectRatioDialogLayout$2:
    91:91:void <init>(com.android.camera.widget.AspectRatioDialogLayout) -> <init>
    94:94:void onClick(android.view.View) -> onClick
com.android.camera.widget.AspectRatioDialogLayout$3 -> com.android.camera.widget.AspectRatioDialogLayout$3:
    97:97:void <init>(com.android.camera.widget.AspectRatioDialogLayout) -> <init>
    100:101:void onClick(android.view.View) -> onClick
com.android.camera.widget.Cling -> com.android.camera.widget.Cling:
    33:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    33:52:void <init>(android.content.Context) -> <init>
    31:31:boolean access$002(com.android.camera.widget.Cling,boolean) -> access$002
    80:95:void adjustPosition() -> adjustPosition
    100:103:void draw(android.graphics.Canvas) -> draw
    60:72:void setReferenceView(android.view.View) -> setReferenceView
com.android.camera.widget.Cling$1 -> com.android.camera.widget.Cling$1:
    36:36:void <init>(com.android.camera.widget.Cling) -> <init>
    40:42:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.camera.widget.ExternalViewerButton -> com.android.camera.widget.ExternalViewerButton:
    37:37:void <clinit>() -> <clinit>
    38:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:77:void clearClingForViewer(int) -> clearClingForViewer
    84:84:com.android.camera.widget.Cling getClingForViewer(int) -> getClingForViewer
    114:115:void hideClings() -> hideClings
    49:53:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    61:65:void setClingForViewer(int,com.android.camera.widget.Cling) -> setClingForViewer
    92:106:void setState(int) -> setState
    138:143:void updateClingVisibility() -> updateClingVisibility
com.android.camera.widget.FilmstripLayout -> com.android.camera.widget.FilmstripLayout:
    65:117:void <init>(android.content.Context) -> <init>
    65:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:127:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    48:48:float access$000(com.android.camera.widget.FilmstripLayout) -> access$000
    48:48:com.android.camera.widget.FilmstripView access$100(com.android.camera.widget.FilmstripLayout) -> access$100
    48:48:com.android.camera.ui.FilmstripGestureRecognizer$Listener access$1000(com.android.camera.widget.FilmstripLayout) -> access$1000
    48:48:int access$1100(com.android.camera.widget.FilmstripLayout) -> access$1100
    48:48:int access$1102(com.android.camera.widget.FilmstripLayout,int) -> access$1102
    48:48:void access$1200(com.android.camera.widget.FilmstripLayout) -> access$1200
    48:48:void access$1300(com.android.camera.widget.FilmstripLayout,float) -> access$1300
    48:48:android.animation.Animator$AnimatorListener access$1400(com.android.camera.widget.FilmstripLayout) -> access$1400
    48:48:void access$1500(com.android.camera.widget.FilmstripLayout) -> access$1500
    48:48:void access$200(com.android.camera.widget.FilmstripLayout) -> access$200
    48:48:void access$300(com.android.camera.widget.FilmstripLayout,float) -> access$300
    48:48:com.android.camera.widget.FilmstripLayout$FilmstripBackground access$400(com.android.camera.widget.FilmstripLayout) -> access$400
    48:48:android.os.Handler access$600(com.android.camera.widget.FilmstripLayout) -> access$600
    48:48:android.widget.FrameLayout access$700(com.android.camera.widget.FilmstripLayout) -> access$700
    48:48:com.android.camera.ui.FilmstripGestureRecognizer access$800(com.android.camera.widget.FilmstripLayout) -> access$800
    48:48:android.animation.ValueAnimator access$900(com.android.camera.widget.FilmstripLayout) -> access$900
    270:272:boolean animateHide() -> animateHide
    179:180:void hide() -> hide
    282:283:void hideFilmstrip() -> hideFilmstrip
    131:161:void init(android.content.Context) -> init
    198:201:void notifyHidden() -> notifyHidden
    205:215:void notifyShown() -> notifyShown
    265:265:boolean onBackPressed() -> onBackPressed
    246:260:void onFinishInflate() -> onFinishInflate
    236:239:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    221:225:void onLayout(boolean,int,int,int,int) -> onLayout
    315:316:void onSwipeOut() -> onSwipeOut
    321:322:void onSwipeOutBegin() -> onSwipeOutBegin
    231:231:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    292:301:void runAnimation(float,float) -> runAnimation
    166:174:void setFilmstripListener(com.android.camera.filmstrip.FilmstripContentPanel$Listener) -> setFilmstripListener
    191:193:void setVisibility(int) -> setVisibility
    287:288:void showFilmstrip() -> showFilmstrip
    305:306:void translateContentLayout(float) -> translateContentLayout
    310:311:void translateContentLayoutByPixel(float) -> translateContentLayoutByPixel
com.android.camera.widget.FilmstripLayout$1 -> com.android.camera.widget.FilmstripLayout$1:
    74:74:void <init>(com.android.camera.widget.FilmstripLayout) -> <init>
    96:96:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    84:89:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    79:79:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.widget.FilmstripLayout$2 -> com.android.camera.widget.FilmstripLayout$2:
    106:106:void <init>(com.android.camera.widget.FilmstripLayout) -> <init>
    109:110:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.FilmstripLayout$3 -> com.android.camera.widget.FilmstripLayout$3:
    145:145:void <init>(com.android.camera.widget.FilmstripLayout) -> <init>
    148:148:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    153:153:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    158:158:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
com.android.camera.widget.FilmstripLayout$4 -> com.android.camera.widget.FilmstripLayout$4:
    247:247:void <init>(com.android.camera.widget.FilmstripLayout) -> <init>
    253:255:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.android.camera.widget.FilmstripLayout$FilmstripBackground -> com.android.camera.widget.FilmstripLayout$FilmstripBackground:
    489:493:void <init>(com.android.camera.widget.FilmstripLayout) -> <init>
    525:532:void draw(android.graphics.Canvas) -> draw
    506:506:void setAlpha(int) -> setAlpha
    510:510:void setAlpha(float) -> setAlpha
    515:515:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    501:501:void setOffset(int) -> setOffset
com.android.camera.widget.FilmstripLayout$OpenFilmstripGesture -> com.android.camera.widget.FilmstripLayout$OpenFilmstripGesture:
    331:331:void <init>(com.android.camera.widget.FilmstripLayout) -> <init>
    331:331:void <init>(com.android.camera.widget.FilmstripLayout,com.android.camera.widget.FilmstripLayout$1) -> <init>
    411:413:boolean flingShouldOpenFilmstrip(float) -> flingShouldOpenFilmstrip
    399:400:boolean onDoubleTap(float,float) -> onDoubleTap
    446:447:boolean onDown(float,float) -> onDown
    418:421:boolean onFling(float,float) -> onFling
    474:474:void onLongPress(float,float) -> onLongPress
    383:384:boolean onMouseScroll(float,float) -> onMouseScroll
    438:439:boolean onScale(float,float,float) -> onScale
    430:431:boolean onScaleBegin(float,float) -> onScaleBegin
    479:480:void onScaleEnd() -> onScaleEnd
    334:377:boolean onScroll(float,float,float,float) -> onScroll
    391:392:boolean onSingleTapUp(float,float) -> onSingleTapUp
    454:468:boolean onUp(float,float) -> onUp
com.android.camera.widget.FilmstripView -> com.android.camera.widget.FilmstripView:
    86:86:void <clinit>() -> <clinit>
    123:595:void <init>(android.content.Context) -> <init>
    123:601:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    123:607:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    58:58:com.android.camera.debug.Log$Tag access$000() -> access$000
    58:58:float access$100(com.android.camera.widget.FilmstripView) -> access$100
    58:58:float access$102(com.android.camera.widget.FilmstripView,float) -> access$102
    58:58:void access$1300(com.android.camera.widget.FilmstripView) -> access$1300
    58:58:void access$1400(com.android.camera.widget.FilmstripView,com.android.camera.filmstrip.FilmstripDataAdapter$UpdateReporter) -> access$1400
    58:58:void access$1500(com.android.camera.widget.FilmstripView,int) -> access$1500
    58:58:com.android.camera.filmstrip.FilmstripController$FilmstripListener access$1600(com.android.camera.widget.FilmstripView) -> access$1600
    58:58:int access$1700(com.android.camera.widget.FilmstripView) -> access$1700
    58:58:void access$1800(com.android.camera.widget.FilmstripView) -> access$1800
    58:58:void access$1900(com.android.camera.widget.FilmstripView,int) -> access$1900
    58:58:int access$2100(com.android.camera.widget.FilmstripView) -> access$2100
    58:58:int access$2102(com.android.camera.widget.FilmstripView,int) -> access$2102
    58:58:int access$2116(com.android.camera.widget.FilmstripView,float) -> access$2116
    58:58:boolean access$2200(com.android.camera.widget.FilmstripView) -> access$2200
    58:58:void access$2400(com.android.camera.widget.FilmstripView) -> access$2400
    58:58:boolean access$2500(com.android.camera.widget.FilmstripView) -> access$2500
    58:58:void access$2600(com.android.camera.widget.FilmstripView,int) -> access$2600
    58:58:void access$2700(com.android.camera.widget.FilmstripView) -> access$2700
    58:58:void access$2800(com.android.camera.widget.FilmstripView) -> access$2800
    58:58:void access$2900(com.android.camera.widget.FilmstripView) -> access$2900
    58:58:void access$300(com.android.camera.widget.FilmstripView,android.view.View,int) -> access$300
    58:58:void access$3000(com.android.camera.widget.FilmstripView) -> access$3000
    58:58:void access$3100(com.android.camera.widget.FilmstripView,int) -> access$3100
    58:58:void access$3200(com.android.camera.widget.FilmstripView,com.android.camera.filmstrip.FilmstripDataAdapter) -> access$3200
    58:58:boolean access$3300(com.android.camera.widget.FilmstripView) -> access$3300
    58:58:boolean access$3400(com.android.camera.widget.FilmstripView) -> access$3400
    58:58:void access$3500(com.android.camera.widget.FilmstripView,com.android.camera.filmstrip.FilmstripController$FilmstripListener) -> access$3500
    58:58:int access$3600(com.android.camera.widget.FilmstripView) -> access$3600
    58:58:com.android.camera.filmstrip.FilmstripDataAdapter access$3700(com.android.camera.widget.FilmstripView) -> access$3700
    58:58:boolean access$3800(com.android.camera.widget.FilmstripView) -> access$3800
    58:58:void access$3900(com.android.camera.widget.FilmstripView) -> access$3900
    58:58:void access$4000(com.android.camera.widget.FilmstripView) -> access$4000
    58:58:android.graphics.Rect access$4100(com.android.camera.widget.FilmstripView) -> access$4100
    58:58:com.android.camera.ui.ZoomView access$4200(com.android.camera.widget.FilmstripView) -> access$4200
    58:58:void access$4300(com.android.camera.widget.FilmstripView) -> access$4300
    58:58:void access$4500(com.android.camera.widget.FilmstripView) -> access$4500
    58:58:float access$4800(com.android.camera.widget.FilmstripView) -> access$4800
    58:58:void access$4900(com.android.camera.widget.FilmstripView) -> access$4900
    58:58:com.android.camera.widget.FilmstripView$FilmstripControllerImpl access$500(com.android.camera.widget.FilmstripView) -> access$500
    58:58:boolean access$5000(com.android.camera.widget.FilmstripView) -> access$5000
    58:58:void access$5600(com.android.camera.widget.FilmstripView,int) -> access$5600
    58:58:boolean access$5700(com.android.camera.widget.FilmstripView) -> access$5700
    58:58:boolean access$5702(com.android.camera.widget.FilmstripView,boolean) -> access$5702
    58:58:void access$5800(com.android.camera.widget.FilmstripView,int) -> access$5800
    58:58:void access$5900(com.android.camera.widget.FilmstripView,int) -> access$5900
    58:58:com.android.camera.CameraActivity access$600(com.android.camera.widget.FilmstripView) -> access$600
    58:58:void access$6000(com.android.camera.widget.FilmstripView,com.android.camera.widget.FilmstripView$ViewItem) -> access$6000
    58:58:int access$6100(com.android.camera.widget.FilmstripView) -> access$6100
    58:58:int access$6102(com.android.camera.widget.FilmstripView,int) -> access$6102
    58:58:void access$6200(com.android.camera.widget.FilmstripView) -> access$6200
    58:58:com.android.camera.widget.FilmstripView$ViewItem[] access$700(com.android.camera.widget.FilmstripView) -> access$700
    997:1003:void adjustChildZOrder() -> adjustChildZOrder
    1336:1459:void animateItemRemoval(int) -> animateItemRemoval
    829:855:com.android.camera.widget.FilmstripView$ViewItem buildViewItemAt(int) -> buildViewItemAt
    969:985:boolean clampCenterX() -> clampCenterX
    1854:1855:void demoteData(int) -> demoteData
    1094:1126:void fadeAndScaleRightViewItem(int) -> fadeAndScaleRightViewItem
    1467:1468:int findItemInBufferByAdapterIndex(int) -> findItemInBufferByAdapterIndex
    801:819:int findTheNearestView(int) -> findTheNearestView
    711:711:com.android.camera.filmstrip.FilmstripController getController() -> getController
    1010:1014:int getCurrentItemAdapterIndex() -> getCurrentItemAdapterIndex
    718:718:int getCurrentItemLeft() -> getCurrentItemLeft
    1657:1657:com.android.camera.ui.FilmstripGestureRecognizer$Listener getGestureListener() -> getGestureListener
    692:701:android.view.View getRecycledView(int) -> getRecycledView
    1323:1325:void hideZoomView() -> hideZoomView
    1600:1600:boolean inFilmstrip() -> inFilmstrip
    1604:1604:boolean inFullScreen() -> inFullScreen
    1608:1608:boolean inZoomView() -> inZoomView
    611:637:void init(com.android.camera.CameraActivity) -> init
    2485:2485:boolean isCurrentItemCentered() -> isCurrentItemCentered
    1130:1273:void layoutViewItems(boolean) -> layoutViewItems
    758:773:void measureViewItem(com.android.camera.widget.FilmstripView$ViewItem,int,int) -> measureViewItem
    1279:1280:void onDraw(android.graphics.Canvas) -> onDraw
    1860:1862:void onEnterFilmstrip() -> onEnterFilmstrip
    1873:1875:void onEnterFullScreen() -> onEnterFullScreen
    1886:1888:void onEnterFullScreenUiHidden() -> onEnterFullScreenUiHidden
    1900:1901:void onEnterZoomView() -> onEnterZoomView
    1652:1652:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    1613:1637:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1285:1295:void onLayout(boolean,int,int,int,int) -> onLayout
    1867:1868:void onLeaveFilmstrip() -> onLeaveFilmstrip
    1880:1881:void onLeaveFullScreen() -> onLeaveFullScreen
    1893:1895:void onLeaveFullScreenUiHidden() -> onLeaveFullScreenUiHidden
    1906:1906:void onLeaveZoomView() -> onLeaveZoomView
    778:795:void onMeasure(int,int) -> onMeasure
    1647:1647:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1848:1849:void promoteData(int) -> promoteData
    679:687:void recycleView(android.view.View,int) -> recycleView
    1794:1843:void reload() -> reload
    884:894:void removeItem(int) -> removeItem
    879:879:void renderAllThumbnails() -> renderAllThumbnails
    860:865:void renderFullRes(int) -> renderFullRes
    869:874:void renderThumbnail(int) -> renderThumbnail
    1306:1319:void resetZoomView() -> resetZoomView
    1022:1038:void scrollCurrentItemToCenter() -> scrollCurrentItemToCenter
    1557:1561:void setDataAdapter(com.android.camera.filmstrip.FilmstripDataAdapter) -> setDataAdapter
    722:722:void setListener(com.android.camera.filmstrip.FilmstripController$FilmstripListener) -> setListener
    726:726:void setViewGap(int) -> setViewGap
    1330:1332:void slideViewBack(com.android.camera.widget.FilmstripView$ViewItem) -> slideViewBack
    902:959:void stepIfNeeded() -> stepIfNeeded
    1057:1082:void translateLeftViewItem(int,int,float) -> translateLeftViewItem
    1723:1785:void update(com.android.camera.filmstrip.FilmstripDataAdapter$UpdateReporter) -> update
    1476:1553:void updateInsertion(int) -> updateInsertion
    1661:1716:void updateViewItem(int) -> updateViewItem
    733:737:void zoomAtIndexChanged() -> zoomAtIndexChanged
com.android.camera.widget.FilmstripView$1 -> com.android.camera.widget.FilmstripView$1:
    637:637:void <init>(com.android.camera.widget.FilmstripView) -> <init>
    640:645:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    650:673:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.android.camera.widget.FilmstripView$2 -> com.android.camera.widget.FilmstripView$2:
    1442:1442:void <init>(com.android.camera.widget.FilmstripView,com.android.camera.widget.FilmstripView$ViewItem) -> <init>
    1445:1445:void run() -> run
com.android.camera.widget.FilmstripView$3 -> com.android.camera.widget.FilmstripView$3:
    1561:1561:void <init>(com.android.camera.widget.FilmstripView) -> <init>
    1574:1584:void onFilmstripItemInserted(int,com.android.camera.data.FilmstripItem) -> onFilmstripItemInserted
    1564:1564:void onFilmstripItemLoaded() -> onFilmstripItemLoaded
    1589:1594:void onFilmstripItemRemoved(int,com.android.camera.data.FilmstripItem) -> onFilmstripItemRemoved
    1569:1569:void onFilmstripItemUpdated(com.android.camera.filmstrip.FilmstripDataAdapter$UpdateReporter) -> onFilmstripItemUpdated
com.android.camera.widget.FilmstripView$FilmstripControllerImpl -> com.android.camera.widget.FilmstripView$FilmstripControllerImpl:
    1922:1987:void <init>(com.android.camera.widget.FilmstripView) -> <init>
    1913:1913:void access$1000(com.android.camera.widget.FilmstripView$FilmstripControllerImpl) -> access$1000
    1913:1913:void access$1100(com.android.camera.widget.FilmstripView$FilmstripControllerImpl) -> access$1100
    1913:1913:void access$1200(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,boolean) -> access$1200
    1913:1913:void access$2000(com.android.camera.widget.FilmstripView$FilmstripControllerImpl) -> access$2000
    1913:1913:boolean access$2302(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,boolean) -> access$2302
    1913:1913:void access$4400(com.android.camera.widget.FilmstripView$FilmstripControllerImpl) -> access$4400
    1913:1913:android.animation.ValueAnimator access$4602(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,android.animation.ValueAnimator) -> access$4602
    1913:1913:android.animation.AnimatorSet access$4702(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,android.animation.AnimatorSet) -> access$4702
    1913:1913:void access$5500(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,com.android.camera.widget.FilmstripView$ViewItem,float,float) -> access$5500
    1913:1913:float access$6300(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,boolean) -> access$6300
    1913:1913:void access$900(com.android.camera.widget.FilmstripView$FilmstripControllerImpl) -> access$900
    2365:2366:void cancelFlingAnimation() -> cancelFlingAnimation
    2446:2446:void cancelLoadingZoomedImage() -> cancelLoadingZoomedImage
    2371:2372:void cancelZoomAnimation() -> cancelZoomAnimation
    2068:2070:int estimateMaxX(int,int,int) -> estimateMaxX
    2064:2064:int estimateMinX(int,int,int) -> estimateMinX
    2166:2189:void fling(float) -> fling
    2193:2277:void flingInsideZoomView(float,float) -> flingInsideZoomView
    2030:2030:int getCurrentAdapterIndex() -> getCurrentAdapterIndex
    2401:2419:float getCurrentDataMaxScale(boolean) -> getCurrentDataMaxScale
    2388:2392:android.net.Uri getCurrentUri() -> getCurrentUri
    2338:2350:void goToFilmstrip() -> goToFilmstrip
    2451:2457:void goToFirstItem() -> goToFirstItem
    2356:2360:void goToFullScreen() -> goToFullScreen
    2316:2321:boolean goToItem(int) -> goToItem
    2307:2307:boolean goToNextItem() -> goToNextItem
    2312:2312:boolean goToPreviousItem() -> goToPreviousItem
    2040:2040:boolean inFilmstrip() -> inFilmstrip
    2045:2045:boolean inFullScreen() -> inFullScreen
    2461:2461:boolean inZoomView() -> inZoomView
    2465:2465:boolean isFlingAnimationRunning() -> isFlingAnimationRunning
    2055:2055:boolean isScrolling() -> isScrolling
    2474:2476:boolean isVisible(com.android.camera.data.FilmstripItem) -> isVisible
    2469:2469:boolean isZoomAnimationRunning() -> isZoomAnimationRunning
    2425:2442:void loadZoomedImage() -> loadZoomedImage
    2327:2333:void scaleTo(float,int) -> scaleTo
    2152:2161:void scroll(float) -> scroll
    2298:2302:void scrollToPosition(int,int,boolean) -> scrollToPosition
    2035:2035:void setDataAdapter(com.android.camera.filmstrip.FilmstripDataAdapter) -> setDataAdapter
    2025:2025:void setImageGap(int) -> setImageGap
    2050:2050:void setListener(com.android.camera.filmstrip.FilmstripController$FilmstripListener) -> setListener
    2381:2382:void setSurroundingViewsVisible(boolean) -> setSurroundingViewsVisible
    2293:2293:void stopScale() -> stopScale
    2282:2288:boolean stopScrolling(boolean) -> stopScrolling
    2076:2147:void zoomAt(com.android.camera.widget.FilmstripView$ViewItem,float,float) -> zoomAt
com.android.camera.widget.FilmstripView$FilmstripControllerImpl$1 -> com.android.camera.widget.FilmstripView$FilmstripControllerImpl$1:
    1923:1923:void <init>(com.android.camera.widget.FilmstripView$FilmstripControllerImpl) -> <init>
    1938:1960:void onScrollEnd() -> onScrollEnd
    1926:1933:void onScrollUpdate(int,int) -> onScrollUpdate
com.android.camera.widget.FilmstripView$FilmstripControllerImpl$2 -> com.android.camera.widget.FilmstripView$FilmstripControllerImpl$2:
    1966:1966:void <init>(com.android.camera.widget.FilmstripView$FilmstripControllerImpl) -> <init>
    1969:1973:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.FilmstripView$FilmstripControllerImpl$3 -> com.android.camera.widget.FilmstripView$FilmstripControllerImpl$3:
    1987:1987:void <init>(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,com.android.camera.widget.FilmstripView) -> <init>
    2001:2008:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1990:1994:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.widget.FilmstripView$FilmstripControllerImpl$4 -> com.android.camera.widget.FilmstripView$FilmstripControllerImpl$4:
    2087:2087:void <init>(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,float,com.android.camera.widget.FilmstripView$ViewItem,float,float) -> <init>
    2107:2123:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2090:2100:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.widget.FilmstripView$FilmstripControllerImpl$5 -> com.android.camera.widget.FilmstripView$FilmstripControllerImpl$5:
    2137:2137:void <init>(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,com.android.camera.widget.FilmstripView$ViewItem,float,float) -> <init>
    2140:2144:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.FilmstripView$FilmstripControllerImpl$6 -> com.android.camera.widget.FilmstripView$FilmstripControllerImpl$6:
    2231:2231:void <init>(com.android.camera.widget.FilmstripView$FilmstripControllerImpl,android.animation.ValueAnimator,android.animation.ValueAnimator,com.android.camera.widget.FilmstripView$ViewItem) -> <init>
    2234:2238:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.FilmstripView$FilmstripControllerImpl$7 -> com.android.camera.widget.FilmstripView$FilmstripControllerImpl$7:
    2245:2245:void <init>(com.android.camera.widget.FilmstripView$FilmstripControllerImpl) -> <init>
    2248:2248:float getInterpolation(float) -> getInterpolation
com.android.camera.widget.FilmstripView$FilmstripControllerImpl$8 -> com.android.camera.widget.FilmstripView$FilmstripControllerImpl$8:
    2251:2252:void <init>(com.android.camera.widget.FilmstripView$FilmstripControllerImpl) -> <init>
    2269:2269:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2261:2264:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.widget.FilmstripView$FilmstripGestures -> com.android.camera.widget.FilmstripView$FilmstripGestures:
    2604:2612:void <init>(com.android.camera.widget.FilmstripView) -> <init>
    2604:2604:void <init>(com.android.camera.widget.FilmstripView,com.android.camera.widget.FilmstripView$1) -> <init>
    2641:2660:boolean onDoubleTap(float,float) -> onDoubleTap
    2667:2670:boolean onDown(float,float) -> onDown
    2858:2913:boolean onFling(float,float) -> onFling
    2741:2745:void onLongPress(float,float) -> onLongPress
    2845:2850:boolean onMouseScroll(float,float) -> onMouseScroll
    2938:3002:boolean onScale(float,float,float) -> onScale
    2920:2932:boolean onScaleBegin(float,float) -> onScaleBegin
    3011:3031:void onScaleEnd() -> onScaleEnd
    2750:2827:boolean onScroll(float,float,float,float) -> onScroll
    2620:2632:boolean onSingleTapUp(float,float) -> onSingleTapUp
    2679:2735:boolean onUp(float,float) -> onUp
com.android.camera.widget.FilmstripView$FilmstripScrollGesture -> com.android.camera.widget.FilmstripView$FilmstripScrollGesture:
    2501:2559:void <init>(android.content.Context,android.os.Handler,com.android.camera.widget.FilmstripView$FilmstripScrollGesture$Listener,android.animation.TimeInterpolator) -> <init>
    2488:2488:android.widget.Scroller access$5200(com.android.camera.widget.FilmstripView$FilmstripScrollGesture) -> access$5200
    2488:2488:com.android.camera.widget.FilmstripView$FilmstripScrollGesture$Listener access$5300(com.android.camera.widget.FilmstripView$FilmstripScrollGesture) -> access$5300
    2488:2488:android.os.Handler access$5400(com.android.camera.widget.FilmstripView$FilmstripScrollGesture) -> access$5400
    2567:2568:void fling(int,int,int,int,int,int,int,int) -> fling
    2589:2591:void forceFinished(boolean) -> forceFinished
    2585:2585:boolean isFinished() -> isFinished
    2596:2600:void runChecker() -> runChecker
    2578:2581:void startScroll(int,int,int) -> startScroll
com.android.camera.widget.FilmstripView$FilmstripScrollGesture$1 -> com.android.camera.widget.FilmstripView$FilmstripScrollGesture$1:
    2501:2501:void <init>(com.android.camera.widget.FilmstripView$FilmstripScrollGesture) -> <init>
    2504:2512:void run() -> run
com.android.camera.widget.FilmstripView$FilmstripScrollGesture$2 -> com.android.camera.widget.FilmstripView$FilmstripScrollGesture$2:
    2517:2517:void <init>(com.android.camera.widget.FilmstripView$FilmstripScrollGesture) -> <init>
    2520:2520:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.FilmstripView$FilmstripScrollGesture$3 -> com.android.camera.widget.FilmstripView$FilmstripScrollGesture$3:
    2525:2525:void <init>(com.android.camera.widget.FilmstripView$FilmstripScrollGesture) -> <init>
    2528:2528:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2534:2535:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2540:2540:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    2546:2546:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.android.camera.widget.FilmstripView$PlayVideoIntent -> com.android.camera.widget.FilmstripView$PlayVideoIntent:
    69:70:void <init>(com.android.camera.CameraActivity) -> <init>
    78:80:void playVideo(android.net.Uri,java.lang.String) -> playVideo
com.android.camera.widget.FilmstripView$ViewItem -> com.android.camera.widget.FilmstripView$ViewItem:
    179:191:void <init>(int,android.view.View,com.android.camera.data.FilmstripItem,com.android.camera.widget.FilmstripView) -> <init>
    149:149:com.android.camera.widget.FilmstripView access$200(com.android.camera.widget.FilmstripView$ViewItem) -> access$200
    149:149:com.android.camera.data.FilmstripItem access$5100(com.android.camera.widget.FilmstripView$ViewItem) -> access$5100
    149:149:android.view.View access$800(com.android.camera.widget.FilmstripView$ViewItem) -> access$800
    420:429:void addViewToHierarchy() -> addViewToHierarchy
    366:375:void animateAlpha(float,long,android.animation.TimeInterpolator) -> animateAlpha
    318:331:void animateTranslationX(float,long,android.animation.TimeInterpolator) -> animateTranslationX
    344:353:void animateTranslationY(float,long,android.animation.TimeInterpolator) -> animateTranslationY
    521:521:boolean areaContains(float,float) -> areaContains
    446:446:void bringViewToFront() -> bringViewToFront
    247:247:int getAdapterIndex() -> getAdapterIndex
    297:297:float getAlpha() -> getAlpha
    403:403:int getCenterX() -> getCenterX
    195:195:com.android.camera.data.FilmstripItem getData() -> getData
    535:535:int getDrawAreaLeft() -> getDrawAreaLeft
    399:399:void getHitRect(android.graphics.Rect) -> getHitRect
    265:265:int getLeftPosition() -> getLeftPosition
    302:302:int getMeasuredWidth() -> getMeasuredWidth
    275:275:float getTranslationX() -> getTranslationX
    270:270:float getTranslationY() -> getTranslationY
    488:488:android.view.View getView() -> getView
    479:483:android.graphics.RectF getViewRect() -> getViewRect
    408:408:int getVisibility() -> getVisibility
    528:528:int getWidth() -> getWidth
    453:453:float getX() -> getX
    460:460:float getY() -> getY
    471:472:void layoutAt(int,int) -> layoutAt
    502:516:void layoutWithTranslationX(android.graphics.Rect,int,float) -> layoutWithTranslationX
    232:234:void lockAtFullOpacity() -> lockAtFullOpacity
    467:467:void measure(int,int) -> measure
    545:553:void postScale(float,float,float,int,int) -> postScale
    436:438:void removeViewFromHierarchy() -> removeViewFromHierarchy
    223:227:void renderFullRes() -> renderFullRes
    214:218:void renderThumbnail() -> renderThumbnail
    205:209:void renderTiny() -> renderTiny
    574:577:void resetTransform() -> resetTransform
    384:387:void runAnimation(android.animation.ValueAnimator,float,float,long,android.animation.TimeInterpolator) -> runAnimation
    290:291:void setAlpha(float) -> setAlpha
    199:201:void setData(com.android.camera.data.FilmstripItem) -> setData
    255:255:void setIndex(int) -> setIndex
    260:260:void setLeftPosition(int) -> setLeftPosition
    285:285:void setTranslationX(float) -> setTranslationX
    280:280:void setTranslationY(float) -> setTranslationY
    413:413:void setVisibility(int) -> setVisibility
    582:588:java.lang.String toString() -> toString
    392:392:void translateXScaledBy(float) -> translateXScaledBy
    239:239:void unlockOpacity() -> unlockOpacity
    559:570:void updateTransform(float,float,float,float,int,int) -> updateTransform
com.android.camera.widget.FilmstripView$ViewItem$1 -> com.android.camera.widget.FilmstripView$ViewItem$1:
    320:320:void <init>(com.android.camera.widget.FilmstripView$ViewItem) -> <init>
    327:327:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.FilmstripView$ViewItem$2 -> com.android.camera.widget.FilmstripView$ViewItem$2:
    346:346:void <init>(com.android.camera.widget.FilmstripView$ViewItem) -> <init>
    349:349:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.FilmstripView$ViewItem$3 -> com.android.camera.widget.FilmstripView$ViewItem$3:
    368:368:void <init>(com.android.camera.widget.FilmstripView$ViewItem) -> <init>
    371:371:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.FilmstripView$ViewItem$RenderSize -> com.android.camera.widget.FilmstripView$ViewItem$RenderSize:
    150:153:void <clinit>() -> <clinit>
    150:150:void <init>(java.lang.String,int) -> <init>
    150:150:com.android.camera.widget.FilmstripView$ViewItem$RenderSize valueOf(java.lang.String) -> valueOf
    150:150:com.android.camera.widget.FilmstripView$ViewItem$RenderSize[] values() -> values
com.android.camera.widget.IndicatorIconController -> com.android.camera.widget.IndicatorIconController:
    44:44:void <clinit>() -> <clinit>
    65:95:void <init>(com.android.camera.app.AppController,android.view.View) -> <init>
    158:159:void changeVisibility(android.view.View,int) -> changeVisibility
    105:105:void onButtonEnabledChanged(com.android.camera.ButtonManager,int) -> onButtonEnabledChanged
    100:100:void onButtonVisibilityChanged(com.android.camera.ButtonManager,int) -> onButtonVisibilityChanged
    328:353:void onSettingChanged(com.android.camera.settings.SettingsManager,java.lang.String) -> onSettingChanged
    300:322:void setIndicatorState(java.lang.String,java.lang.String,android.widget.ImageView,android.content.res.TypedArray,boolean) -> setIndicatorState
    282:290:void syncCountdownTimerIndicator() -> syncCountdownTimerIndicator
    238:276:void syncExposureIndicator() -> syncExposureIndicator
    167:192:void syncFlashIndicator() -> syncFlashIndicator
    200:214:void syncHdrIndicator() -> syncHdrIndicator
    115:131:void syncIndicatorWithButton(int) -> syncIndicatorWithButton
    145:149:void syncIndicators() -> syncIndicators
    222:233:void syncPanoIndicator() -> syncPanoIndicator
com.android.camera.widget.LocationDialogLayout -> com.android.camera.widget.LocationDialogLayout:
    52:57:void <init>(android.content.Context,boolean) -> <init>
    32:32:boolean access$000(com.android.camera.widget.LocationDialogLayout) -> access$000
    32:32:boolean access$002(com.android.camera.widget.LocationDialogLayout,boolean) -> access$002
    32:32:com.android.camera.widget.LocationDialogLayout$LocationDialogListener access$100(com.android.camera.widget.LocationDialogLayout) -> access$100
    66:74:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    61:61:void setListener(com.android.camera.widget.LocationDialogLayout$LocationDialogListener) -> setListener
    78:88:void updateSubviewReferences() -> updateSubviewReferences
com.android.camera.widget.LocationDialogLayout$1 -> com.android.camera.widget.LocationDialogLayout$1:
    80:80:void <init>(com.android.camera.widget.LocationDialogLayout) -> <init>
    83:83:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.android.camera.widget.LocationDialogLayout$2 -> com.android.camera.widget.LocationDialogLayout$2:
    88:88:void <init>(com.android.camera.widget.LocationDialogLayout) -> <init>
    91:92:void onClick(android.view.View) -> onClick
com.android.camera.widget.ModeOptions -> com.android.camera.widget.ModeOptions:
    45:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:43:float access$002(com.android.camera.widget.ModeOptions,float) -> access$002
    43:43:boolean access$102(com.android.camera.widget.ModeOptions,boolean) -> access$102
    43:43:boolean access$202(com.android.camera.widget.ModeOptions,boolean) -> access$202
    43:43:android.view.ViewGroup access$300(com.android.camera.widget.ModeOptions) -> access$300
    43:43:android.view.ViewGroup access$302(com.android.camera.widget.ModeOptions,android.view.ViewGroup) -> access$302
    43:43:boolean access$400(com.android.camera.widget.ModeOptions) -> access$400
    43:43:android.view.View access$500(com.android.camera.widget.ModeOptions) -> access$500
    43:43:android.view.ViewGroup access$600(com.android.camera.widget.ModeOptions) -> access$600
    394:402:void animateHidden() -> animateHidden
    378:390:void animateVisible() -> animateVisible
    152:155:int getMainBar() -> getMainBar
    102:102:boolean isHiddenOrHiding() -> isHiddenOrHiding
    212:217:void onDraw(android.graphics.Canvas) -> onDraw
    120:127:void onFinishInflate() -> onFinishInflate
    183:207:void onLayout(boolean,int,int,int,int) -> onLayout
    163:176:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    111:111:void setListener(com.android.camera.widget.ModeOptions$Listener) -> setListener
    137:148:void setMainBar(int) -> setMainBar
    115:115:void setViewToShowHide(android.view.View) -> setViewToShowHide
    236:373:void setupAnimators() -> setupAnimators
    221:228:void setupToggleButtonParams() -> setupToggleButtonParams
    131:133:void showExposureOptions() -> showExposureOptions
com.android.camera.widget.ModeOptions$1 -> com.android.camera.widget.ModeOptions$1:
    251:251:void <init>(com.android.camera.widget.ModeOptions) -> <init>
    254:256:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.ModeOptions$2 -> com.android.camera.widget.ModeOptions$2:
    259:259:void <init>(com.android.camera.widget.ModeOptions) -> <init>
    262:263:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.widget.ModeOptions$3 -> com.android.camera.widget.ModeOptions$3:
    269:269:void <init>(com.android.camera.widget.ModeOptions) -> <init>
    272:272:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.ModeOptions$4 -> com.android.camera.widget.ModeOptions$4:
    275:275:void <init>(com.android.camera.widget.ModeOptions) -> <init>
    278:278:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.widget.ModeOptions$5 -> com.android.camera.widget.ModeOptions$5:
    297:297:void <init>(com.android.camera.widget.ModeOptions,android.view.View) -> <init>
    300:305:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.ModeOptions$6 -> com.android.camera.widget.ModeOptions$6:
    326:326:void <init>(com.android.camera.widget.ModeOptions) -> <init>
    329:332:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.ModeOptions$7 -> com.android.camera.widget.ModeOptions$7:
    335:335:void <init>(com.android.camera.widget.ModeOptions) -> <init>
    338:342:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.widget.ModeOptions$8 -> com.android.camera.widget.ModeOptions$8:
    349:349:void <init>(com.android.camera.widget.ModeOptions) -> <init>
    352:353:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.ModeOptions$9 -> com.android.camera.widget.ModeOptions$9:
    356:356:void <init>(com.android.camera.widget.ModeOptions) -> <init>
    359:367:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.widget.ModeOptionsOverlay -> com.android.camera.widget.ModeOptionsOverlay:
    46:46:void <clinit>() -> <clinit>
    57:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:com.android.camera.widget.ModeOptions access$000(com.android.camera.widget.ModeOptionsOverlay) -> access$000
    187:213:void checkOrientation(int) -> checkOrientation
    156:156:void closeModeOptions() -> closeModeOptions
    75:75:float getModeOptionsToggleWidth() -> getModeOptionsToggleWidth
    67:67:boolean isModeOptionsHidden() -> isModeOptionsHidden
    161:162:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    104:122:void onFinishInflate() -> onFinishInflate
    167:174:void onMeasure(int,int) -> onMeasure
    127:127:void onPreviewTouched(android.view.MotionEvent) -> onPreviewTouched
    132:132:void onShutterButtonClick() -> onShutterButtonClick
    82:82:void setCaptureLayoutHelper(com.android.camera.CaptureLayoutHelper) -> setCaptureLayoutHelper
    99:99:void setModeOptionsListener(com.android.camera.widget.ModeOptions$Listener) -> setModeOptionsListener
    86:86:void setToggleClickable(boolean) -> setToggleClickable
    90:90:void showExposureOptions() -> showExposureOptions
com.android.camera.widget.ModeOptionsOverlay$1 -> com.android.camera.widget.ModeOptionsOverlay$1:
    106:106:void <init>(com.android.camera.widget.ModeOptionsOverlay) -> <init>
    109:109:void onClick(android.view.View) -> onClick
com.android.camera.widget.ModeOptionsOverlay$2 -> com.android.camera.widget.ModeOptionsOverlay$2:
    114:114:void <init>(com.android.camera.widget.ModeOptionsOverlay) -> <init>
    117:117:void onClick(android.view.View) -> onClick
com.android.camera.widget.Preloader -> com.android.camera.widget.Preloader:
    20:20:void <clinit>() -> <clinit>
    61:77:void <init>(int,com.android.camera.widget.Preloader$ItemSource,com.android.camera.widget.Preloader$ItemLoader) -> <init>
    133:136:void cancelAllLoads() -> cancelAllLoads
    147:171:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    91:112:void preload(int,boolean) -> preload
    116:128:void registerLoadTokens(java.util.List) -> registerLoadTokens
com.android.camera.widget.RoundedThumbnailView -> com.android.camera.widget.RoundedThumbnailView:
    77:77:void <clinit>() -> <clinit>
    200:285:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:76:float access$002(com.android.camera.widget.RoundedThumbnailView,float) -> access$002
    76:76:com.google.common.base.Optional access$100(com.android.camera.widget.RoundedThumbnailView) -> access$100
    76:76:float access$1002(com.android.camera.widget.RoundedThumbnailView,float) -> access$1002
    76:76:float access$202(com.android.camera.widget.RoundedThumbnailView,float) -> access$202
    76:76:float access$302(com.android.camera.widget.RoundedThumbnailView,float) -> access$302
    76:76:com.android.camera.widget.RoundedThumbnailView$RevealRequest access$400(com.android.camera.widget.RoundedThumbnailView) -> access$400
    76:76:void access$500(com.android.camera.widget.RoundedThumbnailView) -> access$500
    76:76:float access$602(com.android.camera.widget.RoundedThumbnailView,float) -> access$602
    76:76:float access$702(com.android.camera.widget.RoundedThumbnailView,float) -> access$702
    76:76:float access$800(com.android.camera.widget.RoundedThumbnailView) -> access$800
    76:76:float access$900(com.android.camera.widget.RoundedThumbnailView) -> access$900
    454:467:void clearAnimations() -> clearAnimations
    400:400:float getThumbnailFinalDiameter() -> getThumbnailFinalDiameter
    391:391:float getThumbnailPadding() -> getThumbnailPadding
    437:446:void hideThumbnail() -> hideThumbnail
    297:372:void onDraw(android.graphics.Canvas) -> onDraw
    291:292:void onMeasure(int,int) -> onMeasure
    591:593:void processRevealRequests() -> processRevealRequests
    477:587:void runPendingRequestAnimation() -> runPendingRequestAnimation
    382:382:void setCallback(com.android.camera.widget.RoundedThumbnailView$Callback) -> setCallback
    422:429:void setThumbnail(android.graphics.Bitmap,int) -> setThumbnail
    410:412:void startRevealThumbnailAnimation(java.lang.String) -> startRevealThumbnailAnimation
com.android.camera.widget.RoundedThumbnailView$1 -> com.android.camera.widget.RoundedThumbnailView$1:
    200:200:void <init>(com.android.camera.widget.RoundedThumbnailView) -> <init>
    205:226:void onClick(android.view.View) -> onClick
com.android.camera.widget.RoundedThumbnailView$1$1 -> com.android.camera.widget.RoundedThumbnailView$1$1:
    209:209:void <init>(com.android.camera.widget.RoundedThumbnailView$1) -> <init>
    212:213:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.RoundedThumbnailView$1$2 -> com.android.camera.widget.RoundedThumbnailView$1$2:
    216:216:void <init>(com.android.camera.widget.RoundedThumbnailView$1) -> <init>
    219:222:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.widget.RoundedThumbnailView$2 -> com.android.camera.widget.RoundedThumbnailView$2:
    506:506:void <init>(com.android.camera.widget.RoundedThumbnailView) -> <init>
    509:515:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.RoundedThumbnailView$3 -> com.android.camera.widget.RoundedThumbnailView$3:
    525:525:void <init>(com.android.camera.widget.RoundedThumbnailView) -> <init>
    528:529:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.RoundedThumbnailView$4 -> com.android.camera.widget.RoundedThumbnailView$4:
    536:536:void <init>(com.android.camera.widget.RoundedThumbnailView) -> <init>
    539:542:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.widget.RoundedThumbnailView$5 -> com.android.camera.widget.RoundedThumbnailView$5:
    560:560:void <init>(com.android.camera.widget.RoundedThumbnailView) -> <init>
    563:565:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.camera.widget.RoundedThumbnailView$6 -> com.android.camera.widget.RoundedThumbnailView$6:
    569:569:void <init>(com.android.camera.widget.RoundedThumbnailView) -> <init>
    572:578:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.android.camera.widget.RoundedThumbnailView$RevealRequest -> com.android.camera.widget.RoundedThumbnailView$RevealRequest:
    628:630:void <init>(float,java.lang.String) -> <init>
    745:752:android.graphics.Bitmap cropCenterBitmap(android.graphics.Bitmap) -> cropCenterBitmap
    716:716:void finishRippleAnimation() -> finishRippleAnimation
    709:709:void finishThumbnailAnimation() -> finishThumbnailAnimation
    639:639:java.lang.String getAccessibilityString() -> getAccessibilityString
    648:648:android.graphics.Paint getThumbnailPaint() -> getThumbnailPaint
    702:702:boolean isFinished() -> isFinished
    656:692:void precomputeThumbnailPaint(android.graphics.Bitmap,int) -> precomputeThumbnailPaint
    728:732:void setThumbnailBitmap(android.graphics.Bitmap,int) -> setThumbnailBitmap
com.android.camera.widget.SettingsCling -> com.android.camera.widget.SettingsCling:
    37:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    97:99:void onDraw(android.graphics.Canvas) -> onDraw
    63:92:void updatePosition(android.view.View) -> updatePosition
com.android.camera2.R$styleable -> com.android.camera2.R$styleable:
    3313:4761:void <clinit>() -> <clinit>
com.android.ex.camera2.portability.AndroidCamera2AgentImpl -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl:
    60:60:void <clinit>() -> <clinit>
    86:100:void <init>(android.content.Context) -> <init>
    59:59:com.android.ex.camera2.portability.debug.Log$Tag access$000() -> access$000
    59:59:com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCamera2AgentImpl) -> access$100
    59:59:java.util.List access$200(com.android.ex.camera2.portability.AndroidCamera2AgentImpl) -> access$200
    59:59:com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler access$2300(com.android.ex.camera2.portability.AndroidCamera2AgentImpl) -> access$2300
    59:59:com.android.ex.camera2.portability.DispatchThread access$2400(com.android.ex.camera2.portability.AndroidCamera2AgentImpl) -> access$2400
    59:59:android.media.MediaActionSound access$2700(com.android.ex.camera2.portability.AndroidCamera2AgentImpl) -> access$2700
    59:59:android.hardware.camera2.CameraManager access$300(com.android.ex.camera2.portability.AndroidCamera2AgentImpl) -> access$300
    59:59:com.android.ex.camera2.portability.CameraExceptionHandler access$800(com.android.ex.camera2.portability.AndroidCamera2AgentImpl) -> access$800
    144:145:com.android.ex.camera2.portability.CameraDeviceInfo getCameraDeviceInfo() -> getCameraDeviceInfo
    166:166:com.android.ex.camera2.portability.CameraExceptionHandler getCameraExceptionHandler() -> getCameraExceptionHandler
    151:151:android.os.Handler getCameraHandler() -> getCameraHandler
    161:161:com.android.ex.camera2.portability.CameraStateHolder getCameraState() -> getCameraState
    156:156:com.android.ex.camera2.portability.DispatchThread getDispatchThread() -> getDispatchThread
    171:171:void setCameraExceptionHandler(com.android.ex.camera2.portability.CameraExceptionHandler) -> setCameraExceptionHandler
    110:132:boolean updateCameraDevices() -> updateCameraDevices
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2DeviceInfo -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2DeviceInfo:
    1297:1321:void <init>(android.hardware.camera2.CameraManager,java.lang.String[],int) -> <init>
    1326:1329:com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics getCharacteristics(int) -> getCharacteristics
    1347:1347:int getFirstFrontCameraId() -> getFirstFrontCameraId
    1337:1337:int getNumberOfCameras() -> getNumberOfCameras
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2DeviceInfo$AndroidCharacteristics2 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2DeviceInfo$AndroidCharacteristics2:
    1353:1354:void <init>(android.hardware.camera2.CameraCharacteristics) -> <init>
    1403:1403:float[] convertRectToPoly(android.graphics.RectF) -> convertRectToPoly
    1378:1393:android.graphics.Matrix getPreviewTransform(int,android.graphics.RectF,android.graphics.RectF) -> getPreviewTransform
    1371:1371:int getSensorOrientation() -> getSensorOrientation
    1359:1360:boolean isFacingBack() -> isFacingBack
    1365:1366:boolean isFacingFront() -> isFacingFront
    1409:1414:float[] rotate(float[],int) -> rotate
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl:
    989:996:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl,com.android.ex.camera2.portability.AndroidCamera2AgentImpl,int,android.hardware.camera2.CameraDevice,com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics,android.hardware.camera2.CameraCharacteristics) -> <init>
    975:975:boolean access$2600(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl) -> access$2600
    1218:1228:boolean applySettings(com.android.ex.camera2.portability.CameraSettings) -> applySettings
    1065:1091:void autoFocus(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraAFCallback) -> autoFocus
    1019:1019:com.android.ex.camera2.portability.CameraAgent getAgent() -> getAgent
    1245:1245:android.os.Handler getCameraHandler() -> getCameraHandler
    1005:1005:int getCameraId() -> getCameraId
    1255:1255:com.android.ex.camera2.portability.CameraStateHolder getCameraState() -> getCameraState
    1015:1015:com.android.ex.camera2.portability.CameraCapabilities getCapabilities() -> getCapabilities
    1010:1010:com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics getCharacteristics() -> getCharacteristics
    1250:1250:com.android.ex.camera2.portability.DispatchThread getDispatchThread() -> getDispatchThread
    1209:1212:com.android.ex.camera2.portability.CameraSettings getSettings() -> getSettings
    1099:1123:void setAutoFocusMoveCallback(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraAFMoveCallback) -> setAutoFocusMoveCallback
    1032:1033:void setPreviewTexture(android.graphics.SurfaceTexture) -> setPreviewTexture
    1134:1178:void takePicture(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraShutterCallback,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback) -> takePicture
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$1 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$1:
    1065:1065:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl,com.android.ex.camera2.portability.CameraAgent$CameraAFCallback,android.os.Handler) -> <init>
    1069:1087:void run() -> run
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$1$1 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$1$1:
    1070:1070:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$1) -> <init>
    1074:1074:void onAutoFocus(boolean,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onAutoFocus
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$1$1$1 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$1$1$1:
    1074:1074:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$1$1,boolean,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> <init>
    1077:1077:void run() -> run
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$2 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$2:
    1099:1099:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl,com.android.ex.camera2.portability.CameraAgent$CameraAFMoveCallback,android.os.Handler) -> <init>
    1103:1119:void run() -> run
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$2$1 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$2$1:
    1104:1104:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$2) -> <init>
    1108:1108:void onAutoFocusMoving(boolean,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onAutoFocusMoving
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$2$1$1 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$2$1$1:
    1108:1108:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$2$1,boolean,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> <init>
    1111:1111:void run() -> run
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$3 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$3:
    1135:1135:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl,com.android.ex.camera2.portability.CameraAgent$CameraShutterCallback,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback) -> <init>
    1139:1140:void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long) -> onCaptureStarted
    1153:1164:void onImageAvailable(android.media.ImageReader) -> onImageAvailable
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$3$1 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$3$1:
    1140:1140:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$3) -> <init>
    1143:1146:void run() -> run
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$3$2 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$3$2:
    1158:1158:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$3,byte[]) -> <init>
    1161:1161:void run() -> run
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$4 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl$4:
    1167:1167:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl,com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener) -> <init>
    1171:1174:void run() -> run
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2StateHolder -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2StateHolder:
    1281:1281:void <init>() -> <init>
    1285:1285:void <init>(int) -> <init>
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler:
    183:851:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl,android.os.Looper) -> <init>
    178:178:com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback access$1000(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$1000
    178:178:java.lang.String access$1100(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$1100
    178:178:int access$1200(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$1200
    178:178:com.android.ex.camera2.utils.Camera2RequestSettingsSet access$1300(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$1300
    178:178:com.android.ex.camera2.utils.Camera2RequestSettingsSet access$1302(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,com.android.ex.camera2.utils.Camera2RequestSettingsSet) -> access$1302
    178:178:android.graphics.Rect access$1402(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,android.graphics.Rect) -> access$1402
    178:178:boolean access$1502(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,boolean) -> access$1502
    178:178:void access$1600(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,int) -> access$1600
    178:178:android.hardware.camera2.CameraCaptureSession access$1700(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$1700
    178:178:android.hardware.camera2.CameraCaptureSession access$1702(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,android.hardware.camera2.CameraCaptureSession) -> access$1702
    178:178:com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallback access$1800(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$1800
    178:178:com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallback access$1802(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallback) -> access$1802
    178:178:com.android.ex.camera2.portability.CameraAgent$CameraAFMoveCallback access$2000(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$2000
    178:178:int access$2102(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,int) -> access$2102
    178:178:android.media.ImageReader access$2200(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$2200
    178:178:com.android.ex.camera2.portability.CameraAgent$CameraAFCallback access$400(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$400
    178:178:com.android.ex.camera2.portability.CameraAgent$CameraAFCallback access$402(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,com.android.ex.camera2.portability.CameraAgent$CameraAFCallback) -> access$402
    178:178:com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$CameraResultStateCallback access$500(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$500
    178:178:com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl access$600(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$600
    178:178:com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl access$602(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,com.android.ex.camera2.portability.AndroidCamera2AgentImpl$AndroidCamera2ProxyImpl) -> access$602
    178:178:com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener access$700(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$700
    178:178:com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener access$702(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener) -> access$702
    178:178:android.hardware.camera2.CameraDevice access$900(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> access$900
    178:178:android.hardware.camera2.CameraDevice access$902(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,android.hardware.camera2.CameraDevice) -> access$902
    692:708:void applyToRequest(com.android.ex.camera2.portability.AndroidCamera2Settings) -> applyToRequest
    672:675:com.android.ex.camera2.portability.CameraSettings buildSettings(com.android.ex.camera2.portability.AndroidCamera2Capabilities) -> buildSettings
    766:770:void changeState(int) -> changeState
    757:762:void closePreviewSession() -> closePreviewSession
    223:667:void handleMessage(android.os.Message) -> handleMessage
    717:751:void setPreviewTexture(android.graphics.SurfaceTexture) -> setPreviewTexture
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$1 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$1:
    403:404:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,com.android.ex.camera2.portability.CameraAgent$CameraAFCallback) -> <init>
    421:429:void checkAfState(android.hardware.camera2.CaptureResult) -> checkAfState
    417:417:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    437:438:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    410:410:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2:
    582:583:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener) -> <init>
    600:608:void checkAeState(android.hardware.camera2.CaptureResult) -> checkAeState
    596:596:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    616:617:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    589:589:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$3 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$3:
    777:777:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> <init>
    806:806:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    811:815:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    780:799:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$4 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$4:
    821:821:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> <init>
    836:839:void onActive(android.hardware.camera2.CameraCaptureSession) -> onActive
    831:831:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    824:825:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$5 -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$5:
    852:855:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> <init>
    871:952:void monitorControlStates(android.hardware.camera2.CaptureResult) -> monitorControlStates
    866:866:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    971:971:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    860:860:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
    963:965:void resetState() -> resetState
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$CameraResultStateCallback -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$CameraResultStateCallback:
    843:843:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler) -> <init>
    843:843:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,com.android.ex.camera2.portability.AndroidCamera2AgentImpl$1) -> <init>
com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener -> com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener:
    174:174:void <init>() -> <init>
    174:174:void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$1) -> <init>
com.android.ex.camera2.portability.AndroidCamera2Capabilities -> com.android.ex.camera2.portability.AndroidCamera2Capabilities:
    39:39:void <clinit>() -> <clinit>
    42:101:void <init>(android.hardware.camera2.CameraCharacteristics) -> <init>
    120:127:void buildFlashModes(android.hardware.camera2.CameraCharacteristics) -> buildFlashModes
    134:139:void buildFocusModes(android.hardware.camera2.CameraCharacteristics) -> buildFocusModes
    108:113:void buildSceneModes(android.hardware.camera2.CameraCharacteristics) -> buildSceneModes
    146:151:void buildWhiteBalances(android.hardware.camera2.CameraCharacteristics) -> buildWhiteBalances
    168:181:com.android.ex.camera2.portability.CameraCapabilities$FocusMode focusModeFromInt(int) -> focusModeFromInt
    196:231:com.android.ex.camera2.portability.CameraCapabilities$SceneMode sceneModeFromInt(int) -> sceneModeFromInt
    246:262:com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance whiteBalanceFromInt(int) -> whiteBalanceFromInt
com.android.ex.camera2.portability.AndroidCamera2Settings -> com.android.ex.camera2.portability.AndroidCamera2Settings:
    44:44:void <clinit>() -> <clinit>
    80:134:void <init>(android.hardware.camera2.CameraDevice,int,android.graphics.Rect,com.android.ex.camera2.portability.Size,com.android.ex.camera2.portability.Size) -> <init>
    139:143:void <init>(com.android.ex.camera2.portability.AndroidCamera2Settings) -> <init>
    148:148:com.android.ex.camera2.portability.CameraSettings copy() -> copy
    558:583:android.graphics.Rect effectiveCropRectFromRequested(android.graphics.Rect,com.android.ex.camera2.portability.Size) -> effectiveCropRectFromRequested
    164:179:com.android.ex.camera2.portability.CameraCapabilities$FlashMode flashModeFromRequest() -> flashModeFromRequest
    253:289:com.android.ex.camera2.utils.Camera2RequestSettingsSet getRequestSettings() -> getRequestSettings
    295:315:android.hardware.camera2.params.MeteringRectangle[] legacyAreasToMeteringRectangles(java.util.List) -> legacyAreasToMeteringRectangles
    204:242:boolean matchesTemplateDefault(android.hardware.camera2.CaptureRequest$Key) -> matchesTemplateDefault
    152:158:java.lang.Object queryTemplateDefaultOrMakeOneUp(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> queryTemplateDefaultOrMakeOneUp
    187:200:void setZoomRatio(float) -> setZoomRatio
    323:324:int toIntConstrained(double,int,int) -> toIntConstrained
    331:362:void updateRequestFlashMode() -> updateRequestFlashMode
    367:400:void updateRequestFocusMode() -> updateRequestFocusMode
    527:538:void updateRequestGpsData() -> updateRequestGpsData
    405:478:void updateRequestSceneMode() -> updateRequestSceneMode
    249:249:void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> updateRequestSettingOrForceToDefault
    483:523:void updateRequestWhiteBalance() -> updateRequestWhiteBalance
com.android.ex.camera2.portability.AndroidCamera2Settings$1 -> com.android.ex.camera2.portability.AndroidCamera2Settings$1:
    332:484:void <clinit>() -> <clinit>
com.android.ex.camera2.portability.AndroidCameraAgentImpl -> com.android.ex.camera2.portability.AndroidCameraAgentImpl:
    49:59:void <clinit>() -> <clinit>
    78:87:void <init>() -> <init>
    48:48:com.android.ex.camera2.portability.debug.Log$Tag access$000() -> access$000
    48:48:com.android.ex.camera2.portability.CameraExceptionHandler access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl) -> access$100
    48:48:com.android.ex.camera2.portability.CameraStateHolder access$200(com.android.ex.camera2.portability.AndroidCameraAgentImpl) -> access$200
    48:48:com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics access$300(com.android.ex.camera2.portability.AndroidCameraAgentImpl) -> access$300
    48:48:com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics access$302(com.android.ex.camera2.portability.AndroidCameraAgentImpl,com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics) -> access$302
    48:48:com.android.ex.camera2.portability.AndroidCameraCapabilities access$400(com.android.ex.camera2.portability.AndroidCameraAgentImpl) -> access$400
    48:48:com.android.ex.camera2.portability.AndroidCameraCapabilities access$402(com.android.ex.camera2.portability.AndroidCameraAgentImpl,com.android.ex.camera2.portability.AndroidCameraCapabilities) -> access$402
    48:48:com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler access$600(com.android.ex.camera2.portability.AndroidCameraAgentImpl) -> access$600
    48:48:com.android.ex.camera2.portability.DispatchThread access$700(com.android.ex.camera2.portability.AndroidCameraAgentImpl) -> access$700
    99:99:com.android.ex.camera2.portability.CameraDeviceInfo getCameraDeviceInfo() -> getCameraDeviceInfo
    119:119:com.android.ex.camera2.portability.CameraExceptionHandler getCameraExceptionHandler() -> getCameraExceptionHandler
    104:104:android.os.Handler getCameraHandler() -> getCameraHandler
    114:114:com.android.ex.camera2.portability.CameraStateHolder getCameraState() -> getCameraState
    109:109:com.android.ex.camera2.portability.DispatchThread getDispatchThread() -> getDispatchThread
    92:94:void recycle() -> recycle
    125:125:void setCameraExceptionHandler(com.android.ex.camera2.portability.CameraExceptionHandler) -> setCameraExceptionHandler
com.android.ex.camera2.portability.AndroidCameraAgentImpl$1 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$1:
    60:60:void <init>(android.os.Handler) -> <init>
    63:63:void onCameraError(int) -> onCameraError
    69:69:void onCameraException(java.lang.RuntimeException,java.lang.String,int,int) -> onCameraException
    74:74:void onDispatchThreadException(java.lang.RuntimeException) -> onDispatchThreadException
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AFMoveCallbackForward -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AFMoveCallbackForward:
    1154:1157:void <init>(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraAFMoveCallback) -> <init>
    1131:1131:com.android.ex.camera2.portability.CameraAgent$CameraProxy access$1000(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AFMoveCallbackForward) -> access$1000
    1131:1131:com.android.ex.camera2.portability.CameraAgent$CameraAFMoveCallback access$1100(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AFMoveCallbackForward) -> access$1100
    1150:1150:com.android.ex.camera2.portability.AndroidCameraAgentImpl$AFMoveCallbackForward getNewInstance(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraAFMoveCallback) -> getNewInstance
    1163:1163:void onAutoFocusMoving(boolean,android.hardware.Camera) -> onAutoFocusMoving
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AFMoveCallbackForward$1 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AFMoveCallbackForward$1:
    1163:1163:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AFMoveCallbackForward,boolean) -> <init>
    1166:1166:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraDeviceInfo -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraDeviceInfo:
    135:140:void <init>(android.hardware.Camera$CameraInfo[],int,int,int) -> <init>
    147:171:com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraDeviceInfo create() -> create
    176:178:com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics getCharacteristics(int) -> getCharacteristics
    196:196:int getFirstFrontCameraId() -> getFirstFrontCameraId
    186:186:int getNumberOfCameras() -> getNumberOfCameras
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraDeviceInfo$AndroidCharacteristics -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraDeviceInfo$AndroidCharacteristics:
    202:203:void <init>(android.hardware.Camera$CameraInfo) -> <init>
    218:218:int getSensorOrientation() -> getSensorOrientation
    208:208:boolean isFacingBack() -> isFacingBack
    213:213:boolean isFacingFront() -> isFacingFront
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl:
    757:757:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl,com.android.ex.camera2.portability.CameraAgent,int,android.hardware.Camera,com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics,com.android.ex.camera2.portability.AndroidCameraCapabilities,com.android.ex.camera2.portability.AndroidCameraAgentImpl$1) -> <init>
    770:775:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl,com.android.ex.camera2.portability.CameraAgent,int,android.hardware.Camera,com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics,com.android.ex.camera2.portability.AndroidCameraCapabilities) -> <init>
    1030:1030:boolean applySettings(com.android.ex.camera2.portability.CameraSettings) -> applySettings
    851:867:void autoFocus(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraAFCallback) -> autoFocus
    804:804:com.android.ex.camera2.portability.CameraAgent getAgent() -> getAgent
    781:784:android.hardware.Camera getCamera() -> getCamera
    1053:1053:android.os.Handler getCameraHandler() -> getCameraHandler
    789:789:int getCameraId() -> getCameraId
    1063:1063:com.android.ex.camera2.portability.CameraStateHolder getCameraState() -> getCameraState
    799:799:com.android.ex.camera2.portability.CameraCapabilities getCapabilities() -> getCapabilities
    1058:1058:com.android.ex.camera2.portability.DispatchThread getDispatchThread() -> getDispatchThread
    1006:1020:android.hardware.Camera$Parameters getParameters() -> getParameters
    1025:1025:com.android.ex.camera2.portability.CameraSettings getSettings() -> getSettings
    886:896:void setAutoFocusMoveCallback(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraAFMoveCallback) -> setAutoFocusMoveCallback
    966:976:void setFaceDetectionCallback(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraFaceDetectionCallback) -> setFaceDetectionCallback
    824:824:void setOneShotPreviewCallback(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraPreviewDataCallback) -> setOneShotPreviewCallback
    950:958:void setZoomChangeListener(android.hardware.Camera$OnZoomChangeListener) -> setZoomChangeListener
    905:943:void takePicture(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraShutterCallback,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback) -> takePicture
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$10 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$10:
    966:966:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraFaceDetectionCallback) -> <init>
    969:972:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$12 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$12:
    1009:1009:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl,android.hardware.Camera$Parameters[],com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle) -> <init>
    1012:1014:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$2 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$2:
    824:824:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraPreviewDataCallback) -> <init>
    827:830:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$4 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$4:
    851:851:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraAFCallback) -> <init>
    854:859:void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$4$1 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$4$1:
    859:859:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$4,boolean) -> <init>
    862:862:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$5 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$5:
    867:867:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl,android.hardware.Camera$AutoFocusCallback) -> <init>
    871:876:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$6 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$6:
    886:886:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraAFMoveCallback) -> <init>
    889:892:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$7 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$7:
    905:905:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback) -> <init>
    908:913:void onPictureTaken(byte[],android.hardware.Camera) -> onPictureTaken
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$7$1 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$7$1:
    913:913:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$7,byte[]) -> <init>
    916:916:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$8 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$8:
    923:923:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraShutterCallback,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback,android.hardware.Camera$PictureCallback) -> <init>
    927:937:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$9 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl$9:
    950:950:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl,android.hardware.Camera$OnZoomChangeListener) -> <init>
    953:954:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraStateHolder -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraStateHolder:
    1078:1078:void <init>() -> <init>
    1082:1082:void <init>(int) -> <init>
com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler:
    263:284:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl,com.android.ex.camera2.portability.CameraAgent,android.os.Looper) -> <init>
    653:723:void applySettingsToParameters(com.android.ex.camera2.portability.CameraSettings,android.hardware.Camera$Parameters) -> applySettingsToParameters
    309:309:void enableShutterSound(boolean) -> enableShutterSound
    350:648:void handleMessage(android.os.Message) -> handleMessage
    333:340:void onError(int,android.hardware.Camera) -> onError
    327:328:void requestTakePicture(android.hardware.Camera$ShutterCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback) -> requestTakePicture
    316:318:void setAutoFocusMoveCallback(android.hardware.Camera,java.lang.Object) -> setAutoFocusMoveCallback
    296:296:void setFaceDetectionListener(android.hardware.Camera$FaceDetectionListener) -> setFaceDetectionListener
    301:303:void setPreviewTexture(java.lang.Object) -> setPreviewTexture
    288:288:void startFaceDetection() -> startFaceDetection
    292:292:void stopFaceDetection() -> stopFaceDetection
    737:744:int zoomRatioToIndex(float,java.util.List) -> zoomRatioToIndex
com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks:
    274:278:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler,android.hardware.Camera$ShutterCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback) -> <init>
com.android.ex.camera2.portability.AndroidCameraAgentImpl$FaceDetectionCallbackForward -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$FaceDetectionCallbackForward:
    1326:1329:void <init>(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraFaceDetectionCallback) -> <init>
    1303:1303:com.android.ex.camera2.portability.CameraAgent$CameraProxy access$1800(com.android.ex.camera2.portability.AndroidCameraAgentImpl$FaceDetectionCallbackForward) -> access$1800
    1303:1303:com.android.ex.camera2.portability.CameraAgent$CameraFaceDetectionCallback access$1900(com.android.ex.camera2.portability.AndroidCameraAgentImpl$FaceDetectionCallbackForward) -> access$1900
    1322:1322:com.android.ex.camera2.portability.AndroidCameraAgentImpl$FaceDetectionCallbackForward getNewInstance(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraFaceDetectionCallback) -> getNewInstance
    1335:1335:void onFaceDetection(android.hardware.Camera$Face[],android.hardware.Camera) -> onFaceDetection
com.android.ex.camera2.portability.AndroidCameraAgentImpl$FaceDetectionCallbackForward$1 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$FaceDetectionCallbackForward$1:
    1335:1335:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$FaceDetectionCallbackForward,android.hardware.Camera$Face[]) -> <init>
    1338:1338:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache:
    232:233:void <init>(android.hardware.Camera) -> <init>
    246:253:android.hardware.Camera$Parameters getBlocking() -> getBlocking
    237:238:void invalidate() -> invalidate
com.android.ex.camera2.portability.AndroidCameraAgentImpl$PictureCallbackForward -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$PictureCallbackForward:
    1241:1244:void <init>(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback) -> <init>
    1218:1218:com.android.ex.camera2.portability.CameraAgent$CameraProxy access$1400(com.android.ex.camera2.portability.AndroidCameraAgentImpl$PictureCallbackForward) -> access$1400
    1218:1218:com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback access$1500(com.android.ex.camera2.portability.AndroidCameraAgentImpl$PictureCallbackForward) -> access$1500
    1237:1237:com.android.ex.camera2.portability.AndroidCameraAgentImpl$PictureCallbackForward getNewInstance(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraPictureCallback) -> getNewInstance
    1250:1250:void onPictureTaken(byte[],android.hardware.Camera) -> onPictureTaken
com.android.ex.camera2.portability.AndroidCameraAgentImpl$PictureCallbackForward$1 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$PictureCallbackForward$1:
    1250:1250:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$PictureCallbackForward,byte[]) -> <init>
    1253:1253:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$PreviewCallbackForward -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$PreviewCallbackForward:
    1285:1288:void <init>(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraPreviewDataCallback) -> <init>
    1262:1262:com.android.ex.camera2.portability.CameraAgent$CameraProxy access$1600(com.android.ex.camera2.portability.AndroidCameraAgentImpl$PreviewCallbackForward) -> access$1600
    1262:1262:com.android.ex.camera2.portability.CameraAgent$CameraPreviewDataCallback access$1700(com.android.ex.camera2.portability.AndroidCameraAgentImpl$PreviewCallbackForward) -> access$1700
    1281:1281:com.android.ex.camera2.portability.AndroidCameraAgentImpl$PreviewCallbackForward getNewInstance(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraPreviewDataCallback) -> getNewInstance
    1294:1294:void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.android.ex.camera2.portability.AndroidCameraAgentImpl$PreviewCallbackForward$1 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$PreviewCallbackForward$1:
    1294:1294:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$PreviewCallbackForward,byte[]) -> <init>
    1297:1297:void run() -> run
com.android.ex.camera2.portability.AndroidCameraAgentImpl$ShutterCallbackForward -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$ShutterCallbackForward:
    1198:1201:void <init>(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraShutterCallback) -> <init>
    1175:1175:com.android.ex.camera2.portability.CameraAgent$CameraProxy access$1200(com.android.ex.camera2.portability.AndroidCameraAgentImpl$ShutterCallbackForward) -> access$1200
    1175:1175:com.android.ex.camera2.portability.CameraAgent$CameraShutterCallback access$1300(com.android.ex.camera2.portability.AndroidCameraAgentImpl$ShutterCallbackForward) -> access$1300
    1194:1194:com.android.ex.camera2.portability.AndroidCameraAgentImpl$ShutterCallbackForward getNewInstance(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$CameraShutterCallback) -> getNewInstance
    1206:1206:void onShutter() -> onShutter
com.android.ex.camera2.portability.AndroidCameraAgentImpl$ShutterCallbackForward$1 -> com.android.ex.camera2.portability.AndroidCameraAgentImpl$ShutterCallbackForward$1:
    1206:1206:void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$ShutterCallbackForward) -> <init>
    1209:1209:void run() -> run
com.android.ex.camera2.portability.AndroidCameraCapabilities -> com.android.ex.camera2.portability.AndroidCameraCapabilities:
    32:32:void <clinit>() -> <clinit>
    37:81:void <init>(android.hardware.Camera$Parameters) -> <init>
    37:86:void <init>(com.android.ex.camera2.portability.AndroidCameraCapabilities) -> <init>
    172:187:void buildFlashModes(android.hardware.Camera$Parameters) -> buildFlashModes
    194:210:void buildFocusModes(android.hardware.Camera$Parameters) -> buildFocusModes
    118:124:void buildPictureSizes(android.hardware.Camera$Parameters) -> buildPictureSizes
    90:94:void buildPreviewFpsRange(android.hardware.Camera$Parameters) -> buildPreviewFpsRange
    98:104:void buildPreviewSizes(android.hardware.Camera$Parameters) -> buildPreviewSizes
    129:165:void buildSceneModes(android.hardware.Camera$Parameters) -> buildSceneModes
    108:114:void buildVideoSizes(android.hardware.Camera$Parameters) -> buildVideoSizes
    217:235:void buildWhiteBalances(android.hardware.Camera$Parameters) -> buildWhiteBalances
com.android.ex.camera2.portability.AndroidCameraCapabilities$FpsComparator -> com.android.ex.camera2.portability.AndroidCameraCapabilities$FpsComparator:
    241:241:void <init>() -> <init>
    241:241:void <init>(com.android.ex.camera2.portability.AndroidCameraCapabilities$1) -> <init>
    241:241:int compare(java.lang.Object,java.lang.Object) -> compare
    244:244:int compare(int[],int[]) -> compare
com.android.ex.camera2.portability.AndroidCameraCapabilities$SizeComparator -> com.android.ex.camera2.portability.AndroidCameraCapabilities$SizeComparator:
    248:248:void <init>() -> <init>
    248:248:void <init>(com.android.ex.camera2.portability.AndroidCameraCapabilities$1) -> <init>
    248:248:int compare(java.lang.Object,java.lang.Object) -> compare
    252:253:int compare(com.android.ex.camera2.portability.Size,com.android.ex.camera2.portability.Size) -> compare
com.android.ex.camera2.portability.AndroidCameraSettings -> com.android.ex.camera2.portability.AndroidCameraSettings:
    26:26:void <clinit>() -> <clinit>
    31:72:void <init>(com.android.ex.camera2.portability.CameraCapabilities,android.hardware.Camera$Parameters) -> <init>
    76:76:void <init>(com.android.ex.camera2.portability.AndroidCameraSettings) -> <init>
    81:81:com.android.ex.camera2.portability.CameraSettings copy() -> copy
com.android.ex.camera2.portability.CameraActions -> com.android.ex.camera2.portability.CameraActions:
    116:116:java.lang.String stringify(int) -> stringify
com.android.ex.camera2.portability.CameraAgent -> com.android.ex.camera2.portability.CameraAgent:
    48:48:void <clinit>() -> <clinit>
    45:45:void <init>() -> <init>
    45:45:com.android.ex.camera2.portability.debug.Log$Tag access$200() -> access$200
    311:331:void closeCamera(com.android.ex.camera2.portability.CameraAgent$CameraProxy,boolean) -> closeCamera
    289:297:void openCamera(android.os.Handler,int,com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback) -> openCamera
com.android.ex.camera2.portability.CameraAgent$1 -> com.android.ex.camera2.portability.CameraAgent$1:
    289:289:void <init>(com.android.ex.camera2.portability.CameraAgent,int,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback) -> <init>
    292:293:void run() -> run
com.android.ex.camera2.portability.CameraAgent$2 -> com.android.ex.camera2.portability.CameraAgent$2:
    316:316:void <init>(com.android.ex.camera2.portability.CameraAgent,com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle) -> <init>
    319:320:void run() -> run
com.android.ex.camera2.portability.CameraAgent$3 -> com.android.ex.camera2.portability.CameraAgent$3:
    323:323:void <init>(com.android.ex.camera2.portability.CameraAgent) -> <init>
    326:327:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward -> com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward:
    103:108:void <init>(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback) -> <init>
    83:83:com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback access$100(com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward) -> access$100
    100:100:com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward getNewInstance(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback) -> getNewInstance
    122:122:void onCameraDisabled(int) -> onCameraDisabled
    113:113:void onCameraOpened(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> onCameraOpened
    131:131:void onDeviceOpenFailure(int,java.lang.String) -> onDeviceOpenFailure
    140:140:void onDeviceOpenedAlready(int,java.lang.String) -> onDeviceOpenedAlready
    149:149:void onReconnectionFailure(com.android.ex.camera2.portability.CameraAgent,java.lang.String) -> onReconnectionFailure
com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$1 -> com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$1:
    113:113:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward,com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> <init>
    116:116:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$2 -> com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$2:
    122:122:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward,int) -> <init>
    125:125:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$3 -> com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$3:
    131:131:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward,int,java.lang.String) -> <init>
    134:134:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$4 -> com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$4:
    140:140:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward,int,java.lang.String) -> <init>
    143:143:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$5 -> com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward$5:
    149:149:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward,com.android.ex.camera2.portability.CameraAgent,java.lang.String) -> <init>
    152:152:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy -> com.android.ex.camera2.portability.CameraAgent$CameraProxy:
    377:377:void <init>() -> <init>
    853:876:boolean applySettingsHelper(com.android.ex.camera2.portability.CameraSettings,int) -> applySettingsHelper
    687:689:void cancelAutoFocus() -> cancelAutoFocus
    463:469:void lock() -> lock
    422:429:void reconnect(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback) -> reconnect
    898:904:void refreshSettings() -> refreshSettings
    728:728:void setDisplayOrientation(int) -> setDisplayOrientation
    743:752:void setDisplayOrientation(int,boolean) -> setDisplayOrientation
    758:766:void setJpegOrientation(int) -> setJpegOrientation
    496:504:void setPreviewTexture(android.graphics.SurfaceTexture) -> setPreviewTexture
    791:797:void startFaceDetection() -> startFaceDetection
    566:573:void startPreview() -> startPreview
    583:591:void startPreviewWithCallback(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallback) -> startPreviewWithCallback
    806:812:void stopFaceDetection() -> stopFaceDetection
    602:614:void stopPreview() -> stopPreview
    440:453:void unlock() -> unlock
com.android.ex.camera2.portability.CameraAgent$CameraProxy$1 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$1:
    422:422:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback) -> <init>
    425:426:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$11 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$11:
    743:743:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy,int,boolean) -> <init>
    746:749:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$12 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$12:
    758:758:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy,int) -> <init>
    761:763:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$13 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$13:
    791:791:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> <init>
    794:794:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$14 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$14:
    806:806:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> <init>
    809:809:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$15 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$15:
    863:863:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy,int,com.android.ex.camera2.portability.CameraSettings) -> <init>
    866:873:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$16 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$16:
    898:898:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> <init>
    901:901:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$2 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$2:
    445:445:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle) -> <init>
    448:449:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$3 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$3:
    463:463:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> <init>
    466:466:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$4 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$4:
    496:496:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy,android.graphics.SurfaceTexture) -> <init>
    499:501:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$7 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$7:
    566:566:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy) -> <init>
    569:570:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$8 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$8:
    583:583:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy,android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallback) -> <init>
    586:588:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraProxy$9 -> com.android.ex.camera2.portability.CameraAgent$CameraProxy$9:
    607:607:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraProxy,com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle) -> <init>
    610:611:void run() -> run
com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward -> com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward:
    64:66:void <init>(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallback) -> <init>
    50:50:com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallback access$000(com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward) -> access$000
    60:60:com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward getNewInstance(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallback) -> getNewInstance
    71:71:void onPreviewStarted() -> onPreviewStarted
com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward$1 -> com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward$1:
    71:71:void <init>(com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward) -> <init>
    74:74:void run() -> run
com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle -> com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle:
    958:960:void <init>() -> <init>
    978:980:void unblockSyncWaiters(android.os.Message) -> unblockSyncWaiters
com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle$1 -> com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle$1:
    960:960:void <init>(com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle) -> <init>
    963:965:void run() -> run
com.android.ex.camera2.portability.CameraAgentFactory -> com.android.ex.camera2.portability.CameraAgentFactory:
    33:47:void <clinit>() -> <clinit>
    113:134:com.android.ex.camera2.portability.CameraAgent getAndroidCameraAgent(android.content.Context,com.android.ex.camera2.portability.CameraAgentFactory$CameraApi) -> getAndroidCameraAgent
    70:73:com.android.ex.camera2.portability.CameraAgentFactory$CameraApi highestSupportedApi() -> highestSupportedApi
    148:165:void recycle(com.android.ex.camera2.portability.CameraAgentFactory$CameraApi) -> recycle
    78:91:com.android.ex.camera2.portability.CameraAgentFactory$CameraApi validateApiChoice(com.android.ex.camera2.portability.CameraAgentFactory$CameraApi) -> validateApiChoice
com.android.ex.camera2.portability.CameraAgentFactory$CameraApi -> com.android.ex.camera2.portability.CameraAgentFactory$CameraApi:
    57:65:void <clinit>() -> <clinit>
    57:57:void <init>(java.lang.String,int) -> <init>
    57:57:com.android.ex.camera2.portability.CameraAgentFactory$CameraApi valueOf(java.lang.String) -> valueOf
    57:57:com.android.ex.camera2.portability.CameraAgentFactory$CameraApi[] values() -> values
com.android.ex.camera2.portability.CameraCapabilities -> com.android.ex.camera2.portability.CameraCapabilities:
    38:38:void <clinit>() -> <clinit>
    45:467:void <init>(com.android.ex.camera2.portability.CameraCapabilities$Stringifier) -> <init>
    45:496:void <init>(com.android.ex.camera2.portability.CameraCapabilities) -> <init>
    697:700:boolean exposureCheck(com.android.ex.camera2.portability.CameraSettings) -> exposureCheck
    725:728:boolean flashCheck(com.android.ex.camera2.portability.CameraSettings) -> flashCheck
    708:717:boolean focusCheck(com.android.ex.camera2.portability.CameraSettings) -> focusCheck
    661:661:float getExposureCompensationStep() -> getExposureCompensationStep
    653:653:int getMaxExposureCompensation() -> getMaxExposureCompensation
    669:669:int getMaxNumOfFacesSupported() -> getMaxNumOfFacesSupported
    635:635:float getMaxZoomRatio() -> getMaxZoomRatio
    644:644:int getMinExposureCompensation() -> getMinExposureCompensation
    547:547:com.android.ex.camera2.portability.Size getPreferredPreviewSizeForVideo() -> getPreferredPreviewSizeForVideo
    676:676:com.android.ex.camera2.portability.CameraCapabilities$Stringifier getStringifier() -> getStringifier
    599:599:java.util.Set getSupportedFocusModes() -> getSupportedFocusModes
    526:526:java.util.List getSupportedPhotoSizes() -> getSupportedPhotoSizes
    535:535:java.util.List getSupportedPreviewFpsRange() -> getSupportedPreviewFpsRange
    543:543:java.util.List getSupportedPreviewSizes() -> getSupportedPreviewSizes
    555:555:java.util.List getSupportedVideoSizes() -> getSupportedVideoSizes
    735:739:boolean photoSizeCheck(com.android.ex.camera2.portability.CameraSettings) -> photoSizeCheck
    744:748:boolean previewSizeCheck(com.android.ex.camera2.portability.CameraSettings) -> previewSizeCheck
    569:569:boolean supports(com.android.ex.camera2.portability.CameraCapabilities$SceneMode) -> supports
    573:575:boolean supports(com.android.ex.camera2.portability.CameraSettings) -> supports
    592:592:boolean supports(com.android.ex.camera2.portability.CameraCapabilities$FlashMode) -> supports
    606:606:boolean supports(com.android.ex.camera2.portability.CameraCapabilities$FocusMode) -> supports
    628:628:boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature) -> supports
    753:756:boolean videoStabilizationCheck(com.android.ex.camera2.portability.CameraSettings) -> videoStabilizationCheck
    680:689:boolean zoomCheck(com.android.ex.camera2.portability.CameraSettings) -> zoomCheck
com.android.ex.camera2.portability.CameraCapabilities$Feature -> com.android.ex.camera2.portability.CameraCapabilities$Feature:
    284:312:void <clinit>() -> <clinit>
    284:284:void <init>(java.lang.String,int) -> <init>
    284:284:com.android.ex.camera2.portability.CameraCapabilities$Feature valueOf(java.lang.String) -> valueOf
    284:284:com.android.ex.camera2.portability.CameraCapabilities$Feature[] values() -> values
com.android.ex.camera2.portability.CameraCapabilities$FlashMode -> com.android.ex.camera2.portability.CameraCapabilities$FlashMode:
    114:143:void <clinit>() -> <clinit>
    114:114:void <init>(java.lang.String,int) -> <init>
    114:114:com.android.ex.camera2.portability.CameraCapabilities$FlashMode valueOf(java.lang.String) -> valueOf
    114:114:com.android.ex.camera2.portability.CameraCapabilities$FlashMode[] values() -> values
com.android.ex.camera2.portability.CameraCapabilities$FocusMode -> com.android.ex.camera2.portability.CameraCapabilities$FocusMode:
    72:108:void <clinit>() -> <clinit>
    72:72:void <init>(java.lang.String,int) -> <init>
    72:72:com.android.ex.camera2.portability.CameraCapabilities$FocusMode valueOf(java.lang.String) -> valueOf
    72:72:com.android.ex.camera2.portability.CameraCapabilities$FocusMode[] values() -> values
com.android.ex.camera2.portability.CameraCapabilities$SceneMode -> com.android.ex.camera2.portability.CameraCapabilities$SceneMode:
    149:240:void <clinit>() -> <clinit>
    149:149:void <init>(java.lang.String,int) -> <init>
    149:149:com.android.ex.camera2.portability.CameraCapabilities$SceneMode valueOf(java.lang.String) -> valueOf
    149:149:com.android.ex.camera2.portability.CameraCapabilities$SceneMode[] values() -> values
com.android.ex.camera2.portability.CameraCapabilities$Stringifier -> com.android.ex.camera2.portability.CameraCapabilities$Stringifier:
    319:319:void <init>() -> <init>
    391:396:com.android.ex.camera2.portability.CameraCapabilities$FlashMode flashModeFromString(java.lang.String) -> flashModeFromString
    361:366:com.android.ex.camera2.portability.CameraCapabilities$FocusMode focusModeFromString(java.lang.String) -> focusModeFromString
    421:426:com.android.ex.camera2.portability.CameraCapabilities$SceneMode sceneModeFromString(java.lang.String) -> sceneModeFromString
    348:348:java.lang.String stringify(com.android.ex.camera2.portability.CameraCapabilities$FocusMode) -> stringify
    378:378:java.lang.String stringify(com.android.ex.camera2.portability.CameraCapabilities$FlashMode) -> stringify
    408:408:java.lang.String stringify(com.android.ex.camera2.portability.CameraCapabilities$SceneMode) -> stringify
    438:438:java.lang.String stringify(com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance) -> stringify
    327:327:java.lang.String toApiCase(java.lang.String) -> toApiCase
    337:337:java.lang.String toEnumCase(java.lang.String) -> toEnumCase
com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance -> com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance:
    246:278:void <clinit>() -> <clinit>
    246:246:void <init>(java.lang.String,int) -> <init>
    246:246:com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance valueOf(java.lang.String) -> valueOf
    246:246:com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance[] values() -> values
com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics -> com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics:
    58:58:void <clinit>() -> <clinit>
    57:57:void <init>() -> <init>
    108:108:int getJpegOrientation(int) -> getJpegOrientation
    92:92:int getPreviewOrientation(int) -> getPreviewOrientation
    183:189:android.graphics.Matrix getPreviewTransform(int,android.graphics.RectF,android.graphics.RectF) -> getPreviewTransform
    125:138:int getRelativeImageOrientation(int,boolean) -> getRelativeImageOrientation
    199:204:boolean orientationIsValid(int) -> orientationIsValid
com.android.ex.camera2.portability.CameraExceptionHandler -> com.android.ex.camera2.portability.CameraExceptionHandler:
    28:63:void <init>(com.android.ex.camera2.portability.CameraExceptionHandler$CameraExceptionCallback,android.os.Handler) -> <init>
    28:73:void <init>(android.os.Handler) -> <init>
    25:25:com.android.ex.camera2.portability.CameraExceptionHandler$CameraExceptionCallback access$000(com.android.ex.camera2.portability.CameraExceptionHandler) -> access$000
    83:83:void onCameraError(int) -> onCameraError
    100:100:void onCameraException(java.lang.RuntimeException,java.lang.String,int,int) -> onCameraException
    115:115:void onDispatchThreadException(java.lang.RuntimeException) -> onDispatchThreadException
com.android.ex.camera2.portability.CameraExceptionHandler$1 -> com.android.ex.camera2.portability.CameraExceptionHandler$1:
    29:29:void <init>(com.android.ex.camera2.portability.CameraExceptionHandler) -> <init>
    36:36:void onCameraException(java.lang.RuntimeException,java.lang.String,int,int) -> onCameraException
    40:40:void onDispatchThreadException(java.lang.RuntimeException) -> onDispatchThreadException
com.android.ex.camera2.portability.CameraExceptionHandler$2 -> com.android.ex.camera2.portability.CameraExceptionHandler$2:
    83:83:void <init>(com.android.ex.camera2.portability.CameraExceptionHandler,int) -> <init>
    86:86:void run() -> run
com.android.ex.camera2.portability.CameraExceptionHandler$3 -> com.android.ex.camera2.portability.CameraExceptionHandler$3:
    100:100:void <init>(com.android.ex.camera2.portability.CameraExceptionHandler,java.lang.RuntimeException,java.lang.String,int,int) -> <init>
    103:103:void run() -> run
com.android.ex.camera2.portability.CameraExceptionHandler$4 -> com.android.ex.camera2.portability.CameraExceptionHandler$4:
    115:115:void <init>(com.android.ex.camera2.portability.CameraExceptionHandler,java.lang.RuntimeException) -> <init>
    118:118:void run() -> run
com.android.ex.camera2.portability.CameraSettings -> com.android.ex.camera2.portability.CameraSettings:
    32:32:void <clinit>() -> <clinit>
    38:107:void <init>() -> <init>
    38:142:void <init>(com.android.ex.camera2.portability.CameraSettings) -> <init>
    31:31:com.android.ex.camera2.portability.debug.Log$Tag access$000() -> access$000
    490:490:void clearGpsData() -> clearGpsData
    383:383:com.android.ex.camera2.portability.CameraCapabilities$FlashMode getCurrentFlashMode() -> getCurrentFlashMode
    404:404:com.android.ex.camera2.portability.CameraCapabilities$FocusMode getCurrentFocusMode() -> getCurrentFocusMode
    298:298:int getCurrentPhotoFormat() -> getCurrentPhotoFormat
    266:266:com.android.ex.camera2.portability.Size getCurrentPhotoSize() -> getCurrentPhotoSize
    257:257:int getCurrentPreviewFormat() -> getCurrentPreviewFormat
    225:225:com.android.ex.camera2.portability.Size getCurrentPreviewSize() -> getCurrentPreviewSize
    450:450:com.android.ex.camera2.portability.CameraCapabilities$SceneMode getCurrentSceneMode() -> getCurrentSceneMode
    325:325:float getCurrentZoomRatio() -> getCurrentZoomRatio
    510:510:com.android.ex.camera2.portability.Size getExifThumbnailSize() -> getExifThumbnailSize
    350:350:int getExposureCompensationIndex() -> getExposureCompensationIndex
    423:423:java.util.List getFocusAreas() -> getFocusAreas
    486:486:com.android.ex.camera2.portability.CameraSettings$GpsData getGpsData() -> getGpsData
    377:377:java.util.List getMeteringAreas() -> getMeteringAreas
    316:316:int getPhotoJpegCompressionQuality() -> getPhotoJpegCompressionQuality
    200:200:int getPreviewFpsRangeMax() -> getPreviewFpsRangeMax
    193:193:int getPreviewFpsRangeMin() -> getPreviewFpsRangeMin
    218:218:int getPreviewFrameRate() -> getPreviewFrameRate
    433:433:com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance getWhiteBalance() -> getWhiteBalance
    358:358:boolean isAutoExposureLocked() -> isAutoExposureLocked
    441:441:boolean isAutoWhiteBalanceLocked() -> isAutoWhiteBalanceLocked
    478:478:boolean isRecordingHintEnabled() -> isRecordingHintEnabled
    470:470:boolean isVideoStabilizationEnabled() -> isVideoStabilizationEnabled
    354:354:void setAutoExposureLock(boolean) -> setAutoExposureLock
    437:437:void setAutoWhiteBalanceLock(boolean) -> setAutoWhiteBalanceLock
    343:343:void setExposureCompensationIndex(int) -> setExposureCompensationIndex
    387:387:void setFlashMode(com.android.ex.camera2.portability.CameraCapabilities$FlashMode) -> setFlashMode
    416:418:void setFocusAreas(java.util.List) -> setFocusAreas
    397:397:void setFocusMode(com.android.ex.camera2.portability.CameraCapabilities$FocusMode) -> setFocusMode
    482:482:void setGpsData(com.android.ex.camera2.portability.CameraSettings$GpsData) -> setGpsData
    370:372:void setMeteringAreas(java.util.List) -> setMeteringAreas
    290:290:void setPhotoFormat(int) -> setPhotoFormat
    308:312:void setPhotoJpegCompressionQuality(int) -> setPhotoJpegCompressionQuality
    274:279:boolean setPhotoSize(com.android.ex.camera2.portability.Size) -> setPhotoSize
    249:249:void setPreviewFormat(int) -> setPreviewFormat
    184:186:void setPreviewFpsRange(int,int) -> setPreviewFpsRange
    211:213:void setPreviewFrameRate(int) -> setPreviewFrameRate
    233:238:boolean setPreviewSize(com.android.ex.camera2.portability.Size) -> setPreviewSize
    474:474:void setRecordingHintEnabled(boolean) -> setRecordingHintEnabled
    460:460:void setSceneMode(com.android.ex.camera2.portability.CameraCapabilities$SceneMode) -> setSceneMode
    153:153:void setSetting(java.lang.String,java.lang.String) -> setSetting
    166:166:void setSizesLocked(boolean) -> setSizesLocked
    466:466:void setVideoStabilization(boolean) -> setVideoStabilization
    337:337:void setZoomRatio(float) -> setZoomRatio
com.android.ex.camera2.portability.CameraSettings$GpsData -> com.android.ex.camera2.portability.CameraSettings$GpsData:
    85:94:void <init>(double,double,double,long,java.lang.String) -> <init>
    98:103:void <init>(com.android.ex.camera2.portability.CameraSettings$GpsData) -> <init>
com.android.ex.camera2.portability.CameraStateHolder -> com.android.ex.camera2.portability.CameraStateHolder:
    24:24:void <clinit>() -> <clinit>
    34:36:void <init>(int) -> <init>
    58:58:int getState() -> getState
    65:66:void invalidate() -> invalidate
    74:74:boolean isInvalid() -> isInvalid
    45:50:void setState(int) -> setState
    96:109:boolean waitForCondition(com.android.ex.camera2.portability.CameraStateHolder$ConditionChecker,long) -> waitForCondition
    122:123:boolean waitForStates(int) -> waitForStates
com.android.ex.camera2.portability.CameraStateHolder$1 -> com.android.ex.camera2.portability.CameraStateHolder$1:
    123:123:void <init>(com.android.ex.camera2.portability.CameraStateHolder,int) -> <init>
    126:126:boolean success() -> success
com.android.ex.camera2.portability.DispatchThread -> com.android.ex.camera2.portability.DispatchThread:
    29:29:void <clinit>() -> <clinit>
    38:42:void <init>(android.os.Handler,android.os.HandlerThread) -> <init>
    95:100:void end() -> end
    104:106:boolean isEnded() -> isEnded
    113:153:void run() -> run
    51:62:void runJob(java.lang.Runnable) -> runJob
    74:88:void runJobSync(java.lang.Runnable,java.lang.Object,long,java.lang.String) -> runJobSync
com.android.ex.camera2.portability.DispatchThread$1 -> com.android.ex.camera2.portability.DispatchThread$1:
    138:138:void <init>(com.android.ex.camera2.portability.DispatchThread) -> <init>
    141:143:void run() -> run
com.android.ex.camera2.portability.HistoryHandler -> com.android.ex.camera2.portability.HistoryHandler:
    31:35:void <init>(android.os.Looper) -> <init>
    43:48:java.lang.String generateHistoryString(int) -> generateHistoryString
    39:39:java.lang.Integer getCurrentMessage() -> getCurrentMessage
    57:59:void handleMessage(android.os.Message) -> handleMessage
com.android.ex.camera2.portability.Size -> com.android.ex.camera2.portability.Size:
    98:99:void <init>(int,int) -> <init>
    105:109:void <init>(com.android.ex.camera2.portability.Size) -> <init>
    118:122:void <init>(android.hardware.Camera$Size) -> <init>
    131:135:void <init>(android.util.Size) -> <init>
    54:56:java.util.List buildListFromAndroidSizes(java.util.List) -> buildListFromAndroidSizes
    162:164:boolean equals(java.lang.Object) -> equals
    171:171:int hashCode() -> hashCode
    157:157:int height() -> height
    176:176:java.lang.String toString() -> toString
    153:153:int width() -> width
com.android.ex.camera2.portability.debug.Log -> com.android.ex.camera2.portability.debug.Log:
    30:30:void <clinit>() -> <clinit>
    19:19:com.android.ex.camera2.portability.debug.Log$Tag access$000() -> access$000
    59:60:void d(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String) -> d
    71:72:void e(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String) -> e
    77:78:void e(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String,java.lang.Throwable) -> e
    83:84:void i(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String) -> i
    120:131:boolean isLoggable(com.android.ex.camera2.portability.debug.Log$Tag,int) -> isLoggable
    95:96:void v(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String) -> v
    107:108:void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String) -> w
    113:114:void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String,java.lang.Throwable) -> w
com.android.ex.camera2.portability.debug.Log$Tag -> com.android.ex.camera2.portability.debug.Log$Tag:
    44:49:void <init>(java.lang.String) -> <init>
    54:54:java.lang.String toString() -> toString
com.android.ex.camera2.portability.util.SystemProperties -> com.android.ex.camera2.portability.util.SystemProperties:
    27:27:void <clinit>() -> <clinit>
    39:44:java.lang.String get(java.lang.String,java.lang.String) -> get
com.android.ex.camera2.utils.Camera2RequestSettingsSet -> com.android.ex.camera2.utils.Camera2RequestSettingsSet:
    45:47:void <init>() -> <init>
    57:63:void <init>(com.android.ex.camera2.utils.Camera2RequestSettingsSet) -> <init>
    231:244:android.hardware.camera2.CaptureRequest createRequest(android.hardware.camera2.CameraDevice,int,android.view.Surface[]) -> createRequest
    136:138:java.lang.Object get(android.hardware.camera2.CaptureRequest$Key) -> get
    173:173:boolean matches(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> matches
    85:92:boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> set
    248:250:void setRequestFieldIfNonNull(android.hardware.camera2.CaptureRequest$Builder,android.hardware.camera2.CaptureRequest$Key) -> setRequestFieldIfNonNull
    210:211:boolean union(com.android.ex.camera2.utils.Camera2RequestSettingsSet) -> union
com.bumptech.glide.BitmapRequestBuilder -> com.bumptech.glide.BitmapRequestBuilder:
    50:62:void <init>(com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.GenericRequestBuilder) -> <init>
    496:496:void applyCenterCrop() -> applyCenterCrop
    491:491:void applyFitCenter() -> applyFitCenter
    278:278:com.bumptech.glide.BitmapRequestBuilder centerCrop() -> centerCrop
    46:46:com.bumptech.glide.GenericRequestBuilder clone() -> clone
    46:46:java.lang.Object clone() -> clone
    469:469:com.bumptech.glide.BitmapRequestBuilder clone() -> clone
    46:46:com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder) -> decoder
    169:169:com.bumptech.glide.BitmapRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder) -> decoder
    46:46:com.bumptech.glide.GenericRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategy
    414:414:com.bumptech.glide.BitmapRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategy
    321:321:com.bumptech.glide.BitmapRequestBuilder dontAnimate() -> dontAnimate
    291:291:com.bumptech.glide.BitmapRequestBuilder fitCenter() -> fitCenter
    486:486:com.bumptech.glide.request.target.Target into(android.widget.ImageView) -> into
    46:46:com.bumptech.glide.GenericRequestBuilder load(java.lang.Object) -> load
    463:463:com.bumptech.glide.BitmapRequestBuilder load(java.lang.Object) -> load
    46:46:com.bumptech.glide.GenericRequestBuilder override(int,int) -> override
    423:423:com.bumptech.glide.BitmapRequestBuilder override(int,int) -> override
    359:359:com.bumptech.glide.BitmapRequestBuilder placeholder(int) -> placeholder
    46:46:com.bumptech.glide.GenericRequestBuilder signature(com.bumptech.glide.load.Key) -> signature
    457:457:com.bumptech.glide.BitmapRequestBuilder signature(com.bumptech.glide.load.Key) -> signature
    46:46:com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean) -> skipMemoryCache
    405:405:com.bumptech.glide.BitmapRequestBuilder skipMemoryCache(boolean) -> skipMemoryCache
    46:46:com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder) -> sourceEncoder
    442:442:com.bumptech.glide.BitmapRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder) -> sourceEncoder
    46:46:com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation[]) -> transform
    264:264:com.bumptech.glide.BitmapRequestBuilder transform(com.bumptech.glide.load.resource.bitmap.BitmapTransformation[]) -> transform
    302:302:com.bumptech.glide.BitmapRequestBuilder transform(com.bumptech.glide.load.Transformation[]) -> transform
com.bumptech.glide.BitmapTypeRequest -> com.bumptech.glide.BitmapTypeRequest:
    52:57:void <init>(com.bumptech.glide.GenericRequestBuilder,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.RequestManager$OptionsApplier) -> <init>
    38:45:com.bumptech.glide.provider.FixedLoadProvider buildProvider(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> buildProvider
    70:71:com.bumptech.glide.BitmapRequestBuilder transcode(com.bumptech.glide.load.resource.transcode.ResourceTranscoder,java.lang.Class) -> transcode
com.bumptech.glide.DrawableRequestBuilder -> com.bumptech.glide.DrawableRequestBuilder:
    48:50:void <init>(android.content.Context,java.lang.Class,com.bumptech.glide.provider.LoadProvider,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle) -> <init>
    446:446:void applyCenterCrop() -> applyCenterCrop
    441:441:void applyFitCenter() -> applyFitCenter
    179:179:com.bumptech.glide.DrawableRequestBuilder centerCrop() -> centerCrop
    41:41:com.bumptech.glide.GenericRequestBuilder clone() -> clone
    41:41:java.lang.Object clone() -> clone
    419:419:com.bumptech.glide.DrawableRequestBuilder clone() -> clone
    246:246:com.bumptech.glide.DrawableRequestBuilder crossFade() -> crossFade
    41:41:com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder) -> decoder
    115:115:com.bumptech.glide.DrawableRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder) -> decoder
    41:41:com.bumptech.glide.GenericRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategy
    365:365:com.bumptech.glide.DrawableRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategy
    281:281:com.bumptech.glide.DrawableRequestBuilder dontAnimate() -> dontAnimate
    133:133:com.bumptech.glide.DrawableRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder) -> encoder
    194:194:com.bumptech.glide.DrawableRequestBuilder fitCenter() -> fitCenter
    436:436:com.bumptech.glide.request.target.Target into(android.widget.ImageView) -> into
    41:41:com.bumptech.glide.GenericRequestBuilder load(java.lang.Object) -> load
    413:413:com.bumptech.glide.DrawableRequestBuilder load(java.lang.Object) -> load
    41:41:com.bumptech.glide.GenericRequestBuilder override(int,int) -> override
    383:383:com.bumptech.glide.DrawableRequestBuilder override(int,int) -> override
    319:319:com.bumptech.glide.DrawableRequestBuilder placeholder(int) -> placeholder
    328:328:com.bumptech.glide.DrawableRequestBuilder placeholder(android.graphics.drawable.Drawable) -> placeholder
    41:41:com.bumptech.glide.GenericRequestBuilder signature(com.bumptech.glide.load.Key) -> signature
    407:407:com.bumptech.glide.DrawableRequestBuilder signature(com.bumptech.glide.load.Key) -> signature
    41:41:com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean) -> skipMemoryCache
    374:374:com.bumptech.glide.DrawableRequestBuilder skipMemoryCache(boolean) -> skipMemoryCache
    41:41:com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder) -> sourceEncoder
    392:392:com.bumptech.glide.DrawableRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder) -> sourceEncoder
    78:78:com.bumptech.glide.DrawableRequestBuilder thumbnail(com.bumptech.glide.DrawableRequestBuilder) -> thumbnail
    88:88:com.bumptech.glide.DrawableRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder) -> thumbnail
    41:41:com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation[]) -> transform
    228:228:com.bumptech.glide.DrawableRequestBuilder transform(com.bumptech.glide.load.Transformation[]) -> transform
com.bumptech.glide.DrawableTypeRequest -> com.bumptech.glide.DrawableTypeRequest:
    57:63:void <init>(java.lang.Class,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.RequestManager$OptionsApplier) -> <init>
    72:72:com.bumptech.glide.BitmapTypeRequest asBitmap() -> asBitmap
    45:51:com.bumptech.glide.provider.FixedLoadProvider buildProvider(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> buildProvider
com.bumptech.glide.GenericRequestBuilder -> com.bumptech.glide.GenericRequestBuilder:
    82:88:void <init>(com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.GenericRequestBuilder) -> <init>
    59:107:void <init>(android.content.Context,java.lang.Class,com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle) -> <init>
    411:413:com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory) -> animate
    720:723:com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target) -> buildRequest
    727:752:com.bumptech.glide.request.Request buildRequestRecursive(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.ThumbnailRequestCoordinator) -> buildRequestRecursive
    49:49:java.lang.Object clone() -> clone
    578:582:com.bumptech.glide.GenericRequestBuilder clone() -> clone
    200:201:com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder) -> decoder
    264:264:com.bumptech.glide.GenericRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategy
    360:361:com.bumptech.glide.GenericRequestBuilder dontAnimate() -> dontAnimate
    286:287:com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder) -> encoder
    709:714:com.bumptech.glide.Priority getThumbnailPriority() -> getThumbnailPriority
    595:614:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target) -> into
    629:651:com.bumptech.glide.request.target.Target into(android.widget.ImageView) -> into
    559:560:com.bumptech.glide.GenericRequestBuilder load(java.lang.Object) -> load
    758:772:com.bumptech.glide.request.Request obtainRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator) -> obtainRequest
    514:520:com.bumptech.glide.GenericRequestBuilder override(int,int) -> override
    427:427:com.bumptech.glide.GenericRequestBuilder placeholder(int) -> placeholder
    440:440:com.bumptech.glide.GenericRequestBuilder placeholder(android.graphics.drawable.Drawable) -> placeholder
    541:543:com.bumptech.glide.GenericRequestBuilder signature(com.bumptech.glide.load.Key) -> signature
    498:498:com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean) -> skipMemoryCache
    239:240:com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder) -> sourceEncoder
    128:128:com.bumptech.glide.GenericRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder) -> thumbnail
    315:319:com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation[]) -> transform
com.bumptech.glide.GenericRequestBuilder$2 -> com.bumptech.glide.GenericRequestBuilder$2:
    635:635:void <clinit>() -> <clinit>
com.bumptech.glide.GenericTranscodeRequest -> com.bumptech.glide.GenericTranscodeRequest:
    60:65:void <init>(android.content.Context,com.bumptech.glide.Glide,java.lang.Class,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,java.lang.Class,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.RequestManager$OptionsApplier) -> <init>
    41:42:com.bumptech.glide.provider.LoadProvider build(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> build
com.bumptech.glide.Glide -> com.bumptech.glide.Glide:
    91:243:void <init>(com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.content.Context,com.bumptech.glide.load.DecodeFormat) -> <init>
    277:277:com.bumptech.glide.provider.DataLoadProvider buildDataProvider(java.lang.Class,java.lang.Class) -> buildDataProvider
    546:546:com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context) -> buildFileDescriptorModelLoader
    281:281:com.bumptech.glide.request.target.Target buildImageViewTarget(android.widget.ImageView,java.lang.Class) -> buildImageViewTarget
    492:497:com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context) -> buildModelLoader
    525:525:com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context) -> buildStreamModelLoader
    273:273:com.bumptech.glide.load.resource.transcode.ResourceTranscoder buildTranscoder(java.lang.Class,java.lang.Class) -> buildTranscoder
    389:392:void clear(com.bumptech.glide.request.target.Target) -> clear
    420:421:void clear(android.view.View) -> clear
    144:152:com.bumptech.glide.Glide get(android.content.Context) -> get
    289:289:com.bumptech.glide.load.resource.bitmap.CenterCrop getBitmapCenterCrop() -> getBitmapCenterCrop
    293:293:com.bumptech.glide.load.resource.bitmap.FitCenter getBitmapFitCenter() -> getBitmapFitCenter
    269:269:com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool() -> getBitmapPool
    309:309:com.bumptech.glide.load.DecodeFormat getDecodeFormat() -> getDecodeFormat
    297:297:com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation getDrawableCenterCrop() -> getDrawableCenterCrop
    301:301:com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation getDrawableFitCenter() -> getDrawableFitCenter
    285:285:com.bumptech.glide.load.engine.Engine getEngine() -> getEngine
    313:313:com.bumptech.glide.load.model.GenericLoaderFactory getLoaderFactory() -> getLoaderFactory
    110:110:java.io.File getPhotoCacheDir(android.content.Context) -> getPhotoCacheDir
    123:133:java.io.File getPhotoCacheDir(android.content.Context,java.lang.String) -> getPhotoCacheDir
    162:162:boolean isSetup() -> isSetup
    453:455:void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> register
    378:379:void setMemoryCategory(com.bumptech.glide.MemoryCategory) -> setMemoryCategory
    175:179:void setup(com.bumptech.glide.GlideBuilder) -> setup
    586:587:com.bumptech.glide.RequestManager with(android.content.Context) -> with
com.bumptech.glide.Glide$ClearTarget -> com.bumptech.glide.Glide$ClearTarget:
    641:641:void <init>(android.view.View) -> <init>
com.bumptech.glide.GlideBuilder -> com.bumptech.glide.GlideBuilder:
    36:37:void <init>(android.content.Context) -> <init>
    146:185:com.bumptech.glide.Glide createGlide() -> createGlide
    135:135:com.bumptech.glide.GlideBuilder setDecodeFormat(com.bumptech.glide.load.DecodeFormat) -> setDecodeFormat
    92:92:com.bumptech.glide.GlideBuilder setResizeService(java.util.concurrent.ExecutorService) -> setResizeService
com.bumptech.glide.MemoryCategory -> com.bumptech.glide.MemoryCategory:
    6:18:void <clinit>() -> <clinit>
    22:23:void <init>(java.lang.String,int,float) -> <init>
    31:31:float getMultiplier() -> getMultiplier
    6:6:com.bumptech.glide.MemoryCategory valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.MemoryCategory[] values() -> values
com.bumptech.glide.Priority -> com.bumptech.glide.Priority:
    8:12:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:com.bumptech.glide.Priority valueOf(java.lang.String) -> valueOf
    8:8:com.bumptech.glide.Priority[] values() -> values
com.bumptech.glide.RequestManager -> com.bumptech.glide.RequestManager:
    51:51:void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle) -> <init>
    55:78:void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory) -> <init>
    42:42:android.content.Context access$100(com.bumptech.glide.RequestManager) -> access$100
    42:42:com.bumptech.glide.Glide access$200(com.bumptech.glide.RequestManager) -> access$200
    42:42:com.bumptech.glide.manager.RequestTracker access$300(com.bumptech.glide.RequestManager) -> access$300
    42:42:com.bumptech.glide.manager.Lifecycle access$400(com.bumptech.glide.RequestManager) -> access$400
    42:42:com.bumptech.glide.RequestManager$OptionsApplier access$500(com.bumptech.glide.RequestManager) -> access$500
    42:42:com.bumptech.glide.RequestManager$DefaultOptions access$800(com.bumptech.glide.RequestManager) -> access$800
    362:367:com.bumptech.glide.DrawableTypeRequest fromMediaStore() -> fromMediaStore
    170:170:void onDestroy() -> onDestroy
    152:152:void onStart() -> onStart
    161:161:void onStop() -> onStop
    130:131:void pauseRequests() -> pauseRequests
    141:142:void resumeRequests() -> resumeRequests
    187:187:com.bumptech.glide.RequestManager$GenericModelRequest using(com.bumptech.glide.load.model.ModelLoader,java.lang.Class) -> using
com.bumptech.glide.RequestManager$1 -> com.bumptech.glide.RequestManager$1:
    69:69:void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.manager.Lifecycle) -> <init>
    72:72:void run() -> run
com.bumptech.glide.RequestManager$GenericModelRequest -> com.bumptech.glide.RequestManager$GenericModelRequest:
    662:664:void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.load.model.ModelLoader,java.lang.Class) -> <init>
    658:658:com.bumptech.glide.load.model.ModelLoader access$600(com.bumptech.glide.RequestManager$GenericModelRequest) -> access$600
    658:658:java.lang.Class access$700(com.bumptech.glide.RequestManager$GenericModelRequest) -> access$700
    674:674:com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest from(java.lang.Class) -> from
com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest -> com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest:
    703:706:void <init>(com.bumptech.glide.RequestManager$GenericModelRequest,java.lang.Class) -> <init>
    717:721:com.bumptech.glide.GenericTranscodeRequest as(java.lang.Class) -> as
com.bumptech.glide.RequestManager$OptionsApplier -> com.bumptech.glide.RequestManager$OptionsApplier:
    728:728:void <init>(com.bumptech.glide.RequestManager) -> <init>
    731:732:com.bumptech.glide.GenericRequestBuilder apply(com.bumptech.glide.GenericRequestBuilder) -> apply
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener -> com.bumptech.glide.RequestManager$RequestManagerConnectivityListener:
    741:742:void <init>(com.bumptech.glide.manager.RequestTracker) -> <init>
    748:748:void onConnectivityChanged(boolean) -> onConnectivityChanged
com.bumptech.glide.disklrucache.DiskLruCache -> com.bumptech.glide.disklrucache.DiskLruCache:
    144:183:void <init>(java.io.File,int,int,long) -> <init>
    85:85:java.io.Writer access$000(com.bumptech.glide.disklrucache.DiskLruCache) -> access$000
    85:85:void access$100(com.bumptech.glide.disklrucache.DiskLruCache) -> access$100
    85:85:int access$1800(com.bumptech.glide.disklrucache.DiskLruCache) -> access$1800
    85:85:java.io.File access$1900(com.bumptech.glide.disklrucache.DiskLruCache) -> access$1900
    85:85:boolean access$200(com.bumptech.glide.disklrucache.DiskLruCache) -> access$200
    85:85:void access$2000(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> access$2000
    85:85:void access$300(com.bumptech.glide.disklrucache.DiskLruCache) -> access$300
    85:85:int access$402(com.bumptech.glide.disklrucache.DiskLruCache,int) -> access$402
    617:618:void checkNotClosed() -> checkNotClosed
    631:642:void close() -> close
    502:562:void completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> completeEdit
    657:658:void delete() -> delete
    387:388:void deleteIfExists(java.io.File) -> deleteIfExists
    441:441:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String) -> edit
    445:467:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    407:433:com.bumptech.glide.disklrucache.DiskLruCache$Value get(java.lang.String) -> get
    570:571:boolean journalRebuildRequired() -> journalRebuildRequired
    198:237:com.bumptech.glide.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> open
    325:338:void processJournal() -> processJournal
    242:278:void readJournal() -> readJournal
    282:316:void readJournalLine(java.lang.String) -> readJournalLine
    348:384:void rebuildJournal() -> rebuildJournal
    581:608:boolean remove(java.lang.String) -> remove
    394:397:void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    645:647:void trimToSize() -> trimToSize
com.bumptech.glide.disklrucache.DiskLruCache$1 -> com.bumptech.glide.disklrucache.DiskLruCache$1:
    160:160:void <init>(com.bumptech.glide.disklrucache.DiskLruCache) -> <init>
    160:160:java.lang.Object call() -> call
    162:171:java.lang.Void call() -> call
com.bumptech.glide.disklrucache.DiskLruCache$Editor -> com.bumptech.glide.disklrucache.DiskLruCache$Editor:
    705:705:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    710:712:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> <init>
    790:790:void abort() -> abort
    794:796:void abortUnlessCommitted() -> abortUnlessCommitted
    705:705:com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1400(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1400
    705:705:boolean[] access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1500
    781:782:void commit() -> commit
    745:757:java.io.File getFile(int) -> getFile
com.bumptech.glide.disklrucache.DiskLruCache$Entry -> com.bumptech.glide.disklrucache.DiskLruCache$Entry:
    803:803:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    822:836:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String) -> <init>
    803:803:long[] access$1000(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1000
    803:803:java.lang.String access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1100
    803:803:long access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1200
    803:803:long access$1202(com.bumptech.glide.disklrucache.DiskLruCache$Entry,long) -> access$1202
    803:803:boolean access$600(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$600
    803:803:boolean access$602(com.bumptech.glide.disklrucache.DiskLruCache$Entry,boolean) -> access$602
    803:803:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$700
    803:803:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$702
    803:803:void access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> access$800
    868:868:java.io.File getCleanFile(int) -> getCleanFile
    872:872:java.io.File getDirtyFile(int) -> getDirtyFile
    841:845:java.lang.String getLengths() -> getLengths
    864:864:java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    850:859:void setLengths(java.lang.String[]) -> setLengths
com.bumptech.glide.disklrucache.DiskLruCache$Value -> com.bumptech.glide.disklrucache.DiskLruCache$Value:
    666:666:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[],com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    672:676:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[]) -> <init>
    689:689:java.io.File getFile(int) -> getFile
com.bumptech.glide.disklrucache.StrictLineReader -> com.bumptech.glide.disklrucache.StrictLineReader:
    72:72:void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    86:99:void <init>(java.io.InputStream,int,java.nio.charset.Charset) -> <init>
    45:45:java.nio.charset.Charset access$000(com.bumptech.glide.disklrucache.StrictLineReader) -> access$000
    109:114:void close() -> close
    188:193:void fillBuf() -> fillBuf
    180:180:boolean hasUnterminatedLine() -> hasUnterminatedLine
    126:176:java.lang.String readLine() -> readLine
com.bumptech.glide.disklrucache.StrictLineReader$1 -> com.bumptech.glide.disklrucache.StrictLineReader$1:
    148:148:void <init>(com.bumptech.glide.disklrucache.StrictLineReader,int) -> <init>
    151:155:java.lang.String toString() -> toString
com.bumptech.glide.disklrucache.Util -> com.bumptech.glide.disklrucache.Util:
    28:29:void <clinit>() -> <clinit>
    70:72:void closeQuietly(java.io.Closeable) -> closeQuietly
    53:62:void deleteContents(java.io.File) -> deleteContents
com.bumptech.glide.gifdecoder.GifDecoder -> com.bumptech.glide.gifdecoder.GifDecoder:
    104:104:void <clinit>() -> <clinit>
    114:156:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider) -> <init>
    187:187:void advance() -> advance
    347:354:void clear() -> clear
    525:645:void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame) -> decodeBitmapData
    230:230:int getCurrentFrameIndex() -> getCurrentFrameIndex
    198:199:int getDelay(int) -> getDelay
    221:221:int getFrameCount() -> getFrameCount
    243:243:int getLoopCount() -> getLoopCount
    688:692:android.graphics.Bitmap getNextBitmap() -> getNextBitmap
    208:212:int getNextDelay() -> getNextDelay
    252:306:android.graphics.Bitmap getNextFrame() -> getNextFrame
    655:657:int read() -> read
    668:681:int readBlock() -> readBlock
    234:234:void resetFrameIndex() -> resetFrameIndex
    698:699:void setAlpha(android.graphics.Bitmap) -> setAlpha
    358:379:void setData(com.bumptech.glide.gifdecoder.GifHeader,byte[]) -> setData
    426:515:android.graphics.Bitmap setPixels(com.bumptech.glide.gifdecoder.GifFrame,com.bumptech.glide.gifdecoder.GifFrame) -> setPixels
com.bumptech.glide.gifdecoder.GifFrame -> com.bumptech.glide.gifdecoder.GifFrame:
    6:6:void <init>() -> <init>
com.bumptech.glide.gifdecoder.GifHeader -> com.bumptech.glide.gifdecoder.GifHeader:
    11:18:void <init>() -> <init>
    48:48:int getNumFrames() -> getNumFrames
    55:55:int getStatus() -> getStatus
com.bumptech.glide.gifdecoder.GifHeaderParser -> com.bumptech.glide.gifdecoder.GifHeaderParser:
    16:30:void <init>() -> <init>
    46:47:void clear() -> clear
    372:372:boolean err() -> err
    58:73:com.bumptech.glide.gifdecoder.GifHeader parseHeader() -> parseHeader
    356:358:int read() -> read
    177:210:void readBitmap() -> readBitmap
    329:344:int readBlock() -> readBlock
    276:296:int[] readColorTable(int) -> readColorTable
    82:139:void readContents() -> readContents
    149:169:void readGraphicControlExt() -> readGraphicControlExt
    234:243:void readHeader() -> readHeader
    251:264:void readLSD() -> readLSD
    217:224:void readNetscapeExt() -> readNetscapeExt
    368:368:int readShort() -> readShort
    51:54:void reset() -> reset
    33:40:com.bumptech.glide.gifdecoder.GifHeaderParser setData(byte[]) -> setData
    318:319:void skip() -> skip
    307:309:void skipImageData() -> skipImageData
com.bumptech.glide.gifencoder.AnimatedGifEncoder -> com.bumptech.glide.gifencoder.AnimatedGifEncoder:
    38:82:void <init>() -> <init>
    151:177:boolean addFrame(android.graphics.Bitmap) -> addFrame
    311:338:void analyzePixels() -> analyzePixels
    347:361:int findClosest(int) -> findClosest
    190:212:boolean finish() -> finish
    374:407:void getImagePixels() -> getImagePixels
    94:94:void setDelay(int) -> setDelay
    255:263:void setSize(int,int) -> setSize
    278:285:boolean start(java.io.OutputStream) -> start
    415:439:void writeGraphicCtrlExt() -> writeGraphicCtrlExt
    446:457:void writeImageDesc() -> writeImageDesc
    470:479:void writeLSD() -> writeLSD
    486:493:void writeNetscapeExt() -> writeNetscapeExt
    500:503:void writePalette() -> writePalette
    511:512:void writePixels() -> writePixels
    519:520:void writeShort(int) -> writeShort
    527:528:void writeString(java.lang.String) -> writeString
com.bumptech.glide.gifencoder.LZWEncoder -> com.bumptech.glide.gifencoder.LZWEncoder:
    48:117:void <init>(int,int,byte[],int) -> <init>
    123:125:void char_out(byte,java.io.OutputStream) -> char_out
    132:136:void cl_block(java.io.OutputStream) -> cl_block
    142:142:void cl_hash(int) -> cl_hash
    155:213:void compress(int,java.io.OutputStream) -> compress
    218:225:void encode(java.io.OutputStream) -> encode
    230:233:void flush_char(java.io.OutputStream) -> flush_char
    245:250:int nextPixel() -> nextPixel
    256:294:void output(int,java.io.OutputStream) -> output
com.bumptech.glide.gifencoder.NeuQuant -> com.bumptech.glide.gifencoder.NeuQuant:
    123:155:void <init>(byte[],int,int) -> <init>
    422:437:void alterneigh(int,int,int,int,int) -> alterneigh
    451:454:void altersingle(int,int,int,int,int) -> altersingle
    163:169:byte[] colorMap() -> colorMap
    477:503:int contest(int,int,int) -> contest
    189:227:void inxbuild() -> inxbuild
    240:299:void learn() -> learn
    319:368:int map(int,int,int) -> map
    378:381:byte[] process() -> process
    394:397:void unbiasnet() -> unbiasnet
com.bumptech.glide.load.DecodeFormat -> com.bumptech.glide.load.DecodeFormat:
    16:34:void <clinit>() -> <clinit>
    16:16:void <init>(java.lang.String,int) -> <init>
    16:16:com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String) -> valueOf
    16:16:com.bumptech.glide.load.DecodeFormat[] values() -> values
com.bumptech.glide.load.MultiTransformation -> com.bumptech.glide.load.MultiTransformation:
    18:22:void <init>(com.bumptech.glide.load.Transformation[]) -> <init>
    48:55:java.lang.String getId() -> getId
    36:39:com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int) -> transform
com.bumptech.glide.load.data.AssetPathFetcher -> com.bumptech.glide.load.data.AssetPathFetcher:
    21:23:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    34:41:void cleanup() -> cleanup
    49:49:java.lang.String getId() -> getId
    28:28:java.lang.Object loadData(com.bumptech.glide.Priority) -> loadData
com.bumptech.glide.load.data.ByteArrayFetcher -> com.bumptech.glide.load.data.ByteArrayFetcher:
    16:18:void <init>(byte[],java.lang.String) -> <init>
    33:33:java.lang.String getId() -> getId
    12:12:java.lang.Object loadData(com.bumptech.glide.Priority) -> loadData
    23:23:java.io.InputStream loadData(com.bumptech.glide.Priority) -> loadData
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher -> com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher:
    13:13:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    11:11:void close(java.lang.Object) -> close
    23:23:void close(android.os.ParcelFileDescriptor) -> close
    11:11:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    18:18:android.os.ParcelFileDescriptor loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher:
    16:16:void <init>(android.content.Context,android.net.Uri) -> <init>
    14:14:void close(java.lang.Object) -> close
    26:26:void close(android.os.ParcelFileDescriptor) -> close
    14:14:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    21:21:android.os.ParcelFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.data.HttpUrlFetcher -> com.bumptech.glide.load.data.HttpUrlFetcher:
    19:19:void <clinit>() -> <clinit>
    29:29:void <init>(com.bumptech.glide.load.model.GlideUrl) -> <init>
    33:35:void <init>(com.bumptech.glide.load.model.GlideUrl,com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory) -> <init>
    110:110:void cancel() -> cancel
    89:97:void cleanup() -> cleanup
    103:103:java.lang.String getId() -> getId
    17:17:java.lang.Object loadData(com.bumptech.glide.Priority) -> loadData
    40:40:java.io.InputStream loadData(com.bumptech.glide.Priority) -> loadData
    45:83:java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL) -> loadDataWithRedirects
com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory -> com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory:
    117:117:void <init>() -> <init>
    117:117:void <init>(com.bumptech.glide.load.data.HttpUrlFetcher$1) -> <init>
    120:120:java.net.HttpURLConnection build(java.net.URL) -> build
com.bumptech.glide.load.data.LocalUriFetcher -> com.bumptech.glide.load.data.LocalUriFetcher:
    36:38:void <init>(android.content.Context,android.net.Uri) -> <init>
    50:55:void cleanup() -> cleanup
    69:69:java.lang.String getId() -> getId
    43:44:java.lang.Object loadData(com.bumptech.glide.Priority) -> loadData
com.bumptech.glide.load.data.MediaStoreThumbFetcher -> com.bumptech.glide.load.data.MediaStoreThumbFetcher:
    27:27:void <clinit>() -> <clinit>
    39:39:void <init>(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.DataFetcher,int,int) -> <init>
    43:49:void <init>(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.DataFetcher,int,int,com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpenerFactory) -> <init>
    24:24:boolean access$000(android.net.Uri) -> access$000
    24:24:boolean access$100(android.net.Uri) -> access$100
    69:76:void cleanup() -> cleanup
    81:81:java.lang.String getId() -> getId
    91:92:boolean isMediaStoreUri(android.net.Uri) -> isMediaStoreUri
    96:96:boolean isMediaStoreVideo(android.net.Uri) -> isMediaStoreVideo
    24:24:java.lang.Object loadData(com.bumptech.glide.Priority) -> loadData
    54:63:java.io.InputStream loadData(com.bumptech.glide.Priority) -> loadData
com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService -> com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService:
    99:99:void <init>() -> <init>
    101:101:boolean exists(java.io.File) -> exists
    109:109:java.io.File get(java.lang.String) -> get
    105:105:long length(java.io.File) -> length
com.bumptech.glide.load.data.MediaStoreThumbFetcher$ImageThumbnailQuery -> com.bumptech.glide.load.data.MediaStoreThumbFetcher$ImageThumbnailQuery:
    158:158:void <init>() -> <init>
    162:166:android.database.Cursor query(android.content.Context,android.net.Uri) -> query
com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener -> com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener:
    118:118:void <clinit>() -> <clinit>
    123:123:void <init>(com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailQuery) -> <init>
    126:128:void <init>(com.bumptech.glide.load.data.MediaStoreThumbFetcher$FileService,com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailQuery) -> <init>
    135:152:java.io.InputStream open(android.content.Context,android.net.Uri) -> open
com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpenerFactory -> com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpenerFactory:
    182:182:void <init>() -> <init>
    185:190:com.bumptech.glide.load.data.MediaStoreThumbFetcher$ThumbnailStreamOpener build(android.net.Uri,int,int) -> build
com.bumptech.glide.load.data.MediaStoreThumbFetcher$VideoThumbnailQuery -> com.bumptech.glide.load.data.MediaStoreThumbFetcher$VideoThumbnailQuery:
    170:170:void <init>() -> <init>
    174:178:android.database.Cursor query(android.content.Context,android.net.Uri) -> query
com.bumptech.glide.load.data.StreamAssetPathFetcher -> com.bumptech.glide.load.data.StreamAssetPathFetcher:
    13:13:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    11:11:void close(java.lang.Object) -> close
    23:23:void close(java.io.InputStream) -> close
    11:11:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    18:18:java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.StreamLocalUriFetcher -> com.bumptech.glide.load.data.StreamLocalUriFetcher:
    16:16:void <init>(android.content.Context,android.net.Uri) -> <init>
    14:14:void close(java.lang.Object) -> close
    26:26:void close(java.io.InputStream) -> close
    14:14:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    21:21:java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.engine.DecodeJob -> com.bumptech.glide.load.engine.DecodeJob:
    32:32:void <clinit>() -> <clinit>
    51:51:void <init>(com.bumptech.glide.load.engine.EngineKey,int,int,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.engine.cache.DiskCache,com.bumptech.glide.load.engine.DiskCacheStrategy,com.bumptech.glide.Priority) -> <init>
    58:69:void <init>(com.bumptech.glide.load.engine.EngineKey,int,int,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.engine.cache.DiskCache,com.bumptech.glide.load.engine.DiskCacheStrategy,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DecodeJob$FileOpener) -> <init>
    30:30:com.bumptech.glide.load.engine.DecodeJob$FileOpener access$000(com.bumptech.glide.load.engine.DecodeJob) -> access$000
    198:208:com.bumptech.glide.load.engine.Resource cacheAndDecodeSourceData(java.lang.Object) -> cacheAndDecodeSourceData
    132:133:void cancel() -> cancel
    127:128:com.bumptech.glide.load.engine.Resource decodeFromSource() -> decodeFromSource
    185:191:com.bumptech.glide.load.engine.Resource decodeFromSourceData(java.lang.Object) -> decodeFromSourceData
    79:91:com.bumptech.glide.load.engine.Resource decodeResultFromCache() -> decodeResultFromCache
    168:179:com.bumptech.glide.load.engine.Resource decodeSource() -> decodeSource
    103:112:com.bumptech.glide.load.engine.Resource decodeSourceFromCache() -> decodeSourceFromCache
    214:226:com.bumptech.glide.load.engine.Resource loadFromCache(com.bumptech.glide.load.Key) -> loadFromCache
    250:250:void logWithTimeAndKey(java.lang.String,long) -> logWithTimeAndKey
    246:246:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource) -> transcode
    235:237:com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource) -> transform
    137:148:com.bumptech.glide.load.engine.Resource transformEncodeAndTranscode(com.bumptech.glide.load.engine.Resource) -> transformEncodeAndTranscode
    154:161:void writeTransformedToCache(com.bumptech.glide.load.engine.Resource) -> writeTransformedToCache
com.bumptech.glide.load.engine.DecodeJob$FileOpener -> com.bumptech.glide.load.engine.DecodeJob$FileOpener:
    287:287:void <init>() -> <init>
    289:289:java.io.OutputStream open(java.io.File) -> open
com.bumptech.glide.load.engine.DecodeJob$SourceWriter -> com.bumptech.glide.load.engine.DecodeJob$SourceWriter:
    258:260:void <init>(com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.load.Encoder,java.lang.Object) -> <init>
    268:282:boolean write(java.io.File) -> write
com.bumptech.glide.load.engine.DiskCacheStrategy -> com.bumptech.glide.load.engine.DiskCacheStrategy:
    6:14:void <clinit>() -> <clinit>
    19:21:void <init>(java.lang.String,int,boolean,boolean) -> <init>
    35:35:boolean cacheResult() -> cacheResult
    28:28:boolean cacheSource() -> cacheSource
    6:6:com.bumptech.glide.load.engine.DiskCacheStrategy valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.load.engine.DiskCacheStrategy[] values() -> values
com.bumptech.glide.load.engine.Engine -> com.bumptech.glide.load.engine.Engine:
    58:58:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache,java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService) -> <init>
    65:97:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache,java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService,java.util.Map,com.bumptech.glide.load.engine.EngineKeyFactory,java.util.Map,com.bumptech.glide.load.engine.Engine$EngineJobFactory,com.bumptech.glide.load.engine.ResourceRecycler) -> <init>
    206:215:com.bumptech.glide.load.engine.EngineResource getFromCache(com.bumptech.glide.load.Key) -> getFromCache
    143:197:com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.Priority,boolean,com.bumptech.glide.load.engine.DiskCacheStrategy,com.bumptech.glide.request.ResourceCallback) -> load
    201:201:void logWithTimeAndKey(java.lang.String,long,com.bumptech.glide.load.Key) -> logWithTimeAndKey
    242:244:void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key) -> onEngineJobCancelled
    233:237:void onEngineJobComplete(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onEngineJobComplete
    255:259:void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onResourceReleased
    250:250:void onResourceRemoved(com.bumptech.glide.load.engine.Resource) -> onResourceRemoved
    221:224:void release(com.bumptech.glide.load.engine.Resource) -> release
com.bumptech.glide.load.engine.Engine$EngineJobFactory -> com.bumptech.glide.load.engine.Engine$EngineJobFactory:
    301:304:void <init>(java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService,com.bumptech.glide.load.engine.EngineJobListener) -> <init>
    308:308:com.bumptech.glide.load.engine.EngineJob build(com.bumptech.glide.load.Key,boolean) -> build
com.bumptech.glide.load.engine.Engine$LoadStatus -> com.bumptech.glide.load.engine.Engine$LoadStatus:
    46:48:void <init>(com.bumptech.glide.request.ResourceCallback,com.bumptech.glide.load.engine.EngineJob) -> <init>
    52:52:void cancel() -> cancel
com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler -> com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler:
    278:280:void <init>(java.util.Map,java.lang.ref.ReferenceQueue) -> <init>
    285:287:boolean queueIdle() -> queueIdle
com.bumptech.glide.load.engine.Engine$ResourceWeakReference -> com.bumptech.glide.load.engine.Engine$ResourceWeakReference:
    267:268:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource,java.lang.ref.ReferenceQueue) -> <init>
    263:263:com.bumptech.glide.load.Key access$000(com.bumptech.glide.load.engine.Engine$ResourceWeakReference) -> access$000
com.bumptech.glide.load.engine.EngineJob -> com.bumptech.glide.load.engine.EngineJob:
    22:23:void <clinit>() -> <clinit>
    52:52:void <init>(com.bumptech.glide.load.Key,java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService,boolean,com.bumptech.glide.load.engine.EngineJobListener) -> <init>
    28:62:void <init>(com.bumptech.glide.load.Key,java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService,boolean,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory) -> <init>
    21:21:void access$100(com.bumptech.glide.load.engine.EngineJob) -> access$100
    21:21:void access$200(com.bumptech.glide.load.engine.EngineJob) -> access$200
    76:82:void addCallback(com.bumptech.glide.request.ResourceCallback) -> addCallback
    104:107:void addIgnoredCallback(com.bumptech.glide.request.ResourceCallback) -> addIgnoredCallback
    116:125:void cancel() -> cancel
    171:182:void handleExceptionOnMainThread() -> handleExceptionOnMainThread
    140:161:void handleResultOnMainThread() -> handleResultOnMainThread
    111:111:boolean isInIgnoredCallbacks(com.bumptech.glide.request.ResourceCallback) -> isInIgnoredCallbacks
    166:167:void onException(java.lang.Exception) -> onException
    135:136:void onResourceReady(com.bumptech.glide.load.engine.Resource) -> onResourceReady
    87:93:void removeCallback(com.bumptech.glide.request.ResourceCallback) -> removeCallback
    66:67:void start(com.bumptech.glide.load.engine.EngineRunnable) -> start
    72:72:void submitForSource(com.bumptech.glide.load.engine.EngineRunnable) -> submitForSource
com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory -> com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory:
    188:188:void <init>() -> <init>
    190:190:com.bumptech.glide.load.engine.EngineResource build(com.bumptech.glide.load.engine.Resource,boolean) -> build
com.bumptech.glide.load.engine.EngineJob$MainThreadCallback -> com.bumptech.glide.load.engine.EngineJob$MainThreadCallback:
    194:194:void <init>() -> <init>
    194:194:void <init>(com.bumptech.glide.load.engine.EngineJob$1) -> <init>
    198:203:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.engine.EngineKey -> com.bumptech.glide.load.engine.EngineKey:
    32:42:void <init>(java.lang.String,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.Encoder) -> <init>
    57:93:boolean equals(java.lang.Object) -> equals
    46:49:com.bumptech.glide.load.Key getOriginalKey() -> getOriginalKey
    101:113:int hashCode() -> hashCode
    118:132:java.lang.String toString() -> toString
    137:149:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.EngineKeyFactory -> com.bumptech.glide.load.engine.EngineKeyFactory:
    10:10:void <init>() -> <init>
    16:16:com.bumptech.glide.load.engine.EngineKey buildKey(java.lang.String,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.Encoder) -> buildKey
com.bumptech.glide.load.engine.EngineResource -> com.bumptech.glide.load.engine.EngineResource:
    25:30:void <init>(com.bumptech.glide.load.engine.Resource,boolean) -> <init>
    74:80:void acquire() -> acquire
    44:44:java.lang.Object get() -> get
    49:49:int getSize() -> getSize
    39:39:boolean isCacheable() -> isCacheable
    54:61:void recycle() -> recycle
    93:100:void release() -> release
    34:35:void setResourceListener(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> setResourceListener
com.bumptech.glide.load.engine.EngineRunnable -> com.bumptech.glide.load.engine.EngineRunnable:
    37:41:void <init>(com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager,com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.Priority) -> <init>
    45:46:void cancel() -> cancel
    98:101:com.bumptech.glide.load.engine.Resource decode() -> decode
    108:116:com.bumptech.glide.load.engine.Resource decodeFromCache() -> decodeFromCache
    122:122:com.bumptech.glide.load.engine.Resource decodeFromSource() -> decodeFromSource
    127:127:int getPriority() -> getPriority
    81:81:boolean isDecodingFromCache() -> isDecodingFromCache
    85:85:void onLoadComplete(com.bumptech.glide.load.engine.Resource) -> onLoadComplete
    89:93:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    51:76:void run() -> run
com.bumptech.glide.load.engine.EngineRunnable$Stage -> com.bumptech.glide.load.engine.EngineRunnable$Stage:
    130:134:void <clinit>() -> <clinit>
    130:130:void <init>(java.lang.String,int) -> <init>
    130:130:com.bumptech.glide.load.engine.EngineRunnable$Stage valueOf(java.lang.String) -> valueOf
    130:130:com.bumptech.glide.load.engine.EngineRunnable$Stage[] values() -> values
com.bumptech.glide.load.engine.OriginalKey -> com.bumptech.glide.load.engine.OriginalKey:
    16:18:void <init>(java.lang.String,com.bumptech.glide.load.Key) -> <init>
    26:35:boolean equals(java.lang.Object) -> equals
    44:45:int hashCode() -> hashCode
    51:52:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.ResourceRecycler -> com.bumptech.glide.load.engine.ResourceRecycler:
    11:13:void <init>() -> <init>
    16:25:void recycle(com.bumptech.glide.load.engine.Resource) -> recycle
com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback -> com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback:
    29:29:void <init>() -> <init>
    29:29:void <init>(com.bumptech.glide.load.engine.ResourceRecycler$1) -> <init>
    34:36:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy -> com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy:
    10:12:void <init>() -> <init>
    10:10:java.lang.String access$000(int,int,android.graphics.Bitmap$Config) -> access$000
    22:24:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    53:53:java.lang.String getBitmapString(android.graphics.Bitmap) -> getBitmapString
    57:57:java.lang.String getBitmapString(int,int,android.graphics.Bitmap$Config) -> getBitmapString
    44:44:int getSize(android.graphics.Bitmap) -> getSize
    34:34:java.lang.String logBitmap(android.graphics.Bitmap) -> logBitmap
    39:39:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> logBitmap
    15:17:void put(android.graphics.Bitmap) -> put
    29:29:android.graphics.Bitmap removeLast() -> removeLast
    49:49:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key -> com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key:
    82:83:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool) -> <init>
    94:96:boolean equals(java.lang.Object) -> equals
    105:107:int hashCode() -> hashCode
    87:89:void init(int,int,android.graphics.Bitmap$Config) -> init
    118:118:void offer() -> offer
    113:113:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool:
    61:61:void <init>() -> <init>
    61:61:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    70:70:com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key create() -> create
    63:64:com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key get(int,int,android.graphics.Bitmap$Config) -> get
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool:
    7:9:void <init>() -> <init>
    12:14:com.bumptech.glide.load.engine.bitmap_recycle.Poolable get() -> get
    20:21:void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> offer
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter:
    9:9:void <init>() -> <init>
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap:
    17:19:void <init>() -> <init>
    36:46:java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> get
    90:93:void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeHead
    98:101:void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeTail
    22:32:void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable,java.lang.Object) -> put
    110:111:void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> removeEntry
    50:66:java.lang.Object removeLast() -> removeLast
    74:85:java.lang.String toString() -> toString
    105:106:void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> updateEntry
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry:
    122:122:void <init>() -> <init>
    125:127:void <init>(java.lang.Object) -> <init>
    114:114:java.lang.Object access$000(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> access$000
    140:143:void add(java.lang.Object) -> add
    131:132:java.lang.Object removeLast() -> removeLast
    136:136:int size() -> size
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool:
    22:22:void <clinit>() -> <clinit>
    36:40:void <init>(int,com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy) -> <init>
    49:49:void <init>(int) -> <init>
    163:164:void dump() -> dump
    90:90:void evict() -> evict
    95:103:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    171:174:com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy getDefaultStrategy() -> getDefaultStrategy
    111:130:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> getDirty
    65:86:boolean put(android.graphics.Bitmap) -> put
    59:61:void setSizeMultiplier(float) -> setSizeMultiplier
    149:160:void trimToSize(int) -> trimToSize
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker:
    207:207:void <init>() -> <init>
    207:207:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$1) -> <init>
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy -> com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy:
    16:20:void <init>() -> <init>
    16:16:java.lang.String access$200(int) -> access$200
    65:69:void decrementBitmapOfSize(java.lang.Integer) -> decrementBitmapOfSize
    35:48:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    115:116:java.lang.String getBitmapString(android.graphics.Bitmap) -> getBitmapString
    120:120:java.lang.String getBitmapString(int) -> getBitmapString
    86:86:int getSize(android.graphics.Bitmap) -> getSize
    75:75:java.lang.String logBitmap(android.graphics.Bitmap) -> logBitmap
    80:81:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> logBitmap
    24:30:void put(android.graphics.Bitmap) -> put
    56:59:android.graphics.Bitmap removeLast() -> removeLast
    91:91:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key -> com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key:
    143:144:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool) -> <init>
    139:139:int access$100(com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key) -> access$100
    153:155:boolean equals(java.lang.Object) -> equals
    162:162:int hashCode() -> hashCode
    148:148:void init(int) -> init
    172:172:void offer() -> offer
    167:167:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool:
    124:124:void <init>() -> <init>
    124:124:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    134:134:com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key create() -> create
    127:128:com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key get(int) -> get
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$PrettyPrintTreeMap -> com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$PrettyPrintTreeMap:
    96:96:void <init>() -> <init>
    96:96:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$1) -> <init>
    99:110:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.cache.DiskCacheAdapter -> com.bumptech.glide.load.engine.cache.DiskCacheAdapter:
    10:10:void <init>() -> <init>
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper -> com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper:
    50:53:void <init>(java.io.File,int) -> <init>
    108:113:void delete(com.bumptech.glide.load.Key) -> delete
    44:47:com.bumptech.glide.load.engine.cache.DiskCache get(java.io.File,int) -> get
    65:77:java.io.File get(com.bumptech.glide.load.Key) -> get
    57:60:com.bumptech.glide.disklrucache.DiskLruCache getDiskCache() -> getDiskCache
    85:101:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer) -> put
com.bumptech.glide.load.engine.cache.LruResourceCache -> com.bumptech.glide.load.engine.cache.LruResourceCache:
    21:21:void <init>(int) -> <init>
    12:12:int getSize(java.lang.Object) -> getSize
    38:38:int getSize(com.bumptech.glide.load.engine.Resource) -> getSize
    12:12:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    31:32:void onItemEvicted(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> onItemEvicted
    12:12:com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> put
    12:12:com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key) -> remove
    26:26:void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener) -> setResourceRemovedListener
com.bumptech.glide.load.engine.cache.MemorySizeCalculator -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator:
    32:33:void <init>(android.content.Context) -> <init>
    36:58:void <init>(android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions) -> <init>
    73:73:int getBitmapPoolSize() -> getBitmapPoolSize
    77:79:int getMaxSize(android.app.ActivityManager) -> getMaxSize
    66:66:int getMemoryCacheSize() -> getMemoryCacheSize
    89:91:boolean isLowMemoryDevice(android.app.ActivityManager) -> isLowMemoryDevice
    84:84:int toMb(int) -> toMb
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions:
    97:98:void <init>(android.util.DisplayMetrics) -> <init>
    108:108:int getHeightPixels() -> getHeightPixels
    103:103:int getWidthPixels() -> getWidthPixels
com.bumptech.glide.load.engine.cache.SafeKeyGenerator -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator:
    14:15:void <init>() -> <init>
    19:34:java.lang.String getSafeKey(com.bumptech.glide.load.Key) -> getSafeKey
com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor -> com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor:
    27:27:void <init>(int) -> <init>
    18:32:void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.ThreadFactory) -> <init>
    37:37:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory -> com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory:
    44:45:void <init>() -> <init>
    48:55:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory$1 -> com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory$1:
    48:48:void <init>(com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory,java.lang.Runnable,java.lang.String) -> <init>
    51:52:void run() -> run
com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$LoadTask -> com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$LoadTask:
    66:72:void <init>(java.lang.Runnable,java.lang.Object,int) -> <init>
    61:61:int compareTo(java.lang.Object) -> compareTo
    94:96:int compareTo(com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$LoadTask) -> compareTo
    78:80:boolean equals(java.lang.Object) -> equals
    87:88:int hashCode() -> hashCode
com.bumptech.glide.load.engine.prefill.BitmapPreFiller -> com.bumptech.glide.load.engine.prefill.BitmapPreFiller:
    24:31:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat) -> <init>
com.bumptech.glide.load.model.AssetUriParser -> com.bumptech.glide.load.model.AssetUriParser:
    22:23:boolean isAssetUri(android.net.Uri) -> isAssetUri
    34:34:java.lang.String toAssetPath(android.net.Uri) -> toAssetPath
com.bumptech.glide.load.model.FileLoader -> com.bumptech.glide.load.model.FileLoader:
    19:20:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    15:15:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
    25:25:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.io.File,int,int) -> getResourceFetcher
com.bumptech.glide.load.model.GenericLoaderFactory -> com.bumptech.glide.load.model.GenericLoaderFactory:
    22:22:void <clinit>() -> <clinit>
    17:37:void <init>(android.content.Context) -> <init>
    126:146:com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class) -> buildModelLoader
    154:159:void cacheModelLoader(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoader) -> cacheModelLoader
    150:150:void cacheNullLoader(java.lang.Class,java.lang.Class) -> cacheNullLoader
    163:166:com.bumptech.glide.load.model.ModelLoader getCachedLoader(java.lang.Class,java.lang.Class) -> getCachedLoader
    173:190:com.bumptech.glide.load.model.ModelLoaderFactory getFactory(java.lang.Class,java.lang.Class) -> getFactory
    73:94:com.bumptech.glide.load.model.ModelLoaderFactory register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> register
com.bumptech.glide.load.model.GenericLoaderFactory$1 -> com.bumptech.glide.load.model.GenericLoaderFactory$1:
    22:22:void <init>() -> <init>
    25:25:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
com.bumptech.glide.load.model.GlideUrl -> com.bumptech.glide.load.model.GlideUrl:
    30:35:void <init>(java.net.URL) -> <init>
    38:43:void <init>(java.lang.String) -> <init>
    78:82:boolean equals(java.lang.Object) -> equals
    55:61:java.net.URL getSafeUrl() -> getSafeUrl
    87:87:int hashCode() -> hashCode
    67:70:java.lang.String toString() -> toString
    48:48:java.net.URL toURL() -> toURL
com.bumptech.glide.load.model.ImageVideoModelLoader -> com.bumptech.glide.load.model.ImageVideoModelLoader:
    27:32:void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader) -> <init>
    38:47:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher -> com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher:
    58:60:void <init>(com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.data.DataFetcher) -> <init>
    119:123:void cancel() -> cancel
    99:103:void cleanup() -> cleanup
    110:113:java.lang.String getId() -> getId
    53:53:java.lang.Object loadData(com.bumptech.glide.Priority) -> loadData
    68:93:com.bumptech.glide.load.model.ImageVideoWrapper loadData(com.bumptech.glide.Priority) -> loadData
com.bumptech.glide.load.model.ImageVideoWrapper -> com.bumptech.glide.load.model.ImageVideoWrapper:
    14:16:void <init>(java.io.InputStream,android.os.ParcelFileDescriptor) -> <init>
    24:24:android.os.ParcelFileDescriptor getFileDescriptor() -> getFileDescriptor
    20:20:java.io.InputStream getStream() -> getStream
com.bumptech.glide.load.model.ImageVideoWrapperEncoder -> com.bumptech.glide.load.model.ImageVideoWrapperEncoder:
    21:23:void <init>(com.bumptech.glide.load.Encoder,com.bumptech.glide.load.Encoder) -> <init>
    15:15:boolean encode(java.lang.Object,java.io.OutputStream) -> encode
    28:31:boolean encode(com.bumptech.glide.load.model.ImageVideoWrapper,java.io.OutputStream) -> encode
    37:40:java.lang.String getId() -> getId
com.bumptech.glide.load.model.ModelCache -> com.bumptech.glide.load.model.ModelCache:
    25:26:void <init>(int) -> <init>
    44:46:java.lang.Object get(java.lang.Object,int,int) -> get
    59:60:void put(java.lang.Object,int,int,java.lang.Object) -> put
com.bumptech.glide.load.model.ModelCache$1 -> com.bumptech.glide.load.model.ModelCache$1:
    26:26:void <init>(com.bumptech.glide.load.model.ModelCache,int) -> <init>
    26:26:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    29:29:void onItemEvicted(com.bumptech.glide.load.model.ModelCache$ModelKey,java.lang.Object) -> onItemEvicted
com.bumptech.glide.load.model.ModelCache$ModelKey -> com.bumptech.glide.load.model.ModelCache$ModelKey:
    65:65:void <clinit>() -> <clinit>
    82:82:void <init>() -> <init>
    96:98:boolean equals(java.lang.Object) -> equals
    73:78:com.bumptech.glide.load.model.ModelCache$ModelKey get(java.lang.Object,int,int) -> get
    105:107:int hashCode() -> hashCode
    85:87:void init(java.lang.Object,int,int) -> init
    91:91:void release() -> release
com.bumptech.glide.load.model.ResourceLoader -> com.bumptech.glide.load.model.ResourceLoader:
    22:22:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader) -> <init>
    25:27:void <init>(android.content.res.Resources,com.bumptech.glide.load.model.ModelLoader) -> <init>
    16:16:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
    32:37:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Integer,int,int) -> getResourceFetcher
com.bumptech.glide.load.model.StreamEncoder -> com.bumptech.glide.load.model.StreamEncoder:
    15:15:void <init>() -> <init>
    15:15:boolean encode(java.lang.Object,java.io.OutputStream) -> encode
    20:34:boolean encode(java.io.InputStream,java.io.OutputStream) -> encode
com.bumptech.glide.load.model.StringLoader -> com.bumptech.glide.load.model.StringLoader:
    18:19:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    15:15:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
    25:35:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.String,int,int) -> getResourceFetcher
    39:39:android.net.Uri toFileUri(java.lang.String) -> toFileUri
com.bumptech.glide.load.model.UriLoader -> com.bumptech.glide.load.model.UriLoader:
    20:22:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader) -> <init>
    16:16:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
    27:38:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(android.net.Uri,int,int) -> getResourceFetcher
    49:51:boolean isLocalUri(java.lang.String) -> isLocalUri
com.bumptech.glide.load.model.UrlLoader -> com.bumptech.glide.load.model.UrlLoader:
    17:18:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    14:14:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
    23:23:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.net.URL,int,int) -> getResourceFetcher
com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader -> com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader:
    42:42:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader$Factory -> com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader$Factory:
    25:25:void <init>() -> <init>
    28:28:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader -> com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader:
    41:41:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader) -> <init>
com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader$Factory -> com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader$Factory:
    22:22:void <init>() -> <init>
    26:26:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader -> com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader:
    40:40:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader$Factory -> com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader$Factory:
    23:23:void <init>() -> <init>
    26:26:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader -> com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader:
    43:43:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader) -> <init>
    53:53:com.bumptech.glide.load.data.DataFetcher getAssetPathFetcher(android.content.Context,java.lang.String) -> getAssetPathFetcher
    48:48:com.bumptech.glide.load.data.DataFetcher getLocalUriFetcher(android.content.Context,android.net.Uri) -> getLocalUriFetcher
com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader$Factory -> com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader$Factory:
    25:25:void <init>() -> <init>
    28:28:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader -> com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader:
    44:45:void <init>(com.bumptech.glide.load.model.ModelCache) -> <init>
    19:19:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
    52:59:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(com.bumptech.glide.load.model.GlideUrl,int,int) -> getResourceFetcher
com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader$Factory -> com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader$Factory:
    26:27:void <init>() -> <init>
    31:31:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.stream.MediaStoreStreamLoader -> com.bumptech.glide.load.model.stream.MediaStoreStreamLoader:
    24:26:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader) -> <init>
    20:20:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
    31:31:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(android.net.Uri,int,int) -> getResourceFetcher
com.bumptech.glide.load.model.stream.StreamByteArrayLoader -> com.bumptech.glide.load.model.stream.StreamByteArrayLoader:
    21:21:void <init>() -> <init>
    29:30:void <init>(java.lang.String) -> <init>
    17:17:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
    35:35:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(byte[],int,int) -> getResourceFetcher
com.bumptech.glide.load.model.stream.StreamByteArrayLoader$Factory -> com.bumptech.glide.load.model.stream.StreamByteArrayLoader$Factory:
    41:41:void <init>() -> <init>
    45:45:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.stream.StreamFileLoader -> com.bumptech.glide.load.model.stream.StreamFileLoader:
    40:40:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
com.bumptech.glide.load.model.stream.StreamFileLoader$Factory -> com.bumptech.glide.load.model.stream.StreamFileLoader$Factory:
    23:23:void <init>() -> <init>
    26:26:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.stream.StreamResourceLoader -> com.bumptech.glide.load.model.stream.StreamResourceLoader:
    40:40:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader) -> <init>
com.bumptech.glide.load.model.stream.StreamResourceLoader$Factory -> com.bumptech.glide.load.model.stream.StreamResourceLoader$Factory:
    22:22:void <init>() -> <init>
    26:26:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.stream.StreamStringLoader -> com.bumptech.glide.load.model.stream.StreamStringLoader:
    40:40:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
com.bumptech.glide.load.model.stream.StreamStringLoader$Factory -> com.bumptech.glide.load.model.stream.StreamStringLoader$Factory:
    23:23:void <init>() -> <init>
    26:26:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.stream.StreamUriLoader -> com.bumptech.glide.load.model.stream.StreamUriLoader:
    46:46:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader) -> <init>
    56:56:com.bumptech.glide.load.data.DataFetcher getAssetPathFetcher(android.content.Context,java.lang.String) -> getAssetPathFetcher
    51:51:com.bumptech.glide.load.data.DataFetcher getLocalUriFetcher(android.content.Context,android.net.Uri) -> getLocalUriFetcher
com.bumptech.glide.load.model.stream.StreamUriLoader$Factory -> com.bumptech.glide.load.model.stream.StreamUriLoader$Factory:
    28:28:void <init>() -> <init>
    32:32:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.model.stream.StreamUrlLoader -> com.bumptech.glide.load.model.stream.StreamUrlLoader:
    37:37:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
com.bumptech.glide.load.model.stream.StreamUrlLoader$Factory -> com.bumptech.glide.load.model.stream.StreamUrlLoader$Factory:
    24:24:void <init>() -> <init>
    27:27:com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory) -> build
com.bumptech.glide.load.resource.NullEncoder -> com.bumptech.glide.load.resource.NullEncoder:
    13:13:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    22:22:com.bumptech.glide.load.Encoder get() -> get
com.bumptech.glide.load.resource.NullResourceEncoder -> com.bumptech.glide.load.resource.NullResourceEncoder:
    14:14:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    13:13:boolean encode(java.lang.Object,java.io.OutputStream) -> encode
    23:23:com.bumptech.glide.load.resource.NullResourceEncoder get() -> get
com.bumptech.glide.load.resource.SimpleResource -> com.bumptech.glide.load.resource.SimpleResource:
    15:19:void <init>(java.lang.Object) -> <init>
    24:24:java.lang.Object get() -> get
com.bumptech.glide.load.resource.UnitTransformation -> com.bumptech.glide.load.resource.UnitTransformation:
    12:12:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    21:21:com.bumptech.glide.load.resource.UnitTransformation get() -> get
com.bumptech.glide.load.resource.bitmap.BitmapEncoder -> com.bumptech.glide.load.resource.bitmap.BitmapEncoder:
    32:32:void <init>() -> <init>
    35:37:void <init>(android.graphics.Bitmap$CompressFormat,int) -> <init>
    25:25:boolean encode(java.lang.Object,java.io.OutputStream) -> encode
    42:49:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream) -> encode
    60:65:android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap) -> getFormat
com.bumptech.glide.load.resource.bitmap.BitmapResource -> com.bumptech.glide.load.resource.bitmap.BitmapResource:
    31:39:void <init>(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    12:12:java.lang.Object get() -> get
    44:44:android.graphics.Bitmap get() -> get
    49:49:int getSize() -> getSize
    27:27:com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> obtain
    54:55:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.BitmapTransformation -> com.bumptech.glide.load.resource.bitmap.BitmapTransformation:
    39:40:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    46:56:com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int) -> transform
com.bumptech.glide.load.resource.bitmap.CenterCrop -> com.bumptech.glide.load.resource.bitmap.CenterCrop:
    21:21:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    28:32:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
com.bumptech.glide.load.resource.bitmap.Downsampler -> com.bumptech.glide.load.resource.bitmap.Downsampler:
    27:68:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    104:167:android.graphics.Bitmap decode(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int,com.bumptech.glide.load.DecodeFormat) -> decode
    293:315:android.graphics.Bitmap decodeStream(com.bumptech.glide.util.ExceptionCatchingInputStream,android.graphics.BitmapFactory$Options) -> decodeStream
    193:202:android.graphics.Bitmap downsampleWithSize(com.bumptech.glide.util.ExceptionCatchingInputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int,int,com.bumptech.glide.load.DecodeFormat) -> downsampleWithSize
    235:258:android.graphics.Bitmap$Config getConfig(java.io.InputStream,com.bumptech.glide.load.DecodeFormat) -> getConfig
    333:341:android.graphics.BitmapFactory$Options getDefaultOptions() -> getDefaultOptions
    286:289:int[] getDimensions(com.bumptech.glide.util.ExceptionCatchingInputStream,android.graphics.BitmapFactory$Options) -> getDimensions
    175:187:int getRoundedSampleSize(int,int,int,int,int) -> getRoundedSampleSize
    345:348:void releaseOptions(android.graphics.BitmapFactory$Options) -> releaseOptions
    353:362:void resetOptions(android.graphics.BitmapFactory$Options) -> resetOptions
    325:326:void setInBitmap(android.graphics.BitmapFactory$Options,android.graphics.Bitmap) -> setInBitmap
    207:229:boolean shouldUsePool(java.io.InputStream) -> shouldUsePool
com.bumptech.glide.load.resource.bitmap.Downsampler$1 -> com.bumptech.glide.load.resource.bitmap.Downsampler$1:
    36:36:void <init>() -> <init>
    39:39:int getSampleSize(int,int,int,int) -> getSampleSize
com.bumptech.glide.load.resource.bitmap.Downsampler$2 -> com.bumptech.glide.load.resource.bitmap.Downsampler$2:
    53:53:void <init>() -> <init>
    56:56:int getSampleSize(int,int,int,int) -> getSampleSize
com.bumptech.glide.load.resource.bitmap.Downsampler$3 -> com.bumptech.glide.load.resource.bitmap.Downsampler$3:
    68:68:void <init>() -> <init>
com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDataLoadProvider -> com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDataLoadProvider:
    27:31:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat) -> <init>
    36:36:com.bumptech.glide.load.ResourceDecoder getCacheDecoder() -> getCacheDecoder
    51:51:com.bumptech.glide.load.ResourceEncoder getEncoder() -> getEncoder
    41:41:com.bumptech.glide.load.ResourceDecoder getSourceDecoder() -> getSourceDecoder
    46:46:com.bumptech.glide.load.Encoder getSourceEncoder() -> getSourceEncoder
com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder:
    33:33:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat) -> <init>
    37:40:void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat) -> <init>
    19:19:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    45:46:com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int) -> decode
com.bumptech.glide.load.resource.bitmap.FitCenter -> com.bumptech.glide.load.resource.bitmap.FitCenter:
    19:19:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    24:24:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable -> com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable:
    28:28:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    20:46:void <init>(android.content.res.Resources,com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState) -> <init>
    97:101:void draw(android.graphics.Canvas) -> draw
    136:136:android.graphics.Bitmap getBitmap() -> getBitmap
    92:92:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    56:56:int getIntrinsicHeight() -> getIntrinsicHeight
    51:51:int getIntrinsicWidth() -> getIntrinsicWidth
    121:122:int getOpacity() -> getOpacity
    128:130:android.graphics.drawable.Drawable mutate() -> mutate
    86:87:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    106:109:void setAlpha(int) -> setAlpha
    115:116:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState -> com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState:
    141:141:void <clinit>() -> <clinit>
    147:150:void <init>(android.graphics.Bitmap) -> <init>
    155:156:void <init>(com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState) -> <init>
    172:173:void mutatePaint() -> mutatePaint
    179:179:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    184:184:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    165:166:void setAlpha(int) -> setAlpha
    160:161:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawableResource -> com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawableResource:
    14:15:void <init>(com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    20:20:int getSize() -> getSize
    25:25:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.ImageHeaderParser -> com.bumptech.glide.load.resource.bitmap.ImageHeaderParser:
    62:73:void <clinit>() -> <clinit>
    76:77:void <init>(java.io.InputStream) -> <init>
    151:186:byte[] getExifSegment() -> getExifSegment
    121:140:int getOrientation() -> getOrientation
    87:110:com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType getType() -> getType
    83:83:boolean hasAlpha() -> hasAlpha
    199:278:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader) -> parseExifSegment
com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType -> com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType:
    26:36:void <clinit>() -> <clinit>
    39:40:void <init>(java.lang.String,int,boolean) -> <init>
    44:44:boolean hasAlpha() -> hasAlpha
    26:26:com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType valueOf(java.lang.String) -> valueOf
    26:26:com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType[] values() -> values
com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader -> com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader:
    297:299:void <init>(byte[]) -> <init>
    315:315:short getInt16(int) -> getInt16
    311:311:int getInt32(int) -> getInt32
    307:307:int length() -> length
    303:303:void order(java.nio.ByteOrder) -> order
com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader -> com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader:
    323:324:void <init>(java.io.InputStream) -> <init>
    344:344:int getByte() -> getByte
    328:328:int getUInt16() -> getUInt16
    332:332:short getUInt8() -> getUInt8
    340:340:int read(byte[]) -> read
    336:336:long skip(long) -> skip
com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder:
    26:28:void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder) -> <init>
    20:20:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    36:50:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.model.ImageVideoWrapper,int,int) -> decode
com.bumptech.glide.load.resource.bitmap.ImageVideoDataLoadProvider -> com.bumptech.glide.load.resource.bitmap.ImageVideoDataLoadProvider:
    27:33:void <init>(com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.provider.DataLoadProvider) -> <init>
    38:38:com.bumptech.glide.load.ResourceDecoder getCacheDecoder() -> getCacheDecoder
    53:53:com.bumptech.glide.load.ResourceEncoder getEncoder() -> getEncoder
    43:43:com.bumptech.glide.load.ResourceDecoder getSourceDecoder() -> getSourceDecoder
    48:48:com.bumptech.glide.load.Encoder getSourceEncoder() -> getSourceEncoder
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream:
    62:74:void <init>(java.io.InputStream,byte[]) -> <init>
    89:93:int available() -> available
    120:124:void close() -> close
    130:167:int fillbuf(java.io.InputStream,byte[]) -> fillbuf
    108:109:void fixMarkLimit() -> fixMarkLimit
    190:192:void mark(int) -> mark
    222:245:int read() -> read
    271:329:int read(byte[],int,int) -> read
    346:353:void reset() -> reset
    370:402:long skip(long) -> skip
    97:97:java.io.IOException streamClosed() -> streamClosed
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException:
    413:413:void <init>(java.lang.String) -> <init>
com.bumptech.glide.load.resource.bitmap.StreamBitmapDataLoadProvider -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDataLoadProvider:
    27:31:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat) -> <init>
    36:36:com.bumptech.glide.load.ResourceDecoder getCacheDecoder() -> getCacheDecoder
    51:51:com.bumptech.glide.load.ResourceEncoder getEncoder() -> getEncoder
    41:41:com.bumptech.glide.load.ResourceDecoder getSourceDecoder() -> getSourceDecoder
    46:46:com.bumptech.glide.load.Encoder getSourceEncoder() -> getSourceEncoder
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder:
    39:39:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat) -> <init>
    42:45:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat) -> <init>
    19:19:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    50:51:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int) -> decode
    56:63:java.lang.String getId() -> getId
com.bumptech.glide.load.resource.bitmap.TransformationUtils -> com.bumptech.glide.load.resource.bitmap.TransformationUtils:
    41:71:android.graphics.Bitmap centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int) -> centerCrop
    87:129:android.graphics.Bitmap fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int) -> fitCenter
    289:310:void initializeMatrixForRotation(int,android.graphics.Matrix) -> initializeMatrixForRotation
    261:280:android.graphics.Bitmap rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int) -> rotateImageExif
    144:145:void setAlpha(android.graphics.Bitmap,android.graphics.Bitmap) -> setAlpha
com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder:
    19:19:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    26:27:void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory) -> <init>
    34:38:android.graphics.Bitmap decode(android.os.ParcelFileDescriptor,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int,com.bumptech.glide.load.DecodeFormat) -> decode
com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory -> com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory:
    48:48:void <init>() -> <init>
    50:50:android.media.MediaMetadataRetriever build() -> build
com.bumptech.glide.load.resource.drawable.DrawableResource -> com.bumptech.glide.load.resource.drawable.DrawableResource:
    20:24:void <init>(android.graphics.drawable.Drawable) -> <init>
    16:16:java.lang.Object get() -> get
    31:35:android.graphics.drawable.Drawable get() -> get
com.bumptech.glide.load.resource.drawable.GlideDrawable -> com.bumptech.glide.load.resource.drawable.GlideDrawable:
    10:10:void <init>() -> <init>
com.bumptech.glide.load.resource.file.FileDecoder -> com.bumptech.glide.load.resource.file.FileDecoder:
    11:11:void <init>() -> <init>
    11:11:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    15:15:com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int) -> decode
com.bumptech.glide.load.resource.file.FileResource -> com.bumptech.glide.load.resource.file.FileResource:
    12:12:void <init>(java.io.File) -> <init>
com.bumptech.glide.load.resource.file.FileToStreamDecoder -> com.bumptech.glide.load.resource.file.FileToStreamDecoder:
    18:18:void <clinit>() -> <clinit>
    24:24:void <init>(com.bumptech.glide.load.ResourceDecoder) -> <init>
    28:30:void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.resource.file.FileToStreamDecoder$FileOpener) -> <init>
    17:17:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    38:48:com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int) -> decode
com.bumptech.glide.load.resource.file.FileToStreamDecoder$FileOpener -> com.bumptech.glide.load.resource.file.FileToStreamDecoder$FileOpener:
    58:58:void <init>() -> <init>
    60:60:java.io.InputStream open(java.io.File) -> open
com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider -> com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider:
    19:19:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    31:31:com.bumptech.glide.load.ResourceDecoder getCacheDecoder() -> getCacheDecoder
    46:46:com.bumptech.glide.load.ResourceEncoder getEncoder() -> getEncoder
    36:36:com.bumptech.glide.load.ResourceDecoder getSourceDecoder() -> getSourceDecoder
    41:41:com.bumptech.glide.load.Encoder getSourceEncoder() -> getSourceEncoder
com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder -> com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder:
    49:49:void <init>() -> <init>
    49:49:void <init>(com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$1) -> <init>
    49:49:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    52:52:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int) -> decode
com.bumptech.glide.load.resource.gif.GifBitmapProvider -> com.bumptech.glide.load.resource.gif.GifBitmapProvider:
    12:13:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    18:18:android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config) -> obtain
    23:24:void release(android.graphics.Bitmap) -> release
com.bumptech.glide.load.resource.gif.GifDrawable -> com.bumptech.glide.load.resource.gif.GifDrawable:
    73:73:void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap) -> <init>
    26:86:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable$GifState) -> <init>
    219:230:void draw(android.graphics.Canvas) -> draw
    276:276:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    123:123:byte[] getData() -> getData
    99:99:android.graphics.Bitmap getFirstFrame() -> getFirstFrame
    127:127:int getFrameCount() -> getFrameCount
    119:119:com.bumptech.glide.load.Transformation getFrameTransformation() -> getFrameTransformation
    198:198:int getIntrinsicHeight() -> getIntrinsicHeight
    193:193:int getIntrinsicWidth() -> getIntrinsicWidth
    203:203:boolean isRunning() -> isRunning
    213:214:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    252:270:void onFrameRead(int) -> onFrameRead
    283:285:void recycle() -> recycle
    161:162:void reset() -> reset
    131:131:void resetLoopCount() -> resetLoopCount
    235:235:void setAlpha(int) -> setAlpha
    240:240:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    104:111:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> setFrameTransformation
    301:308:void setLoopCount(int) -> setLoopCount
    182:188:boolean setVisible(boolean,boolean) -> setVisible
    136:139:void start() -> start
    167:172:void startRunning() -> startRunning
    145:153:void stop() -> stop
    177:177:void stopRunning() -> stopRunning
com.bumptech.glide.load.resource.gif.GifDrawable$GifState -> com.bumptech.glide.load.resource.gif.GifDrawable$GifState:
    326:338:void <init>(com.bumptech.glide.gifdecoder.GifHeader,byte[],android.content.Context,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> <init>
    357:357:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    362:362:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.bumptech.glide.load.resource.gif.GifDrawableLoadProvider -> com.bumptech.glide.load.resource.gif.GifDrawableLoadProvider:
    26:30:void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    35:35:com.bumptech.glide.load.ResourceDecoder getCacheDecoder() -> getCacheDecoder
    50:50:com.bumptech.glide.load.ResourceEncoder getEncoder() -> getEncoder
    40:40:com.bumptech.glide.load.ResourceDecoder getSourceDecoder() -> getSourceDecoder
    45:45:com.bumptech.glide.load.Encoder getSourceEncoder() -> getSourceEncoder
com.bumptech.glide.load.resource.gif.GifDrawableResource -> com.bumptech.glide.load.resource.gif.GifDrawableResource:
    11:11:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable) -> <init>
    16:16:int getSize() -> getSize
    21:22:void recycle() -> recycle
com.bumptech.glide.load.resource.gif.GifDrawableTransformation -> com.bumptech.glide.load.resource.gif.GifDrawableTransformation:
    18:20:void <init>(com.bumptech.glide.load.Transformation,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    45:45:java.lang.String getId() -> getId
    25:39:com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int) -> transform
com.bumptech.glide.load.resource.gif.GifFrameManager -> com.bumptech.glide.load.resource.gif.GifFrameManager:
    44:44:void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int) -> <init>
    37:69:void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,int,int) -> <init>
    27:27:int access$100(com.bumptech.glide.load.resource.gif.GifFrameManager) -> access$100
    27:27:int access$200(com.bumptech.glide.load.resource.gif.GifFrameManager) -> access$200
    27:27:android.os.Handler access$300(com.bumptech.glide.load.resource.gif.GifFrameManager) -> access$300
    27:27:boolean access$402(com.bumptech.glide.load.resource.gif.GifFrameManager,boolean) -> access$402
    27:27:com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget access$500(com.bumptech.glide.load.resource.gif.GifFrameManager) -> access$500
    27:27:com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget access$502(com.bumptech.glide.load.resource.gif.GifFrameManager,com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget) -> access$502
    105:117:void clear() -> clear
    101:101:android.graphics.Bitmap getCurrentFrame() -> getCurrentFrame
    81:97:void getNextFrame(com.bumptech.glide.load.resource.gif.GifFrameManager$FrameCallback) -> getNextFrame
    74:76:void setFrameTransformation(com.bumptech.glide.load.Transformation) -> setFrameTransformation
com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget -> com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget:
    126:129:void <init>(com.bumptech.glide.load.resource.gif.GifFrameManager,com.bumptech.glide.load.resource.gif.GifFrameManager$FrameCallback,long) -> <init>
    120:120:android.graphics.Bitmap access$000(com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget) -> access$000
    161:161:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    120:120:void onResourceReady(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation) -> onResourceReady
    138:139:void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.animation.GlideAnimation) -> onResourceReady
    144:156:void run() -> run
    133:133:void setFrameIndex(int) -> setFrameIndex
com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget$1 -> com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget$1:
    149:149:void <init>(com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget,com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget) -> <init>
    152:152:void run() -> run
com.bumptech.glide.load.resource.gif.GifFrameManager$FrameSignature -> com.bumptech.glide.load.resource.gif.GifFrameManager$FrameSignature:
    169:170:void <init>() -> <init>
    179:181:boolean equals(java.lang.Object) -> equals
    188:189:int hashCode() -> hashCode
    174:174:void increment() -> increment
    195:195:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.gif.GifFrameModelLoader -> com.bumptech.glide.load.resource.gif.GifFrameModelLoader:
    8:8:void <init>() -> <init>
    8:8:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int) -> getResourceFetcher
    12:12:com.bumptech.glide.load.data.DataFetcher getResourceFetcher(com.bumptech.glide.gifdecoder.GifDecoder,int,int) -> getResourceFetcher
com.bumptech.glide.load.resource.gif.GifFrameModelLoader$GifFrameDataFetcher -> com.bumptech.glide.load.resource.gif.GifFrameModelLoader$GifFrameDataFetcher:
    18:19:void <init>(com.bumptech.glide.gifdecoder.GifDecoder) -> <init>
    34:34:java.lang.String getId() -> getId
    15:15:java.lang.Object loadData(com.bumptech.glide.Priority) -> loadData
    24:24:com.bumptech.glide.gifdecoder.GifDecoder loadData(com.bumptech.glide.Priority) -> loadData
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder -> com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder:
    14:15:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    11:11:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    20:21:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.gifdecoder.GifDecoder,int,int) -> decode
com.bumptech.glide.load.resource.gif.GifResourceDecoder -> com.bumptech.glide.load.resource.gif.GifResourceDecoder:
    28:29:void <clinit>() -> <clinit>
    42:42:void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    47:52:void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifHeaderParserPool,com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifDecoderPool) -> <init>
    26:26:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    57:65:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int) -> decode
    69:85:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder) -> decode
    89:91:android.graphics.Bitmap decodeFirstFrame(com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.gifdecoder.GifHeader,byte[]) -> decodeFirstFrame
    101:113:byte[] inputStreamToBytes(java.io.InputStream) -> inputStreamToBytes
com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifDecoderPool -> com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifDecoderPool:
    117:118:void <init>() -> <init>
    121:125:com.bumptech.glide.gifdecoder.GifDecoder obtain(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider) -> obtain
    129:131:void release(com.bumptech.glide.gifdecoder.GifDecoder) -> release
com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifHeaderParserPool -> com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifHeaderParserPool:
    135:136:void <init>() -> <init>
    139:143:com.bumptech.glide.gifdecoder.GifHeaderParser obtain(byte[]) -> obtain
    147:149:void release(com.bumptech.glide.gifdecoder.GifHeaderParser) -> release
com.bumptech.glide.load.resource.gif.GifResourceEncoder -> com.bumptech.glide.load.resource.gif.GifResourceEncoder:
    26:26:void <clinit>() -> <clinit>
    33:33:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    37:40:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory) -> <init>
    101:107:com.bumptech.glide.gifdecoder.GifDecoder decodeHeaders(byte[]) -> decodeHeaders
    25:25:boolean encode(java.lang.Object,java.io.OutputStream) -> encode
    45:81:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream) -> encode
    115:119:com.bumptech.glide.load.engine.Resource getTransformedFrame(android.graphics.Bitmap,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.resource.gif.GifDrawable) -> getTransformedFrame
    90:93:boolean writeDataDirect(byte[],java.io.OutputStream) -> writeDataDirect
com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory -> com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory:
    130:130:void <init>() -> <init>
    133:133:com.bumptech.glide.gifdecoder.GifDecoder buildDecoder(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider) -> buildDecoder
    141:141:com.bumptech.glide.gifencoder.AnimatedGifEncoder buildEncoder() -> buildEncoder
    145:145:com.bumptech.glide.load.engine.Resource buildFrameResource(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> buildFrameResource
    137:137:com.bumptech.glide.gifdecoder.GifHeaderParser buildParser() -> buildParser
com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper -> com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper:
    16:24:void <init>(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.engine.Resource) -> <init>
    42:42:com.bumptech.glide.load.engine.Resource getBitmapResource() -> getBitmapResource
    49:49:com.bumptech.glide.load.engine.Resource getGifResource() -> getGifResource
    31:34:int getSize() -> getSize
com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource -> com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource:
    14:18:void <init>(com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper) -> <init>
    11:11:java.lang.Object get() -> get
    23:23:com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper get() -> get
    28:28:int getSize() -> getSize
    33:39:void recycle() -> recycle
com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder -> com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder:
    23:24:void <clinit>() -> <clinit>
    38:38:void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    44:49:void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser,com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory) -> <init>
    22:22:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    56:65:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.model.ImageVideoWrapper,int,int) -> decode
    70:73:com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper decode(com.bumptech.glide.load.model.ImageVideoWrapper,int,int,byte[]) -> decode
    121:123:com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper decodeBitmapWrapper(com.bumptech.glide.load.model.ImageVideoWrapper,int,int) -> decodeBitmapWrapper
    101:112:com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper decodeGifWrapper(java.io.InputStream,int,int) -> decodeGifWrapper
    80:94:com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper decodeStream(com.bumptech.glide.load.model.ImageVideoWrapper,int,int,byte[]) -> decodeStream
    131:134:java.lang.String getId() -> getId
com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory -> com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory:
    138:138:void <init>() -> <init>
    140:140:java.io.InputStream build(java.io.InputStream,byte[]) -> build
com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser -> com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser:
    145:145:void <init>() -> <init>
    147:147:com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType parse(java.io.InputStream) -> parse
com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceEncoder -> com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceEncoder:
    21:23:void <init>(com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.ResourceEncoder) -> <init>
    15:15:boolean encode(java.lang.Object,java.io.OutputStream) -> encode
    28:34:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream) -> encode
    40:43:java.lang.String getId() -> getId
com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder -> com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder:
    18:19:void <init>(com.bumptech.glide.load.ResourceDecoder) -> <init>
    14:14:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int) -> decode
    24:24:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int) -> decode
    29:29:java.lang.String getId() -> getId
com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation -> com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation:
    20:20:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation) -> <init>
    24:26:void <init>(com.bumptech.glide.load.Transformation,com.bumptech.glide.load.Transformation) -> <init>
    51:51:java.lang.String getId() -> getId
    31:43:com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int) -> transform
com.bumptech.glide.load.resource.gifbitmap.ImageVideoGifDrawableLoadProvider -> com.bumptech.glide.load.resource.gifbitmap.ImageVideoGifDrawableLoadProvider:
    29:41:void <init>(com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    46:46:com.bumptech.glide.load.ResourceDecoder getCacheDecoder() -> getCacheDecoder
    61:61:com.bumptech.glide.load.ResourceEncoder getEncoder() -> getEncoder
    51:51:com.bumptech.glide.load.ResourceDecoder getSourceDecoder() -> getSourceDecoder
    56:56:com.bumptech.glide.load.Encoder getSourceEncoder() -> getSourceEncoder
com.bumptech.glide.load.resource.transcode.BitmapToGlideDrawableTranscoder -> com.bumptech.glide.load.resource.transcode.BitmapToGlideDrawableTranscoder:
    21:21:void <init>(android.content.Context) -> <init>
    24:25:void <init>(com.bumptech.glide.load.resource.transcode.GlideBitmapDrawableTranscoder) -> <init>
    37:37:java.lang.String getId() -> getId
    31:32:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource) -> transcode
com.bumptech.glide.load.resource.transcode.GifBitmapWrapperDrawableTranscoder -> com.bumptech.glide.load.resource.transcode.GifBitmapWrapperDrawableTranscoder:
    19:20:void <init>(com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> <init>
    26:33:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource) -> transcode
com.bumptech.glide.load.resource.transcode.GlideBitmapDrawableTranscoder -> com.bumptech.glide.load.resource.transcode.GlideBitmapDrawableTranscoder:
    22:22:void <init>(android.content.Context) -> <init>
    25:27:void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    32:33:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource) -> transcode
com.bumptech.glide.load.resource.transcode.TranscoderRegistry -> com.bumptech.glide.load.resource.transcode.TranscoderRegistry:
    13:13:void <clinit>() -> <clinit>
    12:15:void <init>() -> <init>
    43:53:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get(java.lang.Class,java.lang.Class) -> get
    29:29:void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> register
com.bumptech.glide.load.resource.transcode.UnitTranscoder -> com.bumptech.glide.load.resource.transcode.UnitTranscoder:
    11:11:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    15:15:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get() -> get
com.bumptech.glide.manager.ActivityFragmentLifecycle -> com.bumptech.glide.manager.ActivityFragmentLifecycle:
    11:13:void <init>() -> <init>
    34:41:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
    60:62:void onDestroy() -> onDestroy
    46:48:void onStart() -> onStart
    53:55:void onStop() -> onStop
com.bumptech.glide.manager.ApplicationLifecycle -> com.bumptech.glide.manager.ApplicationLifecycle:
    12:12:void <init>() -> <init>
    15:15:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
com.bumptech.glide.manager.ConnectivityMonitorFactory -> com.bumptech.glide.manager.ConnectivityMonitorFactory:
    11:11:void <init>() -> <init>
    13:18:com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> build
com.bumptech.glide.manager.DefaultConnectivityMonitor -> com.bumptech.glide.manager.DefaultConnectivityMonitor:
    17:30:void <init>(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> <init>
    10:10:boolean access$000(com.bumptech.glide.manager.DefaultConnectivityMonitor) -> access$000
    10:10:boolean access$002(com.bumptech.glide.manager.DefaultConnectivityMonitor,boolean) -> access$002
    10:10:boolean access$100(com.bumptech.glide.manager.DefaultConnectivityMonitor,android.content.Context) -> access$100
    10:10:com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener access$200(com.bumptech.glide.manager.DefaultConnectivityMonitor) -> access$200
    54:56:boolean isConnected(android.content.Context) -> isConnected
    61:61:void onStart() -> onStart
    66:66:void onStop() -> onStop
    34:40:void register() -> register
    44:49:void unregister() -> unregister
com.bumptech.glide.manager.DefaultConnectivityMonitor$1 -> com.bumptech.glide.manager.DefaultConnectivityMonitor$1:
    17:17:void <init>(com.bumptech.glide.manager.DefaultConnectivityMonitor) -> <init>
    20:23:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.bumptech.glide.manager.NullConnectivityMonitor -> com.bumptech.glide.manager.NullConnectivityMonitor:
    6:6:void <init>() -> <init>
com.bumptech.glide.manager.RequestManagerFragment -> com.bumptech.glide.manager.RequestManagerFragment:
    25:25:void <init>() -> <init>
    30:31:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    44:44:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    51:51:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    68:69:void onDestroy() -> onDestroy
    56:57:void onStart() -> onStart
    62:63:void onStop() -> onStop
    40:40:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
com.bumptech.glide.manager.RequestManagerRetriever -> com.bumptech.glide.manager.RequestManagerRetriever:
    31:31:void <clinit>() -> <clinit>
    41:61:void <init>() -> <init>
    135:136:void assertNotDestroyed(android.app.Activity) -> assertNotDestroyed
    163:176:com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager) -> fragmentGet
    56:56:com.bumptech.glide.manager.RequestManagerRetriever get() -> get
    83:94:com.bumptech.glide.RequestManager get(android.content.Context) -> get
    98:103:com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity) -> get
    124:129:com.bumptech.glide.RequestManager get(android.app.Activity) -> get
    66:78:com.bumptech.glide.RequestManager getApplicationManager(android.content.Context) -> getApplicationManager
    206:221:boolean handleMessage(android.os.Message) -> handleMessage
    183:196:com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager) -> supportFragmentGet
com.bumptech.glide.manager.RequestTracker -> com.bumptech.glide.manager.RequestTracker:
    12:19:void <init>() -> <init>
    79:80:void clearRequests() -> clearRequests
    55:58:void pauseRequests() -> pauseRequests
    41:41:void removeRequest(com.bumptech.glide.request.Request) -> removeRequest
    88:93:void restartRequests() -> restartRequests
    67:70:void resumeRequests() -> resumeRequests
    26:28:void runRequest(com.bumptech.glide.request.Request) -> runRequest
com.bumptech.glide.manager.SupportRequestManagerFragment -> com.bumptech.glide.manager.SupportRequestManagerFragment:
    22:22:void <init>() -> <init>
    27:28:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    41:41:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    48:48:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    65:66:void onDestroy() -> onDestroy
    53:54:void onStart() -> onStart
    59:60:void onStop() -> onStop
    37:37:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
com.bumptech.glide.provider.ChildLoadProvider -> com.bumptech.glide.provider.ChildLoadProvider:
    29:30:void <init>(com.bumptech.glide.provider.LoadProvider) -> <init>
    20:20:java.lang.Object clone() -> clone
    149:151:com.bumptech.glide.provider.ChildLoadProvider clone() -> clone
    90:93:com.bumptech.glide.load.ResourceDecoder getCacheDecoder() -> getCacheDecoder
    126:129:com.bumptech.glide.load.ResourceEncoder getEncoder() -> getEncoder
    35:35:com.bumptech.glide.load.model.ModelLoader getModelLoader() -> getModelLoader
    102:105:com.bumptech.glide.load.ResourceDecoder getSourceDecoder() -> getSourceDecoder
    114:117:com.bumptech.glide.load.Encoder getSourceEncoder() -> getSourceEncoder
    138:141:com.bumptech.glide.load.resource.transcode.ResourceTranscoder getTranscoder() -> getTranscoder
    63:63:void setEncoder(com.bumptech.glide.load.ResourceEncoder) -> setEncoder
    53:53:void setSourceDecoder(com.bumptech.glide.load.ResourceDecoder) -> setSourceDecoder
    82:82:void setSourceEncoder(com.bumptech.glide.load.Encoder) -> setSourceEncoder
com.bumptech.glide.provider.DataLoadProviderRegistry -> com.bumptech.glide.provider.DataLoadProviderRegistry:
    13:13:void <clinit>() -> <clinit>
    12:15:void <init>() -> <init>
    44:49:com.bumptech.glide.provider.DataLoadProvider get(java.lang.Class,java.lang.Class) -> get
    30:30:void register(java.lang.Class,java.lang.Class,com.bumptech.glide.provider.DataLoadProvider) -> register
com.bumptech.glide.provider.EmptyDataLoadProvider -> com.bumptech.glide.provider.EmptyDataLoadProvider:
    16:16:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    20:20:com.bumptech.glide.provider.DataLoadProvider get() -> get
com.bumptech.glide.provider.FixedLoadProvider -> com.bumptech.glide.provider.FixedLoadProvider:
    26:40:void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.provider.DataLoadProvider) -> <init>
    64:64:com.bumptech.glide.load.ResourceDecoder getCacheDecoder() -> getCacheDecoder
    88:88:com.bumptech.glide.load.ResourceEncoder getEncoder() -> getEncoder
    48:48:com.bumptech.glide.load.model.ModelLoader getModelLoader() -> getModelLoader
    72:72:com.bumptech.glide.load.ResourceDecoder getSourceDecoder() -> getSourceDecoder
    80:80:com.bumptech.glide.load.Encoder getSourceEncoder() -> getSourceEncoder
    56:56:com.bumptech.glide.load.resource.transcode.ResourceTranscoder getTranscoder() -> getTranscoder
com.bumptech.glide.request.GenericRequest -> com.bumptech.glide.request.GenericRequest:
    37:37:void <clinit>() -> <clinit>
    57:139:void <init>() -> <init>
    249:266:void begin() -> begin
    434:434:boolean canNotifyStatusChanged() -> canNotifyStatusChanged
    430:430:boolean canSetResource() -> canSetResource
    281:284:void cancel() -> cancel
    234:240:void check(java.lang.String,java.lang.Object,java.lang.String) -> check
    300:307:void clear() -> clear
    380:383:android.graphics.drawable.Drawable getErrorDrawable() -> getErrorDrawable
    387:390:android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    182:226:void init(com.bumptech.glide.provider.LoadProvider,java.lang.Object,com.bumptech.glide.load.Key,android.content.Context,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,float,android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.Transformation,java.lang.Class,boolean,com.bumptech.glide.request.animation.GlideAnimationFactory,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy) -> init
    356:356:boolean isCancelled() -> isCancelled
    340:340:boolean isComplete() -> isComplete
    364:364:boolean isFailed() -> isFailed
    438:438:boolean isFirstReadyResource() -> isFirstReadyResource
    348:348:boolean isResourceSet() -> isResourceSet
    332:332:boolean isRunning() -> isRunning
    515:515:void logV(java.lang.String) -> logV
    111:115:com.bumptech.glide.request.GenericRequest obtain(com.bumptech.glide.provider.LoadProvider,java.lang.Object,com.bumptech.glide.load.Key,android.content.Context,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,float,android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.Transformation,java.lang.Class,boolean,com.bumptech.glide.request.animation.GlideAnimationFactory,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy) -> obtain
    503:510:void onException(java.lang.Exception) -> onException
    448:473:void onResourceReady(com.bumptech.glide.load.engine.Resource) -> onResourceReady
    483:494:void onResourceReady(com.bumptech.glide.load.engine.Resource,java.lang.Object) -> onResourceReady
    398:425:void onSizeReady(int,int) -> onSizeReady
    318:319:void pause() -> pause
    145:157:void recycle() -> recycle
    323:324:void releaseResource(com.bumptech.glide.load.engine.Resource) -> releaseResource
    368:376:void setErrorPlaceholder(java.lang.Exception) -> setErrorPlaceholder
com.bumptech.glide.request.GenericRequest$Status -> com.bumptech.glide.request.GenericRequest$Status:
    40:54:void <clinit>() -> <clinit>
    40:40:void <init>(java.lang.String,int) -> <init>
    40:40:com.bumptech.glide.request.GenericRequest$Status valueOf(java.lang.String) -> valueOf
    40:40:com.bumptech.glide.request.GenericRequest$Status[] values() -> values
com.bumptech.glide.request.ThumbnailRequestCoordinator -> com.bumptech.glide.request.ThumbnailRequestCoordinator:
    16:17:void <init>(com.bumptech.glide.request.RequestCoordinator) -> <init>
    70:74:void begin() -> begin
    49:49:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> canNotifyStatusChanged
    34:34:boolean canSetImage(com.bumptech.glide.request.Request) -> canSetImage
    89:90:void clear() -> clear
    58:58:boolean isAnyResourceSet() -> isAnyResourceSet
    121:121:boolean isCancelled() -> isCancelled
    111:111:boolean isComplete() -> isComplete
    116:116:boolean isResourceSet() -> isResourceSet
    103:103:boolean isRunning() -> isRunning
    53:53:boolean parentCanNotifyStatusChanged() -> parentCanNotifyStatusChanged
    38:38:boolean parentCanSetImage() -> parentCanSetImage
    62:62:boolean parentIsAnyResourceSet() -> parentIsAnyResourceSet
    80:81:void pause() -> pause
    137:138:void recycle() -> recycle
    21:22:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request) -> setRequests
com.bumptech.glide.request.animation.DrawableCrossFadeFactory -> com.bumptech.glide.request.animation.DrawableCrossFadeFactory:
    29:29:void <init>() -> <init>
    33:33:void <init>(int) -> <init>
    44:46:void <init>(com.bumptech.glide.request.animation.ViewAnimationFactory,int) -> <init>
    52:60:com.bumptech.glide.request.animation.GlideAnimation build(boolean,boolean) -> build
com.bumptech.glide.request.animation.DrawableCrossFadeFactory$DefaultAnimationFactory -> com.bumptech.glide.request.animation.DrawableCrossFadeFactory$DefaultAnimationFactory:
    63:63:void <init>() -> <init>
    63:63:void <init>(com.bumptech.glide.request.animation.DrawableCrossFadeFactory$1) -> <init>
    67:68:android.view.animation.Animation build() -> build
com.bumptech.glide.request.animation.DrawableCrossFadeViewAnimation -> com.bumptech.glide.request.animation.DrawableCrossFadeViewAnimation:
    24:26:void <init>(com.bumptech.glide.request.animation.GlideAnimation,int) -> <init>
    14:14:boolean animate(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation$ViewAdapter) -> animate
    44:52:boolean animate(android.graphics.drawable.Drawable,com.bumptech.glide.request.animation.GlideAnimation$ViewAdapter) -> animate
com.bumptech.glide.request.animation.NoAnimation -> com.bumptech.glide.request.animation.NoAnimation:
    9:11:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    8:8:com.bumptech.glide.request.animation.NoAnimation access$000() -> access$000
    37:37:com.bumptech.glide.request.animation.GlideAnimation get() -> get
    29:29:com.bumptech.glide.request.animation.GlideAnimationFactory getFactory() -> getFactory
com.bumptech.glide.request.animation.NoAnimation$NoAnimationFactory -> com.bumptech.glide.request.animation.NoAnimation$NoAnimationFactory:
    16:16:void <init>() -> <init>
    20:20:com.bumptech.glide.request.animation.GlideAnimation build(boolean,boolean) -> build
com.bumptech.glide.request.animation.ViewAnimation -> com.bumptech.glide.request.animation.ViewAnimation:
    20:21:void <init>(com.bumptech.glide.request.animation.ViewAnimation$AnimationFactory) -> <init>
    36:40:boolean animate(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation$ViewAdapter) -> animate
com.bumptech.glide.request.animation.ViewAnimationFactory -> com.bumptech.glide.request.animation.ViewAnimationFactory:
    25:26:void <init>(com.bumptech.glide.request.animation.ViewAnimation$AnimationFactory) -> <init>
    41:48:com.bumptech.glide.request.animation.GlideAnimation build(boolean,boolean) -> build
com.bumptech.glide.request.target.BaseTarget -> com.bumptech.glide.request.target.BaseTarget:
    25:25:void <init>() -> <init>
    42:42:com.bumptech.glide.request.Request getRequest() -> getRequest
    34:34:void setRequest(com.bumptech.glide.request.Request) -> setRequest
com.bumptech.glide.request.target.BitmapImageViewTarget -> com.bumptech.glide.request.target.BitmapImageViewTarget:
    14:14:void <init>(android.widget.ImageView) -> <init>
    12:12:void setResource(java.lang.Object) -> setResource
    25:25:void setResource(android.graphics.Bitmap) -> setResource
com.bumptech.glide.request.target.DrawableImageViewTarget -> com.bumptech.glide.request.target.DrawableImageViewTarget:
    11:11:void <init>(android.widget.ImageView) -> <init>
    9:9:void setResource(java.lang.Object) -> setResource
    16:16:void setResource(android.graphics.drawable.Drawable) -> setResource
com.bumptech.glide.request.target.GlideDrawableImageViewTarget -> com.bumptech.glide.request.target.GlideDrawableImageViewTarget:
    24:24:void <init>(android.widget.ImageView) -> <init>
    37:38:void <init>(android.widget.ImageView,int) -> <init>
    12:12:void onResourceReady(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation) -> onResourceReady
    52:69:void onResourceReady(com.bumptech.glide.load.resource.drawable.GlideDrawable,com.bumptech.glide.request.animation.GlideAnimation) -> onResourceReady
    85:86:void onStart() -> onStart
    92:93:void onStop() -> onStop
    12:12:void setResource(java.lang.Object) -> setResource
    80:80:void setResource(com.bumptech.glide.load.resource.drawable.GlideDrawable) -> setResource
com.bumptech.glide.request.target.ImageViewTarget -> com.bumptech.glide.request.target.ImageViewTarget:
    17:17:void <init>(android.widget.ImageView) -> <init>
    26:26:android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    70:70:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    59:59:void onLoadFailed(java.lang.Exception,android.graphics.drawable.Drawable) -> onLoadFailed
    48:48:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    75:76:void onResourceReady(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation) -> onResourceReady
    37:37:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
com.bumptech.glide.request.target.ImageViewTargetFactory -> com.bumptech.glide.request.target.ImageViewTargetFactory:
    13:13:void <init>() -> <init>
    17:24:com.bumptech.glide.request.target.Target buildTarget(android.widget.ImageView,java.lang.Class) -> buildTarget
com.bumptech.glide.request.target.SimpleTarget -> com.bumptech.glide.request.target.SimpleTarget:
    50:52:void <init>(int,int) -> <init>
    62:66:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
com.bumptech.glide.request.target.SquaringDrawable -> com.bumptech.glide.request.target.SquaringDrawable:
    23:25:void <init>(com.bumptech.glide.load.resource.drawable.GlideDrawable,int) -> <init>
    79:79:void clearColorFilter() -> clearColorFilter
    137:137:void draw(android.graphics.Canvas) -> draw
    69:69:int getAlpha() -> getAlpha
    63:63:android.graphics.drawable.Drawable$Callback getCallback() -> getCallback
    47:47:int getChangingConfigurations() -> getChangingConfigurations
    84:84:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    99:99:int getIntrinsicHeight() -> getIntrinsicHeight
    94:94:int getIntrinsicWidth() -> getIntrinsicWidth
    109:109:int getMinimumHeight() -> getMinimumHeight
    104:104:int getMinimumWidth() -> getMinimumWidth
    152:152:int getOpacity() -> getOpacity
    114:114:boolean getPadding(android.graphics.Rect) -> getPadding
    119:120:void invalidateSelf() -> invalidateSelf
    157:157:boolean isAnimated() -> isAnimated
    177:177:boolean isRunning() -> isRunning
    131:132:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    142:142:void setAlpha(int) -> setAlpha
    30:31:void setBounds(int,int,int,int) -> setBounds
    36:37:void setBounds(android.graphics.Rect) -> setBounds
    42:42:void setChangingConfigurations(int) -> setChangingConfigurations
    74:74:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    147:147:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    52:52:void setDither(boolean) -> setDither
    57:57:void setFilterBitmap(boolean) -> setFilterBitmap
    162:162:void setLoopCount(int) -> setLoopCount
    89:89:boolean setVisible(boolean,boolean) -> setVisible
    167:167:void start() -> start
    172:172:void stop() -> stop
    125:126:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
com.bumptech.glide.request.target.ViewTarget -> com.bumptech.glide.request.target.ViewTarget:
    43:48:void <init>(android.view.View) -> <init>
    96:102:com.bumptech.glide.request.Request getRequest() -> getRequest
    69:69:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    55:55:android.view.View getView() -> getView
    79:79:void setRequest(com.bumptech.glide.request.Request) -> setRequest
    110:110:java.lang.String toString() -> toString
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer:
    115:119:void <init>(android.view.View) -> <init>
    113:113:void access$000(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer) -> access$000
    130:155:void checkCurrentDimens() -> checkCurrentDimens
    160:185:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    201:202:boolean isLayoutParamsSizeValid() -> isLayoutParamsSizeValid
    195:196:boolean isUsingWrapContent() -> isUsingWrapContent
    191:191:boolean isViewSizeValid() -> isViewSizeValid
    123:126:void notifyCbs(int,int) -> notifyCbs
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener:
    208:209:void <init>(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer) -> <init>
    214:219:boolean onPreDraw() -> onPreDraw
com.bumptech.glide.signature.EmptySignature -> com.bumptech.glide.signature.EmptySignature:
    12:12:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    15:15:com.bumptech.glide.signature.EmptySignature obtain() -> obtain
com.bumptech.glide.signature.MediaStoreSignature -> com.bumptech.glide.signature.MediaStoreSignature:
    30:33:void <init>(java.lang.String,long,int) -> <init>
    41:53:boolean equals(java.lang.Object) -> equals
    62:64:int hashCode() -> hashCode
    70:75:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.util.ByteArrayPool -> com.bumptech.glide.util.ByteArrayPool:
    19:19:void <clinit>() -> <clinit>
    18:28:void <init>() -> <init>
    25:25:com.bumptech.glide.util.ByteArrayPool get() -> get
    45:51:byte[] getBytes() -> getBytes
    64:74:boolean releaseBytes(byte[]) -> releaseBytes
com.bumptech.glide.util.ExceptionCatchingInputStream -> com.bumptech.glide.util.ExceptionCatchingInputStream:
    18:18:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    52:52:int available() -> available
    57:57:void close() -> close
    124:124:void fixMarkLimit() -> fixMarkLimit
    128:128:java.io.IOException getException() -> getException
    62:62:void mark(int) -> mark
    67:67:boolean markSupported() -> markSupported
    25:31:com.bumptech.glide.util.ExceptionCatchingInputStream obtain(com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream) -> obtain
    74:76:int read(byte[]) -> read
    86:88:int read(byte[],int,int) -> read
    115:117:int read() -> read
    132:136:void release() -> release
    96:97:void reset() -> reset
    47:47:void setInputStream(com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream) -> setInputStream
    103:105:long skip(long) -> skip
com.bumptech.glide.util.LogTime -> com.bumptech.glide.util.LogTime:
    12:12:void <clinit>() -> <clinit>
    37:37:double getElapsedMillis(long) -> getElapsedMillis
    24:27:long getLogTime() -> getLogTime
com.bumptech.glide.util.LruCache -> com.bumptech.glide.util.LruCache:
    14:26:void <init>(int) -> <init>
    167:167:void evict() -> evict
    94:94:java.lang.Object get(java.lang.Object) -> get
    110:124:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    135:137:java.lang.Object remove(java.lang.Object) -> remove
    38:41:void setSizeMultiplier(float) -> setSizeMultiplier
    156:162:void trimToSize(int) -> trimToSize
com.bumptech.glide.util.MultiClassKey -> com.bumptech.glide.util.MultiClassKey:
    10:10:void <init>() -> <init>
    14:15:void <init>(java.lang.Class,java.lang.Class) -> <init>
    36:45:boolean equals(java.lang.Object) -> equals
    54:55:int hashCode() -> hashCode
    19:20:void set(java.lang.Class,java.lang.Class) -> set
    25:25:java.lang.String toString() -> toString
com.bumptech.glide.util.Util -> com.bumptech.glide.util.Util:
    15:19:void <clinit>() -> <clinit>
    114:115:void assertMainThread() -> assertMainThread
    43:48:java.lang.String bytesToHex(byte[],char[]) -> bytesToHex
    146:146:java.util.Queue createQueue(int) -> createQueue
    69:77:int getBitmapByteSize(android.graphics.Bitmap) -> getBitmapByteSize
    85:85:int getBitmapByteSize(int,int,android.graphics.Bitmap$Config) -> getBitmapByteSize
    91:95:int getBytesPerPixel(android.graphics.Bitmap$Config) -> getBytesPerPixel
    139:139:boolean isOnBackgroundThread() -> isOnBackgroundThread
    132:132:boolean isOnMainThread() -> isOnMainThread
    29:29:java.lang.String sha256BytesToHex(byte[]) -> sha256BytesToHex
com.bumptech.glide.util.Util$1 -> com.bumptech.glide.util.Util$1:
    95:95:void <clinit>() -> <clinit>
com.google.common.base.Absent -> com.google.common.base.Absent:
    27:27:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    43:43:java.lang.Object get() -> get
    96:96:java.lang.Object readResolve() -> readResolve
    31:31:com.google.common.base.Optional withType() -> withType
com.google.common.base.AbstractIterator -> com.google.common.base.AbstractIterator:
    31:33:void <init>() -> <init>
    49:49:java.lang.Object endOfData() -> endOfData
    55:63:boolean hasNext() -> hasNext
    78:83:java.lang.Object next() -> next
    89:89:void remove() -> remove
    67:70:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.base.AbstractIterator$1 -> com.google.common.base.AbstractIterator$1:
    56:56:void <clinit>() -> <clinit>
com.google.common.base.AbstractIterator$State -> com.google.common.base.AbstractIterator$State:
    35:39:void <clinit>() -> <clinit>
    35:35:void <init>(java.lang.String,int) -> <init>
    35:35:com.google.common.base.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    35:35:com.google.common.base.AbstractIterator$State[] values() -> values
com.google.common.base.Ascii -> com.google.common.base.Ascii:
    407:417:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
com.google.common.base.CharMatcher -> com.google.common.base.CharMatcher:
    359:359:void <init>() -> <init>
    64:64:java.lang.String access$100(char) -> access$100
    63:63:boolean apply(java.lang.Object) -> apply
    909:909:boolean apply(java.lang.Character) -> apply
    560:563:int indexIn(java.lang.CharSequence,int) -> indexIn
    295:295:com.google.common.base.CharMatcher is(char) -> is
    127:127:com.google.common.base.CharMatcher none() -> none
    927:932:java.lang.String showCharacter(char) -> showCharacter
com.google.common.base.CharMatcher$FastMatcher -> com.google.common.base.CharMatcher$FastMatcher:
    938:938:void <init>() -> <init>
com.google.common.base.CharMatcher$Is -> com.google.common.base.CharMatcher$Is:
    1609:1610:void <init>(char) -> <init>
    1615:1615:boolean matches(char) -> matches
    1646:1646:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$NamedFastMatcher -> com.google.common.base.CharMatcher$NamedFastMatcher:
    956:957:void <init>(java.lang.String) -> <init>
    962:962:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$None -> com.google.common.base.CharMatcher$None:
    1107:1107:void <clinit>() -> <clinit>
    1110:1110:void <init>() -> <init>
    1126:1127:int indexIn(java.lang.CharSequence,int) -> indexIn
com.google.common.base.CharMatcher$Whitespace -> com.google.common.base.CharMatcher$Whitespace:
    1221:1223:void <clinit>() -> <clinit>
    1226:1226:void <init>() -> <init>
    1231:1231:boolean matches(char) -> matches
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    43:43:void <init>() -> <init>
    313:313:com.google.common.base.Equivalence equals() -> equals
    69:69:boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    102:102:int hash(java.lang.Object) -> hash
    325:325:com.google.common.base.Equivalence identity() -> identity
com.google.common.base.Equivalence$Equals -> com.google.common.base.Equivalence$Equals:
    330:330:void <clinit>() -> <clinit>
    328:328:void <init>() -> <init>
    334:334:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    339:339:int doHash(java.lang.Object) -> doHash
    343:343:java.lang.Object readResolve() -> readResolve
com.google.common.base.Equivalence$Identity -> com.google.common.base.Equivalence$Identity:
    351:351:void <clinit>() -> <clinit>
    349:349:void <init>() -> <init>
    360:360:int doHash(java.lang.Object) -> doHash
    364:364:java.lang.Object readResolve() -> readResolve
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    79:80:void <init>(java.lang.String) -> <init>
    104:109:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    139:139:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    152:154:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    69:69:com.google.common.base.Joiner on(java.lang.String) -> on
    456:457:java.lang.CharSequence toString(java.lang.Object) -> toString
com.google.common.base.MoreObjects -> com.google.common.base.MoreObjects:
    64:64:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
    108:108:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    134:134:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.String) -> toStringHelper
com.google.common.base.MoreObjects$ToStringHelper -> com.google.common.base.MoreObjects$ToStringHelper:
    143:143:void <init>(java.lang.String,com.google.common.base.MoreObjects$1) -> <init>
    145:151:void <init>(java.lang.String) -> <init>
    174:174:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    224:224:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int) -> add
    234:234:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,long) -> add
    364:365:com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder() -> addHolder
    370:371:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    376:378:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    245:245:com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object) -> addValue
    337:360:java.lang.String toString() -> toString
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder -> com.google.common.base.MoreObjects$ToStringHelper$ValueHolder:
    382:382:void <init>() -> <init>
    382:382:void <init>(com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.Objects -> com.google.common.base.Objects:
    52:52:boolean equal(java.lang.Object,java.lang.Object) -> equal
    77:77:int hashCode(java.lang.Object[]) -> hashCode
com.google.common.base.Optional -> com.google.common.base.Optional:
    119:119:void <init>() -> <init>
    93:93:com.google.common.base.Optional absent() -> absent
    116:116:com.google.common.base.Optional fromNullable(java.lang.Object) -> fromNullable
    105:105:com.google.common.base.Optional of(java.lang.Object) -> of
com.google.common.base.Platform -> com.google.common.base.Platform:
    33:34:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    66:66:java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    84:84:com.google.common.base.PatternCompiler loadPatternCompiler() -> loadPatternCompiler
    58:58:boolean stringIsNullOrEmpty(java.lang.String) -> stringIsNullOrEmpty
    41:41:long systemNanoTime() -> systemNanoTime
com.google.common.base.Platform$JdkPatternCompiler -> com.google.common.base.Platform$JdkPatternCompiler:
    91:91:void <init>() -> <init>
    91:91:void <init>(com.google.common.base.Platform$1) -> <init>
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    1409:1413:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    1454:1458:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    1483:1489:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    128:128:void checkArgument(boolean) -> checkArgument
    142:142:void checkArgument(boolean,java.lang.Object) -> checkArgument
    217:217:void checkArgument(boolean,java.lang.String,java.lang.Object) -> checkArgument
    301:301:void checkArgument(boolean,java.lang.String,int,int) -> checkArgument
    444:444:void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object) -> checkArgument
    1384:1384:int checkElementIndex(int,int) -> checkElementIndex
    1402:1402:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    890:890:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    910:910:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    1005:1005:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object) -> checkNotNull
    1429:1429:int checkPositionIndex(int,int) -> checkPositionIndex
    1447:1447:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    1477:1477:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    495:495:void checkState(boolean) -> checkState
    511:511:void checkState(boolean,java.lang.Object) -> checkState
    563:563:void checkState(boolean,java.lang.String,int) -> checkState
    592:592:void checkState(boolean,java.lang.String,java.lang.Object) -> checkState
com.google.common.base.Present -> com.google.common.base.Present:
    29:30:void <init>(java.lang.Object) -> <init>
    81:83:boolean equals(java.lang.Object) -> equals
    40:40:java.lang.Object get() -> get
    90:90:int hashCode() -> hashCode
    63:63:java.lang.Object orNull() -> orNull
    95:95:java.lang.String toString() -> toString
com.google.common.base.Splitter -> com.google.common.base.Splitter:
    107:107:void <init>(com.google.common.base.Splitter$Strategy) -> <init>
    110:114:void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int) -> <init>
    100:100:java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence) -> access$000
    100:100:com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter) -> access$200
    100:100:boolean access$300(com.google.common.base.Splitter) -> access$300
    100:100:int access$400(com.google.common.base.Splitter) -> access$400
    319:319:com.google.common.base.Splitter omitEmptyStrings() -> omitEmptyStrings
    125:125:com.google.common.base.Splitter on(char) -> on
    139:141:com.google.common.base.Splitter on(com.google.common.base.CharMatcher) -> on
    169:173:com.google.common.base.Splitter on(java.lang.String) -> on
    381:383:java.lang.Iterable split(java.lang.CharSequence) -> split
    400:400:java.util.Iterator splittingIterator(java.lang.CharSequence) -> splittingIterator
com.google.common.base.Splitter$1 -> com.google.common.base.Splitter$1:
    142:142:void <init>(com.google.common.base.CharMatcher) -> <init>
    142:142:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    145:145:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$1$1 -> com.google.common.base.Splitter$1$1:
    145:145:void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    148:148:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$2 -> com.google.common.base.Splitter$2:
    174:174:void <init>(java.lang.String) -> <init>
    174:174:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    177:177:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$2$1 -> com.google.common.base.Splitter$2$1:
    177:177:void <init>(com.google.common.base.Splitter$2,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    196:196:int separatorEnd(int) -> separatorEnd
    180:185:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$5 -> com.google.common.base.Splitter$5:
    383:383:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    386:386:java.util.Iterator iterator() -> iterator
    391:394:java.lang.String toString() -> toString
com.google.common.base.Splitter$SplittingIterator -> com.google.common.base.Splitter$SplittingIterator:
    540:547:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    523:523:java.lang.Object computeNext() -> computeNext
    557:613:java.lang.String computeNext() -> computeNext
com.google.common.base.StandardSystemProperty -> com.google.common.base.StandardSystemProperty:
    26:111:void <clinit>() -> <clinit>
    115:116:void <init>(java.lang.String,int,java.lang.String) -> <init>
    121:121:java.lang.String key() -> key
    136:136:java.lang.String toString() -> toString
    130:130:java.lang.String value() -> value
    26:26:com.google.common.base.StandardSystemProperty valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.base.StandardSystemProperty[] values() -> values
com.google.common.base.Strings -> com.google.common.base.Strings:
    54:54:java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    261:297:java.lang.String lenientFormat(java.lang.String,java.lang.Object[]) -> lenientFormat
    305:313:java.lang.String lenientToString(java.lang.Object) -> lenientToString
    222:224:boolean validSurrogatePairAt(java.lang.CharSequence,int) -> validSurrogatePairAt
com.google.common.base.Suppliers -> com.google.common.base.Suppliers:
    268:268:com.google.common.base.Supplier ofInstance(java.lang.Object) -> ofInstance
com.google.common.base.Suppliers$ExpiringMemoizingSupplier -> com.google.common.base.Suppliers$ExpiringMemoizingSupplier:
    238:253:java.lang.Object get() -> get
    260:260:java.lang.String toString() -> toString
com.google.common.base.Suppliers$MemoizingSupplier -> com.google.common.base.Suppliers$MemoizingSupplier:
    126:136:java.lang.Object get() -> get
    141:142:java.lang.String toString() -> toString
com.google.common.base.Suppliers$NonSerializableMemoizingSupplier -> com.google.common.base.Suppliers$NonSerializableMemoizingSupplier:
    164:176:java.lang.Object get() -> get
    181:183:java.lang.String toString() -> toString
com.google.common.base.Suppliers$SupplierOfInstance -> com.google.common.base.Suppliers$SupplierOfInstance:
    274:275:void <init>(java.lang.Object) -> <init>
    285:287:boolean equals(java.lang.Object) -> equals
    280:280:java.lang.Object get() -> get
    294:294:int hashCode() -> hashCode
    299:299:java.lang.String toString() -> toString
com.google.common.base.Throwables -> com.google.common.base.Throwables:
    452:468:void <clinit>() -> <clinit>
    503:503:java.lang.reflect.Method getGetMethod() -> getGetMethod
    482:486:java.lang.Object getJLA() -> getJLA
    534:536:java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[]) -> getJlaMethod
    519:523:java.lang.reflect.Method getSizeMethod() -> getSizeMethod
    128:133:void throwIfUnchecked(java.lang.Throwable) -> throwIfUnchecked
com.google.common.collect.AbstractIndexedListIterator -> com.google.common.collect.AbstractIndexedListIterator:
    61:64:void <init>(int,int) -> <init>
    69:69:boolean hasNext() -> hasNext
    87:87:boolean hasPrevious() -> hasPrevious
    74:77:java.lang.Object next() -> next
    82:82:int nextIndex() -> nextIndex
    92:95:java.lang.Object previous() -> previous
    100:100:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    65:68:void <init>() -> <init>
    121:121:java.lang.Object endOfData() -> endOfData
    128:136:boolean hasNext() -> hasNext
    152:157:java.lang.Object next() -> next
    140:143:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.collect.AbstractIterator$1 -> com.google.common.collect.AbstractIterator$1:
    129:129:void <clinit>() -> <clinit>
com.google.common.collect.AbstractIterator$State -> com.google.common.collect.AbstractIterator$State:
    70:81:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    70:70:com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    70:70:com.google.common.collect.AbstractIterator$State[] values() -> values
com.google.common.collect.AbstractMapBasedMultimap -> com.google.common.collect.AbstractMapBasedMultimap:
    114:116:void <init>(java.util.Map) -> <init>
    84:84:java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap) -> access$000
    84:84:java.util.Iterator access$100(java.util.Collection) -> access$100
    84:84:int access$208(com.google.common.collect.AbstractMapBasedMultimap) -> access$208
    84:84:int access$210(com.google.common.collect.AbstractMapBasedMultimap) -> access$210
    84:84:int access$212(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$212
    84:84:int access$220(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$220
    84:84:void access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object) -> access$300
    163:163:java.util.Map backingMap() -> backingMap
    268:272:void clear() -> clear
    1232:1232:java.util.Map createAsMap() -> createAsMap
    159:159:java.util.Collection createCollection(java.lang.Object) -> createCollection
    1205:1208:java.util.Collection createEntries() -> createEntries
    891:891:java.util.Set createKeySet() -> createKeySet
    1236:1241:java.util.Map createMaybeNavigableAsMap() -> createMaybeNavigableAsMap
    895:900:java.util.Set createMaybeNavigableKeySet() -> createMaybeNavigableKeySet
    1200:1200:java.util.Collection entries() -> entries
    1222:1222:java.util.Iterator entryIterator() -> entryIterator
    573:575:java.util.Iterator iteratorOrListIterator(java.util.Collection) -> iteratorOrListIterator
    182:193:boolean put(java.lang.Object,java.lang.Object) -> put
    1102:1107:void removeValuesForKey(java.lang.Object) -> removeValuesForKey
    121:125:void setMap(java.util.Map) -> setMap
    170:170:int size() -> size
com.google.common.collect.AbstractMapBasedMultimap$2 -> com.google.common.collect.AbstractMapBasedMultimap$2:
    1222:1222:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1222:1222:java.lang.Object output(java.lang.Object,java.lang.Object) -> output
    1225:1225:java.util.Map$Entry output(java.lang.Object,java.lang.Object) -> output
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> com.google.common.collect.AbstractMapBasedMultimap$AsMap:
    1253:1254:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    1321:1324:void clear() -> clear
    1266:1266:boolean containsKey(java.lang.Object) -> containsKey
    1259:1259:java.util.Set createEntrySet() -> createEntrySet
    1306:1306:boolean equals(java.lang.Object) -> equals
    1245:1245:java.lang.Object get(java.lang.Object) -> get
    1271:1277:java.util.Collection get(java.lang.Object) -> get
    1311:1311:int hashCode() -> hashCode
    1282:1282:java.util.Set keySet() -> keySet
    1245:1245:java.lang.Object remove(java.lang.Object) -> remove
    1292:1300:java.util.Collection remove(java.lang.Object) -> remove
    1287:1287:int size() -> size
    1316:1316:java.lang.String toString() -> toString
    1329:1330:java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> wrapEntry
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:
    1334:1334:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1349:1349:boolean contains(java.lang.Object) -> contains
    1342:1342:java.util.Iterator iterator() -> iterator
    1337:1337:java.util.Map map() -> map
    1354:1358:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:
    1364:1365:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1370:1370:boolean hasNext() -> hasNext
    1364:1364:java.lang.Object next() -> next
    1375:1377:java.util.Map$Entry next() -> next
    1382:1386:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$Itr -> com.google.common.collect.AbstractMapBasedMultimap$Itr:
    1117:1121:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1128:1128:boolean hasNext() -> hasNext
    1133:1139:java.lang.Object next() -> next
    1144:1148:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> com.google.common.collect.AbstractMapBasedMultimap$KeySet:
    906:907:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    955:955:void clear() -> clear
    960:960:boolean containsAll(java.util.Collection) -> containsAll
    965:965:boolean equals(java.lang.Object) -> equals
    970:970:int hashCode() -> hashCode
    912:913:java.util.Iterator iterator() -> iterator
    944:948:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> com.google.common.collect.AbstractMapBasedMultimap$KeySet$1:
    913:913:void <init>(com.google.common.collect.AbstractMapBasedMultimap$KeySet,java.util.Iterator) -> <init>
    918:918:boolean hasNext() -> hasNext
    923:924:java.lang.Object next() -> next
    929:934:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap -> com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:
    1449:1450:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1482:1483:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1488:1488:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1447:1447:java.util.SortedSet createKeySet() -> createKeySet
    1547:1547:java.util.NavigableSet createKeySet() -> createKeySet
    1557:1557:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1537:1537:java.util.NavigableMap descendingMap() -> descendingMap
    1504:1505:java.util.Map$Entry firstEntry() -> firstEntry
    1471:1472:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1477:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1447:1447:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1573:1573:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    1578:1578:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1493:1494:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1499:1499:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1447:1447:java.util.Set keySet() -> keySet
    1447:1447:java.util.SortedSet keySet() -> keySet
    1542:1542:java.util.NavigableSet keySet() -> keySet
    1510:1511:java.util.Map$Entry lastEntry() -> lastEntry
    1460:1461:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1466:1466:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1552:1552:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1525:1532:java.util.Map$Entry pollAsMapEntry(java.util.Iterator) -> pollAsMapEntry
    1516:1516:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1521:1521:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1447:1447:java.util.SortedMap sortedMap() -> sortedMap
    1455:1455:java.util.NavigableMap sortedMap() -> sortedMap
    1447:1447:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1562:1562:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1568:1568:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1447:1447:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1583:1583:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    1588:1588:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet -> com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:
    1018:1019:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1039:1039:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1064:1064:java.util.Iterator descendingIterator() -> descendingIterator
    1059:1059:java.util.NavigableSet descendingSet() -> descendingSet
    1034:1034:java.lang.Object floor(java.lang.Object) -> floor
    1016:1016:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1069:1069:java.util.NavigableSet headSet(java.lang.Object) -> headSet
    1074:1074:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1044:1044:java.lang.Object higher(java.lang.Object) -> higher
    1029:1029:java.lang.Object lower(java.lang.Object) -> lower
    1049:1049:java.lang.Object pollFirst() -> pollFirst
    1054:1054:java.lang.Object pollLast() -> pollLast
    1016:1016:java.util.SortedMap sortedMap() -> sortedMap
    1024:1024:java.util.NavigableMap sortedMap() -> sortedMap
    1016:1016:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1079:1079:java.util.NavigableSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1085:1086:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1016:1016:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1091:1091:java.util.NavigableSet tailSet(java.lang.Object) -> tailSet
    1096:1096:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:
    1393:1394:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    1403:1403:java.util.Comparator comparator() -> comparator
    1443:1443:java.util.SortedSet createKeySet() -> createKeySet
    1408:1408:java.lang.Object firstKey() -> firstKey
    1418:1418:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1391:1391:java.util.Set keySet() -> keySet
    1437:1438:java.util.SortedSet keySet() -> keySet
    1413:1413:java.lang.Object lastKey() -> lastKey
    1398:1398:java.util.SortedMap sortedMap() -> sortedMap
    1423:1423:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1428:1428:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:
    977:978:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    987:987:java.util.Comparator comparator() -> comparator
    992:992:java.lang.Object first() -> first
    997:997:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1002:1002:java.lang.Object last() -> last
    982:982:java.util.SortedMap sortedMap() -> sortedMap
    1007:1007:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1012:1012:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:
    329:333:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    474:480:boolean add(java.lang.Object) -> add
    494:503:boolean addAll(java.util.Collection) -> addAll
    380:383:void addToMap() -> addToMap
    523:529:void clear() -> clear
    511:512:boolean contains(java.lang.Object) -> contains
    517:518:boolean containsAll(java.util.Collection) -> containsAll
    398:399:boolean equals(java.lang.Object) -> equals
    487:487:com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor() -> getAncestor
    415:415:java.util.Collection getDelegate() -> getDelegate
    370:370:java.lang.Object getKey() -> getKey
    404:405:int hashCode() -> hashCode
    420:421:java.util.Iterator iterator() -> iterator
    344:352:void refreshIfEmpty() -> refreshIfEmpty
    534:538:boolean remove(java.lang.Object) -> remove
    545:553:boolean removeAll(java.util.Collection) -> removeAll
    362:365:void removeIfEmpty() -> removeIfEmpty
    560:566:boolean retainAll(java.util.Collection) -> retainAll
    389:390:int size() -> size
    410:411:java.lang.String toString() -> toString
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:
    427:430:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    427:434:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection,java.util.Iterator) -> <init>
    449:450:boolean hasNext() -> hasNext
    455:456:java.lang.Object next() -> next
    461:463:void remove() -> remove
    441:443:void validateIterator() -> validateIterator
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:
    665:666:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.NavigableSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    686:686:java.lang.Object ceiling(java.lang.Object) -> ceiling
    715:715:java.util.Iterator descendingIterator() -> descendingIterator
    710:710:java.util.NavigableSet descendingSet() -> descendingSet
    681:681:java.lang.Object floor(java.lang.Object) -> floor
    662:662:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    671:671:java.util.NavigableSet getSortedSetDelegate() -> getSortedSetDelegate
    727:727:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    691:691:java.lang.Object higher(java.lang.Object) -> higher
    676:676:java.lang.Object lower(java.lang.Object) -> lower
    696:696:java.lang.Object pollFirst() -> pollFirst
    701:701:java.lang.Object pollLast() -> pollLast
    721:722:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    732:732:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    705:705:java.util.NavigableSet wrap(java.util.NavigableSet) -> wrap
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSet:
    581:582:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Set) -> <init>
    587:599:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:
    609:610:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    619:619:java.util.Comparator comparator() -> comparator
    624:625:java.lang.Object first() -> first
    614:614:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    636:640:java.util.SortedSet headSet(java.lang.Object) -> headSet
    630:631:java.lang.Object last() -> last
    645:649:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    654:658:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapEntry -> com.google.common.collect.AbstractMapEntry:
    31:31:void <init>() -> <init>
    46:49:boolean equals(java.lang.Object) -> equals
    56:58:int hashCode() -> hashCode
    64:64:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> com.google.common.collect.AbstractMultimap:
    38:38:void <init>() -> <init>
    207:208:java.util.Map asMap() -> asMap
    57:58:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    112:113:java.util.Collection entries() -> entries
    217:217:boolean equals(java.lang.Object) -> equals
    230:230:int hashCode() -> hashCode
    150:151:java.util.Set keySet() -> keySet
    64:65:boolean remove(java.lang.Object,java.lang.Object) -> remove
    241:241:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap$Entries -> com.google.common.collect.AbstractMultimap$Entries:
    119:119:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    127:127:java.util.Iterator iterator() -> iterator
    122:122:com.google.common.collect.Multimap multimap() -> multimap
com.google.common.collect.AbstractMultimap$EntrySet -> com.google.common.collect.AbstractMultimap$EntrySet:
    132:132:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    140:140:boolean equals(java.lang.Object) -> equals
    135:135:int hashCode() -> hashCode
com.google.common.collect.AbstractNavigableMap -> com.google.common.collect.AbstractNavigableMap:
    35:35:void <init>() -> <init>
    101:101:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    122:122:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    159:159:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    164:164:java.util.NavigableMap descendingMap() -> descendingMap
    45:45:java.util.Map$Entry firstEntry() -> firstEntry
    68:72:java.lang.Object firstKey() -> firstKey
    95:95:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    117:117:java.lang.Object floorKey(java.lang.Object) -> floorKey
    139:139:java.util.SortedMap headMap(java.lang.Object) -> headMap
    107:107:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    127:127:java.lang.Object higherKey(java.lang.Object) -> higherKey
    154:154:java.util.Set keySet() -> keySet
    51:51:java.util.Map$Entry lastEntry() -> lastEntry
    78:82:java.lang.Object lastKey() -> lastKey
    89:89:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    112:112:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    149:149:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    57:57:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    63:63:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    134:134:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    144:144:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractNavigableMap$DescendingMap -> com.google.common.collect.AbstractNavigableMap$DescendingMap:
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap) -> <init>
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap,com.google.common.collect.AbstractNavigableMap$1) -> <init>
    175:175:java.util.Iterator entryIterator() -> entryIterator
    170:170:java.util.NavigableMap forward() -> forward
com.google.common.collect.AbstractSetMultimap -> com.google.common.collect.AbstractSetMultimap:
    44:44:void <init>(java.util.Map) -> <init>
    123:123:java.util.Map asMap() -> asMap
    86:86:java.util.Set entries() -> entries
    148:148:boolean equals(java.lang.Object) -> equals
    137:137:boolean put(java.lang.Object,java.lang.Object) -> put
    57:57:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    62:62:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
com.google.common.collect.BoundType -> com.google.common.collect.BoundType:
    26:30:void <clinit>() -> <clinit>
    34:35:void <init>(java.lang.String,int,boolean) -> <init>
    40:40:com.google.common.collect.BoundType forBoolean(boolean) -> forBoolean
    26:26:com.google.common.collect.BoundType valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.collect.BoundType[] values() -> values
com.google.common.collect.ByFunctionOrdering -> com.google.common.collect.ByFunctionOrdering:
    36:38:void <init>(com.google.common.base.Function,com.google.common.collect.Ordering) -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    51:53:boolean equals(java.lang.Object) -> equals
    60:60:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
com.google.common.collect.CollectPreconditions -> com.google.common.collect.CollectPreconditions:
    30:32:void checkEntryNotNull(java.lang.Object,java.lang.Object) -> checkEntryNotNull
    39:39:int checkNonnegative(int,java.lang.String) -> checkNonnegative
    63:63:void checkRemove(boolean) -> checkRemove
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    328:329:java.lang.StringBuilder newStringBuilderForCollection(int) -> newStringBuilderForCollection
    99:101:boolean safeContains(java.util.Collection,java.lang.Object) -> safeContains
com.google.common.collect.CompactHashMap -> com.google.common.collect.CompactHashMap:
    102:102:void <clinit>() -> <clinit>
    180:181:void <init>() -> <init>
    189:190:void <init>(int) -> <init>
    75:75:int access$000(com.google.common.collect.CompactHashMap) -> access$000
    75:75:java.lang.Object access$100(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$100
    75:75:java.lang.Object access$200() -> access$200
    75:75:int access$400(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$400
    75:75:int access$500(com.google.common.collect.CompactHashMap) -> access$500
    75:75:java.lang.Object access$600(com.google.common.collect.CompactHashMap) -> access$600
    75:75:int access$710(com.google.common.collect.CompactHashMap) -> access$710
    210:219:int allocArrays() -> allocArrays
    890:906:void clear() -> clear
    440:441:boolean containsKey(java.lang.Object) -> containsKey
    807:812:boolean containsValue(java.lang.Object) -> containsValue
    242:250:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    663:663:java.util.Set createEntrySet() -> createEntrySet
    235:235:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    607:607:java.util.Set createKeySet() -> createKeySet
    827:827:java.util.Collection createValues() -> createValues
    99:99:com.google.common.collect.CompactHashMap createWithExpectedSize(int) -> createWithExpectedSize
    228:229:java.util.Map delegateOrNull() -> delegateOrNull
    659:659:java.util.Set entrySet() -> entrySet
    726:730:java.util.Iterator entrySetIterator() -> entrySetIterator
    538:538:int firstEntryIndex() -> firstEntryIndex
    447:456:java.lang.Object get(java.lang.Object) -> get
    542:542:int getSuccessor(int) -> getSuccessor
    263:263:int hashTableMask() -> hashTableMask
    267:267:void incrementModCount() -> incrementModCount
    416:433:int indexOf(java.lang.Object) -> indexOf
    195:198:void init(int) -> init
    350:352:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    802:802:boolean isEmpty() -> isEmpty
    603:603:java.util.Set keySet() -> keySet
    642:646:java.util.Iterator keySetIterator() -> keySetIterator
    498:533:void moveLastEntry(int,int) -> moveLastEntry
    204:204:boolean needsAllocArrays() -> needsAllocArrays
    282:342:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    923:932:void readObject(java.io.ObjectInputStream) -> readObject
    464:469:java.lang.Object remove(java.lang.Object) -> remove
    474:489:java.lang.Object removeHelper(java.lang.Object) -> removeHelper
    373:375:void resizeEntries(int) -> resizeEntries
    357:363:void resizeMeMaybe(int) -> resizeMeMaybe
    380:411:int resizeTable(int,int,int,int) -> resizeTable
    256:258:void setHashTableMask(int) -> setHashTableMask
    796:797:int size() -> size
    823:823:java.util.Collection values() -> values
    849:853:java.util.Iterator valuesIterator() -> valuesIterator
    911:917:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashMap$1 -> com.google.common.collect.CompactHashMap$1:
    646:646:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    650:650:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$2 -> com.google.common.collect.CompactHashMap$2:
    730:730:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    730:730:java.lang.Object getOutput(int) -> getOutput
    733:733:java.util.Map$Entry getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$3 -> com.google.common.collect.CompactHashMap$3:
    853:853:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    857:857:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$EntrySetView -> com.google.common.collect.CompactHashMap$EntrySetView:
    667:667:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    676:676:void clear() -> clear
    686:692:boolean contains(java.lang.Object) -> contains
    681:681:java.util.Iterator iterator() -> iterator
    699:717:boolean remove(java.lang.Object) -> remove
    671:671:int size() -> size
com.google.common.collect.CompactHashMap$Itr -> com.google.common.collect.CompactHashMap$Itr:
    554:557:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    554:554:void <init>(com.google.common.collect.CompactHashMap,com.google.common.collect.CompactHashMap$1) -> <init>
    593:594:void checkForConcurrentModification() -> checkForConcurrentModification
    561:561:boolean hasNext() -> hasNext
    589:589:void incrementExpectedModCount() -> incrementExpectedModCount
    568:574:java.lang.Object next() -> next
    580:585:void remove() -> remove
com.google.common.collect.CompactHashMap$KeySetView -> com.google.common.collect.CompactHashMap$KeySetView:
    611:611:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    637:637:void clear() -> clear
    619:619:boolean contains(java.lang.Object) -> contains
    632:632:java.util.Iterator iterator() -> iterator
    624:627:boolean remove(java.lang.Object) -> remove
    614:614:int size() -> size
com.google.common.collect.CompactHashMap$MapEntry -> com.google.common.collect.CompactHashMap$MapEntry:
    744:746:void <init>(com.google.common.collect.CompactHashMap,int) -> <init>
    752:752:java.lang.Object getKey() -> getKey
    767:772:java.lang.Object getValue() -> getValue
    778:788:java.lang.Object setValue(java.lang.Object) -> setValue
    756:759:void updateLastKnownIndex() -> updateLastKnownIndex
com.google.common.collect.CompactHashMap$ValuesView -> com.google.common.collect.CompactHashMap$ValuesView:
    831:831:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    839:839:void clear() -> clear
    844:844:java.util.Iterator iterator() -> iterator
    834:834:int size() -> size
com.google.common.collect.CompactHashSet -> com.google.common.collect.CompactHashSet:
    191:192:void <init>() -> <init>
    200:201:void <init>(int) -> <init>
    73:73:int access$000(com.google.common.collect.CompactHashSet) -> access$000
    287:340:boolean add(java.lang.Object) -> add
    221:229:int allocArrays() -> allocArrays
    635:650:void clear() -> clear
    413:434:boolean contains(java.lang.Object) -> contains
    252:259:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    245:245:java.util.Set createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    238:239:java.util.Set delegateOrNull() -> delegateOrNull
    505:505:int firstEntryIndex() -> firstEntryIndex
    509:509:int getSuccessor(int) -> getSuccessor
    277:277:int hashTableMask() -> hashTableMask
    281:281:void incrementModCount() -> incrementModCount
    206:209:void init(int) -> init
    348:349:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    580:580:boolean isEmpty() -> isEmpty
    265:265:boolean isUsingHashFloodingResistance() -> isUsingHashFloodingResistance
    523:527:java.util.Iterator iterator() -> iterator
    468:500:void moveLastEntry(int,int) -> moveLastEntry
    215:215:boolean needsAllocArrays() -> needsAllocArrays
    664:672:void readObject(java.io.ObjectInputStream) -> readObject
    442:459:boolean remove(java.lang.Object) -> remove
    370:371:void resizeEntries(int) -> resizeEntries
    354:360:void resizeMeMaybe(int) -> resizeMeMaybe
    376:407:int resizeTable(int,int,int,int) -> resizeTable
    270:272:void setHashTableMask(int) -> setHashTableMask
    574:575:int size() -> size
    585:589:java.lang.Object[] toArray() -> toArray
    595:604:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    655:658:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashSet$1 -> com.google.common.collect.CompactHashSet$1:
    527:530:void <init>(com.google.common.collect.CompactHashSet) -> <init>
    565:566:void checkForConcurrentModification() -> checkForConcurrentModification
    534:534:boolean hasNext() -> hasNext
    561:561:void incrementExpectedModCount() -> incrementExpectedModCount
    540:546:java.lang.Object next() -> next
    552:557:void remove() -> remove
com.google.common.collect.CompactHashing -> com.google.common.collect.CompactHashing:
    77:85:java.lang.Object createTable(int) -> createTable
    153:179:int remove(java.lang.Object,java.lang.Object,int,java.lang.Object,int[],java.lang.Object[],java.lang.Object[]) -> remove
    90:95:void tableClear(java.lang.Object) -> tableClear
    100:105:int tableGet(java.lang.Object,int) -> tableGet
    110:115:void tableSet(java.lang.Object,int,int) -> tableSet
    70:70:int tableSize(int) -> tableSize
com.google.common.collect.CompactLinkedHashMap -> com.google.common.collect.CompactLinkedHashMap:
    91:91:void <init>() -> <init>
    95:95:void <init>(int) -> <init>
    99:100:void <init>(int,boolean) -> <init>
    172:178:void accessEntry(int) -> accessEntry
    208:208:int adjustAfterRemove(int,int) -> adjustAfterRemove
    112:113:int allocArrays() -> allocArrays
    213:221:void clear() -> clear
    125:126:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    119:119:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    66:66:com.google.common.collect.CompactLinkedHashMap createWithExpectedSize(int) -> createWithExpectedSize
    203:203:int firstEntryIndex() -> firstEntryIndex
    131:131:int getPredecessor(int) -> getPredecessor
    136:136:int getSuccessor(int) -> getSuccessor
    105:107:void init(int) -> init
    165:167:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    184:192:void moveLastEntry(int,int) -> moveLastEntry
    197:198:void resizeEntries(int) -> resizeEntries
    146:146:void setPredecessor(int,int) -> setPredecessor
    151:159:void setSucceeds(int,int) -> setSucceeds
    141:141:void setSuccessor(int,int) -> setSuccessor
com.google.common.collect.CompactLinkedHashSet -> com.google.common.collect.CompactLinkedHashSet:
    121:121:void <init>() -> <init>
    125:125:void <init>(int) -> <init>
    218:218:int adjustAfterRemove(int,int) -> adjustAfterRemove
    137:139:int allocArrays() -> allocArrays
    233:242:void clear() -> clear
    146:148:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    93:93:com.google.common.collect.CompactLinkedHashSet createWithExpectedSize(int) -> createWithExpectedSize
    213:213:int firstEntryIndex() -> firstEntryIndex
    153:153:int getPredecessor(int) -> getPredecessor
    158:158:int getSuccessor(int) -> getSuccessor
    130:132:void init(int) -> init
    185:187:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    192:201:void moveLastEntry(int,int) -> moveLastEntry
    206:208:void resizeEntries(int) -> resizeEntries
    166:166:void setPredecessor(int,int) -> setPredecessor
    171:179:void setSucceeds(int,int) -> setSucceeds
    162:162:void setSuccessor(int,int) -> setSuccessor
    223:223:java.lang.Object[] toArray() -> toArray
    228:228:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ComparatorOrdering -> com.google.common.collect.ComparatorOrdering:
    31:32:void <init>(java.util.Comparator) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    45:47:boolean equals(java.lang.Object) -> equals
    54:54:int hashCode() -> hashCode
    59:59:java.lang.String toString() -> toString
com.google.common.collect.Cut -> com.google.common.collect.Cut:
    38:39:void <init>(java.lang.Comparable) -> <init>
    215:215:com.google.common.collect.Cut aboveAll() -> aboveAll
    383:383:com.google.common.collect.Cut aboveValue(java.lang.Comparable) -> aboveValue
    114:114:com.google.common.collect.Cut belowAll() -> belowAll
    300:300:com.google.common.collect.Cut belowValue(java.lang.Comparable) -> belowValue
    34:34:int compareTo(java.lang.Object) -> compareTo
    71:82:int compareTo(com.google.common.collect.Cut) -> compareTo
    86:86:java.lang.Comparable endpoint() -> endpoint
    92:96:boolean equals(java.lang.Object) -> equals
com.google.common.collect.Cut$AboveAll -> com.google.common.collect.Cut$AboveAll:
    219:219:void <clinit>() -> <clinit>
    222:222:void <init>() -> <init>
    218:218:com.google.common.collect.Cut$AboveAll access$100() -> access$100
    218:218:int compareTo(java.lang.Object) -> compareTo
    259:259:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    264:264:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    227:227:java.lang.Comparable endpoint() -> endpoint
    284:284:int hashCode() -> hashCode
    293:293:java.lang.Object readResolve() -> readResolve
com.google.common.collect.Cut$AboveValue -> com.google.common.collect.Cut$AboveValue:
    388:388:void <init>(java.lang.Comparable) -> <init>
    434:434:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    439:439:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    460:460:int hashCode() -> hashCode
    393:393:boolean isLessThan(java.lang.Comparable) -> isLessThan
    465:465:java.lang.String toString() -> toString
com.google.common.collect.Cut$BelowAll -> com.google.common.collect.Cut$BelowAll:
    120:120:void <clinit>() -> <clinit>
    123:123:void <init>() -> <init>
    119:119:com.google.common.collect.Cut$BelowAll access$000() -> access$000
    119:119:int compareTo(java.lang.Object) -> compareTo
    160:160:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    165:165:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    128:128:java.lang.Comparable endpoint() -> endpoint
    194:194:int hashCode() -> hashCode
    203:203:java.lang.Object readResolve() -> readResolve
com.google.common.collect.Cut$BelowValue -> com.google.common.collect.Cut$BelowValue:
    305:305:void <init>(java.lang.Comparable) -> <init>
    351:351:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    356:356:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    371:371:int hashCode() -> hashCode
    310:310:boolean isLessThan(java.lang.Comparable) -> isLessThan
    376:376:java.lang.String toString() -> toString
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    53:53:void <init>() -> <init>
    87:87:boolean add(java.lang.Object) -> add
    104:104:boolean addAll(java.util.Collection) -> addAll
    115:115:void clear() -> clear
    81:81:boolean contains(java.lang.Object) -> contains
    98:98:boolean containsAll(java.util.Collection) -> containsAll
    76:76:boolean isEmpty() -> isEmpty
    60:60:java.util.Iterator iterator() -> iterator
    93:93:boolean remove(java.lang.Object) -> remove
    71:71:boolean removeAll(java.util.Collection) -> removeAll
    110:110:boolean retainAll(java.util.Collection) -> retainAll
    65:65:int size() -> size
    120:120:java.lang.Object[] toArray() -> toArray
    126:126:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ForwardingConcurrentMap -> com.google.common.collect.ForwardingConcurrentMap:
    43:43:void <init>() -> <init>
    51:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    57:57:boolean remove(java.lang.Object,java.lang.Object) -> remove
    63:63:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    69:69:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
com.google.common.collect.ForwardingMap -> com.google.common.collect.ForwardingMap:
    62:62:void <init>() -> <init>
    85:85:void clear() -> clear
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    95:95:boolean containsValue(java.lang.Object) -> containsValue
    126:126:java.util.Set entrySet() -> entrySet
    131:131:boolean equals(java.lang.Object) -> equals
    100:100:java.lang.Object get(java.lang.Object) -> get
    136:136:int hashCode() -> hashCode
    74:74:boolean isEmpty() -> isEmpty
    116:116:java.util.Set keySet() -> keySet
    106:106:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    111:111:void putAll(java.util.Map) -> putAll
    80:80:java.lang.Object remove(java.lang.Object) -> remove
    69:69:int size() -> size
    303:303:java.lang.String standardToString() -> standardToString
    121:121:java.util.Collection values() -> values
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    50:50:void <init>() -> <init>
    63:63:java.lang.String toString() -> toString
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    53:53:void <init>() -> <init>
    60:60:boolean equals(java.lang.Object) -> equals
    65:65:int hashCode() -> hashCode
com.google.common.collect.ForwardingSortedSet -> com.google.common.collect.ForwardingSortedSet:
    58:58:void <init>() -> <init>
    65:65:java.util.Comparator comparator() -> comparator
    70:70:java.lang.Object first() -> first
    75:75:java.util.SortedSet headSet(java.lang.Object) -> headSet
    80:80:java.lang.Object last() -> last
    85:85:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    90:90:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Hashing -> com.google.common.collect.Hashing:
    62:63:int closedTableSize(int,double) -> closedTableSize
    50:50:int smear(int) -> smear
    54:54:int smearedHash(java.lang.Object) -> smearedHash
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
    174:174:void <clinit>() -> <clinit>
    168:168:void <init>() -> <init>
    235:235:boolean add(java.lang.Object) -> add
    261:261:boolean addAll(java.util.Collection) -> addAll
    313:313:com.google.common.collect.ImmutableList asList() -> asList
    299:299:void clear() -> clear
    330:331:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    219:219:int internalArrayEnd() -> internalArrayEnd
    211:211:int internalArrayStart() -> internalArrayStart
    161:161:java.util.Iterator iterator() -> iterator
    248:248:boolean remove(java.lang.Object) -> remove
    274:274:boolean removeAll(java.util.Collection) -> removeAll
    287:287:boolean retainAll(java.util.Collection) -> retainAll
    178:178:java.lang.Object[] toArray() -> toArray
    184:196:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    338:338:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder -> com.google.common.collect.ImmutableCollection$ArrayBasedBuilder:
    449:452:void <init>(int) -> <init>
    474:476:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    483:486:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    461:467:void getReadyToExpandTo(int) -> getReadyToExpandTo
com.google.common.collect.ImmutableCollection$Builder -> com.google.common.collect.ImmutableCollection$Builder:
    366:366:void <init>() -> <init>
    352:357:int expandedCapacity(int,int) -> expandedCapacity
com.google.common.collect.ImmutableEntry -> com.google.common.collect.ImmutableEntry:
    29:31:void <init>(java.lang.Object,java.lang.Object) -> <init>
    37:37:java.lang.Object getKey() -> getKey
    43:43:java.lang.Object getValue() -> getValue
    48:48:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    372:372:void <clinit>() -> <clinit>
    346:346:void <init>() -> <init>
    514:514:void add(int,java.lang.Object) -> add
    489:489:boolean addAll(int,java.util.Collection) -> addAll
    335:335:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> asImmutableList
    341:343:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> asImmutableList
    671:671:com.google.common.collect.ImmutableList$Builder builder() -> builder
    326:326:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    401:401:boolean contains(java.lang.Object) -> contains
    543:545:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    238:243:com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    271:273:com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    623:623:boolean equals(java.lang.Object) -> equals
    629:631:int hashCode() -> hashCode
    391:391:int indexOf(java.lang.Object) -> indexOf
    55:55:java.util.Iterator iterator() -> iterator
    352:352:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    396:396:int lastIndexOf(java.lang.Object) -> lastIndexOf
    55:55:java.util.ListIterator listIterator() -> listIterator
    55:55:java.util.ListIterator listIterator(int) -> listIterator
    357:357:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    363:367:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    67:67:com.google.common.collect.ImmutableList of() -> of
    78:78:com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    658:658:void readObject(java.io.ObjectInputStream) -> readObject
    527:527:java.lang.Object remove(int) -> remove
    558:558:com.google.common.collect.ImmutableList reverse() -> reverse
    502:502:java.lang.Object set(int,java.lang.Object) -> set
    55:55:java.util.List subList(int,int) -> subList
    413:420:com.google.common.collect.ImmutableList subList(int,int) -> subList
    429:429:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    663:663:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableList$Builder -> com.google.common.collect.ImmutableList$Builder:
    718:718:void <init>() -> <init>
    722:722:void <init>(int) -> <init>
    735:735:com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    786:787:com.google.common.collect.ImmutableList build() -> build
com.google.common.collect.ImmutableList$Itr -> com.google.common.collect.ImmutableList$Itr:
    379:380:void <init>(com.google.common.collect.ImmutableList,int) -> <init>
    385:385:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableList$ReverseImmutableList -> com.google.common.collect.ImmutableList$ReverseImmutableList:
    564:565:void <init>(com.google.common.collect.ImmutableList) -> <init>
    583:583:boolean contains(java.lang.Object) -> contains
    606:607:java.lang.Object get(int) -> get
    588:589:int indexOf(java.lang.Object) -> indexOf
    617:617:boolean isPartialView() -> isPartialView
    594:595:int lastIndexOf(java.lang.Object) -> lastIndexOf
    578:578:com.google.common.collect.ImmutableList reverse() -> reverse
    569:569:int reverseIndex(int) -> reverseIndex
    573:573:int reversePosition(int) -> reversePosition
    612:612:int size() -> size
    561:561:java.util.List subList(int,int) -> subList
    600:601:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableList$SerializedForm -> com.google.common.collect.ImmutableList$SerializedForm:
    646:647:void <init>(java.lang.Object[]) -> <init>
    651:651:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList$SubList -> com.google.common.collect.ImmutableList$SubList:
    436:438:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    463:464:java.lang.Object get(int) -> get
    448:448:java.lang.Object[] internalArray() -> internalArray
    458:458:int internalArrayEnd() -> internalArrayEnd
    453:453:int internalArrayStart() -> internalArrayStart
    443:443:int size() -> size
    432:432:java.util.List subList(int,int) -> subList
    469:470:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableMap -> com.google.common.collect.ImmutableMap:
    408:408:void <clinit>() -> <clinit>
    440:440:void <init>() -> <init>
    489:489:void clear() -> clear
    499:499:boolean containsKey(java.lang.Object) -> containsKey
    504:504:boolean containsValue(java.lang.Object) -> containsValue
    378:385:com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    400:405:com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable) -> copyOf
    54:54:java.util.Set entrySet() -> entrySet
    536:537:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    685:685:boolean equals(java.lang.Object) -> equals
    524:524:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    692:692:int hashCode() -> hashCode
    494:494:boolean isEmpty() -> isEmpty
    54:54:java.util.Set keySet() -> keySet
    550:551:com.google.common.collect.ImmutableSet keySet() -> keySet
    452:452:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    477:477:void putAll(java.util.Map) -> putAll
    465:465:java.lang.Object remove(java.lang.Object) -> remove
    701:701:java.lang.String toString() -> toString
    54:54:java.util.Collection values() -> values
    584:585:com.google.common.collect.ImmutableCollection values() -> values
    788:788:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMap$Builder -> com.google.common.collect.ImmutableMap$Builder:
    224:224:void <init>() -> <init>
    228:231:void <init>(int) -> <init>
    339:341:com.google.common.collect.ImmutableMap build() -> build
    235:241:void ensureCapacity(int) -> ensureCapacity
    251:255:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    267:267:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    291:295:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    345:359:void sortEntries() -> sortEntries
com.google.common.collect.ImmutableMap$SerializedForm -> com.google.common.collect.ImmutableMap$SerializedForm:
    720:731:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    761:769:java.lang.Object legacyReadResolve() -> legacyReadResolve
    776:776:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    740:756:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapEntrySet -> com.google.common.collect.ImmutableMapEntrySet:
    68:68:void <init>() -> <init>
    79:82:boolean contains(java.lang.Object) -> contains
    100:100:int hashCode() -> hashCode
    95:95:boolean isHashCodeFast() -> isHashCodeFast
    74:74:int size() -> size
    106:106:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm -> com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm:
    113:114:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    118:118:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSet -> com.google.common.collect.ImmutableSet:
    310:310:void <init>() -> <init>
    48:48:boolean access$000(int,int) -> access$000
    48:48:com.google.common.collect.ImmutableSet access$100(int,java.lang.Object[]) -> access$100
    344:345:com.google.common.collect.ImmutableList asList() -> asList
    383:383:com.google.common.collect.ImmutableSet$Builder builder() -> builder
    210:222:int chooseTableSize(int) -> chooseTableSize
    144:186:com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> construct
    300:306:com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    349:349:com.google.common.collect.ImmutableList createAsList() -> createAsList
    321:327:boolean equals(java.lang.Object) -> equals
    332:332:int hashCode() -> hashCode
    46:46:java.util.Iterator iterator() -> iterator
    55:55:com.google.common.collect.ImmutableSet of() -> of
    64:64:com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    82:82:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    91:91:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    375:375:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSet$Builder -> com.google.common.collect.ImmutableSet$Builder:
    431:431:void <init>() -> <init>
    451:457:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    473:478:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    484:494:void addDeduping(java.lang.Object) -> addDeduping
    546:566:com.google.common.collect.ImmutableSet build() -> build
com.google.common.collect.ImmutableSet$SerializedForm -> com.google.common.collect.ImmutableSet$SerializedForm:
    362:363:void <init>(java.lang.Object[]) -> <init>
    367:367:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMap -> com.google.common.collect.ImmutableSortedMap:
    61:65:void <clinit>() -> <clinit>
    548:548:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList) -> <init>
    554:557:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSortedMap) -> <init>
    54:54:com.google.common.collect.ImmutableSortedMap access$000(java.util.Comparator,java.lang.Object,java.lang.Object) -> access$000
    54:54:com.google.common.collect.RegularImmutableSortedSet access$100(com.google.common.collect.ImmutableSortedMap) -> access$100
    54:54:com.google.common.collect.ImmutableList access$200(com.google.common.collect.ImmutableSortedMap) -> access$200
    798:798:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    803:803:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    651:651:java.util.Comparator comparator() -> comparator
    616:616:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    627:627:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    641:641:com.google.common.collect.ImmutableCollection createValues() -> createValues
    53:53:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    876:876:com.google.common.collect.ImmutableSortedSet descendingKeySet() -> descendingKeySet
    53:53:java.util.NavigableMap descendingMap() -> descendingMap
    856:863:com.google.common.collect.ImmutableSortedMap descendingMap() -> descendingMap
    68:72:com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> emptyMap
    53:53:java.util.Set entrySet() -> entrySet
    579:579:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    818:818:java.util.Map$Entry firstEntry() -> firstEntry
    656:656:java.lang.Object firstKey() -> firstKey
    788:788:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    793:793:java.lang.Object floorKey(java.lang.Object) -> floorKey
    567:568:java.lang.Object get(java.lang.Object) -> get
    665:671:com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> getSubMap
    53:53:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    53:53:java.util.SortedMap headMap(java.lang.Object) -> headMap
    686:686:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    702:702:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    808:808:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    813:813:java.lang.Object higherKey(java.lang.Object) -> higherKey
    573:573:boolean isPartialView() -> isPartialView
    53:53:com.google.common.collect.ImmutableSet keySet() -> keySet
    53:53:java.util.Set keySet() -> keySet
    622:622:com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    823:823:java.util.Map$Entry lastEntry() -> lastEntry
    661:661:java.lang.Object lastKey() -> lastKey
    778:778:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    783:783:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    53:53:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    871:871:com.google.common.collect.ImmutableSortedSet navigableKeySet() -> navigableKeySet
    81:81:com.google.common.collect.ImmutableSortedMap of() -> of
    91:93:com.google.common.collect.ImmutableSortedMap of(java.util.Comparator,java.lang.Object,java.lang.Object) -> of
    836:836:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    849:849:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    562:562:int size() -> size
    53:53:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    717:717:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    736:743:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    757:757:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    773:773:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.Collection values() -> values
    636:636:com.google.common.collect.ImmutableCollection values() -> values
    902:902:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedMap$1EntrySet -> com.google.common.collect.ImmutableSortedMap$1EntrySet:
    584:584:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    592:592:com.google.common.collect.ImmutableList createAsList() -> createAsList
    584:584:java.util.Iterator iterator() -> iterator
    587:587:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    613:613:com.google.common.collect.ImmutableMap map() -> map
com.google.common.collect.ImmutableSortedMap$1EntrySet$1 -> com.google.common.collect.ImmutableSortedMap$1EntrySet$1:
    592:592:void <init>(com.google.common.collect.ImmutableSortedMap$1EntrySet) -> <init>
    592:592:java.lang.Object get(int) -> get
    595:596:java.util.Map$Entry get(int) -> get
    606:606:int size() -> size
com.google.common.collect.ImmutableSortedMap$Builder -> com.google.common.collect.ImmutableSortedMap$Builder:
    411:411:void <init>(java.util.Comparator) -> <init>
    414:417:void <init>(java.util.Comparator,int) -> <init>
    400:400:com.google.common.collect.ImmutableMap build() -> build
    510:538:com.google.common.collect.ImmutableSortedMap build() -> build
    421:424:void ensureCapacity(int) -> ensureCapacity
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    436:440:com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object) -> put
    454:454:com.google.common.collect.ImmutableSortedMap$Builder put(java.util.Map$Entry) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    484:484:com.google.common.collect.ImmutableSortedMap$Builder putAll(java.lang.Iterable) -> putAll
com.google.common.collect.ImmutableSortedMap$SerializedForm -> com.google.common.collect.ImmutableSortedMap$SerializedForm:
    888:889:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    884:884:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    894:894:com.google.common.collect.ImmutableSortedMap$Builder makeBuilder(int) -> makeBuilder
com.google.common.collect.ImmutableSortedMapFauxverideShim -> com.google.common.collect.ImmutableSortedMapFauxverideShim:
    29:29:void <init>() -> <init>
com.google.common.collect.ImmutableSortedSet -> com.google.common.collect.ImmutableSortedSet:
    513:514:void <init>(java.util.Comparator) -> <init>
    627:627:java.lang.Object ceiling(java.lang.Object) -> ceiling
    524:524:java.util.Comparator comparator() -> comparator
    342:361:com.google.common.collect.ImmutableSortedSet construct(java.util.Comparator,int,java.lang.Object[]) -> construct
    57:57:java.util.Iterator descendingIterator() -> descendingIterator
    57:57:java.util.NavigableSet descendingSet() -> descendingSet
    686:689:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    62:65:com.google.common.collect.RegularImmutableSortedSet emptySet(java.util.Comparator) -> emptySet
    639:639:java.lang.Object first() -> first
    621:621:java.lang.Object floor(java.lang.Object) -> floor
    57:57:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    57:57:java.util.SortedSet headSet(java.lang.Object) -> headSet
    542:542:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    548:548:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    634:634:java.lang.Object higher(java.lang.Object) -> higher
    57:57:java.util.Iterator iterator() -> iterator
    644:644:java.lang.Object last() -> last
    615:615:java.lang.Object lower(java.lang.Object) -> lower
    659:659:java.lang.Object pollFirst() -> pollFirst
    674:674:java.lang.Object pollLast() -> pollLast
    732:732:void readObject(java.io.ObjectInputStream) -> readObject
    57:57:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    565:565:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    573:576:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    57:57:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    591:591:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    597:597:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    499:499:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    508:508:int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object) -> unsafeCompare
    737:737:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedSet$Builder -> com.google.common.collect.ImmutableSortedSet$Builder:
    418:419:void <init>(java.util.Comparator) -> <init>
    411:411:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    434:434:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object) -> add
    449:449:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object[]) -> add
    411:411:com.google.common.collect.ImmutableSet build() -> build
    490:493:com.google.common.collect.ImmutableSortedSet build() -> build
com.google.common.collect.ImmutableSortedSet$SerializedForm -> com.google.common.collect.ImmutableSortedSet$SerializedForm:
    718:720:void <init>(java.util.Comparator,java.lang.Object[]) -> <init>
    725:725:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedSetFauxverideShim -> com.google.common.collect.ImmutableSortedSetFauxverideShim:
    39:39:void <init>() -> <init>
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    342:344:java.util.Collection castOrCopyToCollection(java.lang.Iterable) -> castOrCopyToCollection
    790:790:java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    333:333:java.lang.Object[] toArray(java.lang.Iterable) -> toArray
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    352:356:boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    989:992:void clear(java.util.Iterator) -> clear
    263:273:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    121:121:java.util.Iterator emptyModifiableIterator() -> emptyModifiableIterator
    850:850:java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    1201:1208:com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> peekingIterator
    976:978:java.lang.Object pollNext(java.util.Iterator) -> pollNext
    198:202:boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    1056:1056:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    163:167:int size(java.util.Iterator) -> size
    127:133:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
com.google.common.collect.Iterators$1 -> com.google.common.collect.Iterators$1:
    133:133:void <init>(java.util.Iterator) -> <init>
    136:136:boolean hasNext() -> hasNext
    141:141:java.lang.Object next() -> next
com.google.common.collect.Iterators$9 -> com.google.common.collect.Iterators$9:
    1056:1056:void <init>(java.lang.Object) -> <init>
    1061:1061:boolean hasNext() -> hasNext
    1066:1070:java.lang.Object next() -> next
com.google.common.collect.Iterators$EmptyModifiableIterator -> com.google.common.collect.Iterators$EmptyModifiableIterator:
    95:96:void <clinit>() -> <clinit>
    95:95:void <init>(java.lang.String,int) -> <init>
    105:105:java.lang.Object next() -> next
    110:110:void remove() -> remove
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String) -> valueOf
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator[] values() -> values
com.google.common.collect.Iterators$PeekingImpl -> com.google.common.collect.Iterators$PeekingImpl:
    1128:1129:void <init>(java.util.Iterator) -> <init>
    1134:1134:boolean hasNext() -> hasNext
    1139:1144:java.lang.Object next() -> next
    1156:1160:java.lang.Object peek() -> peek
    1150:1151:void remove() -> remove
com.google.common.collect.LinkedHashMultimap -> com.google.common.collect.LinkedHashMultimap:
    77:77:void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$200
    77:77:com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap) -> access$300
    77:77:void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$400
    77:77:void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$500
    77:77:void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$600
    76:76:java.util.Map asMap() -> asMap
    542:543:void clear() -> clear
    76:76:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    76:76:java.util.Collection createCollection() -> createCollection
    236:236:java.util.Set createCollection() -> createCollection
    250:250:java.util.Collection createCollection(java.lang.Object) -> createCollection
    139:139:void deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> deleteFromMultimap
    135:135:void deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> deleteFromValueSet
    279:279:java.util.Set entries() -> entries
    506:506:java.util.Iterator entryIterator() -> entryIterator
    76:76:boolean equals(java.lang.Object) -> equals
    76:76:int hashCode() -> hashCode
    294:294:java.util.Set keySet() -> keySet
    76:76:boolean put(java.lang.Object,java.lang.Object) -> put
    566:585:void readObject(java.io.ObjectInputStream) -> readObject
    76:76:boolean remove(java.lang.Object,java.lang.Object) -> remove
    76:76:int size() -> size
    130:131:void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> succeedsInMultimap
    125:126:void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> succeedsInValueSet
    76:76:java.lang.String toString() -> toString
    552:560:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.LinkedHashMultimap$1 -> com.google.common.collect.LinkedHashMultimap$1:
    506:507:void <init>(com.google.common.collect.LinkedHashMultimap) -> <init>
    512:512:boolean hasNext() -> hasNext
    506:506:java.lang.Object next() -> next
    517:522:java.util.Map$Entry next() -> next
    528:530:void remove() -> remove
com.google.common.collect.LinkedHashMultimap$ValueEntry -> com.google.common.collect.LinkedHashMultimap$ValueEntry:
    165:167:void <init>(java.lang.Object,java.lang.Object,int,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> <init>
    195:195:com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap() -> getPredecessorInMultimap
    176:176:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    199:199:com.google.common.collect.LinkedHashMultimap$ValueEntry getSuccessorInMultimap() -> getSuccessorInMultimap
    181:181:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    171:171:boolean matchesValue(java.lang.Object,int) -> matchesValue
    207:207:void setPredecessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setPredecessorInMultimap
    186:186:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    203:203:void setSuccessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setSuccessorInMultimap
    191:191:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
com.google.common.collect.LinkedHashMultimap$ValueSet -> com.google.common.collect.LinkedHashMultimap$ValueSet:
    319:336:void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,int) -> <init>
    311:311:com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$000
    311:311:int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$100
    425:442:boolean add(java.lang.Object) -> add
    491:500:void clear() -> clear
    412:416:boolean contains(java.lang.Object) -> contains
    345:345:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    350:350:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    365:365:java.util.Iterator iterator() -> iterator
    340:340:int mask() -> mask
    447:458:void rehashIfNecessary() -> rehashIfNecessary
    466:482:boolean remove(java.lang.Object) -> remove
    355:355:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    360:360:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
    407:407:int size() -> size
com.google.common.collect.LinkedHashMultimap$ValueSet$1 -> com.google.common.collect.LinkedHashMultimap$ValueSet$1:
    365:368:void <init>(com.google.common.collect.LinkedHashMultimap$ValueSet) -> <init>
    371:372:void checkForComodification() -> checkForComodification
    378:379:boolean hasNext() -> hasNext
    384:390:java.lang.Object next() -> next
    396:400:void remove() -> remove
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    148:151:int computeArrayListCapacity(int) -> computeArrayListCapacity
    953:973:boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    990:996:int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    1004:1013:int indexOfRandomAccess(java.util.List,java.lang.Object) -> indexOfRandomAccess
    1023:1029:int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
    1038:1045:int lastIndexOfRandomAccess(java.util.List,java.lang.Object) -> lastIndexOfRandomAccess
    82:82:java.util.ArrayList newArrayList() -> newArrayList
    102:106:java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    125:129:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    141:142:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    98:110:void <init>() -> <init>
    178:183:com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    188:188:int getConcurrencyLevel() -> getConcurrencyLevel
    154:154:int getInitialCapacity() -> getInitialCapacity
    129:129:com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    219:219:com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> getKeyStrength
    265:265:com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> getValueStrength
    144:149:com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    122:124:com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence) -> keyEquivalence
    280:283:java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    209:213:com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setKeyStrength
    255:259:com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setValueStrength
    292:308:java.lang.String toString() -> toString
    205:205:com.google.common.collect.MapMaker weakKeys() -> weakKeys
com.google.common.collect.MapMakerInternalMap -> com.google.common.collect.MapMakerInternalMap:
    1005:1005:void <clinit>() -> <clinit>
    160:192:void <init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper) -> <init>
    69:69:java.util.ArrayList access$900(java.util.Collection) -> access$900
    2473:2474:void clear() -> clear
    2363:2364:boolean containsKey(java.lang.Object) -> containsKey
    2378:2395:boolean containsValue(java.lang.Object) -> containsValue
    1074:1075:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    199:214:com.google.common.collect.MapMakerInternalMap create(com.google.common.collect.MapMaker) -> create
    1115:1115:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> createSegment
    2498:2499:java.util.Set entrySet() -> entrySet
    2342:2343:java.lang.Object get(java.lang.Object) -> get
    1123:1126:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1079:1080:int hash(java.lang.Object) -> hash
    2307:2320:boolean isEmpty() -> isEmpty
    1100:1100:boolean isLiveForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isLiveForTesting
    2482:2483:java.util.Set keySet() -> keySet
    2282:2282:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    1131:1131:com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int) -> newSegmentArray
    2408:2411:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2425:2426:void putAll(java.util.Map) -> putAll
    2417:2420:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    1090:1091:void reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> reclaimKey
    1084:1086:void reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    2436:2437:java.lang.Object remove(java.lang.Object) -> remove
    2446:2447:boolean remove(java.lang.Object,java.lang.Object) -> remove
    2453:2459:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    2465:2468:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1111:1111:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> segmentFor
    2329:2334:int size() -> size
    2825:2826:java.util.ArrayList toArrayList(java.util.Collection) -> toArrayList
    385:385:com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference() -> unsetWeakValueReference
    2292:2292:com.google.common.base.Equivalence valueEquivalence() -> valueEquivalence
    2287:2287:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
    2490:2491:java.util.Collection values() -> values
    2835:2839:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.MapMakerInternalMap$1 -> com.google.common.collect.MapMakerInternalMap$1:
    1006:1006:void <init>() -> <init>
    1006:1006:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1006:1006:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy -> com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:
    2866:2872:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2848:2848:java.lang.Object delegate() -> delegate
    2848:2848:java.util.Map delegate() -> delegate
    2877:2877:java.util.concurrent.ConcurrentMap delegate() -> delegate
    2903:2908:void readEntries(java.io.ObjectInputStream) -> readEntries
    2891:2897:com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) -> readMapMaker
    2881:2886:void writeMapTo(java.io.ObjectOutputStream) -> writeMapTo
com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry:
    344:347:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    357:357:int getHash() -> getHash
    352:352:java.lang.Object getKey() -> getKey
    362:362:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry:
    652:654:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    664:664:int getHash() -> getHash
    659:659:java.lang.Object getKey() -> getKey
    669:669:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$DummyInternalEntry -> com.google.common.collect.MapMakerInternalMap$DummyInternalEntry:
    976:977:void <init>() -> <init>
    987:987:int getHash() -> getHash
    992:992:java.lang.Object getKey() -> getKey
    974:974:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
    982:982:com.google.common.collect.MapMakerInternalMap$DummyInternalEntry getNext() -> getNext
    997:997:java.lang.Object getValue() -> getValue
com.google.common.collect.MapMakerInternalMap$EntryIterator -> com.google.common.collect.MapMakerInternalMap$EntryIterator:
    2675:2675:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2675:2675:java.lang.Object next() -> next
    2679:2679:java.util.Map$Entry next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> com.google.common.collect.MapMakerInternalMap$EntrySet:
    2760:2760:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2804:2804:void clear() -> clear
    2769:2779:boolean contains(java.lang.Object) -> contains
    2799:2799:boolean isEmpty() -> isEmpty
    2764:2764:java.util.Iterator iterator() -> iterator
    2784:2789:boolean remove(java.lang.Object) -> remove
    2794:2794:int size() -> size
com.google.common.collect.MapMakerInternalMap$HashIterator -> com.google.common.collect.MapMakerInternalMap$HashIterator:
    2514:2517:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2524:2539:void advance() -> advance
    2576:2587:boolean advanceTo(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> advanceTo
    2592:2592:boolean hasNext() -> hasNext
    2596:2601:com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> nextEntry
    2548:2550:boolean nextInChain() -> nextInChain
    2560:2562:boolean nextInTable() -> nextInTable
    2606:2608:void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> com.google.common.collect.MapMakerInternalMap$KeyIterator:
    2612:2612:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2616:2616:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> com.google.common.collect.MapMakerInternalMap$KeySet:
    2684:2684:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2713:2713:void clear() -> clear
    2703:2703:boolean contains(java.lang.Object) -> contains
    2698:2698:boolean isEmpty() -> isEmpty
    2688:2688:java.util.Iterator iterator() -> iterator
    2708:2708:boolean remove(java.lang.Object) -> remove
    2693:2693:int size() -> size
com.google.common.collect.MapMakerInternalMap$SafeToArraySet -> com.google.common.collect.MapMakerInternalMap$SafeToArraySet:
    2808:2808:void <init>() -> <init>
    2808:2808:void <init>(com.google.common.collect.MapMakerInternalMap$1) -> <init>
    2814:2814:java.lang.Object[] toArray() -> toArray
    2819:2819:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$Segment -> com.google.common.collect.MapMakerInternalMap$Segment:
    1205:1210:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1773:1787:void clear() -> clear
    1379:1379:void clearReferenceQueue(java.lang.ref.ReferenceQueue) -> clearReferenceQueue
    1436:1444:boolean containsKey(java.lang.Object,int) -> containsKey
    1454:1473:boolean containsValue(java.lang.Object) -> containsValue
    1235:1235:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    1354:1357:void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue) -> drainKeyReferenceQueue
    1368:1371:void drainValueReferenceQueue(java.lang.ref.ReferenceQueue) -> drainValueReferenceQueue
    1536:1599:void expand() -> expand
    1419:1431:java.lang.Object get(java.lang.Object,int) -> get
    1392:1404:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object,int) -> getEntry
    1385:1386:com.google.common.collect.MapMakerInternalMap$InternalEntry getFirst(int) -> getFirst
    1414:1414:com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int) -> getLiveEntry
    1949:1955:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1334:1334:java.lang.Object getLiveValueForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValueForTesting
    1243:1248:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    1940:1940:boolean isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isCollected
    1239:1239:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    1968:1969:void postReadCleanup() -> postReadCleanup
    1979:1979:void preWriteCleanup() -> preWriteCleanup
    1477:1530:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    1822:1843:boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry,int) -> reclaimKey
    1849:1877:boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    1692:1728:java.lang.Object remove(java.lang.Object,int) -> remove
    1732:1769:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    1805:1815:com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> removeFromChain
    1603:1646:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    1650:1687:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    1983:1983:void runCleanup() -> runCleanup
    1987:1993:void runLockedCleanup() -> runLockedCleanup
    1230:1230:void setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    1341:1346:void tryDrainReferenceQueues() -> tryDrainReferenceQueues
com.google.common.collect.MapMakerInternalMap$SerializationProxy -> com.google.common.collect.MapMakerInternalMap$SerializationProxy:
    2927:2927:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2937:2940:void readObject(java.io.ObjectInputStream) -> readObject
    2944:2944:java.lang.Object readResolve() -> readResolve
    2932:2933:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.MapMakerInternalMap$Strength -> com.google.common.collect.MapMakerInternalMap$Strength:
    244:252:void <clinit>() -> <clinit>
    244:244:void <init>(java.lang.String,int) -> <init>
    244:244:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    244:244:com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    244:244:com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
com.google.common.collect.MapMakerInternalMap$Strength$1 -> com.google.common.collect.MapMakerInternalMap$Strength$1:
    245:245:void <init>(java.lang.String,int) -> <init>
    248:248:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$Strength$2 -> com.google.common.collect.MapMakerInternalMap$Strength$2:
    252:252:void <init>(java.lang.String,int) -> <init>
    255:255:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry:
    392:395:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> <init>
    409:411:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    401:401:java.lang.Object getValue() -> getValue
    405:405:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:
    419:419:void <clinit>() -> <clinit>
    416:416:void <init>() -> <init>
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    451:451:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    423:423:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper instance() -> instance
    428:428:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    468:468:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> newEntry
    416:416:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    443:443:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    416:416:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    459:459:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,java.lang.Object) -> setValue
    433:433:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment:
    2007:2007:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1999:1999:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2018:2018:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    1999:1999:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry:
    478:481:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> <init>
    502:503:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    486:486:java.lang.Object getValue() -> getValue
    509:509:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    495:497:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:
    516:516:void <clinit>() -> <clinit>
    513:513:void <init>() -> <init>
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    547:550:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    520:520:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper instance() -> instance
    525:525:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    565:565:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> newEntry
    513:513:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    539:539:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    513:513:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    556:556:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,java.lang.Object) -> setValue
    530:530:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:
    2025:2032:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2023:2023:java.lang.ref.ReferenceQueue access$100(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment) -> access$100
    2023:2023:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2048:2048:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2083:2083:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2078:2078:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2023:2023:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$ValueIterator -> com.google.common.collect.MapMakerInternalMap$ValueIterator:
    2620:2620:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2624:2624:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$Values -> com.google.common.collect.MapMakerInternalMap$Values:
    2718:2718:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2742:2742:void clear() -> clear
    2737:2737:boolean contains(java.lang.Object) -> contains
    2732:2732:boolean isEmpty() -> isEmpty
    2722:2722:java.util.Iterator iterator() -> iterator
    2727:2727:int size() -> size
    2750:2750:java.lang.Object[] toArray() -> toArray
    2755:2755:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry:
    757:764:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> <init>
    779:781:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    770:770:java.lang.Object getValue() -> getValue
    774:774:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:
    789:789:void <clinit>() -> <clinit>
    786:786:void <init>() -> <init>
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    820:824:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    793:793:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper instance() -> instance
    798:798:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    839:839:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> newEntry
    786:786:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    812:812:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    786:786:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    830:830:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,java.lang.Object) -> setValue
    803:803:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment:
    2113:2120:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2111:2111:java.lang.ref.ReferenceQueue access$300(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment) -> access$300
    2111:2111:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2136:2136:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2146:2146:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2141:2141:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2111:2111:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry:
    849:853:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> <init>
    865:867:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    858:858:java.lang.Object getValue() -> getValue
    884:884:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    877:879:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:
    891:891:void <clinit>() -> <clinit>
    888:888:void <init>() -> <init>
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    921:928:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    895:895:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper instance() -> instance
    900:900:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    943:943:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> newEntry
    888:888:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    913:913:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    888:888:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    934:934:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,java.lang.Object) -> setValue
    905:905:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:
    2153:2160:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2151:2151:java.lang.ref.ReferenceQueue access$400(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$400
    2151:2151:java.lang.ref.ReferenceQueue access$500(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$500
    2151:2151:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2181:2181:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2217:2217:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2211:2212:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2151:2151:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl -> com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl:
    1033:1034:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    1044:1044:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1039:1039:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:
    2636:2638:void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object) -> <init>
    2654:2656:boolean equals(java.lang.Object) -> equals
    2643:2643:java.lang.Object getKey() -> getKey
    2648:2648:java.lang.Object getValue() -> getValue
    2664:2664:int hashCode() -> hashCode
    2669:2670:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    225:225:int capacity(int) -> capacity
    3484:3486:boolean equalsImpl(java.util.Map,java.lang.Object) -> equalsImpl
    1252:1252:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    112:112:java.util.Iterator keyIterator(java.util.Iterator) -> keyIterator
    3560:3560:java.lang.Object keyOrNull(java.util.Map$Entry) -> keyOrNull
    249:249:java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    3412:3414:boolean safeContainsKey(java.util.Map,java.lang.Object) -> safeContainsKey
    3399:3401:java.lang.Object safeGet(java.util.Map,java.lang.Object) -> safeGet
    3425:3427:java.lang.Object safeRemove(java.util.Map,java.lang.Object) -> safeRemove
    3493:3502:java.lang.String toStringImpl(java.util.Map) -> toStringImpl
    108:108:com.google.common.base.Function valueFunction() -> valueFunction
    121:121:java.util.Iterator valueIterator(java.util.Iterator) -> valueIterator
com.google.common.collect.Maps$1 -> com.google.common.collect.Maps$1:
    112:112:void <init>(java.util.Iterator) -> <init>
    112:112:java.lang.Object transform(java.lang.Object) -> transform
    115:115:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$2 -> com.google.common.collect.Maps$2:
    121:121:void <init>(java.util.Iterator) -> <init>
    121:121:java.lang.Object transform(java.lang.Object) -> transform
    124:124:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$DescendingMap -> com.google.common.collect.Maps$DescendingMap:
    3841:3841:void <init>() -> <init>
    3904:3904:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    3909:3909:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    3856:3862:java.util.Comparator comparator() -> comparator
    3970:3970:java.util.Set createEntrySet() -> createEntrySet
    3840:3840:java.lang.Object delegate() -> delegate
    3848:3848:java.util.Map delegate() -> delegate
    3988:3988:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    3944:3944:java.util.NavigableMap descendingMap() -> descendingMap
    3951:3952:java.util.Set entrySet() -> entrySet
    3924:3924:java.util.Map$Entry firstEntry() -> firstEntry
    3874:3874:java.lang.Object firstKey() -> firstKey
    3894:3894:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    3899:3899:java.lang.Object floorKey(java.lang.Object) -> floorKey
    4004:4004:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    4009:4009:java.util.SortedMap headMap(java.lang.Object) -> headMap
    3914:3914:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    3919:3919:java.lang.Object higherKey(java.lang.Object) -> higherKey
    3975:3975:java.util.Set keySet() -> keySet
    3929:3929:java.util.Map$Entry lastEntry() -> lastEntry
    3879:3879:java.lang.Object lastKey() -> lastKey
    3884:3884:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    3889:3889:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    3982:3983:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3934:3934:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3939:3939:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    3869:3869:com.google.common.collect.Ordering reverse(java.util.Comparator) -> reverse
    3994:3994:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3999:3999:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    4014:4014:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    4019:4019:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    4029:4029:java.lang.String toString() -> toString
    4024:4024:java.util.Collection values() -> values
com.google.common.collect.Maps$DescendingMap$1EntrySetImpl -> com.google.common.collect.Maps$DescendingMap$1EntrySetImpl:
    3959:3959:void <init>(com.google.common.collect.Maps$DescendingMap) -> <init>
    3967:3967:java.util.Iterator iterator() -> iterator
    3962:3962:java.util.Map map() -> map
com.google.common.collect.Maps$EntryFunction -> com.google.common.collect.Maps$EntryFunction:
    84:92:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    84:84:void <init>(java.lang.String,int,com.google.common.collect.Maps$1) -> <init>
    84:84:com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String) -> valueOf
    84:84:com.google.common.collect.Maps$EntryFunction[] values() -> values
com.google.common.collect.Maps$EntryFunction$1 -> com.google.common.collect.Maps$EntryFunction$1:
    85:85:void <init>(java.lang.String,int) -> <init>
    85:85:java.lang.Object apply(java.lang.Object) -> apply
    89:89:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntryFunction$2 -> com.google.common.collect.Maps$EntryFunction$2:
    92:92:void <init>(java.lang.String,int) -> <init>
    92:92:java.lang.Object apply(java.lang.Object) -> apply
    96:96:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntrySet -> com.google.common.collect.Maps$EntrySet:
    3774:3774:void <init>() -> <init>
    3784:3784:void clear() -> clear
    3789:3793:boolean contains(java.lang.Object) -> contains
    3800:3800:boolean isEmpty() -> isEmpty
    3805:3807:boolean remove(java.lang.Object) -> remove
    3815:3818:boolean removeAll(java.util.Collection) -> removeAll
    3825:3835:boolean retainAll(java.util.Collection) -> retainAll
    3779:3779:int size() -> size
com.google.common.collect.Maps$IteratorBasedAbstractMap -> com.google.common.collect.Maps$IteratorBasedAbstractMap:
    3367:3367:void <init>() -> <init>
    3390:3390:void clear() -> clear
    3375:3375:java.util.Set entrySet() -> entrySet
com.google.common.collect.Maps$IteratorBasedAbstractMap$1 -> com.google.common.collect.Maps$IteratorBasedAbstractMap$1:
    3375:3375:void <init>(com.google.common.collect.Maps$IteratorBasedAbstractMap) -> <init>
    3383:3383:java.util.Iterator iterator() -> iterator
    3378:3378:java.util.Map map() -> map
com.google.common.collect.Maps$KeySet -> com.google.common.collect.Maps$KeySet:
    3515:3516:void <init>(java.util.Map) -> <init>
    3554:3554:void clear() -> clear
    3540:3540:boolean contains(java.lang.Object) -> contains
    3535:3535:boolean isEmpty() -> isEmpty
    3525:3525:java.util.Iterator iterator() -> iterator
    3520:3520:java.util.Map map() -> map
    3545:3546:boolean remove(java.lang.Object) -> remove
    3530:3530:int size() -> size
com.google.common.collect.Maps$NavigableKeySet -> com.google.common.collect.Maps$NavigableKeySet:
    3612:3612:void <init>(java.util.NavigableMap) -> <init>
    3632:3632:java.lang.Object ceiling(java.lang.Object) -> ceiling
    3657:3657:java.util.Iterator descendingIterator() -> descendingIterator
    3652:3652:java.util.NavigableSet descendingSet() -> descendingSet
    3627:3627:java.lang.Object floor(java.lang.Object) -> floor
    3673:3673:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    3678:3678:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3637:3637:java.lang.Object higher(java.lang.Object) -> higher
    3622:3622:java.lang.Object lower(java.lang.Object) -> lower
    3609:3609:java.util.Map map() -> map
    3609:3609:java.util.SortedMap map() -> map
    3617:3617:java.util.NavigableMap map() -> map
    3642:3642:java.lang.Object pollFirst() -> pollFirst
    3647:3647:java.lang.Object pollLast() -> pollLast
    3663:3663:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    3668:3668:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3683:3683:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    3688:3688:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Maps$SortedKeySet -> com.google.common.collect.Maps$SortedKeySet:
    3570:3570:void <init>(java.util.SortedMap) -> <init>
    3580:3580:java.util.Comparator comparator() -> comparator
    3600:3600:java.lang.Object first() -> first
    3605:3605:java.lang.Object last() -> last
com.google.common.collect.Maps$Values -> com.google.common.collect.Maps$Values:
    3695:3696:void <init>(java.util.Map) -> <init>
    3770:3770:void clear() -> clear
    3765:3765:boolean contains(java.lang.Object) -> contains
    3760:3760:boolean isEmpty() -> isEmpty
    3705:3705:java.util.Iterator iterator() -> iterator
    3700:3700:java.util.Map map() -> map
    3711:3715:boolean remove(java.lang.Object) -> remove
    3726:3734:boolean removeAll(java.util.Collection) -> removeAll
    3741:3749:boolean retainAll(java.util.Collection) -> retainAll
    3755:3755:int size() -> size
com.google.common.collect.Maps$ViewCachingAbstractMap -> com.google.common.collect.Maps$ViewCachingAbstractMap:
    3327:3327:void <init>() -> <init>
    3363:3363:java.util.Collection createValues() -> createValues
    3338:3339:java.util.Set entrySet() -> entrySet
    3358:3359:java.util.Collection values() -> values
com.google.common.collect.MultimapBuilder -> com.google.common.collect.MultimapBuilder:
    64:64:void <init>(com.google.common.collect.MultimapBuilder$1) -> <init>
    70:70:void <init>() -> <init>
    76:76:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys() -> hashKeys
    86:87:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys(int) -> hashKeys
com.google.common.collect.MultimapBuilder$1 -> com.google.common.collect.MultimapBuilder$1:
    87:87:void <init>(int) -> <init>
    90:90:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier -> com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:
    228:229:void <init>(int) -> <init>
    225:225:java.lang.Object get() -> get
    234:234:java.util.Set get() -> get
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:
    276:276:void <init>() -> <init>
    339:339:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues() -> linkedHashSetValues
    349:350:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues(int) -> linkedHashSetValues
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4:
    350:350:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    353:354:com.google.common.collect.SetMultimap build() -> build
com.google.common.collect.MultimapBuilder$SetMultimapBuilder -> com.google.common.collect.MultimapBuilder$SetMultimapBuilder:
    438:438:void <init>() -> <init>
com.google.common.collect.Multimaps -> com.google.common.collect.Multimaps:
    2070:2072:boolean equalsImpl(com.google.common.collect.Multimap,java.lang.Object) -> equalsImpl
    298:298:com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSetMultimap
com.google.common.collect.Multimaps$CustomSetMultimap -> com.google.common.collect.Multimaps$CustomSetMultimap:
    305:306:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    316:316:java.util.Map createAsMap() -> createAsMap
    301:301:java.util.Collection createCollection() -> createCollection
    321:321:java.util.Set createCollection() -> createCollection
    311:311:java.util.Set createKeySet() -> createKeySet
    357:360:void readObject(java.io.ObjectInputStream) -> readObject
    326:331:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    337:342:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    349:351:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Multimaps$Entries -> com.google.common.collect.Multimaps$Entries:
    1667:1667:void <init>() -> <init>
    1695:1695:void clear() -> clear
    1677:1679:boolean contains(java.lang.Object) -> contains
    1686:1688:boolean remove(java.lang.Object) -> remove
    1672:1672:int size() -> size
com.google.common.collect.NaturalOrdering -> com.google.common.collect.NaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    74:74:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    36:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    66:66:java.lang.Object readResolve() -> readResolve
    61:61:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    225:225:java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
    209:209:java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> checkElementsNotNull
    215:215:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> checkElementsNotNull
    194:195:java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> fillArray
    59:59:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    128:134:java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> toArrayImpl
    151:157:java.lang.Object[] toArrayImpl(java.lang.Object[],int,int,java.lang.Object[]) -> toArrayImpl
    174:174:java.lang.Object[] toArrayImpl(java.util.Collection) -> toArrayImpl
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    391:391:void <init>() -> <init>
    182:184:com.google.common.collect.Ordering from(java.util.Comparator) -> from
    162:162:com.google.common.collect.Ordering natural() -> natural
    449:449:com.google.common.collect.Ordering onResultOf(com.google.common.base.Function) -> onResultOf
    405:405:com.google.common.collect.Ordering reverse() -> reverse
    841:843:java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
com.google.common.collect.Ordering$ArbitraryOrdering -> com.google.common.collect.Ordering$ArbitraryOrdering:
    323:327:void <init>() -> <init>
    353:362:int compare(java.lang.Object,java.lang.Object) -> compare
    330:336:java.lang.Integer getUid(java.lang.Object) -> getUid
    381:381:int identityHashCode(java.lang.Object) -> identityHashCode
com.google.common.collect.Platform -> com.google.common.collect.Platform:
    92:92:java.lang.Object[] copy(java.lang.Object[],int,int,java.lang.Object[]) -> copy
    81:86:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    34:34:java.util.Map newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    42:42:java.util.Map newLinkedHashMapWithExpectedSize(int) -> newLinkedHashMapWithExpectedSize
    55:55:java.util.Set newLinkedHashSetWithExpectedSize(int) -> newLinkedHashSetWithExpectedSize
    101:101:com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker) -> tryWeakKeys
com.google.common.collect.Range -> com.google.common.collect.Range:
    298:298:void <clinit>() -> <clinit>
    352:358:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut) -> <init>
    307:307:com.google.common.collect.Range all() -> all
    118:118:boolean apply(java.lang.Object) -> apply
    445:445:boolean apply(java.lang.Comparable) -> apply
    278:278:com.google.common.collect.Range atLeast(java.lang.Comparable) -> atLeast
    243:243:com.google.common.collect.Range atMost(java.lang.Comparable) -> atMost
    712:712:int compareOrThrow(java.lang.Comparable,java.lang.Comparable) -> compareOrThrow
    433:435:boolean contains(java.lang.Comparable) -> contains
    156:156:com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut) -> create
    288:294:com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> downTo
    667:669:boolean equals(java.lang.Object) -> equals
    269:269:com.google.common.collect.Range greaterThan(java.lang.Comparable) -> greaterThan
    364:364:boolean hasLowerBound() -> hasLowerBound
    390:390:boolean hasUpperBound() -> hasUpperBound
    677:677:int hashCode() -> hashCode
    549:558:com.google.common.collect.Range intersection(com.google.common.collect.Range) -> intersection
    528:529:boolean isConnected(com.google.common.collect.Range) -> isConnected
    234:234:com.google.common.collect.Range lessThan(java.lang.Comparable) -> lessThan
    374:374:java.lang.Comparable lowerEndpoint() -> lowerEndpoint
    218:225:com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> range
    703:704:java.lang.Object readResolve() -> readResolve
    686:686:java.lang.String toString() -> toString
    690:694:java.lang.String toString(com.google.common.collect.Cut,com.google.common.collect.Cut) -> toString
    253:259:com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> upTo
    400:400:java.lang.Comparable upperEndpoint() -> upperEndpoint
com.google.common.collect.Range$1 -> com.google.common.collect.Range$1:
    253:253:void <clinit>() -> <clinit>
com.google.common.collect.RangeGwtSerializationDependencies -> com.google.common.collect.RangeGwtSerializationDependencies:
    32:32:void <init>() -> <init>
com.google.common.collect.RegularImmutableList -> com.google.common.collect.RegularImmutableList:
    32:32:void <clinit>() -> <clinit>
    37:39:void <init>(java.lang.Object[],int) -> <init>
    69:70:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    77:78:java.lang.Object get(int) -> get
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    44:44:int size() -> size
com.google.common.collect.RegularImmutableMap -> com.google.common.collect.RegularImmutableMap:
    47:47:void <clinit>() -> <clinit>
    192:195:void <init>(java.lang.Object,java.lang.Object[],int) -> <init>
    74:82:com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[]) -> create
    266:266:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    93:171:java.lang.Object createHashTable(java.lang.Object[],int,int,int) -> createHashTable
    342:344:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    418:418:com.google.common.collect.ImmutableCollection createValues() -> createValues
    181:181:java.lang.IllegalArgumentException duplicateKeyException(java.lang.Object,java.lang.Object,java.lang.Object[],int) -> duplicateKeyException
    207:207:java.lang.Object get(java.lang.Object) -> get
    219:258:java.lang.Object get(java.lang.Object,java.lang.Object[],int,int,java.lang.Object) -> get
    200:200:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet -> com.google.common.collect.RegularImmutableMap$EntrySet:
    275:279:void <init>(com.google.common.collect.ImmutableMap,java.lang.Object[],int,int) -> <init>
    269:269:int access$000(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$000
    269:269:java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$100
    269:269:int access$200(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$200
    319:323:boolean contains(java.lang.Object) -> contains
    289:289:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    294:294:com.google.common.collect.ImmutableList createAsList() -> createAsList
    269:269:java.util.Iterator iterator() -> iterator
    284:284:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    335:335:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet$1 -> com.google.common.collect.RegularImmutableMap$EntrySet$1:
    294:294:void <init>(com.google.common.collect.RegularImmutableMap$EntrySet) -> <init>
    294:294:java.lang.Object get(int) -> get
    297:302:java.util.Map$Entry get(int) -> get
    307:307:int size() -> size
com.google.common.collect.RegularImmutableMap$KeySet -> com.google.common.collect.RegularImmutableMap$KeySet:
    379:381:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList) -> <init>
    396:396:com.google.common.collect.ImmutableList asList() -> asList
    401:401:boolean contains(java.lang.Object) -> contains
    391:391:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    375:375:java.util.Iterator iterator() -> iterator
    386:386:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    411:411:int size() -> size
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList -> com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList:
    352:355:void <init>(java.lang.Object[],int,int) -> <init>
    360:361:java.lang.Object get(int) -> get
    371:371:int size() -> size
com.google.common.collect.RegularImmutableSet -> com.google.common.collect.RegularImmutableSet:
    31:31:void <clinit>() -> <clinit>
    42:47:void <init>(java.lang.Object[],int,java.lang.Object[],int,int) -> <init>
    52:61:boolean contains(java.lang.Object) -> contains
    94:95:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    100:100:com.google.common.collect.ImmutableList createAsList() -> createAsList
    110:110:int hashCode() -> hashCode
    79:79:java.lang.Object[] internalArray() -> internalArray
    89:89:int internalArrayEnd() -> internalArrayEnd
    28:28:java.util.Iterator iterator() -> iterator
    74:74:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    69:69:int size() -> size
com.google.common.collect.RegularImmutableSortedSet -> com.google.common.collect.RegularImmutableSortedSet:
    42:43:void <clinit>() -> <clinit>
    48:49:void <init>(com.google.common.collect.ImmutableList,java.util.Comparator) -> <init>
    304:304:com.google.common.collect.ImmutableList asList() -> asList
    225:226:java.lang.Object ceiling(java.lang.Object) -> ceiling
    86:86:boolean contains(java.lang.Object) -> contains
    98:133:boolean containsAll(java.util.Collection) -> containsAll
    155:155:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    309:312:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    39:39:java.util.Iterator descendingIterator() -> descendingIterator
    75:75:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    163:192:boolean equals(java.lang.Object) -> equals
    197:200:java.lang.Object first() -> first
    219:220:java.lang.Object floor(java.lang.Object) -> floor
    278:284:com.google.common.collect.RegularImmutableSortedSet getSubSet(int,int) -> getSubSet
    241:241:int headIndex(java.lang.Object,boolean) -> headIndex
    237:237:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    231:232:java.lang.Object higher(java.lang.Object) -> higher
    295:295:int indexOf(java.lang.Object) -> indexOf
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    59:59:int internalArrayStart() -> internalArrayStart
    150:150:boolean isPartialView() -> isPartialView
    39:39:java.util.Iterator iterator() -> iterator
    69:69:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    205:208:java.lang.Object last() -> last
    213:214:java.lang.Object lower(java.lang.Object) -> lower
    80:80:int size() -> size
    252:252:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    261:261:int tailIndex(java.lang.Object,boolean) -> tailIndex
    257:257:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    145:145:int unsafeBinarySearch(java.lang.Object) -> unsafeBinarySearch
    274:274:java.util.Comparator unsafeComparator() -> unsafeComparator
com.google.common.collect.ReverseNaturalOrdering -> com.google.common.collect.ReverseNaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    98:98:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    33:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    90:90:java.lang.Object readResolve() -> readResolve
    43:43:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.ReverseOrdering -> com.google.common.collect.ReverseOrdering:
    31:32:void <init>(com.google.common.collect.Ordering) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    98:100:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    43:43:com.google.common.collect.Ordering reverse() -> reverse
    107:107:java.lang.String toString() -> toString
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    1668:1672:boolean equalsImpl(java.util.Set,java.lang.Object) -> equalsImpl
    1654:1655:int hashCodeImpl(java.util.Set) -> hashCodeImpl
    255:255:java.util.Set newConcurrentHashSet() -> newConcurrentHashSet
    164:164:java.util.HashSet newHashSet() -> newHashSet
    241:241:java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    1835:1836:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> removeAllImpl
    1842:1856:boolean removeAllImpl(java.util.Set,java.util.Collection) -> removeAllImpl
    1694:1697:java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet) -> unmodifiableNavigableSet
com.google.common.collect.Sets$ImprovedAbstractSet -> com.google.common.collect.Sets$ImprovedAbstractSet:
    73:73:void <init>() -> <init>
    76:76:boolean removeAll(java.util.Collection) -> removeAll
    81:81:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Sets$UnmodifiableNavigableSet -> com.google.common.collect.Sets$UnmodifiableNavigableSet:
    1705:1707:void <init>(java.util.NavigableSet) -> <init>
    1727:1727:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1700:1700:java.lang.Object delegate() -> delegate
    1700:1700:java.util.Collection delegate() -> delegate
    1700:1700:java.util.Set delegate() -> delegate
    1712:1712:java.util.SortedSet delegate() -> delegate
    1759:1759:java.util.Iterator descendingIterator() -> descendingIterator
    1749:1752:java.util.NavigableSet descendingSet() -> descendingSet
    1722:1722:java.lang.Object floor(java.lang.Object) -> floor
    1771:1771:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1732:1732:java.lang.Object higher(java.lang.Object) -> higher
    1717:1717:java.lang.Object lower(java.lang.Object) -> lower
    1737:1737:java.lang.Object pollFirst() -> pollFirst
    1742:1742:java.lang.Object pollLast() -> pollLast
    1765:1766:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1776:1776:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.SingletonImmutableSet -> com.google.common.collect.SingletonImmutableSet:
    43:44:void <init>(java.lang.Object) -> <init>
    47:50:void <init>(java.lang.Object,int) -> <init>
    60:60:boolean contains(java.lang.Object) -> contains
    80:80:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    70:70:com.google.common.collect.ImmutableList createAsList() -> createAsList
    87:89:int hashCode() -> hashCode
    96:96:boolean isHashCodeFast() -> isHashCodeFast
    29:29:java.util.Iterator iterator() -> iterator
    65:65:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    101:101:java.lang.String toString() -> toString
com.google.common.collect.SortedIterables -> com.google.common.collect.SortedIterables:
    53:55:java.util.Comparator comparator(java.util.SortedSet) -> comparator
    37:47:boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> hasSameComparator
com.google.common.collect.Synchronized -> com.google.common.collect.Synchronized:
    58:58:java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object) -> access$100
    58:58:java.util.Collection access$500(java.util.Collection,java.lang.Object) -> access$500
    58:58:java.util.Map$Entry access$700(java.util.Map$Entry,java.lang.Object) -> access$700
    101:101:java.util.Collection collection(java.util.Collection,java.lang.Object) -> collection
    960:960:java.util.Map map(java.util.Map,java.lang.Object) -> map
    1404:1404:java.util.NavigableMap navigableMap(java.util.NavigableMap,java.lang.Object) -> navigableMap
    1388:1388:java.util.NavigableSet navigableSet(java.util.NavigableSet,java.lang.Object) -> navigableSet
    1592:1592:java.util.Map$Entry nullableSynchronizedEntry(java.util.Map$Entry,java.lang.Object) -> nullableSynchronizedEntry
    210:210:java.util.Set set(java.util.Set,java.lang.Object) -> set
    1092:1092:java.util.SortedMap sortedMap(java.util.SortedMap,java.lang.Object) -> sortedMap
    245:245:java.util.SortedSet sortedSet(java.util.SortedSet,java.lang.Object) -> sortedSet
com.google.common.collect.Synchronized$SynchronizedBiMap -> com.google.common.collect.Synchronized$SynchronizedBiMap:
    1159:1159:java.util.Map delegate() -> delegate
    1173:1173:com.google.common.collect.BiMap delegate() -> delegate
    1159:1159:java.util.Collection values() -> values
    1178:1183:java.util.Set values() -> values
com.google.common.collect.Synchronized$SynchronizedCollection -> com.google.common.collect.Synchronized$SynchronizedCollection:
    105:105:void <init>(java.util.Collection,java.lang.Object,com.google.common.collect.Synchronized$1) -> <init>
    107:107:void <init>(java.util.Collection,java.lang.Object) -> <init>
    118:120:boolean add(java.lang.Object) -> add
    125:127:boolean addAll(java.util.Collection) -> addAll
    132:134:void clear() -> clear
    139:141:boolean contains(java.lang.Object) -> contains
    146:148:boolean containsAll(java.util.Collection) -> containsAll
    113:113:java.util.Collection delegate() -> delegate
    153:155:boolean isEmpty() -> isEmpty
    160:160:java.util.Iterator iterator() -> iterator
    165:167:boolean remove(java.lang.Object) -> remove
    172:174:boolean removeAll(java.util.Collection) -> removeAll
    179:181:boolean retainAll(java.util.Collection) -> retainAll
    186:188:int size() -> size
    193:195:java.lang.Object[] toArray() -> toArray
    200:202:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Synchronized$SynchronizedEntry -> com.google.common.collect.Synchronized$SynchronizedEntry:
    1599:1599:void <init>(java.util.Map$Entry,java.lang.Object) -> <init>
    1605:1605:java.util.Map$Entry delegate() -> delegate
    1610:1612:boolean equals(java.lang.Object) -> equals
    1624:1626:java.lang.Object getKey() -> getKey
    1631:1633:java.lang.Object getValue() -> getValue
    1617:1619:int hashCode() -> hashCode
    1638:1640:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Synchronized$SynchronizedMap -> com.google.common.collect.Synchronized$SynchronizedMap:
    969:969:void <init>(java.util.Map,java.lang.Object) -> <init>
    980:982:void clear() -> clear
    987:989:boolean containsKey(java.lang.Object) -> containsKey
    994:996:boolean containsValue(java.lang.Object) -> containsValue
    975:975:java.util.Map delegate() -> delegate
    1001:1006:java.util.Set entrySet() -> entrySet
    1076:1078:boolean equals(java.lang.Object) -> equals
    1011:1013:java.lang.Object get(java.lang.Object) -> get
    1083:1085:int hashCode() -> hashCode
    1018:1020:boolean isEmpty() -> isEmpty
    1025:1030:java.util.Set keySet() -> keySet
    1035:1037:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    1042:1044:void putAll(java.util.Map) -> putAll
    1049:1051:java.lang.Object remove(java.lang.Object) -> remove
    1056:1058:int size() -> size
    1063:1068:java.util.Collection values() -> values
com.google.common.collect.Synchronized$SynchronizedNavigableMap -> com.google.common.collect.Synchronized$SynchronizedNavigableMap:
    1413:1413:void <init>(java.util.NavigableMap,java.lang.Object) -> <init>
    1423:1425:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1430:1432:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1407:1407:java.util.Map delegate() -> delegate
    1407:1407:java.util.SortedMap delegate() -> delegate
    1418:1418:java.util.NavigableMap delegate() -> delegate
    1439:1444:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1451:1456:java.util.NavigableMap descendingMap() -> descendingMap
    1461:1463:java.util.Map$Entry firstEntry() -> firstEntry
    1468:1470:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1475:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1482:1484:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1489:1489:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1494:1496:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1501:1503:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1529:1529:java.util.Set keySet() -> keySet
    1508:1510:java.util.Map$Entry lastEntry() -> lastEntry
    1515:1517:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1522:1524:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1536:1541:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1546:1548:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1553:1555:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1561:1563:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1568:1568:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1573:1575:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    1580:1580:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedNavigableSet -> com.google.common.collect.Synchronized$SynchronizedNavigableSet:
    1275:1275:void <init>(java.util.NavigableSet,java.lang.Object) -> <init>
    1285:1287:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1270:1270:java.util.Collection delegate() -> delegate
    1270:1270:java.util.Set delegate() -> delegate
    1270:1270:java.util.SortedSet delegate() -> delegate
    1280:1280:java.util.NavigableSet delegate() -> delegate
    1292:1292:java.util.Iterator descendingIterator() -> descendingIterator
    1299:1306:java.util.NavigableSet descendingSet() -> descendingSet
    1311:1313:java.lang.Object floor(java.lang.Object) -> floor
    1318:1320:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1325:1325:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1330:1332:java.lang.Object higher(java.lang.Object) -> higher
    1337:1339:java.lang.Object lower(java.lang.Object) -> lower
    1344:1346:java.lang.Object pollFirst() -> pollFirst
    1351:1353:java.lang.Object pollLast() -> pollLast
    1359:1362:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1367:1367:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1372:1374:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1379:1379:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Synchronized$SynchronizedObject -> com.google.common.collect.Synchronized$SynchronizedObject:
    65:67:void <init>(java.lang.Object,java.lang.Object) -> <init>
    71:71:java.lang.Object delegate() -> delegate
    78:80:java.lang.String toString() -> toString
    90:92:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Synchronized$SynchronizedSet -> com.google.common.collect.Synchronized$SynchronizedSet:
    216:216:void <init>(java.util.Set,java.lang.Object) -> <init>
    213:213:java.util.Collection delegate() -> delegate
    221:221:java.util.Set delegate() -> delegate
    229:231:boolean equals(java.lang.Object) -> equals
    236:238:int hashCode() -> hashCode
com.google.common.collect.Synchronized$SynchronizedSortedMap -> com.google.common.collect.Synchronized$SynchronizedSortedMap:
    1099:1099:void <init>(java.util.SortedMap,java.lang.Object) -> <init>
    1109:1111:java.util.Comparator comparator() -> comparator
    1095:1095:java.util.Map delegate() -> delegate
    1104:1104:java.util.SortedMap delegate() -> delegate
    1116:1118:java.lang.Object firstKey() -> firstKey
    1123:1125:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1130:1132:java.lang.Object lastKey() -> lastKey
    1137:1139:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1144:1146:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedSortedSet -> com.google.common.collect.Synchronized$SynchronizedSortedSet:
    250:250:void <init>(java.util.SortedSet,java.lang.Object) -> <init>
    260:262:java.util.Comparator comparator() -> comparator
    248:248:java.util.Collection delegate() -> delegate
    248:248:java.util.Set delegate() -> delegate
    255:255:java.util.SortedSet delegate() -> delegate
    288:290:java.lang.Object first() -> first
    274:276:java.util.SortedSet headSet(java.lang.Object) -> headSet
    295:297:java.lang.Object last() -> last
    267:269:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    281:283:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.TransformedIterator -> com.google.common.collect.TransformedIterator:
    34:35:void <init>(java.util.Iterator) -> <init>
    42:42:boolean hasNext() -> hasNext
    47:47:java.lang.Object next() -> next
    52:52:void remove() -> remove
com.google.common.collect.TreeRangeSet$RangesByUpperBound -> com.google.common.collect.TreeRangeSet$RangesByUpperBound:
    297:299:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    281:281:com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound) -> access$000
    331:331:java.util.Comparator comparator() -> comparator
    336:336:boolean containsKey(java.lang.Object) -> containsKey
    402:416:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    366:383:java.util.Iterator entryIterator() -> entryIterator
    280:280:java.lang.Object get(java.lang.Object) -> get
    341:350:com.google.common.collect.Range get(java.lang.Object) -> get
    280:280:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    321:321:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    440:442:boolean isEmpty() -> isEmpty
    432:435:int size() -> size
    280:280:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    303:306:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    313:316:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    280:280:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    326:326:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$1:
    383:383:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,java.util.Iterator) -> <init>
    383:383:java.lang.Object computeNext() -> computeNext
    386:393:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$2:
    416:416:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,com.google.common.collect.PeekingIterator) -> <init>
    416:416:java.lang.Object computeNext() -> computeNext
    419:425:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    35:35:void <init>() -> <init>
    46:46:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    32:32:void <init>() -> <init>
    43:43:void add(java.lang.Object) -> add
    55:55:void set(java.lang.Object) -> set
com.google.common.eventbus.Subscriber -> com.google.common.eventbus.Subscriber:
    112:117:boolean equals(java.lang.Object) -> equals
    107:107:int hashCode() -> hashCode
    87:96:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.eventbus.Subscriber$SynchronizedSubscriber -> com.google.common.eventbus.Subscriber$SynchronizedSubscriber:
    143:145:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.io.Closer$LoggingSuppressor -> com.google.common.io.Closer$LoggingSuppressor:
    244:244:void <clinit>() -> <clinit>
    242:242:void <init>() -> <init>
com.google.common.io.Closer$SuppressingSuppressor -> com.google.common.io.Closer$SuppressingSuppressor:
    261:267:void <clinit>() -> <clinit>
    259:259:void <init>() -> <init>
    271:271:java.lang.reflect.Method addSuppressedMethodOrNull() -> addSuppressedMethodOrNull
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    271:272:int constrainToRange(int,int,int) -> constrainToRange
com.google.common.primitives.UnsignedBytes -> com.google.common.primitives.UnsignedBytes:
    120:120:int compare(byte,byte) -> compare
    276:276:java.util.Comparator lexicographicalComparatorJavaImpl() -> lexicographicalComparatorJavaImpl
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder:
    288:291:void <clinit>() -> <clinit>
    287:287:void <init>() -> <init>
    438:445:java.util.Comparator getBestComparator() -> getBestComparator
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator:
    411:412:void <clinit>() -> <clinit>
    411:411:void <init>(java.lang.String,int) -> <init>
    411:411:int compare(java.lang.Object,java.lang.Object) -> compare
    416:423:int compare(byte[],byte[]) -> compare
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator valueOf(java.lang.String) -> valueOf
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator:
    293:327:void <clinit>() -> <clinit>
    294:294:void <init>(java.lang.String,int) -> <init>
    293:293:int compare(java.lang.Object,java.lang.Object) -> compare
    367:402:int compare(byte[],byte[]) -> compare
    339:360:sun.misc.Unsafe getUnsafe() -> getUnsafe
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator valueOf(java.lang.String) -> valueOf
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1 -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1:
    345:345:void <init>() -> <init>
    345:345:java.lang.Object run() -> run
    348:356:sun.misc.Unsafe run() -> run
com.google.common.primitives.UnsignedLongs -> com.google.common.primitives.UnsignedLongs:
    79:79:int compare(long,long) -> compare
com.google.common.reflect.ClassPath -> com.google.common.reflect.ClassPath:
    79:91:void <clinit>() -> <clinit>
    78:78:java.util.logging.Logger access$100() -> access$100
    78:78:com.google.common.base.Splitter access$200() -> access$200
    585:586:java.lang.String getClassName(java.lang.String) -> getClassName
    592:596:java.io.File toFile(java.net.URL) -> toFile
com.google.common.reflect.ClassPath$1 -> com.google.common.reflect.ClassPath$1:
    82:82:void <init>() -> <init>
    82:82:boolean apply(java.lang.Object) -> apply
    85:85:boolean apply(com.google.common.reflect.ClassPath$ClassInfo) -> apply
com.google.common.reflect.ClassPath$ClassInfo -> com.google.common.reflect.ClassPath$ClassInfo:
    280:281:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    276:276:java.lang.String access$000(com.google.common.reflect.ClassPath$ClassInfo) -> access$000
    344:344:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$DefaultScanner -> com.google.common.reflect.ClassPath$DefaultScanner:
    569:571:void <init>() -> <init>
    579:579:void scanResource(com.google.common.reflect.ClassPath$ResourceInfo) -> scanResource
com.google.common.reflect.ClassPath$ResourceInfo -> com.google.common.reflect.ClassPath$ResourceInfo:
    194:197:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    256:258:boolean equals(java.lang.Object) -> equals
    251:251:int hashCode() -> hashCode
    187:190:com.google.common.reflect.ClassPath$ResourceInfo of(java.io.File,java.lang.String,java.lang.ClassLoader) -> of
    266:266:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$Scanner -> com.google.common.reflect.ClassPath$Scanner:
    353:357:void <init>() -> <init>
    470:476:com.google.common.collect.ImmutableList getClassLoaderUrls(java.lang.ClassLoader) -> getClassLoaderUrls
    452:466:com.google.common.collect.ImmutableMap getClassPathEntries(java.lang.ClassLoader) -> getClassPathEntries
    508:508:java.net.URL getClassPathEntry(java.io.File,java.lang.String) -> getClassPathEntry
    427:447:com.google.common.collect.ImmutableSet getClassPathFromManifest(java.io.File,java.util.jar.Manifest) -> getClassPathFromManifest
    485:497:com.google.common.collect.ImmutableList parseJavaClassPath() -> parseJavaClassPath
    367:368:void scan(java.io.File,java.lang.ClassLoader) -> scan
    524:526:void scanDirectory(java.lang.ClassLoader,java.io.File) -> scanDirectory
    544:561:void scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,java.util.Set) -> scanDirectory
    380:391:void scanFrom(java.io.File,java.lang.ClassLoader) -> scanFrom
    398:413:void scanJar(java.io.File,java.lang.ClassLoader) -> scanJar
    513:519:void scanJarFile(java.lang.ClassLoader,java.util.jar.JarFile) -> scanJarFile
com.google.common.util.concurrent.AbstractFuture -> com.google.common.util.concurrent.AbstractFuture:
    80:281:void <clinit>() -> <clinit>
    374:374:void <init>() -> <init>
    70:70:com.google.common.util.concurrent.AbstractFuture$AtomicHelper access$200() -> access$200
    70:70:boolean access$300() -> access$300
    70:70:java.lang.Object access$400(com.google.common.util.concurrent.AbstractFuture) -> access$400
    70:70:java.lang.Object access$402(com.google.common.util.concurrent.AbstractFuture,java.lang.Object) -> access$402
    70:70:java.lang.Object access$500(com.google.common.util.concurrent.ListenableFuture) -> access$500
    70:70:void access$600(com.google.common.util.concurrent.AbstractFuture) -> access$600
    70:70:com.google.common.util.concurrent.AbstractFuture$Waiter access$800(com.google.common.util.concurrent.AbstractFuture) -> access$800
    70:70:com.google.common.util.concurrent.AbstractFuture$Waiter access$802(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter) -> access$802
    70:70:com.google.common.util.concurrent.AbstractFuture$Listener access$900(com.google.common.util.concurrent.AbstractFuture) -> access$900
    70:70:com.google.common.util.concurrent.AbstractFuture$Listener access$902(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener) -> access$902
    1159:1168:void addDoneString(java.lang.StringBuilder) -> addDoneString
    698:724:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    1125:1153:void addPendingString(java.lang.StringBuilder) -> addPendingString
    1179:1186:void appendResultObject(java.lang.StringBuilder,java.lang.Object) -> appendResultObject
    1198:1205:void appendUserObject(java.lang.StringBuilder,java.lang.Object) -> appendUserObject
    607:656:boolean cancel(boolean) -> cancel
    1427:1428:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> cancellationExceptionWithCause
    1072:1078:com.google.common.util.concurrent.AbstractFuture$Listener clearListeners(com.google.common.util.concurrent.AbstractFuture$Listener) -> clearListeners
    953:983:void complete(com.google.common.util.concurrent.AbstractFuture) -> complete
    1215:1220:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
    414:508:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    522:556:java.lang.Object get() -> get
    563:567:java.lang.Object getDoneValue(java.lang.Object) -> getDoneValue
    858:923:java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture) -> getFutureValue
    936:945:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    584:585:boolean isCancelled() -> isCancelled
    578:579:boolean isDone() -> isDone
    1043:1044:void maybePropagateCancellationTo(java.util.concurrent.Future) -> maybePropagateCancellationTo
    1114:1116:java.lang.String pendingToString() -> pendingToString
    1052:1055:void releaseWaiters() -> releaseWaiters
    238:256:void removeWaiter(com.google.common.util.concurrent.AbstractFuture$Waiter) -> removeWaiter
    744:746:boolean set(java.lang.Object) -> set
    769:771:boolean setException(java.lang.Throwable) -> setException
    808:846:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
    1088:1102:java.lang.String toString() -> toString
    1029:1032:java.lang.Throwable tryInternalFastPathGetFailure() -> tryInternalFastPathGetFailure
    687:688:boolean wasInterrupted() -> wasInterrupted
com.google.common.util.concurrent.AbstractFuture$AtomicHelper -> com.google.common.util.concurrent.AbstractFuture$AtomicHelper:
    1227:1227:void <init>() -> <init>
    1227:1227:void <init>(com.google.common.util.concurrent.AbstractFuture$1) -> <init>
com.google.common.util.concurrent.AbstractFuture$Cancellation -> com.google.common.util.concurrent.AbstractFuture$Cancellation:
    307:312:void <clinit>() -> <clinit>
    319:321:void <init>(boolean,java.lang.Throwable) -> <init>
com.google.common.util.concurrent.AbstractFuture$Failure -> com.google.common.util.concurrent.AbstractFuture$Failure:
    285:285:void <clinit>() -> <clinit>
    295:296:void <init>(java.lang.Throwable) -> <init>
com.google.common.util.concurrent.AbstractFuture$Failure$1 -> com.google.common.util.concurrent.AbstractFuture$Failure$1:
    287:287:void <init>(java.lang.String) -> <init>
    290:290:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.common.util.concurrent.AbstractFuture$Listener -> com.google.common.util.concurrent.AbstractFuture$Listener:
    267:267:void <clinit>() -> <clinit>
    274:276:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper -> com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper:
    1340:1345:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    1365:1365:boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    1370:1370:boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    1360:1360:boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    1355:1355:void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    1350:1350:void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
com.google.common.util.concurrent.AbstractFuture$SetFuture -> com.google.common.util.concurrent.AbstractFuture$SetFuture:
    330:332:void <init>(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.ListenableFuture) -> <init>
    337:343:void run() -> run
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper -> com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper:
    1380:1380:void <init>() -> <init>
    1380:1380:void <init>(com.google.common.util.concurrent.AbstractFuture$1) -> <init>
    1404:1410:boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    1415:1421:boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    1393:1399:boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    1388:1388:void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    1383:1383:void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
com.google.common.util.concurrent.AbstractFuture$TrustedFuture -> com.google.common.util.concurrent.AbstractFuture$TrustedFuture:
    100:100:void <init>() -> <init>
    126:126:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    132:132:boolean cancel(boolean) -> cancel
    104:104:java.lang.Object get() -> get
    111:111:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    121:121:boolean isCancelled() -> isCancelled
    116:116:boolean isDone() -> isDone
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper -> com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper:
    1261:1294:void <clinit>() -> <clinit>
    1250:1250:void <init>() -> <init>
    1250:1250:void <init>(com.google.common.util.concurrent.AbstractFuture$1) -> <init>
    1317:1317:boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener) -> casListeners
    1323:1323:boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object) -> casValue
    1311:1311:boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> casWaiters
    1305:1305:void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter) -> putNext
    1300:1300:void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread) -> putThread
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1 -> com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1:
    1266:1266:void <init>() -> <init>
    1266:1266:java.lang.Object run() -> run
    1269:1277:sun.misc.Unsafe run() -> run
com.google.common.util.concurrent.AbstractFuture$Waiter -> com.google.common.util.concurrent.AbstractFuture$Waiter:
    192:192:void <clinit>() -> <clinit>
    201:201:void <init>(boolean) -> <init>
    203:205:void <init>() -> <init>
    211:211:void setNext(com.google.common.util.concurrent.AbstractFuture$Waiter) -> setNext
    218:221:void unpark() -> unpark
com.google.common.util.concurrent.AbstractTransformFuture -> com.google.common.util.concurrent.AbstractTransformFuture:
    58:60:void <init>(com.google.common.util.concurrent.ListenableFuture,java.lang.Object) -> <init>
    177:179:void afterDone() -> afterDone
    37:39:com.google.common.util.concurrent.ListenableFuture create(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> create
    184:194:java.lang.String pendingToString() -> pendingToString
    65:163:void run() -> run
com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture -> com.google.common.util.concurrent.AbstractTransformFuture$AsyncTransformFuture:
    208:208:void <init>(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction) -> <init>
    203:203:java.lang.Object doTransform(java.lang.Object,java.lang.Object) -> doTransform
    214:215:com.google.common.util.concurrent.ListenableFuture doTransform(com.google.common.util.concurrent.AsyncFunction,java.lang.Object) -> doTransform
    203:203:void setResult(java.lang.Object) -> setResult
    225:225:void setResult(com.google.common.util.concurrent.ListenableFuture) -> setResult
com.google.common.util.concurrent.DirectExecutor -> com.google.common.util.concurrent.DirectExecutor:
    24:26:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    30:30:void execute(java.lang.Runnable) -> execute
    24:24:com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String) -> valueOf
    24:24:com.google.common.util.concurrent.DirectExecutor[] values() -> values
com.google.common.util.concurrent.ExecutionError -> com.google.common.util.concurrent.ExecutionError:
    33:33:void <init>() -> <init>
    37:37:void <init>(java.lang.String) -> <init>
    47:47:void <init>(java.lang.Error) -> <init>
com.google.common.util.concurrent.FluentFuture -> com.google.common.util.concurrent.FluentFuture:
    118:118:void <init>() -> <init>
com.google.common.util.concurrent.FluentFuture$TrustedFuture -> com.google.common.util.concurrent.FluentFuture$TrustedFuture:
    81:81:void <init>() -> <init>
    108:108:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    114:114:boolean cancel(boolean) -> cancel
    86:86:java.lang.Object get() -> get
    93:93:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    103:103:boolean isCancelled() -> isCancelled
    98:98:boolean isDone() -> isDone
com.google.common.util.concurrent.ForwardingCondition -> com.google.common.util.concurrent.ForwardingCondition:
    22:22:void <init>() -> <init>
    27:27:void await() -> await
    32:32:boolean await(long,java.util.concurrent.TimeUnit) -> await
    42:42:long awaitNanos(long) -> awaitNanos
    37:37:void awaitUninterruptibly() -> awaitUninterruptibly
    47:47:boolean awaitUntil(java.util.Date) -> awaitUntil
    52:52:void signal() -> signal
    57:57:void signalAll() -> signalAll
com.google.common.util.concurrent.ForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture:
    40:40:void <init>() -> <init>
    62:62:java.lang.Object get() -> get
    68:68:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    52:52:boolean isCancelled() -> isCancelled
    57:57:boolean isDone() -> isDone
com.google.common.util.concurrent.ForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture:
    38:38:void <init>() -> <init>
    45:45:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture:
    59:60:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    55:55:java.lang.Object delegate() -> delegate
    55:55:java.util.concurrent.Future delegate() -> delegate
    65:65:com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
com.google.common.util.concurrent.ForwardingLock -> com.google.common.util.concurrent.ForwardingLock:
    22:22:void <init>() -> <init>
    27:27:void lock() -> lock
    32:32:void lockInterruptibly() -> lockInterruptibly
    37:37:boolean tryLock() -> tryLock
    42:42:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    47:47:void unlock() -> unlock
com.google.common.util.concurrent.Futures -> com.google.common.util.concurrent.Futures:
    1013:1014:void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor) -> addCallback
    1089:1090:java.lang.Object getDone(java.util.concurrent.Future) -> getDone
    132:135:com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object) -> immediateFuture
    413:413:com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> transformAsync
com.google.common.util.concurrent.Futures$CallbackListener -> com.google.common.util.concurrent.Futures$CallbackListener:
    1022:1024:void <init>(java.util.concurrent.Future,com.google.common.util.concurrent.FutureCallback) -> <init>
    1029:1047:void run() -> run
    1052:1052:java.lang.String toString() -> toString
com.google.common.util.concurrent.FuturesGetChecked -> com.google.common.util.concurrent.FuturesGetChecked:
    249:257:void <clinit>() -> <clinit>
    290:295:void checkExceptionClassValidity(java.lang.Class) -> checkExceptionClassValidity
    101:101:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator classValueValidator() -> classValueValidator
    53:61:java.lang.Object getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator,java.util.concurrent.Future,java.lang.Class) -> getChecked
    216:216:boolean hasConstructorUsableByGetChecked(java.lang.Class) -> hasConstructorUsableByGetChecked
    285:285:boolean isCheckedException(java.lang.Class) -> isCheckedException
    261:274:java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable) -> newFromConstructor
    226:236:java.lang.Exception newWithCause(java.lang.Class,java.lang.Throwable) -> newWithCause
    245:245:java.util.List preferringStrings(java.util.List) -> preferringStrings
    95:95:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator weakSetValidator() -> weakSetValidator
    199:205:void wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class) -> wrapAndThrowExceptionOrError
com.google.common.util.concurrent.FuturesGetChecked$1 -> com.google.common.util.concurrent.FuturesGetChecked$1:
    251:251:void <init>() -> <init>
    251:251:java.lang.Object apply(java.lang.Object) -> apply
    254:254:java.lang.Boolean apply(java.lang.reflect.Constructor) -> apply
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder:
    112:115:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    188:191:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator getBestValidator() -> getBestValidator
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator:
    117:126:void <clinit>() -> <clinit>
    119:119:void <init>(java.lang.String,int) -> <init>
    137:137:void validateClass(java.lang.Class) -> validateClass
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator valueOf(java.lang.String) -> valueOf
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator[] values() -> values
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1 -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1:
    127:127:void <init>() -> <init>
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator:
    141:152:void <clinit>() -> <clinit>
    141:141:void <init>(java.lang.String,int) -> <init>
    157:178:void validateClass(java.lang.Class) -> validateClass
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator valueOf(java.lang.String) -> valueOf
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator[] values() -> values
com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization -> com.google.common.util.concurrent.GwtFluentFutureCatchingSpecialization:
    25:25:void <init>() -> <init>
com.google.common.util.concurrent.ImmediateFuture -> com.google.common.util.concurrent.ImmediateFuture:
    32:34:void <clinit>() -> <clinit>
    38:39:void <init>(java.lang.Object) -> <init>
    44:51:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    66:66:java.lang.Object get() -> get
    71:72:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    88:88:java.lang.String toString() -> toString
com.google.common.util.concurrent.MoreExecutors -> com.google.common.util.concurrent.MoreExecutors:
    418:418:java.util.concurrent.Executor directExecutor() -> directExecutor
    995:1001:java.util.concurrent.Executor rejectionPropagatingExecutor(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture) -> rejectionPropagatingExecutor
com.google.common.util.concurrent.MoreExecutors$5 -> com.google.common.util.concurrent.MoreExecutors$5:
    1001:1001:void <init>(java.util.concurrent.Executor,com.google.common.util.concurrent.AbstractFuture) -> <init>
    1005:1007:void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.MoreExecutors$Application -> com.google.common.util.concurrent.MoreExecutors$Application:
    170:170:void <init>() -> <init>
    224:224:void addShutdownHook(java.lang.Thread) -> addShutdownHook
com.google.common.util.concurrent.OverflowAvoidingLockSupport -> com.google.common.util.concurrent.OverflowAvoidingLockSupport:
    35:35:void parkNanos(java.lang.Object,long) -> parkNanos
com.google.common.util.concurrent.SettableFuture -> com.google.common.util.concurrent.SettableFuture:
    62:62:void <init>() -> <init>
    41:41:com.google.common.util.concurrent.SettableFuture create() -> create
    47:47:boolean set(java.lang.Object) -> set
    53:53:boolean setException(java.lang.Throwable) -> setException
com.google.common.util.concurrent.Striped -> com.google.common.util.concurrent.Striped:
    300:308:void <clinit>() -> <clinit>
    93:93:void <init>() -> <init>
com.google.common.util.concurrent.Striped$5 -> com.google.common.util.concurrent.Striped$5:
    301:301:void <init>() -> <init>
    301:301:java.lang.Object get() -> get
    304:304:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$6 -> com.google.common.util.concurrent.Striped$6:
    309:309:void <init>() -> <init>
    309:309:java.lang.Object get() -> get
    312:312:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$WeakSafeCondition -> com.google.common.util.concurrent.Striped$WeakSafeCondition:
    369:371:void <init>(java.util.concurrent.locks.Condition,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    376:376:java.util.concurrent.locks.Condition delegate() -> delegate
com.google.common.util.concurrent.Striped$WeakSafeLock -> com.google.common.util.concurrent.Striped$WeakSafeLock:
    346:348:void <init>(java.util.concurrent.locks.Lock,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    353:353:java.util.concurrent.locks.Lock delegate() -> delegate
    358:358:java.util.concurrent.locks.Condition newCondition() -> newCondition
com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock -> com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock:
    324:325:void <init>() -> <init>
    330:330:java.util.concurrent.locks.Lock readLock() -> readLock
    335:335:java.util.concurrent.locks.Lock writeLock() -> writeLock
com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter -> com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter:
    57:57:void <clinit>() -> <clinit>
    68:77:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.common.util.concurrent.UncheckedExecutionException -> com.google.common.util.concurrent.UncheckedExecutionException:
    38:38:void <init>() -> <init>
    42:42:void <init>(java.lang.String) -> <init>
    52:52:void <init>(java.lang.Throwable) -> <init>
com.google.common.util.concurrent.Uninterruptibles -> com.google.common.util.concurrent.Uninterruptibles:
    201:210:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
com.google.common.util.concurrent.internal.InternalFutureFailureAccess -> com.google.common.util.concurrent.internal.InternalFutureFailureAccess:
    31:31:void <init>() -> <init>
com.google.common.util.concurrent.internal.InternalFutures -> com.google.common.util.concurrent.internal.InternalFutures:
    41:41:java.lang.Throwable tryInternalFastPathGetFailure(com.google.common.util.concurrent.internal.InternalFutureFailureAccess) -> tryInternalFastPathGetFailure
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    24:75:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
    24:24:com.google.zxing.BarcodeFormat[] values() -> values
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    34:35:void <init>(com.google.zxing.LuminanceSource) -> <init>
    84:84:int getHeight() -> getHeight
    39:39:com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
    80:80:int getWidth() -> getWidth
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    33:37:void <init>(com.google.zxing.Binarizer) -> <init>
    84:87:com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    66:66:com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    51:51:int getHeight() -> getHeight
    44:44:int getWidth() -> getWidth
    116:116:boolean isRotateSupported() -> isRotateSupported
    126:127:com.google.zxing.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
    144:144:java.lang.String toString() -> toString
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    27:29:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    41:41:com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    30:99:void <clinit>() -> <clinit>
    114:115:void <init>(java.lang.String,int,java.lang.Class) -> <init>
    30:30:com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
    30:30:com.google.zxing.DecodeHintType[] values() -> values
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    28:30:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    37:37:void <init>(java.lang.Throwable) -> <init>
    41:41:com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
    45:45:com.google.zxing.FormatException getFormatInstance(java.lang.Throwable) -> getFormatInstance
com.google.zxing.InvertedLuminanceSource -> com.google.zxing.InvertedLuminanceSource:
    30:31:void <init>(com.google.zxing.LuminanceSource) -> <init>
    46:50:byte[] getMatrix() -> getMatrix
    36:39:byte[] getRow(int,byte[]) -> getRow
    67:67:boolean isRotateSupported() -> isRotateSupported
    80:80:com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    33:35:void <init>(int,int) -> <init>
    73:73:int getHeight() -> getHeight
    66:66:int getWidth() -> getWidth
    109:109:com.google.zxing.LuminanceSource invert() -> invert
    119:119:com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    134:154:java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.google.zxing.MultiFormatReader:
    38:38:void <init>() -> <init>
    68:69:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    168:177:com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> decodeInternal
    82:85:com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> decodeWithState
    160:162:void reset() -> reset
    96:155:void setHints(java.util.Map) -> setHints
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    27:29:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    37:37:com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.PlanarYUVLuminanceSource -> com.google.zxing.PlanarYUVLuminanceSource:
    47:59:void <init>(byte[],int,int,int,int,int,int,boolean) -> <init>
    79:102:byte[] getMatrix() -> getMatrix
    65:73:byte[] getRow(int,byte[]) -> getRow
    157:163:void reverseHorizontal(int,int) -> reverseHorizontal
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    30:31:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    38:38:void <init>(java.lang.Throwable) -> <init>
    44:44:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    41:41:void <init>(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat) -> <init>
    49:49:void <init>(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat,long) -> <init>
    58:65:void <init>(java.lang.String,byte[],int,com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat,long) -> <init>
    133:140:void addResultPoints(com.google.zxing.ResultPoint[]) -> addResultPoints
    103:103:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    79:79:byte[] getRawBytes() -> getRawBytes
    112:112:java.util.Map getResultMetadata() -> getResultMetadata
    96:96:com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    72:72:java.lang.String getText() -> getText
    124:127:void putAllMetadata(java.util.Map) -> putAllMetadata
    116:119:void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    150:150:java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    25:95:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    25:25:com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
    25:25:com.google.zxing.ResultMetadataType[] values() -> values
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    32:34:void <init>(float,float) -> <init>
    125:127:float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
    116:116:float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    47:49:boolean equals(java.lang.Object) -> equals
    38:38:float getX() -> getX
    42:42:float getY() -> getY
    56:56:int hashCode() -> hashCode
    73:107:void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    61:61:java.lang.String toString() -> toString
com.google.zxing.aztec.AztecDetectorResult -> com.google.zxing.aztec.AztecDetectorResult:
    40:43:void <init>(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint[],boolean,int,int) -> <init>
    51:51:int getNbDatablocks() -> getNbDatablocks
    47:47:int getNbLayers() -> getNbLayers
    55:55:boolean isCompact() -> isCompact
com.google.zxing.aztec.AztecReader -> com.google.zxing.aztec.AztecReader:
    41:41:void <init>() -> <init>
    61:111:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
com.google.zxing.aztec.decoder.Decoder -> com.google.zxing.aztec.decoder.Decoder:
    46:67:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    356:358:byte[] convertBoolArrayToByteArray(boolean[]) -> convertBoolArrayToByteArray
    209:265:boolean[] correctBits(boolean[]) -> correctBits
    74:81:com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult) -> decode
    278:319:boolean[] extractBits(com.google.zxing.common.BitMatrix) -> extractBits
    182:195:java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int) -> getCharacter
    96:151:java.lang.String getEncodedData(boolean[]) -> getEncodedData
    160:171:com.google.zxing.aztec.decoder.Decoder$Table getTable(char) -> getTable
    345:349:byte readByte(boolean[],int) -> readByte
    334:334:int readCode(boolean[],int,int) -> readCode
com.google.zxing.aztec.decoder.Decoder$1 -> com.google.zxing.aztec.decoder.Decoder$1:
    182:182:void <clinit>() -> <clinit>
com.google.zxing.aztec.decoder.Decoder$Table -> com.google.zxing.aztec.decoder.Decoder$Table:
    37:43:void <clinit>() -> <clinit>
    37:37:void <init>(java.lang.String,int) -> <init>
    37:37:com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
    37:37:com.google.zxing.aztec.decoder.Decoder$Table[] values() -> values
com.google.zxing.aztec.detector.Detector -> com.google.zxing.aztec.detector.Detector:
    39:39:void <clinit>() -> <clinit>
    54:55:void <init>(com.google.zxing.common.BitMatrix) -> <init>
    72:97:com.google.zxing.aztec.AztecDetectorResult detect(boolean) -> detect
    558:558:float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> distance
    562:562:float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    529:542:com.google.zxing.ResultPoint[] expandSquare(com.google.zxing.ResultPoint[],int,int) -> expandSquare
    107:152:void extractParameters(com.google.zxing.ResultPoint[]) -> extractParameters
    244:284:com.google.zxing.ResultPoint[] getBullsEyeCorners(com.google.zxing.aztec.detector.Detector$Point) -> getBullsEyeCorners
    463:477:int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> getColor
    207:221:int getCorrectedParameterData(long,boolean) -> getCorrectedParameterData
    566:572:int getDimension() -> getDimension
    495:516:com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int) -> getFirstDifferent
    304:349:com.google.zxing.aztec.detector.Detector$Point getMatrixCenter() -> getMatrixCenter
    359:359:com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.ResultPoint[]) -> getMatrixCornerPoints
    167:184:int getRotation(int[],int) -> getRotation
    548:548:boolean isValid(int,int) -> isValid
    552:554:boolean isValid(com.google.zxing.ResultPoint) -> isValid
    428:451:boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> isWhiteOrBlackRectangle
    373:389:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> sampleGrid
    403:410:int sampleLine(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> sampleLine
com.google.zxing.aztec.detector.Detector$Point -> com.google.zxing.aztec.detector.Detector$Point:
    583:585:void <init>(int,int) -> <init>
    589:589:int getX() -> getX
    593:593:int getY() -> getY
    580:580:com.google.zxing.ResultPoint toResultPoint() -> toResultPoint
    598:598:java.lang.String toString() -> toString
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    31:33:void <init>() -> <init>
    36:38:void <init>(int) -> <init>
    42:44:void <init>(int[],int) -> <init>
    176:178:void clear() -> clear
    26:26:java.lang.Object clone() -> clone
    354:354:com.google.zxing.common.BitArray clone() -> clone
    328:332:boolean equals(java.lang.Object) -> equals
    68:68:boolean get(int) -> get
    287:287:int[] getBitArray() -> getBitArray
    96:110:int getNextSet(int) -> getNextSet
    119:133:int getNextUnset(int) -> getNextUnset
    48:48:int getSize() -> getSize
    337:337:int hashCode() -> hashCode
    192:209:boolean isRange(int,int,boolean) -> isRange
    323:323:int[] makeArray(int) -> makeArray
    294:319:void reverse() -> reverse
    77:77:void set(int) -> set
    144:144:void setBulk(int,int) -> setBulk
    342:349:java.lang.String toString() -> toString
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    49:49:void <init>(int) -> <init>
    58:65:void <init>(int,int) -> <init>
    68:72:void <init>(int,int,int,int[]) -> <init>
    466:473:java.lang.String buildToString(java.lang.String,java.lang.String,java.lang.String) -> buildToString
    36:36:java.lang.Object clone() -> clone
    478:478:com.google.zxing.common.BitMatrix clone() -> clone
    418:423:boolean equals(java.lang.Object) -> equals
    188:189:void flip(int,int) -> flip
    161:162:boolean get(int,int) -> get
    374:385:int[] getBottomRightOnBit() -> getBottomRightOnBit
    304:311:int[] getEnclosingRectangle() -> getEnclosingRectangle
    406:406:int getHeight() -> getHeight
    260:267:com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray) -> getRow
    355:364:int[] getTopLeftOnBit() -> getTopLeftOnBit
    399:399:int getWidth() -> getWidth
    428:432:int hashCode() -> hashCode
    284:294:void rotate180() -> rotate180
    172:173:void set(int,int) -> set
    233:246:void setRegion(int,int,int,int) -> setRegion
    277:277:void setRow(int,com.google.zxing.common.BitArray) -> setRow
    441:441:java.lang.String toString() -> toString
    450:450:java.lang.String toString(java.lang.String,java.lang.String) -> toString
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    38:39:void <init>(byte[]) -> <init>
    108:108:int available() -> available
    46:46:int getBitOffset() -> getBitOffset
    53:53:int getByteOffset() -> getByteOffset
    63:97:int readBits(int) -> readBits
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    30:70:void <clinit>() -> <clinit>
    79:79:void <init>(java.lang.String,int,int) -> <init>
    82:84:void <init>(java.lang.String,int,int,java.lang.String[]) -> <init>
    87:89:void <init>(java.lang.String,int,int[],java.lang.String[]) -> <init>
    104:106:com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    30:30:com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
    30:30:com.google.zxing.common.CharacterSetECI[] values() -> values
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    45:45:void <init>(byte[],java.lang.String,java.util.List,java.lang.String) -> <init>
    53:60:void <init>(byte[],java.lang.String,java.util.List,java.lang.String,int,int) -> <init>
    97:97:java.util.List getByteSegments() -> getByteSegments
    104:104:java.lang.String getECLevel() -> getECLevel
    75:75:int getNumBits() -> getNumBits
    133:133:java.lang.Object getOther() -> getOther
    67:67:byte[] getRawBytes() -> getRawBytes
    145:145:int getStructuredAppendParity() -> getStructuredAppendParity
    149:149:int getStructuredAppendSequenceNumber() -> getStructuredAppendSequenceNumber
    90:90:java.lang.String getText() -> getText
    141:141:boolean hasStructuredAppend() -> hasStructuredAppend
    126:126:void setErasures(java.lang.Integer) -> setErasures
    115:115:void setErrorsCorrected(java.lang.Integer) -> setErrorsCorrected
    83:83:void setNumBits(int) -> setNumBits
    137:137:void setOther(java.lang.Object) -> setOther
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    24:24:void <init>() -> <init>
    39:43:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    52:82:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    33:35:void <init>(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint[]) -> <init>
    39:39:com.google.zxing.common.BitMatrix getBits() -> getBits
    43:43:com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    39:39:void <clinit>() -> <clinit>
    45:47:void <init>(com.google.zxing.LuminanceSource) -> <init>
    148:193:int estimateBlackPoint(int[]) -> estimateBlackPoint
    95:124:com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    53:83:com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    138:142:void initArrays(int) -> initArrays
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    36:36:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    121:167:void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
    55:55:com.google.zxing.common.GridSampler getInstance() -> getInstance
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    53:53:void <init>(com.google.zxing.LuminanceSource) -> <init>
    168:231:int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
    115:128:void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    93:93:com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    63:88:com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    149:150:void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> thresholdBlock
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    40:49:void <init>(float,float,float,float,float,float,float,float,float) -> <init>
    132:132:com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    61:63:com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    127:127:com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    105:116:com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    144:144:com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
    67:82:void transformPoints(float[]) -> transformPoints
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    32:40:void <clinit>() -> <clinit>
    52:194:java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
com.google.zxing.common.detector.MathUtils -> com.google.zxing.common.detector.MathUtils:
    50:50:float distance(float,float,float,float) -> distance
    63:63:float distance(int,int,int,int) -> distance
    72:72:int sum(int[]) -> sum
com.google.zxing.common.detector.WhiteRectangleDetector -> com.google.zxing.common.detector.WhiteRectangleDetector:
    47:47:void <init>(com.google.zxing.common.BitMatrix) -> <init>
    57:67:void <init>(com.google.zxing.common.BitMatrix,int,int,int) -> <init>
    278:294:com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> centerEdges
    315:321:boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
    87:236:com.google.zxing.ResultPoint[] detect() -> detect
    241:249:com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.common.reedsolomon.GenericGF:
    32:39:void <clinit>() -> <clinit>
    60:81:void <init>(int,int,int) -> <init>
    97:104:com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    120:120:int exp(int) -> exp
    158:158:int getGeneratorBase() -> getGeneratorBase
    89:89:com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> getOne
    154:154:int getSize() -> getSize
    85:85:com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> getZero
    138:140:int inverse(int) -> inverse
    128:130:int log(int) -> log
    150:150:int multiply(int,int) -> multiply
    163:163:java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.common.reedsolomon.GenericGFPoly:
    42:65:void <init>(com.google.zxing.common.reedsolomon.GenericGF,int[]) -> <init>
    119:145:com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    100:113:int evaluateAt(int) -> evaluateAt
    91:91:int getCoefficient(int) -> getCoefficient
    77:77:int getDegree() -> getDegree
    84:84:boolean isZero() -> isZero
    149:167:com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> multiply
    172:182:com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    187:197:com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    228:261:java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    45:46:void <init>(com.google.zxing.common.reedsolomon.GenericGF) -> <init>
    59:84:void decode(int[],int) -> decode
    145:158:int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    165:184:int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[]) -> findErrorMagnitudes
    91:139:com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
    28:28:void <init>(java.lang.String) -> <init>
com.google.zxing.datamatrix.DataMatrixReader -> com.google.zxing.datamatrix.DataMatrixReader:
    45:45:void <clinit>() -> <clinit>
    43:47:void <init>() -> <init>
    67:84:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    104:136:com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    144:156:int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.google.zxing.datamatrix.decoder.BitMatrixParser:
    35:43:void <init>(com.google.zxing.common.BitMatrix) -> <init>
    403:431:com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> extractDataRegion
    47:47:com.google.zxing.datamatrix.decoder.Version getVersion() -> getVersion
    77:140:byte[] readCodewords() -> readCodewords
    226:254:int readCorner1(int,int) -> readCorner1
    271:299:int readCorner2(int,int) -> readCorner2
    316:344:int readCorner3(int,int) -> readCorner3
    361:389:int readCorner4(int,int) -> readCorner4
    164:165:boolean readModule(int,int,int,int) -> readModule
    181:209:int readUtah(int,int,int,int) -> readUtah
    62:64:com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> readVersion
com.google.zxing.datamatrix.decoder.DataBlock -> com.google.zxing.datamatrix.decoder.DataBlock:
    31:33:void <init>(int,byte[]) -> <init>
    115:115:byte[] getCodewords() -> getCodewords
    49:104:com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> getDataBlocks
    111:111:int getNumDataCodewords() -> getNumDataCodewords
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser:
    53:77:void <clinit>() -> <clinit>
    86:120:com.google.zxing.common.DecoderResult decode(byte[]) -> decode
    394:430:void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeAnsiX12Segment
    131:195:com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> decodeAsciiSegment
    482:511:void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> decodeBase256Segment
    212:285:void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeC40Segment
    449:471:void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeEdifactSegment
    301:380:void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeTextSegment
    435:440:void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    520:520:int unrandomize255State(int,int) -> unrandomize255State
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1 -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1:
    95:95:void <clinit>() -> <clinit>
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode:
    39:46:void <clinit>() -> <clinit>
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
    39:39:com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
com.google.zxing.datamatrix.decoder.Decoder -> com.google.zxing.datamatrix.decoder.Decoder:
    37:38:void <init>() -> <init>
    107:121:void correctErrors(byte[],int) -> correctErrors
    66:95:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
com.google.zxing.datamatrix.decoder.Version -> com.google.zxing.datamatrix.decoder.Version:
    29:29:void <clinit>() -> <clinit>
    44:59:void <init>(int,int,int,int,int,com.google.zxing.datamatrix.decoder.Version$ECBlocks) -> <init>
    173:173:com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> buildVersions
    79:79:int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    75:75:int getDataRegionSizeRows() -> getDataRegionSizeRows
    87:87:com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    71:71:int getSymbolSizeColumns() -> getSymbolSizeColumns
    67:67:int getSymbolSizeRows() -> getSymbolSizeRows
    83:83:int getTotalCodewords() -> getTotalCodewords
    100:109:com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    63:63:int getVersionNumber() -> getVersionNumber
    166:166:java.lang.String toString() -> toString
com.google.zxing.datamatrix.decoder.Version$ECB -> com.google.zxing.datamatrix.decoder.Version$ECB:
    146:146:void <init>(int,int,com.google.zxing.datamatrix.decoder.Version$1) -> <init>
    150:152:void <init>(int,int) -> <init>
    156:156:int getCount() -> getCount
    160:160:int getDataCodewords() -> getDataCodewords
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.google.zxing.datamatrix.decoder.Version$ECBlocks:
    118:118:void <init>(int,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$1) -> <init>
    118:118:void <init>(int,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$1) -> <init>
    122:124:void <init>(int,com.google.zxing.datamatrix.decoder.Version$ECB) -> <init>
    127:129:void <init>(int,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$ECB) -> <init>
    137:137:com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
    133:133:int getECCodewords() -> getECCodewords
com.google.zxing.datamatrix.detector.Detector -> com.google.zxing.datamatrix.detector.Detector:
    46:48:void <init>(com.google.zxing.common.BitMatrix) -> <init>
    273:300:com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> correctTopRight
    227:254:com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> correctTopRightRectangular
    59:213:com.google.zxing.common.DetectorResult detect() -> detect
    310:310:int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    317:318:void increment(java.util.Map,com.google.zxing.ResultPoint) -> increment
    306:306:boolean isValid(com.google.zxing.ResultPoint) -> isValid
    329:349:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> sampleGrid
    357:393:com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> transitionsBetween
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions:
    399:399:void <init>(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,com.google.zxing.datamatrix.detector.Detector$1) -> <init>
    405:408:void <init>(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> <init>
    412:412:com.google.zxing.ResultPoint getFrom() -> getFrom
    416:416:com.google.zxing.ResultPoint getTo() -> getTo
    420:420:int getTransitions() -> getTransitions
    425:425:java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    432:432:void <init>() -> <init>
    432:432:void <init>(com.google.zxing.datamatrix.detector.Detector$1) -> <init>
    432:432:int compare(java.lang.Object,java.lang.Object) -> compare
    436:436:int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) -> compare
com.google.zxing.maxicode.MaxiCodeReader -> com.google.zxing.maxicode.MaxiCodeReader:
    40:40:void <clinit>() -> <clinit>
    38:44:void <init>() -> <init>
    63:74:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    95:112:com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.maxicode.decoder.BitMatrixParser -> com.google.zxing.maxicode.decoder.BitMatrixParser:
    27:27:void <clinit>() -> <clinit>
    68:69:void <init>(com.google.zxing.common.BitMatrix) -> <init>
    74:81:byte[] readCodewords() -> readCodewords
com.google.zxing.maxicode.decoder.DecodedBitStreamParser -> com.google.zxing.maxicode.decoder.DecodedBitStreamParser:
    49:49:void <clinit>() -> <clinit>
    74:103:com.google.zxing.common.DecoderResult decode(byte[],int) -> decode
    108:108:int getBit(int,byte[]) -> getBit
    123:123:int getCountry(byte[]) -> getCountry
    112:117:int getInt(byte[],byte[]) -> getInt
    153:204:java.lang.String getMessage(byte[],int,int) -> getMessage
    135:135:int getPostCode2(byte[]) -> getPostCode2
    131:131:int getPostCode2Length(byte[]) -> getPostCode2Length
    140:147:java.lang.String getPostCode3(byte[]) -> getPostCode3
    127:127:int getServiceClass(byte[]) -> getServiceClass
com.google.zxing.maxicode.decoder.Decoder -> com.google.zxing.maxicode.decoder.Decoder:
    44:45:void <init>() -> <init>
    94:109:void correctErrors(byte[],int,int,int,int) -> correctErrors
    54:80:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
com.google.zxing.oned.CodaBarReader -> com.google.zxing.oned.CodaBarReader:
    44:61:void <clinit>() -> <clinit>
    73:76:void <init>() -> <init>
    283:283:boolean arrayContains(char[],char) -> arrayContains
    254:259:void counterAppend(int) -> counterAppend
    82:156:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    264:278:int findStartPattern() -> findStartPattern
    231:250:void setCounters(com.google.zxing.common.BitArray) -> setCounters
    295:338:int toNarrowWidePattern(int) -> toNarrowWidePattern
    166:213:void validatePattern(int) -> validatePattern
com.google.zxing.oned.Code128Reader -> com.google.zxing.oned.Code128Reader:
    39:39:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    216:231:int decodeCode(com.google.zxing.common.BitArray,int[],int) -> decodeCode
    239:530:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    170:211:int[] findStartPattern(com.google.zxing.common.BitArray) -> findStartPattern
com.google.zxing.oned.Code39Reader -> com.google.zxing.oned.Code39Reader:
    46:46:void <clinit>() -> <clinit>
    66:66:void <init>() -> <init>
    77:77:void <init>(boolean) -> <init>
    90:94:void <init>(boolean,boolean) -> <init>
    270:334:java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    101:168:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    179:209:int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[]) -> findAsteriskPattern
    258:266:char patternToChar(int) -> patternToChar
    215:242:int toNarrowWidePattern(int[]) -> toNarrowWidePattern
com.google.zxing.oned.Code93Reader -> com.google.zxing.oned.Code93Reader:
    41:55:void <clinit>() -> <clinit>
    60:62:void <init>() -> <init>
    267:269:void checkChecksums(java.lang.CharSequence) -> checkChecksums
    277:283:void checkOneChecksum(java.lang.CharSequence,int,int) -> checkOneChecksum
    198:263:java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    69:121:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    132:162:int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    189:194:char patternToChar(int) -> patternToChar
    167:173:int toPattern(int[]) -> toPattern
com.google.zxing.oned.EAN13Reader -> com.google.zxing.oned.EAN13Reader:
    61:61:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    75:104:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    130:135:void determineFirstDigit(java.lang.StringBuilder,int) -> determineFirstDigit
    114:114:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EAN8Reader -> com.google.zxing.oned.EAN8Reader:
    32:33:void <init>() -> <init>
    40:62:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    72:72:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EANManufacturerOrgSupport -> com.google.zxing.oned.EANManufacturerOrgSupport:
    31:34:void <init>() -> <init>
    55:56:void add(int[],java.lang.String) -> add
    60:169:void initIfNeeded() -> initIfNeeded
    37:48:java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
com.google.zxing.oned.ITFReader -> com.google.zxing.oned.ITFReader:
    55:77:void <clinit>() -> <clinit>
    45:58:void <init>() -> <init>
    357:372:int decodeDigit(int[]) -> decodeDigit
    275:301:int[] decodeEnd(com.google.zxing.common.BitArray) -> decodeEnd
    173:186:void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder) -> decodeMiddle
    105:142:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    200:208:int[] decodeStart(com.google.zxing.common.BitArray) -> decodeStart
    316:343:int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> findGuardPattern
    255:258:int skipWhiteSpace(com.google.zxing.common.BitArray) -> skipWhiteSpace
    230:243:void validateQuietZone(com.google.zxing.common.BitArray,int) -> validateQuietZone
com.google.zxing.oned.MultiFormatOneDReader -> com.google.zxing.oned.MultiFormatOneDReader:
    41:87:void <init>(java.util.Map) -> <init>
    94:102:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    107:108:void reset() -> reset
com.google.zxing.oned.MultiFormatUPCEANReader -> com.google.zxing.oned.MultiFormatUPCEANReader:
    42:66:void <init>(java.util.Map) -> <init>
    74:113:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    118:119:void reset() -> reset
com.google.zxing.oned.OneDReader -> com.google.zxing.oned.OneDReader:
    42:42:void <init>() -> <init>
    54:79:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    105:174:com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map) -> doDecode
    252:271:float patternMatchVariance(int[],int[],float) -> patternMatchVariance
    193:218:void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> recordPattern
    225:236:void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> recordPatternInReverse
com.google.zxing.oned.UPCAReader -> com.google.zxing.oned.UPCAReader:
    36:38:void <init>() -> <init>
    63:63:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    74:74:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    46:46:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    52:52:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    68:68:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    78:86:com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> maybeReturnResult
com.google.zxing.oned.UPCEANExtension2Support -> com.google.zxing.oned.UPCEANExtension2Support:
    32:35:void <init>() -> <init>
    61:92:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    39:55:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    104:108:java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.google.zxing.oned.UPCEANExtension5Support -> com.google.zxing.oned.UPCEANExtension5Support:
    34:34:void <clinit>() -> <clinit>
    32:39:void <init>() -> <init>
    65:97:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    43:59:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    120:124:int determineCheckDigit(int) -> determineCheckDigit
    104:114:int extensionChecksum(java.lang.CharSequence) -> extensionChecksum
    147:177:java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
    133:141:java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.google.zxing.oned.UPCEANExtensionSupport -> com.google.zxing.oned.UPCEANExtensionSupport:
    26:26:void <clinit>() -> <clinit>
    24:29:void <init>() -> <init>
    32:36:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> decodeRow
com.google.zxing.oned.UPCEANReader -> com.google.zxing.oned.UPCEANReader:
    53:93:void <clinit>() -> <clinit>
    101:104:void <init>() -> <init>
    252:252:boolean checkChecksum(java.lang.String) -> checkChecksum
    264:269:boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> checkStandardUPCEANChecksum
    363:378:int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> decodeDigit
    294:294:int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    131:131:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    154:239:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    301:301:int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> findGuardPattern
    320:346:int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[]) -> findGuardPattern
    111:122:int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> findStartGuardPattern
    273:290:int getStandardUPCEANChecksum(java.lang.CharSequence) -> getStandardUPCEANChecksum
com.google.zxing.oned.UPCEReader -> com.google.zxing.oned.UPCEReader:
    37:68:void <clinit>() -> <clinit>
    75:76:void <init>() -> <init>
    115:115:boolean checkChecksum(java.lang.String) -> checkChecksum
    146:179:java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
    110:110:int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    82:103:int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    123:130:void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> determineNumSysAndCheckDigit
    135:135:com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.rss.AbstractRSSReader -> com.google.zxing.oned.rss.AbstractRSSReader:
    42:48:void <init>() -> <init>
    110:117:void decrement(int[],float[]) -> decrement
    56:56:int[] getDataCharacterCounters() -> getDataCharacterCounters
    52:52:int[] getDecodeFinderCounters() -> getDecodeFinderCounters
    72:72:int[] getEvenCounts() -> getEvenCounts
    64:64:float[] getEvenRoundingErrors() -> getEvenRoundingErrors
    68:68:int[] getOddCounts() -> getOddCounts
    60:60:float[] getOddRoundingErrors() -> getOddRoundingErrors
    98:105:void increment(int[],float[]) -> increment
    121:128:boolean isFinderPattern(int[]) -> isFinderPattern
    77:83:int parseFinderValue(int[],int[][]) -> parseFinderValue
com.google.zxing.oned.rss.DataCharacter -> com.google.zxing.oned.rss.DataCharacter:
    27:29:void <init>(int,int) -> <init>
    47:51:boolean equals(java.lang.Object) -> equals
    37:37:int getChecksumPortion() -> getChecksumPortion
    33:33:int getValue() -> getValue
    56:56:int hashCode() -> hashCode
    42:42:java.lang.String toString() -> toString
com.google.zxing.oned.rss.FinderPattern -> com.google.zxing.oned.rss.FinderPattern:
    30:33:void <init>(int,int[],int,int,int) -> <init>
    53:57:boolean equals(java.lang.Object) -> equals
    48:48:com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    44:44:int[] getStartEnd() -> getStartEnd
    40:40:int getValue() -> getValue
    62:62:int hashCode() -> hashCode
com.google.zxing.oned.rss.Pair -> com.google.zxing.oned.rss.Pair:
    25:26:void <init>(int,int,com.google.zxing.oned.rss.FinderPattern) -> <init>
    34:34:int getCount() -> getCount
    30:30:com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    38:38:void incrementCount() -> incrementCount
com.google.zxing.oned.rss.RSS14Reader -> com.google.zxing.oned.rss.RSS14Reader:
    38:45:void <clinit>() -> <clinit>
    60:62:void <init>() -> <init>
    92:100:void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair) -> addOrTally
    353:463:void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
    146:148:boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> checkChecksum
    111:134:com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> constructResult
    188:272:com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    160:178:com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map) -> decodePair
    69:84:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    280:321:int[] findFinderPattern(com.google.zxing.common.BitArray,boolean) -> findFinderPattern
    328:348:com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    106:107:void reset() -> reset
com.google.zxing.oned.rss.RSSUtils -> com.google.zxing.oned.rss.RSSUtils:
    118:123:int combins(int,int) -> combins
    68:89:int getRSSvalue(int[],int,boolean) -> getRSSvalue
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.google.zxing.oned.rss.expanded.BitArrayBuilder:
    43:77:com.google.zxing.common.BitArray buildBitArray(java.util.List) -> buildBitArray
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.google.zxing.oned.rss.expanded.ExpandedPair:
    45:49:void <init>(com.google.zxing.oned.rss.DataCharacter,com.google.zxing.oned.rss.DataCharacter,com.google.zxing.oned.rss.FinderPattern,boolean) -> <init>
    81:88:boolean equals(java.lang.Object) -> equals
    92:92:boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    65:65:com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    57:57:com.google.zxing.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    61:61:com.google.zxing.oned.rss.DataCharacter getRightChar() -> getRightChar
    97:97:int hashCode() -> hashCode
    101:101:int hashNotNull(java.lang.Object) -> hashNotNull
    69:69:boolean mustBeLast() -> mustBeLast
    74:76:java.lang.String toString() -> toString
com.google.zxing.oned.rss.expanded.ExpandedRow -> com.google.zxing.oned.rss.expanded.ExpandedRow:
    32:35:void <init>(java.util.List,int,boolean) -> <init>
    64:68:boolean equals(java.lang.Object) -> equals
    39:39:java.util.List getPairs() -> getPairs
    43:43:int getRowNumber() -> getRowNumber
    73:73:int hashCode() -> hashCode
    51:51:boolean isEquivalent(java.util.List) -> isEquivalent
    56:56:java.lang.String toString() -> toString
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.google.zxing.oned.rss.expanded.RSSExpandedReader:
    55:101:void <clinit>() -> <clinit>
    53:118:void <init>() -> <init>
    686:771:void adjustOddEvenCounts(int) -> adjustOddEvenCounts
    377:403:boolean checkChecksum() -> checkChecksum
    188:206:java.util.List checkRows(boolean) -> checkRows
    215:241:java.util.List checkRows(java.util.List,int) -> checkRows
    360:368:com.google.zxing.Result constructResult(java.util.List) -> constructResult
    584:676:com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    127:137:com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    151:181:java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray) -> decodeRow2pairs
    460:525:void findNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> findNextPair
    408:413:int getNextSecondBar(com.google.zxing.common.BitArray,int) -> getNextSecondBar
    681:681:boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    330:335:boolean isPartialRow(java.lang.Iterable,java.lang.Iterable) -> isPartialRow
    247:254:boolean isValidSequence(java.util.List) -> isValidSequence
    546:577:com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> parseFoundFinderPattern
    302:323:void removePartialRows(java.util.List,java.util.List) -> removePartialRows
    142:143:void reset() -> reset
    421:455:com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> retrieveNextPair
    529:533:void reverseCounters(int[]) -> reverseCounters
    273:297:void storeRow(int,boolean) -> storeRow
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.google.zxing.oned.rss.expanded.decoders.AI013103decoder:
    37:37:void <init>(com.google.zxing.common.BitArray) -> <init>
    42:42:void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder:
    37:37:void <init>(com.google.zxing.common.BitArray) -> <init>
    43:45:void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder:
    42:42:void <init>(com.google.zxing.common.BitArray) -> <init>
    47:65:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder:
    42:42:void <init>(com.google.zxing.common.BitArray) -> <init>
    47:76:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    46:48:void <init>(com.google.zxing.common.BitArray,java.lang.String,java.lang.String) -> <init>
    98:101:void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    106:106:int checkWeight(int) -> checkWeight
    67:93:void encodeCompressedDate(java.lang.StringBuilder,int) -> encodeCompressedDate
    53:63:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder:
    41:41:void <init>(com.google.zxing.common.BitArray) -> <init>
    46:55:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs:
    42:42:void <init>(com.google.zxing.common.BitArray) -> <init>
    47:56:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.google.zxing.oned.rss.expanded.decoders.AI01decoder:
    40:40:void <init>(com.google.zxing.common.BitArray) -> <init>
    69:78:void appendCheckDigit(java.lang.StringBuilder,int) -> appendCheckDigit
    44:48:void encodeCompressedGtin(java.lang.StringBuilder,int) -> encodeCompressedGtin
    53:63:void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> encodeCompressedGtinWithoutAI
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder:
    37:37:void <init>(com.google.zxing.common.BitArray) -> <init>
    41:53:void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> encodeCompressedWeight
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    42:44:void <init>(com.google.zxing.common.BitArray) -> <init>
    58:90:com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> createDecoder
    52:52:com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> getGeneralDecoder
    48:48:com.google.zxing.common.BitArray getInformation() -> getInformation
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder:
    42:42:void <init>(com.google.zxing.common.BitArray) -> <init>
    47:48:java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult:
    39:39:void <init>(boolean) -> <init>
    42:44:void <init>(com.google.zxing.oned.rss.expanded.decoders.DecodedInformation,boolean) -> <init>
    48:48:com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    52:52:boolean isFinished() -> isFinished
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState:
    43:45:void <init>() -> <init>
    49:49:int getPosition() -> getPosition
    57:57:void incrementPosition(int) -> incrementPosition
    61:61:boolean isAlpha() -> isAlpha
    69:69:boolean isIsoIec646() -> isIsoIec646
    77:77:void setAlpha() -> setAlpha
    81:81:void setIsoIec646() -> setIsoIec646
    73:73:void setNumeric() -> setNumeric
    53:53:void setPosition(int) -> setPosition
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State:
    37:40:void <clinit>() -> <clinit>
    37:37:void <init>(java.lang.String,int) -> <init>
    37:37:com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
    37:37:com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.google.zxing.oned.rss.expanded.decoders.DecodedChar:
    40:41:void <init>(int,char) -> <init>
    45:45:char getValue() -> getValue
    49:49:boolean isFNC1() -> isFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.google.zxing.oned.rss.expanded.decoders.DecodedInformation:
    40:43:void <init>(int,java.lang.String) -> <init>
    47:50:void <init>(int,java.lang.String,int) -> <init>
    54:54:java.lang.String getNewString() -> getNewString
    62:62:int getRemainingValue() -> getRemainingValue
    58:58:boolean isRemaining() -> isRemaining
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric:
    43:50:void <init>(int,int,int) -> <init>
    54:54:int getFirstDigit() -> getFirstDigit
    58:58:int getSecondDigit() -> getSecondDigit
    66:66:boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    70:70:boolean isSecondDigitFNC1() -> isSecondDigitFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.google.zxing.oned.rss.expanded.decoders.DecodedObject:
    36:37:void <init>(int) -> <init>
    41:41:int getNewPosition() -> getNewPosition
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.google.zxing.oned.rss.expanded.decoders.FieldParser:
    37:187:void <clinit>() -> <clinit>
    194:255:java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    259:273:java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    278:289:java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    40:44:void <init>(com.google.zxing.common.BitArray) -> <init>
    51:68:java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> decodeAllCodes
    385:420:com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    119:131:com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    274:362:com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    88:100:com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    104:104:int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    110:110:int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> extractNumericValueFromBitArray
    443:448:boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    424:433:boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    458:463:boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
    366:380:boolean isStillAlpha(int) -> isStillAlpha
    246:268:boolean isStillIsoIec646(int) -> isStillIsoIec646
    74:84:boolean isStillNumeric(int) -> isStillNumeric
    218:242:com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    138:157:com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    191:214:com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    161:187:com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
com.google.zxing.pdf417.PDF417Common -> com.google.zxing.pdf417.PDF417Common:
    40:322:void <clinit>() -> <clinit>
    72:76:int getCodeword(int) -> getCodeword
    56:62:int[] toIntArray(java.util.Collection) -> toIntArray
com.google.zxing.pdf417.PDF417Reader -> com.google.zxing.pdf417.PDF417Reader:
    44:44:void <init>() -> <init>
    61:65:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    84:97:com.google.zxing.Result[] decode(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> decode
    115:118:int getMaxCodewordWidth(com.google.zxing.ResultPoint[]) -> getMaxCodewordWidth
    104:104:int getMaxWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMaxWidth
    123:126:int getMinCodewordWidth(com.google.zxing.ResultPoint[]) -> getMinCodewordWidth
    111:111:int getMinWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMinWidth
com.google.zxing.pdf417.PDF417ResultMetadata -> com.google.zxing.pdf417.PDF417ResultMetadata:
    22:33:void <init>() -> <init>
    85:85:boolean isLastSegment() -> isLastSegment
    116:116:void setAddressee(java.lang.String) -> setAddressee
    155:155:void setChecksum(int) -> setChecksum
    59:59:void setFileId(java.lang.String) -> setFileId
    129:129:void setFileName(java.lang.String) -> setFileName
    142:142:void setFileSize(long) -> setFileSize
    89:89:void setLastSegment(boolean) -> setLastSegment
    77:77:void setOptionalData(int[]) -> setOptionalData
    100:100:void setSegmentCount(int) -> setSegmentCount
    46:46:void setSegmentIndex(int) -> setSegmentIndex
    108:108:void setSender(java.lang.String) -> setSender
    168:168:void setTimestamp(long) -> setTimestamp
com.google.zxing.pdf417.decoder.BarcodeMetadata -> com.google.zxing.pdf417.decoder.BarcodeMetadata:
    30:35:void <init>(int,int,int,int) -> <init>
    39:39:int getColumnCount() -> getColumnCount
    43:43:int getErrorCorrectionLevel() -> getErrorCorrectionLevel
    47:47:int getRowCount() -> getRowCount
    55:55:int getRowCountLowerPart() -> getRowCountLowerPart
    51:51:int getRowCountUpperPart() -> getRowCountUpperPart
com.google.zxing.pdf417.decoder.BarcodeValue -> com.google.zxing.pdf417.decoder.BarcodeValue:
    30:31:void <init>() -> <init>
    51:61:int[] getValue() -> getValue
    37:42:void setValue(int) -> setValue
com.google.zxing.pdf417.decoder.BoundingBox -> com.google.zxing.pdf417.decoder.BoundingBox:
    42:63:void <init>(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> <init>
    66:75:void <init>(com.google.zxing.pdf417.decoder.BoundingBox) -> <init>
    89:122:com.google.zxing.pdf417.decoder.BoundingBox addMissingRows(int,int,boolean) -> addMissingRows
    150:150:com.google.zxing.ResultPoint getBottomLeft() -> getBottomLeft
    154:154:com.google.zxing.ResultPoint getBottomRight() -> getBottomRight
    130:130:int getMaxX() -> getMaxX
    138:138:int getMaxY() -> getMaxY
    126:126:int getMinX() -> getMinX
    134:134:int getMinY() -> getMinY
    142:142:com.google.zxing.ResultPoint getTopLeft() -> getTopLeft
    146:146:com.google.zxing.ResultPoint getTopRight() -> getTopRight
    85:85:com.google.zxing.pdf417.decoder.BoundingBox merge(com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.pdf417.decoder.BoundingBox) -> merge
com.google.zxing.pdf417.decoder.Codeword -> com.google.zxing.pdf417.decoder.Codeword:
    30:36:void <init>(int,int,int,int) -> <init>
    64:64:int getBucket() -> getBucket
    60:60:int getEndX() -> getEndX
    72:72:int getRowNumber() -> getRowNumber
    56:56:int getStartX() -> getStartX
    68:68:int getValue() -> getValue
    52:52:int getWidth() -> getWidth
    40:40:boolean hasValidRowNumber() -> hasValidRowNumber
    44:44:boolean isValidRowNumber(int) -> isValidRowNumber
    76:76:void setRowNumber(int) -> setRowNumber
    48:48:void setRowNumberAsRowIndicatorColumn() -> setRowNumberAsRowIndicatorColumn
    81:81:java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser:
    77:94:void <clinit>() -> <clinit>
    524:616:int byteCompaction(int,int[],java.nio.charset.Charset,int,java.lang.StringBuilder) -> byteCompaction
    104:163:com.google.zxing.common.DecoderResult decode(int[],java.lang.String) -> decode
    711:719:java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
    169:249:int decodeMacroBlock(int[],int,com.google.zxing.pdf417.PDF417ResultMetadata) -> decodeMacroBlock
    337:501:void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> decodeTextCompaction
    634:660:int numericCompaction(int[],int,java.lang.StringBuilder) -> numericCompaction
    267:309:int textCompaction(int[],int,java.lang.StringBuilder) -> textCompaction
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1 -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1:
    343:343:void <clinit>() -> <clinit>
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode:
    38:44:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String,int) -> <init>
    38:38:com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
    38:38:com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
com.google.zxing.pdf417.decoder.DetectionResult -> com.google.zxing.pdf417.decoder.DetectionResult:
    35:39:void <init>(com.google.zxing.pdf417.decoder.BarcodeMetadata,com.google.zxing.pdf417.decoder.BoundingBox) -> <init>
    56:57:void adjustIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.DetectionResultColumn) -> adjustIndicatorColumnRowNumbers
    233:234:boolean adjustRowNumber(com.google.zxing.pdf417.decoder.Codeword,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumber
    175:177:int adjustRowNumberIfValid(int,int,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumberIfValid
    69:80:int adjustRowNumbers() -> adjustRowNumbers
    187:220:void adjustRowNumbers(int,int,com.google.zxing.pdf417.decoder.Codeword[]) -> adjustRowNumbers
    88:94:int adjustRowNumbersByRow() -> adjustRowNumbersByRow
    98:114:void adjustRowNumbersFromBothRI() -> adjustRowNumbersFromBothRI
    147:162:int adjustRowNumbersFromLRI() -> adjustRowNumbersFromLRI
    122:137:int adjustRowNumbersFromRRI() -> adjustRowNumbersFromRRI
    241:241:int getBarcodeColumnCount() -> getBarcodeColumnCount
    249:249:int getBarcodeECLevel() -> getBarcodeECLevel
    245:245:int getBarcodeRowCount() -> getBarcodeRowCount
    257:257:com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    265:265:com.google.zxing.pdf417.decoder.DetectionResultColumn getDetectionResultColumn(int) -> getDetectionResultColumn
    43:51:com.google.zxing.pdf417.decoder.DetectionResultColumn[] getDetectionResultColumns() -> getDetectionResultColumns
    253:253:void setBoundingBox(com.google.zxing.pdf417.decoder.BoundingBox) -> setBoundingBox
    261:261:void setDetectionResultColumn(int,com.google.zxing.pdf417.decoder.DetectionResultColumn) -> setDetectionResultColumn
    270:292:java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultColumn -> com.google.zxing.pdf417.decoder.DetectionResultColumn:
    31:33:void <init>(com.google.zxing.pdf417.decoder.BoundingBox) -> <init>
    73:73:com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    69:69:com.google.zxing.pdf417.decoder.Codeword getCodeword(int) -> getCodeword
    37:51:com.google.zxing.pdf417.decoder.Codeword getCodewordNearby(int) -> getCodewordNearby
    77:77:com.google.zxing.pdf417.decoder.Codeword[] getCodewords() -> getCodewords
    61:61:int imageRowToCodewordIndex(int) -> imageRowToCodewordIndex
    65:65:void setCodeword(int,com.google.zxing.pdf417.decoder.Codeword) -> setCodeword
    82:92:java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn -> com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn:
    30:31:void <init>(com.google.zxing.pdf417.decoder.BoundingBox,boolean) -> <init>
    47:105:void adjustCompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustCompleteIndicatorColumnRowNumbers
    137:168:void adjustIncompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustIncompleteIndicatorColumnRowNumbers
    176:216:com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata() -> getBarcodeMetadata
    114:127:int[] getRowHeights() -> getRowHeights
    259:259:boolean isLeft() -> isLeft
    223:251:void removeIncorrectCodewords(com.google.zxing.pdf417.decoder.Codeword[],com.google.zxing.pdf417.decoder.BarcodeMetadata) -> removeIncorrectCodewords
    35:37:void setRowNumbers() -> setRowNumbers
    264:264:java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder -> com.google.zxing.pdf417.decoder.PDF417CodewordDecoder:
    28:43:void <clinit>() -> <clinit>
    84:86:int getBitValue(int[]) -> getBitValue
    93:114:int getClosestDecodedValue(int[]) -> getClosestDecodedValue
    78:79:int getDecodedCodewordValue(int[]) -> getDecodedCodewordValue
    52:56:int getDecodedValue(int[]) -> getDecodedValue
    60:72:int[] sampleBitCounts(int[]) -> sampleBitCounts
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder -> com.google.zxing.pdf417.decoder.PDF417ScanningDecoder:
    43:43:void <clinit>() -> <clinit>
    147:174:com.google.zxing.pdf417.decoder.BoundingBox adjustBoundingBox(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> adjustBoundingBox
    236:248:void adjustCodewordCount(com.google.zxing.pdf417.decoder.DetectionResult,com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> adjustCodewordCount
    506:507:int adjustCodewordStartColumn(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> adjustCodewordStartColumn
    550:557:int correctErrors(int[],int[],int) -> correctErrors
    333:351:com.google.zxing.pdf417.decoder.BarcodeValue[][] createBarcodeMatrix(com.google.zxing.pdf417.decoder.DetectionResult) -> createBarcodeMatrix
    254:279:com.google.zxing.common.DecoderResult createDecoderResult(com.google.zxing.pdf417.decoder.DetectionResult) -> createDecoderResult
    301:328:com.google.zxing.common.DecoderResult createDecoderResultFromAmbiguousValues(int,int[],int[],int[],int[][]) -> createDecoderResultFromAmbiguousValues
    59:124:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> decode
    525:536:com.google.zxing.common.DecoderResult decodeCodewords(int[],int,int[]) -> decodeCodewords
    412:459:com.google.zxing.pdf417.decoder.Codeword detectCodeword(com.google.zxing.common.BitMatrix,int,int,boolean,int,int,int,int) -> detectCodeword
    189:200:com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> getBarcodeMetadata
    598:598:int[] getBitCountForCodeword(int) -> getBitCountForCodeword
    605:605:int getCodewordBucketNumber(int) -> getCodewordBucketNumber
    609:609:int getCodewordBucketNumber(int[]) -> getCodewordBucketNumber
    179:180:int getMax(int[]) -> getMax
    475:476:int[] getModuleBitCount(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> getModuleBitCount
    212:226:com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn getRowIndicatorColumn(com.google.zxing.common.BitMatrix,com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.ResultPoint,boolean,int,int) -> getRowIndicatorColumn
    371:401:int getStartColumn(com.google.zxing.pdf417.decoder.DetectionResult,int,int,boolean) -> getStartColumn
    362:362:boolean isValidBarcodeColumn(com.google.zxing.pdf417.decoder.DetectionResult,int) -> isValidBarcodeColumn
    133:139:com.google.zxing.pdf417.decoder.DetectionResult merge(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> merge
    564:581:void verifyCodewordCount(int[],int) -> verifyCodewordCount
com.google.zxing.pdf417.decoder.ec.ErrorCorrection -> com.google.zxing.pdf417.decoder.ec.ErrorCorrection:
    34:35:void <init>() -> <init>
    49:94:int decode(int[],int,int[]) -> decode
    150:160:int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> findErrorLocations
    168:183:int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[]) -> findErrorMagnitudes
    100:144:com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int) -> runEuclideanAlgorithm
com.google.zxing.pdf417.decoder.ec.ModulusGF -> com.google.zxing.pdf417.decoder.ec.ModulusGF:
    29:29:void <clinit>() -> <clinit>
    37:51:void <init>(int,int) -> <init>
    76:76:int add(int,int) -> add
    65:72:com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int) -> buildMonomial
    84:84:int exp(int) -> exp
    60:60:com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne() -> getOne
    109:109:int getSize() -> getSize
    56:56:com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero() -> getZero
    96:98:int inverse(int) -> inverse
    89:91:int log(int) -> log
    105:105:int multiply(int,int) -> multiply
    80:80:int subtract(int,int) -> subtract
com.google.zxing.pdf417.decoder.ec.ModulusPoly -> com.google.zxing.pdf417.decoder.ec.ModulusPoly:
    28:51:void <init>(com.google.zxing.pdf417.decoder.ec.ModulusGF,int[]) -> <init>
    105:131:com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> add
    86:99:int evaluateAt(int) -> evaluateAt
    77:77:int getCoefficient(int) -> getCoefficient
    63:63:int getDegree() -> getDegree
    70:70:boolean isZero() -> isZero
    145:162:com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> multiply
    176:186:com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int) -> multiply
    191:201:com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    166:171:com.google.zxing.pdf417.decoder.ec.ModulusPoly negative() -> negative
    135:141:com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> subtract
    234:259:java.lang.String toString() -> toString
com.google.zxing.pdf417.detector.Detector -> com.google.zxing.pdf417.detector.Detector:
    40:49:void <clinit>() -> <clinit>
    176:177:void copyToResult(com.google.zxing.ResultPoint[],com.google.zxing.ResultPoint[],int[]) -> copyToResult
    79:87:com.google.zxing.pdf417.detector.PDF417DetectorResult detect(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> detect
    98:137:java.util.List detect(boolean,com.google.zxing.common.BitMatrix) -> detect
    259:292:int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[]) -> findGuardPattern
    189:237:com.google.zxing.ResultPoint[] findRowsWithPattern(com.google.zxing.common.BitMatrix,int,int,int,int,int[]) -> findRowsWithPattern
    159:170:com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,int,int) -> findVertices
    310:331:float patternMatchVariance(int[],int[],float) -> patternMatchVariance
com.google.zxing.pdf417.detector.PDF417DetectorResult -> com.google.zxing.pdf417.detector.PDF417DetectorResult:
    32:34:void <init>(com.google.zxing.common.BitMatrix,java.util.List) -> <init>
    38:38:com.google.zxing.common.BitMatrix getBits() -> getBits
    42:42:java.util.List getPoints() -> getPoints
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    46:46:void <clinit>() -> <clinit>
    44:48:void <init>() -> <init>
    72:100:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    120:192:com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    200:219:float moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    36:41:void <init>(com.google.zxing.common.BitMatrix) -> <init>
    141:141:int copyBit(int,int,int) -> copyBit
    235:239:void mirror() -> mirror
    155:202:byte[] readCodewords() -> readCodewords
    53:86:com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    98:137:com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    211:216:void remask() -> remask
    228:230:void setMirror(boolean) -> setMirror
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    31:33:void <init>(int,byte[]) -> <init>
    119:119:byte[] getCodewords() -> getCodewords
    51:108:com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    115:115:int getNumDataCodewords() -> getNumDataCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    32:112:void <clinit>() -> <clinit>
    32:32:void <init>(java.lang.String,int) -> <init>
    32:32:void <init>(java.lang.String,int,com.google.zxing.qrcode.decoder.DataMask$1) -> <init>
    132:133:void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    32:32:com.google.zxing.qrcode.decoder.DataMask valueOf(java.lang.String) -> valueOf
    32:32:com.google.zxing.qrcode.decoder.DataMask[] values() -> values
com.google.zxing.qrcode.decoder.DataMask$1 -> com.google.zxing.qrcode.decoder.DataMask$1:
    39:39:void <init>(java.lang.String,int) -> <init>
com.google.zxing.qrcode.decoder.DataMask$2 -> com.google.zxing.qrcode.decoder.DataMask$2:
    49:49:void <init>(java.lang.String,int) -> <init>
com.google.zxing.qrcode.decoder.DataMask$3 -> com.google.zxing.qrcode.decoder.DataMask$3:
    59:59:void <init>(java.lang.String,int) -> <init>
    62:62:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$4 -> com.google.zxing.qrcode.decoder.DataMask$4:
    69:69:void <init>(java.lang.String,int) -> <init>
    72:72:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$5 -> com.google.zxing.qrcode.decoder.DataMask$5:
    79:79:void <init>(java.lang.String,int) -> <init>
    82:82:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$6 -> com.google.zxing.qrcode.decoder.DataMask$6:
    90:90:void <init>(java.lang.String,int) -> <init>
    93:93:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$7 -> com.google.zxing.qrcode.decoder.DataMask$7:
    101:101:void <init>(java.lang.String,int) -> <init>
    104:104:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$8 -> com.google.zxing.qrcode.decoder.DataMask$8:
    112:112:void <init>(java.lang.String,int) -> <init>
    115:115:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    46:46:void <clinit>() -> <clinit>
    56:139:com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    265:292:void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    226:250:void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    151:179:void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    187:215:void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    305:337:void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    342:357:int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
    254:257:char toAlphaNumericChar(int) -> toAlphaNumericChar
com.google.zxing.qrcode.decoder.DecodedBitStreamParser$1 -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser$1:
    112:112:void <clinit>() -> <clinit>
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    40:41:void <init>() -> <init>
    171:185:void correctErrors(byte[],int) -> correctErrors
    80:126:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    132:159:com.google.zxing.common.DecoderResult decode(com.google.zxing.qrcode.decoder.BitMatrixParser,java.util.Map) -> decode
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    25:36:void <clinit>() -> <clinit>
    40:41:void <init>(java.lang.String,int,int) -> <init>
    53:56:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
    25:25:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
    25:25:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    34:34:void <clinit>() -> <clinit>
    72:76:void <init>(int) -> <init>
    91:98:com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    106:129:com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    149:153:boolean equals(java.lang.Object) -> equals
    139:139:byte getDataMask() -> getDataMask
    135:135:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    144:144:int hashCode() -> hashCode
    80:80:int numBitsDiffering(int,int) -> numBitsDiffering
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    25:37:void <clinit>() -> <clinit>
    42:44:void <init>(java.lang.String,int,int[],int) -> <init>
    55:76:com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    86:95:int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    25:25:com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
    25:25:com.google.zxing.qrcode.decoder.Mode[] values() -> values
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData -> com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData:
    31:32:void <init>(boolean) -> <init>
    48:53:void applyMirroredCorrection(com.google.zxing.ResultPoint[]) -> applyMirroredCorrection
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    33:43:void <clinit>() -> <clinit>
    52:62:void <init>(int,int[],com.google.zxing.qrcode.decoder.Version$ECBlocks[]) -> <init>
    140:172:com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    246:246:com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
    113:130:com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    70:70:int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    78:78:int getDimensionForVersion() -> getDimensionForVersion
    82:82:com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    93:99:com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    74:74:int getTotalCodewords() -> getTotalCodewords
    105:107:com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    66:66:int getVersionNumber() -> getVersionNumber
    239:239:java.lang.String toString() -> toString
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    223:225:void <init>(int,int) -> <init>
    229:229:int getCount() -> getCount
    233:233:int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    188:190:void <init>(int,com.google.zxing.qrcode.decoder.Version$ECB[]) -> <init>
    210:210:com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
    194:194:int getECCodewordsPerBlock() -> getECCodewordsPerBlock
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    32:33:void <init>(float,float,float) -> <init>
    41:43:boolean aboutEquals(float,float,float) -> aboutEquals
    53:56:com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    68:77:void <init>(com.google.zxing.common.BitMatrix,int,int,int,int,float,com.google.zxing.ResultPointCallback) -> <init>
    161:161:float centerFromEnd(int[],int) -> centerFromEnd
    193:241:float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    88:153:com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    170:173:boolean foundPatternCross(int[]) -> foundPatternCross
    256:271:com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    44:45:void <init>(com.google.zxing.common.BitMatrix) -> <init>
    232:233:float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    242:253:float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    202:214:int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    155:183:com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    77:83:com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    381:402:com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
    89:141:com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    190:191:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    309:356:float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    268:292:float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    34:34:void <init>(float,float,float) -> <init>
    38:40:void <init>(float,float,float,int) -> <init>
    62:64:boolean aboutEquals(float,float,float) -> aboutEquals
    75:79:com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
    48:48:int getCount() -> getCount
    44:44:float getEstimatedModuleSize() -> getEstimatedModuleSize
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    61:65:void <init>(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPointCallback) -> <init>
    174:174:float centerFromEnd(int[],int) -> centerFromEnd
    239:240:void clearCounts(int[]) -> clearCounts
    262:318:boolean crossCheckDiagonal(int,int) -> crossCheckDiagonal
    406:465:float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    334:396:float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    77:166:com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    539:556:int findRowSkip() -> findRowSkip
    185:202:boolean foundPatternCross(int[]) -> foundPatternCross
    213:230:boolean foundPatternDiagonal(int[]) -> foundPatternDiagonal
    234:235:int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    500:523:boolean handlePossibleCenter(int[],int,int) -> handlePossibleCenter
    571:588:boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    601:651:com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
    245:249:void shiftCounts2(int[]) -> shiftCounts2
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    673:673:void <init>(float,com.google.zxing.qrcode.detector.FinderPatternFinder$1) -> <init>
    675:676:void <init>(float) -> <init>
    673:673:int compare(java.lang.Object,java.lang.Object) -> compare
    680:683:int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    658:658:void <init>(float,com.google.zxing.qrcode.detector.FinderPatternFinder$1) -> <init>
    660:661:void <init>(float) -> <init>
    658:658:int compare(java.lang.Object,java.lang.Object) -> compare
    665:666:int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    31:34:void <init>(com.google.zxing.qrcode.detector.FinderPattern[]) -> <init>
    38:38:com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    42:42:com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    46:46:com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
me.dm7.barcodescanner.core.BarcodeScannerView -> me.dm7.barcodescanner.core.BarcodeScannerView:
    25:43:void <init>(android.content.Context) -> <init>
    25:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    111:122:me.dm7.barcodescanner.core.IViewFinder createViewFinderView(android.content.Context) -> createViewFinderView
    272:274:boolean getFlash() -> getFlash
    226:248:android.graphics.Rect getFramingRectInPreview(int,int) -> getFramingRectInPreview
    311:323:byte[] getRotatedData(byte[],android.hardware.Camera) -> getRotatedData
    336:337:int getRotationCount() -> getRotationCount
    76:76:void init() -> init
    220:221:void resumeCameraPreview() -> resumeCameraPreview
    296:298:void setAutoFocus(boolean) -> setAutoFocus
    252:267:void setFlash(boolean) -> setFlash
    303:303:void setShouldScaleToFill(boolean) -> setShouldScaleToFill
    185:192:void setupCameraPreview(me.dm7.barcodescanner.core.CameraWrapper) -> setupCameraPreview
    80:98:void setupLayout(me.dm7.barcodescanner.core.CameraWrapper) -> setupLayout
    178:181:void startCamera(int) -> startCamera
    197:197:void startCamera() -> startCamera
    201:209:void stopCamera() -> stopCamera
    214:215:void stopCameraPreview() -> stopCameraPreview
me.dm7.barcodescanner.core.CameraHandlerThread -> me.dm7.barcodescanner.core.CameraHandlerThread:
    16:18:void <init>(me.dm7.barcodescanner.core.BarcodeScannerView) -> <init>
    10:10:me.dm7.barcodescanner.core.BarcodeScannerView access$000(me.dm7.barcodescanner.core.CameraHandlerThread) -> access$000
    22:23:void startCamera(int) -> startCamera
me.dm7.barcodescanner.core.CameraHandlerThread$1 -> me.dm7.barcodescanner.core.CameraHandlerThread$1:
    23:23:void <init>(me.dm7.barcodescanner.core.CameraHandlerThread,int) -> <init>
    26:28:void run() -> run
me.dm7.barcodescanner.core.CameraHandlerThread$1$1 -> me.dm7.barcodescanner.core.CameraHandlerThread$1$1:
    28:28:void <init>(me.dm7.barcodescanner.core.CameraHandlerThread$1,android.hardware.Camera) -> <init>
    31:31:void run() -> run
me.dm7.barcodescanner.core.CameraPreview -> me.dm7.barcodescanner.core.CameraPreview:
    25:303:void <init>(android.content.Context,me.dm7.barcodescanner.core.CameraWrapper,android.hardware.Camera$PreviewCallback) -> <init>
    20:20:me.dm7.barcodescanner.core.CameraWrapper access$000(me.dm7.barcodescanner.core.CameraPreview) -> access$000
    20:20:boolean access$100(me.dm7.barcodescanner.core.CameraPreview) -> access$100
    20:20:boolean access$200(me.dm7.barcodescanner.core.CameraPreview) -> access$200
    20:20:boolean access$300(me.dm7.barcodescanner.core.CameraPreview) -> access$300
    20:20:void access$400(me.dm7.barcodescanner.core.CameraPreview) -> access$400
    138:145:void adjustViewSize(android.hardware.Camera$Size) -> adjustViewSize
    151:154:android.graphics.Point convertSizeToLandscapeOrientation(android.graphics.Point) -> convertSizeToLandscapeOrientation
    195:224:int getDisplayOrientation() -> getDisplayOrientation
    230:267:android.hardware.Camera$Size getOptimalPreviewSize() -> getOptimalPreviewSize
    43:46:void init(me.dm7.barcodescanner.core.CameraWrapper,android.hardware.Camera$PreviewCallback) -> init
    107:111:void safeAutoFocus() -> safeAutoFocus
    310:310:void scheduleAutoFocus() -> scheduleAutoFocus
    59:59:void setAspectTolerance(float) -> setAspectTolerance
    275:289:void setAutoFocus(boolean) -> setAutoFocus
    50:51:void setCamera(me.dm7.barcodescanner.core.CameraWrapper,android.hardware.Camera$PreviewCallback) -> setCamera
    55:55:void setShouldScaleToFill(boolean) -> setShouldScaleToFill
    160:191:void setViewSize(int,int) -> setViewSize
    130:134:void setupCameraParameters() -> setupCameraParameters
    83:100:void showCameraPreview() -> showCameraPreview
    116:124:void stopCameraPreview() -> stopCameraPreview
    69:73:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    64:64:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    78:79:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
me.dm7.barcodescanner.core.CameraPreview$1 -> me.dm7.barcodescanner.core.CameraPreview$1:
    294:294:void <init>(me.dm7.barcodescanner.core.CameraPreview) -> <init>
    296:297:void run() -> run
me.dm7.barcodescanner.core.CameraPreview$2 -> me.dm7.barcodescanner.core.CameraPreview$2:
    303:303:void <init>(me.dm7.barcodescanner.core.CameraPreview) -> <init>
    305:305:void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
me.dm7.barcodescanner.core.CameraUtils -> me.dm7.barcodescanner.core.CameraUtils:
    33:35:android.hardware.Camera getCameraInstance(int) -> getCameraInstance
    15:21:int getDefaultCameraId() -> getDefaultCameraId
    47:54:boolean isFlashSupported(android.hardware.Camera) -> isFlashSupported
me.dm7.barcodescanner.core.CameraWrapper -> me.dm7.barcodescanner.core.CameraWrapper:
    10:15:void <init>(android.hardware.Camera,int) -> <init>
    22:22:me.dm7.barcodescanner.core.CameraWrapper getWrapper(android.hardware.Camera,int) -> getWrapper
me.dm7.barcodescanner.core.DisplayUtils -> me.dm7.barcodescanner.core.DisplayUtils:
    25:32:int getScreenOrientation(android.content.Context) -> getScreenOrientation
me.dm7.barcodescanner.core.R$styleable -> me.dm7.barcodescanner.core.R$styleable:
    3313:4761:void <clinit>() -> <clinit>
me.dm7.barcodescanner.core.ViewFinderView -> me.dm7.barcodescanner.core.ViewFinderView:
    28:28:void <clinit>() -> <clinit>
    33:50:void <init>(android.content.Context) -> <init>
    202:210:void drawLaser(android.graphics.Canvas) -> drawLaser
    173:198:void drawViewFinderBorder(android.graphics.Canvas) -> drawViewFinderBorder
    162:169:void drawViewFinderMask(android.graphics.Canvas) -> drawViewFinderMask
    144:144:android.graphics.Rect getFramingRect() -> getFramingRect
    60:75:void init() -> init
    149:157:void onDraw(android.graphics.Canvas) -> onDraw
    219:219:void onSizeChanged(int,int,int,int) -> onSizeChanged
    90:90:void setBorderColor(int) -> setBorderColor
    124:124:void setBorderCornerRadius(int) -> setBorderCornerRadius
    109:111:void setBorderCornerRounded(boolean) -> setBorderCornerRounded
    100:100:void setBorderLineLength(int) -> setBorderLineLength
    95:95:void setBorderStrokeWidth(int) -> setBorderStrokeWidth
    80:80:void setLaserColor(int) -> setLaserColor
    104:104:void setLaserEnabled(boolean) -> setLaserEnabled
    85:85:void setMaskColor(int) -> setMaskColor
    135:135:void setSquareViewFinder(boolean) -> setSquareViewFinder
    129:129:void setViewFinderOffset(int) -> setViewFinderOffset
    139:140:void setupViewFinder() -> setupViewFinder
    223:257:void updateFramingRect() -> updateFramingRect
me.dm7.barcodescanner.zxing.ZXingScannerView -> me.dm7.barcodescanner.zxing.ZXingScannerView:
    40:61:void <clinit>() -> <clinit>
    65:66:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    32:32:me.dm7.barcodescanner.zxing.ZXingScannerView$ResultHandler access$000(me.dm7.barcodescanner.zxing.ZXingScannerView) -> access$000
    32:32:me.dm7.barcodescanner.zxing.ZXingScannerView$ResultHandler access$002(me.dm7.barcodescanner.zxing.ZXingScannerView,me.dm7.barcodescanner.zxing.ZXingScannerView$ResultHandler) -> access$002
    183:192:com.google.zxing.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> buildLuminanceSource
    84:85:java.util.Collection getFormats() -> getFormats
    91:94:void initMultiFormatReader() -> initMultiFormatReader
    99:173:void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
    178:179:void resumeCameraPreview(me.dm7.barcodescanner.zxing.ZXingScannerView$ResultHandler) -> resumeCameraPreview
    80:80:void setResultHandler(me.dm7.barcodescanner.zxing.ZXingScannerView$ResultHandler) -> setResultHandler
me.dm7.barcodescanner.zxing.ZXingScannerView$1 -> me.dm7.barcodescanner.zxing.ZXingScannerView$1:
    153:153:void <init>(me.dm7.barcodescanner.zxing.ZXingScannerView,com.google.zxing.Result) -> <init>
    159:164:void run() -> run
org.lineageos.quickreader.ScannerActivity -> org.lineageos.quickreader.ScannerActivity:
    49:49:void <clinit>() -> <clinit>
    46:69:void <init>() -> <init>
    46:46:org.lineageos.quickreader.ScannerIntentHelper access$100() -> access$100
    157:176:void handleResult(com.google.zxing.Result) -> handleResult
    181:181:boolean hasCameraPermission() -> hasCameraPermission
    95:97:void lambda$onCreate$0(boolean,android.view.View) -> lambda$onCreate$0
    100:100:void lambda$onCreate$1(android.view.View) -> lambda$onCreate$1
    101:101:void lambda$onCreate$2(android.view.View) -> lambda$onCreate$2
    211:211:void lambda$showFatalErrorDialog$5(android.content.DialogInterface,int) -> lambda$showFatalErrorDialog$5
    213:213:void lambda$showFatalErrorDialog$6(android.content.DialogInterface,int) -> lambda$showFatalErrorDialog$6
    200:200:void lambda$showRationaleErrorDialog$3(android.content.DialogInterface,int) -> lambda$showRationaleErrorDialog$3
    202:202:void lambda$showRationaleErrorDialog$4(android.content.DialogInterface,int) -> lambda$showRationaleErrorDialog$4
    73:108:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onDestroy() -> onDestroy
    121:126:void onPause() -> onPause
    142:150:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    113:116:void onResume() -> onResume
    190:192:void openSettings() -> openSettings
    225:229:void postAnalyze(int) -> postAnalyze
    186:186:void requestPermission() -> requestPermission
    218:221:void showClickErrorDialog() -> showClickErrorDialog
    207:214:void showFatalErrorDialog() -> showFatalErrorDialog
    196:203:void showRationaleErrorDialog() -> showRationaleErrorDialog
    233:240:void showScanResult(int) -> showScanResult
    245:247:void toggleFlash() -> toggleFlash
org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda0 -> org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda0:
    org.lineageos.quickreader.ScannerActivity org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$4ef56c62e543cb2889e10956fd178bda5f6ca76062a769e49809a7e5fcac51a2$1.f$0 -> f$0
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$4ef56c62e543cb2889e10956fd178bda5f6ca76062a769e49809a7e5fcac51a2$1.<init>(org.lineageos.quickreader.ScannerActivity) -> <init>
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$4ef56c62e543cb2889e10956fd178bda5f6ca76062a769e49809a7e5fcac51a2$1.onClick(android.content.DialogInterface,int) -> onClick
org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda1 -> org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda1:
    org.lineageos.quickreader.ScannerActivity org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$f7d13bf1aa8641c46984dbae8510904d53c7743dadd7efc49badd0b4073c72cc$0.f$0 -> f$0
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$f7d13bf1aa8641c46984dbae8510904d53c7743dadd7efc49badd0b4073c72cc$0.<init>(org.lineageos.quickreader.ScannerActivity) -> <init>
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$f7d13bf1aa8641c46984dbae8510904d53c7743dadd7efc49badd0b4073c72cc$0.onClick(android.content.DialogInterface,int) -> onClick
org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda2 -> org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda2:
    org.lineageos.quickreader.ScannerActivity org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$4ef56c62e543cb2889e10956fd178bda5f6ca76062a769e49809a7e5fcac51a2$0.f$0 -> f$0
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$4ef56c62e543cb2889e10956fd178bda5f6ca76062a769e49809a7e5fcac51a2$0.<init>(org.lineageos.quickreader.ScannerActivity) -> <init>
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$4ef56c62e543cb2889e10956fd178bda5f6ca76062a769e49809a7e5fcac51a2$0.onClick(android.content.DialogInterface,int) -> onClick
org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda3 -> org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda3:
    org.lineageos.quickreader.ScannerActivity org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$f7d13bf1aa8641c46984dbae8510904d53c7743dadd7efc49badd0b4073c72cc$1.f$0 -> f$0
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$f7d13bf1aa8641c46984dbae8510904d53c7743dadd7efc49badd0b4073c72cc$1.<init>(org.lineageos.quickreader.ScannerActivity) -> <init>
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$f7d13bf1aa8641c46984dbae8510904d53c7743dadd7efc49badd0b4073c72cc$1.onClick(android.content.DialogInterface,int) -> onClick
org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda4 -> org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda4:
    org.lineageos.quickreader.ScannerActivity org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$2.f$0 -> f$0
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$2.<init>(org.lineageos.quickreader.ScannerActivity) -> <init>
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$2.onClick(android.view.View) -> onClick
org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda5 -> org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda5:
    org.lineageos.quickreader.ScannerActivity org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$1.f$0 -> f$0
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$1.<init>(org.lineageos.quickreader.ScannerActivity) -> <init>
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$1.onClick(android.view.View) -> onClick
org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda6 -> org.lineageos.quickreader.ScannerActivity$$ExternalSyntheticLambda6:
    org.lineageos.quickreader.ScannerActivity org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$0.f$0 -> f$0
    boolean org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$0.f$1 -> f$1
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$0.<init>(org.lineageos.quickreader.ScannerActivity,boolean) -> <init>
    void org.lineageos.quickreader.ScannerActivity$$InternalSyntheticLambda$0$b1c39d3a0eca8a14620261f9d653d37afc484fe3bd6f4a446873306b58c802fb$0.onClick(android.view.View) -> onClick
org.lineageos.quickreader.ScannerActivity$AnalyzeTask -> org.lineageos.quickreader.ScannerActivity$AnalyzeTask:
    251:251:void <init>() -> <init>
    251:251:void <init>(org.lineageos.quickreader.ScannerActivity$1) -> <init>
    251:251:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    263:313:java.lang.Integer doInBackground(java.lang.String[]) -> doInBackground
    327:344:java.lang.String smartUrlFilter(java.lang.String) -> smartUrlFilter
org.lineageos.quickreader.ScannerIntentHelper -> org.lineageos.quickreader.ScannerIntentHelper:
    63:63:void <init>() -> <init>
    224:228:void copyScanned(android.content.Context) -> copyScanned
    67:71:org.lineageos.quickreader.ScannerIntentHelper getInstance() -> getInstance
    88:88:boolean isValid() -> isValid
    216:216:void lambda$showScannedText$0(android.content.Context,android.content.DialogInterface,int) -> lambda$showScannedText$0
    218:218:void lambda$showScannedText$1(android.content.Context,android.content.DialogInterface,int) -> lambda$showScannedText$1
    191:197:java.util.Date parseDate(java.lang.String) -> parseDate
    83:84:void reset() -> reset
    75:78:void run(android.content.Context) -> run
    203:206:void runIntent(android.content.Context) -> runIntent
    96:122:void setCalendarIntent(java.lang.String) -> setCalendarIntent
    135:171:void setContactIntent(java.lang.String,boolean) -> setContactIntent
    175:182:void setMeBkmUrl(java.lang.String) -> setMeBkmUrl
    126:130:void setSMSIntent(java.lang.String) -> setSMSIntent
    187:187:void setText(java.lang.String) -> setText
    92:92:void setUriIntent(java.lang.String) -> setUriIntent
    233:237:void shareScanned(android.content.Context) -> shareScanned
    211:219:void showScannedText(android.content.Context) -> showScannedText
org.lineageos.quickreader.ScannerIntentHelper$$ExternalSyntheticLambda0 -> org.lineageos.quickreader.ScannerIntentHelper$$ExternalSyntheticLambda0:
    android.content.Context org.lineageos.quickreader.ScannerIntentHelper$$InternalSyntheticLambda$1$78dd77eb0fc16c3f1f984ae9b98471aefbfb3ffb88681cf126dd4e49805204c4$1.f$1 -> f$1
    org.lineageos.quickreader.ScannerIntentHelper org.lineageos.quickreader.ScannerIntentHelper$$InternalSyntheticLambda$1$78dd77eb0fc16c3f1f984ae9b98471aefbfb3ffb88681cf126dd4e49805204c4$1.f$0 -> f$0
    void org.lineageos.quickreader.ScannerIntentHelper$$InternalSyntheticLambda$1$78dd77eb0fc16c3f1f984ae9b98471aefbfb3ffb88681cf126dd4e49805204c4$1.<init>(org.lineageos.quickreader.ScannerIntentHelper,android.content.Context) -> <init>
    void org.lineageos.quickreader.ScannerIntentHelper$$InternalSyntheticLambda$1$78dd77eb0fc16c3f1f984ae9b98471aefbfb3ffb88681cf126dd4e49805204c4$1.onClick(android.content.DialogInterface,int) -> onClick
org.lineageos.quickreader.ScannerIntentHelper$$ExternalSyntheticLambda1 -> org.lineageos.quickreader.ScannerIntentHelper$$ExternalSyntheticLambda1:
    android.content.Context org.lineageos.quickreader.ScannerIntentHelper$$InternalSyntheticLambda$1$78dd77eb0fc16c3f1f984ae9b98471aefbfb3ffb88681cf126dd4e49805204c4$0.f$1 -> f$1
    org.lineageos.quickreader.ScannerIntentHelper org.lineageos.quickreader.ScannerIntentHelper$$InternalSyntheticLambda$1$78dd77eb0fc16c3f1f984ae9b98471aefbfb3ffb88681cf126dd4e49805204c4$0.f$0 -> f$0
    void org.lineageos.quickreader.ScannerIntentHelper$$InternalSyntheticLambda$1$78dd77eb0fc16c3f1f984ae9b98471aefbfb3ffb88681cf126dd4e49805204c4$0.<init>(org.lineageos.quickreader.ScannerIntentHelper,android.content.Context) -> <init>
    void org.lineageos.quickreader.ScannerIntentHelper$$InternalSyntheticLambda$1$78dd77eb0fc16c3f1f984ae9b98471aefbfb3ffb88681cf126dd4e49805204c4$0.onClick(android.content.DialogInterface,int) -> onClick
org.lineageos.quickreader.ScannerTileService -> org.lineageos.quickreader.ScannerTileService:
    21:21:void <init>() -> <init>
    25:27:void onClick() -> onClick
