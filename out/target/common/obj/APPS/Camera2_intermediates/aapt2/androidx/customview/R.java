/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package androidx.customview;

public final class R {
  public static final class anim {
    public static final int fragment_fast_out_extra_slow_in=0x7f010000;
    public static final int on_screen_hint_enter=0x7f010001;
    public static final int on_screen_hint_exit=0x7f010002;
    public static final int player_out=0x7f010003;
    public static final int slide_in_left=0x7f010004;
    public static final int slide_in_right=0x7f010005;
    public static final int slide_out_left=0x7f010006;
    public static final int slide_out_right=0x7f010007;
  }
  public static final class animator {
    public static final int fragment_close_enter=0x7f020000;
    public static final int fragment_close_exit=0x7f020001;
    public static final int fragment_fade_enter=0x7f020002;
    public static final int fragment_fade_exit=0x7f020003;
    public static final int fragment_open_enter=0x7f020004;
    public static final int fragment_open_exit=0x7f020005;
  }
  public static final class array {
    /**
     * These must correspond in order to the entries in CameraProfile.
     */
    public static final int camcorder_profile_names=0x7f030000;
    public static final int camera_flash_descriptions=0x7f030001;
    public static final int camera_flashmode_icons=0x7f030002;
    public static final int camera_flashmode_indicator_icons=0x7f030003;
    public static final int camera_flashmode_largeicons=0x7f030004;
    public static final int camera_id_descriptions=0x7f030005;
    public static final int camera_id_entries=0x7f030006;
    public static final int camera_id_entryvalues=0x7f030007;
    public static final int camera_id_icons=0x7f030008;
    public static final int camera_id_labels=0x7f030009;
    public static final int camera_id_largeicons=0x7f03000a;
    public static final int camera_mode_content_description=0x7f03000b;
    public static final int camera_mode_cover_icon=0x7f03000c;
    public static final int camera_mode_icon=0x7f03000d;
    /**
     * Camera modes that each supported mode is nested in in nav drawer.
     */
    public static final int camera_mode_nested_in_nav_drawer=0x7f03000e;
    public static final int camera_mode_shutter_icon=0x7f03000f;
    public static final int camera_mode_text=0x7f030010;
    public static final int camera_mode_theme_color=0x7f030011;
    /**
     * Ordered list of all camera modes.
     */
    public static final int camera_modes=0x7f030012;
    /**
     * An array of camera mode indices that should always be visible in mode drawer.
     */
    public static final int camera_modes_always_visible=0x7f030013;
    /**
     * An array of camera mode indices in the sequence of their appearance
     * in the mode drawer.
     */
    public static final int camera_modes_in_nav_drawer_if_supported=0x7f030014;
    public static final int countdown_duration_descriptions=0x7f030015;
    public static final int countdown_duration_icons=0x7f030016;
    public static final int grid_lines_descriptions=0x7f030017;
    public static final int grid_lines_icons=0x7f030018;
    public static final int grid_lines_indicator_icons=0x7f030019;
    public static final int hdr_descriptions=0x7f03001a;
    public static final int hdr_plus_descriptions=0x7f03001b;
    public static final int hdr_plus_flash_descriptions=0x7f03001c;
    public static final int pref_camera_countdown_indicators=0x7f03001d;
    /**
     * Labels for Countdown timer
     */
    public static final int pref_camera_countdown_labels=0x7f03001e;
    /**
     * Icons for exposure compensation
     */
    public static final int pref_camera_exposure_icons=0x7f03001f;
    /**
     * Camera Preferences flash mode dialog box entries
     */
    public static final int pref_camera_flashmode_entries=0x7f030020;
    public static final int pref_camera_flashmode_entryvalues=0x7f030021;
    public static final int pref_camera_flashmode_labels=0x7f030022;
    /**
     * Default focus mode setting.
     */
    public static final int pref_camera_focusmode_default_array=0x7f030023;
    /**
     * Camera Preferences focus mode dialog box entries
     */
    public static final int pref_camera_focusmode_entries=0x7f030024;
    public static final int pref_camera_focusmode_entryvalues=0x7f030025;
    public static final int pref_camera_focusmode_labels=0x7f030026;
    public static final int pref_camera_gridlines_entryvalues=0x7f030027;
    public static final int pref_camera_hdr_entries=0x7f030028;
    public static final int pref_camera_hdr_entryvalues=0x7f030029;
    public static final int pref_camera_hdr_icons=0x7f03002a;
    public static final int pref_camera_hdr_indicator_icons=0x7f03002b;
    public static final int pref_camera_hdr_labels=0x7f03002c;
    public static final int pref_camera_hdr_plus_entries=0x7f03002d;
    public static final int pref_camera_hdr_plus_entryvalues=0x7f03002e;
    public static final int pref_camera_hdr_plus_flashmode_entryvalues=0x7f03002f;
    public static final int pref_camera_hdr_plus_icons=0x7f030030;
    public static final int pref_camera_hdr_plus_indicator_icons=0x7f030031;
    public static final int pref_camera_hdr_plus_labels=0x7f030032;
    public static final int pref_camera_hdr_supportmode_entryvalues=0x7f030033;
    public static final int pref_camera_jpeg_quality_entryvalues=0x7f030034;
    public static final int pref_camera_pano_orientation_entryvalues=0x7f030035;
    /**
     * Camera Preferences Picture size dialog box entries
     */
    public static final int pref_camera_picturesize_entries=0x7f030036;
    /**
     * When launching the camera app first time, we will set the picture
     * size to the first one in the list that is also supported by the
     * driver
     */
    public static final int pref_camera_picturesize_entryvalues=0x7f030037;
    public static final int pref_camera_scenemode_entryvalues=0x7f030038;
    public static final int pref_camera_timer_sound_entries=0x7f030039;
    public static final int pref_camera_timer_sound_entryvalues=0x7f03003a;
    /**
     * Videocamera Preferences flash mode dialog box entries
     */
    public static final int pref_camera_video_flashmode_entries=0x7f03003b;
    public static final int pref_camera_video_flashmode_entryvalues=0x7f03003c;
    public static final int pref_camera_video_flashmode_labels=0x7f03003d;
    public static final int pref_countdown_duration=0x7f03003e;
    public static final int pref_default_boolean_entryvalues=0x7f03003f;
    public static final int pref_video_effect_entries=0x7f030040;
    public static final int pref_video_effect_entryvalues=0x7f030041;
    /**
     * Camera Preferences Video Quality entries
     */
    public static final int pref_video_quality_entries=0x7f030042;
    public static final int pref_video_quality_entryvalues=0x7f030043;
    public static final int settings_toggle_descriptions=0x7f030044;
    public static final int settings_toggle_icons=0x7f030045;
    public static final int shutter_button_backgrounds=0x7f030046;
    public static final int video_effect_icons=0x7f030047;
    public static final int video_flash_descriptions=0x7f030048;
    public static final int video_flashmode_icons=0x7f030049;
    public static final int video_flashmode_indicator_icons=0x7f03004a;
    public static final int video_flashmode_largeicons=0x7f03004b;
  }
  public static final class attr {
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f040000;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int borderAlpha=0x7f040001;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int borderColor=0x7f040002;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int borderLength=0x7f040003;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int borderWidth=0x7f040004;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int contentDescriptionIds=0x7f040005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f040006;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cornerRadius=0x7f040007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultValue=0x7f040008;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerLayoutStyle=0x7f040009;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f04000a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entries=0x7f04000b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entryValues=0x7f04000c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int finderOffset=0x7f04000d;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f04000e;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f04000f;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f040010;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f040011;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f040012;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f040013;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f040014;
    /**
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderSystemFontFamily=0x7f040015;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f040016;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f040017;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f040018;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icons=0x7f040019;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageIds=0x7f04001a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int images=0x7f04001b;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f04001c;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f04001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int labelList=0x7f04001e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int largeIcons=0x7f04001f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int laserColor=0x7f040020;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int laserEnabled=0x7f040021;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f040022;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f040023;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f040024;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f040025;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f040026;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f040027;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f040028;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int maskColor=0x7f040029;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int modes=0x7f04002a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int nestedScrollViewStyle=0x7f04002b;
    /**
     * Resource reference to the string array of query patterns for a custom capability.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryPatterns=0x7f04002c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int roundedCorner=0x7f04002d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selected_drawable=0x7f04002e;
    /**
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shortcutMatchRequired=0x7f04002f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shouldScaleToFill=0x7f040030;
    /**
     * If a preference does not have individual icons for each entry, it can has a single icon to represent it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleIcon=0x7f040031;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int squaredFinder=0x7f040032;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f040033;
    /**
     * Background color for SwipeRefreshLayout progress spinner.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int swipeRefreshLayoutProgressSpinnerBackgroundColor=0x7f040034;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f040035;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f040036;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f040037;
  }
  public static final class bool {
    /**
     * Specify the screen orientation
     */
    public static final int only_use_portrait=0x7f050000;
    public static final int picker_is_dialog=0x7f050001;
    public static final int show_action_bar_title=0x7f050002;
  }
  public static final class color {
    public static final int androidx_core_ripple_material_light=0x7f060000;
    public static final int androidx_core_secondary_text_default_material_light=0x7f060001;
    public static final int blue_button_text_color=0x7f060002;
    public static final int bottombar_pressed=0x7f060003;
    public static final int bright_foreground_disabled_holo_dark=0x7f060004;
    public static final int bright_foreground_holo_dark=0x7f060005;
    public static final int camera_gray_background=0x7f060006;
    public static final int camera_mode_color=0x7f060007;
    public static final int colorAccent=0x7f060008;
    public static final int crop_shadow_color=0x7f060009;
    public static final int crop_shadow_wp_color=0x7f06000a;
    public static final int crop_wp_markers=0x7f06000b;
    public static final int dialog_button_color=0x7f06000c;
    public static final int dialog_text_color=0x7f06000d;
    public static final int face_detect_start=0x7f06000e;
    public static final int focus_color=0x7f06000f;
    public static final int focus_debug=0x7f060010;
    public static final int focus_debug_fail=0x7f060011;
    public static final int focus_debug_success=0x7f060012;
    public static final int focus_debug_text=0x7f060013;
    public static final int focus_outer_ring_color=0x7f060014;
    public static final int fullscreen_dialog_background_color=0x7f060015;
    public static final int gray=0x7f060016;
    public static final int grid_line=0x7f060017;
    public static final int holo_blue_light=0x7f060018;
    public static final int ic_launcher_background=0x7f060019;
    public static final int icon_disabled_color=0x7f06001a;
    public static final int identify_background=0x7f06001b;
    public static final int identify_contact=0x7f06001c;
    public static final int identify_email=0x7f06001d;
    public static final int identify_event=0x7f06001e;
    public static final int identify_foreground=0x7f06001f;
    public static final int identify_http=0x7f060020;
    public static final int identify_location=0x7f060021;
    public static final int identify_phone=0x7f060022;
    public static final int identify_sms=0x7f060023;
    public static final int identify_text=0x7f060024;
    public static final int indicator_background=0x7f060025;
    public static final int indicators_background_color=0x7f060026;
    public static final int main_color_global=0x7f060027;
    public static final int mode_icon_hover_highlight=0x7f060028;
    public static final int mode_list_background=0x7f060029;
    public static final int mode_list_settings_icon_background=0x7f06002a;
    public static final int mode_list_settings_icon_pressed_background=0x7f06002b;
    public static final int mode_options_background=0x7f06002c;
    public static final int mode_selection_border=0x7f06002d;
    public static final int mode_selector_background_dark=0x7f06002e;
    public static final int mode_selector_background_light=0x7f06002f;
    public static final int mode_selector_icon_background=0x7f060030;
    /**
     * Camera mode switcher
     */
    public static final int mode_selector_text_color=0x7f060031;
    public static final int mode_selector_text_highlight_color=0x7f060032;
    public static final int notification_action_color_filter=0x7f060033;
    public static final int notification_icon_bg_color=0x7f060034;
    public static final int notification_material_background_media_default_color=0x7f060035;
    public static final int on_viewfinder_label_background_color=0x7f060036;
    public static final int pano_progress_done=0x7f060037;
    public static final int pano_progress_empty=0x7f060038;
    public static final int pano_progress_indication=0x7f060039;
    public static final int pano_progress_indication_fast=0x7f06003a;
    public static final int panorama_mode_color=0x7f06003b;
    public static final int photo_placeholder=0x7f06003c;
    public static final int photosphere_mode_color=0x7f06003d;
    public static final int popup_background=0x7f06003e;
    public static final int popup_title_color=0x7f06003f;
    public static final int primary_text=0x7f060040;
    public static final int primary_text_default_material_dark=0x7f060041;
    public static final int recording_time_elapsed_text=0x7f060042;
    public static final int recording_time_remaining_text=0x7f060043;
    public static final int refocus_mode_color=0x7f060044;
    public static final int review_background=0x7f060045;
    public static final int review_control_pressed_color=0x7f060046;
    public static final int review_control_pressed_fan_color=0x7f060047;
    public static final int scan_border=0x7f060048;
    public static final int scan_laser=0x7f060049;
    public static final int secondary_text_default_material_dark=0x7f06004a;
    public static final int settings_cling_color=0x7f06004b;
    public static final int time_lapse_arc=0x7f06004c;
    public static final int video_mode_color=0x7f06004d;
    public static final int viewfinder_bg=0x7f06004e;
    public static final int viewfinder_border=0x7f06004f;
    public static final int viewfinder_laser=0x7f060050;
    public static final int viewfinder_mask=0x7f060051;
    public static final int white=0x7f060052;
  }
  public static final class dimen {
    public static final int action_bar_arrow_margin_left=0x7f070000;
    public static final int action_bar_arrow_margin_right=0x7f070001;
    public static final int action_bar_icon_padding_left=0x7f070002;
    public static final int action_bar_icon_padding_right=0x7f070003;
    public static final int action_bar_icon_padding_vertical=0x7f070004;
    public static final int action_button_padding_horizontal=0x7f070005;
    public static final int action_button_padding_vertical=0x7f070006;
    public static final int action_item_height=0x7f070007;
    /**
     * configuration for album set page
     */
    public static final int album_set_item_image_height=0x7f070008;
    public static final int album_set_item_width=0x7f070009;
    public static final int album_slot_gap=0x7f07000a;
    public static final int albumset_count_font_size=0x7f07000b;
    public static final int albumset_count_offset=0x7f07000c;
    public static final int albumset_icon_size=0x7f07000d;
    public static final int albumset_label_background_height=0x7f07000e;
    public static final int albumset_left_margin=0x7f07000f;
    public static final int albumset_padding_bottom=0x7f070010;
    public static final int albumset_padding_top=0x7f070011;
    public static final int albumset_slot_gap=0x7f070012;
    public static final int albumset_title_font_size=0x7f070013;
    public static final int albumset_title_offset=0x7f070014;
    public static final int albumset_title_right_margin=0x7f070015;
    public static final int appwidget_height=0x7f070016;
    public static final int appwidget_width=0x7f070017;
    public static final int big_setting_popup_window_width=0x7f070018;
    public static final int big_setting_popup_window_width_xlarge=0x7f070019;
    public static final int bottom_bar_button_spacing=0x7f07001a;
    public static final int bottom_bar_height_max=0x7f07001b;
    /**
     * Bottom bar ui
     */
    public static final int bottom_bar_height_min=0x7f07001c;
    public static final int bottom_bar_height_optimal=0x7f07001d;
    public static final int cache_pin_margin=0x7f07001e;
    /**
     * configuration for manage page
     */
    public static final int cache_pin_size=0x7f07001f;
    public static final int camera_controls_padding_end=0x7f070020;
    public static final int camera_controls_padding_start=0x7f070021;
    public static final int camera_controls_size=0x7f070022;
    public static final int camera_film_strip_gap=0x7f070023;
    public static final int capture_border=0x7f070024;
    public static final int capture_margin_right=0x7f070025;
    public static final int capture_margin_top=0x7f070026;
    public static final int capture_size=0x7f070027;
    public static final int capture_top_margin=0x7f070028;
    /**
     * Category Panel Height
     * Category Panel Height
     */
    public static final int category_panel_height=0x7f070029;
    /**
     * Category Panel Icon Size
     * Category Panel Icon Size
     */
    public static final int category_panel_icon_size=0x7f07002a;
    /**
     * Category Panel Text Size
     */
    public static final int category_panel_margin=0x7f07002b;
    /**
     * Category Panel Text Size
     */
    public static final int category_panel_text_size=0x7f07002c;
    public static final int compat_button_inset_horizontal_material=0x7f07002d;
    public static final int compat_button_inset_vertical_material=0x7f07002e;
    public static final int compat_button_padding_horizontal_material=0x7f07002f;
    public static final int compat_button_padding_vertical_material=0x7f070030;
    public static final int compat_control_corner_material=0x7f070031;
    public static final int compat_notification_large_icon_max_height=0x7f070032;
    public static final int compat_notification_large_icon_max_width=0x7f070033;
    public static final int crop_indicator_size=0x7f070034;
    public static final int crop_min_side=0x7f070035;
    public static final int crop_touch_tolerance=0x7f070036;
    public static final int def_drawer_elevation=0x7f070037;
    public static final int default_cling_width=0x7f070038;
    public static final int effect_icon_size=0x7f070039;
    public static final int effect_label_margin_top=0x7f07003a;
    public static final int effect_label_text_size=0x7f07003b;
    public static final int effect_label_width=0x7f07003c;
    public static final int effect_padding_horizontal=0x7f07003d;
    public static final int effect_setting_clear_text_min_height=0x7f07003e;
    public static final int effect_setting_clear_text_min_height_xlarge=0x7f07003f;
    public static final int effect_setting_clear_text_size=0x7f070040;
    public static final int effect_setting_clear_text_size_xlarge=0x7f070041;
    public static final int effect_setting_item_icon_width=0x7f070042;
    public static final int effect_setting_item_icon_width_xlarge=0x7f070043;
    public static final int effect_setting_item_text_size=0x7f070044;
    public static final int effect_setting_item_text_size_xlarge=0x7f070045;
    public static final int effect_setting_type_text_left_padding=0x7f070046;
    public static final int effect_setting_type_text_left_padding_xlarge=0x7f070047;
    public static final int effect_setting_type_text_min_height=0x7f070048;
    public static final int effect_setting_type_text_min_height_xlarge=0x7f070049;
    public static final int effect_setting_type_text_size=0x7f07004a;
    public static final int effect_setting_type_text_size_xlarge=0x7f07004b;
    public static final int effect_tool_panel_padding_bottom=0x7f07004c;
    public static final int effect_tool_panel_padding_top=0x7f07004d;
    public static final int effects_container_padding=0x7f07004e;
    public static final int effects_menu_container_width=0x7f07004f;
    public static final int face_circle_stroke=0x7f070050;
    /**
     * Filmstrip bottom controls
     */
    public static final int filmstrip_bottom_control_button_size=0x7f070051;
    public static final int filmstrip_bottom_control_layout_size=0x7f070052;
    public static final int filmstrip_bottom_control_middle_two_buttons_layout_size=0x7f070053;
    public static final int filmstrip_bottom_control_spacing=0x7f070054;
    public static final int flash_circle_size_after_shrink=0x7f070055;
    public static final int focus_circle_initial_size=0x7f070056;
    public static final int focus_circle_max_size=0x7f070057;
    public static final int focus_circle_min_size=0x7f070058;
    public static final int focus_circle_stroke=0x7f070059;
    public static final int focus_debug_stroke=0x7f07005a;
    public static final int focus_inner_offset=0x7f07005b;
    public static final int focus_inner_ring_size=0x7f07005c;
    public static final int focus_inner_stroke=0x7f07005d;
    public static final int focus_outer_ring_size=0x7f07005e;
    public static final int focus_outer_stroke=0x7f07005f;
    public static final int focus_radius_offset=0x7f070060;
    public static final int grid_line_width=0x7f070061;
    public static final int indicator_bar_width=0x7f070062;
    public static final int indicator_bar_width_large=0x7f070063;
    public static final int indicator_bar_width_xlarge=0x7f070064;
    public static final int indicator_icon_height=0x7f070065;
    public static final int indicator_icon_width=0x7f070066;
    public static final int indicator_overlay_padding=0x7f070067;
    /**
     * for manage cache bar
     * for manage cache bar
     */
    public static final int manage_cache_bottom_height=0x7f070068;
    public static final int mode_list_settings_icon_margin=0x7f070069;
    public static final int mode_list_settings_icon_size=0x7f07006a;
    public static final int mode_option_height=0x7f07006b;
    public static final int mode_option_width=0x7f07006c;
    public static final int mode_options_buttons_anim_delta_x=0x7f07006d;
    public static final int mode_options_height=0x7f07006e;
    public static final int mode_options_toggle_padding=0x7f07006f;
    /**
     * Mode selector icon width
     * Mode selector icon width
     */
    public static final int mode_selector_icon_block_width=0x7f070070;
    public static final int mode_selector_icon_drawable_size=0x7f070071;
    public static final int mode_selector_item_height=0x7f070072;
    /**
     * Mode selector text size
     * Mode selector text size
     */
    public static final int mode_selector_text_size=0x7f070073;
    public static final int mode_transition_view_icon_size=0x7f070074;
    public static final int navigation_bar_height=0x7f070075;
    public static final int navigation_bar_width=0x7f070076;
    public static final int notification_action_icon_size=0x7f070077;
    public static final int notification_action_text_size=0x7f070078;
    public static final int notification_big_circle_margin=0x7f070079;
    public static final int notification_content_margin_start=0x7f07007a;
    public static final int notification_large_icon_height=0x7f07007b;
    public static final int notification_large_icon_width=0x7f07007c;
    public static final int notification_main_column_padding_top=0x7f07007d;
    public static final int notification_media_narrow_margin=0x7f07007e;
    public static final int notification_right_icon_size=0x7f07007f;
    public static final int notification_right_side_padding_top=0x7f070080;
    public static final int notification_small_icon_background_padding=0x7f070081;
    public static final int notification_small_icon_size_as_large=0x7f070082;
    public static final int notification_subtext_size=0x7f070083;
    public static final int notification_top_pad=0x7f070084;
    public static final int notification_top_pad_large_text=0x7f070085;
    public static final int onscreen_exposure_indicator_text_size=0x7f070086;
    public static final int onscreen_exposure_indicator_text_size_xlarge=0x7f070087;
    public static final int onscreen_indicators_height=0x7f070088;
    public static final int onscreen_indicators_height_large=0x7f070089;
    public static final int onscreen_indicators_height_xlarge=0x7f07008a;
    public static final int option_button_circle_size=0x7f07008b;
    public static final int pano_mosaic_surface_height=0x7f07008c;
    public static final int pano_mosaic_surface_height_xlarge=0x7f07008d;
    public static final int pano_review_button_height=0x7f07008e;
    public static final int pano_review_button_height_xlarge=0x7f07008f;
    public static final int pano_review_button_width=0x7f070090;
    public static final int pano_review_button_width_xlarge=0x7f070091;
    public static final int photoeditor_original_text_margin=0x7f070092;
    public static final int photoeditor_original_text_size=0x7f070093;
    public static final int photoeditor_text_padding=0x7f070094;
    /**
     * configuration for preview in editor
     */
    public static final int photoeditor_text_size=0x7f070095;
    public static final int pie_anglezone_width=0x7f070096;
    public static final int pie_arc_offset=0x7f070097;
    public static final int pie_arc_radius=0x7f070098;
    public static final int pie_deadzone_width=0x7f070099;
    public static final int pie_item_radius=0x7f07009a;
    public static final int pie_progress_radius=0x7f07009b;
    public static final int pie_progress_width=0x7f07009c;
    public static final int pie_radius_increment=0x7f07009d;
    public static final int pie_radius_start=0x7f07009e;
    public static final int pie_touch_offset=0x7f07009f;
    public static final int pie_touch_slop=0x7f0700a0;
    public static final int pie_view_size=0x7f0700a1;
    public static final int popup_title_frame_min_height=0x7f0700a2;
    public static final int popup_title_frame_min_height_xlarge=0x7f0700a3;
    public static final int popup_title_text_size=0x7f0700a4;
    public static final int popup_title_text_size_xlarge=0x7f0700a5;
    public static final int preview_margin=0x7f0700a6;
    public static final int rounded_thumbnail_diameter_max=0x7f0700a7;
    public static final int rounded_thumbnail_diameter_min=0x7f0700a8;
    public static final int rounded_thumbnail_diameter_normal=0x7f0700a9;
    public static final int rounded_thumbnail_padding=0x7f0700aa;
    public static final int rounded_thumbnail_ripple_ring_diameter_max=0x7f0700ab;
    public static final int rounded_thumbnail_ripple_ring_diameter_min=0x7f0700ac;
    public static final int rounded_thumbnail_ripple_ring_thick_max=0x7f0700ad;
    public static final int rounded_thumbnail_ripple_ring_thick_min=0x7f0700ae;
    public static final int seekbar_height=0x7f0700af;
    public static final int seekbar_padding_horizontal=0x7f0700b0;
    public static final int seekbar_padding_vertical=0x7f0700b1;
    public static final int seekbar_width=0x7f0700b2;
    public static final int setting_item_icon_width=0x7f0700b3;
    public static final int setting_item_icon_width_large=0x7f0700b4;
    public static final int setting_item_icon_width_xlarge=0x7f0700b5;
    public static final int setting_item_list_margin=0x7f0700b6;
    public static final int setting_item_list_margin_xlarge=0x7f0700b7;
    public static final int setting_item_text_size=0x7f0700b8;
    public static final int setting_item_text_size_xlarge=0x7f0700b9;
    public static final int setting_item_text_width=0x7f0700ba;
    public static final int setting_item_text_width_xlarge=0x7f0700bb;
    public static final int setting_knob_text_size=0x7f0700bc;
    public static final int setting_knob_width=0x7f0700bd;
    public static final int setting_knob_width_xlarge=0x7f0700be;
    public static final int setting_popup_right_margin=0x7f0700bf;
    public static final int setting_popup_right_margin_large=0x7f0700c0;
    public static final int setting_popup_window_width=0x7f0700c1;
    public static final int setting_popup_window_width_large=0x7f0700c2;
    public static final int setting_popup_window_width_xlarge=0x7f0700c3;
    public static final int setting_row_height=0x7f0700c4;
    public static final int setting_row_height_large=0x7f0700c5;
    public static final int setting_row_height_xlarge=0x7f0700c6;
    public static final int settings_cling_triangle_height=0x7f0700c7;
    public static final int settings_cling_triangle_width=0x7f0700c8;
    public static final int settings_cling_width=0x7f0700c9;
    public static final int shadow_margin=0x7f0700ca;
    public static final int shutter_offset=0x7f0700cb;
    public static final int size_preview=0x7f0700cc;
    public static final int size_thumbnail=0x7f0700cd;
    public static final int stack_photo_height=0x7f0700ce;
    public static final int stack_photo_width=0x7f0700cf;
    public static final int switch_min_width=0x7f0700d0;
    public static final int switch_padding=0x7f0700d1;
    public static final int switch_text_max_width=0x7f0700d2;
    public static final int switcher_size=0x7f0700d3;
    public static final int thumb_text_padding=0x7f0700d4;
    public static final int thumb_text_size=0x7f0700d5;
    public static final int thumbnail_margin=0x7f0700d6;
    /**
     * configuration for filtershow UI
     * configuration for filtershow UI
     */
    public static final int thumbnail_size=0x7f0700d7;
    public static final int video_capture_circle_diameter=0x7f0700d8;
    public static final int wp_selector_dash_length=0x7f0700d9;
    public static final int wp_selector_off_length=0x7f0700da;
    public static final int zoom_stroke=0x7f0700db;
  }
  public static final class drawable {
    public static final int actionbar_translucent=0x7f080001;
    public static final int aspect_ratio_16x9=0x7f080002;
    public static final int aspect_ratio_16x9_selected=0x7f080003;
    public static final int aspect_ratio_16x9_unselected=0x7f080004;
    public static final int aspect_ratio_4x3=0x7f080005;
    public static final int aspect_ratio_4x3_selected=0x7f080006;
    public static final int aspect_ratio_4x3_unselected=0x7f080007;
    public static final int background=0x7f080008;
    public static final int bg_circle=0x7f080009;
    public static final int bg_options_indicator=0x7f08000a;
    public static final int bg_pressed=0x7f08000b;
    public static final int bg_pressed_exit_fading=0x7f08000c;
    public static final int bg_text_on_preview=0x7f08000d;
    public static final int bottom_progress_bar=0x7f08000e;
    public static final int btn_cling=0x7f08000f;
    public static final int btn_cling_pressed=0x7f080010;
    public static final int btn_new_shutter=0x7f080011;
    public static final int btn_shutter_default=0x7f080012;
    public static final int btn_shutter_pressed=0x7f080013;
    public static final int btn_video_shutter_recording_holo=0x7f080014;
    public static final int btn_video_shutter_recording_holo_large=0x7f080015;
    public static final int btn_video_shutter_recording_holo_xlarge=0x7f080016;
    public static final int btn_video_shutter_recording_pressed_holo=0x7f080017;
    public static final int btn_video_shutter_recording_pressed_holo_large=0x7f080018;
    public static final int btn_video_shutter_recording_pressed_holo_xlarge=0x7f080019;
    public static final int button_background_pressed_dark=0x7f08001a;
    public static final int button_background_pressed_light=0x7f08001b;
    public static final int button_background_selected_pano=0x7f08001c;
    public static final int button_background_selected_photo=0x7f08001d;
    public static final int button_cling=0x7f08001e;
    public static final int checkbox_material_black=0x7f08001f;
    public static final int circle_bg_pressed_exit_fading=0x7f080020;
    public static final int cling=0x7f080021;
    public static final int cover=0x7f080022;
    public static final int crop_background=0x7f080023;
    public static final int filmstrip_button_background=0x7f080024;
    public static final int geo_opt_in_graphic=0x7f080025;
    public static final int ic_auto_focus=0x7f080026;
    public static final int ic_auto_focus_disabled=0x7f080027;
    public static final int ic_auto_focus_normal=0x7f080028;
    public static final int ic_back=0x7f080029;
    public static final int ic_back_disabled=0x7f08002a;
    public static final int ic_back_normal=0x7f08002b;
    public static final int ic_box_checked=0x7f08002c;
    public static final int ic_box_unchecked=0x7f08002d;
    public static final int ic_btn_shutter_retake=0x7f08002e;
    public static final int ic_camera=0x7f08002f;
    public static final int ic_camera_blanket=0x7f080030;
    public static final int ic_camera_blanket_vector=0x7f080031;
    public static final int ic_camera_disabled=0x7f080032;
    public static final int ic_camera_normal=0x7f080033;
    public static final int ic_cancel=0x7f080034;
    public static final int ic_cancel_disabled=0x7f080035;
    public static final int ic_cancel_normal=0x7f080036;
    public static final int ic_capture_camera=0x7f080037;
    public static final int ic_capture_camera_disabled=0x7f080038;
    public static final int ic_capture_camera_normal=0x7f080039;
    public static final int ic_capture_options=0x7f08003a;
    public static final int ic_capture_pano=0x7f08003b;
    public static final int ic_capture_pano_disabled=0x7f08003c;
    public static final int ic_capture_panorama=0x7f08003d;
    public static final int ic_capture_refocus=0x7f08003e;
    public static final int ic_capture_refocus_disabled=0x7f08003f;
    public static final int ic_capture_video=0x7f080040;
    public static final int ic_capture_video_disabled=0x7f080041;
    public static final int ic_confirm=0x7f080042;
    public static final int ic_confirm_disabled=0x7f080043;
    public static final int ic_confirm_normal=0x7f080044;
    public static final int ic_contact=0x7f080045;
    public static final int ic_control_play=0x7f080046;
    public static final int ic_craft=0x7f080047;
    public static final int ic_craft_disabled=0x7f080048;
    public static final int ic_craft_normal=0x7f080049;
    public static final int ic_edit_disabled=0x7f08004a;
    public static final int ic_edit_normal=0x7f08004b;
    public static final int ic_effects_holo_light=0x7f08004c;
    public static final int ic_effects_holo_light_large=0x7f08004d;
    public static final int ic_effects_holo_light_xlarge=0x7f08004e;
    public static final int ic_email=0x7f08004f;
    public static final int ic_error_normal=0x7f080050;
    public static final int ic_event=0x7f080051;
    public static final int ic_exposure=0x7f080052;
    public static final int ic_exposure_0=0x7f080053;
    public static final int ic_exposure_disabled=0x7f080054;
    public static final int ic_exposure_n1=0x7f080055;
    public static final int ic_exposure_n1_indicator=0x7f080056;
    public static final int ic_exposure_n2=0x7f080057;
    public static final int ic_exposure_n2_indicator=0x7f080058;
    public static final int ic_exposure_n3=0x7f080059;
    public static final int ic_exposure_normal=0x7f08005a;
    public static final int ic_exposure_p1=0x7f08005b;
    public static final int ic_exposure_p1_indicator=0x7f08005c;
    public static final int ic_exposure_p2=0x7f08005d;
    public static final int ic_exposure_p2_indicator=0x7f08005e;
    public static final int ic_exposure_p3=0x7f08005f;
    public static final int ic_flash_auto=0x7f080060;
    public static final int ic_flash_auto_disabled=0x7f080061;
    public static final int ic_flash_auto_indicator=0x7f080062;
    public static final int ic_flash_auto_normal=0x7f080063;
    public static final int ic_flash_off=0x7f080064;
    public static final int ic_flash_off_disabled=0x7f080065;
    public static final int ic_flash_off_indicator=0x7f080066;
    public static final int ic_flash_off_normal=0x7f080067;
    public static final int ic_flash_on=0x7f080068;
    public static final int ic_flash_on_disabled=0x7f080069;
    public static final int ic_flash_on_indicator=0x7f08006a;
    public static final int ic_flash_on_normal=0x7f08006b;
    public static final int ic_gallery_play=0x7f08006c;
    public static final int ic_gallery_play_big=0x7f08006d;
    public static final int ic_grid_off=0x7f08006e;
    public static final int ic_grid_off_disabled=0x7f08006f;
    public static final int ic_grid_off_indicator=0x7f080070;
    public static final int ic_grid_off_normal=0x7f080071;
    public static final int ic_grid_on=0x7f080072;
    public static final int ic_grid_on_disabled=0x7f080073;
    public static final int ic_grid_on_indicator=0x7f080074;
    public static final int ic_grid_on_normal=0x7f080075;
    public static final int ic_hdr=0x7f080076;
    public static final int ic_hdr_off=0x7f080077;
    public static final int ic_hdr_off_disabled=0x7f080078;
    public static final int ic_hdr_off_indicator=0x7f080079;
    public static final int ic_hdr_off_normal=0x7f08007a;
    public static final int ic_hdr_on=0x7f08007b;
    public static final int ic_hdr_on_disabled=0x7f08007c;
    public static final int ic_hdr_on_indicator=0x7f08007d;
    public static final int ic_hdr_on_normal=0x7f08007e;
    public static final int ic_hdr_plus_off=0x7f08007f;
    public static final int ic_hdr_plus_off_disabled=0x7f080080;
    public static final int ic_hdr_plus_off_indicator=0x7f080081;
    public static final int ic_hdr_plus_off_normal=0x7f080082;
    public static final int ic_hdr_plus_on=0x7f080083;
    public static final int ic_hdr_plus_on_disabled=0x7f080084;
    public static final int ic_hdr_plus_on_indicator=0x7f080085;
    public static final int ic_hdr_plus_on_normal=0x7f080086;
    public static final int ic_http=0x7f080087;
    public static final int ic_launcher_background=0x7f080088;
    public static final int ic_launcher_foreground=0x7f080089;
    public static final int ic_location=0x7f08008a;
    public static final int ic_manual_focus=0x7f08008b;
    public static final int ic_manual_focus_disabled=0x7f08008c;
    public static final int ic_manual_focus_normal=0x7f08008d;
    public static final int ic_menu_cancel_holo_light=0x7f08008e;
    public static final int ic_menu_done_holo_light=0x7f08008f;
    public static final int ic_menu_edit=0x7f080090;
    public static final int ic_menu_info_details=0x7f080091;
    public static final int ic_menu_revert_holo_dark=0x7f080092;
    public static final int ic_menu_savephoto=0x7f080093;
    public static final int ic_menu_savephoto_disabled=0x7f080094;
    public static final int ic_menu_trash=0x7f080095;
    public static final int ic_notification=0x7f080096;
    public static final int ic_options=0x7f080097;
    public static final int ic_options_active=0x7f080098;
    public static final int ic_options_land=0x7f080099;
    public static final int ic_options_port=0x7f08009a;
    public static final int ic_pan_border_fast=0x7f08009b;
    public static final int ic_pan_border_fast_large=0x7f08009c;
    public static final int ic_pan_border_fast_xlarge=0x7f08009d;
    public static final int ic_pan_left_indicator=0x7f08009e;
    public static final int ic_pan_left_indicator_fast=0x7f08009f;
    public static final int ic_pan_left_indicator_fast_large=0x7f0800a0;
    public static final int ic_pan_left_indicator_fast_xlarge=0x7f0800a1;
    public static final int ic_pan_left_indicator_large=0x7f0800a2;
    public static final int ic_pan_left_indicator_xlarge=0x7f0800a3;
    public static final int ic_pan_progression=0x7f0800a4;
    public static final int ic_pan_progression_large=0x7f0800a5;
    public static final int ic_pan_progression_xlarge=0x7f0800a6;
    public static final int ic_pan_right_indicator=0x7f0800a7;
    public static final int ic_pan_right_indicator_fast=0x7f0800a8;
    public static final int ic_pan_right_indicator_fast_large=0x7f0800a9;
    public static final int ic_pan_right_indicator_fast_xlarge=0x7f0800aa;
    public static final int ic_pan_right_indicator_large=0x7f0800ab;
    public static final int ic_pan_right_indicator_xlarge=0x7f0800ac;
    public static final int ic_pano_blanket=0x7f0800ad;
    public static final int ic_panorama_normal=0x7f0800ae;
    public static final int ic_phone=0x7f0800af;
    public static final int ic_photosphere_blanket=0x7f0800b0;
    public static final int ic_photosphere_normal=0x7f0800b1;
    public static final int ic_play=0x7f0800b2;
    public static final int ic_play_disabled=0x7f0800b3;
    public static final int ic_play_normal=0x7f0800b4;
    public static final int ic_qr_close=0x7f0800b5;
    public static final int ic_qr_flash_off=0x7f0800b6;
    public static final int ic_qr_flash_on=0x7f0800b7;
    public static final int ic_qr_shortcut=0x7f0800b8;
    public static final int ic_qr_tile=0x7f0800b9;
    public static final int ic_recording_indicator=0x7f0800ba;
    public static final int ic_refocus=0x7f0800bb;
    public static final int ic_refocus_blanket=0x7f0800bc;
    public static final int ic_refocus_disabled=0x7f0800bd;
    public static final int ic_refocus_normal=0x7f0800be;
    public static final int ic_scn_holo_light=0x7f0800bf;
    public static final int ic_scn_holo_light_large=0x7f0800c0;
    public static final int ic_scn_holo_light_xlarge=0x7f0800c1;
    public static final int ic_settings_normal=0x7f0800c2;
    public static final int ic_share=0x7f0800c3;
    public static final int ic_share_disabled=0x7f0800c4;
    public static final int ic_share_normal=0x7f0800c5;
    public static final int ic_sms=0x7f0800c6;
    public static final int ic_snapshot_border=0x7f0800c7;
    public static final int ic_snapshot_border_large=0x7f0800c8;
    public static final int ic_snapshot_border_xlarge=0x7f0800c9;
    public static final int ic_stop=0x7f0800ca;
    public static final int ic_stop_disabled=0x7f0800cb;
    public static final int ic_stop_normal=0x7f0800cc;
    public static final int ic_switch_camera=0x7f0800cd;
    public static final int ic_switch_camera_back=0x7f0800ce;
    public static final int ic_switch_camera_back_disabled=0x7f0800cf;
    public static final int ic_switch_camera_back_normal=0x7f0800d0;
    public static final int ic_switch_camera_front=0x7f0800d1;
    public static final int ic_switch_camera_front_disabled=0x7f0800d2;
    public static final int ic_switch_camera_front_normal=0x7f0800d3;
    public static final int ic_switch_photo_facing_holo_light=0x7f0800d4;
    public static final int ic_switch_photo_facing_holo_light_large=0x7f0800d5;
    public static final int ic_switch_photo_facing_holo_light_xlarge=0x7f0800d6;
    public static final int ic_switch_video=0x7f0800d7;
    public static final int ic_switch_video_facing_holo_light=0x7f0800d8;
    public static final int ic_switch_video_facing_holo_light_large=0x7f0800d9;
    public static final int ic_switch_video_facing_holo_light_xlarge=0x7f0800da;
    public static final int ic_text=0x7f0800db;
    public static final int ic_timer=0x7f0800dc;
    public static final int ic_timer_10s=0x7f0800dd;
    public static final int ic_timer_10s_disabled=0x7f0800de;
    public static final int ic_timer_10s_indicator=0x7f0800df;
    public static final int ic_timer_10s_normal=0x7f0800e0;
    public static final int ic_timer_3s=0x7f0800e1;
    public static final int ic_timer_3s_disabled=0x7f0800e2;
    public static final int ic_timer_3s_indicator=0x7f0800e3;
    public static final int ic_timer_3s_normal=0x7f0800e4;
    public static final int ic_timer_off=0x7f0800e5;
    public static final int ic_timer_off_disabled=0x7f0800e6;
    public static final int ic_timer_off_indicator=0x7f0800e7;
    public static final int ic_timer_off_normal=0x7f0800e8;
    public static final int ic_trash_disabled=0x7f0800e9;
    public static final int ic_trash_normal=0x7f0800ea;
    public static final int ic_video=0x7f0800eb;
    public static final int ic_video_blanket=0x7f0800ec;
    public static final int ic_video_disabled=0x7f0800ed;
    public static final int ic_video_effects_background_fields_of_wheat_holo=0x7f0800ee;
    public static final int ic_video_effects_background_intergalactic_holo=0x7f0800ef;
    public static final int ic_video_effects_background_normal_holo_dark=0x7f0800f0;
    public static final int ic_video_effects_faces_big_eyes_holo_dark=0x7f0800f1;
    public static final int ic_video_effects_faces_big_mouth_holo_dark=0x7f0800f2;
    public static final int ic_video_effects_faces_big_nose_holo_dark=0x7f0800f3;
    public static final int ic_video_effects_faces_small_eyes_holo_dark=0x7f0800f4;
    public static final int ic_video_effects_faces_small_mouth_holo_dark=0x7f0800f5;
    public static final int ic_video_effects_faces_squeeze_holo_dark=0x7f0800f6;
    public static final int ic_video_normal=0x7f0800f7;
    public static final int ic_view_photosphere=0x7f0800f8;
    public static final int ic_wide_angle=0x7f0800f9;
    public static final int ic_wide_angle_disabled=0x7f0800fa;
    public static final int ic_wide_angle_normal=0x7f0800fb;
    public static final int list_divider=0x7f0800fc;
    public static final int list_divider_large=0x7f0800fd;
    public static final int list_pressed_holo_light=0x7f0800fe;
    public static final int menu_bg_pressed=0x7f0800ff;
    public static final int mode_icon_background=0x7f080100;
    public static final int notification_action_background=0x7f080101;
    public static final int notification_bg=0x7f080102;
    public static final int notification_bg_low=0x7f080103;
    public static final int notification_bg_low_normal=0x7f080104;
    public static final int notification_bg_low_pressed=0x7f080105;
    public static final int notification_bg_normal=0x7f080106;
    public static final int notification_bg_normal_pressed=0x7f080107;
    public static final int notification_icon_background=0x7f080108;
    public static final int notification_template_icon_bg=0x7f080109;
    public static final int notification_template_icon_low_bg=0x7f08010a;
    public static final int notification_tile_bg=0x7f08010b;
    public static final int notify_panel_notification_icon_bg=0x7f08010c;
    public static final int panel_undo_holo=0x7f08010d;
    public static final int placeholder_locked=0x7f08010e;
    public static final int preview=0x7f08010f;
    public static final int progress_bg=0x7f080110;
    public static final int progress_primary=0x7f080111;
    public static final int settings_cling=0x7f080112;
    public static final int settings_gear_background=0x7f080113;
    public static final int settings_gear_background_normal=0x7f080114;
    public static final int settings_gear_background_pressed=0x7f080115;
    public static final int shutter_button_background_camera=0x7f080116;
    public static final int shutter_button_background_panorama=0x7f080117;
    public static final int shutter_button_background_photosphere=0x7f080118;
    public static final int shutter_button_background_refocus=0x7f080119;
    public static final int shutter_button_background_still=0x7f08011a;
    public static final int shutter_button_background_video=0x7f08011b;
    public static final int stgs_cling=0x7f08011c;
    public static final int stgs_cling_pressed=0x7f08011d;
    public static final int switch_bg_focused_holo_dark=0x7f08011e;
    public static final int switch_bg_holo_dark=0x7f08011f;
    public static final int switch_thumb_activated_holo_dark=0x7f080120;
    public static final int switch_thumb_disabled_holo_dark=0x7f080121;
    public static final int switch_thumb_holo_dark=0x7f080122;
    public static final int switch_thumb_pressed_holo_dark=0x7f080123;
    public static final int transparent_button_background=0x7f080124;
  }
  public static final class id {
    public static final int accessibility_action_clickable_span=0x7f090000;
    public static final int accessibility_affordances=0x7f090001;
    public static final int accessibility_custom_action_0=0x7f090002;
    public static final int accessibility_custom_action_1=0x7f090003;
    public static final int accessibility_custom_action_10=0x7f090004;
    public static final int accessibility_custom_action_11=0x7f090005;
    public static final int accessibility_custom_action_12=0x7f090006;
    public static final int accessibility_custom_action_13=0x7f090007;
    public static final int accessibility_custom_action_14=0x7f090008;
    public static final int accessibility_custom_action_15=0x7f090009;
    public static final int accessibility_custom_action_16=0x7f09000a;
    public static final int accessibility_custom_action_17=0x7f09000b;
    public static final int accessibility_custom_action_18=0x7f09000c;
    public static final int accessibility_custom_action_19=0x7f09000d;
    public static final int accessibility_custom_action_2=0x7f09000e;
    public static final int accessibility_custom_action_20=0x7f09000f;
    public static final int accessibility_custom_action_21=0x7f090010;
    public static final int accessibility_custom_action_22=0x7f090011;
    public static final int accessibility_custom_action_23=0x7f090012;
    public static final int accessibility_custom_action_24=0x7f090013;
    public static final int accessibility_custom_action_25=0x7f090014;
    public static final int accessibility_custom_action_26=0x7f090015;
    public static final int accessibility_custom_action_27=0x7f090016;
    public static final int accessibility_custom_action_28=0x7f090017;
    public static final int accessibility_custom_action_29=0x7f090018;
    public static final int accessibility_custom_action_3=0x7f090019;
    public static final int accessibility_custom_action_30=0x7f09001a;
    public static final int accessibility_custom_action_31=0x7f09001b;
    public static final int accessibility_custom_action_4=0x7f09001c;
    public static final int accessibility_custom_action_5=0x7f09001d;
    public static final int accessibility_custom_action_6=0x7f09001e;
    public static final int accessibility_custom_action_7=0x7f09001f;
    public static final int accessibility_custom_action_8=0x7f090020;
    public static final int accessibility_custom_action_9=0x7f090021;
    public static final int accessibility_filmstrip_toggle_button=0x7f090022;
    public static final int accessibility_mode_toggle_button=0x7f090023;
    public static final int accessibility_zoom_minus_button=0x7f090024;
    public static final int accessibility_zoom_plus_button=0x7f090025;
    public static final int action0=0x7f090026;
    public static final int action_close=0x7f090027;
    public static final int action_container=0x7f090028;
    public static final int action_details=0x7f090029;
    public static final int action_divider=0x7f09002a;
    public static final int action_flash=0x7f09002b;
    public static final int action_image=0x7f09002c;
    public static final int action_select_all=0x7f09002d;
    public static final int action_text=0x7f09002e;
    public static final int action_toggle_full_caching=0x7f09002f;
    public static final int actions=0x7f090030;
    public static final int activity_root_view=0x7f090031;
    public static final int all=0x7f090032;
    public static final int angleSlider=0x7f090033;
    public static final int aspect_ratio_16x9_button=0x7f090034;
    public static final int aspect_ratio_4x3_button=0x7f090035;
    public static final int aspect_ratio_selector=0x7f090036;
    public static final int async=0x7f090037;
    public static final int blocking=0x7f090038;
    public static final int bottom=0x7f090039;
    public static final int bottom_bar=0x7f09003a;
    public static final int bottom_control_panel=0x7f09003b;
    public static final int bottom_progress_error_panel=0x7f09003c;
    public static final int bottom_progress_error_text=0x7f09003d;
    public static final int bottom_progress_panel=0x7f09003e;
    public static final int bottom_session_progress_bar=0x7f09003f;
    public static final int bottom_session_progress_text=0x7f090040;
    public static final int bottombar_cancel=0x7f090041;
    public static final int bottombar_capture=0x7f090042;
    public static final int bottombar_intent_review=0x7f090043;
    public static final int btn_cancel=0x7f090044;
    public static final int btn_done=0x7f090045;
    public static final int btn_play=0x7f090046;
    public static final int btn_retake=0x7f090047;
    public static final int camera_app_root=0x7f090048;
    public static final int camera_controls=0x7f090049;
    public static final int camera_filmstrip_content_layout=0x7f09004a;
    public static final int camera_toggle_button=0x7f09004b;
    public static final int camera_undo_deletion_bar=0x7f09004c;
    public static final int camera_undo_deletion_button=0x7f09004d;
    public static final int cancel_action=0x7f09004e;
    public static final int cancel_button=0x7f09004f;
    public static final int capture_overlay=0x7f090050;
    public static final int center=0x7f090051;
    public static final int center_horizontal=0x7f090052;
    public static final int center_vertical=0x7f090053;
    public static final int check_box=0x7f090054;
    public static final int chronometer=0x7f090055;
    public static final int circle_item=0x7f090056;
    public static final int clip_horizontal=0x7f090057;
    public static final int clip_vertical=0x7f090058;
    public static final int confirm_button=0x7f090059;
    public static final int content=0x7f09005a;
    public static final int count_down_view=0x7f09005b;
    public static final int countdown_timer_indicator=0x7f09005c;
    public static final int countdown_toggle_button=0x7f09005d;
    public static final int creatTinyPlanetButton=0x7f09005e;
    public static final int dialog_button=0x7f09005f;
    public static final int done_button=0x7f090060;
    public static final int end=0x7f090061;
    public static final int end_padder=0x7f090062;
    public static final int exposure_0=0x7f090063;
    public static final int exposure_button=0x7f090064;
    public static final int exposure_n1=0x7f090065;
    public static final int exposure_n1_indicator=0x7f090066;
    public static final int exposure_n2=0x7f090067;
    public static final int exposure_n2_indicator=0x7f090068;
    public static final int exposure_p1=0x7f090069;
    public static final int exposure_p1_indicator=0x7f09006a;
    public static final int exposure_p2=0x7f09006b;
    public static final int exposure_p2_indicator=0x7f09006c;
    public static final int face_view=0x7f09006d;
    public static final int fill=0x7f09006e;
    public static final int fill_horizontal=0x7f09006f;
    public static final int fill_vertical=0x7f090070;
    public static final int filmstrip_bottom_control_delete=0x7f090071;
    public static final int filmstrip_bottom_control_edit=0x7f090072;
    public static final int filmstrip_bottom_control_middle_filler=0x7f090073;
    public static final int filmstrip_bottom_control_share=0x7f090074;
    public static final int filmstrip_bottom_control_view=0x7f090075;
    public static final int filmstrip_bottom_panel=0x7f090076;
    public static final int filmstrip_layout=0x7f090077;
    public static final int filmstrip_view=0x7f090078;
    public static final int flash_indicator=0x7f090079;
    public static final int flash_toggle_button=0x7f09007a;
    public static final int focus_ring=0x7f09007b;
    public static final int forever=0x7f09007c;
    public static final int fragment_container_view_tag=0x7f09007d;
    public static final int grid_lines=0x7f09007e;
    public static final int grid_lines_toggle_button=0x7f09007f;
    public static final int hdr_indicator=0x7f090080;
    public static final int hdr_plus_toggle_button=0x7f090081;
    public static final int icon=0x7f090082;
    public static final int icon_group=0x7f090083;
    public static final int identify_icon=0x7f090084;
    public static final int identify_layout=0x7f090085;
    public static final int info=0x7f090086;
    public static final int intent_review_imageview=0x7f090087;
    public static final int italic=0x7f090088;
    public static final int labels=0x7f090089;
    public static final int left=0x7f09008a;
    public static final int line1=0x7f09008b;
    public static final int line3=0x7f09008c;
    public static final int media_actions=0x7f09008d;
    public static final int media_controller_compat_view_tag=0x7f09008e;
    public static final int mediadata_tag_target=0x7f09008f;
    public static final int mediadata_tag_viewtype=0x7f090090;
    public static final int message=0x7f090091;
    public static final int mode_list=0x7f090092;
    public static final int mode_list_layout=0x7f090093;
    public static final int mode_options=0x7f090094;
    public static final int mode_options_buttons=0x7f090095;
    public static final int mode_options_exposure=0x7f090096;
    public static final int mode_options_overlay=0x7f090097;
    public static final int mode_options_pano=0x7f090098;
    public static final int mode_options_toggle=0x7f090099;
    public static final int mode_transition_view=0x7f09009a;
    public static final int module_layout=0x7f09009b;
    public static final int none=0x7f09009c;
    public static final int normal=0x7f09009d;
    public static final int notification_background=0x7f09009e;
    public static final int notification_main_column=0x7f09009f;
    public static final int notification_main_column_container=0x7f0900a0;
    public static final int pano_indicator=0x7f0900a1;
    public static final int pano_review_cancel_button=0x7f0900a2;
    public static final int pano_saving_progress_bar=0x7f0900a3;
    public static final int permissions=0x7f0900a4;
    public static final int photo_editor=0x7f0900a5;
    public static final int placeholder_progress=0x7f0900a6;
    public static final int play_button=0x7f0900a7;
    public static final int preview=0x7f0900a8;
    public static final int preview_content=0x7f0900a9;
    public static final int preview_overlay=0x7f0900aa;
    public static final int progress_overlay=0x7f0900ab;
    public static final int recording_time=0x7f0900ac;
    public static final int recording_time_rect=0x7f0900ad;
    public static final int remaining_seconds=0x7f0900ae;
    public static final int retake_button=0x7f0900af;
    public static final int review_image=0x7f0900b0;
    public static final int right=0x7f0900b1;
    public static final int right_icon=0x7f0900b2;
    public static final int right_side=0x7f0900b3;
    public static final int rounded_thumbnail_view=0x7f0900b4;
    public static final int scanner_view=0x7f0900b5;
    public static final int selector_icon=0x7f0900b6;
    public static final int selector_text=0x7f0900b7;
    public static final int settings_button=0x7f0900b8;
    public static final int settings_cling=0x7f0900b9;
    public static final int shutter_button=0x7f0900ba;
    public static final int shutter_cancel_button=0x7f0900bb;
    public static final int special_effects_controller_view_tag=0x7f0900bc;
    public static final int start=0x7f0900bd;
    public static final int status_bar_latest_event_content=0x7f0900be;
    public static final int sticky_bottom_capture_layout=0x7f0900bf;
    public static final int tag_accessibility_actions=0x7f0900c0;
    public static final int tag_accessibility_clickable_spans=0x7f0900c1;
    public static final int tag_accessibility_heading=0x7f0900c2;
    public static final int tag_accessibility_pane_title=0x7f0900c3;
    public static final int tag_on_apply_window_listener=0x7f0900c4;
    public static final int tag_on_receive_content_listener=0x7f0900c5;
    public static final int tag_on_receive_content_mime_types=0x7f0900c6;
    public static final int tag_screen_reader_focusable=0x7f0900c7;
    public static final int tag_state_description=0x7f0900c8;
    public static final int tag_transition_group=0x7f0900c9;
    public static final int tag_unhandled_key_event_manager=0x7f0900ca;
    public static final int tag_unhandled_key_listeners=0x7f0900cb;
    public static final int tag_window_insets_animation_callback=0x7f0900cc;
    public static final int text=0x7f0900cd;
    public static final int text2=0x7f0900ce;
    public static final int text_16x9=0x7f0900cf;
    public static final int text_4x3=0x7f0900d0;
    public static final int three_dots=0x7f0900d1;
    public static final int time=0x7f0900d2;
    public static final int time_lapse_label=0x7f0900d3;
    public static final int tiny_planet_editor=0x7f0900d4;
    public static final int title=0x7f0900d5;
    public static final int top=0x7f0900d6;
    public static final int tutorials_placeholder=0x7f0900d7;
    public static final int tutorials_placeholder_wrapper=0x7f0900d8;
    public static final int video_view=0x7f0900d9;
    public static final int view_tree_lifecycle_owner=0x7f0900da;
    public static final int view_tree_saved_state_registry_owner=0x7f0900db;
    public static final int view_tree_view_model_store_owner=0x7f0900dc;
    public static final int viewpager=0x7f0900dd;
    public static final int visible_removing_fragment_view_tag=0x7f0900de;
    public static final int zoomSlider=0x7f0900df;
  }
  public static final class integer {
    public static final int SRI_pano_layout_weight=0x7f0a0000;
    /**
     * configuration for album page
     * configuration for album page
     */
    public static final int album_rows_land=0x7f0a0001;
    public static final int album_rows_port=0x7f0a0002;
    /**
     * configuration for legacy album set page
     * configuration for album set page
     */
    public static final int albumset_rows_land=0x7f0a0003;
    public static final int albumset_rows_port=0x7f0a0004;
    public static final int bottom_bar_background_alpha=0x7f0a0005;
    public static final int bottom_bar_background_alpha_overlay=0x7f0a0006;
    public static final int camera_mode_capture_intent=0x7f0a0007;
    public static final int camera_mode_gcam=0x7f0a0008;
    public static final int camera_mode_panorama=0x7f0a0009;
    /**
     * Index of camera modes.
     */
    public static final int camera_mode_photo=0x7f0a000a;
    public static final int camera_mode_photosphere=0x7f0a000b;
    public static final int camera_mode_refocus=0x7f0a000c;
    public static final int camera_mode_video=0x7f0a000d;
    public static final int cancel_button_image_alpha=0x7f0a000e;
    /**
     * Maximum recording length in milliseconds. 0 means unlimited.
     */
    public static final int max_video_recording_length=0x7f0a000f;
    public static final int status_bar_notification_info_maxnum=0x7f0a0010;
    public static final int viewfinder_border_length=0x7f0a0011;
    public static final int viewfinder_border_width=0x7f0a0012;
  }
  public static final class layout {
    public static final int activity_main=0x7f0b0000;
    public static final int activity_scanner=0x7f0b0001;
    public static final int aspect_ratio_dialog_content=0x7f0b0002;
    public static final int aspect_ratio_dialog_layout=0x7f0b0003;
    public static final int aspect_ratio_selector=0x7f0b0004;
    public static final int bottom_bar_contents=0x7f0b0005;
    public static final int camera=0x7f0b0006;
    public static final int camera_controls=0x7f0b0007;
    public static final int camera_filmstrip=0x7f0b0008;
    public static final int capture_module=0x7f0b0009;
    public static final int cling_widget=0x7f0b000a;
    public static final int custom_dialog=0x7f0b000b;
    public static final int details=0x7f0b000c;
    public static final int details_list=0x7f0b000d;
    public static final int face_view=0x7f0b000e;
    public static final int filmstrip_bottom_controls=0x7f0b000f;
    public static final int filmstrip_video=0x7f0b0010;
    public static final int indicators=0x7f0b0011;
    public static final int keyguard_widget=0x7f0b0012;
    public static final int location_dialog_content=0x7f0b0013;
    public static final int location_dialog_layout=0x7f0b0014;
    public static final int mode_list_layout=0x7f0b0015;
    public static final int mode_options=0x7f0b0016;
    public static final int mode_options_imagebutton_template=0x7f0b0017;
    public static final int mode_options_overlay=0x7f0b0018;
    public static final int mode_selector=0x7f0b0019;
    public static final int notification_action=0x7f0b001a;
    public static final int notification_action_tombstone=0x7f0b001b;
    public static final int notification_media_action=0x7f0b001c;
    public static final int notification_media_cancel_action=0x7f0b001d;
    public static final int notification_template_big_media=0x7f0b001e;
    public static final int notification_template_big_media_custom=0x7f0b001f;
    public static final int notification_template_big_media_narrow=0x7f0b0020;
    public static final int notification_template_big_media_narrow_custom=0x7f0b0021;
    public static final int notification_template_custom_big=0x7f0b0022;
    public static final int notification_template_icon_group=0x7f0b0023;
    public static final int notification_template_lines_media=0x7f0b0024;
    public static final int notification_template_media=0x7f0b0025;
    public static final int notification_template_media_custom=0x7f0b0026;
    public static final int notification_template_part_chronometer=0x7f0b0027;
    public static final int notification_template_part_time=0x7f0b0028;
    public static final int on_screen_hint=0x7f0b0029;
    public static final int pano_review_control=0x7f0b002a;
    public static final int permissions=0x7f0b002b;
    public static final int photo_bottombar_buttons=0x7f0b002c;
    public static final int photo_intent_bottombar_buttons=0x7f0b002d;
    public static final int photo_module=0x7f0b002e;
    public static final int placeholder_progressbar=0x7f0b002f;
    public static final int retake_done_cancel_layout=0x7f0b0030;
    public static final int review_module_control=0x7f0b0031;
    public static final int secure_album_placeholder=0x7f0b0032;
    public static final int settings_cling=0x7f0b0033;
    public static final int sticky_bottom_capture_layout=0x7f0b0034;
    public static final int switcher_popup=0x7f0b0035;
    public static final int tinyplanet_editor=0x7f0b0036;
    public static final int tutorials_placeholder=0x7f0b0037;
    public static final int undo_bar=0x7f0b0038;
    public static final int video_bottombar_buttons=0x7f0b0039;
    public static final int video_intent_bottombar_buttons=0x7f0b003a;
    public static final int video_module=0x7f0b003b;
    public static final int viewfinder_labels_video=0x7f0b003c;
  }
  public static final class menu {
    public static final int filmstrip_context_menu=0x7f0c0000;
    public static final int filmstrip_menu=0x7f0c0001;
  }
  public static final class mipmap {
    public static final int ic_launcher=0x7f0d0000;
  }
  public static final class raw {
    public static final int backdropper=0x7f0e0000;
    public static final int blank=0x7f0e0001;
    public static final int focus_complete=0x7f0e0002;
    public static final int goofy_face=0x7f0e0003;
    public static final int material_camera_focus=0x7f0e0004;
    public static final int shutter=0x7f0e0005;
    public static final int staged_shot_complete=0x7f0e0006;
    public static final int timer_final_second=0x7f0e0007;
    public static final int timer_increment=0x7f0e0008;
    public static final int video_record=0x7f0e0009;
  }
  public static final class string {
    /**
     * alert to the user that the camera fails to read or write the SD card.
     */
    public static final int access_sd_fail=0x7f0f0000;
    /**
     * The cancel button. Used to cancel an in progress shot [CHAR LIMIT=NONE]
     */
    public static final int accessibility_cancel_button=0x7f0f0001;
    /**
     * The check box in camera settings, such as store location. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_check_box=0x7f0f0002;
    /**
     * Content description of the button that toggles the filmstrip. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_filmstrip_toggle=0x7f0f0003;
    /**
     * The menu button. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_menu_button=0x7f0f0004;
    /**
     * Announcement when the mode list becomes hidden off screen [CHAR LIMIT=NONE]
     */
    public static final int accessibility_mode_list_hidden=0x7f0f0005;
    /**
     * Announcement when the mode list becomes shown on screen [CHAR LIMIT=NONE]
     */
    public static final int accessibility_mode_list_shown=0x7f0f0006;
    /**
     * Content description of the button that toggles the on screen list of camera mode. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_mode_list_toggle=0x7f0f0007;
    /**
     * The button that opens up mode options, shown as '...' on screen [CHAR LIMIT=NONE]
     */
    public static final int accessibility_mode_options=0x7f0f0008;
    /**
     * Content description of the button that zooms out. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_mode_zoom_minus=0x7f0f0009;
    /**
     * Content description of the button that zooms in. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_mode_zoom_plus=0x7f0f000a;
    /**
     * The button in review mode indicating that the photo taking, video recording, and panorama saving session should be canceled [CHAR LIMIT=NONE]
     */
    public static final int accessibility_review_cancel=0x7f0f000b;
    /**
     * The button in review mode indicating that the taken photo/video is OK to be attached/uploaded [CHAR LIMIT=NONE]
     */
    public static final int accessibility_review_ok=0x7f0f000c;
    /**
     * button in review mode indicate the user want to retake another photo/video for attachment [CHAR LIMIT=NONE]
     */
    public static final int accessibility_review_retake=0x7f0f000d;
    /**
     * The shutter button. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shutter_button=0x7f0f000e;
    /**
     * The button to switch to Camera mode. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_switch_to_camera=0x7f0f000f;
    /**
     * The button to switch to the high quality mode. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_switch_to_gcam=0x7f0f0010;
    /**
     * The button to switch to Panorama mode. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_switch_to_panorama=0x7f0f0011;
    /**
     * The button to switch to the Photo Sphere mode. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_switch_to_photo_sphere=0x7f0f0012;
    /**
     * QuickReader: switcher item for qr
     */
    public static final int accessibility_switch_to_qr=0x7f0f0013;
    /**
     * The button to switch to the Re-Focus mode. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_switch_to_refocus=0x7f0f0014;
    /**
     * The button to switch to Video mode. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_switch_to_video=0x7f0f0015;
    /**
     * Description for the lock icon in Secure Camera filmstrip that when clicked, brings user to lock screen then full Camera [CHAR LIMIT=NONE]
     */
    public static final int accessibility_unlock_to_camera=0x7f0f0016;
    /**
     * Accessibility message spoken by TalkBack informing user of the current zoom value [CHAR LIMIT=NONE]
     */
    public static final int accessibility_zoom_announcement=0x7f0f0017;
    /**
     * Text indicating aperture of a media item in details window [CHAR LIMIT=14]
     */
    public static final int aperture=0x7f0f0018;
    /**
     * The name of the Android Camera application. [CHAR LIMIT=16]
     */
    public static final int app_name=0x7f0f0019;
    /**
     * String indicating how camera shooting feature is used. [CHAR LIMIT=12
     */
    public static final int auto=0x7f0f001a;
    /**
     * Text on the button that toggles the filmstrip. [CHAR LIMIT=20]
     */
    public static final int btn_filmstrip_toggle=0x7f0f001b;
    /**
     * Text on the button that toggles the on screen list of camera mode. [CHAR LIMIT=20]
     */
    public static final int btn_mode_list_toggle=0x7f0f001c;
    /**
     * Text on the button that zooms out [CHAR LIMIT=20]
     */
    public static final int btn_zoom_minus=0x7f0f001d;
    /**
     * Text on the button that zooms in [CHAR LIMIT=20]
     */
    public static final int btn_zoom_plus=0x7f0f001e;
    /**
     * Accessibility announcement when option button changes on screen after tap, e.g. from flash auto to flash off [CHAR_LIMIT=NONE]
     */
    public static final int button_change_announcement=0x7f0f001f;
    /**
     * title for the dialog showing the error of camera hardware
     */
    public static final int camera_error_title=0x7f0f0020;
    /**
     * Accessibility text for camera switch toggle button states [CHAR_LIMIT=NONE]
     */
    public static final int camera_id_back_desc=0x7f0f0021;
    public static final int camera_id_front_desc=0x7f0f0022;
    /**
     * more options label [CHAR LIMIT=50]
     */
    public static final int camera_menu_more_label=0x7f0f0023;
    /**
     * settings label [CHAR LIMIT=50]
     */
    public static final int camera_menu_settings_label=0x7f0f0024;
    /**
     * Accessibility text for cancel button [CHAR_LIMIT=NONE]
     */
    public static final int cancel_button_description=0x7f0f0025;
    /**
     * String shown when we cannot load the image when starting the activity [CHAR LIMIT=NONE]
     */
    public static final int cannot_load_image=0x7f0f0026;
    /**
     * Default text for a button that can be toggled on and off.
     */
    public static final int capital_off=0x7f0f0027;
    /**
     * Default text for a button that can be toggled on and off.
     */
    public static final int capital_on=0x7f0f0028;
    /**
     * Screen display message during image capture to indicate that the capture is in progress, like during HDR+. [CHAR LIMIT=20]
     */
    public static final int capturing=0x7f0f0029;
    /**
     * A button in effect setting popup to clear the effect. [CHAR LIMIT=26]
     */
    public static final int clear_effects=0x7f0f002a;
    /**
     * Text shown above the button that opens to editor for images created from lens blur mode. [CHAR LIMIT=60]
     */
    public static final int cling_text_for_refocus_editor_button=0x7f0f002b;
    public static final int close=0x7f0f002c;
    /**
     * Text on the button to confirm that user understands the on-screen instructions. [CHAR LIMIT=20]
     */
    public static final int confirm_button_text=0x7f0f002d;
    /**
     * On-screen hint during timer countdown for taking a photo. [CHAR LIMIT=60]
     */
    public static final int count_down_title_text=0x7f0f002e;
    public static final int countdown_timer_duration_10s=0x7f0f002f;
    public static final int countdown_timer_duration_3s=0x7f0f0030;
    /**
     * Accessibility text for countdown timer toggle button states [CHAR_LIMIT=NONE]
     */
    public static final int countdown_timer_off=0x7f0f0031;
    /**
     * Button to press for creating a tiny planet image. [CHAR LIMIT=30]
     */
    public static final int create_tiny_planet=0x7f0f0032;
    /**
     * The title of the menu item to let user crop the image. [CHAR LIMIT=15]
     */
    public static final int crop_action=0x7f0f0033;
    /**
     * Label for the save button in the crop activity action bar [CHAR LIMIT=20]
     */
    public static final int crop_save=0x7f0f0034;
    /**
     * Selection for a 16:9 picture size where the sensor provides 4:3 so the result will be cropped. [CHAR LIMIT=30]
     */
    public static final int cropped_sensor_16x9_aspect_ratio=0x7f0f0035;
    /**
     * Details dialog "OK" button. Dismisses dialog.
     */
    public static final int delete=0x7f0f0036;
    /**
     * Accessibility text for filmstrip delete button [CHAR_LIMIT=NONE]
     */
    public static final int delete_button_description=0x7f0f0037;
    /**
     * The label shown after an image is deleted [CHAR LIMIT=16]
     */
    public static final int deleted=0x7f0f0038;
    /**
     * Text indicating the description of a media item in details window [CHAR LIMIT=14]
     */
    public static final int description=0x7f0f0039;
    public static final int details=0x7f0f003a;
    /**
     * Used to format video duration in Details dialog. hours:minutes:seconds e.g. 0:21:30
     */
    public static final int details_hms=0x7f0f003b;
    /**
     * Used to format short video duration in Details dialog. minutes:seconds e.g. 00:30
     */
    public static final int details_ms=0x7f0f003c;
    public static final int dialog_cancel=0x7f0f003d;
    /**
     * Dialog "Dismiss" button. Closes the dialog [CHAR LIMIT=12]
     */
    public static final int dialog_dismiss=0x7f0f003e;
    /**
     * Dialog "OK" button. Dismisses dialog.
     */
    public static final int dialog_ok=0x7f0f003f;
    /**
     * Dialog "Report" button. Opens Google Feedback screen [CHAR LIMIT=12]
     */
    public static final int dialog_report=0x7f0f0040;
    /**
     * Accessibility text for done button [CHAR_LIMIT=NONE]
     */
    public static final int done_button_description=0x7f0f0041;
    /**
     * Text indicating the duration of a video item in details window [CHAR LIMIT=18]
     */
    public static final int duration=0x7f0f0042;
    /**
     * String used as a menu label. The user can choose to edit the image
     * [CHAR_LIMIT=20]
     */
    public static final int edit=0x7f0f0043;
    /**
     * Accessibility text for filmstrip edit button [CHAR_LIMIT=NONE]
     */
    public static final int edit_button_description=0x7f0f0044;
    /**
     * Shown above the intent chooser when the user is about to edit an item. [CHAR LIMIT=20]
     */
    public static final int edit_with=0x7f0f0045;
    /**
     * Effect setting item that replaces background with video from gallery. [CHAR LIMIT=16]
     */
    public static final int effect_backdropper_gallery=0x7f0f0046;
    /**
     * Effect setting item that replaces background with Android in Space. [CHAR LIMIT=14]
     */
    public static final int effect_backdropper_space=0x7f0f0047;
    /**
     * Effect setting item that replaces background with a sunset. [CHAR LIMIT=16]
     */
    public static final int effect_backdropper_sunset=0x7f0f0048;
    /**
     * Title of category for background replacement effects. [CHAR LIMIT=26]
     */
    public static final int effect_background=0x7f0f0049;
    /**
     * Effect setting item that makes eyes big. [CHAR LIMIT=14]
     */
    public static final int effect_goofy_face_big_eyes=0x7f0f004a;
    /**
     * Effect setting item that makes mouth big. [CHAR LIMIT=14]
     */
    public static final int effect_goofy_face_big_mouth=0x7f0f004b;
    /**
     * Effect setting item that makes nose big. [CHAR LIMIT=14]
     */
    public static final int effect_goofy_face_big_nose=0x7f0f004c;
    /**
     * Effect setting item that makes eyes small. [CHAR LIMIT=14]
     */
    public static final int effect_goofy_face_small_eyes=0x7f0f004d;
    /**
     * Effect setting item that makes mouth small. [CHAR LIMIT=14]
     */
    public static final int effect_goofy_face_small_mouth=0x7f0f004e;
    /**
     * Effect setting item that squeezes the face. [CHAR LIMIT=14]
     */
    public static final int effect_goofy_face_squeeze=0x7f0f004f;
    /**
     * Effect setting item that clear the effect. [CHAR LIMIT=14]
     */
    public static final int effect_none=0x7f0f0050;
    /**
     * Title of category for silly face effects. [CHAR LIMIT=26]
     */
    public static final int effect_silly_faces=0x7f0f0051;
    /**
     * message for the dialog showing the camera is disabled because of security policies. Camera cannot be used.
     */
    public static final int error_camera_disabled=0x7f0f0052;
    /**
     * message for the dialog showing the error of camera hardware
     */
    public static final int error_cannot_connect_camera=0x7f0f0053;
    /**
     * message for the dialog showing that the user's photo could not be saved [CHAR LIMIT=NONE]
     */
    public static final int error_media_storage_failure=0x7f0f0054;
    /**
     * message for the dialog showing that the app does not have sufficient permissions [CHAR LIMIT=NONE]
     */
    public static final int error_permissions=0x7f0f0055;
    /**
     * Accessibility text for exposure compensation 0 button [CHAR_LIMIT=NONE]
     */
    public static final int exposure_compensation_desc_0=0x7f0f0056;
    /**
     * Accessibility text for exposure compensation -1 button [CHAR_LIMIT=NONE]
     */
    public static final int exposure_compensation_desc_n1=0x7f0f0057;
    /**
     * Accessibility text for exposure compensation -2 button [CHAR_LIMIT=NONE]
     */
    public static final int exposure_compensation_desc_n2=0x7f0f0058;
    /**
     * Accessibility text for exposure compensation +1 button [CHAR_LIMIT=NONE]
     */
    public static final int exposure_compensation_desc_p1=0x7f0f0059;
    /**
     * Accessibility text for exposure compensation +2 button [CHAR_LIMIT=NONE]
     */
    public static final int exposure_compensation_desc_p2=0x7f0f005a;
    /**
     * Text indicating the exposure time of a media item in details window [CHAR LIMIT=14]
     */
    public static final int exposure_time=0x7f0f005b;
    /**
     * Default feedback that is entered in the Feedback textview for issues related to camera access. [CHAR LIMIT=NONE]
     */
    public static final int feedback_description_camera_access=0x7f0f005c;
    /**
     * Default feedback that is entered in the Feedback textview for issues related to saving photos. [CHAR LIMIT=NONE]
     */
    public static final int feedback_description_save_photo=0x7f0f005d;
    /**
     * Text indicating the file size of a media item in details window [CHAR LIMIT=14]
     */
    public static final int file_size=0x7f0f005e;
    /**
     * Text indicating flash info of a media item in details window [CHAR LIMIT=14]
     */
    public static final int flash=0x7f0f005f;
    public static final int flash_auto_desc=0x7f0f0060;
    /**
     * String indicating camera flash is not used. [CHAR LIMIT=14]
     */
    public static final int flash_off=0x7f0f0061;
    /**
     * Accessibility text for camera flash toggle button states [CHAR_LIMIT=NONE]
     */
    public static final int flash_off_desc=0x7f0f0062;
    /**
     * String indicating camera flash is fired. [CHAR LIMIT=14]
     */
    public static final int flash_on=0x7f0f0063;
    public static final int flash_on_desc=0x7f0f0064;
    /**
     * Text indicating the focal length of a media item in details window [CHAR LIMIT=14]
     */
    public static final int focal_length=0x7f0f0065;
    /**
     * TODO: don't ship with these.
     */
    public static final int focus_ring_toggle=0x7f0f0066;
    /**
     * Selection for a 4:3 picture size where the sensor provides 4:3 so the result is not cropped. [CHAR LIMIT=30]
     */
    public static final int full_sensor_4x3_aspect_ratio=0x7f0f0067;
    /**
     * Name of the Gallery app, for which we have an ActionBar button in Filmstrip. Should be kep in sync with the name of AOSP Gallery app [CHAR LIMIT=40]
     */
    public static final int gallery_app_name=0x7f0f0068;
    /**
     * Accessibility text for grid lines toggle button states [CHAR_LIMIT=NONE]
     */
    public static final int grid_lines_off_desc=0x7f0f0069;
    public static final int grid_lines_on_desc=0x7f0f006a;
    /**
     * Accessibility text for HDR toggle button states [CHAR_LIMIT=NONE]
     */
    public static final int hdr_off_desc=0x7f0f006b;
    public static final int hdr_on_desc=0x7f0f006c;
    public static final int hdr_plus_flash_auto_desc=0x7f0f006d;
    /**
     * Accessibility text for HDR+ flash toggle button states [CHAR_LIMIT=NONE]
     */
    public static final int hdr_plus_flash_off_desc=0x7f0f006e;
    public static final int hdr_plus_flash_on_desc=0x7f0f006f;
    /**
     * Accessibility text for HDR+ toggle button states [CHAR_LIMIT=NONE]
     */
    public static final int hdr_plus_off_desc=0x7f0f0070;
    public static final int hdr_plus_on_desc=0x7f0f0071;
    /**
     * Text indicating the height of a media item in details window [CHAR LIMIT=14]
     */
    public static final int height=0x7f0f0072;
    /**
     * Camera format string for new image files. Passed to java.text.SimpleDateFormat.
     */
    public static final int image_file_name_format=0x7f0f0073;
    public static final int immediate_capture_toggle=0x7f0f0074;
    /**
     * Text indicating the ISO speed rating of a media item in details window [CHAR LIMIT=14]
     */
    public static final int iso=0x7f0f0075;
    /**
     * Text indicating the location of a media item in details window [CHAR LIMIT=14]
     */
    public static final int location=0x7f0f0076;
    /**
     * Text indicating the maker of a media item in details window [CHAR LIMIT=14]
     */
    public static final int maker=0x7f0f0077;
    /**
     * String indicating how camera shooting feature is used. [CHAR LIMIT=12]
     */
    public static final int manual=0x7f0f0078;
    /**
     * Accessibility text for manual exposure compensation button [CHAR_LIMIT=NONE]
     */
    public static final int manual_exposure_compensation_desc=0x7f0f0079;
    /**
     * Announcement when a general media capture is performed, and visually the capture 'peeks' from right screen [CHAR LIMIT=NONE]
     */
    public static final int media_accessibility_peek=0x7f0f007a;
    /**
     * Content description for general media items in filmstrip based on modified date, template will read a file modified date and time [CHAR LIMIT=NONE]
     */
    public static final int media_date_content_description=0x7f0f007b;
    /**
     * Content description for media items in filmstrip which are still in the middle of processing [CHAR LIMIT=NONE]
     */
    public static final int media_processing_content_description=0x7f0f007c;
    /**
     * Text indicating the mime type of a media item in details window [CHAR LIMIT=14]
     */
    public static final int mimetype=0x7f0f007d;
    /**
     * Text shown in the camera mode options list for normal camera mode [CHAR LIMIT=25]
     */
    public static final int mode_camera=0x7f0f007e;
    /**
     * Accessibility text for switching to normal camera mode [CHAR_LIMIT=NONE]
     */
    public static final int mode_camera_desc=0x7f0f007f;
    /**
     * Text shown in the camera mode options list for putting camera in panorama mode [CHAR LIMIT=25]
     */
    public static final int mode_panorama=0x7f0f0080;
    /**
     * Accessibility text for switching to panorama mode [CHAR_LIMIT=NONE]
     */
    public static final int mode_panorama_desc=0x7f0f0081;
    /**
     * Text shown in the camera mode options list for putting camera in photo sphere mode. 'Photo sphere' is a product name. [CHAR LIMIT=25]
     */
    public static final int mode_photosphere=0x7f0f0082;
    /**
     * Accessibility text for switching to photo sphere mode. 'Photo sphere' is a product name. [CHAR_LIMIT=NONE]
     */
    public static final int mode_photosphere_desc=0x7f0f0083;
    /**
     * Text shown in the camera mode options list for putting camera in refocus mode [CHAR LIMIT=25]
     */
    public static final int mode_refocus=0x7f0f0084;
    /**
     * Accessibility text for switching to refocus mode [CHAR_LIMIT=NONE]
     */
    public static final int mode_refocus_desc=0x7f0f0085;
    /**
     * Camera settings. [CHAR LIMIT=25]
     */
    public static final int mode_settings=0x7f0f0086;
    /**
     * Text shown in the camera mode options list for putting camera in time lapse mode [CHAR LIMIT=25]
     */
    public static final int mode_timelapse=0x7f0f0087;
    /**
     * Text shown in the camera mode options list for putting camera in video recording mode [CHAR LIMIT=25]
     */
    public static final int mode_video=0x7f0f0088;
    /**
     * Accessibility text for switching to video mode [CHAR_LIMIT=NONE]
     */
    public static final int mode_video_desc=0x7f0f0089;
    /**
     * Text shown in the camera mode options list for putting camera in wide angle panorama mode [CHAR LIMIT=25]
     */
    public static final int mode_wideangle=0x7f0f008a;
    /**
     * Text indicating the model of a media item in details window [CHAR LIMIT=14]
     */
    public static final int model=0x7f0f008b;
    /**
     * Accessibility text for More Options button [CHAR_LIMIT=NONE]
     */
    public static final int more_options_desc=0x7f0f008c;
    /**
     * alert to the user that an SD card must be installed before using the camera
     */
    public static final int no_storage=0x7f0f008d;
    /**
     * Toast after trying to select a setting that is not allowed to change in scene mode [CHAR LIMIT=NONE]
     */
    public static final int not_selectable_in_scene_mode=0x7f0f008e;
    /**
     * Title of a dialog showing open source licenses used in the app. [CHAR LIMIT=30]
     */
    public static final int open_source_licenses=0x7f0f008f;
    /**
     * Text indicating the orientation of a media item in details window [CHAR LIMIT=14]
     */
    public static final int orientation=0x7f0f0090;
    /**
     * The text shown on the top-left corner of the screen to indicate the capturing is on going [CHAR LIMIT=27]
     */
    public static final int pano_capture_indication=0x7f0f0091;
    /**
     * The text shown in the dialog when panorama saving failed [CHAR LIMIT=40]
     */
    public static final int pano_dialog_panorama_failed=0x7f0f0092;
    /**
     * The text shown in the progress dialog when panorama preview is generating in the background [CHAR LIMIT=30]
     */
    public static final int pano_dialog_prepare_preview=0x7f0f0093;
    /**
     * The text shown on the dialog title in the dialogs for Panorama [CHAR LIMIT=12]
     */
    public static final int pano_dialog_title=0x7f0f0094;
    /**
     * The text shown in the progress dialog when waiting for previous panorama finishing [CHAR LIMIT=40]
     */
    public static final int pano_dialog_waiting_previous=0x7f0f0095;
    /**
     * Filename prefix for panorama output.
     */
    public static final int pano_file_name_format=0x7f0f0096;
    public static final int pano_orientation_fisheye=0x7f0f0097;
    public static final int pano_orientation_horizontal=0x7f0f0098;
    public static final int pano_orientation_vertical=0x7f0f0099;
    public static final int pano_orientation_wide=0x7f0f009a;
    /**
     * The text shown on the screen to indicate that the panorama is rendering [CHAR LIMIT=27]
     */
    public static final int pano_review_rendering=0x7f0f009b;
    /**
     * The text shown on the bottom-left corner of the screen to indicate that the saving is in process [CHAR LIMIT=13]
     */
    public static final int pano_review_saving_indication_str=0x7f0f009c;
    /**
     * The text shown when the panorama panning speed is to fast [CHAR LIMIT=16]
     */
    public static final int pano_too_fast_prompt=0x7f0f009d;
    /**
     * Content description for panorama media items in filmstrip based on modified date, template will read a file modified date and time [CHAR LIMIT=NONE]
     */
    public static final int panorama_date_content_description=0x7f0f009e;
    /**
     * Text indicating the path of a media item in details window [CHAR LIMIT=14]
     */
    public static final int path=0x7f0f009f;
    /**
     * Announcement when a video capture is performed, and visually the capture 'peeks' from right screen [CHAR LIMIT=NONE]
     */
    public static final int photo_accessibility_peek=0x7f0f00a0;
    /**
     * Text on the photo aspect ratio selection screen. [CHAR LIMIT=120]
     */
    public static final int photo_aspect_ratio_selection_content=0x7f0f00a1;
    /**
     * Content description for photo media items in filmstrip based on modified date, template will read a file modified date and time [CHAR LIMIT=NONE]
     */
    public static final int photo_date_content_description=0x7f0f00a2;
    /**
     * Label for menu item that starts a photo editor. [CHAR LIMIT=30]
     */
    public static final int photo_editor=0x7f0f00a3;
    /**
     * Title on the startup screen that lets user select photo aspect ratio. [CHAR LIMIT=40]
     */
    public static final int photo_size_selection_title=0x7f0f00a4;
    /**
     * Content description for photosphere media items in filmstrip based on modified date, template will read a file modified date and time [CHAR LIMIT=NONE]
     */
    public static final int photosphere_date_content_description=0x7f0f00a5;
    /**
     * The content of a dialog showing trimming in progress. [CHAR LIMIT=30]
     */
    public static final int please_wait=0x7f0f00a6;
    /**
     * String representation of boolean false, allows for integer conversion.
     */
    public static final int pref_boolean_false=0x7f0f00a7;
    /**
     * String representation of boolean true, allows for integer conversion.
     */
    public static final int pref_boolean_true=0x7f0f00a8;
    /**
     * Settings screen, Camcorder setting category title
     */
    public static final int pref_camcorder_settings_category=0x7f0f00a9;
    /**
     * Settings menu countdown timer 15 seconds [CHAR LIMIT=50]
     */
    public static final int pref_camera_countdown_label_fifteen=0x7f0f00aa;
    /**
     * Settings menu countdown timer off [CHAR LIMIT=50]
     */
    public static final int pref_camera_countdown_label_off=0x7f0f00ab;
    /**
     * Settings menu countdown timer 1 second [CHAR LIMIT=50]
     */
    public static final int pref_camera_countdown_label_one=0x7f0f00ac;
    /**
     * Settings menu countdown timer 10 seconds [CHAR LIMIT=50]
     */
    public static final int pref_camera_countdown_label_ten=0x7f0f00ad;
    /**
     * Settings menu countdown timer 3 seconds [CHAR LIMIT=50]
     */
    public static final int pref_camera_countdown_label_three=0x7f0f00ae;
    /**
     * Title of a preference for enabling manual exposure compensation. [CHAR LIMIT=20]
     */
    public static final int pref_camera_exposure_compensation=0x7f0f00af;
    /**
     * Default flash mode setting.
     */
    public static final int pref_camera_flashmode_default=0x7f0f00b0;
    /**
     * Settings screen, Flash mode 'auto'. [CHAR LIMIT=12]
     */
    public static final int pref_camera_flashmode_entry_auto=0x7f0f00b1;
    /**
     * Settings screen, Flash mode 'always off'. [CHAR LIMIT=12]
     */
    public static final int pref_camera_flashmode_entry_off=0x7f0f00b2;
    /**
     * Settings screen, Flash mode 'alway on'. [CHAR LIMIT=12]
     */
    public static final int pref_camera_flashmode_entry_on=0x7f0f00b3;
    /**
     * flash label [CHAR LIMIT=50]
     */
    public static final int pref_camera_flashmode_label=0x7f0f00b4;
    /**
     * Menu, flash mode labels [CHAR LIMIT=50]
     */
    public static final int pref_camera_flashmode_label_auto=0x7f0f00b5;
    public static final int pref_camera_flashmode_label_off=0x7f0f00b6;
    public static final int pref_camera_flashmode_label_on=0x7f0f00b7;
    /**
     * Value for flash off setting
     */
    public static final int pref_camera_flashmode_no_flash=0x7f0f00b8;
    /**
     * Settings screen, Flash mode title
     */
    public static final int pref_camera_flashmode_title=0x7f0f00b9;
    /**
     * Default focus mode setting
     */
    public static final int pref_camera_focusmode_default=0x7f0f00ba;
    /**
     * Settings screen, Focus mode dialog radio button choices
     */
    public static final int pref_camera_focusmode_entry_auto=0x7f0f00bb;
    /**
     * A setting that lets the camera focus into infinity. [CHAR LIMIT=20]
     */
    public static final int pref_camera_focusmode_entry_infinity=0x7f0f00bc;
    /**
     * A setting that lets the camera operate in macro focus mode for nearby objects. [CHAR LIMIT=20]
     */
    public static final int pref_camera_focusmode_entry_macro=0x7f0f00bd;
    /**
     * Menu, focus mode labels [CHAR LIMIT=50]
     */
    public static final int pref_camera_focusmode_label_auto=0x7f0f00be;
    public static final int pref_camera_focusmode_label_infinity=0x7f0f00bf;
    public static final int pref_camera_focusmode_label_macro=0x7f0f00c0;
    /**
     * Settings screen, Focus mode title
     */
    public static final int pref_camera_focusmode_title=0x7f0f00c1;
    /**
     * Default HDR entry value
     */
    public static final int pref_camera_hdr_default=0x7f0f00c2;
    /**
     * HDR label ON [CHAR LIMIT=60]
     */
    public static final int pref_camera_hdr_label=0x7f0f00c3;
    /**
     * Default HDR+ entry value
     */
    public static final int pref_camera_hdr_plus_default=0x7f0f00c4;
    /**
     * Default HDR+ flash mode setting.
     */
    public static final int pref_camera_hdr_plus_flashmode_default=0x7f0f00c5;
    public static final int pref_camera_hdr_supportmode_hdr=0x7f0f00c6;
    public static final int pref_camera_hdr_supportmode_hdr_plus=0x7f0f00c7;
    /**
     * HDR support mode setting.
     */
    public static final int pref_camera_hdr_supportmode_none=0x7f0f00c8;
    public static final int pref_camera_id_default=0x7f0f00c9;
    /**
     * In select camera setting, back facing camera. [CHAR LIMIT=14]
     */
    public static final int pref_camera_id_entry_back=0x7f0f00ca;
    /**
     * In select camera setting, back facing camera value. [CHAR LIMIT=14]
     */
    public static final int pref_camera_id_entry_back_value=0x7f0f00cb;
    /**
     * In select camera setting, front-facing camera. [CHAR LIMIT=14]
     */
    public static final int pref_camera_id_entry_front=0x7f0f00cc;
    /**
     * In select camera setting, front-facing camera value. [CHAR LIMIT=14]
     */
    public static final int pref_camera_id_entry_front_value=0x7f0f00cd;
    /**
     * Named indexes into the array of camera facing entries
     */
    public static final int pref_camera_id_index_back=0x7f0f00ce;
    public static final int pref_camera_id_index_front=0x7f0f00cf;
    /**
     * switch camera label back [CHAR LIMIT=60]
     */
    public static final int pref_camera_id_label_back=0x7f0f00d0;
    /**
     * switch camera label front [CHAR LIMIT=60]
     */
    public static final int pref_camera_id_label_front=0x7f0f00d1;
    /**
     * Settings screen, camera selection dialog title. Users can select a camera from the phone (front-facing or back-facing). [CHAR LIMIT=20]
     */
    public static final int pref_camera_id_title=0x7f0f00d2;
    public static final int pref_camera_jpeg_quality_fine=0x7f0f00d3;
    /**
     * camera jpeg quality settings
     */
    public static final int pref_camera_jpeg_quality_normal=0x7f0f00d4;
    public static final int pref_camera_jpeg_quality_superfine=0x7f0f00d5;
    /**
     * Label for record location preference [CHAR LIMIT=50]
     */
    public static final int pref_camera_location_label=0x7f0f00d6;
    /**
     * More Settings screen, max brightness title
     */
    public static final int pref_camera_max_brightness_title=0x7f0f00d7;
    /**
     * The default photo resolution value.
     */
    public static final int pref_camera_picturesize_default=0x7f0f00d8;
    /**
     * Settings screen, dialog choice for "large" picture size [CHAR LIMIT=20]
     */
    public static final int pref_camera_picturesize_entry_large=0x7f0f00d9;
    /**
     * Settings screen, dialog choice for "medium" picture size [CHAR LIMIT=20]
     */
    public static final int pref_camera_picturesize_entry_medium=0x7f0f00da;
    /**
     * Settings screen, dialog choice for "small" picture size [CHAR LIMIT=20]
     */
    public static final int pref_camera_picturesize_entry_small=0x7f0f00db;
    /**
     * Settings screen, Picture size title
     */
    public static final int pref_camera_picturesize_title=0x7f0f00dc;
    public static final int pref_camera_recordlocation_default=0x7f0f00dd;
    /**
     * Settings screen, location setting text. [CHAR LIMIT=20]
     */
    public static final int pref_camera_save_location_title=0x7f0f00de;
    /**
     * Default scene mode setting.
     */
    public static final int pref_camera_scenemode_default=0x7f0f00df;
    /**
     * Scene mode that takes an image quickly with little motion blur. [CHAR LIMIT=16]
     */
    public static final int pref_camera_scenemode_entry_action=0x7f0f00e0;
    /**
     * Settings menu, scene mode choices [CHAR LIMIT=16]
     */
    public static final int pref_camera_scenemode_entry_auto=0x7f0f00e1;
    /**
     * Scene mode that uses HDR (high dynamic range) [CHAR LIMIT=16]
     */
    public static final int pref_camera_scenemode_entry_hdr=0x7f0f00e2;
    /**
     * Scene mode that uses HDR plus (better HDR) [CHAR LIMIT=16]
     */
    public static final int pref_camera_scenemode_entry_hdr_plus=0x7f0f00e3;
    /**
     * Scene mode that takes long exposures to capture night scenes without flash. [CHAR LIMIT=16]
     */
    public static final int pref_camera_scenemode_entry_night=0x7f0f00e4;
    /**
     * Scene mode optimized for taking indoor low-lights pictures. [CHAR LIMIT=16]
     */
    public static final int pref_camera_scenemode_entry_party=0x7f0f00e5;
    /**
     * Scene mode optimized for taking images in the sunset. [CHAR LIMIT=16]
     */
    public static final int pref_camera_scenemode_entry_sunset=0x7f0f00e6;
    /**
     * Scene mode to turn off HDR (high dynamic range) [CHAR LIMIT=50]
     */
    public static final int pref_camera_scenemode_entry_turn_hdr_off=0x7f0f00e7;
    /**
     * Scene mode to turn on HDR (high dynamic range) [CHAR LIMIT=50]
     */
    public static final int pref_camera_scenemode_entry_turn_hdr_on=0x7f0f00e8;
    /**
     * Scene mode to turn off HDR (better high dynamic range) [CHAR LIMIT=50]
     */
    public static final int pref_camera_scenemode_entry_turn_hdr_plus_off=0x7f0f00e9;
    /**
     * Scene mode to turn on HDR (better high dynamic range) [CHAR LIMIT=50]
     */
    public static final int pref_camera_scenemode_entry_turn_hdr_plus_on=0x7f0f00ea;
    /**
     * Scene mode that takes an image quickly with little motion blur. [CHAR LIMIT=50]
     */
    public static final int pref_camera_scenemode_label_action=0x7f0f00eb;
    /**
     * Settings menu, scene mode labels [CHAR LIMIT=50]
     */
    public static final int pref_camera_scenemode_label_auto=0x7f0f00ec;
    /**
     * Scene mode that takes long exposures to capture night scenes without flash. [CHAR LIMIT=50]
     */
    public static final int pref_camera_scenemode_label_night=0x7f0f00ed;
    /**
     * Scene mode optimized for taking indoor low-lights pictures. [CHAR LIMIT=50]
     */
    public static final int pref_camera_scenemode_label_party=0x7f0f00ee;
    /**
     * Scene mode optimized for taking images in the sunset. [CHAR LIMIT=50]
     */
    public static final int pref_camera_scenemode_label_sunset=0x7f0f00ef;
    /**
     * Settings screen, Select Scene mode
     */
    public static final int pref_camera_scenemode_title=0x7f0f00f0;
    /**
     * Settings screen, Camera setting category title
     */
    public static final int pref_camera_settings_category=0x7f0f00f1;
    /**
     * Default for camera startup module index
     */
    public static final int pref_camera_startup_index_default=0x7f0f00f2;
    public static final int pref_camera_timer_default=0x7f0f00f3;
    public static final int pref_camera_timer_sound_default=0x7f0f00f4;
    /**
     * Text followed by a checkbox to turn on/off sound effects during the countdown. [CHAR LIMIT=24]
     */
    public static final int pref_camera_timer_sound_title=0x7f0f00f5;
    /**
     * Title for countdown timer on camera settings screen [CHAR LIMIT=30]
     */
    public static final int pref_camera_timer_title=0x7f0f00f6;
    /**
     * Default videocamera flash mode setting.
     */
    public static final int pref_camera_video_flashmode_default=0x7f0f00f7;
    /**
     * Default white balance setting.
     */
    public static final int pref_camera_whitebalance_default=0x7f0f00f8;
    /**
     * Settings screen, White balance dialog radio button choices
     */
    public static final int pref_camera_whitebalance_entry_auto=0x7f0f00f9;
    public static final int pref_camera_whitebalance_entry_cloudy=0x7f0f00fa;
    public static final int pref_camera_whitebalance_entry_daylight=0x7f0f00fb;
    public static final int pref_camera_whitebalance_entry_fluorescent=0x7f0f00fc;
    public static final int pref_camera_whitebalance_entry_incandescent=0x7f0f00fd;
    /**
     * Menu, white balance label
     */
    public static final int pref_camera_whitebalance_label=0x7f0f00fe;
    /**
     * Menu, White balance labels [CHAR LIMIT=50]
     */
    public static final int pref_camera_whitebalance_label_auto=0x7f0f00ff;
    public static final int pref_camera_whitebalance_label_cloudy=0x7f0f0100;
    public static final int pref_camera_whitebalance_label_daylight=0x7f0f0101;
    public static final int pref_camera_whitebalance_label_fluorescent=0x7f0f0102;
    public static final int pref_camera_whitebalance_label_incandescent=0x7f0f0103;
    /**
     * Settings screen, white balance title
     */
    public static final int pref_camera_whitebalance_title=0x7f0f0104;
    /**
     * Title of a preference group which contains information about the app. [CHAR LIMIT=30]
     */
    public static final int pref_category_about=0x7f0f0105;
    /**
     * Title of a preference group for advanced preferences. [CHAR LIMIT=30]
     */
    public static final int pref_category_advanced=0x7f0f0106;
    /**
     * Title of a preference group which contains general settings. [CHAR LIMIT=30]
     */
    public static final int pref_category_general=0x7f0f0107;
    /**
     * Title of a preference group which contains settings for changing capture resolution and quality. [CHAR LIMIT=30]
     */
    public static final int pref_category_resolution_quality=0x7f0f0108;
    public static final int pref_exposure_default=0x7f0f0109;
    /**
     * menu label exposure compensation [CHAR LIMIT=50]
     */
    public static final int pref_exposure_label=0x7f0f010a;
    /**
     * Exposure settings in preference
     */
    public static final int pref_exposure_title=0x7f0f010b;
    /**
     * Default number of times to play peek animation.
     */
    public static final int pref_filmstrip_peek_anim_play_times=0x7f0f010c;
    /**
     * Default number of times to play shimmy.
     */
    public static final int pref_shimmy_play_times=0x7f0f010d;
    /**
     * Title of a preference which shows the build version of the app. [CHAR LIMIT=30]
     */
    public static final int pref_title_build_version=0x7f0f010e;
    /**
     * Default effect setting that clears the effect.
     */
    public static final int pref_video_effect_default=0x7f0f010f;
    /**
     * Title of video effect setting popup window
     */
    public static final int pref_video_effect_title=0x7f0f0110;
    /**
     * Video quality setting entry. Videos will be recorded in 1080p quality. [CHAR LIMIT=24]
     */
    public static final int pref_video_quality_entry_1080p=0x7f0f0111;
    public static final int pref_video_quality_entry_1080p_notrans=0x7f0f0112;
    /**
     * Video quality setting entry. Videos will be recorded in 2160p quality. [CHAR LIMIT=24]
     */
    public static final int pref_video_quality_entry_2160p=0x7f0f0113;
    public static final int pref_video_quality_entry_2160p_notrans=0x7f0f0114;
    /**
     * Video quality setting entry. Videos will be recorded in 480p quality. [CHAR LIMIT=24]
     */
    public static final int pref_video_quality_entry_480p=0x7f0f0115;
    public static final int pref_video_quality_entry_480p_notrans=0x7f0f0116;
    /**
     * Video quality setting entry. Videos will be recorded in 720p quality. [CHAR LIMIT=24]
     */
    public static final int pref_video_quality_entry_720p=0x7f0f0117;
    public static final int pref_video_quality_entry_720p_notrans=0x7f0f0118;
    /**
     * Video quality setting entry. Videos will be recorded in CIF quality. Details on CIF: http://goo.gl/3jDK [CHAR LIMIT=24]
     */
    public static final int pref_video_quality_entry_cif=0x7f0f0119;
    public static final int pref_video_quality_entry_cif_notrans=0x7f0f011a;
    /**
     * Video quality setting entry. Videos will be recorded in the highest quality available on the device. [CHAR LIMIT=24]
     */
    public static final int pref_video_quality_entry_high=0x7f0f011b;
    /**
     * Video quality setting entry. Videos will be recorded in the lowest quality available on the device. [CHAR LIMIT=24]
     */
    public static final int pref_video_quality_entry_low=0x7f0f011c;
    /**
     * Video quality setting entry. Videos will be recorded in quarter CIF quality. Details on CIF: http://goo.gl/3jDK [CHAR LIMIT=24]
     */
    public static final int pref_video_quality_entry_qcif=0x7f0f011d;
    /**
     * The strings below will not be translated. We're using them until the above translations are sane.
     */
    public static final int pref_video_quality_entry_qcif_notrans=0x7f0f011e;
    /**
     * Video quality setting entry. Videos will be recorded in quarter VGA quality. [CHAR LIMIT=24]
     */
    public static final int pref_video_quality_entry_qvga=0x7f0f011f;
    public static final int pref_video_quality_entry_qvga_notrans=0x7f0f0120;
    /**
     * The value of a camera preference indicating the video quality is 'large'.
     */
    public static final int pref_video_quality_large=0x7f0f0121;
    /**
     * The value of a camera preference indicating the video quality is 'medium'.
     */
    public static final int pref_video_quality_medium=0x7f0f0122;
    /**
     * The value of a camera preference indicating the video quality is 'small'.
     */
    public static final int pref_video_quality_small=0x7f0f0123;
    /**
     * The Video quality settings in preference [CHAR LIMIT=21]
     */
    public static final int pref_video_quality_title=0x7f0f0124;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_1000=0x7f0f0125;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_10000=0x7f0f0126;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_10800000=0x7f0f0127;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_12000=0x7f0f0128;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_120000=0x7f0f0129;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_1440000=0x7f0f012a;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_14400000=0x7f0f012b;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_1500=0x7f0f012c;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_15000=0x7f0f012d;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_150000=0x7f0f012e;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_180000=0x7f0f012f;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_1800000=0x7f0f0130;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_18000000=0x7f0f0131;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_2000=0x7f0f0132;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_21600000=0x7f0f0133;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_24000=0x7f0f0134;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_240000=0x7f0f0135;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_2500=0x7f0f0136;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_3000=0x7f0f0137;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_30000=0x7f0f0138;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_300000=0x7f0f0139;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_360000=0x7f0f013a;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_3600000=0x7f0f013b;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_36000000=0x7f0f013c;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_4000=0x7f0f013d;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_43200000=0x7f0f013e;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_500=0x7f0f013f;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_5000=0x7f0f0140;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_5400000=0x7f0f0141;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_54000000=0x7f0f0142;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_6000=0x7f0f0143;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_60000=0x7f0f0144;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_600000=0x7f0f0145;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_720000=0x7f0f0146;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_7200000=0x7f0f0147;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_86400000=0x7f0f0148;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_90000=0x7f0f0149;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_900000=0x7f0f014a;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_9000000=0x7f0f014b;
    public static final int pref_video_time_lapse_frame_interval_default=0x7f0f014c;
    /**
     * Text to indicate time lapse recording frame interval [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_off=0x7f0f014d;
    /**
     * Describes the preference dialog for choosing interval between frame capture for
     * time lapse recording. Appears at top of the dialog. [CHAR LIMIT=30]
     */
    public static final int pref_video_time_lapse_frame_interval_title=0x7f0f014e;
    /**
     * alert to the user that the SD card is being disk-checked
     */
    public static final int preparing_sd=0x7f0f014f;
    /**
     * A message shown to the user, indicating that an HDR+ photo is being processed. [CHAR LIMIT=25]
     */
    public static final int processing_hdr_plus=0x7f0f0150;
    /**
     * QuickReader: dismiss button for dialogs
     */
    public static final int quick_reader_action_dismiss=0x7f0f0151;
    /**
     * QuickReader: toast shown when the scanned text has been copied to the clipboard
     */
    public static final int quick_reader_copied_message=0x7f0f0152;
    public static final int quick_reader_name=0x7f0f0153;
    /**
     * QuickReader: toast shown when there's no app installed to open the qr code content
     */
    public static final int quick_reader_no_activity_found=0x7f0f0154;
    /**
     * QuickReader: Action is only allowed when performed unlocked
     */
    public static final int quick_reader_only_unlocked=0x7f0f0155;
    /**
     * QuickReader: permission error dialog title
     */
    public static final int quick_reader_permission_error_title=0x7f0f0156;
    /**
     * QuickReader: permission error dialog message when permission can't be asked again
     */
    public static final int quick_reader_permission_fatal_message=0x7f0f0157;
    /**
     * QuickReader: permission error dialog positive action when permission can't be asked again
     */
    public static final int quick_reader_permission_fatal_positive=0x7f0f0158;
    /**
     * QuickReader: permission error dialog message when permission can be asked again
     */
    public static final int quick_reader_permission_rationale_message=0x7f0f0159;
    /**
     * QuickReader: permission error dialog positive action when permission can be asked again
     */
    public static final int quick_reader_permission_rationale_positive=0x7f0f015a;
    /**
     * QuickReader: scanned text dialog negative button (share)
     */
    public static final int quick_reader_scanned_text_negative=0x7f0f015b;
    /**
     * QuickReader: scanned text dialog positive button (copy to clipboard)
     */
    public static final int quick_reader_scanned_text_positive=0x7f0f015c;
    /**
     * QuickReader: scanned text dialog title
     */
    public static final int quick_reader_scanned_text_title=0x7f0f015d;
    /**
     * QuickReader: scanned text shared activity selector title
     */
    public static final int quick_reader_share_title=0x7f0f015e;
    /**
     * QuickReader: launcher long shortcut label
     */
    public static final int quick_reader_shortcut_long=0x7f0f015f;
    /**
     * QuickReader: launcher short shortcut label
     */
    public static final int quick_reader_shortcut_short=0x7f0f0160;
    /**
     * Reason used for session failure which is visible in UI [CHAR LIMIT=NONE]
     */
    public static final int reason_storage_failure=0x7f0f0161;
    /**
     * Content description for refocus media items in filmstrip based on modified date, template will read a file modified date and time [CHAR LIMIT=NONE]
     */
    public static final int refocus_date_content_description=0x7f0f0162;
    /**
     * Negative answer for first run dialog asking if the user wants to remember photo locations [CHAR LIMIT=20]
     */
    public static final int remember_location_no=0x7f0f0163;
    /**
     * Message for first run dialog asking if the user wants to remember photo locations [CHAR LIMIT=None]
     */
    public static final int remember_location_prompt=0x7f0f0164;
    /**
     * Title for first run dialog asking if the user wants to remember photo locations [CHAR LIMIT=50]
     */
    public static final int remember_location_title=0x7f0f0165;
    /**
     * Positive answer for first run dialog asking if the user wants to remember photo locations [CHAR LIMIT=20]
     */
    public static final int remember_location_yes=0x7f0f0166;
    /**
     * Accessibility text for retake button [CHAR_LIMIT=NONE]
     */
    public static final int retake_button_description=0x7f0f0167;
    /**
     * Accessibility text for video review button [CHAR_LIMIT=NONE]
     */
    public static final int review_button_description=0x7f0f0168;
    public static final int rotate_left=0x7f0f0169;
    public static final int rotate_right=0x7f0f016a;
    /**
     * Message shown while a tiny planet image is being saved. [CHAR LIMIT=30]
     */
    public static final int saving_tiny_planet=0x7f0f016b;
    /**
     * Shown to the user while an image/video is being saved to disk.
     */
    public static final int session_saving_image=0x7f0f016c;
    /**
     * The title of the menu item to let user set the image as background etc. [CHAR LIMIT=15]
     */
    public static final int set_as=0x7f0f016d;
    /**
     * Title in timer setting for setting the duration for the countdown timer. [CHAR LIMIT=50]
     */
    public static final int set_duration=0x7f0f016e;
    /**
     * Displayed in the title of the dialog for things to do with a picture
     * that is to be "set as" (e.g. set as contact photo or set as wallpaper)
     */
    public static final int set_image=0x7f0f016f;
    /**
     * Title in time interval picker for setting time interval. [CHAR LIMIT=30]
     */
    public static final int set_time_interval=0x7f0f0170;
    /**
     * Help text that is shown when the time lapse feature is turned off. [CHAR LIMIT=180]
     */
    public static final int set_time_interval_help=0x7f0f0171;
    /**
     * Camera settings title for back camera photo resolution. [CHAR LIMIT=25]
     */
    public static final int setting_back_camera_photo=0x7f0f0172;
    /**
     * Camera settings title for back camera video resolution. [CHAR LIMIT=25]
     */
    public static final int setting_back_camera_video=0x7f0f0173;
    /**
     * Text shown in camera settings list for selecting the camera mode that will be used by default when the app starts [CHAR LIMIT=25]
     */
    public static final int setting_default_camera=0x7f0f0174;
    /**
     * Camera settings title for front camera photo resolution. [CHAR LIMIT=25]
     */
    public static final int setting_front_camera_photo=0x7f0f0175;
    /**
     * Camera settings title for front camera video resolution. [CHAR LIMIT=25]
     */
    public static final int setting_front_camera_video=0x7f0f0176;
    /**
     * Text shown in camera settings list for launching Google Help [CHAR LIMIT=25]
     */
    public static final int setting_google_help_and_feedback=0x7f0f0177;
    /**
     * Text shown in camera settings list for toggling photo location on or off [CHAR LIMIT=25]
     */
    public static final int setting_location=0x7f0f0178;
    /**
     * The value of a camera preference indicating the setting is none.
     */
    public static final int setting_none_value=0x7f0f0179;
    /**
     * Entry of a on/off setting. The setting is turned off. [CHAR LIMIT=15]
     */
    public static final int setting_off=0x7f0f017a;
    /**
     * The value of a camera preference indicating the setting is off.
     */
    public static final int setting_off_value=0x7f0f017b;
    /**
     * Entry of a on/off setting. The setting is turned on. [CHAR LIMIT=15]
     */
    public static final int setting_on=0x7f0f017c;
    /**
     * The value of a camera preference indicating the setting is on.
     */
    public static final int setting_on_value=0x7f0f017d;
    /**
     * Message shown in the settings summary that includes the the aspect ratio of the selected resolution i.e. (4:3) and the size of the selected resolution in megapixels. [CHAR LIMIT=24]
     */
    public static final int setting_summary_aspect_ratio_and_megapixels=0x7f0f017e;
    /**
     * Message shown in the settings summary for how many megapixels have been selected. [CHAR LIMIT=24]
     */
    public static final int setting_summary_x_megapixels=0x7f0f017f;
    /**
     * String shown when setting the homepage wallpaper in the background [CHAR LIMIT=NONE]
     */
    public static final int setting_wallpaper=0x7f0f0180;
    /**
     * Text shown next to the settings button to explain what is in settings menu. [CHAR LIMIT=120] !
     */
    public static final int settings_cling_text=0x7f0f0181;
    public static final int settings_close_desc=0x7f0f0182;
    /**
     * Accessibility text for settings toggle button states [CHAR_LIMIT=NONE]
     */
    public static final int settings_open_desc=0x7f0f0183;
    public static final int share=0x7f0f0184;
    public static final int share_as_photo=0x7f0f0185;
    /**
     * Accessibility text for filmstrip share button [CHAR_LIMIT=NONE]
     */
    public static final int share_button_description=0x7f0f0186;
    public static final int share_panorama=0x7f0f0187;
    /**
     * Shown above the intent chooser when the user is about to share an item. [CHAR LIMIT=20]
     */
    public static final int share_to=0x7f0f0188;
    /**
     * String indicating timestamp of photo or video
     */
    public static final int show_on_map=0x7f0f0189;
    /**
     * Low-memory dialog message [CHAR LIMIT=NONE]
     */
    public static final int spaceIsLow_content=0x7f0f018a;
    /**
     * Text on the button to take user to the next page of the on-screen instructions. [CHAR LIMIT=20]
     */
    public static final int startup_dialog_button_next=0x7f0f018b;
    public static final int status_bar_notification_info_overflow=0x7f0f018c;
    /**
     * Label for album filmstrip button
     */
    public static final int switch_photo_filmstrip=0x7f0f018d;
    public static final int tag_enabled_id=0x7f0f018e;
    /**
     * Toast telling users tapping on the viewfinder will trigger autofocus [CHAR LIMIT=28]
     */
    public static final int tap_to_focus=0x7f0f018f;
    /**
     * Text indicating the creation time of a media item in details window [CHAR LIMIT=14]
     */
    public static final int time=0x7f0f0190;
    /**
     * Hours: a unit of time for time lapse intervals. [CHAR LIMIT=20]
     */
    public static final int time_lapse_hours=0x7f0f0191;
    /**
     * The button to confirm time-lapse setting changes. [CHAR LIMIT=20]
     */
    public static final int time_lapse_interval_set=0x7f0f0192;
    /**
     * Minutes: a unit of time for time lapse intervals. [CHAR LIMIT=20]
     */
    public static final int time_lapse_minutes=0x7f0f0193;
    /**
     * Seconds: a unit of time for time lapse intervals. [CHAR LIMIT=20]
     */
    public static final int time_lapse_seconds=0x7f0f0194;
    /**
     * A label that overlays on top of the preview frame to indicate the camcorder is in time lapse mode [CHAR LIMIT=35]
     */
    public static final int time_lapse_title=0x7f0f0195;
    /**
     * Label above a slider that let's the user set the rotation of a tiny planet image. [CHAR LIMIT=15]
     */
    public static final int tiny_planet_rotate=0x7f0f0196;
    /**
     * Label above a slider that let's the user set the zoom of a tiny planet image. [CHAR LIMIT=15]
     */
    public static final int tiny_planet_zoom=0x7f0f0197;
    /**
     * Text indicating the title of a media item in details window [CHAR LIMIT=14]
     */
    public static final int title=0x7f0f0198;
    public static final int torch_off_desc=0x7f0f0199;
    /**
     * Accessibility text for vide torch (flash) toggle button states [CHAR_LIMIT=NONE]
     */
    public static final int torch_on_desc=0x7f0f019a;
    /**
     * The title of the menu item to let user trim the video. [CHAR LIMIT=15]
     */
    public static final int trim_action=0x7f0f019b;
    /**
     * Toast message shown after we try to make a local album available offline
     * [CHAR LIMIT=150]
     */
    public static final int try_to_set_local_album_available_offline=0x7f0f019c;
    /**
     * The label on the button which when clicked will undo a deletion of image [CHAR LIMIT=16]
     */
    public static final int undo=0x7f0f019d;
    /**
     * String indicating the length units in milli-meters. [CHAR LIMIT=8]
     */
    public static final int unit_mm=0x7f0f019e;
    /**
     * String indicating image width or height is unknown. [CHAR LIMIT=14]
     */
    public static final int unknown=0x7f0f019f;
    /**
     * Announcement when a video capture is performed, and visually the capture 'peeks' from right screen [CHAR LIMIT=NONE]
     */
    public static final int video_accessibility_peek=0x7f0f01a0;
    /**
     * The label for the Video Camera activity. [CHAR LIMIT=16]
     */
    public static final int video_camera_label=0x7f0f01a1;
    /**
     * Describes button on top of a video in filmstrip that is a play icon, pressing starts external video player [CHAR LIMIT=NONE]
     */
    public static final int video_control_play=0x7f0f01a2;
    /**
     * Content description for video media items in filmstrip based on modified date, template will read a file modified date and time [CHAR LIMIT=NONE]
     */
    public static final int video_date_content_description=0x7f0f01a3;
    /**
     * String indicating an error when playing the video. [CHAR LIMIT=30]
     */
    public static final int video_err=0x7f0f01a4;
    /**
     * Video Camera format string for new video files. Passed to java.text.SimpleDateFormat.
     */
    public static final int video_file_name_format=0x7f0f01a5;
    /**
     * The message shown when video record reaches size limit.
     */
    public static final int video_reach_size_limit=0x7f0f01a6;
    /**
     * Announcement telling users video recording has just started [CHAR LIMIT=NONE]
     */
    public static final int video_recording_started=0x7f0f01a7;
    /**
     * Announcement telling users video recording has just stopped [CHAR LIMIT=NONE]
     */
    public static final int video_recording_stopped=0x7f0f01a8;
    /**
     * Toast telling users tapping on the viewfinder will take a picture [CHAR LIMIT=54]
     */
    public static final int video_snapshot_hint=0x7f0f01a9;
    /**
     * Accessibility text for filmstrip view button used to open special image viewers, like 3d photosphere [CHAR_LIMIT=NONE]
     */
    public static final int view_button_description=0x7f0f01aa;
    /**
     * alert to the user to wait for some operation to complete
     */
    public static final int wait=0x7f0f01ab;
    /**
     * Text indicating the white balance of a media item in details window [CHAR LIMIT=18]
     */
    public static final int white_balance=0x7f0f01ac;
    /**
     * Text indicating the width of a media item in details window [CHAR LIMIT=14]
     */
    public static final int width=0x7f0f01ad;
  }
  public static final class style {
    public static final int ActionBarTwoLineItem=0x7f100000;
    /**
     * Spinner primary text is smaller than usual due to extra vertical padding in spinner asset
     */
    public static final int ActionBarTwoLinePrimary=0x7f100001;
    public static final int Animation_OnScreenHint=0x7f100002;
    public static final int BlueButton=0x7f100003;
    public static final int Camera_ActionBar=0x7f100004;
    public static final int CameraControls=0x7f100005;
    public static final int DialogCheckBox=0x7f100006;
    public static final int DialogPickerTheme=0x7f100007;
    public static final int FilmstripBottomControlButton=0x7f100008;
    public static final int FilmstripBottomProgressText=0x7f100009;
    public static final int IndicatorIcon=0x7f10000a;
    public static final int MenuIndicator=0x7f10000b;
    public static final int ModeOption=0x7f10000c;
    public static final int OnScreenHintTextAppearance=0x7f10000d;
    public static final int OnScreenHintTextAppearance_Small=0x7f10000e;
    public static final int OnViewfinderLabel=0x7f10000f;
    public static final int PanoCustomDialogText=0x7f100010;
    public static final int PanoCustomDialogText_xlarge=0x7f100011;
    public static final int PanoViewHorizontalBar=0x7f100012;
    public static final int PopupTitleSeparator=0x7f100013;
    public static final int PopupTitleText=0x7f100014;
    public static final int PopupTitleText_xlarge=0x7f100015;
    /**
     * Camera resources below
     */
    public static final int ReviewControlIcon=0x7f100016;
    /**
     * Camera resources below
     */
    public static final int ReviewControlText=0x7f100017;
    public static final int ReviewControlText_xlarge=0x7f100018;
    public static final int ReviewPlayIcon=0x7f100019;
    public static final int ScannerTheme=0x7f10001a;
    public static final int ScannerTheme_ActionIcon=0x7f10001b;
    public static final int SettingPopupWindow=0x7f10001c;
    public static final int SettingPopupWindow_xlarge=0x7f10001d;
    public static final int Settings_ActionBar=0x7f10001e;
    /**
     * Camera resources below
     */
    public static final int SwitcherButton=0x7f10001f;
    public static final int TextAppearance_Compat_Notification=0x7f100020;
    public static final int TextAppearance_Compat_Notification_Info=0x7f100021;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f100022;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f100023;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f100024;
    public static final int TextAppearance_Compat_Notification_Media=0x7f100025;
    public static final int TextAppearance_Compat_Notification_Time=0x7f100026;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f100027;
    public static final int TextAppearance_Compat_Notification_Title=0x7f100028;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f100029;
    public static final int TextAppearance_DialogWindowTitle=0x7f10002a;
    public static final int TextAppearance_Medium=0x7f10002b;
    /**
     * Camera resources below
     */
    public static final int Theme_Camera=0x7f10002c;
    public static final int Theme_CameraSettings=0x7f10002d;
    public static final int Theme_GalleryBase=0x7f10002e;
    public static final int Theme_Photos_Fullscreen=0x7f10002f;
    public static final int Theme_Photos_Gallery=0x7f100030;
    /**
     * Camera resources below
     */
    public static final int Theme_ProxyLauncher=0x7f100031;
    public static final int Theme_SecureCamera=0x7f100032;
    public static final int UndoBar=0x7f100033;
    public static final int UndoBarSeparator=0x7f100034;
    public static final int UndoBarTextAppearance=0x7f100035;
    public static final int UndoButton=0x7f100036;
    public static final int ViewfinderLabelLayout=0x7f100037;
    public static final int ViewfinderLabelLayout_xlarge=0x7f100038;
    public static final int Widget_Button_Borderless=0x7f100039;
    public static final int Widget_Compat_NotificationActionContainer=0x7f10003a;
    public static final int Widget_Compat_NotificationActionText=0x7f10003b;
    public static final int Widget_Support_CoordinatorLayout=0x7f10003c;
    public static final int fullscreen_dialog_title=0x7f10003d;
    public static final int start_up_dialog_content=0x7f10003e;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a BarcodeScannerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BarcodeScannerView_borderAlpha com.android.camera2:borderAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_borderColor com.android.camera2:borderColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_borderLength com.android.camera2:borderLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_borderWidth com.android.camera2:borderWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_cornerRadius com.android.camera2:cornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_finderOffset com.android.camera2:finderOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_laserColor com.android.camera2:laserColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_laserEnabled com.android.camera2:laserEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_maskColor com.android.camera2:maskColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_roundedCorner com.android.camera2:roundedCorner}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_shouldScaleToFill com.android.camera2:shouldScaleToFill}</code></td><td></td></tr>
     * <tr><td><code>{@link #BarcodeScannerView_squaredFinder com.android.camera2:squaredFinder}</code></td><td></td></tr>
     * </table>
     * @see #BarcodeScannerView_borderAlpha
     * @see #BarcodeScannerView_borderColor
     * @see #BarcodeScannerView_borderLength
     * @see #BarcodeScannerView_borderWidth
     * @see #BarcodeScannerView_cornerRadius
     * @see #BarcodeScannerView_finderOffset
     * @see #BarcodeScannerView_laserColor
     * @see #BarcodeScannerView_laserEnabled
     * @see #BarcodeScannerView_maskColor
     * @see #BarcodeScannerView_roundedCorner
     * @see #BarcodeScannerView_shouldScaleToFill
     * @see #BarcodeScannerView_squaredFinder
     */
    public static final int[] BarcodeScannerView={
      0x7f040001, 0x7f040002, 0x7f040003, 0x7f040004, 
      0x7f040007, 0x7f04000d, 0x7f040020, 0x7f040021, 
      0x7f040029, 0x7f04002d, 0x7f040030, 0x7f040032
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#borderAlpha}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.camera2:borderAlpha
     */
    public static final int BarcodeScannerView_borderAlpha=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#borderColor}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.camera2:borderColor
     */
    public static final int BarcodeScannerView_borderColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#borderLength}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.camera2:borderLength
     */
    public static final int BarcodeScannerView_borderLength=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#borderWidth}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.camera2:borderWidth
     */
    public static final int BarcodeScannerView_borderWidth=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#cornerRadius}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.camera2:cornerRadius
     */
    public static final int BarcodeScannerView_cornerRadius=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#finderOffset}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.camera2:finderOffset
     */
    public static final int BarcodeScannerView_finderOffset=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#laserColor}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.camera2:laserColor
     */
    public static final int BarcodeScannerView_laserColor=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#laserEnabled}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.camera2:laserEnabled
     */
    public static final int BarcodeScannerView_laserEnabled=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#maskColor}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.camera2:maskColor
     */
    public static final int BarcodeScannerView_maskColor=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#roundedCorner}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.camera2:roundedCorner
     */
    public static final int BarcodeScannerView_roundedCorner=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#shouldScaleToFill}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.camera2:shouldScaleToFill
     */
    public static final int BarcodeScannerView_shouldScaleToFill=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#squaredFinder}
     * attribute's value can be found in the {@link #BarcodeScannerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.camera2:squaredFinder
     */
    public static final int BarcodeScannerView_squaredFinder=11;
    /**
     * Camera resources below
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CameraPreference_title com.android.camera2:title}</code></td><td></td></tr>
     * </table>
     * @see #CameraPreference_title
     */
    public static final int[] CameraPreference={
      0x7f040036
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#title}
     * attribute's value can be found in the {@link #CameraPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.camera2:title
     */
    public static final int CameraPreference_title=0;
    /**
     * Attributes that can be used with a Capability.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Capability_queryPatterns com.android.camera2:queryPatterns}</code></td><td>Resource reference to the string array of query patterns for a custom capability.</td></tr>
     * <tr><td><code>{@link #Capability_shortcutMatchRequired com.android.camera2:shortcutMatchRequired}</code></td><td>Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.</td></tr>
     * </table>
     * @see #Capability_queryPatterns
     * @see #Capability_shortcutMatchRequired
     */
    public static final int[] Capability={
      0x7f04002c, 0x7f04002f
    };
    /**
     * <p>
     * @attr description
     * Resource reference to the string array of query patterns for a custom capability.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:queryPatterns
     */
    public static final int Capability_queryPatterns=0;
    /**
     * <p>
     * @attr description
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.camera2:shortcutMatchRequired
     */
    public static final int Capability_shortcutMatchRequired=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.camera2:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f040000
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.camera2:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.android.camera2:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.android.camera2:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f04001d, 0x7f040033
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.camera2:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.android.camera2:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.android.camera2:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.android.camera2:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.android.camera2:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.android.camera2:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.android.camera2:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f040022, 0x7f040023, 0x7f040024, 
      0x7f040025, 0x7f040026, 0x7f040027
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.camera2:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.camera2:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.android.camera2:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.android.camera2:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.camera2:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a DrawerLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerLayout_elevation com.android.camera2:elevation}</code></td><td></td></tr>
     * </table>
     * @see #DrawerLayout_elevation
     */
    public static final int[] DrawerLayout={
      0x7f04000a
    };
    /**
     * <p>
     * @attr description
     * The height difference between the drawer and the base surface. Only takes effect on API 21 and above
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.camera2:elevation
     */
    public static final int DrawerLayout_elevation=0;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.camera2:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.camera2:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.camera2:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.camera2:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.camera2:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.camera2:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderSystemFontFamily com.android.camera2:fontProviderSystemFontFamily}</code></td><td>Provides the system font family name to check before downloading the font.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     * @see #FontFamily_fontProviderSystemFontFamily
     */
    public static final int[] FontFamily={
      0x7f04000f, 0x7f040010, 0x7f040011, 0x7f040012, 
      0x7f040013, 0x7f040014, 0x7f040015
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.camera2:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.camera2:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.camera2:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.camera2:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.camera2:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * <p>
     * @attr description
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.camera2:fontProviderSystemFontFamily
     */
    public static final int FontFamily_fontProviderSystemFontFamily=6;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.camera2:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.camera2:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.android.camera2:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.camera2:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.android.camera2:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f04000e, 0x7f040016, 0x7f040017, 
      0x7f040018, 0x7f040037
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.camera2:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.camera2:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.camera2:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.camera2:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a Fragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Fragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #Fragment_android_name
     * @see #Fragment_android_id
     * @see #Fragment_android_tag
     */
    public static final int[] Fragment={
      0x01010003, 0x010100d0, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int Fragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Fragment_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int Fragment_android_tag=2;
    /**
     * Attributes that can be used with a FragmentContainerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #FragmentContainerView_android_name
     * @see #FragmentContainerView_android_tag
     */
    public static final int[] FragmentContainerView={
      0x01010003, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int FragmentContainerView_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int FragmentContainerView_android_tag=1;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a IconIndicator.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #IconIndicator_icons com.android.camera2:icons}</code></td><td></td></tr>
     * <tr><td><code>{@link #IconIndicator_modes com.android.camera2:modes}</code></td><td></td></tr>
     * </table>
     * @see #IconIndicator_icons
     * @see #IconIndicator_modes
     */
    public static final int[] IconIndicator={
      0x7f040019, 0x7f04002a
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#icons}
     * attribute's value can be found in the {@link #IconIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:icons
     */
    public static final int IconIndicator_icons=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#modes}
     * attribute's value can be found in the {@link #IconIndicator} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:modes
     */
    public static final int IconIndicator_modes=1;
    /**
     * Attributes that can be used with a IconListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #IconListPreference_icons com.android.camera2:icons}</code></td><td></td></tr>
     * <tr><td><code>{@link #IconListPreference_images com.android.camera2:images}</code></td><td></td></tr>
     * <tr><td><code>{@link #IconListPreference_largeIcons com.android.camera2:largeIcons}</code></td><td></td></tr>
     * <tr><td><code>{@link #IconListPreference_singleIcon com.android.camera2:singleIcon}</code></td><td>If a preference does not have individual icons for each entry, it can has a single icon to represent it.</td></tr>
     * </table>
     * @see #IconListPreference_icons
     * @see #IconListPreference_images
     * @see #IconListPreference_largeIcons
     * @see #IconListPreference_singleIcon
     */
    public static final int[] IconListPreference={
      0x7f040019, 0x7f04001b, 0x7f04001f, 0x7f040031
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#icons}
     * attribute's value can be found in the {@link #IconListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:icons
     */
    public static final int IconListPreference_icons=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#images}
     * attribute's value can be found in the {@link #IconListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:images
     */
    public static final int IconListPreference_images=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#largeIcons}
     * attribute's value can be found in the {@link #IconListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:largeIcons
     */
    public static final int IconListPreference_largeIcons=2;
    /**
     * <p>
     * @attr description
     * If a preference does not have individual icons for each entry, it can has a single icon to represent it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:singleIcon
     */
    public static final int IconListPreference_singleIcon=3;
    /**
     * Attributes that can be used with a ListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPreference_defaultValue com.android.camera2:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entries com.android.camera2:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entryValues com.android.camera2:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_key com.android.camera2:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_labelList com.android.camera2:labelList}</code></td><td></td></tr>
     * </table>
     * @see #ListPreference_defaultValue
     * @see #ListPreference_entries
     * @see #ListPreference_entryValues
     * @see #ListPreference_key
     * @see #ListPreference_labelList
     */
    public static final int[] ListPreference={
      0x7f040008, 0x7f04000b, 0x7f04000c, 0x7f04001c, 
      0x7f04001e
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#defaultValue}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.camera2:defaultValue
     */
    public static final int ListPreference_defaultValue=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#entries}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:entries
     */
    public static final int ListPreference_entries=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#entryValues}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:entryValues
     */
    public static final int ListPreference_entryValues=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#key}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.camera2:key
     */
    public static final int ListPreference_key=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#labelList}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:labelList
     */
    public static final int ListPreference_labelList=4;
    /**
     * Attributes that can be used with a MultiToggleImageButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MultiToggleImageButton_contentDescriptionIds com.android.camera2:contentDescriptionIds}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiToggleImageButton_imageIds com.android.camera2:imageIds}</code></td><td></td></tr>
     * </table>
     * @see #MultiToggleImageButton_contentDescriptionIds
     * @see #MultiToggleImageButton_imageIds
     */
    public static final int[] MultiToggleImageButton={
      0x7f040005, 0x7f04001a
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#contentDescriptionIds}
     * attribute's value can be found in the {@link #MultiToggleImageButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:contentDescriptionIds
     */
    public static final int MultiToggleImageButton_contentDescriptionIds=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#imageIds}
     * attribute's value can be found in the {@link #MultiToggleImageButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:imageIds
     */
    public static final int MultiToggleImageButton_imageIds=1;
    /**
     * Attributes that can be used with a RadioOptions.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RadioOptions_selected_drawable com.android.camera2:selected_drawable}</code></td><td></td></tr>
     * </table>
     * @see #RadioOptions_selected_drawable
     */
    public static final int[] RadioOptions={
      0x7f04002e
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#selected_drawable}
     * attribute's value can be found in the {@link #RadioOptions} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:selected_drawable
     */
    public static final int RadioOptions_selected_drawable=0;
    /**
     * Attributes that can be used with a SwipeRefreshLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor com.android.camera2:swipeRefreshLayoutProgressSpinnerBackgroundColor}</code></td><td>Background color for SwipeRefreshLayout progress spinner.</td></tr>
     * </table>
     * @see #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int[] SwipeRefreshLayout={
      0x7f040034
    };
    /**
     * <p>
     * @attr description
     * Background color for SwipeRefreshLayout progress spinner.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.camera2:swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor=0;
    /**
     * Attributes that can be used with a Theme_GalleryBase.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Theme_GalleryBase_listPreferredItemHeightSmall com.android.camera2:listPreferredItemHeightSmall}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_GalleryBase_switchStyle com.android.camera2:switchStyle}</code></td><td></td></tr>
     * </table>
     * @see #Theme_GalleryBase_listPreferredItemHeightSmall
     * @see #Theme_GalleryBase_switchStyle
     */
    public static final int[] Theme_GalleryBase={
      0x7f040028, 0x7f040035
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#listPreferredItemHeightSmall}
     * attribute's value can be found in the {@link #Theme_GalleryBase} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.camera2:listPreferredItemHeightSmall
     */
    public static final int Theme_GalleryBase_listPreferredItemHeightSmall=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.camera2.R.attr#switchStyle}
     * attribute's value can be found in the {@link #Theme_GalleryBase} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.camera2:switchStyle
     */
    public static final int Theme_GalleryBase_switchStyle=1;
  }
  public static final class xml {
    public static final int camera_preferences=0x7f120000;
    public static final int launcher_shortcuts=0x7f120001;
  }
}