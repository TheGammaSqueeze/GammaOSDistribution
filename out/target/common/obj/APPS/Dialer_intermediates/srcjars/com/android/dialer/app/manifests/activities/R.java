/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.android.dialer.app.manifests.activities;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int abc_tooltip_enter=0x7f01000a;
    public static final int abc_tooltip_exit=0x7f01000b;
    public static final int design_bottom_sheet_slide_in=0x7f01000c;
    public static final int design_bottom_sheet_slide_out=0x7f01000d;
    public static final int design_snackbar_in=0x7f01000e;
    public static final int design_snackbar_out=0x7f01000f;
    public static final int dialpad_slide_in_bottom=0x7f010010;
    public static final int dialpad_slide_in_left=0x7f010011;
    public static final int dialpad_slide_in_right=0x7f010012;
    public static final int dialpad_slide_out_bottom=0x7f010013;
    public static final int dialpad_slide_out_left=0x7f010014;
    public static final int dialpad_slide_out_right=0x7f010015;
    public static final int front_back_switch_button_animation=0x7f010016;
    public static final int hd_scale_interpolator=0x7f010017;
    public static final int hd_scale_interpolator2=0x7f010018;
    public static final int trim_end_interpolator=0x7f010019;
    public static final int trim_start_interpolator=0x7f01001a;
  }
  public static final class animator {
    public static final int activated_button_elevation=0x7f020000;
    public static final int button_state=0x7f020001;
    public static final int design_appbar_state_list_animator=0x7f020002;
    public static final int design_fab_hide_motion_spec=0x7f020003;
    public static final int design_fab_show_motion_spec=0x7f020004;
    public static final int disabled_alpha=0x7f020005;
    public static final int incall_button_elevation=0x7f020006;
    public static final int mtrl_btn_state_list_anim=0x7f020007;
    public static final int mtrl_btn_unelevated_state_list_anim=0x7f020008;
    public static final int mtrl_chip_state_list_anim=0x7f020009;
    public static final int mtrl_fab_hide_motion_spec=0x7f02000a;
    public static final int mtrl_fab_show_motion_spec=0x7f02000b;
    public static final int mtrl_fab_transformation_sheet_collapse_spec=0x7f02000c;
    public static final int mtrl_fab_transformation_sheet_expand_spec=0x7f02000d;
  }
  public static final class array {
    /**
     * For incoming calls, this is a string we can get from a CDMA network instead of
     * the actual phone number, to indicate there's no number present.  DO NOT TRANSLATE.
     */
    public static final int absent_num=0x7f030000;
    /**
     * DO NOT TRANSLATE. Country codes used in assisted dialing. [CHAR LIMIT=40]
     */
    public static final int assisted_dialing_cc_entries=0x7f030001;
    public static final int assisted_dialing_cc_values=0x7f030002;
    /**
     * Background colors for InCallUI. This is a set of colors which pass WCAG
     * AA and all have a contrast ratio over 5:1.
     * These colors are also used by InCallUIMaterialColorMapUtils to generate
     * primary activity colors.
     */
    public static final int background_colors=0x7f030003;
    /**
     * Darker versions of background_colors, two shades darker. These colors are used for the
     * status bar.
     */
    public static final int background_colors_dark=0x7f030004;
    public static final int call_recording_encoder_entries=0x7f030005;
    public static final int call_recording_encoder_values=0x7f030006;
    /**
     * 0:           sec
     * 1:      min
     * 2:      min  sec
     * 3: hour
     * 4: hour      sec
     * 5: hour min
     * 6: hour min  sec
     */
    public static final int call_stats_duration=0x7f030007;
    /**
     * This defines the provider names for cequint callerid applications
     * used for different carriers
     */
    public static final int cequint_providers=0x7f030008;
    public static final int contact_display_order_entries=0x7f030009;
    public static final int contact_display_order_values=0x7f03000a;
    public static final int contact_sort_order_entries=0x7f03000b;
    public static final int contact_sort_order_values=0x7f03000c;
    /**
     * Options displayed for the length of DTMF tone sounds. [CHAR LIMIT=40]
     */
    public static final int dtmf_tone_length_entries=0x7f03000d;
    public static final int dtmf_tone_length_entry_values=0x7f03000e;
    public static final int forward_lookup_provider_names=0x7f03000f;
    public static final int forward_lookup_providers=0x7f030010;
    public static final int letter_tile_colors=0x7f030011;
    /**
     * Darker versions of letter_tile_colors, two shades darker. These colors are used
     * for settings secondary activity colors.
     */
    public static final int letter_tile_colors_dark=0x7f030012;
    public static final int motorola_enabled_spn=0x7f030013;
    /**
     * This defines the specific key patterns that will be caught in the SpecialCharSequenceMgr
     * such as, ##[0-9]{3,7}#
     */
    public static final int motorola_hidden_menu_key_pattern=0x7f030014;
    /**
     * This defines the intents that will be send out when the key sequence is matched, this must be
     * in the same order with he KeyPattern array.
     */
    public static final int motorola_hidden_menu_key_pattern_intents=0x7f030015;
    /**
     * This defines the specific key sequence that will be caught in the SpecialCharSequenceMgr
     * such as, ##OMADM#
     */
    public static final int motorola_hidden_menu_key_sequence=0x7f030016;
    /**
     * This defines the intents that will be send out when the key sequence is matched, this must be
     * in the same order with he KeySequence array.
     */
    public static final int motorola_hidden_menu_key_sequence_intents=0x7f030017;
    public static final int people_lookup_provider_names=0x7f030018;
    public static final int people_lookup_providers=0x7f030019;
    public static final int reverse_lookup_provider_names=0x7f03001a;
    public static final int reverse_lookup_providers=0x7f03001b;
  }
  public static final class attr {
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f040000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f040001;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f040002;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f040003;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f040004;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f040005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f040006;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f040007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f040008;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f040009;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f04000a;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f04000b;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f04000c;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f04000d;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f04000e;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f04000f;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f040010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f040011;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f040012;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f040013;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f040014;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f040015;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f040016;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f040017;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f040018;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f040019;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f04001a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f04001b;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f04001c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f04001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f04001e;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f04001f;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f040020;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activated_background=0x7f040021;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f040022;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f040023;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f040024;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f040025;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f040026;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f040027;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f040028;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f040029;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f04002a;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f04002b;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int aspectRatio=0x7f04002c;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f04002d;
    /**
     * The minimum text size to use in this view. Text size will be scale down to fit the text
     * in this view, but no smaller than the minimum size specified in this attribute.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoResizeText_minTextSize=0x7f04002e;
    /**
     * The unit to use when computing step increments for the resize operation. That is, the
     * resized text will be guaranteed to be a whole number (integer) value in the unit
     * specified. For example, if the unit is scaled pixels (sp), then the font size might be
     * 13sp or 14sp, but not 13.5sp.
     * The enum values must match the values from android.util.TypedValue.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>unitDip</td><td>1</td><td>Must match TypedValue.COMPLEX_UNIT_DIP.</td></tr>
     * <tr><td>unitIn</td><td>4</td><td>Must match TypedValue.COMPLEX_UNIT_IN.</td></tr>
     * <tr><td>unitMm</td><td>5</td><td>Must match TypedValue.COMPLEX_UNIT_MM.</td></tr>
     * <tr><td>unitPt</td><td>3</td><td>Must match TypedValue.COMPLEX_UNIT_PT.</td></tr>
     * <tr><td>unitPx</td><td>0</td><td>Must match TypedValue.COMPLEX_UNIT_PX.</td></tr>
     * <tr><td>unitSp</td><td>2</td><td>Must match TypedValue.COMPLEX_UNIT_SP.</td></tr>
     * </table>
     */
    public static final int autoResizeText_resizeStepUnit=0x7f04002f;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f040030;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f040031;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f040032;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f040033;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f040034;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f040035;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundColor=0x7f040036;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f040037;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f040038;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f040039;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f04003a;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f04003b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_autoHide=0x7f04003c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_fitToContents=0x7f04003d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_hideable=0x7f04003e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int behavior_overlapTop=0x7f04003f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int behavior_peekHeight=0x7f040040;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_skipCollapsed=0x7f040041;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int blueColor=0x7f040042;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int borderWidth=0x7f040043;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f040044;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomAppBarStyle=0x7f040045;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomNavigationStyle=0x7f040046;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetDialogTheme=0x7f040047;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetStyle=0x7f040048;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxBackgroundColor=0x7f040049;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>outline</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int boxBackgroundMode=0x7f04004a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCollapsedPaddingTop=0x7f04004b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomEnd=0x7f04004c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusBottomStart=0x7f04004d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopEnd=0x7f04004e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxCornerRadiusTopStart=0x7f04004f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int boxStrokeColor=0x7f040050;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int boxStrokeWidth=0x7f040051;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f040052;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f040053;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f040054;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f040055;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f040056;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f040057;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int buttonIconDimen=0x7f040058;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f040059;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f04005a;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f04005b;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f04005c;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f04005d;
    /**
     * Background color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardBackgroundColor=0x7f04005e;
    /**
     * Corner radius for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardCornerRadius=0x7f04005f;
    /**
     * Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardElevation=0x7f040060;
    /**
     * Maximum Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardMaxElevation=0x7f040061;
    /**
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardPreventCornerOverlap=0x7f040062;
    /**
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardUseCompatPadding=0x7f040063;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int cardViewStyle=0x7f040064;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f040065;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedChip=0x7f040066;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedIcon=0x7f040067;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconEnabled=0x7f040068;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkedIconVisible=0x7f040069;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f04006a;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipBackgroundColor=0x7f04006b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipCornerRadius=0x7f04006c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipEndPadding=0x7f04006d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipGroupStyle=0x7f04006e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipIcon=0x7f04006f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconEnabled=0x7f040070;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipIconSize=0x7f040071;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipIconTint=0x7f040072;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int chipIconVisible=0x7f040073;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipMinHeight=0x7f040074;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacing=0x7f040075;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingHorizontal=0x7f040076;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipSpacingVertical=0x7f040077;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStandaloneStyle=0x7f040078;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStartPadding=0x7f040079;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int chipStrokeColor=0x7f04007a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chipStrokeWidth=0x7f04007b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipStyle=0x7f04007c;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f04007d;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconEnabled=0x7f04007e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconEndPadding=0x7f04007f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconSize=0x7f040080;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int closeIconStartPadding=0x7f040081;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int closeIconTint=0x7f040082;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int closeIconVisible=0x7f040083;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f040084;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f040085;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f040086;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     */
    public static final int collapsedTitleGravity=0x7f040087;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapsedTitleTextAppearance=0x7f040088;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f040089;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f04008a;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f04008b;
    /**
     * Used to color the search bar background
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundSearchBar=0x7f04008c;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f04008d;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f04008e;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f04008f;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f040090;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f040091;
    /**
     * Used to style all icons in Dialer.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorIcon=0x7f040092;
    /**
     * Used to color icons on dark backgrounds. White in Light Theme.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorIconOnUnthemedDarkBackground=0x7f040093;
    /**
     * Used to style some icons a little lighter in Dialer.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorIconSecondary=0x7f040094;
    /**
     * Used to color the background of chat bubbles we send
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorMobileOriginatingChatBackground=0x7f040095;
    /**
     * Used to color the text in chat bubbles we send
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorMobileOriginatingChatText=0x7f040096;
    /**
     * Used to color the background of chat bubbles we receive
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorMobileTerminatingChatBackground=0x7f040097;
    /**
     * Used to color the text in chat bubbles we receive
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorMobileTerminatingChatText=0x7f040098;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f040099;
    /**
     * Used to theme ripple effects with the app's primary color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary20pct=0x7f04009a;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f04009b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSecondary=0x7f04009c;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f04009d;
    /**
     * Used to color text on dark backgrounds. White in Light Theme.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorTextOnUnthemedDarkBackground=0x7f04009e;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f04009f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int contact_browser_background=0x7f0400a0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contact_browser_list_padding_left=0x7f0400a1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contact_browser_list_padding_right=0x7f0400a2;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f0400a3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescriptionChecked=0x7f0400a4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescriptionUnchecked=0x7f0400a5;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f0400a6;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f0400a7;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f0400a8;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f0400a9;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f0400aa;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f0400ab;
    /**
     * Inner padding between the edges of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPadding=0x7f0400ac;
    /**
     * Inner padding between the bottom edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingBottom=0x7f0400ad;
    /**
     * Inner padding between the left edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingLeft=0x7f0400ae;
    /**
     * Inner padding between the right edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingRight=0x7f0400af;
    /**
     * Inner padding between the top edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingTop=0x7f0400b0;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int contentScrim=0x7f0400b1;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f0400b2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f0400b3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cornerRadius=0x7f0400b4;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int counterEnabled=0x7f0400b5;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int counterMaxLength=0x7f0400b6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterOverflowTextAppearance=0x7f0400b7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterTextAppearance=0x7f0400b8;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f0400b9;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f0400ba;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogCornerRadius=0x7f0400bb;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f0400bc;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f0400bd;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_background=0x7f0400be;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialpad_digits_adjustable_height=0x7f0400bf;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialpad_digits_adjustable_text_size=0x7f0400c0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialpad_elevation=0x7f0400c1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialpad_end_key_spacing=0x7f0400c2;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_key_button_touch_tint=0x7f0400c3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialpad_key_letters_size_for_dual_alphabets=0x7f0400c4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialpad_key_letters_size_for_single_alphabet=0x7f0400c5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialpad_key_number_margin_bottom=0x7f0400c6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialpad_key_numbers_size=0x7f0400c7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialpad_style=0x7f0400c8;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_text_color=0x7f0400c9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_text_color_primary=0x7f0400ca;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int dialpad_text_color_secondary=0x7f0400cb;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int direction=0x7f0400cc;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f0400cd;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f0400ce;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f0400cf;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f0400d0;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f0400d1;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f0400d2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f0400d3;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f0400d4;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f0400d5;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f0400d6;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f0400d7;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f0400d8;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f0400d9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceMaterialTheme=0x7f0400da;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enforceTextAppearance=0x7f0400db;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int errorEnabled=0x7f0400dc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorTextAppearance=0x7f0400dd;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f0400de;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int expanded=0x7f0400df;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     */
    public static final int expandedTitleGravity=0x7f0400e0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMargin=0x7f0400e1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginBottom=0x7f0400e2;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginEnd=0x7f0400e3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginStart=0x7f0400e4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginTop=0x7f0400e5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandedTitleTextAppearance=0x7f0400e6;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int fabAlignmentMode=0x7f0400e7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleMargin=0x7f0400e8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleRoundedCornerRadius=0x7f0400e9;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCradleVerticalOffset=0x7f0400ea;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int fabCustomSize=0x7f0400eb;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fabSize=0x7f0400ec;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f0400ed;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f0400ee;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f0400ef;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f0400f0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f0400f1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int favorites_padding_bottom=0x7f0400f2;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int firstBaselineToTopHeight=0x7f0400f3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int floatingActionButtonStyle=0x7f0400f4;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f0400f5;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f0400f6;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f0400f7;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f0400f8;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f0400f9;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f0400fa;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f0400fb;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f0400fc;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f0400fd;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f0400fe;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f0400ff;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int foregroundInsidePadding=0x7f040100;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f040101;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f040102;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int greenColor=0x7f040103;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int headerLayout=0x7f040104;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f040105;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int helperText=0x7f040106;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int helperTextEnabled=0x7f040107;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int helperTextTextAppearance=0x7f040108;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hideMotionSpec=0x7f040109;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f04010a;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnScroll=0x7f04010b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintAnimationEnabled=0x7f04010c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintEnabled=0x7f04010d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hintTextAppearance=0x7f04010e;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f04010f;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f040110;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int hoveredFocusedTranslationZ=0x7f040111;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f040112;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconEndPadding=0x7f040113;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * <tr><td>textStart</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int iconGravity=0x7f040114;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconPadding=0x7f040115;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconSize=0x7f040116;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int iconStartPadding=0x7f040117;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f040118;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f040119;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f04011a;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f04011b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int incall_icon=0x7f04011c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int incall_labelText=0x7f04011d;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f04011e;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f04011f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int insetForeground=0x7f040120;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f040121;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemBackground=0x7f040122;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemHorizontalPadding=0x7f040123;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int itemHorizontalTranslationEnabled=0x7f040124;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconPadding=0x7f040125;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemIconSize=0x7f040126;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemIconTint=0x7f040127;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f040128;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemSpacing=0x7f040129;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearance=0x7f04012a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceActive=0x7f04012b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearanceInactive=0x7f04012c;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemTextColor=0x7f04012d;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f04012e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * <tr><td>labeled</td><td>1</td><td></td></tr>
     * <tr><td>selected</td><td>0</td><td></td></tr>
     * <tr><td>unlabeled</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int labelVisibilityMode=0x7f04012f;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lastBaselineToBottomHeight=0x7f040130;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f040131;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f040132;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f040133;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f040134;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f040135;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>parallax</td><td>2</td><td></td></tr>
     * <tr><td>pin</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int layout_collapseMode=0x7f040136;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_collapseParallaxMultiplier=0x7f040137;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f040138;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f040139;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f04013a;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td></td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td></td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td></td></tr>
     * <tr><td>scroll</td><td>1</td><td></td></tr>
     * <tr><td>snap</td><td>10</td><td></td></tr>
     * <tr><td>snapMargins</td><td>20</td><td></td></tr>
     * </table>
     */
    public static final int layout_scrollFlags=0x7f04013b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_scrollInterpolator=0x7f04013c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int liftOnScroll=0x7f04013d;
    /**
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineHeight=0x7f04013e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineSpacing=0x7f04013f;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f040140;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f040141;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f040142;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f040143;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f040144;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f040145;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f040146;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f040147;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f040148;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f040149;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f04014a;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int list_item_background_color=0x7f04014b;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int list_item_data_width_weight=0x7f04014c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_gap_between_image_and_text=0x7f04014d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_gap_between_label_and_data=0x7f04014e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_header_height=0x7f04014f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int list_item_header_text_color=0x7f040150;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_header_text_indent=0x7f040151;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_header_text_size=0x7f040152;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_height=0x7f040153;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int list_item_label_width_weight=0x7f040154;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int list_item_name_text_color=0x7f040155;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_name_text_size=0x7f040156;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_padding_bottom=0x7f040157;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_padding_left=0x7f040158;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_padding_right=0x7f040159;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_padding_top=0x7f04015a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_photo_size=0x7f04015b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int list_item_prefix_highlight_color=0x7f04015c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_presence_icon_margin=0x7f04015d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_presence_icon_size=0x7f04015e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_profile_photo_size=0x7f04015f;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_text_indent=0x7f040160;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_text_offset_top=0x7f040161;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_video_call_icon_margin=0x7f040162;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_item_video_call_icon_size=0x7f040163;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int list_section_header_height=0x7f040164;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f040165;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f040166;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialButtonStyle=0x7f040167;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int materialCardViewStyle=0x7f040168;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxActionInlineWidth=0x7f040169;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f04016a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxHeight=0x7f04016b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxImageSize=0x7f04016c;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f04016d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int menu=0x7f04016e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f04016f;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f040170;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f040171;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f040172;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationViewStyle=0x7f040173;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f040174;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int orangeColor=0x7f040175;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f040176;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f040177;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f040178;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f040179;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f04017a;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f04017b;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f04017c;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f04017d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int passwordToggleContentDescription=0x7f04017e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int passwordToggleDrawable=0x7f04017f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int passwordToggleEnabled=0x7f040180;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int passwordToggleTint=0x7f040181;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int passwordToggleTintMode=0x7f040182;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f040183;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f040184;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f040185;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int preferenceBackgroundColor=0x7f040186;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f040187;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pressedTranslationZ=0x7f040188;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f040189;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f04018a;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f04018b;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f04018c;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f04018d;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f04018e;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f04018f;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f040190;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int ratio=0x7f040191;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int redColor=0x7f040192;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int resizing_text_min_size=0x7f040193;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f040194;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rippleColor=0x7f040195;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int scaleHeight=0x7f040196;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int scaleWidth=0x7f040197;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int scrimAnimationDuration=0x7f040198;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int scrimBackground=0x7f040199;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int scrimVisibleHeightTrigger=0x7f04019a;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f04019b;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f04019c;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f04019d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int section_header_background=0x7f04019e;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f04019f;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f0401a0;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f0401a1;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f0401a2;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f0401a3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int showMotionSpec=0x7f0401a4;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f0401a5;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f0401a6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f0401a7;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLine=0x7f0401a8;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleSelection=0x7f0401a9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarButtonStyle=0x7f0401aa;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int snackbarStyle=0x7f0401ab;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f0401ac;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f0401ad;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f0401ae;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f0401af;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f0401b0;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f0401b1;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f0401b2;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f0401b3;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_collapsed=0x7f0401b4;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_collapsible=0x7f0401b5;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_liftable=0x7f0401b6;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_lifted=0x7f0401b7;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f0401b8;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarScrim=0x7f0401b9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int strokeColor=0x7f0401ba;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int strokeWidth=0x7f0401bb;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f0401bc;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f0401bd;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f0401be;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f0401bf;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f0401c0;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f0401c1;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f0401c2;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f0401c3;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f0401c4;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f0401c5;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f0401c6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabBackground=0x7f0401c7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabContentStart=0x7f0401c8;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabGravity=0x7f0401c9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIconTint=0x7f0401ca;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int tabIconTintMode=0x7f0401cb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabIndicator=0x7f0401cc;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int tabIndicatorAnimationDuration=0x7f0401cd;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIndicatorColor=0x7f0401ce;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabIndicatorFullWidth=0x7f0401cf;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>stretch</td><td>3</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int tabIndicatorGravity=0x7f0401d0;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabIndicatorHeight=0x7f0401d1;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabInlineLabel=0x7f0401d2;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMaxWidth=0x7f0401d3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMinWidth=0x7f0401d4;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabMode=0x7f0401d5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPadding=0x7f0401d6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingBottom=0x7f0401d7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingEnd=0x7f0401d8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingStart=0x7f0401d9;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingTop=0x7f0401da;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabRippleColor=0x7f0401db;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabSelectedTextColor=0x7f0401dc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabStyle=0x7f0401dd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabTextAppearance=0x7f0401de;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabTextColor=0x7f0401df;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int tabUnboundedRipple=0x7f0401e0;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f0401e1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody1=0x7f0401e2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceBody2=0x7f0401e3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceButton=0x7f0401e4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceCaption=0x7f0401e5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline1=0x7f0401e6;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline2=0x7f0401e7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline3=0x7f0401e8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline4=0x7f0401e9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline5=0x7f0401ea;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceHeadline6=0x7f0401eb;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f0401ec;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f0401ed;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f0401ee;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f0401ef;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceOverline=0x7f0401f0;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f0401f1;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f0401f2;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f0401f3;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f0401f4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle1=0x7f0401f5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSubtitle2=0x7f0401f6;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f0401f7;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f0401f8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textEndPadding=0x7f0401f9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textInputStyle=0x7f0401fa;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textStartPadding=0x7f0401fb;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f0401fc;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f0401fd;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f0401fe;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f0401ff;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f040200;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f040201;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f040202;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f040203;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f040204;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f040205;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f040206;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int titleEnabled=0x7f040207;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f040208;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f040209;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f04020a;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f04020b;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f04020c;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f04020d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f04020e;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f04020f;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f040210;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarId=0x7f040211;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f040212;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f040213;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f040214;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f040215;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f040216;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f040217;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f040218;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f040219;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f04021a;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int urlToOpen=0x7f04021b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useCompatPadding=0x7f04021c;
    /**
     * This attribute is used to let CallTypeIconsView know that we want to use large
     * icons (Call Details) instead of small icons (Call Log). Using large icons also limits
     * CallTypeIconsView to only use one icon at a time.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useLargeIcons=0x7f04021d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int viewInflaterClass=0x7f04021e;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f04021f;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f040220;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f040221;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f040222;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f040223;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f040224;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f040225;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f040226;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f040227;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f040228;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f040229;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f050000;
    public static final int abc_allow_stacked_button_bar=0x7f050001;
    public static final int abc_config_actionMenuItemAllCaps=0x7f050002;
    public static final int answer_important_call_allowed=0x7f050003;
    public static final int call_recording_enabled=0x7f050004;
    /**
     * Whether to check that the proximity is unblocked before showing the incoming call UI.
     */
    public static final int config_answer_proximity_sensor_enabled=0x7f050005;
    /**
     * If true, an option is shown in Display Options UI to choose a default account
     */
    public static final int config_default_account_user_changeable=0x7f050006;
    /**
     * If true, the default sort order is primary (i.e. by given name)
     * If true, the default sort order is primary (i.e. by given name)
     * If true, the default sort order is primary (i.e. by given name)
     * If true, the default sort order is primary (i.e. by given name)
     * If true, the default sort order is primary (i.e. by given name)
     */
    public static final int config_default_display_order_primary=0x7f050007;
    /**
     * If true, the default sort order is primary (i.e. by given name)
     * If true, the default sort order is primary (i.e. by given name)
     * If true, the default sort order is primary (i.e. by given name)
     * If true, the default sort order is primary (i.e. by given name)
     * If true, the default sort order is primary (i.e. by given name)
     */
    public static final int config_default_sort_order_primary=0x7f050008;
    /**
     * If true, an option is shown in Display Options UI to choose a name display order
     * If true, an option is shown in Display Options UI to choose a name display order
     * If true, an option is shown in Display Options UI to choose a name display order
     * If true, an option is shown in Display Options UI to choose a name display order
     * If true, an option is shown in Display Options UI to choose a name display order
     */
    public static final int config_display_order_user_changeable=0x7f050009;
    /**
     * If true, the order of name fields in the editor is primary (i.e. given name first)
     * If true, the order of name fields in the editor is primary (i.e. given name first)
     * If true, the order of name fields in the editor is primary (i.e. given name first)
     * If true, the order of name fields in the editor is primary (i.e. given name first)
     * If true, the order of name fields in the editor is primary (i.e. given name first)
     */
    public static final int config_editor_field_order_primary=0x7f05000a;
    /**
     * If true, an option is shown in Display Options UI to choose a sort order
     * If true, an option is shown in Display Options UI to choose a sort order
     * If true, an option is shown in Display Options UI to choose a sort order
     * If true, an option is shown in Display Options UI to choose a sort order
     * If true, an option is shown in Display Options UI to choose a sort order
     */
    public static final int config_sort_order_user_changeable=0x7f05000b;
    public static final int incall_dialpad_allowed=0x7f05000c;
    /**
     * Whether or not the landscape mode layout is currently being used
     * Whether or not the landscape mode layout is currently being used
     */
    public static final int is_layout_landscape=0x7f05000d;
    /**
     * Flag to control whether to disable phone number formatting
     * Flag to control whether to disable phone number formatting
     * Flag to control whether to disable phone number formatting
     */
    public static final int motorola_disable_phone_number_formatting=0x7f05000e;
    /**
     * Hidden menu is only enabled for sprint
     */
    public static final int motorola_hidden_menu_enabled=0x7f05000f;
    /**
     * Flag to control if HD codec is supported by Sprint.
     */
    public static final int motorola_sprint_hd_codec=0x7f050010;
    public static final int mtrl_btn_textappearance_all_caps=0x7f050011;
    public static final int scale_height=0x7f050012;
    public static final int scale_width=0x7f050013;
    public static final int show_device_id_as_barcode=0x7f050014;
    public static final int show_device_id_in_hex_and_decimal=0x7f050015;
    public static final int show_toolbar=0x7f050016;
    public static final int two_button_show_button_labels=0x7f050017;
    /**
     * Determines video calls will automatically enter fullscreen mode after the start of the
     * call.
     */
    public static final int video_call_auto_fullscreen=0x7f050018;
  }
  public static final class color {
    public static final int DO_NOT_USE_OR_I_WILL_BREAK_YOU_text_span_tertiary_button=0x7f060000;
    public static final int abc_background_cache_hint_selector_material_dark=0x7f060001;
    public static final int abc_background_cache_hint_selector_material_light=0x7f060002;
    public static final int abc_btn_colored_borderless_text_material=0x7f060003;
    public static final int abc_btn_colored_text_material=0x7f060004;
    public static final int abc_color_highlight_material=0x7f060005;
    public static final int abc_hint_foreground_material_dark=0x7f060006;
    public static final int abc_hint_foreground_material_light=0x7f060007;
    public static final int abc_input_method_navigation_guard=0x7f060008;
    public static final int abc_primary_text_disable_only_material_dark=0x7f060009;
    public static final int abc_primary_text_disable_only_material_light=0x7f06000a;
    public static final int abc_primary_text_material_dark=0x7f06000b;
    public static final int abc_primary_text_material_light=0x7f06000c;
    public static final int abc_search_url_text=0x7f06000d;
    public static final int abc_search_url_text_normal=0x7f06000e;
    public static final int abc_search_url_text_pressed=0x7f06000f;
    public static final int abc_search_url_text_selected=0x7f060010;
    public static final int abc_secondary_text_material_dark=0x7f060011;
    public static final int abc_secondary_text_material_light=0x7f060012;
    public static final int abc_tint_btn_checkable=0x7f060013;
    public static final int abc_tint_default=0x7f060014;
    public static final int abc_tint_edittext=0x7f060015;
    public static final int abc_tint_seek_thumb=0x7f060016;
    public static final int abc_tint_spinner=0x7f060017;
    public static final int abc_tint_switch_track=0x7f060018;
    public static final int accent_material_dark=0x7f060019;
    public static final int accent_material_light=0x7f06001a;
    /**
     * Color for answered call icons.
     */
    public static final int answered_incoming_call=0x7f06001b;
    /**
     * Color for outgoing call icons.
     */
    public static final int answered_outgoing_call=0x7f06001c;
    public static final int background_floating_material_dark=0x7f06001d;
    public static final int background_floating_material_light=0x7f06001e;
    public static final int background_item_grey_pressed=0x7f06001f;
    public static final int background_material_dark=0x7f060020;
    public static final int background_material_light=0x7f060021;
    /**
     * 87% black
     */
    public static final int block_report_spam_primary_text_color=0x7f060022;
    /**
     * Color for blocked call icons.
     */
    public static final int blocked_call=0x7f060023;
    /**
     * Note, this is also used by InCallUi.
     */
    public static final int blocked_contact_background=0x7f060024;
    /**
     * Colors for blocked numbers list
     */
    public static final int blocked_number_block_color=0x7f060025;
    /**
     * Legacy
     */
    public static final int blue_grey_100=0x7f060026;
    public static final int bright_foreground_disabled_material_dark=0x7f060027;
    public static final int bright_foreground_disabled_material_light=0x7f060028;
    public static final int bright_foreground_inverse_material_dark=0x7f060029;
    public static final int bright_foreground_inverse_material_light=0x7f06002a;
    public static final int bright_foreground_material_dark=0x7f06002b;
    public static final int bright_foreground_material_light=0x7f06002c;
    public static final int bubble_background=0x7f06002d;
    public static final int button_material_dark=0x7f06002e;
    public static final int button_material_light=0x7f06002f;
    public static final int call_accept_background=0x7f060030;
    /**
     * 50% black
     */
    public static final int call_composer_background_color=0x7f060031;
    public static final int call_composer_divider=0x7f060032;
    public static final int call_hangup_background=0x7f060033;
    public static final int call_record_playback_icon_color=0x7f060034;
    /**
     * Colors for incoming and outgoing calls in the call statistics
     */
    public static final int call_stats_bar_background=0x7f060035;
    /**
     * Text color for the SEND & CALL button on the call subject dialog.
     */
    public static final int call_subject_button=0x7f060036;
    /**
     * Divider line on the call subject dialog.
     */
    public static final int call_subject_divider=0x7f060037;
    /**
     * Tint color for the call subject history icon.
     */
    public static final int call_subject_history_icon=0x7f060038;
    /**
     * Text color used for character counter when the max limit has been exceeded
     */
    public static final int call_subject_limit_exceeded=0x7f060039;
    public static final int call_type_icon_read_color=0x7f06003a;
    public static final int call_type_icon_unread_color=0x7f06003b;
    public static final int cardview_dark_background=0x7f06003c;
    public static final int cardview_light_background=0x7f06003d;
    public static final int cardview_shadow_end_color=0x7f06003e;
    public static final int cardview_shadow_start_color=0x7f06003f;
    public static final int compose_and_call_background=0x7f060040;
    public static final int conference_call_manager_caller_name_text_color=0x7f060041;
    /**
     * Used with some smaller texts in manage conference screen.
     */
    public static final int conference_call_manager_secondary_text_color=0x7f060042;
    public static final int design_bottom_navigation_shadow_color=0x7f060043;
    public static final int design_default_color_primary=0x7f060044;
    public static final int design_default_color_primary_dark=0x7f060045;
    public static final int design_error=0x7f060046;
    public static final int design_fab_shadow_end_color=0x7f060047;
    public static final int design_fab_shadow_mid_color=0x7f060048;
    public static final int design_fab_shadow_start_color=0x7f060049;
    public static final int design_fab_stroke_end_inner_color=0x7f06004a;
    public static final int design_fab_stroke_end_outer_color=0x7f06004b;
    public static final int design_fab_stroke_top_inner_color=0x7f06004c;
    public static final int design_fab_stroke_top_outer_color=0x7f06004d;
    public static final int design_snackbar_background_color=0x7f06004e;
    public static final int design_tint_password_toggle=0x7f06004f;
    public static final int dialer_background_color=0x7f060050;
    public static final int dialer_call_green=0x7f060051;
    public static final int dialer_dark_primary_text_color=0x7f060052;
    public static final int dialer_dark_secondary_color=0x7f060053;
    public static final int dialer_dark_secondary_text_color=0x7f060054;
    /**
     * Essential theme colors
     */
    public static final int dialer_dark_theme_color=0x7f060055;
    public static final int dialer_dark_theme_color_20pct=0x7f060056;
    public static final int dialer_dark_theme_color_dark=0x7f060057;
    public static final int dialer_divider_line_color=0x7f060058;
    public static final int dialer_end_call_button_color=0x7f060059;
    public static final int dialer_link_color=0x7f06005a;
    public static final int dialer_primary_text_color=0x7f06005b;
    public static final int dialer_red=0x7f06005c;
    public static final int dialer_ripple_color=0x7f06005d;
    public static final int dialer_search_bar_color=0x7f06005e;
    public static final int dialer_secondary_color=0x7f06005f;
    public static final int dialer_secondary_text_color=0x7f060060;
    /**
     * Settings
     */
    public static final int dialer_settings_theme_color_dark=0x7f060061;
    public static final int dialer_snackbar_action_text_color=0x7f060062;
    /**
     * Essential theme colors
     * Essential theme colors
     */
    public static final int dialer_theme_color=0x7f060063;
    public static final int dialer_theme_color_20pct=0x7f060064;
    public static final int dialer_theme_color_dark=0x7f060065;
    public static final int dialer_tint_state=0x7f060066;
    public static final int dim_foreground_disabled_material_dark=0x7f060067;
    public static final int dim_foreground_disabled_material_light=0x7f060068;
    public static final int dim_foreground_material_dark=0x7f060069;
    public static final int dim_foreground_material_light=0x7f06006a;
    public static final int error_color_material_dark=0x7f06006b;
    public static final int error_color_material_light=0x7f06006c;
    /**
     * TODO(a bug): remove these?
     */
    public static final int feature_icon_read_color=0x7f06006d;
    public static final int feature_icon_unread_color=0x7f06006e;
    public static final int foreground_material_dark=0x7f06006f;
    public static final int foreground_material_light=0x7f060070;
    public static final int gallery_item_image_color=0x7f060071;
    public static final int google_blue_100=0x7f060072;
    public static final int google_blue_50=0x7f060073;
    public static final int google_blue_500=0x7f060074;
    public static final int google_blue_600=0x7f060075;
    public static final int google_blue_700=0x7f060076;
    public static final int google_blue_800=0x7f060077;
    public static final int google_blue_900=0x7f060078;
    public static final int google_grey_100=0x7f060079;
    public static final int google_grey_200=0x7f06007a;
    public static final int google_grey_300=0x7f06007b;
    public static final int google_grey_400=0x7f06007c;
    public static final int google_grey_50=0x7f06007d;
    public static final int google_grey_500=0x7f06007e;
    public static final int google_grey_600=0x7f06007f;
    public static final int google_grey_700=0x7f060080;
    public static final int google_grey_800=0x7f060081;
    public static final int google_grey_900=0x7f060082;
    public static final int highlighted_text_material_dark=0x7f060083;
    public static final int highlighted_text_material_light=0x7f060084;
    public static final int incall_background_gradient_bottom=0x7f060085;
    public static final int incall_background_gradient_middle=0x7f060086;
    public static final int incall_background_gradient_spam_bottom=0x7f060087;
    public static final int incall_background_gradient_spam_middle=0x7f060088;
    public static final int incall_background_gradient_spam_top=0x7f060089;
    public static final int incall_background_gradient_top=0x7f06008a;
    public static final int incall_background_multiwindow=0x7f06008b;
    public static final int incall_background_multiwindow_spam=0x7f06008c;
    public static final int incall_button_icon=0x7f06008d;
    public static final int incall_button_ripple=0x7f06008e;
    public static final int incall_button_white=0x7f06008f;
    /**
     * Background color for spam. This color must match one of background_colors_dark in call UI.
     */
    public static final int incall_call_spam_background_color=0x7f060090;
    public static final int incall_dialpad_background=0x7f060091;
    public static final int incoming_answer_icon=0x7f060092;
    public static final int letter_tile_default_color=0x7f060093;
    public static final int letter_tile_font_color=0x7f060094;
    public static final int material_blue_grey_800=0x7f060095;
    public static final int material_blue_grey_900=0x7f060096;
    public static final int material_blue_grey_950=0x7f060097;
    public static final int material_deep_teal_200=0x7f060098;
    public static final int material_deep_teal_500=0x7f060099;
    public static final int material_grey_100=0x7f06009a;
    public static final int material_grey_300=0x7f06009b;
    public static final int material_grey_50=0x7f06009c;
    public static final int material_grey_600=0x7f06009d;
    public static final int material_grey_800=0x7f06009e;
    public static final int material_grey_850=0x7f06009f;
    public static final int material_grey_900=0x7f0600a0;
    public static final int message_bubble_color=0x7f0600a1;
    /**
     * Color for missed call icons.
     */
    public static final int missed_call=0x7f0600a2;
    public static final int mtrl_bottom_nav_colored_item_tint=0x7f0600a3;
    public static final int mtrl_bottom_nav_item_tint=0x7f0600a4;
    public static final int mtrl_btn_bg_color_disabled=0x7f0600a5;
    public static final int mtrl_btn_bg_color_selector=0x7f0600a6;
    public static final int mtrl_btn_ripple_color=0x7f0600a7;
    public static final int mtrl_btn_stroke_color_selector=0x7f0600a8;
    public static final int mtrl_btn_text_btn_ripple_color=0x7f0600a9;
    public static final int mtrl_btn_text_color_disabled=0x7f0600aa;
    public static final int mtrl_btn_text_color_selector=0x7f0600ab;
    public static final int mtrl_btn_transparent_bg_color=0x7f0600ac;
    public static final int mtrl_chip_background_color=0x7f0600ad;
    public static final int mtrl_chip_close_icon_tint=0x7f0600ae;
    public static final int mtrl_chip_ripple_color=0x7f0600af;
    public static final int mtrl_chip_text_color=0x7f0600b0;
    public static final int mtrl_fab_ripple_color=0x7f0600b1;
    public static final int mtrl_scrim_color=0x7f0600b2;
    public static final int mtrl_tabs_colored_ripple_color=0x7f0600b3;
    public static final int mtrl_tabs_icon_color_selector=0x7f0600b4;
    public static final int mtrl_tabs_icon_color_selector_colored=0x7f0600b5;
    public static final int mtrl_tabs_legacy_text_color_selector=0x7f0600b6;
    public static final int mtrl_tabs_ripple_color=0x7f0600b7;
    public static final int mtrl_text_btn_text_color_selector=0x7f0600b8;
    public static final int mtrl_textinput_default_box_stroke_color=0x7f0600b9;
    public static final int mtrl_textinput_disabled_color=0x7f0600ba;
    public static final int mtrl_textinput_filled_box_default_background_color=0x7f0600bb;
    public static final int mtrl_textinput_hovered_box_stroke_color=0x7f0600bc;
    public static final int nav_item=0x7f0600bd;
    public static final int nav_item_selected=0x7f0600be;
    /**
     * Colors for the notification actions
     */
    public static final int notification_action_accept=0x7f0600bf;
    public static final int notification_action_answer_video=0x7f0600c0;
    public static final int notification_action_color_filter=0x7f0600c1;
    public static final int notification_action_dismiss=0x7f0600c2;
    public static final int notification_icon_bg_color=0x7f0600c3;
    public static final int notification_material_background_media_default_color=0x7f0600c4;
    public static final int paginator_dot=0x7f0600c5;
    public static final int paginator_path=0x7f0600c6;
    /**
     * Color of the theme of the People app
     */
    public static final int people_app_theme_color=0x7f0600c7;
    public static final int primary_dark_material_dark=0x7f0600c8;
    public static final int primary_dark_material_light=0x7f0600c9;
    public static final int primary_material_dark=0x7f0600ca;
    public static final int primary_material_light=0x7f0600cb;
    public static final int primary_text_default_material_dark=0x7f0600cc;
    public static final int primary_text_default_material_light=0x7f0600cd;
    public static final int primary_text_disabled_material_dark=0x7f0600ce;
    public static final int primary_text_disabled_material_light=0x7f0600cf;
    /**
     * Text color for the "Remove" text when a contact is dragged on top of the remove view
     */
    public static final int remove_highlighted_text_color=0x7f0600d0;
    public static final int ripple_material_dark=0x7f0600d1;
    public static final int ripple_material_light=0x7f0600d2;
    public static final int rtt_button_selected_color=0x7f0600d3;
    public static final int rtt_button_unselected_color=0x7f0600d4;
    public static final int rtt_checkable_button_color=0x7f0600d5;
    public static final int rtt_navigation_bar_color=0x7f0600d6;
    public static final int rtt_status_bar_color=0x7f0600d7;
    public static final int rtt_transcript_background_color=0x7f0600d8;
    public static final int rtt_transcript_primary_color=0x7f0600d9;
    public static final int rtt_transcript_primary_color_dark=0x7f0600da;
    public static final int secondary_text_default_material_dark=0x7f0600db;
    public static final int secondary_text_default_material_light=0x7f0600dc;
    public static final int secondary_text_disabled_material_dark=0x7f0600dd;
    public static final int secondary_text_disabled_material_light=0x7f0600de;
    public static final int settings_primary_dark=0x7f0600df;
    public static final int settings_text_color_primary=0x7f0600e0;
    public static final int settings_text_color_secondary=0x7f0600e1;
    public static final int shortcut_add_contact_background_color=0x7f0600e2;
    public static final int shortcut_add_contact_foreground_color=0x7f0600e3;
    public static final int spam_contact_background=0x7f0600e4;
    /**
     * Background color for status bar. For portrait this will be ignored.
     * Background color for status bar. For portrait this will be ignored.
     */
    public static final int statusbar_background_color=0x7f0600e5;
    public static final int submit_button_background_color=0x7f0600e6;
    public static final int submit_button_color=0x7f0600e7;
    public static final int switch_thumb_disabled_material_dark=0x7f0600e8;
    public static final int switch_thumb_disabled_material_light=0x7f0600e9;
    public static final int switch_thumb_material_dark=0x7f0600ea;
    public static final int switch_thumb_material_light=0x7f0600eb;
    public static final int switch_thumb_normal_material_dark=0x7f0600ec;
    public static final int switch_thumb_normal_material_light=0x7f0600ed;
    public static final int tooltip_background_dark=0x7f0600ee;
    public static final int tooltip_background_light=0x7f0600ef;
    public static final int videocall_button_icon_tint=0x7f0600f0;
    /**
     * 50% black background drawn over the video to make it easier to see text and buttons.
     */
    public static final int videocall_overlay_background_color=0x7f0600f1;
    public static final int voicemail_icon_disabled_tint=0x7f0600f2;
    public static final int voicemail_playpause_icon_tint=0x7f0600f3;
  }
  public static final class dimen {
    public static final int abc_action_bar_content_inset_material=0x7f070000;
    public static final int abc_action_bar_content_inset_with_nav=0x7f070001;
    public static final int abc_action_bar_default_height_material=0x7f070002;
    public static final int abc_action_bar_default_padding_end_material=0x7f070003;
    public static final int abc_action_bar_default_padding_start_material=0x7f070004;
    public static final int abc_action_bar_elevation_material=0x7f070005;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f070006;
    public static final int abc_action_bar_overflow_padding_end_material=0x7f070007;
    public static final int abc_action_bar_overflow_padding_start_material=0x7f070008;
    public static final int abc_action_bar_stacked_max_height=0x7f070009;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f07000a;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f07000b;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f07000c;
    public static final int abc_action_button_min_height_material=0x7f07000d;
    public static final int abc_action_button_min_width_material=0x7f07000e;
    public static final int abc_action_button_min_width_overflow_material=0x7f07000f;
    public static final int abc_alert_dialog_button_bar_height=0x7f070010;
    public static final int abc_alert_dialog_button_dimen=0x7f070011;
    public static final int abc_button_inset_horizontal_material=0x7f070012;
    public static final int abc_button_inset_vertical_material=0x7f070013;
    public static final int abc_button_padding_horizontal_material=0x7f070014;
    public static final int abc_button_padding_vertical_material=0x7f070015;
    public static final int abc_cascading_menus_min_smallest_width=0x7f070016;
    public static final int abc_config_prefDialogWidth=0x7f070017;
    public static final int abc_control_corner_material=0x7f070018;
    public static final int abc_control_inset_material=0x7f070019;
    public static final int abc_control_padding_material=0x7f07001a;
    public static final int abc_dialog_corner_radius_material=0x7f07001b;
    public static final int abc_dialog_fixed_height_major=0x7f07001c;
    public static final int abc_dialog_fixed_height_minor=0x7f07001d;
    public static final int abc_dialog_fixed_width_major=0x7f07001e;
    public static final int abc_dialog_fixed_width_minor=0x7f07001f;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f070020;
    public static final int abc_dialog_list_padding_top_no_title=0x7f070021;
    public static final int abc_dialog_min_width_major=0x7f070022;
    public static final int abc_dialog_min_width_minor=0x7f070023;
    public static final int abc_dialog_padding_material=0x7f070024;
    public static final int abc_dialog_padding_top_material=0x7f070025;
    public static final int abc_dialog_title_divider_material=0x7f070026;
    public static final int abc_disabled_alpha_material_dark=0x7f070027;
    public static final int abc_disabled_alpha_material_light=0x7f070028;
    public static final int abc_dropdownitem_icon_width=0x7f070029;
    public static final int abc_dropdownitem_text_padding_left=0x7f07002a;
    public static final int abc_dropdownitem_text_padding_right=0x7f07002b;
    public static final int abc_edit_text_inset_bottom_material=0x7f07002c;
    public static final int abc_edit_text_inset_horizontal_material=0x7f07002d;
    public static final int abc_edit_text_inset_top_material=0x7f07002e;
    public static final int abc_floating_window_z=0x7f07002f;
    public static final int abc_list_item_padding_horizontal_material=0x7f070030;
    public static final int abc_panel_menu_list_width=0x7f070031;
    public static final int abc_progress_bar_height_material=0x7f070032;
    public static final int abc_search_view_preferred_height=0x7f070033;
    public static final int abc_search_view_preferred_width=0x7f070034;
    public static final int abc_seekbar_track_background_height_material=0x7f070035;
    public static final int abc_seekbar_track_progress_height_material=0x7f070036;
    public static final int abc_select_dialog_padding_start_material=0x7f070037;
    public static final int abc_switch_padding=0x7f070038;
    public static final int abc_text_size_body_1_material=0x7f070039;
    public static final int abc_text_size_body_2_material=0x7f07003a;
    public static final int abc_text_size_button_material=0x7f07003b;
    public static final int abc_text_size_caption_material=0x7f07003c;
    public static final int abc_text_size_display_1_material=0x7f07003d;
    public static final int abc_text_size_display_2_material=0x7f07003e;
    public static final int abc_text_size_display_3_material=0x7f07003f;
    public static final int abc_text_size_display_4_material=0x7f070040;
    public static final int abc_text_size_headline_material=0x7f070041;
    public static final int abc_text_size_large_material=0x7f070042;
    public static final int abc_text_size_medium_material=0x7f070043;
    public static final int abc_text_size_menu_header_material=0x7f070044;
    public static final int abc_text_size_menu_material=0x7f070045;
    public static final int abc_text_size_small_material=0x7f070046;
    public static final int abc_text_size_subhead_material=0x7f070047;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f070048;
    public static final int abc_text_size_title_material=0x7f070049;
    public static final int abc_text_size_title_material_toolbar=0x7f07004a;
    public static final int action_bar_elevation=0x7f07004b;
    /**
     * Height of the actionBar - this is 8dps bigger than the platform standard to give more
     * room to the search box
     */
    public static final int action_bar_height=0x7f07004c;
    public static final int action_bar_height_large=0x7f07004d;
    /**
     * actionbar height + tab height
     */
    public static final int actionbar_contentInsetStart=0x7f07004e;
    /**
     * Assisted Dialing
     */
    public static final int ad_container_height=0x7f07004f;
    public static final int ad_end_margin=0x7f070050;
    public static final int ad_icon_margin_start_offset=0x7f070051;
    /**
     * Used to help smooth the text alignment to the center of the icon
     */
    public static final int ad_icon_margin_top_offset=0x7f070052;
    public static final int ad_icon_size=0x7f070053;
    public static final int ad_text_margin_start=0x7f070054;
    public static final int alert_action_between_padding=0x7f070055;
    /**
     * Dimensions for voicemail alert
     */
    public static final int alert_main_padding=0x7f070056;
    public static final int allow_permission_text_size=0x7f070057;
    public static final int alpha_enabled=0x7f070058;
    public static final int alpha_hiden=0x7f070059;
    public static final int answer_affordance_min_background_radius=0x7f07005a;
    public static final int answer_affordance_touch_target_size=0x7f07005b;
    public static final int answer_avatar_elevation=0x7f07005c;
    public static final int answer_avatar_size=0x7f07005d;
    public static final int answer_contact_name_min_size=0x7f07005e;
    public static final int answer_contact_name_text_size=0x7f07005f;
    public static final int answer_contact_puck_size_no_photo=0x7f070060;
    public static final int answer_contact_puck_size_photo=0x7f070061;
    public static final int answer_data_elevation=0x7f070062;
    public static final int answer_importance_margin_bottom=0x7f070063;
    public static final int answer_message_avatar_size=0x7f070064;
    public static final int answer_message_contents_margin_top=0x7f070065;
    public static final int answer_message_margin_start_end=0x7f070066;
    public static final int answer_min_swipe_amount=0x7f070067;
    public static final int answer_swipe_dead_zone_sides=0x7f070068;
    public static final int answer_swipe_dead_zone_top=0x7f070069;
    public static final int badge_margin_length_1=0x7f07006a;
    public static final int badge_margin_length_2=0x7f07006b;
    public static final int badge_margin_length_3=0x7f07006c;
    public static final int barcode_height=0x7f07006d;
    public static final int blocked_number_add_bottom_margin=0x7f07006e;
    public static final int blocked_number_add_top_margin=0x7f07006f;
    public static final int blocked_number_bottom_margin=0x7f070070;
    /**
     * Size of entries in blocked numbers list
     */
    public static final int blocked_number_container_padding=0x7f070071;
    public static final int blocked_number_delete_icon_size=0x7f070072;
    public static final int blocked_number_horizontal_margin=0x7f070073;
    public static final int blocked_number_primary_text_size=0x7f070074;
    public static final int blocked_number_search_text_size=0x7f070075;
    public static final int blocked_number_settings_description_text_size=0x7f070076;
    public static final int blocked_number_top_margin=0x7f070077;
    public static final int blocked_report_spam_primary_text_size=0x7f070078;
    public static final int button_horizontal_padding=0x7f070079;
    public static final int call_back_button_size=0x7f07007a;
    public static final int call_composer_contact_container_elevation=0x7f07007b;
    public static final int call_composer_contact_container_margin_top=0x7f07007c;
    public static final int call_composer_contact_container_padding_bottom=0x7f07007d;
    public static final int call_composer_contact_container_padding_top=0x7f07007e;
    /**
     * Contact bar
     */
    public static final int call_composer_contact_photo_border_thickness=0x7f07007f;
    public static final int call_composer_contact_photo_size=0x7f070080;
    /**
     * Media bar
     */
    public static final int call_composer_media_actions_width=0x7f070081;
    public static final int call_composer_media_bar_height=0x7f070082;
    public static final int call_composer_name_text_size=0x7f070083;
    public static final int call_composer_number_text_size=0x7f070084;
    public static final int call_composer_view_pager_height=0x7f070085;
    public static final int call_details_contact_photo_padding=0x7f070086;
    public static final int call_details_contact_photo_size=0x7f070087;
    public static final int call_details_top_margin=0x7f070088;
    public static final int call_entry_bottom_padding=0x7f070089;
    /**
     * call entry container
     */
    public static final int call_entry_padding=0x7f07008a;
    public static final int call_entry_text_left_margin=0x7f07008b;
    /**
     * Height of the call log actions section for each call log entry
     */
    public static final int call_log_action_height=0x7f07008c;
    public static final int call_log_action_horizontal_padding=0x7f07008d;
    public static final int call_log_action_icon_dimen=0x7f07008e;
    public static final int call_log_action_icon_margin_start=0x7f07008f;
    public static final int call_log_call_account_margin_bottom=0x7f070090;
    public static final int call_log_day_group_heading_size=0x7f070091;
    public static final int call_log_day_group_padding_bottom=0x7f070092;
    public static final int call_log_day_group_padding_top=0x7f070093;
    public static final int call_log_detail_text_size=0x7f070094;
    /**
     * TODO(uabdullah): These values are to be shared with the call log entries
     */
    public static final int call_log_entry_menu_button_size=0x7f070095;
    /**
     * Call Log
     */
    public static final int call_log_horizontal_margin=0x7f070096;
    public static final int call_log_icon_margin=0x7f070097;
    public static final int call_log_list_item_info_margin_start=0x7f070098;
    public static final int call_log_list_item_primary_action_dimen=0x7f070099;
    public static final int call_log_name_margin_bottom=0x7f07009a;
    public static final int call_log_outer_margin=0x7f07009b;
    public static final int call_log_primary_text_size=0x7f07009c;
    public static final int call_log_start_margin=0x7f07009d;
    public static final int call_log_vertical_padding=0x7f07009e;
    public static final int call_log_voicemail_transcription_text_size=0x7f07009f;
    /**
     * Padding used between lines of text in the call subject dialog.
     */
    public static final int call_subject_dialog_between_line_margin=0x7f0700a0;
    /**
     * Size of the contact photo in the call subject dialog.
     */
    public static final int call_subject_dialog_contact_photo_size=0x7f0700a1;
    /**
     * Margin above the edit text in the call subject dialog.
     */
    public static final int call_subject_dialog_edit_spacing=0x7f0700a2;
    /**
     * Padding used around the periphery of the call subject dialog, as well as in between the
     * items.
     */
    public static final int call_subject_dialog_margin=0x7f0700a3;
    /**
     * Size of primary text in the call subject dialog.
     */
    public static final int call_subject_dialog_primary_text_size=0x7f0700a4;
    /**
     * Size of secondary text in the call subject dialog.
     */
    public static final int call_subject_dialog_secondary_text_size=0x7f0700a5;
    /**
     * Row padding for call subject history items.
     */
    public static final int call_subject_history_item_padding=0x7f0700a6;
    public static final int call_to_action_padding=0x7f0700a7;
    public static final int call_type_icon_size=0x7f0700a8;
    public static final int camera_view_button_margin=0x7f0700a9;
    public static final int camera_view_button_size=0x7f0700aa;
    public static final int capture_button_bottom_margin=0x7f0700ab;
    public static final int capture_button_size=0x7f0700ac;
    public static final int cardview_compat_inset_shadow=0x7f0700ad;
    public static final int cardview_default_elevation=0x7f0700ae;
    public static final int cardview_default_radius=0x7f0700af;
    public static final int center_icon_radius=0x7f0700b0;
    public static final int collapsed_search_bar_height=0x7f0700b1;
    public static final int compat_button_inset_horizontal_material=0x7f0700b2;
    public static final int compat_button_inset_vertical_material=0x7f0700b3;
    public static final int compat_button_padding_horizontal_material=0x7f0700b4;
    public static final int compat_button_padding_vertical_material=0x7f0700b5;
    public static final int compat_control_corner_material=0x7f0700b6;
    public static final int compat_notification_large_icon_max_height=0x7f0700b7;
    public static final int compat_notification_large_icon_max_width=0x7f0700b8;
    public static final int conference_call_manager_button_dimension=0x7f0700b9;
    public static final int contact_actions_header_elevation=0x7f0700ba;
    public static final int contact_actions_image_margin=0x7f0700bb;
    public static final int contact_actions_image_size=0x7f0700bc;
    public static final int contact_browser_list_header_left_margin=0x7f0700bd;
    public static final int contact_browser_list_header_right_margin=0x7f0700be;
    public static final int contact_browser_list_item_gap_between_image_and_text=0x7f0700bf;
    public static final int contact_browser_list_item_photo_size=0x7f0700c0;
    public static final int contact_browser_list_item_text_indent=0x7f0700c1;
    /**
     * contact browser list margins
     */
    public static final int contact_browser_list_item_text_size=0x7f0700c2;
    /**
     * contact container
     */
    public static final int contact_container_padding_bottom_end=0x7f0700c3;
    public static final int contact_container_padding_top_start=0x7f0700c4;
    public static final int contact_list_card_elevation=0x7f0700c5;
    /**
     * Width of a contact list item section header.
     */
    public static final int contact_list_section_header_width=0x7f0700c6;
    /**
     * Size of contact photos in the call log and call details.
     */
    public static final int contact_photo_size=0x7f0700c7;
    /**
     * Dimensions for speed dial tiles
     */
    public static final int contact_tile_divider_width=0x7f0700c8;
    public static final int contact_tile_height_to_width_ratio=0x7f0700c9;
    public static final int contact_tile_info_button_height_and_width=0x7f0700ca;
    public static final int contact_tile_text_bottom_padding=0x7f0700cb;
    public static final int contact_tile_text_side_padding=0x7f0700cc;
    /**
     * Dimensions for connection icons
     */
    public static final int contactgrid_connection_icon_margin_end=0x7f0700cd;
    public static final int context_menu_elevation=0x7f0700ce;
    public static final int design_appbar_elevation=0x7f0700cf;
    public static final int design_bottom_navigation_active_item_max_width=0x7f0700d0;
    public static final int design_bottom_navigation_active_item_min_width=0x7f0700d1;
    public static final int design_bottom_navigation_active_text_size=0x7f0700d2;
    public static final int design_bottom_navigation_elevation=0x7f0700d3;
    public static final int design_bottom_navigation_height=0x7f0700d4;
    public static final int design_bottom_navigation_icon_size=0x7f0700d5;
    public static final int design_bottom_navigation_item_max_width=0x7f0700d6;
    public static final int design_bottom_navigation_item_min_width=0x7f0700d7;
    public static final int design_bottom_navigation_margin=0x7f0700d8;
    public static final int design_bottom_navigation_shadow_height=0x7f0700d9;
    public static final int design_bottom_navigation_text_size=0x7f0700da;
    public static final int design_bottom_sheet_modal_elevation=0x7f0700db;
    public static final int design_bottom_sheet_peek_height_min=0x7f0700dc;
    public static final int design_fab_border_width=0x7f0700dd;
    public static final int design_fab_elevation=0x7f0700de;
    public static final int design_fab_image_size=0x7f0700df;
    public static final int design_fab_size_mini=0x7f0700e0;
    public static final int design_fab_size_normal=0x7f0700e1;
    public static final int design_fab_translation_z_hovered_focused=0x7f0700e2;
    public static final int design_fab_translation_z_pressed=0x7f0700e3;
    public static final int design_navigation_elevation=0x7f0700e4;
    public static final int design_navigation_icon_padding=0x7f0700e5;
    public static final int design_navigation_icon_size=0x7f0700e6;
    public static final int design_navigation_item_horizontal_padding=0x7f0700e7;
    public static final int design_navigation_item_icon_padding=0x7f0700e8;
    public static final int design_navigation_max_width=0x7f0700e9;
    public static final int design_navigation_padding_bottom=0x7f0700ea;
    public static final int design_navigation_separator_vertical_padding=0x7f0700eb;
    public static final int design_snackbar_action_inline_max_width=0x7f0700ec;
    public static final int design_snackbar_background_corner_radius=0x7f0700ed;
    public static final int design_snackbar_elevation=0x7f0700ee;
    public static final int design_snackbar_extra_spacing_horizontal=0x7f0700ef;
    public static final int design_snackbar_max_width=0x7f0700f0;
    public static final int design_snackbar_min_width=0x7f0700f1;
    public static final int design_snackbar_padding_horizontal=0x7f0700f2;
    public static final int design_snackbar_padding_vertical=0x7f0700f3;
    public static final int design_snackbar_padding_vertical_2lines=0x7f0700f4;
    public static final int design_snackbar_text_size=0x7f0700f5;
    public static final int design_tab_max_width=0x7f0700f6;
    public static final int design_tab_scrollable_min_width=0x7f0700f7;
    public static final int design_tab_text_size=0x7f0700f8;
    public static final int design_tab_text_size_2line=0x7f0700f9;
    public static final int design_textinput_caption_translate_y=0x7f0700fa;
    /**
     * Minimum width for material compliant buttons.
     */
    public static final int dialer_button_min_width=0x7f0700fb;
    /**
     * Minimum height required for all row elements in Dialer lists.
     */
    public static final int dialer_list_item_min_height=0x7f0700fc;
    /**
     * Minimum a11y height and width required for all touch targets.
     */
    public static final int dialer_touch_target_min_size=0x7f0700fd;
    /**
     * The bottom space of the dialpad to account for the dial button
     * The bottom space of the dialpad to account for the dial button
     */
    public static final int dialpad_bottom_space_height=0x7f0700fe;
    public static final int dialpad_digits_height=0x7f0700ff;
    public static final int dialpad_digits_menu_left_padding=0x7f070100;
    public static final int dialpad_digits_menu_right_padding=0x7f070101;
    public static final int dialpad_digits_padding=0x7f070102;
    public static final int dialpad_digits_text_min_size=0x7f070103;
    public static final int dialpad_digits_text_size=0x7f070104;
    public static final int dialpad_key_button_translate_y=0x7f070105;
    public static final int dialpad_key_height=0x7f070106;
    public static final int dialpad_key_letters_default_size_for_dual_alphabets=0x7f070107;
    public static final int dialpad_key_letters_default_size_for_single_alphabet=0x7f070108;
    public static final int dialpad_key_margin_right=0x7f070109;
    public static final int dialpad_key_number_default_margin_bottom=0x7f07010a;
    public static final int dialpad_key_number_width=0x7f07010b;
    /**
     * Text dimensions for dialpad keys
     */
    public static final int dialpad_key_numbers_default_size=0x7f07010c;
    /**
     * Text dimensions for dialpad keys
     */
    public static final int dialpad_key_pound_size=0x7f07010d;
    public static final int dialpad_key_star_size=0x7f07010e;
    public static final int dialpad_overflow_margin=0x7f07010f;
    public static final int dialpad_space_above_keys=0x7f070110;
    public static final int dialpad_space_below_keys=0x7f070111;
    public static final int dialpad_symbol_margin_bottom=0x7f070112;
    public static final int dialpad_voicemail_icon_size=0x7f070113;
    public static final int directory_header_extra_bottom_padding=0x7f070114;
    public static final int directory_header_extra_top_padding=0x7f070115;
    public static final int disabled_alpha_material_dark=0x7f070116;
    public static final int disabled_alpha_material_light=0x7f070117;
    public static final int disambig_dialog_width=0x7f070118;
    /**
     * EC container
     */
    public static final int ec_container_height=0x7f070119;
    public static final int ec_divider_top_bottom_margin=0x7f07011a;
    public static final int ec_photo_size=0x7f07011b;
    /**
     * Empty List
     */
    public static final int empty_list_message_text_size=0x7f07011c;
    public static final int expanded_search_bar_height=0x7f07011d;
    public static final int expanded_search_bar_height_minus=0x7f07011e;
    public static final int fast_scroller_bottom_left_corner_radius=0x7f07011f;
    public static final int fast_scroller_bottom_right_corner_radius=0x7f070120;
    public static final int fast_scroller_container_corner_radius=0x7f070121;
    public static final int fast_scroller_container_size=0x7f070122;
    public static final int fast_scroller_touch_target_width=0x7f070123;
    public static final int fastscroll_default_thickness=0x7f070124;
    public static final int fastscroll_margin=0x7f070125;
    public static final int fastscroll_minimum_range=0x7f070126;
    /**
     * Padding from the last contact tile will provide the end padding.
     */
    public static final int favorites_row_end_padding=0x7f070127;
    public static final int favorites_row_start_padding=0x7f070128;
    public static final int favorites_row_top_padding=0x7f070129;
    /**
     * Size of the star icon on the favorites tile.
     */
    public static final int favorites_star_icon_size=0x7f07012a;
    /**
     * Height of the floating action button
     */
    public static final int floating_action_button_height=0x7f07012b;
    /**
     * Padding to be applied to the bottom of lists to make space for the floating action
     * button
     */
    public static final int floating_action_button_list_bottom_padding=0x7f07012c;
    /**
     * Bottom margin of the floating action button
     * Bottom margin of the floating action button
     */
    public static final int floating_action_button_margin_bottom=0x7f07012d;
    /**
     * Floating Action Button
     * Right margin of the floating action button
     */
    public static final int floating_action_button_margin_right=0x7f07012e;
    /**
     * Z translation of the floating action button
     */
    public static final int floating_action_button_translation_z=0x7f07012f;
    public static final int floating_action_button_width=0x7f070130;
    public static final int focus_inner_offset=0x7f070131;
    public static final int focus_inner_stroke=0x7f070132;
    public static final int focus_outer_stroke=0x7f070133;
    public static final int focus_radius_offset=0x7f070134;
    public static final int gallery_check_size=0x7f070135;
    public static final int gallery_item_corner_radius=0x7f070136;
    public static final int gallery_item_padding=0x7f070137;
    /**
     * Gallery Composer
     */
    public static final int gallery_item_selected_padding=0x7f070138;
    public static final int header_width=0x7f070139;
    public static final int helpline_primary_text_size=0x7f07013a;
    public static final int helpline_secondary_text_size=0x7f07013b;
    public static final int highlight_alpha_material_colored=0x7f07013c;
    public static final int highlight_alpha_material_dark=0x7f07013d;
    public static final int highlight_alpha_material_light=0x7f07013e;
    public static final int hint_alpha_material_dark=0x7f07013f;
    public static final int hint_alpha_material_light=0x7f070140;
    public static final int hint_grow_amount_sideways=0x7f070141;
    public static final int hint_initial_offset=0x7f070142;
    public static final int hint_large_begin_size=0x7f070143;
    public static final int hint_large_end_size=0x7f070144;
    public static final int hint_mid_begin_size=0x7f070145;
    public static final int hint_mid_end_size=0x7f070146;
    public static final int hint_offset=0x7f070147;
    public static final int hint_pressed_alpha_material_dark=0x7f070148;
    public static final int hint_pressed_alpha_material_light=0x7f070149;
    public static final int hint_small_begin_size=0x7f07014a;
    public static final int hint_small_end_size=0x7f07014b;
    public static final int hint_text_size=0x7f07014c;
    /**
     * Top/Bottom padding around the ILD rate display box.
     */
    public static final int ild_margin_height=0x7f07014d;
    public static final int incall_avatar_size=0x7f07014e;
    public static final int incall_button_elevation=0x7f07014f;
    public static final int incall_button_label_margin=0x7f070150;
    public static final int incall_button_padding=0x7f070151;
    public static final int incall_button_vertical_padding=0x7f070152;
    public static final int incall_call_button_elevation=0x7f070153;
    public static final int incall_dialpad_digits_adjustable_height=0x7f070154;
    public static final int incall_dialpad_digits_adjustable_text_size=0x7f070155;
    public static final int incall_dialpad_key_letters_size_for_dual_alphabets=0x7f070156;
    public static final int incall_dialpad_key_letters_size_for_single_alphabet=0x7f070157;
    /**
     * The InCallUI dialpad will sometimes want digits sizes that are different
     * from dialer. Note, these are the default sizes for small devices. Larger
     * screen sizes apply the values in values-sw360dp/dimens.xml.
     * The InCallUI dialpad will sometimes want digits sizes that are different from dialer.
     */
    public static final int incall_dialpad_key_number_margin_bottom=0x7f070158;
    public static final int incall_dialpad_key_numbers_size=0x7f070159;
    public static final int incall_end_call_button_size=0x7f07015a;
    public static final int incall_end_call_spacing=0x7f07015b;
    public static final int incall_labeled_button_icon_size=0x7f07015c;
    public static final int incall_labeled_button_size=0x7f07015d;
    public static final int incall_window_margin_horizontal=0x7f07015e;
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f07015f;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f070160;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f070161;
    public static final int launcher_shortcut_adaptive_icon_size=0x7f070162;
    public static final int launcher_shortcut_icon_size=0x7f070163;
    /**
     * Dimensions for contact letter tiles
     */
    public static final int letter_to_tile_ratio=0x7f070164;
    /**
     * Padding between the action bar's bottom edge and the first header
     * in contacts/group lists.
     */
    public static final int list_header_extra_top_padding=0x7f070165;
    /**
     * Minimum height used with @drawable/list_section_divider_holo_custom.
     * Right now the drawable has implicit 32dip minimal height, which is confusing.
     * This value is for making the hidden configuration explicit in xml.
     */
    public static final int list_section_divider_min_height=0x7f070166;
    /**
     * Padding to be used between a visible scrollbar and the contact list
     */
    public static final int list_visible_scrollbar_padding=0x7f070167;
    public static final int location_map_height=0x7f070168;
    public static final int location_map_width=0x7f070169;
    public static final int message_compose_item_text_size=0x7f07016a;
    public static final int message_compose_remaining_char_text_size=0x7f07016b;
    public static final int message_composer_divider_height=0x7f07016c;
    /**
     * Message Composer
     */
    public static final int message_composer_item_padding=0x7f07016d;
    public static final int message_divider_height=0x7f07016e;
    /**
     * Message Fragment
     */
    public static final int message_item_text_size=0x7f07016f;
    public static final int message_remaining_char_text_size=0x7f070170;
    public static final int min_touch_target_size=0x7f070171;
    public static final int mtrl_bottomappbar_fabOffsetEndMode=0x7f070172;
    public static final int mtrl_bottomappbar_fab_cradle_margin=0x7f070173;
    public static final int mtrl_bottomappbar_fab_cradle_rounded_corner_radius=0x7f070174;
    public static final int mtrl_bottomappbar_fab_cradle_vertical_offset=0x7f070175;
    public static final int mtrl_bottomappbar_height=0x7f070176;
    public static final int mtrl_btn_corner_radius=0x7f070177;
    public static final int mtrl_btn_dialog_btn_min_width=0x7f070178;
    public static final int mtrl_btn_disabled_elevation=0x7f070179;
    public static final int mtrl_btn_disabled_z=0x7f07017a;
    public static final int mtrl_btn_elevation=0x7f07017b;
    public static final int mtrl_btn_focused_z=0x7f07017c;
    public static final int mtrl_btn_hovered_z=0x7f07017d;
    public static final int mtrl_btn_icon_btn_padding_left=0x7f07017e;
    public static final int mtrl_btn_icon_padding=0x7f07017f;
    public static final int mtrl_btn_inset=0x7f070180;
    public static final int mtrl_btn_letter_spacing=0x7f070181;
    public static final int mtrl_btn_padding_bottom=0x7f070182;
    public static final int mtrl_btn_padding_left=0x7f070183;
    public static final int mtrl_btn_padding_right=0x7f070184;
    public static final int mtrl_btn_padding_top=0x7f070185;
    public static final int mtrl_btn_pressed_z=0x7f070186;
    public static final int mtrl_btn_stroke_size=0x7f070187;
    public static final int mtrl_btn_text_btn_icon_padding=0x7f070188;
    public static final int mtrl_btn_text_btn_padding_left=0x7f070189;
    public static final int mtrl_btn_text_btn_padding_right=0x7f07018a;
    public static final int mtrl_btn_text_size=0x7f07018b;
    public static final int mtrl_btn_z=0x7f07018c;
    public static final int mtrl_card_elevation=0x7f07018d;
    public static final int mtrl_card_spacing=0x7f07018e;
    public static final int mtrl_chip_pressed_translation_z=0x7f07018f;
    public static final int mtrl_chip_text_size=0x7f070190;
    public static final int mtrl_fab_elevation=0x7f070191;
    public static final int mtrl_fab_translation_z_hovered_focused=0x7f070192;
    public static final int mtrl_fab_translation_z_pressed=0x7f070193;
    public static final int mtrl_navigation_elevation=0x7f070194;
    public static final int mtrl_navigation_item_horizontal_padding=0x7f070195;
    public static final int mtrl_navigation_item_icon_padding=0x7f070196;
    public static final int mtrl_snackbar_background_corner_radius=0x7f070197;
    public static final int mtrl_snackbar_margin=0x7f070198;
    public static final int mtrl_textinput_box_bottom_offset=0x7f070199;
    public static final int mtrl_textinput_box_corner_radius_medium=0x7f07019a;
    public static final int mtrl_textinput_box_corner_radius_small=0x7f07019b;
    public static final int mtrl_textinput_box_label_cutout_padding=0x7f07019c;
    public static final int mtrl_textinput_box_padding_end=0x7f07019d;
    public static final int mtrl_textinput_box_stroke_width_default=0x7f07019e;
    public static final int mtrl_textinput_box_stroke_width_focused=0x7f07019f;
    public static final int mtrl_textinput_outline_box_expanded_padding=0x7f0701a0;
    public static final int mtrl_toolbar_default_height=0x7f0701a1;
    public static final int notification_action_icon_size=0x7f0701a2;
    public static final int notification_action_text_size=0x7f0701a3;
    public static final int notification_big_circle_margin=0x7f0701a4;
    public static final int notification_content_margin_start=0x7f0701a5;
    /**
     * Dimension used to possibly down-scale high-res photo into what is suitable
     * for notification's large icon.
     */
    public static final int notification_icon_size=0x7f0701a6;
    public static final int notification_large_icon_height=0x7f0701a7;
    public static final int notification_large_icon_width=0x7f0701a8;
    public static final int notification_main_column_padding_top=0x7f0701a9;
    public static final int notification_media_narrow_margin=0x7f0701aa;
    public static final int notification_right_icon_size=0x7f0701ab;
    public static final int notification_right_side_padding_top=0x7f0701ac;
    public static final int notification_small_icon_background_padding=0x7f0701ad;
    public static final int notification_small_icon_size_as_large=0x7f0701ae;
    public static final int notification_subtext_size=0x7f0701af;
    public static final int notification_top_pad=0x7f0701b0;
    public static final int notification_top_pad_large_text=0x7f0701b1;
    public static final int paginator_dot_radius=0x7f0701b2;
    public static final int paginator_dots_separation=0x7f0701b3;
    public static final int paginator_height=0x7f0701b4;
    public static final int paginator_width=0x7f0701b5;
    public static final int permission_allow_padding=0x7f0701b6;
    /**
     * Permissions view
     */
    public static final int permission_image_size=0x7f0701b7;
    public static final int permission_item_margin=0x7f0701b8;
    public static final int photo_size=0x7f0701b9;
    public static final int photo_text_margin=0x7f0701ba;
    public static final int pie_radius_increment=0x7f0701bb;
    /**
     * Camera focus indicator values
     */
    public static final int pie_radius_start=0x7f0701bc;
    public static final int pie_touch_offset=0x7f0701bd;
    public static final int privacy_toast_y_offset=0x7f0701be;
    public static final int promo_card_action_between_padding=0x7f0701bf;
    public static final int promo_card_action_end_padding=0x7f0701c0;
    public static final int promo_card_action_vertical_padding=0x7f0701c1;
    /**
     * Dimensions for promo cards
     */
    public static final int promo_card_icon_size=0x7f0701c2;
    public static final int promo_card_line_spacing=0x7f0701c3;
    public static final int promo_card_main_padding=0x7f0701c4;
    public static final int promo_card_start_padding=0x7f0701c5;
    public static final int promo_card_title_padding=0x7f0701c6;
    public static final int promo_card_top_padding=0x7f0701c7;
    /**
     * Drag to remove view (in dp because it is used in conjunction with a statically
     * sized icon
     */
    public static final int remove_text_size=0x7f0701c8;
    public static final int return_to_call_initial_offset_y=0x7f0701c9;
    public static final int row_end_margin=0x7f0701ca;
    public static final int row_height=0x7f0701cb;
    public static final int row_start_padding=0x7f0701cc;
    public static final int row_top_bottom_padding=0x7f0701cd;
    public static final int rtt_avatar_size=0x7f0701ce;
    /**
     * This is used to control image size inside the button.
     */
    public static final int rtt_banner_button_padding=0x7f0701cf;
    public static final int rtt_banner_height=0x7f0701d0;
    public static final int rtt_message_margin_top=0x7f0701d1;
    public static final int rtt_overflow_menu_elevation=0x7f0701d2;
    public static final int rtt_overflow_menu_width=0x7f0701d3;
    public static final int rtt_same_group_message_margin_top=0x7f0701d4;
    public static final int rtt_transcript_avatar_size=0x7f0701d5;
    public static final int rtt_transcript_message_margin_top=0x7f0701d6;
    public static final int rtt_transcript_same_group_message_margin_top=0x7f0701d7;
    public static final int scrollview_max_height=0x7f0701d8;
    public static final int search_bar_margin=0x7f0701d9;
    /**
     * Margin below the search box.
     */
    public static final int search_bottom_margin=0x7f0701da;
    /**
     * Padding around the close button. It's visible size without padding is 24dp.
     */
    public static final int search_box_close_icon_padding=0x7f0701db;
    /**
     * Size of the close icon.
     */
    public static final int search_box_close_icon_size=0x7f0701dc;
    public static final int search_box_collapsed_text_margin_left=0x7f0701dd;
    public static final int search_box_elevation=0x7f0701de;
    /**
     * Size of the icon (voice search, back arrow) in the search box.
     */
    public static final int search_box_icon_size=0x7f0701df;
    /**
     * Search box interior padding - left
     */
    public static final int search_box_left_padding=0x7f0701e0;
    /**
     * Padding around back arrow icon in the search box
     */
    public static final int search_box_navigation_icon_margin=0x7f0701e1;
    public static final int search_box_search_icon_padding=0x7f0701e2;
    /**
     * Left margin of the text field in the search box.
     */
    public static final int search_box_text_left_margin=0x7f0701e3;
    public static final int search_collapsed_text_size=0x7f0701e4;
    public static final int search_list_padding_top=0x7f0701e5;
    /**
     * Margin to the left and right of the search box.
     */
    public static final int search_margin_horizontal=0x7f0701e6;
    public static final int search_photo_padding=0x7f0701e7;
    public static final int search_row_height=0x7f0701e8;
    public static final int search_text_padding_start=0x7f0701e9;
    /**
     * Search box text size
     */
    public static final int search_text_size=0x7f0701ea;
    /**
     * Margin above the search box.
     */
    public static final int search_top_margin=0x7f0701eb;
    public static final int select_all_icon_padding=0x7f0701ec;
    public static final int select_all_text_left_padding=0x7f0701ed;
    /**
     * Select All/Multi Select
     */
    public static final int select_all_text_size=0x7f0701ee;
    public static final int send_and_call_drawable_padding=0x7f0701ef;
    /**
     * Send and Call button
     */
    public static final int send_and_call_text_size=0x7f0701f0;
    public static final int send_container_width=0x7f0701f1;
    /**
     * Length of dialpad's shadows in dialer.
     */
    public static final int shadow_length=0x7f0701f2;
    public static final int speed_dial_context_menu_corner_radius=0x7f0701f3;
    /**
     * ~ This value expands the context menu to allow space for more text w/o being flush with the edge
     * ~ of the screen. Calculated with 2 * (speed_dial_recyclerview_horizontal_padding - 2dp)
     */
    public static final int speed_dial_context_menu_extra_width=0x7f0701f4;
    public static final int speed_dial_context_menu_width=0x7f0701f5;
    /**
     * ~ This value centers the context menu with the favorite item layout.
     * ~ Calculated with -1 * (speed_dial_context_menu_extra_width * 1.75)
     */
    public static final int speed_dial_context_menu_x_offset=0x7f0701f6;
    public static final int speed_dial_recyclerview_horizontal_padding=0x7f0701f7;
    public static final int subtitle_corner_radius=0x7f0701f8;
    public static final int subtitle_outline_width=0x7f0701f9;
    public static final int subtitle_shadow_offset=0x7f0701fa;
    public static final int subtitle_shadow_radius=0x7f0701fb;
    public static final int tab_elevation=0x7f0701fc;
    public static final int tab_height=0x7f0701fd;
    /**
     * Height of the selection indicator of a tab.
     */
    public static final int tab_selected_underline_height=0x7f0701fe;
    /**
     * Size of text in tabs.
     */
    public static final int tab_text_size=0x7f0701ff;
    public static final int tab_unread_count_background_radius=0x7f070200;
    public static final int tab_unread_count_background_size=0x7f070201;
    public static final int tab_unread_count_margin_left=0x7f070202;
    public static final int tab_unread_count_margin_top=0x7f070203;
    public static final int tab_unread_count_text_padding=0x7f070204;
    public static final int tab_unread_count_text_size=0x7f070205;
    public static final int text_padding_end=0x7f070206;
    public static final int text_padding_start=0x7f070207;
    public static final int text_size=0x7f070208;
    public static final int textview_item_padding=0x7f070209;
    public static final int toolbar_elevation=0x7f07020a;
    public static final int toolbar_end_padding=0x7f07020b;
    public static final int toolbar_subtitle_text_size=0x7f07020c;
    public static final int toolbar_title_text_size=0x7f07020d;
    public static final int tools_button_height=0x7f07020e;
    public static final int tooltip_corner_radius=0x7f07020f;
    public static final int tooltip_horizontal_padding=0x7f070210;
    public static final int tooltip_margin=0x7f070211;
    public static final int tooltip_precise_anchor_extra_offset=0x7f070212;
    public static final int tooltip_precise_anchor_threshold=0x7f070213;
    public static final int tooltip_vertical_padding=0x7f070214;
    public static final int tooltip_y_offset_non_touch=0x7f070215;
    public static final int tooltip_y_offset_touch=0x7f070216;
    public static final int track_width=0x7f070217;
    public static final int two_button_bottom_padding=0x7f070218;
    public static final int two_button_button_size=0x7f070219;
    public static final int two_button_label_padding=0x7f07021a;
    public static final int two_button_label_size=0x7f07021b;
    public static final int video_call_lte_to_wifi_failed_do_not_show_text_size=0x7f07021c;
    public static final int videocall_button_padding=0x7f07021d;
    public static final int videocall_button_size=0x7f07021e;
    public static final int videocall_button_spacing=0x7f07021f;
    public static final int videocall_preview_height=0x7f070220;
    public static final int videocall_preview_long=0x7f070221;
    public static final int videocall_preview_margin_bottom=0x7f070222;
    public static final int videocall_preview_margin_end=0x7f070223;
    public static final int videocall_preview_margin_start=0x7f070224;
    public static final int videocall_preview_width=0x7f070225;
    public static final int voicemail_duration_size=0x7f070226;
    /**
     * TODO(uabdullah): Work with UX on these values so that the touch target is not too small
     */
    public static final int voicemail_media_player_height=0x7f070227;
    /**
     * TODO(uabdullah): Work with UX on this value to ensure proper spacing between
     * the seekbar and transcription
     */
    public static final int voicemail_media_player_padding_top=0x7f070228;
    public static final int voicemail_media_player_width=0x7f070229;
    public static final int voicemail_playback_state_text_size=0x7f07022a;
    public static final int voicemail_playback_top_padding=0x7f07022b;
    public static final int voicemail_promo_card_action_between_padding=0x7f07022c;
    public static final int voicemail_promo_card_action_end_padding=0x7f07022d;
    public static final int voicemail_promo_card_action_vertical_padding=0x7f07022e;
    public static final int voicemail_promo_card_icon_size=0x7f07022f;
    public static final int voicemail_promo_card_line_spacing=0x7f070230;
    public static final int voicemail_promo_card_main_padding=0x7f070231;
    public static final int voicemail_promo_card_message_size=0x7f070232;
    public static final int voicemail_promo_card_title_padding=0x7f070233;
    public static final int voicemail_promo_card_title_text_size=0x7f070234;
    public static final int voicemail_tos_image_size=0x7f070235;
    public static final int voicemail_transcription_text_size=0x7f070236;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f08000e;
    public static final int abc_action_bar_item_background_material=0x7f08000f;
    public static final int abc_btn_borderless_material=0x7f080010;
    public static final int abc_btn_check_material=0x7f080011;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f080012;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f080013;
    public static final int abc_btn_colored_material=0x7f080014;
    public static final int abc_btn_default_mtrl_shape=0x7f080015;
    public static final int abc_btn_radio_material=0x7f080016;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f080017;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f080018;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f080019;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f08001a;
    public static final int abc_cab_background_internal_bg=0x7f08001b;
    public static final int abc_cab_background_top_material=0x7f08001c;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f08001d;
    public static final int abc_control_background_material=0x7f08001e;
    public static final int abc_dialog_material_background=0x7f08001f;
    public static final int abc_edit_text_material=0x7f080020;
    public static final int abc_ic_ab_back_material=0x7f080021;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f080022;
    public static final int abc_ic_clear_material=0x7f080023;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f080024;
    public static final int abc_ic_go_search_api_material=0x7f080025;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f080026;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f080027;
    public static final int abc_ic_menu_overflow_material=0x7f080028;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f080029;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f08002a;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f08002b;
    public static final int abc_ic_search_api_material=0x7f08002c;
    public static final int abc_ic_star_black_16dp=0x7f08002d;
    public static final int abc_ic_star_black_36dp=0x7f08002e;
    public static final int abc_ic_star_black_48dp=0x7f08002f;
    public static final int abc_ic_star_half_black_16dp=0x7f080030;
    public static final int abc_ic_star_half_black_36dp=0x7f080031;
    public static final int abc_ic_star_half_black_48dp=0x7f080032;
    public static final int abc_ic_voice_search_api_material=0x7f080033;
    public static final int abc_item_background_holo_dark=0x7f080034;
    public static final int abc_item_background_holo_light=0x7f080035;
    public static final int abc_list_divider_material=0x7f080036;
    public static final int abc_list_divider_mtrl_alpha=0x7f080037;
    public static final int abc_list_focused_holo=0x7f080038;
    public static final int abc_list_longpressed_holo=0x7f080039;
    public static final int abc_list_pressed_holo_dark=0x7f08003a;
    public static final int abc_list_pressed_holo_light=0x7f08003b;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f08003c;
    public static final int abc_list_selector_background_transition_holo_light=0x7f08003d;
    public static final int abc_list_selector_disabled_holo_dark=0x7f08003e;
    public static final int abc_list_selector_disabled_holo_light=0x7f08003f;
    public static final int abc_list_selector_holo_dark=0x7f080040;
    public static final int abc_list_selector_holo_light=0x7f080041;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f080042;
    public static final int abc_popup_background_mtrl_mult=0x7f080043;
    public static final int abc_ratingbar_indicator_material=0x7f080044;
    public static final int abc_ratingbar_material=0x7f080045;
    public static final int abc_ratingbar_small_material=0x7f080046;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f080047;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f080048;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f080049;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f08004a;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f08004b;
    public static final int abc_seekbar_thumb_material=0x7f08004c;
    public static final int abc_seekbar_tick_mark_material=0x7f08004d;
    public static final int abc_seekbar_track_material=0x7f08004e;
    public static final int abc_spinner_mtrl_am_alpha=0x7f08004f;
    public static final int abc_spinner_textfield_background_material=0x7f080050;
    public static final int abc_switch_thumb_material=0x7f080051;
    public static final int abc_switch_track_mtrl_alpha=0x7f080052;
    public static final int abc_tab_indicator_material=0x7f080053;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f080054;
    public static final int abc_text_cursor_material=0x7f080055;
    public static final int abc_text_select_handle_left_mtrl_dark=0x7f080056;
    public static final int abc_text_select_handle_left_mtrl_light=0x7f080057;
    public static final int abc_text_select_handle_middle_mtrl_dark=0x7f080058;
    public static final int abc_text_select_handle_middle_mtrl_light=0x7f080059;
    public static final int abc_text_select_handle_right_mtrl_dark=0x7f08005a;
    public static final int abc_text_select_handle_right_mtrl_light=0x7f08005b;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f08005c;
    public static final int abc_textfield_default_mtrl_alpha=0x7f08005d;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f08005e;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f08005f;
    public static final int abc_textfield_search_material=0x7f080060;
    public static final int abc_vector_test=0x7f080061;
    public static final int answer_answer_background=0x7f080062;
    public static final int answer_data_background=0x7f080063;
    public static final int answer_decline_background=0x7f080064;
    public static final int answer_hint_large=0x7f080065;
    public static final int answer_hint_mid=0x7f080066;
    public static final int answer_hint_small=0x7f080067;
    public static final int answer_text_only_background=0x7f080068;
    public static final int asd_hd_icon=0x7f080069;
    public static final int avd_hd_attempting=0x7f08006a;
    public static final int avd_hide_password=0x7f08006b;
    public static final int avd_show_password=0x7f08006c;
    public static final int back_arrow=0x7f08006d;
    public static final int bg_location_card=0x7f08006e;
    public static final int blocked_contact=0x7f08006f;
    public static final int btn_dialpad_key=0x7f080070;
    public static final int business_asset=0x7f080071;
    public static final int call_composer_contact_border=0x7f080072;
    public static final int cat_paw=0x7f080073;
    public static final int circular_background=0x7f080074;
    public static final int contact_photo_badge_background=0x7f080075;
    public static final int context_menu_contact_icon=0x7f080076;
    public static final int custom_cursor=0x7f080077;
    public static final int design_bottom_navigation_item_background=0x7f080078;
    public static final int design_fab_background=0x7f080079;
    public static final int design_ic_visibility=0x7f08007a;
    public static final int design_ic_visibility_off=0x7f08007b;
    public static final int design_password_eye=0x7f08007c;
    public static final int design_snackbar_background=0x7f08007d;
    public static final int dialog_background_material=0x7f08007e;
    public static final int dog_paw=0x7f08007f;
    public static final int edittext_custom_cursor=0x7f080080;
    public static final int empty_call_log=0x7f080081;
    public static final int empty_contacts=0x7f080082;
    public static final int empty_speed_dial=0x7f080083;
    public static final int fast_scroller_container_background=0x7f080084;
    public static final int fast_scroller_scroll_bar=0x7f080085;
    public static final int fastscroll_thumb=0x7f080086;
    public static final int favorite_icon=0x7f080087;
    public static final int front_back_switch_button=0x7f080088;
    public static final int front_back_switch_button_animation=0x7f080089;
    public static final int gallery_background=0x7f08008a;
    public static final int gallery_grid_checkbox_background=0x7f08008b;
    public static final int gallery_grid_item_view_background=0x7f08008c;
    public static final int gallery_item_selected_drawable=0x7f08008d;
    public static final int ic_add_contact_foreground=0x7f08008e;
    public static final int ic_addcall_white=0x7f08008f;
    public static final int ic_arrow_back_grey600_48dp=0x7f080090;
    public static final int ic_block_grey_48dp=0x7f080091;
    public static final int ic_call_note_white_24dp=0x7f080092;
    public static final int ic_call_split_white_24dp=0x7f080093;
    public static final int ic_capture=0x7f080094;
    public static final int ic_check_mark_48dp=0x7f080095;
    public static final int ic_check_mark_blue_24dp=0x7f080096;
    public static final int ic_circles_add_googblue_48dp=0x7f080097;
    public static final int ic_dialer_fork_add_call=0x7f080098;
    public static final int ic_dialer_fork_current_call=0x7f080099;
    public static final int ic_dialer_fork_tt_keypad=0x7f08009a;
    public static final int ic_empty_check_mark_white_24dp=0x7f08009b;
    public static final int ic_end_answer_32=0x7f08009c;
    public static final int ic_handle=0x7f08009d;
    public static final int ic_hd_call=0x7f08009e;
    public static final int ic_help=0x7f08009f;
    public static final int ic_helpline_call=0x7f0800a0;
    public static final int ic_launcher_background=0x7f0800a1;
    public static final int ic_launcher_foreground=0x7f0800a2;
    public static final int ic_menu_history_lt=0x7f0800a3;
    public static final int ic_mic_grey600=0x7f0800a4;
    public static final int ic_mtrl_chip_checked_black=0x7f0800a5;
    public static final int ic_mtrl_chip_checked_circle=0x7f0800a6;
    public static final int ic_mtrl_chip_close_circle=0x7f0800a7;
    public static final int ic_not_interested_googblue_24dp=0x7f0800a8;
    public static final int ic_not_spam=0x7f0800a9;
    public static final int ic_ongoing_phone_24px_01=0x7f0800aa;
    public static final int ic_ongoing_phone_24px_02=0x7f0800ab;
    public static final int ic_ongoing_phone_24px_03=0x7f0800ac;
    public static final int ic_ongoing_phone_24px_04=0x7f0800ad;
    public static final int ic_ongoing_phone_24px_05=0x7f0800ae;
    public static final int ic_ongoing_phone_24px_06=0x7f0800af;
    public static final int ic_ongoing_phone_24px_07=0x7f0800b0;
    public static final int ic_ongoing_phone_24px_08=0x7f0800b1;
    public static final int ic_ongoing_phone_24px_09=0x7f0800b2;
    public static final int ic_pause=0x7f0800b3;
    public static final int ic_phone_24dp=0x7f0800b4;
    public static final int ic_phone_attach=0x7f0800b5;
    public static final int ic_phone_audio_grey600_24dp=0x7f0800b6;
    public static final int ic_places_picture_180_holo_light=0x7f0800b7;
    public static final int ic_places_picture_holo_light=0x7f0800b8;
    public static final int ic_play_arrow=0x7f0800b9;
    public static final int ic_play_circle_filled_googblue_48dp=0x7f0800ba;
    public static final int ic_remove=0x7f0800bb;
    public static final int ic_scroll_handle=0x7f0800bc;
    public static final int ic_scroll_handle_default=0x7f0800bd;
    public static final int ic_scroll_handle_pressed=0x7f0800be;
    public static final int ic_shortcut_add_contact=0x7f0800bf;
    public static final int ic_sim_change_white=0x7f0800c0;
    public static final int ic_sim_change_white_00=0x7f0800c1;
    public static final int ic_sim_change_white_01=0x7f0800c2;
    public static final int ic_sim_change_white_02=0x7f0800c3;
    public static final int ic_sim_change_white_03=0x7f0800c4;
    public static final int ic_sim_change_white_04=0x7f0800c5;
    public static final int ic_sim_change_white_05=0x7f0800c6;
    public static final int ic_sim_change_white_06=0x7f0800c7;
    public static final int ic_sim_change_white_07=0x7f0800c8;
    public static final int ic_sim_change_white_08=0x7f0800c9;
    public static final int ic_sim_change_white_09=0x7f0800ca;
    public static final int ic_sim_change_white_10=0x7f0800cb;
    public static final int ic_sim_change_white_11=0x7f0800cc;
    public static final int ic_sim_change_white_12=0x7f0800cd;
    public static final int ic_sim_change_white_13=0x7f0800ce;
    public static final int ic_sim_change_white_14=0x7f0800cf;
    public static final int ic_star=0x7f0800d0;
    public static final int ic_stop_circle_filled_blue_24dp=0x7f0800d1;
    public static final int ic_switch_camera=0x7f0800d2;
    public static final int ic_unblock=0x7f0800d3;
    public static final int ic_voicemail_error_24px=0x7f0800d4;
    public static final int ic_voicemail_seek_handle=0x7f0800d5;
    public static final int ic_voicemail_seek_handle_disabled=0x7f0800d6;
    public static final int ic_wifi_calling=0x7f0800d7;
    public static final int ic_work_profile=0x7f0800d8;
    public static final int incall_background_gradient=0x7f0800d9;
    public static final int incall_button_background=0x7f0800da;
    public static final int incall_button_background_checked=0x7f0800db;
    public static final int incall_button_background_more=0x7f0800dc;
    public static final int incall_button_background_unchecked=0x7f0800dd;
    public static final int incall_end_call_background=0x7f0800de;
    public static final int incall_end_call_icon=0x7f0800df;
    public static final int incallui_message_bubble=0x7f0800e0;
    public static final int input_bubble_background=0x7f0800e1;
    public static final int item_background_material_borderless_dark=0x7f0800e2;
    public static final int message_bubble=0x7f0800e3;
    public static final int mtrl_snackbar_background=0x7f0800e4;
    public static final int mtrl_tabs_default_indicator=0x7f0800e5;
    public static final int multimedia_image_background=0x7f0800e6;
    public static final int navigation_empty_icon=0x7f0800e7;
    public static final int notification_action_background=0x7f0800e8;
    public static final int notification_badge=0x7f0800e9;
    public static final int notification_bg=0x7f0800ea;
    public static final int notification_bg_low=0x7f0800eb;
    public static final int notification_bg_low_normal=0x7f0800ec;
    public static final int notification_bg_low_pressed=0x7f0800ed;
    public static final int notification_bg_normal=0x7f0800ee;
    public static final int notification_bg_normal_pressed=0x7f0800ef;
    public static final int notification_icon_background=0x7f0800f0;
    public static final int notification_template_icon_bg=0x7f0800f1;
    public static final int notification_template_icon_low_bg=0x7f0800f2;
    public static final int notification_tile_bg=0x7f0800f3;
    public static final int notify_panel_notification_icon_bg=0x7f0800f4;
    public static final int old_ic_handle=0x7f0800f5;
    public static final int old_ic_voicemail_seek_handle_disabled=0x7f0800f6;
    public static final int on_going_call=0x7f0800f7;
    public static final int oval_ripple=0x7f0800f8;
    public static final int overflow_menu_background=0x7f0800f9;
    public static final int pill_background=0x7f0800fa;
    public static final int product_logo_avatar_anonymous_color_120=0x7f0800fb;
    public static final int product_logo_avatar_anonymous_white_color_120=0x7f0800fc;
    public static final int quantum_ic_access_time_vd_theme_24=0x7f0800fd;
    public static final int quantum_ic_add_call_vd_theme_24=0x7f0800fe;
    public static final int quantum_ic_arrow_back_vd_theme_24=0x7f0800ff;
    public static final int quantum_ic_arrow_back_white_24=0x7f080100;
    public static final int quantum_ic_arrow_drop_down_vd_theme_24=0x7f080101;
    public static final int quantum_ic_arrow_drop_down_white_18=0x7f080102;
    public static final int quantum_ic_backspace_white_24=0x7f080103;
    public static final int quantum_ic_block_vd_theme_24=0x7f080104;
    public static final int quantum_ic_block_white_24=0x7f080105;
    public static final int quantum_ic_bluetooth_audio_grey600_24=0x7f080106;
    public static final int quantum_ic_bluetooth_audio_vd_theme_24=0x7f080107;
    public static final int quantum_ic_business_vd_theme_24=0x7f080108;
    public static final int quantum_ic_call_end_vd_theme_24=0x7f080109;
    public static final int quantum_ic_call_end_white_24=0x7f08010a;
    public static final int quantum_ic_call_end_white_36=0x7f08010b;
    public static final int quantum_ic_call_made_vd_theme_24=0x7f08010c;
    public static final int quantum_ic_call_made_white_24=0x7f08010d;
    public static final int quantum_ic_call_merge_vd_theme_24=0x7f08010e;
    public static final int quantum_ic_call_missed_vd_theme_24=0x7f08010f;
    public static final int quantum_ic_call_missed_white_24=0x7f080110;
    public static final int quantum_ic_call_received_vd_theme_24=0x7f080111;
    public static final int quantum_ic_call_received_white_24=0x7f080112;
    public static final int quantum_ic_call_vd_theme_24=0x7f080113;
    public static final int quantum_ic_call_white_18=0x7f080114;
    public static final int quantum_ic_call_white_24=0x7f080115;
    public static final int quantum_ic_camera_alt_white_24=0x7f080116;
    public static final int quantum_ic_camera_alt_white_48=0x7f080117;
    public static final int quantum_ic_check_black_24=0x7f080118;
    public static final int quantum_ic_clear_vd_theme_24=0x7f080119;
    public static final int quantum_ic_close_vd_theme_24=0x7f08011a;
    public static final int quantum_ic_close_white_24=0x7f08011b;
    public static final int quantum_ic_content_copy_grey600_24=0x7f08011c;
    public static final int quantum_ic_content_copy_vd_theme_24=0x7f08011d;
    public static final int quantum_ic_delete_vd_theme_24=0x7f08011e;
    public static final int quantum_ic_delete_white_24=0x7f08011f;
    public static final int quantum_ic_dialpad_vd_theme_24=0x7f080120;
    public static final int quantum_ic_dialpad_white_24=0x7f080121;
    public static final int quantum_ic_done_vd_theme_24=0x7f080122;
    public static final int quantum_ic_edit_grey600_24=0x7f080123;
    public static final int quantum_ic_enterprise_vd_theme_24=0x7f080124;
    public static final int quantum_ic_error_outline_vd_theme_36=0x7f080125;
    public static final int quantum_ic_exit_to_app_flip_vd_theme_24=0x7f080126;
    public static final int quantum_ic_fiber_manual_record_vd_theme_24=0x7f080127;
    public static final int quantum_ic_forward_vd_theme_24=0x7f080128;
    public static final int quantum_ic_fullscreen_exit_white_48=0x7f080129;
    public static final int quantum_ic_fullscreen_vd_theme_24=0x7f08012a;
    public static final int quantum_ic_fullscreen_white_48=0x7f08012b;
    public static final int quantum_ic_grade_white_24=0x7f08012c;
    public static final int quantum_ic_group_vd_theme_24=0x7f08012d;
    public static final int quantum_ic_hd_vd_theme_24=0x7f08012e;
    public static final int quantum_ic_hd_white_24=0x7f08012f;
    public static final int quantum_ic_headset_grey600_24=0x7f080130;
    public static final int quantum_ic_headset_vd_theme_24=0x7f080131;
    public static final int quantum_ic_history_vd_theme_24=0x7f080132;
    public static final int quantum_ic_history_white_24=0x7f080133;
    public static final int quantum_ic_image_white_24=0x7f080134;
    public static final int quantum_ic_info_outline_vd_theme_24=0x7f080135;
    public static final int quantum_ic_info_outline_white_24=0x7f080136;
    public static final int quantum_ic_language_vd_theme_24=0x7f080137;
    public static final int quantum_ic_language_white_24=0x7f080138;
    public static final int quantum_ic_message_vd_theme_24=0x7f080139;
    public static final int quantum_ic_message_white_24=0x7f08013a;
    public static final int quantum_ic_mic_off_vd_theme_24=0x7f08013b;
    public static final int quantum_ic_mic_vd_theme_24=0x7f08013c;
    public static final int quantum_ic_more_vert_vd_theme_24=0x7f08013d;
    public static final int quantum_ic_more_vert_white_24=0x7f08013e;
    public static final int quantum_ic_my_location_vd_theme_24=0x7f08013f;
    public static final int quantum_ic_network_wifi_vd_theme_24=0x7f080140;
    public static final int quantum_ic_pause_vd_theme_24=0x7f080141;
    public static final int quantum_ic_pause_white_24=0x7f080142;
    public static final int quantum_ic_people_vd_theme_24=0x7f080143;
    public static final int quantum_ic_people_white_24=0x7f080144;
    public static final int quantum_ic_perm_phone_msg_vd_theme_24=0x7f080145;
    public static final int quantum_ic_person_add_vd_theme_24=0x7f080146;
    public static final int quantum_ic_person_add_white_24=0x7f080147;
    public static final int quantum_ic_person_white_24=0x7f080148;
    public static final int quantum_ic_phone_in_talk_vd_theme_24=0x7f080149;
    public static final int quantum_ic_phone_locked_vd_theme_24=0x7f08014a;
    public static final int quantum_ic_phone_paused_vd_theme_24=0x7f08014b;
    public static final int quantum_ic_phone_vd_theme_24=0x7f08014c;
    public static final int quantum_ic_photo_library_white_24=0x7f08014d;
    public static final int quantum_ic_photo_white_24=0x7f08014e;
    public static final int quantum_ic_photo_white_48=0x7f08014f;
    public static final int quantum_ic_play_arrow_vd_theme_24=0x7f080150;
    public static final int quantum_ic_play_arrow_white_24=0x7f080151;
    public static final int quantum_ic_query_builder_vd_theme_24=0x7f080152;
    public static final int quantum_ic_question_answer_vd_theme_24=0x7f080153;
    public static final int quantum_ic_record_white_36=0x7f080154;
    public static final int quantum_ic_report_grey600_24=0x7f080155;
    public static final int quantum_ic_report_off_vd_theme_24=0x7f080156;
    public static final int quantum_ic_report_vd_red_24=0x7f080157;
    public static final int quantum_ic_report_vd_theme_24=0x7f080158;
    public static final int quantum_ic_report_white_24=0x7f080159;
    public static final int quantum_ic_report_white_36=0x7f08015a;
    public static final int quantum_ic_rtt_vd_theme_24=0x7f08015b;
    public static final int quantum_ic_schedule_vd_theme_24=0x7f08015c;
    public static final int quantum_ic_schedule_white_24=0x7f08015d;
    public static final int quantum_ic_search_vd_theme_24=0x7f08015e;
    public static final int quantum_ic_search_white_24=0x7f08015f;
    public static final int quantum_ic_security_vd_theme_24=0x7f080160;
    public static final int quantum_ic_send_white_24=0x7f080161;
    public static final int quantum_ic_signal_wifi_4_bar_vd_theme_24=0x7f080162;
    public static final int quantum_ic_signal_wifi_4_bar_white_24=0x7f080163;
    public static final int quantum_ic_star_vd_theme_24=0x7f080164;
    public static final int quantum_ic_swap_calls_vd_theme_24=0x7f080165;
    public static final int quantum_ic_thumb_down_grey600_24=0x7f080166;
    public static final int quantum_ic_thumb_up_grey600_24=0x7f080167;
    public static final int quantum_ic_unblock_vd_theme_24=0x7f080168;
    public static final int quantum_ic_undo_white_48=0x7f080169;
    public static final int quantum_ic_videocam_off_vd_theme_24=0x7f08016a;
    public static final int quantum_ic_videocam_off_white_36=0x7f08016b;
    public static final int quantum_ic_videocam_vd_theme_24=0x7f08016c;
    public static final int quantum_ic_videocam_vd_white_24=0x7f08016d;
    public static final int quantum_ic_videocam_white_18=0x7f08016e;
    public static final int quantum_ic_voicemail_vd_theme_24=0x7f08016f;
    public static final int quantum_ic_voicemail_white_24=0x7f080170;
    public static final int quantum_ic_volume_down_white_24=0x7f080171;
    public static final int quantum_ic_volume_up_grey600_24=0x7f080172;
    public static final int quantum_ic_volume_up_vd_theme_24=0x7f080173;
    public static final int recording_playback_button=0x7f080174;
    public static final int rounded_corner=0x7f080175;
    public static final int search_bar_background=0x7f080176;
    public static final int search_bar_background_rounded_corners=0x7f080177;
    public static final int search_bar_background_rounded_corners_shape=0x7f080178;
    public static final int search_shadow=0x7f080179;
    public static final int searchedittext_custom_cursor=0x7f08017a;
    public static final int seekbar_drawable=0x7f08017b;
    public static final int selectable_primary_flat_button=0x7f08017c;
    public static final int shadow=0x7f08017d;
    public static final int shadow_contact_photo=0x7f08017e;
    public static final int shadow_fade_left=0x7f08017f;
    public static final int shadow_fade_up=0x7f080180;
    public static final int spam_blocking_promo_icon=0x7f080181;
    public static final int spam_container_background=0x7f080182;
    public static final int spam_notification_icon=0x7f080183;
    public static final int start_playback_drawable=0x7f080184;
    public static final int start_recording_drawable=0x7f080185;
    public static final int stop_playback_drawable=0x7f080186;
    public static final int stop_recording_drawable=0x7f080187;
    public static final int tooltip_frame_dark=0x7f080188;
    public static final int tooltip_frame_light=0x7f080189;
    public static final int transparent_button_background=0x7f08018a;
    public static final int unread_count_background=0x7f08018b;
    public static final int urgent_call_background=0x7f08018c;
    public static final int vd_hd_attempting=0x7f08018d;
    public static final int video_button_bg_checked=0x7f08018e;
    public static final int video_button_bg_checked_pressed=0x7f08018f;
    public static final int video_button_bg_default=0x7f080190;
    public static final int video_button_bg_pressed=0x7f080191;
    public static final int videocall_background_circle_white=0x7f080192;
    public static final int videocall_video_button_background=0x7f080193;
    public static final int voicemail_tos_image=0x7f080194;
    public static final int volume_bluetooth=0x7f080195;
  }
  public static final class id {
    public static final int ALT=0x7f090000;
    public static final int CTRL=0x7f090001;
    public static final int FUNCTION=0x7f090002;
    public static final int META=0x7f090003;
    public static final int SHIFT=0x7f090004;
    public static final int SYM=0x7f090005;
    public static final int accessibility_action_answer=0x7f090006;
    public static final int accessibility_action_decline=0x7f090007;
    public static final int account_filter_header=0x7f090008;
    public static final int account_filter_header_container=0x7f090009;
    public static final int action0=0x7f09000a;
    public static final int action_bar=0x7f09000b;
    public static final int action_bar_activity_content=0x7f09000c;
    public static final int action_bar_container=0x7f09000d;
    public static final int action_bar_delete_menu_item=0x7f09000e;
    public static final int action_bar_root=0x7f09000f;
    public static final int action_bar_spinner=0x7f090010;
    public static final int action_bar_subtitle=0x7f090011;
    public static final int action_bar_title=0x7f090012;
    public static final int action_container=0x7f090013;
    public static final int action_context_bar=0x7f090014;
    public static final int action_divider=0x7f090015;
    public static final int action_image=0x7f090016;
    public static final int action_menu_divider=0x7f090017;
    public static final int action_menu_presenter=0x7f090018;
    public static final int action_mode_bar=0x7f090019;
    public static final int action_mode_bar_stub=0x7f09001a;
    public static final int action_mode_close_button=0x7f09001b;
    public static final int action_text=0x7f09001c;
    public static final int actions=0x7f09001d;
    public static final int activity_chooser_view_content=0x7f09001e;
    public static final int activity_overlay=0x7f09001f;
    public static final int add=0x7f090020;
    public static final int add_to_existing_contact_action=0x7f090021;
    public static final int alertTitle=0x7f090022;
    public static final int all=0x7f090023;
    public static final int allow=0x7f090024;
    public static final int always=0x7f090025;
    public static final int always_warn=0x7f090026;
    public static final int answer_hint_container=0x7f090027;
    public static final int answer_hint_large=0x7f090028;
    public static final int answer_hint_mid=0x7f090029;
    public static final int answer_hint_small=0x7f09002a;
    public static final int answer_message_avatar=0x7f09002b;
    public static final int answer_message_container=0x7f09002c;
    public static final int answer_message_frag=0x7f09002d;
    public static final int answer_message_image=0x7f09002e;
    public static final int answer_message_text=0x7f09002f;
    public static final int answer_method_container=0x7f090030;
    public static final int assisted_dial_icon=0x7f090031;
    public static final int assisted_dialing_container=0x7f090032;
    public static final int assisted_dialing_globe=0x7f090033;
    public static final int assisted_dialing_text=0x7f090034;
    public static final int async=0x7f090035;
    public static final int audioroute_back=0x7f090036;
    public static final int audioroute_bluetooth=0x7f090037;
    public static final int audioroute_earpiece=0x7f090038;
    public static final int audioroute_headset=0x7f090039;
    public static final int audioroute_speaker=0x7f09003a;
    public static final int auto=0x7f09003b;
    public static final int avatar=0x7f09003c;
    public static final int avatar_container=0x7f09003d;
    public static final int average_header=0x7f09003e;
    public static final int background=0x7f09003f;
    public static final int beginning=0x7f090040;
    public static final int block_action=0x7f090041;
    public static final int block_details=0x7f090042;
    public static final int block_id=0x7f090043;
    public static final int block_report_action=0x7f090044;
    public static final int blocked_count=0x7f090045;
    public static final int blocked_number_footer_textview=0x7f090046;
    public static final int blocked_number_fragment=0x7f090047;
    public static final int blocked_number_list_divider=0x7f090048;
    public static final int blocked_number_text_view=0x7f090049;
    public static final int blocked_numbers_activity_container=0x7f09004a;
    public static final int blocked_numbers_disabled_for_emergency=0x7f09004b;
    public static final int blocking=0x7f09004c;
    public static final int bottom=0x7f09004d;
    public static final int bottom_nav_bar=0x7f09004e;
    public static final int bottom_nav_item_image=0x7f09004f;
    public static final int bottom_nav_item_text=0x7f090050;
    public static final int buttonPanel=0x7f090051;
    public static final int call_account_label=0x7f090052;
    public static final int call_action=0x7f090053;
    public static final int call_action_text=0x7f090054;
    public static final int call_back_action=0x7f090055;
    public static final int call_back_button=0x7f090056;
    public static final int call_button=0x7f090057;
    public static final int call_compose_action=0x7f090058;
    public static final int call_composer_camera=0x7f090059;
    public static final int call_composer_container=0x7f09005a;
    public static final int call_composer_loading=0x7f09005b;
    public static final int call_composer_message=0x7f09005c;
    public static final int call_composer_photo=0x7f09005d;
    public static final int call_composer_view_pager=0x7f09005e;
    public static final int call_count=0x7f09005f;
    public static final int call_detail_action_copy=0x7f090060;
    public static final int call_detail_action_delete=0x7f090061;
    public static final int call_detail_action_edit_before_call=0x7f090062;
    public static final int call_detail_action_report_caller_id=0x7f090063;
    public static final int call_direction=0x7f090064;
    public static final int call_duration=0x7f090065;
    public static final int call_location_and_date=0x7f090066;
    public static final int call_log_action_container=0x7f090067;
    public static final int call_log_day_group_label=0x7f090068;
    public static final int call_log_entry_actions=0x7f090069;
    public static final int call_log_entry_actions_stub=0x7f09006a;
    public static final int call_log_fragment_root=0x7f09006b;
    public static final int call_log_list_item=0x7f09006c;
    public static final int call_log_pager=0x7f09006d;
    public static final int call_log_row=0x7f09006e;
    public static final int call_log_tab=0x7f09006f;
    public static final int call_stats_detail=0x7f090070;
    public static final int call_stats_info=0x7f090071;
    public static final int call_subject=0x7f090072;
    public static final int call_subject_dialog=0x7f090073;
    public static final int call_time=0x7f090074;
    public static final int call_to_action=0x7f090075;
    public static final int call_type=0x7f090076;
    public static final int call_type_icon=0x7f090077;
    public static final int call_type_icons=0x7f090078;
    public static final int call_type_or_location_text=0x7f090079;
    public static final int call_with=0x7f09007a;
    public static final int call_with_note_action=0x7f09007b;
    public static final int callerPhoto=0x7f09007c;
    public static final int caller_information=0x7f09007d;
    public static final int caller_name=0x7f09007e;
    public static final int caller_number=0x7f09007f;
    public static final int calllog_frame=0x7f090080;
    public static final int camera_button_container=0x7f090081;
    public static final int camera_cancel_button=0x7f090082;
    public static final int camera_capture_button=0x7f090083;
    public static final int camera_exit_fullscreen=0x7f090084;
    public static final int camera_fullscreen=0x7f090085;
    public static final int camera_preview=0x7f090086;
    public static final int camera_shutter_visual=0x7f090087;
    public static final int camera_view=0x7f090088;
    public static final int cancel_action=0x7f090089;
    public static final int cancel_button=0x7f09008a;
    public static final int categories=0x7f09008b;
    public static final int categories_title=0x7f09008c;
    public static final int center=0x7f09008d;
    public static final int center_horizontal=0x7f09008e;
    public static final int center_vertical=0x7f09008f;
    public static final int change_greeting_button=0x7f090090;
    public static final int character_limit=0x7f090091;
    public static final int checkbox=0x7f090092;
    public static final int chronometer=0x7f090093;
    public static final int clear_frequents=0x7f090094;
    public static final int click_target=0x7f090095;
    public static final int clip_horizontal=0x7f090096;
    public static final int clip_vertical=0x7f090097;
    public static final int cliv_data_view=0x7f090098;
    public static final int cliv_label_textview=0x7f090099;
    /**
     * For Debug Purpose
     */
    public static final int cliv_name_textview=0x7f09009a;
    public static final int collapseActionView=0x7f09009b;
    public static final int communication_avenue_container=0x7f09009c;
    public static final int conferenceCallerDisconnect=0x7f09009d;
    public static final int conferenceCallerName=0x7f09009e;
    public static final int conferenceCallerNumber=0x7f09009f;
    public static final int conferenceCallerSeparate=0x7f0900a0;
    public static final int conferenceCallerStatus=0x7f0900a1;
    public static final int contact_badge_background=0x7f0900a2;
    public static final int contact_badge_container=0x7f0900a3;
    public static final int contact_bar=0x7f0900a4;
    public static final int contact_detail_list_padding=0x7f0900a5;
    public static final int contact_favorite_card=0x7f0900a6;
    public static final int contact_info_container=0x7f0900a7;
    public static final int contact_information=0x7f0900a8;
    public static final int contact_layout_root=0x7f0900a9;
    public static final int contact_name=0x7f0900aa;
    public static final int contact_photo=0x7f0900ab;
    public static final int contact_photo_view=0x7f0900ac;
    public static final int contact_star_icon=0x7f0900ad;
    public static final int contact_tile=0x7f0900ae;
    public static final int contact_tile_drag_shadow_overlay=0x7f0900af;
    public static final int contact_tile_frame=0x7f0900b0;
    public static final int contact_tile_image=0x7f0900b1;
    public static final int contact_tile_list=0x7f0900b2;
    public static final int contact_tile_name=0x7f0900b3;
    public static final int contact_tile_phone_type=0x7f0900b4;
    public static final int contact_tile_push_state=0x7f0900b5;
    public static final int contact_tile_secondary_button=0x7f0900b6;
    public static final int contactgrid_avatar=0x7f0900b7;
    public static final int contactgrid_bottom_row=0x7f0900b8;
    public static final int contactgrid_bottom_text=0x7f0900b9;
    public static final int contactgrid_bottom_text_switcher=0x7f0900ba;
    public static final int contactgrid_bottom_timer=0x7f0900bb;
    public static final int contactgrid_connection_icon=0x7f0900bc;
    public static final int contactgrid_contact_name=0x7f0900bd;
    public static final int contactgrid_device_number_text=0x7f0900be;
    public static final int contactgrid_forwardIcon=0x7f0900bf;
    public static final int contactgrid_forwardNumber=0x7f0900c0;
    public static final int contactgrid_hdIcon=0x7f0900c1;
    public static final int contactgrid_location_divider=0x7f0900c2;
    public static final int contactgrid_spamIcon=0x7f0900c3;
    public static final int contactgrid_status_text=0x7f0900c4;
    public static final int contactgrid_top_row=0x7f0900c5;
    public static final int contactgrid_top_row_space=0x7f0900c6;
    public static final int contactgrid_workIcon=0x7f0900c7;
    public static final int contacts_tab=0x7f0900c8;
    public static final int container=0x7f0900c9;
    public static final int content=0x7f0900ca;
    public static final int contentPanel=0x7f0900cb;
    public static final int context_menu_block=0x7f0900cc;
    public static final int context_menu_block_report_spam=0x7f0900cd;
    public static final int context_menu_copy_to_clipboard=0x7f0900ce;
    public static final int context_menu_copy_transcript_to_clipboard=0x7f0900cf;
    public static final int context_menu_delete=0x7f0900d0;
    public static final int context_menu_edit_before_call=0x7f0900d1;
    public static final int context_menu_report_not_spam=0x7f0900d2;
    public static final int context_menu_unblock=0x7f0900d3;
    public static final int coordinator=0x7f0900d4;
    public static final int coordinator_layout=0x7f0900d5;
    public static final int count=0x7f0900d6;
    public static final int count_and_send_container=0x7f0900d7;
    public static final int count_header=0x7f0900d8;
    public static final int count_number_percent_bar=0x7f0900d9;
    public static final int count_total_percent_bar=0x7f0900da;
    public static final int create_new_contact_action=0x7f0900db;
    public static final int current_voicemail_greeting_recording_display=0x7f0900dc;
    public static final int current_voicemail_greeting_recording_title_textview=0x7f0900dd;
    public static final int custom=0x7f0900de;
    public static final int customPanel=0x7f0900df;
    public static final int custom_message=0x7f0900e0;
    public static final int custom_sms_input=0x7f0900e1;
    public static final int date_filter=0x7f0900e2;
    public static final int date_picker_from=0x7f0900e3;
    public static final int date_picker_to=0x7f0900e4;
    public static final int date_quick_selection=0x7f0900e5;
    public static final int decor_content_parent=0x7f0900e6;
    public static final int default_account_checkbox_layout=0x7f0900e7;
    public static final int default_account_checkbox_text=0x7f0900e8;
    public static final int default_account_checkbox_view=0x7f0900e9;
    public static final int default_activity_button=0x7f0900ea;
    public static final int deleteButton=0x7f0900eb;
    public static final int delete_all=0x7f0900ec;
    public static final int delete_button=0x7f0900ed;
    public static final int delete_voicemail=0x7f0900ee;
    public static final int design_bottom_sheet=0x7f0900ef;
    public static final int design_menu_item_action_area=0x7f0900f0;
    public static final int design_menu_item_action_area_stub=0x7f0900f1;
    public static final int design_menu_item_text=0x7f0900f2;
    public static final int design_navigation_view=0x7f0900f3;
    public static final int details=0x7f0900f4;
    public static final int details_action=0x7f0900f5;
    public static final int deviceid_barcode=0x7f0900f6;
    public static final int deviceid_dec=0x7f0900f7;
    public static final int deviceid_dec_label=0x7f0900f8;
    public static final int deviceid_hex=0x7f0900f9;
    public static final int deviceid_hex_label=0x7f0900fa;
    public static final int deviceids_holder=0x7f0900fb;
    public static final int dialog_view=0x7f0900fc;
    public static final int dialpad=0x7f0900fd;
    public static final int dialpadChooser=0x7f0900fe;
    public static final int dialpad_back=0x7f0900ff;
    public static final int dialpad_floating_action_button=0x7f090100;
    public static final int dialpad_floating_action_button_margin_bottom=0x7f090101;
    public static final int dialpad_fragment_container=0x7f090102;
    public static final int dialpad_key_horizontal_placeholder=0x7f090103;
    public static final int dialpad_key_icon_or_letters_layout=0x7f090104;
    public static final int dialpad_key_layout=0x7f090105;
    public static final int dialpad_key_letters=0x7f090106;
    public static final int dialpad_key_number=0x7f090107;
    public static final int dialpad_key_secondary_letters=0x7f090108;
    public static final int dialpad_key_voicemail=0x7f090109;
    public static final int dialpad_overflow=0x7f09010a;
    public static final int dialpad_view=0x7f09010b;
    public static final int dialtacts_container=0x7f09010c;
    public static final int dialtacts_frame=0x7f09010d;
    public static final int dialtacts_mainlayout=0x7f09010e;
    public static final int dialtacts_options_menu_button=0x7f09010f;
    public static final int digits=0x7f090110;
    public static final int digits_container=0x7f090111;
    public static final int digits_hint=0x7f090112;
    public static final int directory_header=0x7f090113;
    public static final int disableHome=0x7f090114;
    public static final int disambig_dialog_title=0x7f090115;
    public static final int disambig_header_phone_label=0x7f090116;
    public static final int disambig_option_image=0x7f090117;
    public static final int disambig_option_text=0x7f090118;
    public static final int disambig_scrollview=0x7f090119;
    public static final int display_name=0x7f09011a;
    public static final int divider=0x7f09011b;
    public static final int do_not_show=0x7f09011c;
    public static final int dtmf_twelve_key_dialer_view=0x7f09011d;
    public static final int duration_container=0x7f09011e;
    public static final int duration_number_percent_bar=0x7f09011f;
    public static final int duration_total_percent_bar=0x7f090120;
    public static final int durations_header=0x7f090121;
    public static final int ec_container=0x7f090122;
    public static final int edit_query=0x7f090123;
    public static final int edittext_container=0x7f090124;
    public static final int eight=0x7f090125;
    public static final int empty_content_view=0x7f090126;
    public static final int empty_list_view=0x7f090127;
    public static final int empty_list_view_action=0x7f090128;
    public static final int empty_list_view_image=0x7f090129;
    public static final int empty_list_view_message=0x7f09012a;
    public static final int empty_view=0x7f09012b;
    public static final int end=0x7f09012c;
    public static final int end_call_space=0x7f09012d;
    public static final int end_padder=0x7f09012e;
    public static final int enterAlways=0x7f09012f;
    public static final int enterAlwaysCollapsed=0x7f090130;
    public static final int errorText=0x7f090131;
    public static final int error_card=0x7f090132;
    public static final int error_card_content=0x7f090133;
    public static final int error_card_details=0x7f090134;
    public static final int error_card_header=0x7f090135;
    public static final int exitUntilCollapsed=0x7f090136;
    public static final int expand_activities_button=0x7f090137;
    public static final int expanded_menu=0x7f090138;
    public static final int fab=0x7f090139;
    public static final int fast_scroller=0x7f09013a;
    public static final int fast_scroller_container=0x7f09013b;
    public static final int fast_scroller_scroll_bar=0x7f09013c;
    public static final int favorite_remove_view=0x7f09013d;
    public static final int fill=0x7f09013e;
    public static final int fill_horizontal=0x7f09013f;
    public static final int fill_vertical=0x7f090140;
    public static final int filled=0x7f090141;
    public static final int filter_account_spinner=0x7f090142;
    public static final int filter_status_spinner=0x7f090143;
    public static final int five=0x7f090144;
    public static final int fixed=0x7f090145;
    public static final int floating_action_button=0x7f090146;
    public static final int floating_action_button_container=0x7f090147;
    public static final int focus_visual=0x7f090148;
    public static final int footer_container=0x7f090149;
    public static final int forever=0x7f09014a;
    public static final int four=0x7f09014b;
    public static final int fragment_container=0x7f09014c;
    public static final int gallery=0x7f09014d;
    public static final int gallery_grid_view=0x7f09014e;
    public static final int ghost_view=0x7f09014f;
    public static final int group_divider=0x7f090150;
    public static final int hd_attempting=0x7f090151;
    public static final int hd_enabled=0x7f090152;
    public static final int hd_icon=0x7f090153;
    public static final int header=0x7f090154;
    public static final int headerText=0x7f090155;
    public static final int helplines_list=0x7f090156;
    public static final int helplines_loading=0x7f090157;
    public static final int helplines_progress_bar=0x7f090158;
    public static final int hint=0x7f090159;
    public static final int hintText=0x7f09015a;
    public static final int hint_container=0x7f09015b;
    public static final int history_actions_scroll_view=0x7f09015c;
    public static final int history_button=0x7f09015d;
    public static final int history_item_actions_bottom_sheet_root=0x7f09015e;
    public static final int hold_contact_name=0x7f09015f;
    public static final int hold_phone_icon=0x7f090160;
    public static final int home=0x7f090161;
    public static final int homeAsUp=0x7f090162;
    public static final int ic_sim_change_white=0x7f090163;
    public static final int icon=0x7f090164;
    public static final int icon_group=0x7f090165;
    public static final int ifRoom=0x7f090166;
    public static final int ild_container=0x7f090167;
    public static final int ild_country=0x7f090168;
    public static final int ild_rate=0x7f090169;
    public static final int image=0x7f09016a;
    public static final int import_button=0x7f09016b;
    public static final int import_description=0x7f09016c;
    public static final int import_settings=0x7f09016d;
    public static final int in_average=0x7f09016e;
    public static final int in_count=0x7f09016f;
    public static final int in_duration=0x7f090170;
    public static final int incall_button_grid=0x7f090171;
    public static final int incall_contact_grid=0x7f090172;
    public static final int incall_data_container=0x7f090173;
    public static final int incall_data_container_chip_container=0x7f090174;
    public static final int incall_dialpad_container=0x7f090175;
    public static final int incall_end_call=0x7f090176;
    public static final int incall_fifth_button=0x7f090177;
    public static final int incall_first_button=0x7f090178;
    public static final int incall_fourth_button=0x7f090179;
    public static final int incall_important_call_badge=0x7f09017a;
    public static final int incall_location_holder=0x7f09017b;
    public static final int incall_on_hold_banner=0x7f09017c;
    public static final int incall_pager=0x7f09017d;
    public static final int incall_paginator=0x7f09017e;
    public static final int incall_second_button=0x7f09017f;
    public static final int incall_sixth_button=0x7f090180;
    public static final int incall_third_button=0x7f090181;
    public static final int incall_ui_container=0x7f090182;
    public static final int incoming_bouncer_space_holder=0x7f090183;
    public static final int incoming_call_puck_bg=0x7f090184;
    public static final int incoming_call_puck_container=0x7f090185;
    public static final int incoming_call_puck_icon=0x7f090186;
    public static final int incoming_container=0x7f090187;
    public static final int incoming_preview_surface_view=0x7f090188;
    public static final int incoming_preview_texture_view=0x7f090189;
    public static final int incoming_preview_texture_view_overlay=0x7f09018a;
    public static final int incoming_secondary_button=0x7f09018b;
    public static final int incoming_secondary_button2=0x7f09018c;
    public static final int incoming_swipe_to_answer_container=0x7f09018d;
    public static final int incoming_swipe_to_answer_text=0x7f09018e;
    public static final int incoming_swipe_to_reject_text=0x7f09018f;
    public static final int incoming_will_disconnect_text=0x7f090190;
    public static final int info=0x7f090191;
    public static final int invite_video_action=0x7f090192;
    public static final int italic=0x7f090193;
    public static final int item=0x7f090194;
    public static final int item_helpline_call_icon=0x7f090195;
    public static final int item_helpline_categories=0x7f090196;
    public static final int item_helpline_languages=0x7f090197;
    public static final int item_helpline_title=0x7f090198;
    public static final int item_touch_helper_previous_elevation=0x7f090199;
    public static final int label=0x7f09019a;
    public static final int labeled=0x7f09019b;
    public static final int largeLabel=0x7f09019c;
    public static final int left=0x7f09019d;
    public static final int license=0x7f09019e;
    public static final int license_activity_scrollview=0x7f09019f;
    public static final int license_activity_textview=0x7f0901a0;
    public static final int license_list=0x7f0901a1;
    public static final int line1=0x7f0901a2;
    public static final int line3=0x7f0901a3;
    public static final int linearLayout=0x7f0901a4;
    public static final int listMode=0x7f0901a5;
    public static final int list_card=0x7f0901a6;
    public static final int list_item=0x7f0901a7;
    public static final int lists_frame=0x7f0901a8;
    public static final int lists_pager=0x7f0901a9;
    public static final int lists_pager_header=0x7f0901aa;
    public static final int loading=0x7f0901ab;
    public static final int loading_spinner=0x7f0901ac;
    public static final int location_permission_allow=0x7f0901ad;
    public static final int location_permission_dismiss=0x7f0901ae;
    public static final int main=0x7f0901af;
    public static final int main_options_menu_button=0x7f0901b0;
    public static final int manageConferencePanel=0x7f0901b1;
    public static final int masked=0x7f0901b2;
    public static final int media_actions=0x7f0901b3;
    public static final int mediapicker_enabled=0x7f0901b4;
    public static final int menu_2s_pause=0x7f0901b5;
    public static final int menu_add_call=0x7f0901b6;
    public static final int menu_add_wait=0x7f0901b7;
    public static final int menu_button=0x7f0901b8;
    public static final int menu_call_history=0x7f0901b9;
    public static final int menu_call_settings=0x7f0901ba;
    public static final int menu_call_with_note=0x7f0901bb;
    public static final int menu_clear_frequents=0x7f0901bc;
    public static final int menu_helpline_help=0x7f0901bd;
    public static final int menu_helplines=0x7f0901be;
    public static final int menu_history=0x7f0901bf;
    public static final int menu_keypad=0x7f0901c0;
    public static final int menu_mute=0x7f0901c1;
    public static final int menu_simulator_submenu=0x7f0901c2;
    public static final int menu_speaker=0x7f0901c3;
    public static final int menu_swap_call=0x7f0901c4;
    public static final int message=0x7f0901c5;
    public static final int message_chat=0x7f0901c6;
    public static final int message_container=0x7f0901c7;
    public static final int message_question=0x7f0901c8;
    public static final int message_urgent=0x7f0901c9;
    public static final int middle=0x7f0901ca;
    public static final int migrate_promo=0x7f0901cb;
    public static final int migrate_promo_allow_button=0x7f0901cc;
    public static final int migrate_promo_description=0x7f0901cd;
    public static final int migrate_promo_header=0x7f0901ce;
    public static final int mini=0x7f0901cf;
    public static final int missed_count=0x7f0901d0;
    public static final int modal_message_container=0x7f0901d1;
    public static final int module_container=0x7f0901d2;
    public static final int module_image=0x7f0901d3;
    public static final int module_text=0x7f0901d4;
    public static final int more_information=0x7f0901d5;
    public static final int mtrl_child_content_container=0x7f0901d6;
    public static final int mtrl_internal_children_alpha_tag=0x7f0901d7;
    public static final int multi_select_select_all_view_content=0x7f0901d8;
    public static final int multimedia_attachments_number=0x7f0901d9;
    public static final int multimedia_details=0x7f0901da;
    public static final int multimedia_image=0x7f0901db;
    public static final int multimedia_image_container=0x7f0901dc;
    public static final int multiply=0x7f0901dd;
    public static final int name=0x7f0901de;
    public static final int name_title=0x7f0901df;
    public static final int navigation_header_container=0x7f0901e0;
    public static final int network=0x7f0901e1;
    public static final int never=0x7f0901e2;
    public static final int new_call_log_empty_content_view=0x7f0901e3;
    public static final int new_call_log_entry_root=0x7f0901e4;
    public static final int new_call_log_header_text=0x7f0901e5;
    public static final int new_call_log_promotion_card_details=0x7f0901e6;
    public static final int new_call_log_promotion_card_icon=0x7f0901e7;
    public static final int new_call_log_promotion_card_ok=0x7f0901e8;
    public static final int new_call_log_promotion_card_title=0x7f0901e9;
    public static final int new_call_log_recycler_view=0x7f0901ea;
    public static final int new_voicemail_call_log_recycler_view=0x7f0901eb;
    public static final int new_voicemail_frame_layout=0x7f0901ec;
    public static final int new_voicemail_header_text=0x7f0901ed;
    public static final int new_voicemail_media_player=0x7f0901ee;
    public static final int next_button=0x7f0901ef;
    public static final int nine=0x7f0901f0;
    public static final int none=0x7f0901f1;
    public static final int normal=0x7f0901f2;
    public static final int notification_background=0x7f0901f3;
    public static final int notification_badge=0x7f0901f4;
    public static final int notification_main_column=0x7f0901f5;
    public static final int notification_main_column_container=0x7f0901f6;
    public static final int number=0x7f0901f7;
    public static final int number_title=0x7f0901f8;
    public static final int ok_got_it=0x7f0901f9;
    public static final int one=0x7f0901fa;
    public static final int option_container=0x7f0901fb;
    public static final int org=0x7f0901fc;
    public static final int org_title=0x7f0901fd;
    public static final int out_average=0x7f0901fe;
    public static final int out_count=0x7f0901ff;
    public static final int out_duration=0x7f090200;
    public static final int outline=0x7f090201;
    public static final int overflow=0x7f090202;
    public static final int parallax=0x7f090203;
    public static final int parentPanel=0x7f090204;
    public static final int parent_matrix=0x7f090205;
    public static final int participantList=0x7f090206;
    public static final int pauseButton=0x7f090207;
    public static final int paw_image=0x7f090208;
    public static final int percent=0x7f090209;
    public static final int percent_bar=0x7f09020a;
    public static final int permission_icon=0x7f09020b;
    public static final int permission_image=0x7f09020c;
    public static final int permission_text=0x7f09020d;
    public static final int permission_view=0x7f09020e;
    public static final int phoneButton=0x7f09020f;
    public static final int phone_account=0x7f090210;
    public static final int phone_number=0x7f090211;
    public static final int phone_type=0x7f090212;
    public static final int photo=0x7f090213;
    public static final int pill_stroke=0x7f090214;
    public static final int pin=0x7f090215;
    public static final int pin_entry=0x7f090216;
    public static final int pinned_header_list_layout=0x7f090217;
    public static final int playButton=0x7f090218;
    public static final int play_button=0x7f090219;
    public static final int play_icon=0x7f09021a;
    public static final int play_recordings=0x7f09021b;
    public static final int playback_position_text=0x7f09021c;
    public static final int playback_progress_text_view=0x7f09021d;
    public static final int playback_seek=0x7f09021e;
    public static final int playback_seek_total_duration=0x7f09021f;
    public static final int playback_speakerphone=0x7f090220;
    public static final int playback_start_stop=0x7f090221;
    public static final int playback_state_text=0x7f090222;
    public static final int post_call_note=0x7f090223;
    public static final int pound=0x7f090224;
    public static final int preview_image_view=0x7f090225;
    public static final int primary=0x7f090226;
    public static final int primary_action=0x7f090227;
    public static final int primary_action_button=0x7f090228;
    public static final int primary_action_raised=0x7f090229;
    public static final int primary_action_view=0x7f09022a;
    public static final int primary_text=0x7f09022b;
    public static final int progress_circular=0x7f09022c;
    public static final int progress_horizontal=0x7f09022d;
    public static final int promo_card=0x7f09022e;
    public static final int promotion_bottom_sheet=0x7f09022f;
    public static final int promotion_details=0x7f090230;
    public static final int promotion_icon=0x7f090231;
    public static final int promotion_title=0x7f090232;
    public static final int psuedo_black_screen_overlay=0x7f090233;
    public static final int quick_contact_checkbox=0x7f090234;
    public static final int quick_contact_photo=0x7f090235;
    public static final int radio=0x7f090236;
    public static final int rate_container=0x7f090237;
    public static final int record_button=0x7f090238;
    public static final int record_icon=0x7f090239;
    public static final int recycler_view=0x7f09023a;
    public static final int redo_button=0x7f09023b;
    public static final int refresh=0x7f09023c;
    public static final int remaining_characters=0x7f09023d;
    public static final int remember_this_choice_checkbox=0x7f09023e;
    public static final int remember_this_choice_container=0x7f09023f;
    public static final int remove_container=0x7f090240;
    public static final int remove_view=0x7f090241;
    public static final int remove_view_content=0x7f090242;
    public static final int remove_view_icon=0x7f090243;
    public static final int remove_view_text=0x7f090244;
    public static final int report_not_spam_action=0x7f090245;
    public static final int report_number_as_spam_action=0x7f090246;
    public static final int reset_date_filter=0x7f090247;
    public static final int right=0x7f090248;
    public static final int right_icon=0x7f090249;
    public static final int right_side=0x7f09024a;
    public static final int root_layout=0x7f09024b;
    public static final int rtt_button_accept_request=0x7f09024c;
    public static final int rtt_button_decline_request=0x7f09024d;
    public static final int rtt_call_badge=0x7f09024e;
    public static final int rtt_chat_avatar=0x7f09024f;
    public static final int rtt_chat_input=0x7f090250;
    public static final int rtt_chat_message=0x7f090251;
    public static final int rtt_chat_message_container=0x7f090252;
    public static final int rtt_chat_submit_button=0x7f090253;
    public static final int rtt_chat_timestamp=0x7f090254;
    public static final int rtt_end_call_button=0x7f090255;
    public static final int rtt_name_or_number=0x7f090256;
    public static final int rtt_on_hold_banner=0x7f090257;
    public static final int rtt_overflow_button=0x7f090258;
    public static final int rtt_recycler_view=0x7f090259;
    public static final int rtt_status_banner=0x7f09025a;
    public static final int rtt_timer=0x7f09025b;
    public static final int rtt_transcript=0x7f09025c;
    public static final int save_button=0x7f09025d;
    public static final int save_image_matrix=0x7f09025e;
    public static final int save_non_transition_alpha=0x7f09025f;
    public static final int save_scale_type=0x7f090260;
    public static final int screen=0x7f090261;
    public static final int scroll=0x7f090262;
    public static final int scrollIndicatorDown=0x7f090263;
    public static final int scrollIndicatorUp=0x7f090264;
    public static final int scrollView=0x7f090265;
    public static final int scrollable=0x7f090266;
    public static final int search_action_image=0x7f090267;
    public static final int search_action_text=0x7f090268;
    public static final int search_back_button=0x7f090269;
    public static final int search_badge=0x7f09026a;
    public static final int search_bar=0x7f09026b;
    public static final int search_box_collapsed=0x7f09026c;
    public static final int search_box_expanded=0x7f09026d;
    public static final int search_box_start_search=0x7f09026e;
    public static final int search_button=0x7f09026f;
    public static final int search_clear_button=0x7f090270;
    public static final int search_close_btn=0x7f090271;
    public static final int search_close_button=0x7f090272;
    public static final int search_edit_frame=0x7f090273;
    public static final int search_fragment_container=0x7f090274;
    public static final int search_go_btn=0x7f090275;
    public static final int search_mag_icon=0x7f090276;
    public static final int search_magnifying_glass=0x7f090277;
    public static final int search_plate=0x7f090278;
    public static final int search_progress=0x7f090279;
    public static final int search_src_text=0x7f09027a;
    public static final int search_view=0x7f09027b;
    public static final int search_view_container=0x7f09027c;
    public static final int search_voice_btn=0x7f09027d;
    public static final int secondary=0x7f09027e;
    public static final int secondary_action=0x7f09027f;
    public static final int secondary_action_raised=0x7f090280;
    public static final int secondary_text=0x7f090281;
    public static final int select_all_view_icon=0x7f090282;
    public static final int select_all_view_text=0x7f090283;
    public static final int select_dialog_listview=0x7f090284;
    public static final int selectable_text_view=0x7f090285;
    public static final int selected=0x7f090286;
    public static final int send_and_call_button=0x7f090287;
    public static final int send_and_call_text=0x7f090288;
    public static final int send_message=0x7f090289;
    public static final int send_message_action=0x7f09028a;
    public static final int send_message_container=0x7f09028b;
    public static final int separator=0x7f09028c;
    public static final int session_string=0x7f09028d;
    public static final int sessions_recycler_view=0x7f09028e;
    public static final int setPrimary=0x7f09028f;
    public static final int set_up_video_action=0x7f090290;
    public static final int settings=0x7f090291;
    public static final int settings_header_sounds_and_vibration=0x7f090292;
    public static final int seven=0x7f090293;
    public static final int shadow_overlay=0x7f090294;
    public static final int share_voicemail=0x7f090295;
    public static final int shortcut=0x7f090296;
    public static final int showCustom=0x7f090297;
    public static final int showHome=0x7f090298;
    public static final int showTitle=0x7f090299;
    public static final int six=0x7f09029a;
    public static final int smallLabel=0x7f09029b;
    public static final int snackbar_action=0x7f09029c;
    public static final int snackbar_text=0x7f09029d;
    public static final int snap=0x7f09029e;
    public static final int snapMargins=0x7f09029f;
    public static final int sort_by_count=0x7f0902a0;
    public static final int sort_by_duration=0x7f0902a1;
    public static final int spacer=0x7f0902a2;
    public static final int spam_image=0x7f0902a3;
    public static final int spam_text=0x7f0902a4;
    public static final int speakerButton=0x7f0902a5;
    public static final int speed_dial_add_button=0x7f0902a6;
    public static final int speed_dial_empty_content_view=0x7f0902a7;
    public static final int speed_dial_header_text=0x7f0902a8;
    public static final int speed_dial_recycler_view=0x7f0902a9;
    public static final int speed_dial_root=0x7f0902aa;
    public static final int speed_dial_tab=0x7f0902ab;
    public static final int split_action_bar=0x7f0902ac;
    public static final int src_atop=0x7f0902ad;
    public static final int src_in=0x7f0902ae;
    public static final int src_over=0x7f0902af;
    public static final int star=0x7f0902b0;
    public static final int starred_contact_context_menu_title=0x7f0902b1;
    public static final int start=0x7f0902b2;
    public static final int status_bar_latest_event_content=0x7f0902b3;
    public static final int stretch=0x7f0902b4;
    public static final int subject_list=0x7f0902b5;
    public static final int submenuarrow=0x7f0902b6;
    public static final int submit_area=0x7f0902b7;
    public static final int subtitle=0x7f0902b8;
    public static final int sum_header=0x7f0902b9;
    public static final int swap_camera_button=0x7f0902ba;
    public static final int tabMode=0x7f0902bb;
    public static final int tag_contact_type=0x7f0902bc;
    /**
     * For tag ids used by ContactPhotoManager to tag views with contact details
     */
    public static final int tag_display_name=0x7f0902bd;
    public static final int tag_identifier=0x7f0902be;
    public static final int tag_transition_group=0x7f0902bf;
    public static final int tag_unhandled_key_event_manager=0x7f0902c0;
    public static final int tag_unhandled_key_listeners=0x7f0902c1;
    public static final int text=0x7f0902c2;
    public static final int text2=0x7f0902c3;
    public static final int textSpacerNoButtons=0x7f0902c4;
    public static final int textSpacerNoTitle=0x7f0902c5;
    public static final int textStart=0x7f0902c6;
    public static final int textView=0x7f0902c7;
    public static final int text_input_password_toggle=0x7f0902c8;
    public static final int textinput_counter=0x7f0902c9;
    public static final int textinput_error=0x7f0902ca;
    public static final int textinput_helper_text=0x7f0902cb;
    public static final int three=0x7f0902cc;
    public static final int time=0x7f0902cd;
    public static final int title=0x7f0902ce;
    public static final int titleDividerNoCustom=0x7f0902cf;
    public static final int title_template=0x7f0902d0;
    public static final int toolbar=0x7f0902d1;
    public static final int toolbar_shadow=0x7f0902d2;
    public static final int top=0x7f0902d3;
    public static final int topPanel=0x7f0902d4;
    public static final int tos_message_details=0x7f0902d5;
    public static final int tos_message_title=0x7f0902d6;
    public static final int total_count_number=0x7f0902d7;
    public static final int total_count_total=0x7f0902d8;
    public static final int total_duration_number=0x7f0902d9;
    public static final int total_duration_text=0x7f0902da;
    public static final int total_duration_total=0x7f0902db;
    public static final int touch_outside=0x7f0902dc;
    public static final int transcription=0x7f0902dd;
    public static final int transcription_branding=0x7f0902de;
    public static final int transcription_text=0x7f0902df;
    public static final int transition_current_scene=0x7f0902e0;
    public static final int transition_layout_save=0x7f0902e1;
    public static final int transition_position=0x7f0902e2;
    public static final int transition_scene_layoutid_cache=0x7f0902e3;
    public static final int transition_transform=0x7f0902e4;
    public static final int two=0x7f0902e5;
    public static final int two_button_answer_button=0x7f0902e6;
    public static final int two_button_answer_label=0x7f0902e7;
    public static final int two_button_decline_button=0x7f0902e8;
    public static final int two_button_decline_label=0x7f0902e9;
    public static final int two_button_hint_text=0x7f0902ea;
    public static final int unblock_action=0x7f0902eb;
    public static final int uniform=0x7f0902ec;
    public static final int unitDip=0x7f0902ed;
    public static final int unitIn=0x7f0902ee;
    public static final int unitMm=0x7f0902ef;
    public static final int unitPt=0x7f0902f0;
    public static final int unitPx=0x7f0902f1;
    public static final int unitSp=0x7f0902f2;
    public static final int unlabeled=0x7f0902f3;
    public static final int up=0x7f0902f4;
    public static final int useLogo=0x7f0902f5;
    public static final int value=0x7f0902f6;
    public static final int video_call_action=0x7f0902f7;
    public static final int video_call_badge=0x7f0902f8;
    public static final int video_call_container=0x7f0902f9;
    public static final int video_call_lte_to_wifi_failed_checkbox=0x7f0902fa;
    public static final int videocall_end_call=0x7f0902fb;
    public static final int videocall_fullscreen_background=0x7f0902fc;
    public static final int videocall_green_screen_background=0x7f0902fd;
    public static final int videocall_mute_button=0x7f0902fe;
    public static final int videocall_mute_video=0x7f0902ff;
    public static final int videocall_on_hold_banner=0x7f090300;
    public static final int videocall_preview_off_blurred_image_view=0x7f090301;
    public static final int videocall_preview_root=0x7f090302;
    public static final int videocall_remote_off_blurred_image_view=0x7f090303;
    public static final int videocall_remote_video_off=0x7f090304;
    public static final int videocall_speaker_button=0x7f090305;
    public static final int videocall_switch_controls=0x7f090306;
    public static final int videocall_switch_on_hold=0x7f090307;
    public static final int videocall_switch_video=0x7f090308;
    public static final int videocall_video_controls=0x7f090309;
    public static final int videocall_video_controls_container=0x7f09030a;
    public static final int videocall_video_off=0x7f09030b;
    public static final int videocall_video_preview=0x7f09030c;
    public static final int videocall_video_preview_mute_overlay=0x7f09030d;
    public static final int videocall_video_preview_off_overlay=0x7f09030e;
    public static final int videocall_video_preview_placeholder=0x7f09030f;
    public static final int videocall_video_remote=0x7f090310;
    public static final int view_numbers_button=0x7f090311;
    public static final int view_offset_helper=0x7f090312;
    public static final int viewpager_header=0x7f090313;
    public static final int visible=0x7f090314;
    public static final int voice_call_container=0x7f090315;
    public static final int voice_search_button=0x7f090316;
    public static final int voicemail_alert_button=0x7f090317;
    public static final int voicemail_alert_content=0x7f090318;
    public static final int voicemail_alert_details=0x7f090319;
    public static final int voicemail_alert_header=0x7f09031a;
    public static final int voicemail_alert_icon=0x7f09031b;
    public static final int voicemail_alert_primary_button=0x7f09031c;
    public static final int voicemail_alert_secondary_button=0x7f09031d;
    public static final int voicemail_image=0x7f09031e;
    public static final int voicemail_playback_layout=0x7f09031f;
    public static final int voicemail_promo_card_icon=0x7f090320;
    public static final int voicemail_tab=0x7f090321;
    public static final int voicemail_tos_button=0x7f090322;
    public static final int voicemail_tos_button_accept=0x7f090323;
    public static final int voicemail_tos_button_decline=0x7f090324;
    public static final int voicemail_tos_message=0x7f090325;
    public static final int voicemail_transcription=0x7f090326;
    public static final int voicemail_transcription_branding=0x7f090327;
    public static final int voicemail_transcription_rating=0x7f090328;
    public static final int voicemail_transcription_rating_bad=0x7f090329;
    public static final int voicemail_transcription_rating_good=0x7f09032a;
    public static final int voicemail_transcription_rating_text=0x7f09032b;
    public static final int website=0x7f09032c;
    public static final int website_title=0x7f09032d;
    public static final int webview=0x7f09032e;
    public static final int webview_loading=0x7f09032f;
    public static final int wifi_icon=0x7f090330;
    public static final int withText=0x7f090331;
    public static final int work_icon=0x7f090332;
    public static final int work_profile_icon=0x7f090333;
    public static final int wrap_content=0x7f090334;
    public static final int zero=0x7f090335;
  }
  public static final class integer {
    public static final int abc_config_activityDefaultDur=0x7f0a0000;
    public static final int abc_config_activityShortDur=0x7f0a0001;
    public static final int answer_animate_entry_millis=0x7f0a0002;
    public static final int app_bar_elevation_anim_duration=0x7f0a0003;
    public static final int bottom_sheet_slide_duration=0x7f0a0004;
    public static final int call_composer_message_limit=0x7f0a0005;
    /**
     * 1 (MIC) for microphone audio source (default)
     * 4 (VOICE_CALL) if supported by device for voice call uplink + downlink audio source
     */
    public static final int call_recording_audio_source=0x7f0a0006;
    /**
     * Duration of the animations on the call subject dialog.
     */
    public static final int call_subject_animation_duration=0x7f0a0007;
    public static final int cancel_button_image_alpha=0x7f0a0008;
    public static final int config_tooltipAnimTime=0x7f0a0009;
    /**
     * Layout weight of card in contact list view.
     * Default to 0 to indicate no padding
     */
    public static final int contact_list_card_layout_weight=0x7f0a000a;
    /**
     * Layout weight of space elements in contact list view.
     * Default to 0 to indicate no padding
     */
    public static final int contact_list_space_layout_weight=0x7f0a000b;
    /**
     * Determines the number of columns in a ContactTileRow in the favorites tab
     */
    public static final int contact_tile_column_count_in_favorites=0x7f0a000c;
    public static final int design_snackbar_text_max_lines=0x7f0a000d;
    public static final int design_tab_indicator_anim_duration_ms=0x7f0a000e;
    public static final int dialpad_slide_in_duration=0x7f0a000f;
    public static final int dialpad_slide_out_duration=0x7f0a0010;
    public static final int fade_duration=0x7f0a0011;
    public static final int floating_action_button_animation_duration=0x7f0a0012;
    public static final int gallery_composer_grid_view_rows=0x7f0a0013;
    public static final int hide_password_duration=0x7f0a0014;
    public static final int incall_num_rows=0x7f0a0015;
    public static final int mtrl_btn_anim_delay_ms=0x7f0a0016;
    public static final int mtrl_btn_anim_duration_ms=0x7f0a0017;
    public static final int mtrl_chip_anim_duration=0x7f0a0018;
    public static final int mtrl_tab_indicator_anim_duration_ms=0x7f0a0019;
    public static final int post_call_char_limit=0x7f0a001a;
    public static final int show_password_duration=0x7f0a001b;
    /**
     * The number of characters in the snippet before we need to tokenize and ellipse.
     * Yikes, there is less space on a tablet!  This makes the search experience rather
     * poor. Another reason to get rid of the exist tablet layout.
     * The number of characters in the snippet before we need to tokenize and ellipse.
     * The number of characters in the snippet before we need to tokenize and ellipse.
     * The number of characters in the snippet before we need to tokenize and ellipse.
     * The number of characters in the snippet before we need to tokenize and ellipse.
     */
    public static final int snippet_length_before_tokenize=0x7f0a001c;
    public static final int status_bar_notification_info_maxnum=0x7f0a001d;
    /**
     * The number of milliseconds after which a video call will automatically enter fullscreen
     * mode (requires video_call_auto_fullscreen to be true).
     */
    public static final int video_call_auto_fullscreen_timeout=0x7f0a001e;
  }
  public static final class interpolator {
    public static final int mtrl_fast_out_linear_in=0x7f0b0000;
    public static final int mtrl_fast_out_slow_in=0x7f0b0001;
    public static final int mtrl_linear=0x7f0b0002;
    public static final int mtrl_linear_out_slow_in=0x7f0b0003;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0c0000;
    public static final int abc_action_bar_up_container=0x7f0c0001;
    public static final int abc_action_menu_item_layout=0x7f0c0002;
    public static final int abc_action_menu_layout=0x7f0c0003;
    public static final int abc_action_mode_bar=0x7f0c0004;
    public static final int abc_action_mode_close_item_material=0x7f0c0005;
    public static final int abc_activity_chooser_view=0x7f0c0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0c0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0c0008;
    public static final int abc_alert_dialog_material=0x7f0c0009;
    public static final int abc_alert_dialog_title_material=0x7f0c000a;
    public static final int abc_cascading_menu_item_layout=0x7f0c000b;
    public static final int abc_dialog_title_material=0x7f0c000c;
    public static final int abc_expanded_menu_layout=0x7f0c000d;
    public static final int abc_list_menu_item_checkbox=0x7f0c000e;
    public static final int abc_list_menu_item_icon=0x7f0c000f;
    public static final int abc_list_menu_item_layout=0x7f0c0010;
    public static final int abc_list_menu_item_radio=0x7f0c0011;
    public static final int abc_popup_menu_header_item_layout=0x7f0c0012;
    public static final int abc_popup_menu_item_layout=0x7f0c0013;
    public static final int abc_screen_content_include=0x7f0c0014;
    public static final int abc_screen_simple=0x7f0c0015;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0c0016;
    public static final int abc_screen_toolbar=0x7f0c0017;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0c0018;
    public static final int abc_search_view=0x7f0c0019;
    public static final int abc_select_dialog_material=0x7f0c001a;
    public static final int abc_tooltip=0x7f0c001b;
    public static final int account_filter_header=0x7f0c001c;
    public static final int action_mode_close_button=0x7f0c001d;
    public static final int activity_current_voicemail_greeting=0x7f0c001e;
    public static final int activity_helplines=0x7f0c001f;
    public static final int activity_manage_conference=0x7f0c0020;
    public static final int activity_record_voicemail_greeting=0x7f0c0021;
    public static final int activity_rtt_transcript=0x7f0c0022;
    public static final int add_contact_row=0x7f0c0023;
    public static final int audio_route=0x7f0c0024;
    public static final int audioroute_item=0x7f0c0025;
    public static final int audioroute_selector=0x7f0c0026;
    public static final int block_report_spam_dialog=0x7f0c0027;
    public static final int blocked_number_footer=0x7f0c0028;
    public static final int blocked_number_fragment=0x7f0c0029;
    public static final int blocked_number_header=0x7f0c002a;
    public static final int blocked_number_item=0x7f0c002b;
    public static final int blocked_numbers_activity=0x7f0c002c;
    public static final int bottom_nav_bar_layout=0x7f0c002d;
    public static final int bottom_nav_item=0x7f0c002e;
    public static final int call_composer_activity=0x7f0c002f;
    public static final int call_details_activity=0x7f0c0030;
    public static final int call_details_entry=0x7f0c0031;
    public static final int call_details_footer=0x7f0c0032;
    public static final int call_log_activity=0x7f0c0033;
    public static final int call_log_alert_item=0x7f0c0034;
    public static final int call_log_filter_spinner_item=0x7f0c0035;
    public static final int call_log_filter_spinners=0x7f0c0036;
    public static final int call_log_fragment=0x7f0c0037;
    public static final int call_log_list_item=0x7f0c0038;
    public static final int call_log_list_item_actions=0x7f0c0039;
    public static final int call_stats_detail=0x7f0c003a;
    public static final int call_stats_detail_info=0x7f0c003b;
    public static final int call_stats_detail_line=0x7f0c003c;
    public static final int call_stats_fragment=0x7f0c003d;
    public static final int call_stats_list_item=0x7f0c003e;
    public static final int call_subject_history_list_item=0x7f0c003f;
    public static final int caller_id_report_dialog=0x7f0c0040;
    public static final int caller_in_conference=0x7f0c0041;
    public static final int camera_view=0x7f0c0042;
    public static final int conference_manager_fragment=0x7f0c0043;
    public static final int contact_container=0x7f0c0044;
    public static final int contact_detail_list_padding=0x7f0c0045;
    public static final int contact_layout=0x7f0c0046;
    public static final int contact_list_card=0x7f0c0047;
    public static final int contact_list_content=0x7f0c0048;
    public static final int contact_photo_view=0x7f0c0049;
    public static final int contact_row=0x7f0c004a;
    public static final int default_account_checkbox=0x7f0c004b;
    public static final int design_bottom_navigation_item=0x7f0c004c;
    public static final int design_bottom_sheet_dialog=0x7f0c004d;
    public static final int design_layout_snackbar=0x7f0c004e;
    public static final int design_layout_snackbar_include=0x7f0c004f;
    public static final int design_layout_tab_icon=0x7f0c0050;
    public static final int design_layout_tab_text=0x7f0c0051;
    public static final int design_menu_item_action_area=0x7f0c0052;
    public static final int design_navigation_item=0x7f0c0053;
    public static final int design_navigation_item_header=0x7f0c0054;
    public static final int design_navigation_item_separator=0x7f0c0055;
    public static final int design_navigation_item_subheader=0x7f0c0056;
    public static final int design_navigation_menu=0x7f0c0057;
    public static final int design_navigation_menu_item=0x7f0c0058;
    public static final int design_text_input_password_icon=0x7f0c0059;
    public static final int device_number_row=0x7f0c005a;
    public static final int dialer_toolbar=0x7f0c005b;
    public static final int dialog_call_subject=0x7f0c005c;
    public static final int dialog_deviceids=0x7f0c005d;
    public static final int dialog_helpline_details=0x7f0c005e;
    public static final int dialog_webview=0x7f0c005f;
    public static final int dialpad=0x7f0c0060;
    public static final int dialpad_chooser_list_item=0x7f0c0061;
    public static final int dialpad_fragment=0x7f0c0062;
    public static final int dialpad_key=0x7f0c0063;
    public static final int dialpad_key_one=0x7f0c0064;
    public static final int dialpad_key_pound=0x7f0c0065;
    public static final int dialpad_key_star=0x7f0c0066;
    public static final int dialpad_view=0x7f0c0067;
    public static final int dialpad_view_unthemed=0x7f0c0068;
    public static final int dialtacts_activity=0x7f0c0069;
    public static final int directory_header=0x7f0c006a;
    public static final int disambig_dialog_divider=0x7f0c006b;
    public static final int disambig_dialog_layout=0x7f0c006c;
    public static final int disambig_option_header_layout=0x7f0c006d;
    public static final int disambig_option_layout=0x7f0c006e;
    public static final int divider_layout=0x7f0c006f;
    public static final int dot_hint=0x7f0c0070;
    public static final int double_date_picker_dialog=0x7f0c0071;
    public static final int ec_data_container=0x7f0c0072;
    public static final int empty_content_view=0x7f0c0073;
    public static final int empty_content_view_dialpad_search=0x7f0c0074;
    public static final int enriched_call_simulator_activity=0x7f0c0075;
    public static final int expanded_search_bar=0x7f0c0076;
    public static final int favorite_item_layout=0x7f0c0077;
    public static final int favorite_remove_view_layout=0x7f0c0078;
    public static final int frag_incall_voice=0x7f0c0079;
    public static final int frag_international_call_on_wifi_dialog=0x7f0c007a;
    public static final int frag_rtt_chat=0x7f0c007b;
    public static final int frag_rtt_request_dialog=0x7f0c007c;
    public static final int frag_video_charges_alert_dialog=0x7f0c007d;
    public static final int frag_videocall=0x7f0c007e;
    public static final int frag_videocall_land=0x7f0c007f;
    public static final int frag_videocall_surfaceview=0x7f0c0080;
    public static final int fragment_avatar=0x7f0c0081;
    public static final int fragment_camera_composer=0x7f0c0082;
    public static final int fragment_composer_frag=0x7f0c0083;
    public static final int fragment_composer_image=0x7f0c0084;
    public static final int fragment_composer_image_frag=0x7f0c0085;
    public static final int fragment_composer_text=0x7f0c0086;
    public static final int fragment_composer_text_frag=0x7f0c0087;
    public static final int fragment_composer_text_image=0x7f0c0088;
    public static final int fragment_composer_text_image_frag=0x7f0c0089;
    public static final int fragment_contacts=0x7f0c008a;
    public static final int fragment_custom_sms_dialog=0x7f0c008b;
    public static final int fragment_gallery_composer=0x7f0c008c;
    public static final int fragment_incoming_call=0x7f0c008d;
    public static final int fragment_message=0x7f0c008e;
    public static final int fragment_message_composer=0x7f0c008f;
    public static final int fragment_search=0x7f0c0090;
    public static final int fragment_spam=0x7f0c0091;
    public static final int fragment_speed_dial=0x7f0c0092;
    public static final int gallery_grid_item_view=0x7f0c0093;
    public static final int header=0x7f0c0094;
    public static final int header_layout=0x7f0c0095;
    public static final int incall_button_grid=0x7f0c0096;
    public static final int incall_contactgrid_bottom_row=0x7f0c0097;
    public static final int incall_contactgrid_top_row=0x7f0c0098;
    public static final int incall_dialpad_fragment=0x7f0c0099;
    public static final int incall_on_hold_banner=0x7f0c009a;
    public static final int incall_screen=0x7f0c009b;
    public static final int item_helpline=0x7f0c009c;
    public static final int keyguard_preview=0x7f0c009d;
    public static final int license=0x7f0c009e;
    public static final int license_menu_activity=0x7f0c009f;
    public static final int license_scrollview=0x7f0c00a0;
    public static final int lists_fragment=0x7f0c00a1;
    public static final int location_permission_row=0x7f0c00a2;
    public static final int main_activity=0x7f0c00a3;
    public static final int module_layout=0x7f0c00a4;
    public static final int mtrl_layout_snackbar=0x7f0c00a5;
    public static final int mtrl_layout_snackbar_include=0x7f0c00a6;
    public static final int new_call_log_entry=0x7f0c00a7;
    public static final int new_call_log_fragment=0x7f0c00a8;
    public static final int new_call_log_header=0x7f0c00a9;
    public static final int new_call_log_promotion_card=0x7f0c00aa;
    public static final int new_voicemail_call_log_fragment=0x7f0c00ab;
    public static final int new_voicemail_entry=0x7f0c00ac;
    public static final int new_voicemail_entry_alert=0x7f0c00ad;
    public static final int new_voicemail_entry_header=0x7f0c00ae;
    public static final int new_voicemail_media_player_layout=0x7f0c00af;
    public static final int notification_action=0x7f0c00b0;
    public static final int notification_action_tombstone=0x7f0c00b1;
    public static final int notification_media_action=0x7f0c00b2;
    public static final int notification_media_cancel_action=0x7f0c00b3;
    public static final int notification_template_big_media=0x7f0c00b4;
    public static final int notification_template_big_media_custom=0x7f0c00b5;
    public static final int notification_template_big_media_narrow=0x7f0c00b6;
    public static final int notification_template_big_media_narrow_custom=0x7f0c00b7;
    public static final int notification_template_custom_big=0x7f0c00b8;
    public static final int notification_template_icon_group=0x7f0c00b9;
    public static final int notification_template_lines_media=0x7f0c00ba;
    public static final int notification_template_media=0x7f0c00bb;
    public static final int notification_template_media_custom=0x7f0c00bc;
    public static final int notification_template_part_chronometer=0x7f0c00bd;
    public static final int notification_template_part_time=0x7f0c00be;
    public static final int overflow_menu=0x7f0c00bf;
    public static final int paw_hint=0x7f0c00c0;
    public static final int pending_incall_screen=0x7f0c00c1;
    public static final int permission_view=0x7f0c00c2;
    public static final int phone_disambig_item=0x7f0c00c3;
    public static final int phone_favorite_tile_view=0x7f0c00c4;
    public static final int post_call_activity=0x7f0c00c5;
    public static final int promotion_bottom_sheet=0x7f0c00c6;
    public static final int row_deviceid=0x7f0c00c7;
    public static final int rtt_banner=0x7f0c00c8;
    public static final int rtt_chat_list_item=0x7f0c00c9;
    public static final int rtt_transcript_advisory=0x7f0c00ca;
    public static final int rtt_transcript_list_item=0x7f0c00cb;
    public static final int search_action_layout=0x7f0c00cc;
    public static final int search_bar_expanded=0x7f0c00cd;
    public static final int search_contact_row=0x7f0c00ce;
    public static final int search_edittext=0x7f0c00cf;
    public static final int select_account_list_item=0x7f0c00d0;
    public static final int select_dialog_item_material=0x7f0c00d1;
    public static final int select_dialog_multichoice_material=0x7f0c00d2;
    public static final int select_dialog_singlechoice_material=0x7f0c00d3;
    public static final int selectable_text_view=0x7f0c00d4;
    public static final int session_view_holder=0x7f0c00d5;
    public static final int set_primary_checkbox=0x7f0c00d6;
    public static final int sheet_layout=0x7f0c00d7;
    public static final int speed_dial_fragment=0x7f0c00d8;
    public static final int speed_dial_header_layout=0x7f0c00d9;
    public static final int suggestion_row_layout=0x7f0c00da;
    public static final int support_simple_spinner_dropdown_item=0x7f0c00db;
    public static final int swipe_up_down_method=0x7f0c00dc;
    public static final int switch_camera_button=0x7f0c00dd;
    public static final int text_view_preference=0x7f0c00de;
    public static final int toolbar_layout=0x7f0c00df;
    public static final int two_button_method=0x7f0c00e0;
    public static final int unread_count_tab=0x7f0c00e1;
    public static final int video_call_lte_to_wifi_failed=0x7f0c00e2;
    public static final int video_contact_grid=0x7f0c00e3;
    public static final int videocall_controls=0x7f0c00e4;
    public static final int videocall_controls_land=0x7f0c00e5;
    public static final int videocall_controls_surfaceview=0x7f0c00e6;
    public static final int view_numbers_to_import_fragment=0x7f0c00e7;
    public static final int voicemail_change_pin=0x7f0c00e8;
    public static final int voicemail_error_message_fragment=0x7f0c00e9;
    public static final int voicemail_playback_layout=0x7f0c00ea;
    public static final int voicemail_tos_fragment=0x7f0c00eb;
  }
  public static final class menu {
    public static final int actionbar_delete=0x7f0d0000;
    public static final int call_log_options=0x7f0d0001;
    public static final int call_stats_options=0x7f0d0002;
    public static final int dialpad_options=0x7f0d0003;
    public static final int dialtacts_options=0x7f0d0004;
    public static final int main_menu=0x7f0d0005;
    public static final int menu_helplines=0x7f0d0006;
    public static final int starred_contact_context_menu=0x7f0d0007;
  }
  public static final class mipmap {
    public static final int ic_contacts_launcher=0x7f0e0000;
    public static final int ic_launcher=0x7f0e0001;
  }
  public static final class plurals {
    /**
     * A full string for minutes (time). [CHAR LIMIT=NONE]
     */
    public static final int a11y_minutes=0x7f0f0000;
    /**
     * String introducing to a11y users a call log entry in which the latest call is an answered call.
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_answered_call=0x7f0f0001;
    /**
     * String introducing to a11y users a call log entry in which the latest call is a blocked call.
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_blocked_call=0x7f0f0002;
    /**
     * String introducing to a11y users a call log entry in which the latest call is a missed call.
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_missed_call=0x7f0f0003;
    /**
     * String introducing to a11y users a call log entry in which the latest call is an outgoing call.
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_outgoing_call=0x7f0f0004;
    /**
     * A full string for seconds (time). [CHAR LIMIT=NONE]
     */
    public static final int a11y_seconds=0x7f0f0005;
    public static final int call=0x7f0f0006;
    /**
     * Alert dialog title to accept or decline deleting voicemail(s).
     */
    public static final int delete_voicemails_confirmation_dialog_title=0x7f0f0007;
    public static final int hour=0x7f0f0008;
    public static final int minute=0x7f0f0009;
    /**
     * Title of the notification of new voicemails. [CHAR LIMIT=30]
     */
    public static final int notification_voicemail_title=0x7f0f000a;
    public static final int play_recordings=0x7f0f000b;
    public static final int second=0x7f0f000c;
    /**
     * String format to describe the number of unread items in a tab.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     */
    public static final int tab_title_with_unread_items=0x7f0f000d;
  }
  public static final class raw {
    public static final int keep=0x7f100000;
    public static final int keep_spam=0x7f100001;
    public static final int third_party_license_metadata=0x7f100002;
    public static final int third_party_licenses=0x7f100003;
  }
  public static final class string {
    /**
     * A string to announce a call duration. For example, in english might say 2 minutes 15 seconds.
     * This translation may require the variables to be rearranged for grammars different than
     * english. [CHAR LIMIT=NONE]
     */
    public static final int a11y_call_duration_format=0x7f110000;
    /**
     * A string to announce a call duration. For example, in english might say 15 seconds.
     * This translation may require the variables to be rearranged for grammars different than
     * english. [CHAR LIMIT=NONE]
     */
    public static final int a11y_call_duration_short_format=0x7f110001;
    public static final int a11y_call_incoming_answer_description=0x7f110002;
    public static final int a11y_call_incoming_decline_description=0x7f110003;
    public static final int a11y_description_incall_label_manage_content=0x7f110004;
    public static final int a11y_description_incoming_call_answer_and_release=0x7f110005;
    public static final int a11y_description_incoming_call_answer_video_as_audio=0x7f110006;
    public static final int a11y_description_incoming_call_reject_with_sms=0x7f110007;
    /**
     * String describing to a11y users the image view containing a contact photo loaded by
     * GlidePhotoManager [CHAR LIMIT=NONE]
     */
    public static final int a11y_glide_photo_manager_contact_photo_description=0x7f110008;
    public static final int a11y_incoming_call_answer_and_release=0x7f110009;
    public static final int a11y_incoming_call_answer_video_as_audio=0x7f11000a;
    public static final int a11y_incoming_call_reject_with_sms=0x7f11000b;
    /**
     * Voice prompt of swipe gesture when accessibility is turned on.
     */
    public static final int a11y_incoming_call_swipe_gesture_prompt=0x7f11000c;
    public static final int a11y_incoming_call_swipe_to_answer=0x7f11000d;
    /**
     * String template describing to a11y users a call log entry with phone account info.
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_full_description_with_phone_account_info=0x7f11000e;
    /**
     * String template describing to a11y users a call log entry without phone account info.
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_full_description_without_phone_account_info=0x7f11000f;
    /**
     * String describing to a11y users the phone account used to make/receive the latest call in a call
     * log entry.
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_phone_account=0x7f110010;
    /**
     * A string informing a11y users that activating a call log entry will expand the menu
     * (a bottom sheet) for it.
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_tap_action=0x7f110011;
    /**
     * A string describing the call button of a call log entry for a11y users.
     * An example will be read as "make a video call to Jane Smith".
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_video_call=0x7f110012;
    /**
     * A string describing the call button of a call log entry for a11y users.
     * An example will be read as "call Jane Smith".
     * [CHAR LIMIT=NONE]
     */
    public static final int a11y_new_call_log_entry_voice_call=0x7f110013;
    /**
     * A string to describe available action for accessibility user. It will be read as "call number".
     */
    public static final int a11y_voicemail_entry_call=0x7f110014;
    /**
     * A string to describe available action for accessibility user. It will be read as "delete".
     */
    public static final int a11y_voicemail_entry_delete=0x7f110015;
    /**
     * A string to describe available action for accessibility user.
     * It will be read as "expand menu for this voicemail entry".
     */
    public static final int a11y_voicemail_entry_expand_menu=0x7f110016;
    /**
     * A string to describe available action for accessibility user. It will be read as "pause".
     */
    public static final int a11y_voicemail_entry_pause=0x7f110017;
    /**
     * A string to describe available action for accessibility user. It will be read as "play".
     */
    public static final int a11y_voicemail_entry_play=0x7f110018;
    /**
     * A string to describe available action for accessibility user. It will be read as "speaker".
     */
    public static final int a11y_voicemail_entry_speaker=0x7f110019;
    public static final int aac_format=0x7f11001a;
    public static final int abc_action_bar_home_description=0x7f11001b;
    public static final int abc_action_bar_up_description=0x7f11001c;
    public static final int abc_action_menu_overflow_description=0x7f11001d;
    public static final int abc_action_mode_done=0x7f11001e;
    public static final int abc_activity_chooser_view_see_all=0x7f11001f;
    public static final int abc_activitychooserview_choose_application=0x7f110020;
    public static final int abc_capital_off=0x7f110021;
    public static final int abc_capital_on=0x7f110022;
    public static final int abc_font_family_body_1_material=0x7f110023;
    public static final int abc_font_family_body_2_material=0x7f110024;
    public static final int abc_font_family_button_material=0x7f110025;
    public static final int abc_font_family_caption_material=0x7f110026;
    public static final int abc_font_family_display_1_material=0x7f110027;
    public static final int abc_font_family_display_2_material=0x7f110028;
    public static final int abc_font_family_display_3_material=0x7f110029;
    public static final int abc_font_family_display_4_material=0x7f11002a;
    public static final int abc_font_family_headline_material=0x7f11002b;
    public static final int abc_font_family_menu_material=0x7f11002c;
    public static final int abc_font_family_subhead_material=0x7f11002d;
    public static final int abc_font_family_title_material=0x7f11002e;
    public static final int abc_menu_alt_shortcut_label=0x7f11002f;
    public static final int abc_menu_ctrl_shortcut_label=0x7f110030;
    public static final int abc_menu_delete_shortcut_label=0x7f110031;
    public static final int abc_menu_enter_shortcut_label=0x7f110032;
    public static final int abc_menu_function_shortcut_label=0x7f110033;
    public static final int abc_menu_meta_shortcut_label=0x7f110034;
    public static final int abc_menu_shift_shortcut_label=0x7f110035;
    public static final int abc_menu_space_shortcut_label=0x7f110036;
    public static final int abc_menu_sym_shortcut_label=0x7f110037;
    public static final int abc_prepend_shortcut_label=0x7f110038;
    public static final int abc_search_hint=0x7f110039;
    public static final int abc_searchview_description_clear=0x7f11003a;
    public static final int abc_searchview_description_query=0x7f11003b;
    public static final int abc_searchview_description_search=0x7f11003c;
    public static final int abc_searchview_description_submit=0x7f11003d;
    public static final int abc_searchview_description_voice=0x7f11003e;
    public static final int abc_shareactionprovider_share_with=0x7f11003f;
    public static final int abc_shareactionprovider_share_with_application=0x7f110040;
    public static final int abc_toolbar_collapse_description=0x7f110041;
    /**
     * Label for setting that shows more information about the Phone app [CHAR LIMIT=30]
     */
    public static final int about_phone_label=0x7f110042;
    /**
     * Title for "Accessibility" category, which controls settings such as TTY mode and hearing
     * aid compatability. [CHAR LIMIT=40]
     */
    public static final int accessibility_settings_title=0x7f110043;
    /**
     * Title for data source when creating or editing a contact that doesn't
     * belong to a specific account.  This contact will only exist on the device
     * and will not be synced.
     */
    public static final int account_phone=0x7f110044;
    /**
     * Option displayed in context menu to copy long pressed phone number. [CHAR LIMIT=48]
     */
    public static final int action_copy_number_text=0x7f110045;
    /**
     * Label for action to edit a number before calling it. [CHAR LIMIT=48]
     */
    public static final int action_edit_number_before_call=0x7f110046;
    /**
     * Content description for the fake action menu up button as used
     * inside search. [CHAR LIMIT=NONE]
     */
    public static final int action_menu_back_from_search=0x7f110047;
    /**
     * Content description for the fake action menu button that brings up the call history
     * activity
     */
    public static final int action_menu_call_history_description=0x7f110048;
    /**
     * Content description for the button that displays the dialpad
     * [CHAR LIMIT=NONE]
     */
    public static final int action_menu_dialpad_button=0x7f110049;
    public static final int action_menu_helplines=0x7f11004a;
    /**
     * Content description for the fake action menu overflow button.
     * This should be same as the description for the real action menu
     * overflow button available in ActionBar.
     * [CHAR LIMIT=NONE]
     */
    public static final int action_menu_overflow_description=0x7f11004b;
    /**
     * Message displayed when there is no application available to handle a particular action.
     * [CHAR LIMIT=NONE]
     */
    public static final int activity_not_available=0x7f11004c;
    /**
     * Button to bring up UI to add a number to the blocked call list. [CHAR LIMIT=40]
     */
    public static final int addBlockedNumber=0x7f11004d;
    /**
     * Menu items for dialpad options as part of Pause and Wait ftr [CHAR LIMIT=30]
     */
    public static final int add_2sec_pause=0x7f11004e;
    /**
     * Message displayed when there is no application available to handle the add contact menu option. [CHAR LIMIT=NONE]
     */
    public static final int add_contact_not_available=0x7f11004f;
    /**
     * Title for screen prompting the user to select a contact to mark as a favorite. [CHAR LIMIT=NONE]
     */
    public static final int add_favorite_activity_title=0x7f110050;
    /**
     * Option shown in call log menu/voicemail to add the phone number from an entry to an existing contact
     * (also provides option to create a new contact from the number). [CHAR LIMIT=30]
     */
    public static final int add_to_contacts=0x7f110051;
    public static final int add_wait=0x7f110052;
    /**
     * Label for a list of all contacts on device. [CHAR LIMIT=30]
     */
    public static final int all_contacts=0x7f110053;
    /**
     * [CHAR LIMIT=NONE] Shown when there are no contacts in the all contacts list.
     */
    public static final int all_contacts_empty=0x7f110054;
    /**
     * [CHAR LIMIT=NONE] Shown as an action when the all contacts list is empty
     */
    public static final int all_contacts_empty_add_contact_action=0x7f110055;
    /**
     * Text for a button to ask for device permissions
     */
    public static final int allow=0x7f110056;
    /**
     * Error message shown when user tries to add a number to the block list that was already
     * blocked. [CHAR LIMIT=64]
     */
    public static final int alreadyBlocked=0x7f110057;
    /**
     * Label next to the checkbox users can use to prevent the associated dialog from showing
     */
    public static final int always_warn=0x7f110058;
    public static final int appbar_scrolling_view_behavior=0x7f110059;
    /**
     * Application name used in Settings/Apps. Default label for activities
     * that don't specify a label.
     */
    public static final int applicationLabel=0x7f11005a;
    /**
     * Assisted dialing section header. [CHAR LIMIT=NONE]
     */
    public static final int assisted_dialing_country_code_entry=0x7f11005b;
    /**
     * A fallback string for the assisted dialing header incase parsing failes.. [CHAR LIMIT=NONE]
     */
    public static final int assisted_dialing_country_code_entry_failure=0x7f11005c;
    /**
     * Category title for the country code picker in assisted dialing [CHAR LIMIT=40]
     */
    public static final int assisted_dialing_setting_cc_category_title=0x7f11005d;
    /**
     * Indicates the default state for the home country selector
     */
    public static final int assisted_dialing_setting_cc_default_summary=0x7f11005e;
    /**
     * Indicates the default failure state for the home country selector
     */
    public static final int assisted_dialing_setting_cc_default_summary_fallback=0x7f11005f;
    /**
     * Key for the assisted dialing home country setting
     */
    public static final int assisted_dialing_setting_cc_key=0x7f110060;
    /**
     * Label for the country code picker in assisted dialing [CHAR LIMIT=40]
     */
    public static final int assisted_dialing_setting_cc_title=0x7f110061;
    /**
     * Label for a setting enabling assisted dialing switch preference
     */
    public static final int assisted_dialing_setting_summary=0x7f110062;
    /**
     * Label for a setting enabling assisted dialing [CHAR LIMIT=40]
     */
    public static final int assisted_dialing_setting_title=0x7f110063;
    /**
     * Key for the assisted dialing setting toggle
     */
    public static final int assisted_dialing_setting_toggle_key=0x7f110064;
    public static final int audioroute_bluetooth=0x7f110065;
    public static final int audioroute_headset=0x7f110066;
    public static final int audioroute_phone=0x7f110067;
    public static final int audioroute_speaker=0x7f110068;
    /**
     * Options shown in a call log/voicemail menu to block a number and/or report it as spam. [CHAR LIMIT=30]
     */
    public static final int block_and_optionally_report_spam=0x7f110069;
    /**
     * Heading for the block list in the "Spam and blocked cal)ls" settings. [CHAR LIMIT=64]
     */
    public static final int block_list=0x7f11006a;
    /**
     * Options shown in a call log/voicemail menu to block a number. [CHAR LIMIT=30]
     */
    public static final int block_number=0x7f11006b;
    /**
     * Text in alert dialog after clicking on Block.  [CHAR LIMIT=100]
     */
    public static final int block_number_alert_details=0x7f11006c;
    /**
     * Confirmation dialog message for blocking a number with new filtering enabled.
     * [CHAR LIMIT=NONE]
     */
    public static final int block_number_confirmation_message_new_filtering=0x7f11006d;
    /**
     * Confirmation dialog message for blocking a number with no visual voicemail.
     * [CHAR LIMIT=NONE]
     */
    public static final int block_number_confirmation_message_no_vvm=0x7f11006e;
    /**
     * Confirmation dialog message for blocking a number with visual voicemail active.
     * [CHAR LIMIT=NONE]
     */
    public static final int block_number_confirmation_message_vvm=0x7f11006f;
    /**
     * Confirmation dialog title for blocking a number. [CHAR LIMIT=NONE]
     */
    public static final int block_number_confirmation_title=0x7f110070;
    /**
     * Toast if the user clicked the block button but it failed. [CHAR LIMIT=100]
     */
    public static final int block_number_failed_toast=0x7f110071;
    /**
     * Footer message of number blocking screen with no visual voicemail.
     * [CHAR LIMIT=NONE]
     */
    public static final int block_number_footer_message_no_vvm=0x7f110072;
    /**
     * Footer message of number blocking screen with visual voicemail active.
     * [CHAR LIMIT=NONE]
     */
    public static final int block_number_footer_message_vvm=0x7f110073;
    /**
     * Block number alert dialog button [CHAR LIMIT=32]
     */
    public static final int block_number_ok=0x7f110074;
    /**
     * Hint displayed in add blocked number search box when there is no query typed.
     * [CHAR LIMIT=45]
     */
    public static final int block_number_search_hint=0x7f110075;
    /**
     * Text in alert dialog after clicking on Block/report as spam.  [CHAR LIMIT=100]
     */
    public static final int block_report_number_alert_details=0x7f110076;
    /**
     * Title of alert dialog after clicking on Block/report as spam.  [CHAR LIMIT=100]
     */
    public static final int block_report_number_alert_title=0x7f110077;
    /**
     * Label for button to import settings for sending contacts to voicemail into Dialer's block
     * list. [CHAR_LIMIT=20]
     */
    public static final int blocked_call_settings_import_button=0x7f110078;
    /**
     * Text informing the user they have previously marked contacts to be sent to voicemail.
     * This will be followed by two buttons, 1) to view who is marked to be sent to voicemail
     * and 2) importing these settings to Dialer's block list. [CHAR LIMIT=NONE]
     */
    public static final int blocked_call_settings_import_description=0x7f110079;
    /**
     * Label for button to view numbers of contacts previous marked to be sent to voicemail.
     * [CHAR_LIMIT=20]
     */
    public static final int blocked_call_settings_view_numbers_button=0x7f11007a;
    /**
     * Label under the name of a blocked number in the call log. [CHAR LIMIT=15]
     */
    public static final int blocked_number_call_log_label=0x7f11007b;
    /**
     * Description that call blocking is temporarily disabled because the user called an
     * emergency number, and explains that call blocking will be re-enabled after a buffer
     * period has passed. [CHAR LIMIT=NONE]
     */
    public static final int blocked_numbers_disabled_emergency_desc=0x7f11007c;
    /**
     * Label for a section describing that call blocking is temporarily disabled because an
     * emergency call was made. [CHAR LIMIT=50]
     */
    public static final int blocked_numbers_disabled_emergency_header_label=0x7f11007d;
    /**
     * Notification badge indicating that there are more than 9 notifications for the user [CHAR LIMIT=3]
     */
    public static final int bottom_nav_count_99_plus=0x7f11007e;
    /**
     * Notification badge indicating that there are more than 9 notifications for the user [CHAR LIMIT=3]
     */
    public static final int bottom_nav_count_9_plus=0x7f11007f;
    public static final int bottom_sheet_behavior=0x7f110080;
    /**
     * Text for bubble return-to-call button
     */
    public static final int bubble_return_to_call=0x7f110081;
    /**
     * Internal preferences key for displaying the build version
     */
    public static final int build_version_key=0x7f110082;
    /**
     * Label shown in the About Phone screen for the build version [CHAR LIMIT=40]
     */
    public static final int build_version_label=0x7f110083;
    /**
     * Label shown on the 'positive' button for the dialog. Indicates that the call will proceed
     */
    public static final int call=0x7f110084;
    /**
     * Distance strings for business caller ID context.
     */
    public static final int callFailed_simError=0x7f110085;
    /**
     * The description text for the call log tab.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     * [CHAR LIMIT=NONE]
     */
    public static final int callHistoryIconLabel=0x7f110086;
    /**
     * Action string for calling an assistant phone number
     */
    public static final int call_assistant=0x7f110087;
    /**
     * Text for notification which provides the reason that call blocking has been temporarily
     * disabled. Namely, we disable call blocking after an emergency call in case of return
     * phone calls made by emergency services. [CHAR LIMIT=64]
     */
    public static final int call_blocking_disabled_notification_text=0x7f110088;
    /**
     * Title of notification telling the user that call blocking has been temporarily disabled.
     * [CHAR LIMIT=56]
     */
    public static final int call_blocking_disabled_notification_title=0x7f110089;
    /**
     * Action string for calling a callback number
     */
    public static final int call_callback=0x7f11008a;
    /**
     * Action string for calling a car phone number
     */
    public static final int call_car=0x7f11008b;
    /**
     * Action string for calling a company main phone number
     */
    public static final int call_company_main=0x7f11008c;
    /**
     * Shown as a message that notifies the user enriched calling isn't working
     */
    public static final int call_composer_connection_failed=0x7f11008d;
    /**
     * When a user places a call with an image attached, we show them the in call screen and
     * display this string "Image uploading..." to let them know why the call hasn't started.
     */
    public static final int call_composer_image_uploading=0x7f11008e;
    /**
     * Action string for calling a custom phone number
     */
    public static final int call_custom=0x7f11008f;
    /**
     * Title bar for call detail screen
     */
    public static final int call_details=0x7f110090;
    /**
     * Option displayed in context menu to copy long pressed phone number. [CHAR LIMIT=48]
     */
    public static final int call_details_copy_number=0x7f110091;
    /**
     * Label for action to edit a number before calling it. [CHAR LIMIT=48]
     */
    public static final int call_details_edit_number=0x7f110092;
    /**
     * Option shown in call log menu to navigate the user to the call details screen where the user
     * can view details for the call log entry. [CHAR LIMIT=30]
     */
    public static final int call_details_menu_label=0x7f110093;
    /**
     * An abbreviation for minutes. For example "1m" [CHAR LIMIT=NONE]
     */
    public static final int call_details_minutes_abbreviation=0x7f110094;
    /**
     * Label for action to report a number with inaccurate caller id information. [CHAR LIMIT=48]
     */
    public static final int call_details_report_call_id=0x7f110095;
    /**
     * An abbreviation for seconds. For example "28s" [CHAR LIMIT=NONE]
     */
    public static final int call_details_seconds_abbreviation=0x7f110096;
    /**
     * Title for the call disambiguation dialog
     */
    public static final int call_disambig_title=0x7f110097;
    /**
     * A pattern to define the layout of a call duration string. for example, in english might
     * say 2m 15s. Translation should only rearrange the inputs. minutes_translation and
     * seconds_translation should remain in \'quotes\'. [CHAR LIMIT=NONE]
     */
    public static final int call_duration_format_pattern=0x7f110098;
    /**
     * A pattern to define the layout of a call duration string. for example, in english might
     * say 2m 15s. Translation should only rearrange the inputs. seconds_translation should
     * remain in \'quotes\'. [CHAR LIMIT=NONE]
     */
    public static final int call_duration_short_format_pattern=0x7f110099;
    /**
     * Action string for calling a home fax phone number
     */
    public static final int call_fax_home=0x7f11009a;
    /**
     * Action string for calling a work fax phone number
     */
    public static final int call_fax_work=0x7f11009b;
    /**
     * Action string for calling a home phone number
     */
    public static final int call_home=0x7f11009c;
    public static final int call_incoming_answer=0x7f11009d;
    /**
     * "Custom Message" Cancel alert dialog button
     */
    public static final int call_incoming_custom_message_cancel=0x7f11009e;
    /**
     * "Custom Message" Send alert dialog button
     */
    public static final int call_incoming_custom_message_send=0x7f11009f;
    public static final int call_incoming_decline=0x7f1100a0;
    public static final int call_incoming_default_label_answer_and_release_second=0x7f1100a1;
    public static final int call_incoming_default_label_answer_and_release_third=0x7f1100a2;
    public static final int call_incoming_important=0x7f1100a3;
    public static final int call_incoming_message_custom=0x7f1100a4;
    /**
     * "Respond via SMS" option that lets you compose a custom response. [CHAR LIMIT=30]
     */
    public static final int call_incoming_respond_via_sms_custom_message=0x7f1100a5;
    public static final int call_incoming_swipe_to_answer=0x7f1100a6;
    public static final int call_incoming_swipe_to_answer_and_release=0x7f1100a7;
    public static final int call_incoming_swipe_to_answer_video_as_audio=0x7f1100a8;
    public static final int call_incoming_swipe_to_decline_with_message=0x7f1100a9;
    public static final int call_incoming_swipe_to_reject=0x7f1100aa;
    /**
     * Text indicates the video local camera is off. [CHAR LIMIT=40]
     */
    public static final int call_incoming_video_is_off=0x7f1100ab;
    public static final int call_incoming_will_disconnect=0x7f1100ac;
    /**
     * Action string for calling a ISDN phone number
     */
    public static final int call_isdn=0x7f1100ad;
    /**
     * Button text for a button displayed underneath an entry in the call log, which marks the
     * phone number represented by the call log entry as a Spam number.
     * [CHAR LIMIT=30]
     */
    public static final int call_log_action_block_number=0x7f1100ae;
    /**
     * Button text for a button displayed underneath an entry in the call log, which marks the
     * phone number represented by the call log entry as a Spam number.
     * [CHAR LIMIT=30]
     */
    public static final int call_log_action_block_report_number=0x7f1100af;
    /**
     * Button text for the button displayed underneath an entry in the call log, which when
     * tapped triggers a return call to the named user. [CHAR LIMIT=30]
     */
    public static final int call_log_action_call=0x7f1100b0;
    /**
     * Button text for the button displayed underneath an entry in the call log.
     * Tapping navigates the user to the call details screen where the user can view details for
     * the call log entry. [CHAR LIMIT=30]
     */
    public static final int call_log_action_details=0x7f1100b1;
    /**
     * Button text for the "Invite" option displayed underneath an entry in the call log.
     * Tapping causes a the user to be taken to the messaging app with a message ready to invite them to set up video calling.
     * [CHAR LIMIT=30]
     */
    public static final int call_log_action_invite_video=0x7f1100b2;
    /**
     * Button text for a button displayed underneath an entry in the call log, which removes the
     * phone number represented by the call log entry from the Spam numbers list.
     * [CHAR LIMIT=30]
     */
    public static final int call_log_action_remove_spam=0x7f1100b3;
    /**
     * Button text for a button displayed underneath an entry in the call log, which opens up a
     * messaging app to send a SMS to the number represented by the call log entry.
     * [CHAR LIMIT=30]
     */
    public static final int call_log_action_send_message=0x7f1100b4;
    /**
     * Button text for the "Set up" video calling option displayed underneath an entry in the call log.
     * Tapping causes a the user to be taken to set up video calling.
     * [CHAR LIMIT=30]
     */
    public static final int call_log_action_set_up_video=0x7f1100b5;
    /**
     * Button text for the button displayed underneath an entry in the call log.
     * Tapping opens dialog to share voicemail archive with other apps. [CHAR LIMIT=30]
     */
    public static final int call_log_action_share_voicemail=0x7f1100b6;
    /**
     * Button text for a button displayed underneath an entry in the call log, which removes the
     * phone number represented by the call log entry from the blacklisted numbers.
     * [CHAR LIMIT=30]
     */
    public static final int call_log_action_unblock_number=0x7f1100b7;
    /**
     * Button text for the "video call" displayed underneath an entry in the call log.
     * Tapping causes a video call to be placed to the caller represented by the call log entry.
     * [CHAR LIMIT=30]
     */
    public static final int call_log_action_video_call=0x7f1100b8;
    /**
     * Title of activity that displays a list of all calls
     */
    public static final int call_log_activity_title=0x7f1100b9;
    public static final int call_log_all_calls_header=0x7f1100ba;
    /**
     * Text displayed when the call log is empty.
     */
    public static final int call_log_all_empty=0x7f1100bb;
    /**
     * Label of the button displayed when the call history is empty. Allows the user to make a call.
     */
    public static final int call_log_all_empty_action=0x7f1100bc;
    /**
     * Title for the call log tab containing the list of all voicemails and calls
     * [CHAR LIMIT=30]
     */
    public static final int call_log_all_title=0x7f1100bd;
    public static final int call_log_blacklist_header=0x7f1100be;
    /**
     * Menu item used to remove all calls from the call log
     */
    public static final int call_log_delete_all=0x7f1100bf;
    /**
     * String used as a header in the call log above calls which occurred two days or more ago.
     * [CHAR LIMIT=65]
     */
    public static final int call_log_header_other=0x7f1100c0;
    /**
     * String used as a header in the call log above calls which occurred today.
     * [CHAR LIMIT=65]
     */
    public static final int call_log_header_today=0x7f1100c1;
    /**
     * String used as a header in the call log above calls which occurred yesterday.
     * [CHAR LIMIT=65]
     */
    public static final int call_log_header_yesterday=0x7f1100c2;
    public static final int call_log_incoming_header=0x7f1100c3;
    /**
     * The counter for calls in a group and the date of the latest call as shown in the call log [CHAR LIMIT=15]
     */
    public static final int call_log_item_count_and_date=0x7f1100c4;
    /**
     * Text displayed when the list of missed calls is empty
     */
    public static final int call_log_missed_empty=0x7f1100c5;
    public static final int call_log_missed_header=0x7f1100c6;
    /**
     * Title for the call log tab containing the list of all missed calls only
     * [CHAR LIMIT=30]
     */
    public static final int call_log_missed_title=0x7f1100c7;
    public static final int call_log_outgoing_header=0x7f1100c8;
    public static final int call_log_show_all_accounts=0x7f1100c9;
    public static final int call_log_stats_title=0x7f1100ca;
    /**
     * Menu item used to delete a voicemail. [CHAR LIMIT=30]
     */
    public static final int call_log_trash_voicemail=0x7f1100cb;
    /**
     * TextView text item showing the secondary line number the call was received via.
     * [CHAR LIMIT=NONE]
     */
    public static final int call_log_via_number=0x7f1100cc;
    /**
     * The order of the PhoneAccount and via number that a call was received on,
     * if both are visible.
     * [CHAR LIMIT=NONE]
     */
    public static final int call_log_via_number_phone_account=0x7f1100cd;
    /**
     * Text displayed when the list of voicemails is empty
     */
    public static final int call_log_voicemail_empty=0x7f1100ce;
    public static final int call_log_voicemail_header=0x7f1100cf;
    /**
     * Action string for calling a main phone number
     */
    public static final int call_main=0x7f1100d0;
    /**
     * Action string for calling a MMS phone number
     */
    public static final int call_mms=0x7f1100d1;
    /**
     * Action string for calling a mobile phone number
     */
    public static final int call_mobile=0x7f1100d2;
    /**
     * Action string for calling an other phone number
     */
    public static final int call_other=0x7f1100d3;
    /**
     * Action string for calling an other fax phone number
     */
    public static final int call_other_fax=0x7f1100d4;
    /**
     * Action string for calling a pager phone number
     */
    public static final int call_pager=0x7f1100d5;
    public static final int call_playback_no_app_found_toast=0x7f1100d6;
    /**
     * Action string for calling a radio phone number
     */
    public static final int call_radio=0x7f1100d7;
    public static final int call_recording_category_key=0x7f1100d8;
    public static final int call_recording_category_title=0x7f1100d9;
    public static final int call_recording_failed_message=0x7f1100da;
    public static final int call_recording_file_location=0x7f1100db;
    public static final int call_recording_format=0x7f1100dc;
    public static final int call_recording_format_key=0x7f1100dd;
    /**
     * Label for the call settings section [CHAR LIMIT=30]
     */
    public static final int call_settings_label=0x7f1100de;
    public static final int call_stats_blocked=0x7f1100df;
    public static final int call_stats_date_filter=0x7f1100e0;
    public static final int call_stats_detail_title=0x7f1100e1;
    public static final int call_stats_filter_from=0x7f1100e2;
    public static final int call_stats_filter_picker_title=0x7f1100e3;
    public static final int call_stats_filter_to=0x7f1100e4;
    public static final int call_stats_header_total=0x7f1100e5;
    public static final int call_stats_header_total_callsonly=0x7f1100e6;
    public static final int call_stats_incoming=0x7f1100e7;
    public static final int call_stats_missed=0x7f1100e8;
    public static final int call_stats_outgoing=0x7f1100e9;
    public static final int call_stats_percent=0x7f1100ea;
    public static final int call_stats_reset_filter=0x7f1100eb;
    public static final int call_stats_sort_by_count=0x7f1100ec;
    public static final int call_stats_sort_by_duration=0x7f1100ed;
    public static final int call_stats_title_average_duration=0x7f1100ee;
    public static final int call_stats_title_count=0x7f1100ef;
    public static final int call_stats_title_durations=0x7f1100f0;
    public static final int call_stats_title_for_number=0x7f1100f1;
    public static final int call_stats_title_of_total=0x7f1100f2;
    /**
     * Hint text shown in the call subject dialog. [CHAR LIMIT=255]
     */
    public static final int call_subject_hint=0x7f1100f3;
    /**
     * String used to represent the total number of characters entered for a call subject,
     * compared to the character limit.  Example: 2 / 64
     */
    public static final int call_subject_limit=0x7f1100f4;
    /**
     * String used to build a phone number type and phone number string.
     * Example: Mobile 650-555-1212
     */
    public static final int call_subject_type_and_number=0x7f1100f5;
    /**
     * Action string for calling a Telex phone number
     */
    public static final int call_telex=0x7f1100f6;
    /**
     * Action string for calling a TTY/TDD phone number
     */
    public static final int call_tty_tdd=0x7f1100f7;
    public static final int call_via=0x7f1100f8;
    public static final int call_via_dialog_title=0x7f1100f9;
    /**
     * String used for actions in the dialer call log and the quick contact card to initiate
     * a call to an individual.  The user is prompted to enter a note which is sent along with
     * the call (e.g. a call subject). [CHAR LIMIT=40]
     */
    public static final int call_with_a_note=0x7f1100fa;
    /**
     * Action string for calling a work phone number
     */
    public static final int call_work=0x7f1100fb;
    /**
     * Action string for calling a work mobile phone number
     */
    public static final int call_work_mobile=0x7f1100fc;
    /**
     * Action string for calling a work pager phone number
     */
    public static final int call_work_pager=0x7f1100fd;
    /**
     * Error toast message shown when a camera image failed to attach to the message
     */
    public static final int camera_media_failure=0x7f1100fe;
    /**
     * Text presented to the user explaining that we need Camera permission to take photos
     */
    public static final int camera_permission_text=0x7f1100ff;
    /**
     * Text presented to the user explaining that we have enabled the camera permission automatically [CHAR LIMIT=NONE]
     */
    public static final int camera_privacy_text=0x7f110100;
    /**
     * Text shown on the record voicemail activity [CHAR LIMIT=20]
     */
    public static final int change_greeting_text=0x7f110101;
    /**
     * The label for the cancel button in change voicemail PIN activity
     */
    public static final int change_pin_cancel_label=0x7f110102;
    /**
     * The title for the confirm new pin step in change voicemail PIN activity
     */
    public static final int change_pin_confirm_pin_header=0x7f110103;
    /**
     * The error message for th confirm new pin step in change voicemail PIN activity, if the pin doen't match the one previously entered
     */
    public static final int change_pin_confirm_pins_dont_match=0x7f110104;
    /**
     * The label for the continue button in change voicemail PIN activity
     */
    public static final int change_pin_continue_label=0x7f110105;
    /**
     * The title for the enter new pin step in change voicemail PIN activity
     */
    public static final int change_pin_enter_new_pin_header=0x7f110106;
    /**
     * The hint for the enter new pin step in change voicemail PIN activity
     */
    public static final int change_pin_enter_new_pin_hint=0x7f110107;
    /**
     * The title for the enter old pin step in change voicemail PIN activity
     */
    public static final int change_pin_enter_old_pin_header=0x7f110108;
    /**
     * The hint for the enter old pin step in change voicemail PIN activity
     */
    public static final int change_pin_enter_old_pin_hint=0x7f110109;
    /**
     * The label for the ok button in change voicemail PIN activity
     */
    public static final int change_pin_ok_label=0x7f11010a;
    /**
     * The toast to show after the voicemail PIN has been successfully changed
     */
    public static final int change_pin_succeeded=0x7f11010b;
    /**
     * The error message to show if the server reported an error while attempting to change the voicemail PIN
     */
    public static final int change_pin_system_error=0x7f11010c;
    /**
     * The title for the change voicemail PIN activity
     */
    public static final int change_pin_title=0x7f11010d;
    public static final int character_counter_content_description=0x7f11010e;
    public static final int character_counter_pattern=0x7f11010f;
    /**
     * Generic action string for starting an IM chat
     */
    public static final int chat=0x7f110110;
    /**
     * Action string for starting an IM chat with the AIM protocol
     */
    public static final int chat_aim=0x7f110111;
    /**
     * Action string for starting an IM chat with the Google Talk protocol
     */
    public static final int chat_gtalk=0x7f110112;
    /**
     * Action string for starting an IM chat with the ICQ protocol
     */
    public static final int chat_icq=0x7f110113;
    /**
     * Action string for starting an IM chat with the Jabber protocol
     */
    public static final int chat_jabber=0x7f110114;
    /**
     * Action string for starting an IM chat with the MSN or Windows Live protocol
     */
    public static final int chat_msn=0x7f110115;
    /**
     * Action string for starting an IM chat with the QQ protocol
     */
    public static final int chat_qq=0x7f110116;
    /**
     * Action string for starting an IM chat with the Skype protocol
     */
    public static final int chat_skype=0x7f110117;
    /**
     * Action string for starting an IM chat with the Yahoo protocol
     */
    public static final int chat_yahoo=0x7f110118;
    /**
     * Label for checkbox in the Alert dialog to allow the user to report the number as spam as well.  [CHAR LIMIT=30]
     */
    public static final int checkbox_report_as_spam_action=0x7f110119;
    /**
     * Used to inform the user that a call was received via a number other than the primary
     * phone number associated with their device. [CHAR LIMIT=16]
     */
    public static final int child_number=0x7f11011a;
    /**
     * Confirmation dialog for clearing the call log. [CHAR LIMIT=NONE]
     */
    public static final int clearCallLogConfirmation=0x7f11011b;
    /**
     * Title of the confirmation dialog for clearing the call log. [CHAR LIMIT=37]
     */
    public static final int clearCallLogConfirmation_title=0x7f11011c;
    /**
     * Title of the "Clearing call log" progress-dialog [CHAR LIMIT=35]
     */
    public static final int clearCallLogProgress_title=0x7f11011d;
    /**
     * Confirmation dialog for clearing frequents. [CHAR LIMIT=NONE]
     */
    public static final int clearFrequentsConfirmation=0x7f11011e;
    /**
     * Title of the confirmation dialog for clearing frequents. [CHAR LIMIT=37]
     */
    public static final int clearFrequentsConfirmation_title=0x7f11011f;
    /**
     * Title of the "Clearing frequently contacted" progress-dialog [CHAR LIMIT=35]
     */
    public static final int clearFrequentsProgress_title=0x7f110120;
    /**
     * Name for a conference call. Shown in the in call UI and in notifications.
     */
    public static final int conference_call_name=0x7f110121;
    public static final int conference_caller_disconnect_content_description=0x7f110122;
    /**
     * Regular expression for prohibiting certain phone numbers in dialpad.
     * Ignored if empty.
     */
    public static final int config_prohibited_phone_number_regexp=0x7f110123;
    /**
     * The label for the confirm-disable-voicemail button [CHAR LIMIT=16]
     */
    public static final int confirm_disable_voicemail_accept_dialog_label=0x7f110124;
    /**
     * Message explaining the implictions of disabling visual voicemail [CHAR LIMIT=NONE]
     */
    public static final int confirm_disable_voicemail_dialog_message=0x7f110125;
    /**
     * Title for disable visual voicemail confirmation dialog [CHAR LIMIT=40]
     */
    public static final int confirm_disable_voicemail_dialog_title=0x7f110126;
    /**
     * Contacts preferences key for contact editor anything saved
     */
    public static final int contact_editor_anything_saved_key=0x7f110127;
    /**
     * Contacts preferences key for contact editor default account
     */
    public static final int contact_editor_default_account_key=0x7f110128;
    /**
     * In-call screen: phone number of the device shown to the users so that users can give their
     * number to emergency responders.
     */
    public static final int contact_grid_callback_number=0x7f110129;
    /**
     * Displayed in the answer call screen for incoming spam calls.
     */
    public static final int contact_grid_incoming_suspected_spam=0x7f11012a;
    /**
     * Displayed in the answer call screen for incoming calls via a phone account.
     */
    public static final int contact_grid_incoming_via_template=0x7f11012b;
    /**
     * Displayed in the answer call screen for incoming video calls.
     */
    public static final int contact_grid_incoming_video_call=0x7f11012c;
    /**
     * Displayed in the answer call screen for incoming voice calls.
     */
    public static final int contact_grid_incoming_voice_call=0x7f11012d;
    /**
     * Displayed in the answer call screen for incoming video calls over Wi-F.
     */
    public static final int contact_grid_incoming_wifi_video_call=0x7f11012e;
    /**
     * Displayed in the answer call screen for incoming voice calls.
     */
    public static final int contact_grid_incoming_work_call=0x7f11012f;
    /**
     * Text for a button that opens the contact's info [CHAR LIMIT=15]
     */
    public static final int contact_menu_contact_info=0x7f110130;
    /**
     * Text for a button that opens the contact in the SMS app [CHAR LIMIT=15]
     */
    public static final int contact_menu_message=0x7f110131;
    /**
     * Text for a button that removes the item from the list [CHAR LIMIT=15]
     */
    public static final int contact_menu_remove=0x7f110132;
    /**
     * Text for a button that places a video call [CHAR LIMIT=15]
     */
    public static final int contact_menu_video_call=0x7f110133;
    /**
     * Text for a button that places a phone/voice call [CHAR LIMIT=15]
     */
    public static final int contact_menu_voice_call=0x7f110134;
    /**
     * Directory partition name for p13n suggestions
     */
    public static final int contact_suggestions=0x7f110135;
    /**
     * Text for a toolbar button that shows the user their contacts [CHAR LIMIT=NONE]
     */
    public static final int contacts=0x7f110136;
    /**
     * Directory partition name (also exists in contacts)
     */
    public static final int contactsList=0x7f110137;
    /**
     * Content description for the overflow menu button. [CHAR LIMIT=NONE]
     */
    public static final int content_description_overflow=0x7f110138;
    /**
     * Content description for avatar of RTT chat message. [CHAR LIMIT=NONE]
     */
    public static final int content_description_rtt_chat_avatar=0x7f110139;
    /**
     * Content description for submit chat input button. [CHAR LIMIT=NONE]
     */
    public static final int content_description_rtt_check_button=0x7f11013a;
    /**
     * Option displayed in call log/voicemail menu to copy phone number. [CHAR LIMIT=30]
     */
    public static final int copy_number=0x7f11013b;
    /**
     * Option displayed in context menu to copy long pressed voicemail transcription. [CHAR LIMIT=48]
     */
    public static final int copy_transcript_text=0x7f11013c;
    /**
     * Text instruction shown on the current voicemail greeting display screen [CHAR LIMIT=20]
     */
    public static final int current_voicemail_greeting_record_instruction=0x7f11013d;
    /**
     * Title for voicemail greeting, if one is already recorded.
     */
    public static final int current_voicemail_greeting_recording_title=0x7f11013e;
    /**
     * Hint in a text field to compose a custom message to send with a phone call [CHAR LIMIT=27]
     */
    public static final int custom_message_hint=0x7f11013f;
    public static final int date_qs_currentmonth=0x7f110140;
    public static final int date_qs_currentquarter=0x7f110141;
    public static final int date_qs_currentyear=0x7f110142;
    public static final int date_qs_lastmonth=0x7f110143;
    public static final int date_qs_lastquarter=0x7f110144;
    public static final int date_qs_lastweek=0x7f110145;
    public static final int date_qs_lastyear=0x7f110146;
    public static final int date_quick_selection=0x7f110147;
    /**
     * The label for the decimal encoding of the device ID
     */
    public static final int dec=0x7f110148;
    /**
     * The string used to describe a notification if it is the default one in the system. For
     * example, if the user selects the default notification, it will appear as something like
     * Default sound(Capella) in the notification summary.
     * [CHAR LIMIT=40]
     */
    public static final int default_notification_description=0x7f110149;
    /**
     * Option displayed in call log to delete a call log item. [CHAR LIMIT=30]
     */
    public static final int delete=0x7f11014a;
    public static final int deny=0x7f11014b;
    /**
     * Description for the "add to existing contact" action for an entry in the call log. This
     * action opens a screen for adding this name or number to an existing contact.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_add_to_existing_contact_action=0x7f11014c;
    /**
     * String describing the delete icon on a blocked number list item.
     * When tapped, it will show a dialog confirming the unblocking of the number.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_blocked_number_list_delete=0x7f11014d;
    /**
     * String describing the "call" action for an entry in the call log.  The call back
     * action triggers a return call to the named user.
     * Note: AccessibilityServices uses this attribute to announce the purpose of the button.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_call_action=0x7f11014e;
    /**
     * Content description of button to show ui for taking a photo
     */
    public static final int description_call_composer_camera=0x7f11014f;
    /**
     * Content description of button to show ui for sending a message
     */
    public static final int description_call_composer_message=0x7f110150;
    /**
     * Content description of button to show ui for selecting a photo from the user's gallery
     */
    public static final int description_call_composer_photo=0x7f110151;
    /**
     * Content description of button to cancel a photo
     */
    public static final int description_camera_cancel_photo=0x7f110152;
    /**
     * Content description of button when after swapped to front
     */
    public static final int description_camera_switch_camera_facing=0x7f110153;
    /**
     * Content description of button when after swapped to back
     */
    public static final int description_camera_switch_camera_rear=0x7f110154;
    /**
     * Content description of button to switch to full screen camera
     */
    public static final int description_camera_switch_full_screen=0x7f110155;
    /**
     * Content description of button to resize camera from fullscreen to only a preview
     */
    public static final int description_camera_switch_preview_screen=0x7f110156;
    /**
     * Content description of button to take a photo
     */
    public static final int description_camera_take_picture=0x7f110157;
    /**
     * String describing the cancel button in multi select.
     * Note: AccessibilityServices uses this attribute to announce what the view represents.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_cancel_multi_select=0x7f110158;
    /**
     * String describing the icon used to clear the search field
     */
    public static final int description_clear_search=0x7f110159;
    /**
     * String describing the button to access the contact details for a name or number.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     */
    public static final int description_contact_details=0x7f11015a;
    /**
     * A11y announcement to let users know a button will let them view their contacts [CHAR LIMIT=NONE]
     */
    public static final int description_contacts=0x7f11015b;
    /**
     * Description for the "create new contact" action for an entry in the call log. This action
     * opens a screen for creating a new contact for this name or number. [CHAR LIMIT=NONE]
     */
    public static final int description_create_new_contact_action=0x7f11015c;
    /**
     * String describing the Delete/Backspace ImageButton.
     * Used by AccessibilityService to announce the purpose of the button.
     */
    public static final int description_delete_button=0x7f11015d;
    /**
     * String describing the "details" action for an entry in the call log.  The details action
     * displays the call details screen for an entry in the call log.  This shows the calls to
     * and from the specified number associated with the call log entry.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_details_action=0x7f11015e;
    /**
     * String describing the Dial ImageButton
     * Used by AccessibilityService to announce the purpose of the button.
     */
    public static final int description_dial_button=0x7f11015f;
    /**
     * String describing the back button in the dialpad.
     */
    public static final int description_dialpad_back=0x7f110160;
    /**
     * String describing the overflow menu button in the dialpad.
     */
    public static final int description_dialpad_overflow=0x7f110161;
    /**
     * String describing the user entering bulk action mode.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     */
    public static final int description_entering_bulk_action_mode=0x7f110162;
    /**
     * String describing the button used to add a plus (+) symbol to the dialpad
     */
    public static final int description_image_button_plus=0x7f110163;
    /**
     * String describing an incoming answered call entry in the call log.
     * Note: AccessibilityServices uses this attribute to announce what the view represents.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_incoming_answered_call=0x7f110164;
    /**
     * String describing an incoming missed call entry in the call log.
     * Note: AccessibilityServices uses this attribute to announce what the view represents.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_incoming_missed_call=0x7f110165;
    /**
     * String describing the user leaving bulk action mode.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     */
    public static final int description_leaving_bulk_action_mode=0x7f110166;
    /**
     * String indicating the number of calls to/from a caller in the call log.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     */
    public static final int description_num_calls=0x7f110167;
    /**
     * String describing an outgoing call entry in the call log.
     * Note: AccessibilityServices uses this attribute to announce what the view represents.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_outgoing_call=0x7f110168;
    /**
     * String describing the phone account the call was made on or to. This string will be used
     * in description_incoming_missed_call, description_incoming_answered_call, and
     * description_outgoing_call.
     * Note: AccessibilityServices uses this attribute to announce what the view represents.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_phone_account=0x7f110169;
    /**
     * String describing the seekbar in the voicemail playback to seek playback position.
     * Used by AccessibilityService to announce the purpose of the view.
     */
    public static final int description_playback_seek=0x7f11016a;
    /**
     * String describing the button in the voicemail playback to switch on/off speakerphone.
     * Used by AccessibilityService to announce the purpose of the view.
     */
    public static final int description_playback_speakerphone=0x7f11016b;
    /**
     * String describing the text for photo of a contact in a contacts list.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     */
    public static final int description_quick_contact_for=0x7f11016c;
    /**
     * Describes the thumbs down, 'bad' transcription button. Read by TalkBack.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_rating_bad=0x7f11016d;
    /**
     * Describes the thumbs up, 'good' transcription button. Read by TalkBack.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_rating_good=0x7f11016e;
    /**
     * String describing a "read" voicemail entry in the voicemails tab.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_read_voicemail=0x7f11016f;
    /**
     * A11y announcement to let users know a button will let them search for contacts and places [CHAR LIMIT=NONE]
     */
    public static final int description_search=0x7f110170;
    /**
     * Description string for an action button to initiate an enriched call from search results.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_search_call_and_share=0x7f110171;
    /**
     * Description string for an action button to initiate a video call from search results.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_search_video_call=0x7f110172;
    /**
     * String describing the button to select an entry for bulk action.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     */
    public static final int description_selecting_bulk_action_mode=0x7f110173;
    /**
     * String describing the button to access the contact details for a name or number when the
     * when the number is a suspected spam.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     */
    public static final int description_spam_contact_details=0x7f110174;
    /**
     * String describing the icon used to start a voice search
     */
    public static final int description_start_voice_search=0x7f110175;
    /**
     * String describing an "unread" voicemail entry in the voicemails tab.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_unread_voicemail=0x7f110176;
    /**
     * String describing the button to unselect an entry for bulk action.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     */
    public static final int description_unselecting_bulk_action_mode=0x7f110177;
    /**
     * String describing the secondary line number the call was received via.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_via_number=0x7f110178;
    /**
     * String describing the PhoneAccount and via number that a call was received on, if both are
     * visible.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_via_number_phone_account=0x7f110179;
    /**
     * String indicating a call log entry had video capabilities.
     * Note: AccessibilityServices use this attribute to announce what the view represents.
     * This is especially valuable for views without textual representation like ImageView.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_video_call=0x7f11017a;
    /**
     * String describing the "video call" action for an entry in the call log.  The video call
     * action triggers a return video call to the named person/number.
     * Note: AccessibilityServices uses this attribute to announce the purpose of the button.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_video_call_action=0x7f11017b;
    /**
     * String describing a contact picture that introduces users to the contact detail screen.
     * Used by AccessibilityService to announce the purpose of the button.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_view_contact_detail=0x7f11017c;
    /**
     * String describing the "listen" action for an entry in the call log.  The listen
     * action is shown for call log entries representing a voicemail message and this button
     * triggers playing back the voicemail.
     * Note: AccessibilityServices uses this attribute to announce the purpose of the button.
     * [CHAR LIMIT=NONE]
     */
    public static final int description_voicemail_action=0x7f11017d;
    /**
     * String describing the Voicemail ImageButton.
     * Used by AccessibilityService to announce the purpose of the button.
     */
    public static final int description_voicemail_button=0x7f11017e;
    /**
     * Main text shown to the user in the dialog
     */
    public static final int details=0x7f11017f;
    /**
     * Item label: use the Dialer's keypad to add another call.
     * (Part of a list of options shown in the dialer when another call
     * is already in progress.)
     */
    public static final int dialer_addAnotherCall=0x7f110180;
    /**
     * Hint displayed in dialer search box when there is no query that is currently typed.
     * [CHAR LIMIT=30]
     */
    public static final int dialer_hint_find_contact=0x7f110181;
    /**
     * Item label: jump to the in-call UI.
     * (Part of a list of options shown in the dialer when another call
     * is already in progress.)
     */
    public static final int dialer_returnToInCallScreen=0x7f110182;
    /**
     * Label for the dialer app setting page [CHAR LIMIT=30]
     */
    public static final int dialer_settings_label=0x7f110183;
    /**
     * Text to display in launcher shortcut for adding a new contact. Long version. [CHAR LIMIT=25]
     */
    public static final int dialer_shortcut_add_contact_long=0x7f110184;
    /**
     * Text to display in launcher shortcut for adding a new contact. Short version. [CHAR LIMIT=10]
     */
    public static final int dialer_shortcut_add_contact_short=0x7f110185;
    /**
     * Error message to display when a tapping a shortcut fails because the specified contact can't
     * be found or doesn't have any phone numbers. [CHAR LIMIT=70]
     */
    public static final int dialer_shortcut_contact_not_found_or_has_no_number=0x7f110186;
    /**
     * Message to display when the user taps a pinned launcher shortcut (on a
     * homescreen) which has been disabled. A shortcut may be disabled if the
     * contact has been deleted or if it is invalid for some other reason. [CHAR LIMIT=70]
     */
    public static final int dialer_shortcut_disabled_message=0x7f110187;
    /**
     * Error message to display when a tapping a shortcut fails because permissions are missing.
     * [CHAR LIMIT=70]
     */
    public static final int dialer_shortcut_no_permissions=0x7f110188;
    public static final int dialer_terms_and_conditions_1_0=0x7f110189;
    public static final int dialer_terms_and_conditions_accept_english=0x7f11018a;
    public static final int dialer_terms_and_conditions_accept_spanish=0x7f11018b;
    public static final int dialer_terms_and_conditions_decline_dialog_downgrade=0x7f11018c;
    public static final int dialer_terms_and_conditions_decline_dialog_message=0x7f11018d;
    public static final int dialer_terms_and_conditions_decline_english=0x7f11018e;
    public static final int dialer_terms_and_conditions_decline_spanish=0x7f11018f;
    public static final int dialer_terms_and_conditions_existing_user=0x7f110190;
    public static final int dialer_terms_and_conditions_existing_user_ack=0x7f110191;
    public static final int dialer_terms_and_conditions_existing_user_decline=0x7f110192;
    public static final int dialer_terms_and_conditions_existing_user_title=0x7f110193;
    public static final int dialer_terms_and_conditions_for_verizon_1_0=0x7f110194;
    public static final int dialer_terms_and_conditions_learn_more=0x7f110195;
    public static final int dialer_terms_and_conditions_learn_more_url=0x7f110196;
    public static final int dialer_terms_and_conditions_message=0x7f110197;
    public static final int dialer_terms_and_conditions_title=0x7f110198;
    /**
     * Item label: jump to the in-call DTMF dialpad.
     * (Part of a list of options shown in the dialer when another call
     * is already in progress.)
     */
    public static final int dialer_useDtmfDialpad=0x7f110199;
    /**
     * Text for button which indicates that the user wants to proceed with an action.
     */
    public static final int dialog_continue=0x7f11019a;
    /**
     * Dialog message which is shown when the user tries to make a phone call
     * to prohibited phone numbers [CHAR LIMIT=NONE]
     */
    public static final int dialog_phone_call_prohibited_message=0x7f11019b;
    /**
     * Dialog message which is shown when the user tries to check voicemail
     * while the system is in airplane mode. The user cannot access to
     * voicemail service in Airplane mode. [CHAR LIMI=NONE]
     */
    public static final int dialog_voicemail_airplane_mode_message=0x7f11019c;
    /**
     * Dialog message which is shown when the user tries to check voicemail
     * while the system isn't ready for the access. [CHAR LIMIT=NONE]
     */
    public static final int dialog_voicemail_not_ready_message=0x7f11019d;
    /**
     * Title for the activity that dials the phone, when launched directly into the dialpad
     */
    public static final int dialpad_activity_title=0x7f11019e;
    /**
     * Content description for the button that displays the dialpad
     * [CHAR LIMIT=NONE]
     */
    public static final int dialpad_button_content_description=0x7f11019f;
    /**
     * Warning hint shown in the dialpad input field when emergency call (911, etc.) cannot be made over wifi.
     * [CHAR_LIMIT=60]
     */
    public static final int dialpad_hint_emergency_calling_not_available=0x7f1101a0;
    public static final int dialpad_pound_number=0x7f1101a1;
    public static final int dialpad_star_number=0x7f1101a2;
    /**
     * Label for a list of contacts stored in a seperate directory [CHAR LIMIT=30]
     */
    public static final int directory=0x7f1101a3;
    /**
     * The label in section header in the contact list for a contact directory [CHAR LIMIT=128]
     */
    public static final int directory_search_label=0x7f1101a4;
    /**
     * The label in section header in the contact list for a work contact directory [CHAR LIMIT=128]
     */
    public static final int directory_search_label_work=0x7f1101a5;
    /**
     * Text for a button that places a video call [CHAR LIMIT=15]
     */
    public static final int disambig_option_video_call=0x7f1101a6;
    /**
     * Text for a button that places a phone/voice call [CHAR LIMIT=15]
     */
    public static final int disambig_option_voice_call=0x7f1101a7;
    /**
     * An allowable value for the "sort list by" contact display option
     */
    public static final int display_options_sort_by_family_name=0x7f1101a8;
    public static final int display_options_sort_by_family_name_value=0x7f1101a9;
    /**
     * An allowable value for the "sort list by" contact display option
     */
    public static final int display_options_sort_by_given_name=0x7f1101aa;
    public static final int display_options_sort_by_given_name_value=0x7f1101ab;
    /**
     * Label of the "sort by" display option
     */
    public static final int display_options_sort_list_by=0x7f1101ac;
    public static final int display_options_sort_list_by_key=0x7f1101ad;
    /**
     * Title for "Display options" category, which controls how contacts are shown.
     * [CHAR LIMIT=40]
     */
    public static final int display_options_title=0x7f1101ae;
    /**
     * An allowable value for the "view names as" contact display option
     */
    public static final int display_options_view_family_name_first=0x7f1101af;
    public static final int display_options_view_family_name_first_value=0x7f1101b0;
    /**
     * An allowable value for the "view names as" contact display option
     */
    public static final int display_options_view_given_name_first=0x7f1101b1;
    public static final int display_options_view_given_name_first_value=0x7f1101b2;
    /**
     * Label of the "name format" display option [CHAR LIMIT=64]
     */
    public static final int display_options_view_names_as=0x7f1101b3;
    public static final int display_options_view_names_as_key=0x7f1101b4;
    /**
     * Option to hide the popup dialog if it is not necessary for the user. [CHAR LIMIT=40]
     */
    public static final int do_not_show_again=0x7f1101b5;
    public static final int donation_learn_more_url=0x7f1101b6;
    /**
     * Setting option name to enable or disable DTMF tone sound [CHAR LIMIT=30]
     */
    public static final int dtmf_tone_enable_title=0x7f1101b7;
    /**
     * Internal key for DTMF tone length preference.
     */
    public static final int dtmf_tone_length_preference_key=0x7f1101b8;
    /**
     * Label for setting to adjust the length of DTMF tone sounds. [CHAR LIMIT=40]
     */
    public static final int dtmf_tone_length_title=0x7f1101b9;
    /**
     * Details on the Duo disclosure card. [CHAR_LIMIT=200]
     */
    public static final int duo_disclosure_details=0x7f1101ba;
    /**
     * Header on the Duo disclosure card. [CHAR_LIMIT=60]
     */
    public static final int duo_disclosure_title=0x7f1101bb;
    /**
     * If a user deletes a call that has attachments (photo, message, ect) bundled with it, they need
     * to be told that they need to go to the SMS app to delete the attachments. [CHAR LIMIT=NONE]
     */
    public static final int ec_data_deleted=0x7f1101bc;
    /**
     * Generic action string for sending an email
     */
    public static final int email=0x7f1101bd;
    /**
     * Header that expands to list all of the types of email addresses when editing or creating
     * an email address for a contact [CHAR LIMIT=20]
     */
    public static final int emailLabelsGroup=0x7f1101be;
    /**
     * Action string for sending an email to a custom email address
     */
    public static final int email_custom=0x7f1101bf;
    /**
     * Action string for sending an email to a home email address
     */
    public static final int email_home=0x7f1101c0;
    /**
     * Action string for sending an email to a mobile email address
     */
    public static final int email_mobile=0x7f1101c1;
    /**
     * Action string for sending an email to an other email address
     */
    public static final int email_other=0x7f1101c2;
    /**
     * Action string for sending an email to a work email address
     */
    public static final int email_work=0x7f1101c3;
    /**
     * String used to display calls from emergency numbers in the call log and incallui
     */
    public static final int emergency_number=0x7f1101c4;
    /**
     * Text displayed when the list of voicemails is empty [CHAR LIMIT=NONE]
     */
    public static final int empty_voicemail_tab_text=0x7f1101c5;
    public static final int enable_forward_lookup_summary=0x7f1101c6;
    public static final int enable_forward_lookup_title=0x7f1101c7;
    public static final int enable_people_lookup_summary=0x7f1101c8;
    public static final int enable_people_lookup_title=0x7f1101c9;
    public static final int enable_reverse_lookup_summary=0x7f1101ca;
    public static final int enable_reverse_lookup_title=0x7f1101cb;
    public static final int enriched_call_simulator_activity=0x7f1101cc;
    /**
     * Header that expands to list all event types when editing an event of a contact
     * [CHAR LIMIT=20]
     */
    public static final int eventLabelsGroup=0x7f1101cd;
    public static final int event_activated=0x7f1101ce;
    /**
     * Toast to display when the incoming call easter egg is disabled. The easter egg shows a cat or\
     * dog paw animation swiping on the screen
     */
    public static final int event_deactivated=0x7f1101cf;
    public static final int fab_transformation_scrim_behavior=0x7f1101d0;
    public static final int fab_transformation_sheet_behavior=0x7f1101d1;
    /**
     * header for a list of contacts that are the users favorites. [CHAR LIMIT=30]
     */
    public static final int favorites_header=0x7f1101d2;
    public static final int forward_lookup_provider_title=0x7f1101d3;
    /**
     * Field title for the full name of a contact [CHAR LIMIT=64]
     */
    public static final int full_name=0x7f1101d4;
    /**
     * Accessibility description for each image in the gallery. For example, "image January 17 2015 1 59 pm".
     */
    public static final int gallery_item_description=0x7f1101d5;
    /**
     * Accessibility description for each image in the gallery when no date is present.
     */
    public static final int gallery_item_description_no_date=0x7f1101d6;
    /**
     * Text presented to the user explaining that we need device storage permission to view photos
     */
    public static final int gallery_permission_text=0x7f1101d7;
    /**
     * The Learn more text used for all features to link to additional details.
     * [CHAR_LIMIT=30]
     */
    public static final int general_learn_more=0x7f1101d8;
    /**
     * Name for a generic conference call. Shown in the in call UI. This is used in CDMA where we
     * don't know the precise state of participants in the conference.
     */
    public static final int generic_conference_call_name=0x7f1101d9;
    /**
     * Hint text for the organization name when editing
     */
    public static final int ghostData_company=0x7f1101da;
    /**
     * Hint text for the organization title when editing
     */
    public static final int ghostData_title=0x7f1101db;
    /**
     * Use this to describe the separate conference call button; currently for screen readers through accessibility.
     */
    public static final int goPrivate=0x7f1101dc;
    /**
     * Header for the list of all groups for a contact [CHAR LIMIT=20]
     */
    public static final int groupsLabel=0x7f1101dd;
    /**
     * Hardcoded number used for restricted incoming phone numbers.
     */
    public static final int handle_restricted=0x7f1101de;
    public static final int helpline_button_more=0x7f1101df;
    public static final int helpline_categories=0x7f1101e0;
    public static final int helpline_category_abuse=0x7f1101e1;
    public static final int helpline_category_acohol=0x7f1101e2;
    public static final int helpline_category_addiction=0x7f1101e3;
    public static final int helpline_category_adolescents=0x7f1101e4;
    public static final int helpline_category_adults=0x7f1101e5;
    public static final int helpline_category_aids=0x7f1101e6;
    public static final int helpline_category_birth=0x7f1101e7;
    public static final int helpline_category_bullying=0x7f1101e8;
    public static final int helpline_category_children=0x7f1101e9;
    public static final int helpline_category_corruption=0x7f1101ea;
    public static final int helpline_category_crime=0x7f1101eb;
    public static final int helpline_category_crime_victims=0x7f1101ec;
    public static final int helpline_category_discrimination=0x7f1101ed;
    public static final int helpline_category_domestic_violence=0x7f1101ee;
    public static final int helpline_category_drugs=0x7f1101ef;
    public static final int helpline_category_emotional_support=0x7f1101f0;
    public static final int helpline_category_family=0x7f1101f1;
    public static final int helpline_category_gambling=0x7f1101f2;
    public static final int helpline_category_gender=0x7f1101f3;
    public static final int helpline_category_generic=0x7f1101f4;
    public static final int helpline_category_hiv=0x7f1101f5;
    public static final int helpline_category_human_rights=0x7f1101f6;
    public static final int helpline_category_human_trafficking=0x7f1101f7;
    public static final int helpline_category_immigration=0x7f1101f8;
    public static final int helpline_category_legal_aid=0x7f1101f9;
    public static final int helpline_category_lgbtq=0x7f1101fa;
    public static final int helpline_category_men=0x7f1101fb;
    public static final int helpline_category_mental_health=0x7f1101fc;
    public static final int helpline_category_missing_children=0x7f1101fd;
    public static final int helpline_category_mothers=0x7f1101fe;
    public static final int helpline_category_muslim=0x7f1101ff;
    public static final int helpline_category_parents=0x7f110200;
    public static final int helpline_category_pregnancy=0x7f110201;
    public static final int helpline_category_psychological=0x7f110202;
    public static final int helpline_category_religion=0x7f110203;
    public static final int helpline_category_senior=0x7f110204;
    public static final int helpline_category_sexual_abuse=0x7f110205;
    public static final int helpline_category_sexual_assault=0x7f110206;
    public static final int helpline_category_sexual_rights=0x7f110207;
    public static final int helpline_category_sexuality=0x7f110208;
    public static final int helpline_category_soldiers=0x7f110209;
    public static final int helpline_category_suicide=0x7f11020a;
    public static final int helpline_category_trans=0x7f11020b;
    public static final int helpline_category_veterans=0x7f11020c;
    public static final int helpline_category_violence=0x7f11020d;
    public static final int helpline_category_war=0x7f11020e;
    public static final int helpline_category_women=0x7f11020f;
    public static final int helpline_category_youth=0x7f110210;
    public static final int helpline_language_cree=0x7f110211;
    public static final int helpline_language_english=0x7f110212;
    public static final int helpline_language_french=0x7f110213;
    public static final int helpline_language_german=0x7f110214;
    public static final int helpline_language_inuktitut=0x7f110215;
    public static final int helpline_language_ojibway=0x7f110216;
    public static final int helpline_language_turkish=0x7f110217;
    public static final int helpline_name=0x7f110218;
    /**
     * Format for displaying a helpline name with the country - Example will resolve to "Emotional Support Hotline (US)"
     */
    public static final int helpline_name_format_country=0x7f110219;
    public static final int helpline_number=0x7f11021a;
    public static final int helpline_org=0x7f11021b;
    public static final int helpline_website=0x7f11021c;
    public static final int helplines_contact_url=0x7f11021d;
    public static final int helplines_empty=0x7f11021e;
    public static final int helplines_help=0x7f11021f;
    public static final int helplines_help_message=0x7f110220;
    public static final int helplines_help_more_message=0x7f110221;
    public static final int helplines_help_title=0x7f110222;
    public static final int helplines_loading=0x7f110223;
    public static final int helplines_name=0x7f110224;
    /**
     * The label for the hex encoding of the device ID
     */
    public static final int hex=0x7f110225;
    public static final int hide_bottom_view_on_scroll_behavior=0x7f110226;
    /**
     * Header that expands to list all of the types of IM account when editing or creating an IM
     * account for a contact [CHAR LIMIT=20]
     */
    public static final int imLabelsGroup=0x7f110227;
    /**
     * When a user makes a call with a photo attached, we send the photo through the app "Messages".
     * This string is shown in a toast for privacy reasons.
     */
    public static final int image_sent_messages=0x7f110228;
    /**
     * The title of a dialog that displays the IMEI of the phone
     */
    public static final int imei=0x7f110229;
    /**
     * Label for fragment to import numbers from contacts marked as send to voicemail.
     * [CHAR_LIMIT=30]
     */
    public static final int import_send_to_voicemail_numbers_label=0x7f11022a;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50]
     */
    public static final int important_notification_incoming_call=0x7f11022b;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming".
     */
    public static final int important_notification_incoming_call_attachments=0x7f11022c;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming".
     */
    public static final int important_notification_incoming_call_with_location=0x7f11022d;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming".
     */
    public static final int important_notification_incoming_call_with_message=0x7f11022e;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming". If still can't meet, replace with "Incoming call with attachments."
     */
    public static final int important_notification_incoming_call_with_message_location=0x7f11022f;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming".
     */
    public static final int important_notification_incoming_call_with_photo=0x7f110230;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming". If still can't meet, replace with "Incoming call with attachments."
     */
    public static final int important_notification_incoming_call_with_photo_location=0x7f110231;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming". If still can't meet, replace with "Incoming call with attachments."
     */
    public static final int important_notification_incoming_call_with_photo_message=0x7f110232;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming". If still can't meet, replace with "Incoming call with attachments."
     */
    public static final int important_notification_incoming_call_with_photo_message_location=0x7f110233;
    /**
     * In-call screen: status label displayed briefly after a call ends [CHAR LIMIT=25]
     */
    public static final int incall_call_ended=0x7f110234;
    /**
     * Title displayed in the overlay for outgoing calls when the provider is automatically chosen
     * because the user has selected it multiple times.  [CHAR LIMIT=60]
     */
    public static final int incall_calling_on_recent_choice_template=0x7f110235;
    /**
     * Title displayed in the overlay for outgoing calls when the provider is automatically chosen
     * because it is the same provider the callee is using. [CHAR LIMIT=60]
     */
    public static final int incall_calling_on_same_carrier_template=0x7f110236;
    /**
     * Title displayed in the overlay for outgoing calls which include the name of the provider.
     * [CHAR LIMIT=40]
     */
    public static final int incall_calling_via_template=0x7f110237;
    public static final int incall_category_key=0x7f110238;
    public static final int incall_category_title=0x7f110239;
    /**
     * Displayed above the contact name during an outgoing phone call. Indicates that the call is
     * in the connecting stage.
     */
    public static final int incall_connecting=0x7f11023a;
    /**
     * Display information related to assisted dialing, for example Calling using +1 (US)…
     */
    public static final int incall_connecting_assited_dialed=0x7f11023b;
    /**
     * String appended to the outgoing call title for additional information related to assisted dialing, for example "Calling via <CARRIER> • Using +1 (US)… "
     */
    public static final int incall_connecting_assited_dialed_component=0x7f11023c;
    public static final int incall_content_description_bluetooth=0x7f11023d;
    public static final int incall_content_description_earpiece=0x7f11023e;
    public static final int incall_content_description_end_call=0x7f11023f;
    public static final int incall_content_description_headset=0x7f110240;
    /**
     * Text for the onscreen "Hold" button when it is not selected. Pressing it will put
     * the call on hold.
     */
    public static final int incall_content_description_hold=0x7f110241;
    public static final int incall_content_description_merge_calls=0x7f110242;
    public static final int incall_content_description_muted=0x7f110243;
    public static final int incall_content_description_speaker=0x7f110244;
    public static final int incall_content_description_swap_calls=0x7f110245;
    public static final int incall_content_description_swap_sim=0x7f110246;
    public static final int incall_content_description_swap_video=0x7f110247;
    /**
     * Text for the onscreen "Hold" button when it is selected. Pressing it will resume
     * the call from a previously held state.
     */
    public static final int incall_content_description_unhold=0x7f110248;
    public static final int incall_content_description_unmuted=0x7f110249;
    public static final int incall_content_description_video_off=0x7f11024a;
    public static final int incall_content_description_video_on=0x7f11024b;
    public static final int incall_dnd_dialog_message=0x7f11024c;
    public static final int incall_enable_dnd_title=0x7f11024d;
    /**
     * Button to enable Wi-Fi calling. This is displayed in a dialog after a phone call disconnects
     * because there is no cellular service.
     * [CHAR LIMIT=20]
     */
    public static final int incall_enable_wifi_calling_button=0x7f11024e;
    /**
     * In-call screen: message displayed in an error dialog
     */
    public static final int incall_error_supp_service_unknown=0x7f11024f;
    /**
     * In-call screen: status label for a call that's in the process of hanging up
     * [CHAR LIMIT=25]
     */
    public static final int incall_hanging_up=0x7f110250;
    /**
     * Button shown during a phone call to add a new phone call.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_add_call=0x7f110251;
    /**
     * Button shown during a phone to switch the audio route.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_audio=0x7f110252;
    /**
     * Button shown during a phone call to show the dialpad.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_dialpad=0x7f110253;
    /**
     * Button shown during a phone call to end the call.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_end_call=0x7f110254;
    /**
     * Button shown during a phone call to put the call on hold.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_hold=0x7f110255;
    /**
     * Button shown during a phone to show the manage conference call screen.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_manage=0x7f110256;
    /**
     * Button shown during a phone to merge two ongoing calls.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_merge=0x7f110257;
    /**
     * Button shown during a phone call to mute the microphone.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_mute=0x7f110258;
    /**
     * Button shown during a phone call to upgrade to Real-time Text.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_rttcall=0x7f110259;
    /**
     * Button shown during a phone to route audio from earpiece to speaker phone.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_speaker=0x7f11025a;
    /**
     * Button shown during a phone to swap from the foreground call to the background call.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_swap=0x7f11025b;
    /**
     * Button shown during a call with a multi-SIM device to hang up and call with the other SIM
     * instead. [CHAR LIMIT=12]
     */
    public static final int incall_label_swap_sim=0x7f11025c;
    /**
     * Button shown during a phone call to upgrade to video.
     * [CHAR LIMIT=12]
     */
    public static final int incall_label_videocall=0x7f11025d;
    /**
     * Used to inform the user that the note associated with an outgoing call has been sent.
     * [CHAR LIMIT=32]
     */
    public static final int incall_note_sent=0x7f11025e;
    public static final int incall_on_hold=0x7f11025f;
    /**
     * In-call screen: label shown at the top of the screen when a call is on hold by the remote
     * party [CHAR LIMIT=25]
     */
    public static final int incall_remotely_held=0x7f110260;
    /**
     * Talkback text for speaker button status. [CHAR LIMIT=12]
     */
    public static final int incall_talkback_speaker_off=0x7f110261;
    /**
     * Talkback text for speaker button status. [CHAR LIMIT=12]
     */
    public static final int incall_talkback_speaker_on=0x7f110262;
    /**
     * Displayed above the contact name when an external call is being pulled to the local
     * device.
     */
    public static final int incall_transferring=0x7f110263;
    public static final int incall_vibrate_45_key=0x7f110264;
    public static final int incall_vibrate_45_summary=0x7f110265;
    public static final int incall_vibrate_45_title=0x7f110266;
    public static final int incall_vibrate_call_waiting_key=0x7f110267;
    public static final int incall_vibrate_call_waiting_title=0x7f110268;
    public static final int incall_vibrate_hangup_key=0x7f110269;
    public static final int incall_vibrate_hangup_title=0x7f11026a;
    public static final int incall_vibrate_outgoing_key=0x7f11026b;
    public static final int incall_vibrate_outgoing_title=0x7f11026c;
    /**
     * Displayed above the contact name when the user's operation for video calling is failed due to an unknown reason.
     */
    public static final int incall_video_call_operation_failed=0x7f11026d;
    /**
     * Displayed above the contact name when the user's video upgrade failed due to an unknown
     * reason.
     */
    public static final int incall_video_call_request_failed=0x7f11026e;
    /**
     * Displayed above the contact name when the user's video upgrade was declined by the remote
     * party.
     */
    public static final int incall_video_call_request_rejected=0x7f11026f;
    /**
     * Displayed above the contact name when no response was received for the user's upgrade
     * requests and we timed out.
     */
    public static final int incall_video_call_request_timed_out=0x7f110270;
    /**
     * Displayed above the contact name when the user starts a video call.
     */
    public static final int incall_video_call_requesting=0x7f110271;
    /**
     * Displayed above the contact name when the user requests an upgrade from a voice call to a
     * video call.
     */
    public static final int incall_video_call_upgrade_request=0x7f110272;
    /**
     * Displayed above the contact name when the user requests an upgrade from a voice call to a
     * Wi-Fi video call.
     */
    public static final int incall_wifi_video_call_requesting=0x7f110273;
    /**
     * Error message shown when user tries to add invalid number to the block list.
     * [CHAR LIMIT=64]
     */
    public static final int invalidNumber=0x7f110274;
    /**
     * String to be displayed to indicate in the call log that a call just now occurred.
     */
    public static final int just_now=0x7f110275;
    /**
     * The label describing the Notes field of a contact. This field allows free form text entry
     * about a contact
     */
    public static final int label_notes=0x7f110276;
    /**
     * The label describing the SIP address field of a contact. [CHAR LIMIT=20]
     */
    public static final int label_sip_address=0x7f110277;
    public static final int lat_long_format=0x7f110278;
    /**
     * Title for the activity that dials the phone.  This is the name
     * used in the Launcher icon.
     */
    public static final int launcherActivityLabel=0x7f110279;
    /**
     * Title for the activity that dials the phone, when launched directly into the dialpad
     */
    public static final int launcherDialpadActivityLabel=0x7f11027a;
    /**
     * Title for the activity that displays licenses for open source libraries used in the
     * application.
     */
    public static final int licenseActivityLabel=0x7f11027b;
    /**
     * Displayed at the top of the contacts showing the account filter selected  [CHAR LIMIT=64]
     */
    public static final int listAllContactsInAccount=0x7f11027c;
    /**
     * Displayed at the top of the contacts showing single contact. [CHAR LIMIT=64]
     */
    public static final int listCustomView=0x7f11027d;
    /**
     * Displayed at the top of the contacts showing single contact. [CHAR LIMIT=64]
     */
    public static final int listSingleContact=0x7f11027e;
    /**
     * Contact list filter label indicating that the list is showing all available accounts [CHAR LIMIT=64]
     */
    public static final int list_filter_all_accounts=0x7f11027f;
    /**
     * Contact list filter selection indicating that the list shows all contacts with phone numbers [CHAR LIMIT=64]
     */
    public static final int list_filter_phones=0x7f110280;
    /**
     * Contact list filter selection indicating that the list shows all work contacts with phone numbers [CHAR LIMIT=64]
     */
    public static final int list_filter_phones_work=0x7f110281;
    /**
     * The name of the invisible local contact directory
     */
    public static final int local_invisible_directory=0x7f110282;
    /**
     * The label in section header in the contact list for a local contacts [CHAR LIMIT=128]
     */
    public static final int local_search_label=0x7f110283;
    /**
     * The label in section header in the contact list for a local suggested contacts [CHAR LIMIT=128]
     */
    public static final int local_suggestions_search_label=0x7f110284;
    /**
     * Error message shown when we can't get device location. [CHAR LIMIT=NONE]
     */
    public static final int location_error=0x7f110285;
    /**
     * Progress indicator loading text. [CHAR LIMIT=20]
     */
    public static final int location_loading=0x7f110286;
    /**
     * Description for location map shown during emergency calls. [CHAR LIMIT=NONE]
     */
    public static final int location_map_description=0x7f110287;
    /**
     * Label for the address and map shown during emergency calls. [CHAR LIMIT=40]
     */
    public static final int location_title=0x7f110288;
    /**
     * Disclaimer
     */
    public static final int lookup_disclaimer=0x7f110289;
    /**
     * Number lookup
     */
    public static final int lookup_settings_label=0x7f11028a;
    /**
     * Name of the main activity.
     */
    public static final int main_activity_label=0x7f11028b;
    /**
     * Content description for the fake action menu button that brings up the call history
     * activity [CHAR LIMIT=20]
     */
    public static final int main_menu_call_history=0x7f11028c;
    /**
     * The menu item to clear frequents [CHAR LIMIT=30]
     */
    public static final int main_menu_clear_frequents=0x7f11028d;
    /**
     * Remove button that shows up when contact is long-pressed. [CHAR LIMIT=NONE]
     */
    public static final int main_remove_contact=0x7f11028e;
    /**
     * Message next to disambiguation dialog check box
     */
    public static final int make_primary=0x7f11028f;
    /**
     * Label for "Manage conference call" panel [CHAR LIMIT=40]
     */
    public static final int manageConferenceLabel=0x7f110290;
    /**
     * Label for the blocked numbers settings section [CHAR LIMIT=30]
     */
    public static final int manage_blocked_numbers_label=0x7f110291;
    /**
     * Action string for viewing a custom postal address
     */
    public static final int map_custom=0x7f110292;
    /**
     * Action string for viewing a home postal address
     */
    public static final int map_home=0x7f110293;
    /**
     * Action string for viewing an other postal address
     */
    public static final int map_other=0x7f110294;
    /**
     * Action string for viewing a work postal address
     */
    public static final int map_work=0x7f110295;
    /**
     * The title of a dialog that displays the MEID of the CDMA phone
     */
    public static final int meid=0x7f110296;
    /**
     * Menu item used to call a contact, containing the number of the contact to call
     */
    public static final int menu_callNumber=0x7f110297;
    /**
     * The menu item to clear frequents [CHAR LIMIT=30]
     */
    public static final int menu_clear_frequents=0x7f110298;
    /**
     * Hint in a text field to compose a custom message to send with a phone call [CHAR LIMIT=27]
     */
    public static final int message_composer_custom_message_hint=0x7f110299;
    /**
     * Messages shown to the user are wrapped in quotes, e.g. the user would see "Some text"
     */
    public static final int message_in_quotes=0x7f11029a;
    /**
     * When a user makes a call with text attached, we send the text through the app "Messages".
     * This string is shown in a toast for privacy reasons.
     */
    public static final int message_sent_messages=0x7f11029b;
    /**
     * Positive confirmation button for the dialog which opens when the user needs to migrate to the framework blocking implementation [CHAR LIMIT=NONE]
     */
    public static final int migrate_blocked_numbers_dialog_allow_button=0x7f11029c;
    public static final int migrate_blocked_numbers_dialog_cancel_button=0x7f11029d;
    /**
     * Body text for dialog which opens when the user needs to migrate to the framework blocking implementation [CHAR LIMIT=NONE]
     */
    public static final int migrate_blocked_numbers_dialog_message=0x7f11029e;
    /**
     * Title for dialog which opens when the user needs to migrate to the framework blocking implementation [CHAR LIMIT=30]
     */
    public static final int migrate_blocked_numbers_dialog_title=0x7f11029f;
    /**
     * Shown as the display name for a person when the name is missing or unknown. [CHAR LIMIT=18]
     */
    public static final int missing_name=0x7f1102a0;
    public static final int motorola_hidden_menu_intent=0x7f1102a1;
    public static final int mtrl_chip_close_icon_content_description=0x7f1102a2;
    /**
     * If a user deletes a call that has attachments (photo, message, ect) bundled with it, they need
     * to be told that they need to go to the SMS app to delete the attachments. [CHAR LIMIT=NONE]
     */
    public static final int multiple_ec_data_deleted=0x7f1102a3;
    /**
     * Header that expands to list all name types when editing a structured name of a contact
     * [CHAR LIMIT=20]
     */
    public static final int nameLabelsGroup=0x7f1102a4;
    /**
     * Field title for the family name of a contact
     */
    public static final int name_family=0x7f1102a5;
    /**
     * Field title for the given name of a contact
     */
    public static final int name_given=0x7f1102a6;
    /**
     * Field title for the middle name of a contact
     */
    public static final int name_middle=0x7f1102a7;
    /**
     * Field title for the phonetic name of a contact [CHAR LIMIT=64]
     */
    public static final int name_phonetic=0x7f1102a8;
    /**
     * Field title for the phonetic family name of a contact
     */
    public static final int name_phonetic_family=0x7f1102a9;
    /**
     * Field title for the phonetic given name of a contact
     */
    public static final int name_phonetic_given=0x7f1102aa;
    /**
     * Field title for the phonetic middle name of a contact
     */
    public static final int name_phonetic_middle=0x7f1102ab;
    /**
     * Field title for the prefix name of a contact
     */
    public static final int name_prefix=0x7f1102ac;
    /**
     * Field title for the suffix name of a contact
     */
    public static final int name_suffix=0x7f1102ad;
    /**
     * Label for a list of local search results [CHAR LIMIT=30]
     */
    public static final int nearby_places=0x7f1102ae;
    /**
     * Text on a button asking the user to grant the location permission
     */
    public static final int nearby_places_allow=0x7f1102af;
    /**
     * Text on a button which dismisses a prompt asking to grand the location permission
     */
    public static final int nearby_places_dismiss=0x7f1102b0;
    public static final int network_name_mobile=0x7f1102b1;
    public static final int network_name_wifi=0x7f1102b2;
    /**
     * Text to show in call log for a carrier video call. [CHAR LIMIT=31]
     */
    public static final int new_call_log_carrier_video=0x7f1102b3;
    /**
     * Text to show in call log for a duo video call. [CHAR LIMIT=30]
     */
    public static final int new_call_log_duo_video=0x7f1102b4;
    /**
     * Header in call log to group calls from before yesterday.  [CHAR LIMIT=30]
     */
    public static final int new_call_log_header_older=0x7f1102b5;
    /**
     * Header in call log to group calls from the current day.  [CHAR LIMIT=30]
     */
    public static final int new_call_log_header_today=0x7f1102b6;
    /**
     * Header in call log to group calls from the previous day.  [CHAR LIMIT=30]
     */
    public static final int new_call_log_header_yesterday=0x7f1102b7;
    /**
     * Shown as a prompt to turn on the phone permission to enable the call log [CHAR LIMIT=NONE]
     */
    public static final int new_call_log_permission_no_calllog=0x7f1102b8;
    /**
     * String used to display calls from blocked numbers in the call log.   [CHAR LIMIT=30]
     */
    public static final int new_call_log_secondary_blocked=0x7f1102b9;
    /**
     * String used to display calls from spam numbers in the call log.   [CHAR LIMIT=30]
     */
    public static final int new_call_log_secondary_spam=0x7f1102ba;
    /**
     * String used to display calls from unknown numbers in the call log.  [CHAR LIMIT=30]
     */
    public static final int new_call_log_unknown=0x7f1102bb;
    /**
     * Shown as a prompt to turn on contacts permissions to allow contact search [CHAR LIMIT=NONE]. See 2424710404207193826 for current translation.
     */
    public static final int new_permission_no_search=0x7f1102bc;
    /**
     * Label for the menu item that installs a shortcut for the new UI. [CHAR LIMIT=30]
     */
    public static final int new_ui_launcher_shortcut_label=0x7f1102bd;
    /**
     * Header in voicemail tab to group calls from before yesterday.  [CHAR LIMIT=30]
     */
    public static final int new_voicemail_header_older=0x7f1102be;
    /**
     * Header in voicemail tab to group calls from the current day.  [CHAR LIMIT=30]
     */
    public static final int new_voicemail_header_today=0x7f1102bf;
    /**
     * Header in voicemail tab to group calls from yesterday.  [CHAR LIMIT=30]
     */
    public static final int new_voicemail_header_yesterday=0x7f1102c0;
    /**
     * Header that expands to list all nickname types when editing a nickname of a contact
     * [CHAR LIMIT=20]
     */
    public static final int nicknameLabelsGroup=0x7f1102c1;
    /**
     * Title for the notification to the user after a call from an unknown number ends. [CHAR LIMIT=100]
     */
    public static final int non_spam_notification_title=0x7f1102c2;
    /**
     * Options shown in call log/voicemail menu to mark a number as non-spam. [CHAR LIMIT=30]
     */
    public static final int not_spam=0x7f1102c3;
    /**
     * Label for "Accept" notification action. This is somewhat generic, and may refer to
     * scenarios such as accepting an incoming call or accepting a video call request.
     * [CHAR LIMIT=12]
     */
    public static final int notification_action_accept=0x7f1102c4;
    /**
     * Label for the "Answer call" action. This is the displayed label for the action that answers
     * an incoming call. [CHAR LIMIT=12]
     */
    public static final int notification_action_answer=0x7f1102c5;
    /**
     * Label for "Video Call" notification action. This is a displayed on the notification for an
     * incoming video call, and answers the call as a video call. [CHAR LIMIT=12]
     */
    public static final int notification_action_answer_video=0x7f1102c6;
    /**
     * Label for "Dismiss" notification action. This is somewhat generic, and may refer to
     * scenarios such as declining an incoming call or declining a video call request.
     * [CHAR LIMIT=12]
     */
    public static final int notification_action_dismiss=0x7f1102c7;
    /**
     * Label for "end call" Action.
     * It is displayed in the "Ongoing call" notification, which is shown
     * when the user is outside the in-call screen while the phone call is still
     * active. [CHAR LIMIT=12]
     */
    public static final int notification_action_end_call=0x7f1102c8;
    public static final int notification_action_speaker_off=0x7f1102c9;
    public static final int notification_action_speaker_on=0x7f1102ca;
    /**
     * "Brand name" for WiFi calls. Will be overridden for specific mcc-mnc combinations [CHAR LIMIT=40]
     * "Brand name" for WiFi calls. Will be overridden for specific mcc-mnc combinations [CHAR LIMIT=40]
     * "Brand name" for WiFi calls. Will be overridden for specific mcc-mnc combinations [CHAR LIMIT=40]
     */
    public static final int notification_call_wifi_brand=0x7f1102cb;
    /**
     * "Brand name" for WiFi work calls. Will be overridden for specific mcc-mnc combinations [CHAR LIMIT=40]
     * "Brand name" for WiFi work calls. Will be overridden for specific mcc-mnc combinations [CHAR LIMIT=40]
     * "Brand name" for WiFi work calls. Will be overridden for specific mcc-mnc combinations [CHAR LIMIT=40]
     */
    public static final int notification_call_wifi_work_brand=0x7f1102cc;
    public static final int notification_channel_incoming_call=0x7f1102cd;
    /**
     * [CHAR LIMIT=NONE] Catch-all channel for notifications that don't fit into one of the others
     */
    public static final int notification_channel_misc=0x7f1102ce;
    public static final int notification_channel_missed_call=0x7f1102cf;
    public static final int notification_channel_ongoing_call=0x7f1102d0;
    public static final int notification_channel_voicemail=0x7f1102d1;
    /**
     * The "label" of the in-call Notification for a dialing call, used
     * as the format string for a Chronometer widget. [CHAR LIMIT=60]
     */
    public static final int notification_dialing=0x7f1102d2;
    /**
     * The "label" of the in-call Notification for an ongoing external call.
     * External calls are a representation of a call which is in progress on the user's other
     * device (e.g. another phone or a watch).
     * [CHAR LIMIT=60]
     */
    public static final int notification_external_call=0x7f1102d3;
    /**
     * The "label" of the in-call Notification for an ongoing external video call.
     * External calls are a representation of a call which is in progress on the user's other
     * device (e.g. another phone or a watch).
     * [CHAR LIMIT=60]
     */
    public static final int notification_external_video_call=0x7f1102d4;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=60]
     */
    public static final int notification_incoming_call=0x7f1102d5;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50]
     */
    public static final int notification_incoming_call_attachments=0x7f1102d6;
    /**
     * The "label" of the in-call Notification for an incoming ringing call on a device with multiple SIMs. [CHAR LIMIT=60]
     */
    public static final int notification_incoming_call_mutli_sim=0x7f1102d7;
    /**
     * Template for the label of the in-call Notification for an incoming call, which is being made
     * over Wi-Fi. The format argument is @string/notification_call_wifi_brand [CHAR LIMIT=20]
     */
    public static final int notification_incoming_call_wifi_template=0x7f1102d8;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50]
     */
    public static final int notification_incoming_call_with_location=0x7f1102d9;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50]
     */
    public static final int notification_incoming_call_with_message=0x7f1102da;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming". If still can't meet, replace with "Incoming call with attachments."
     */
    public static final int notification_incoming_call_with_message_location=0x7f1102db;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50]
     */
    public static final int notification_incoming_call_with_photo=0x7f1102dc;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming". If still can't meet, replace with "Incoming call with attachments."
     */
    public static final int notification_incoming_call_with_photo_location=0x7f1102dd;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming". If still can't meet, replace with "Incoming call with attachments."
     */
    public static final int notification_incoming_call_with_photo_message=0x7f1102de;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=50] If can't meet limit, remove "Incoming". If still can't meet, replace with "Incoming call with attachments."
     */
    public static final int notification_incoming_call_with_photo_message_location=0x7f1102df;
    /**
     * The "label" of the in-call Notification for an incoming ringing spam call.
     */
    public static final int notification_incoming_spam_call=0x7f1102e0;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=60]
     */
    public static final int notification_incoming_video_call=0x7f1102e1;
    /**
     * The "label" of the in-call Notification for an incoming ringing call. [CHAR LIMIT=60]
     */
    public static final int notification_incoming_work_call=0x7f1102e2;
    /**
     * Missed call notification label, used when there's exactly one missed call
     */
    public static final int notification_missedCallTitle=0x7f1102e3;
    /**
     * Message for "call back" Action, which is displayed in the missed call notificaiton.
     * The user will be able to call back to the person or the phone number.
     * [CHAR LIMIT=18]
     */
    public static final int notification_missedCall_call_back=0x7f1102e4;
    /**
     * Message for "reply via sms" action, which is displayed in the missed call notification.
     * The user will be able to send text messages using the phone number.
     * [CHAR LIMIT=18]
     */
    public static final int notification_missedCall_message=0x7f1102e5;
    /**
     * Missed call notification message used when there are multiple missed calls
     */
    public static final int notification_missedCallsMsg=0x7f1102e6;
    /**
     * Missed call notification label, used when there are two or more missed calls
     */
    public static final int notification_missedCallsTitle=0x7f1102e7;
    /**
     * Missed call notification label, used when there's exactly one missed call from work contact
     */
    public static final int notification_missedWorkCallTitle=0x7f1102e8;
    /**
     * Text used in the ticker to notify the user of the latest voicemail. [CHAR LIMIT=30]
     */
    public static final int notification_new_voicemail_ticker=0x7f1102e9;
    /**
     * The "label" of the in-call Notification for a call that's on hold
     */
    public static final int notification_on_hold=0x7f1102ea;
    /**
     * The "label" of the in-call Notification for an ongoing call. [CHAR LIMIT=60]
     */
    public static final int notification_ongoing_call=0x7f1102eb;
    /**
     * Template for the label on the in-call Notification for an ongoing call, which is being made
     * over Wi-Fi. The format argument is @string/notification_call_wifi_brand [CHAR LIMIT=20]
     */
    public static final int notification_ongoing_call_wifi_template=0x7f1102ec;
    /**
     * The "label" of the in-call Notification for an ongoing paused video call. [CHAR LIMIT=60]
     */
    public static final int notification_ongoing_paused_video_call=0x7f1102ed;
    /**
     * The "label" of the in-call Notification for an ongoing video call. [CHAR LIMIT=60]
     */
    public static final int notification_ongoing_video_call=0x7f1102ee;
    /**
     * The "label" of the in-call Notification for an ongoing work call. [CHAR LIMIT=60]
     */
    public static final int notification_ongoing_work_call=0x7f1102ef;
    /**
     * The "label" of the in-call Notification for upgrading an existing call to a video call.
     */
    public static final int notification_requesting_video_call=0x7f1102f0;
    /**
     * Notification action displayed for external call notifications.  External calls are a
     * representation of a call which is in progress on the user's other device (e.g. another
     * phone or a watch).  The "take call" action initiates the process of pulling an external
     * call to the current device.
     * [CHAR LIMIT=30]
     */
    public static final int notification_take_call=0x7f1102f1;
    /**
     * Notification action displayed for external call notifications.  External calls are a
     * representation of a call which is in progress on the user's other device (e.g. another
     * phone or a watch).  The "take video call" action initiates the process of pulling an external
     * video call to the current device.
     * [CHAR LIMIT=30]
     */
    public static final int notification_take_video_call=0x7f1102f2;
    /**
     * Used to build a list of names or phone numbers, to indicate the callers who left
     * voicemails.
     * The first argument may be one or more callers, the most recent ones.
     * The second argument is an additional callers.
     * This string is used to build a list of callers.
     * [CHAR LIMIT=10]
     */
    public static final int notification_voicemail_callers_list=0x7f1102f3;
    /**
     * Message displayed in the "Voicemail" notification item,
     * indicating that there's no voicemail number available
     */
    public static final int notification_voicemail_no_vm_number=0x7f1102f4;
    /**
     * Message displayed in the "Voicemail" notification item, allowing the user
     * to dial the indicated number.
     */
    public static final int notification_voicemail_text_format=0x7f1102f5;
    /**
     * Label for the simulator submenu. This is used to show actions that are useful for development
     * and testing. [CHAR LIMIT=30]
     */
    public static final int nui_simulator_submenu_label=0x7f1102f6;
    /**
     * Text on button of "OK, got it". [CHAR_LIMIT=30]
     */
    public static final int ok_got_it=0x7f1102f7;
    /**
     * Confirmation dialog title for blocking a number. [CHAR LIMIT=NONE]
     */
    public static final int old_block_number_confirmation_title=0x7f1102f8;
    /**
     * String used to build a phone number type and phone number string.
     * Example: Mobile 650-555-1212
     */
    public static final int old_call_subject_type_and_number=0x7f1102f9;
    public static final int onscreenCallRecordText=0x7f1102fa;
    public static final int onscreenCallRecordingText=0x7f1102fb;
    public static final int onscreenStopCallRecordText=0x7f1102fc;
    /**
     * Detail label text shown on the About Phone screen to supplement
     * @string/licenseActivityLabel
     */
    public static final int open_source_license_detail_label=0x7f1102fd;
    /**
     * Internal preferences key for displaying the open source license
     * libraries
     */
    public static final int open_source_licenses_key=0x7f1102fe;
    /**
     * Header that expands to list all organization types when editing an organization of a
     * contact [CHAR LIMIT=20]
     */
    public static final int organizationLabelsGroup=0x7f1102ff;
    /**
     * Text of warning to be shown when the user attempts to make an outgoing Wireless
     * Preferred Service call when there is an VoLTE call in progress
     */
    public static final int outgoing_wps_warning=0x7f110300;
    public static final int password_toggle_content_description=0x7f110301;
    public static final int path_password_eye=0x7f110302;
    public static final int path_password_eye_mask_strike_through=0x7f110303;
    public static final int path_password_eye_mask_visible=0x7f110304;
    public static final int path_password_strike_through=0x7f110305;
    /**
     * In-call screen: button label on the "wait" prompt dialog in CDMA Mode
     */
    public static final int pause_prompt_no=0x7f110306;
    /**
     * In-call screen: button label on the "wait" prompt dialog in CDMA Mode
     */
    public static final int pause_prompt_yes=0x7f110307;
    /**
     * String used to display calls from pay phone in the call log
     */
    public static final int payphone=0x7f110308;
    public static final int people=0x7f110309;
    public static final int people_lookup_provider_title=0x7f11030a;
    /**
     * Shown as a prompt to turn on the phone permission to enable the call log [CHAR LIMIT=NONE]
     */
    public static final int permission_no_calllog=0x7f11030b;
    /**
     * Shown as a prompt to turn on the contacts permission to show all contacts [CHAR LIMIT=NONE]
     */
    public static final int permission_no_contacts=0x7f11030c;
    /**
     * Shown as a prompt to turn on contacts permissions to allow contact search [CHAR LIMIT=NONE]
     */
    public static final int permission_no_search=0x7f11030d;
    /**
     * Shown as a prompt to turn on the contacts permission to enable speed dial [CHAR LIMIT=NONE]
     */
    public static final int permission_no_speeddial=0x7f11030e;
    /**
     * Shown as a prompt to turn on the phone permission to allow a call to be placed [CHAR LIMIT=NONE]
     */
    public static final int permission_place_call=0x7f11030f;
    /**
     * The label of the button used to turn on a single permission [CHAR LIMIT=30]
     */
    public static final int permission_single_turn_on=0x7f110310;
    /**
     * Official label of the phone app, as seen in "Manage Applications"
     * and other settings UIs.
     */
    public static final int phoneAppLabel=0x7f110311;
    /**
     * Header that expands to list all of the types of phone numbers when editing or creating a
     * phone number for a contact [CHAR LIMIT=20]
     */
    public static final int phoneLabelsGroup=0x7f110312;
    /**
     * Label for the phone account settings [CHAR LIMIT=30]
     */
    public static final int phone_account_settings_label=0x7f110313;
    /**
     * Internal key for vibrate when ringing preference.
     */
    public static final int play_dtmf_preference_key=0x7f110314;
    /**
     * Asks the user if they want to send a post call message
     */
    public static final int post_call_add_message=0x7f110315;
    /**
     * Shown as a message that notifies asks the user if they want to send a post call message
     */
    public static final int post_call_message=0x7f110316;
    /**
     * Premade message to be sent as a text/RCS message
     */
    public static final int post_call_message_1=0x7f110317;
    /**
     * Premade message to be sent as a text/RCS message
     */
    public static final int post_call_message_2=0x7f110318;
    /**
     * Premade message to be sent as a text/RCS message
     */
    public static final int post_call_message_3=0x7f110319;
    /**
     * Shown to let the user know that their message was sent.
     */
    public static final int post_call_message_sent=0x7f11031a;
    /**
     * Format for a post call message. (ex. John Doe: Give me a call when you're free.)
     */
    public static final int post_call_notification_message=0x7f11031b;
    /**
     * Asks the user if they want to send a post call message
     */
    public static final int post_call_send_message=0x7f11031c;
    /**
     * Header that expands to list all of the types of postal addresses when editing or creating
     * an postal address for a contact [CHAR LIMIT=20]
     */
    public static final int postalLabelsGroup=0x7f11031d;
    /**
     * Field title for the full postal address of a contact [CHAR LIMIT=64]
     */
    public static final int postal_address=0x7f11031e;
    /**
     * Field title for the city of a structured postal address of a contact
     */
    public static final int postal_city=0x7f11031f;
    /**
     * Field title for the country of a structured postal address of a contact
     */
    public static final int postal_country=0x7f110320;
    /**
     * Field title for the postal code of a structured postal address of a contact
     */
    public static final int postal_postcode=0x7f110321;
    /**
     * Field title for the region, or state, of a structured postal address of a contact
     */
    public static final int postal_region=0x7f110322;
    /**
     * Field title for the street of a structured postal address of a contact
     */
    public static final int postal_street=0x7f110323;
    /**
     * Toast when the user tried to place a call but has revoked phone permission [CHAR_LIMIT=none]
     */
    public static final int pre_call_permission_check_no_phone_permission=0x7f110324;
    /**
     * Title of the dialog to select which SIM to call with before making a call, if the device has
     * multiple SIMs [CHAR LIMIT=40]
     */
    public static final int pre_call_select_phone_account=0x7f110325;
    /**
     * Hint text under a SIM when selecting SIM to call, indicating user often use the SIM to call
     * the contact.[CHAR LIMIT=40]
     */
    public static final int pre_call_select_phone_account_hint_frequent=0x7f110326;
    /**
     * Hint text under a SIM when selecting SIM to call, indicating the SIM is on the same carrier
     * as the outgoing call.[CHAR LIMIT=40]
     */
    public static final int pre_call_select_phone_account_hint_intra_carrier=0x7f110327;
    /**
     * Hint to show under a SIM entry when selecting SIM for call on a multi-SIM device, when the
     * call cannot be placed with the SIM because there is already a call on the other SIM,
     * [CHAR LIMIT=NONE]
     */
    public static final int pre_call_select_phone_account_hint_other_sim_in_use=0x7f110328;
    /**
     * Checkbox label when selecting a SIM when calling a contact, to use the selected SIM for the
     * same contact and never ask again [CHAR LIMIT=40]
     */
    public static final int pre_call_select_phone_account_remember=0x7f110329;
    /**
     * Internal preferences key for displaying the privacy policy
     */
    public static final int privacy_policy_key=0x7f11032a;
    /**
     * Label shown on the About Phone screen for the privacy policy option [CHAR LIMIT=40]
     */
    public static final int privacy_policy_label=0x7f11032b;
    /**
     * URL for privacy policy
     */
    public static final int privacy_policy_url=0x7f11032c;
    /**
     * String used to display calls from private numbers in the call log. For example, if the user
     * gets an incoming phone call from an unknown number, the caller ID will read "Private number".
     * We only show this string if the user is not on the Verizon network.
     */
    public static final int private_num_non_verizon=0x7f11032d;
    /**
     * String used to display calls from private numbers in the call log and in call UI. For
     * example, if the user gets an incoming phone call from an unknown number, the caller ID will
     * read "Restricted". We only show this string if the user is on the Verizon network.
     */
    public static final int private_num_verizon=0x7f11032e;
    /**
     * A default message to send with a phone call. [CHAR LIMIT=27]
     */
    public static final int quick_question=0x7f11032f;
    /**
     * String shown when the call details show a image that was received
     */
    public static final int received_a_photo=0x7f110330;
    /**
     * Text displayed when there are no call log entries in the selected time range.
     */
    public static final int recent_calls_no_items_in_range=0x7f110331;
    public static final int recording_time_text=0x7f110332;
    public static final int recording_warning_text=0x7f110333;
    public static final int recording_warning_title=0x7f110334;
    /**
     * Text shown on redo button in record voicemail activity [CHAR LIMIT=20]
     */
    public static final int redo_button_text=0x7f110335;
    public static final int refresh=0x7f110336;
    /**
     * Header for the list of all relationships for a contact [CHAR LIMIT=20]
     */
    public static final int relationLabelsGroup=0x7f110337;
    /**
     * Remove button that shows up when contact is long-pressed. [CHAR LIMIT=NONE]
     */
    public static final int remove_contact=0x7f110338;
    /**
     * Title of dialog that confirms whether a user wants to report an incorrect number.
     * [CHAR LIMIT=NONE]
     */
    public static final int report_caller_id_dialog_title=0x7f110339;
    /**
     * Toast that appears when a caller id report fails to send. Could be due to network error or
     * authentication error. [CHAR LIMIT=NONE]
     */
    public static final int report_caller_id_failed=0x7f11033a;
    /**
     * Toast message which appears when a contact's caller id is reported as incorrect. [CHAR LIMIT=NONE]
     */
    public static final int report_caller_id_toast=0x7f11033b;
    /**
     * Report not spam number alert dialog button [CHAR LIMIT=32]
     */
    public static final int report_not_spam_alert_button=0x7f11033c;
    /**
     * Text in alert dialog after clicking on Report as not spam.  [CHAR LIMIT=100]
     */
    public static final int report_not_spam_alert_details=0x7f11033d;
    /**
     * Title of alert dialog after clicking on Report as not spam.  [CHAR LIMIT=100]
     */
    public static final int report_not_spam_alert_title=0x7f11033e;
    /**
     * Title of settings screen for managing the "Respond via SMS" feature. [CHAR LIMIT=30]
     */
    public static final int respond_via_sms_setting_title=0x7f11033f;
    public static final int reverse_lookup_provider_title=0x7f110340;
    /**
     * Internal key for ringtone preference.
     */
    public static final int ringtone_preference_key=0x7f110341;
    /**
     * Choice in the ringtone picker.  If chosen, there will be silence instead of a ringtone played.
     */
    public static final int ringtone_silent=0x7f110342;
    /**
     * Setting option name to pick ringtone (a list dialog comes up). [CHAR LIMIT=30]
     */
    public static final int ringtone_title=0x7f110343;
    /**
     * If there is ever a ringtone set for some setting, but that ringtone can no longer be resolved, this is shown instead.  For example, if the ringtone was on a SD card and it had been removed, this would be shown for ringtones on that SD card.
     */
    public static final int ringtone_unknown=0x7f110344;
    /**
     * Text for button to accept RTT request. [CHAR LIMIT=20]
     */
    public static final int rtt_button_accept_request=0x7f110345;
    /**
     * Text for back button. [CHAR LIMIT=20]
     */
    public static final int rtt_button_back=0x7f110346;
    /**
     * Text for button to decline RTT request. [CHAR LIMIT=20]
     */
    public static final int rtt_button_decline_request=0x7f110347;
    /**
     * Displayed when RTT upgrade request failed
     */
    public static final int rtt_call_not_available_toast=0x7f110348;
    /**
     * Hint text for input box. [CHAR LIMIT=NONE]
     */
    public static final int rtt_input_hint=0x7f110349;
    /**
     * Details for RTT promotion dialog. [CHAR LIMIT=NONE]
     */
    public static final int rtt_promotion_details=0x7f11034a;
    /**
     * Title for RTT promotion dialog. [CHAR LIMIT=NONE]
     */
    public static final int rtt_promotion_title=0x7f11034b;
    /**
     * Details for RTT request dialog. [CHAR LIMIT=NONE]
     */
    public static final int rtt_request_dialog_details=0x7f11034c;
    /**
     * More information for RTT request dialog. [CHAR LIMIT=NONE]
     */
    public static final int rtt_request_dialog_more_information=0x7f11034d;
    /**
     * Title for RTT request dialog. [CHAR LIMIT=60]
     */
    public static final int rtt_request_dialog_title=0x7f11034e;
    /**
     * Text for status banner. [CHAR LIMIT=100]
     */
    public static final int rtt_status_banner_text=0x7f11034f;
    /**
     * Text for RTT transcript advisory. [CHAR LIMIT=NONE]
     */
    public static final int rtt_transcript_advisory=0x7f110350;
    /**
     * String shown when RTT transcript is available. [CHAR LIMIT=NONE]
     */
    public static final int rtt_transcript_link=0x7f110351;
    /**
     * String shown when RTT transcript is not available for any reason. [CHAR LIMIT=NONE]
     */
    public static final int rtt_transcript_not_available=0x7f110352;
    /**
     * Text shown on save button in record voicemail activity [CHAR LIMIT=20]
     */
    public static final int save_button_text=0x7f110353;
    /**
     * Text for a toolbar button that shows the user their contacts [CHAR LIMIT=NONE]
     */
    public static final int search=0x7f110354;
    /**
     * The font-family to use for the text inside the searchbox.
     */
    public static final int search_font_family=0x7f110355;
    /**
     * Shown as a prompt to turn on location permissions and/or enable location to allow nearby places search [CHAR LIMIT=NONE]
     */
    public static final int search_location_permission=0x7f110356;
    public static final int search_menu_title=0x7f110357;
    /**
     * Shortcut item used to add a number to an existing contact directly from search.
     * [CHAR LIMIT=25]
     */
    public static final int search_shortcut_add_to_contact=0x7f110358;
    /**
     * Shortcut item used to block a number directly from search. [CHAR LIMIT=25]
     */
    public static final int search_shortcut_block_number=0x7f110359;
    /**
     * Shortcut item used to call a number directly from search
     */
    public static final int search_shortcut_call_number=0x7f11035a;
    /**
     * Shortcut item used to add a number directly to a new contact from search.
     * [CHAR LIMIT=25]
     */
    public static final int search_shortcut_create_new_contact=0x7f11035b;
    /**
     * Shortcut item used to make a video call directly from search. [CHAR LIMIT=25]
     */
    public static final int search_shortcut_make_video_call=0x7f11035c;
    /**
     * Shortcut item used to make a voice call directly from search. [CHAR LIMIT=25]
     */
    public static final int search_shortcut_make_voice_call=0x7f11035d;
    /**
     * Shortcut item used to send a text message directly from search. [CHAR LIMIT=25]
     */
    public static final int search_shortcut_send_sms_message=0x7f11035e;
    /**
     * Title for Select Account Dialog [CHAR LIMIT=30]
     */
    public static final int select_account_dialog_title=0x7f11035f;
    /**
     * Select all text that shows up when in multi select mode. [CHAR LIMIT=NONE]
     */
    public static final int select_all=0x7f110360;
    /**
     * Title for dialog to select Phone Account for outgoing call.  [CHAR LIMIT=40]
     */
    public static final int select_phone_account_for_calls=0x7f110361;
    /**
     * Checkbox label when selecting a SIM when calling a contact, to use the selected SIM for the
     * same contact and never ask again [CHAR LIMIT=40]
     */
    public static final int select_phone_account_for_calls_remember=0x7f110362;
    /**
     * Options shown in call log/voicemail menu to send a SMS to the number represented by the call log/voicemailentry.
     * [CHAR LIMIT=30]
     */
    public static final int send_a_message=0x7f110363;
    /**
     * Text for a button to make a phone call combined with a text message [CHAR LIMIT=26]
     */
    public static final int send_and_call=0x7f110364;
    /**
     * Button used to start a new call with the user entered subject. [CHAR LIMIT=32]
     */
    public static final int send_and_call_button=0x7f110365;
    /**
     * Error toast message for when send to voicemail import fails. [CHAR LIMIT=40]
     */
    public static final int send_to_voicemail_import_failed=0x7f110366;
    /**
     * String shown when the call details show a image that was sent
     */
    public static final int sent_a_photo=0x7f110367;
    /**
     * Label for the check box to toggle default sim card setting [CHAR LIMIT=35]
     */
    public static final int set_default_account=0x7f110368;
    /**
     * Show users their settings [CHAR LIMIT=20]
     */
    public static final int settings=0x7f110369;
    /**
     * Text for a button to make a phone call combined with a picture or other media [CHAR LIMIT=26]
     */
    public static final int share_and_call=0x7f11036a;
    /**
     * Dialog text displayed when loading a phone number from the SIM card for speed dial
     */
    public static final int simContacts_emptyLoading=0x7f11036b;
    /**
     * Dialog title displayed when loading a phone number from the SIM card for speed dial
     */
    public static final int simContacts_title=0x7f11036c;
    /**
     * Label for the simulator submenu. This is used to show actions that are useful for development
     * and testing. [CHAR LIMIT=30]
     */
    public static final int simulator_submenu_label=0x7f11036d;
    /**
     * Generic action string for text messaging a contact. Used by AccessibilityService to
     * announce the purpose of the view. [CHAR LIMIT=NONE]
     */
    public static final int sms=0x7f11036e;
    /**
     * Action string for sending an SMS to an assistant phone number
     */
    public static final int sms_assistant=0x7f11036f;
    /**
     * Action string for sending an SMS to a callback number
     */
    public static final int sms_callback=0x7f110370;
    /**
     * Action string for sending an SMS to a car phone number
     */
    public static final int sms_car=0x7f110371;
    /**
     * Action string for sending an SMS to a company main phone number
     */
    public static final int sms_company_main=0x7f110372;
    /**
     * Action string for sending an SMS to a custom phone number
     */
    public static final int sms_custom=0x7f110373;
    /**
     * Title for the sms disambiguation dialog
     */
    public static final int sms_disambig_title=0x7f110374;
    /**
     * Action string for sending an SMS to a home fax phone number
     */
    public static final int sms_fax_home=0x7f110375;
    /**
     * Action string for sending an SMS to a work fax phone number
     */
    public static final int sms_fax_work=0x7f110376;
    /**
     * Action string for sending an SMS to a home phone number
     */
    public static final int sms_home=0x7f110377;
    /**
     * Action string for sending an SMS to a ISDN phone number
     */
    public static final int sms_isdn=0x7f110378;
    /**
     * Action string for sending an SMS to a main phone number
     */
    public static final int sms_main=0x7f110379;
    /**
     * Action string for sending an SMS to a MMS phone number
     */
    public static final int sms_mms=0x7f11037a;
    /**
     * Action string for sending an SMS to a mobile phone number
     */
    public static final int sms_mobile=0x7f11037b;
    /**
     * Action string for sending an SMS to an other phone number
     */
    public static final int sms_other=0x7f11037c;
    /**
     * Action string for sending an SMS to an other fax phone number
     */
    public static final int sms_other_fax=0x7f11037d;
    /**
     * Action string for sending an SMS to a pager phone number
     */
    public static final int sms_pager=0x7f11037e;
    /**
     * Action string for sending an SMS to a radio phone number
     */
    public static final int sms_radio=0x7f11037f;
    /**
     * Action string for sending an SMS to a Telex phone number
     */
    public static final int sms_telex=0x7f110380;
    /**
     * Action string for sending an SMS to a TTY/TDD phone number
     */
    public static final int sms_tty_tdd=0x7f110381;
    /**
     * Action string for sending an SMS to a work phone number
     */
    public static final int sms_work=0x7f110382;
    /**
     * Action string for sending an SMS to a work mobile phone number
     */
    public static final int sms_work_mobile=0x7f110383;
    /**
     * Action string for sending an SMS to a work pager phone number
     */
    public static final int sms_work_pager=0x7f110384;
    /**
     * Text for snackbar to undo blocking a number. [CHAR LIMIT=64]
     */
    public static final int snackbar_number_blocked=0x7f110385;
    /**
     * Text for snackbar to undo unblocking a number. [CHAR LIMIT=64]
     */
    public static final int snackbar_number_unblocked=0x7f110386;
    /**
     * Text for undo button in snackbar for voicemail deletion/blocking/unblocking number. [CHAR LIMIT=10]
     */
    public static final int snackbar_undo=0x7f110387;
    /**
     * Text for snackbar to undo a voicemail delete. [CHAR LIMIT=30]
     */
    public static final int snackbar_voicemail_deleted=0x7f110388;
    /**
     * Title for the "Sounds and vibration" settings control settings related to ringtones,
     * dialpad tones, and vibration for incoming calls. [CHAR LIMIT=40]
     */
    public static final int sounds_and_vibration_title=0x7f110389;
    /**
     * Label for "Dismiss" dialog action. [CHAR LIMIT=32]
     */
    public static final int spam_blocking_promo_action_dismiss=0x7f11038a;
    /**
     * Label for filter spam dialog action. [CHAR LIMIT=32]
     */
    public static final int spam_blocking_promo_action_filter_spam=0x7f11038b;
    /**
     * Text for the spam blocking promo dialog. [CHAR LIMIT=NONE]
     */
    public static final int spam_blocking_promo_text=0x7f11038c;
    /**
     * Title for the spam blocking promo dialog. [CHAR LIMIT=100]
     */
    public static final int spam_blocking_promo_title=0x7f11038d;
    /**
     * Button text to prompt a user to open spam blocking setting [CHAR LIMIT=NONE]
     */
    public static final int spam_blocking_setting_prompt=0x7f11038e;
    /**
     * On complete text shown when spam blocking is disabled successfully.
     */
    public static final int spam_blocking_settings_disable_complete_text=0x7f11038f;
    /**
     * Spam blocking error text, shown when error happens during setting disabling.
     */
    public static final int spam_blocking_settings_disable_error_text=0x7f110390;
    /**
     * On complete text shown when spam blocking is enabled successfully.
     */
    public static final int spam_blocking_settings_enable_complete_text=0x7f110391;
    /**
     * Spam blocking error text, shown when error happens during setting enabling.
     */
    public static final int spam_blocking_settings_enable_error_text=0x7f110392;
    public static final int spam_message_text=0x7f110393;
    /**
     * Label for "Dismiss" dialog action. [CHAR LIMIT=12]
     */
    public static final int spam_notification_action_dismiss=0x7f110394;
    /**
     * Text for the adding to contacts action in the after call prompt. [CHAR LIMIT=20]
     */
    public static final int spam_notification_add_contact_action_text=0x7f110395;
    /**
     * Text for the toast shown after the user presses block/report spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_block_report_toast_text=0x7f110396;
    /**
     * Text for the toast shown after the user presses block/report spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_block_report_toast_text_230151=0x7f110397;
    /**
     * Text for the toast shown after the user presses block/report spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_block_report_toast_text_230152=0x7f110398;
    /**
     * Text for the toast shown after the user presses block/report spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_block_report_toast_text_230153=0x7f110399;
    /**
     * Text for the toast shown after the user presses block/report spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_block_report_toast_text_230154=0x7f11039a;
    /**
     * Text for the toast shown after the user presses block/report spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_block_report_toast_text_230155=0x7f11039b;
    /**
     * Text for the blocking spam action in the after call prompt. [CHAR LIMIT=40]
     */
    public static final int spam_notification_block_spam_action_text=0x7f11039c;
    /**
     * Text for the adding to contacts action in the after call dialog. [CHAR LIMIT=40]
     */
    public static final int spam_notification_dialog_add_contact_action_text=0x7f11039d;
    /**
     * Text for the blocking and reporting spam action in the after call dialog. [CHAR LIMIT=40]
     */
    public static final int spam_notification_dialog_block_report_spam_action_text=0x7f11039e;
    /**
     * Text for the blocking and reporting spam action in the after call dialog. [CHAR LIMIT=40]
     */
    public static final int spam_notification_dialog_block_report_spam_action_text_230151=0x7f11039f;
    /**
     * Text for the blocking and reporting spam action in the after call dialog. [CHAR LIMIT=40]
     */
    public static final int spam_notification_dialog_block_report_spam_action_text_230152=0x7f1103a0;
    /**
     * Text for the blocking and reporting spam action in the after call dialog. [CHAR LIMIT=40]
     */
    public static final int spam_notification_dialog_block_report_spam_action_text_230153=0x7f1103a1;
    /**
     * Text for the blocking and reporting spam action in the after call dialog. [CHAR LIMIT=40]
     */
    public static final int spam_notification_dialog_block_report_spam_action_text_230154=0x7f1103a2;
    /**
     * Text for the blocking and reporting spam action in the after call dialog. [CHAR LIMIT=40]
     */
    public static final int spam_notification_dialog_block_report_spam_action_text_230155=0x7f1103a3;
    /**
     * Text displayed in the collapsed notification to the user after a non-spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_non_spam_call_collapsed_text=0x7f1103a4;
    /**
     * Text displayed in the collapsed notification to the user after a non-spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_non_spam_call_collapsed_text_230151=0x7f1103a5;
    /**
     * Text displayed in the collapsed notification to the user after a non-spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_non_spam_call_collapsed_text_230152=0x7f1103a6;
    /**
     * Text displayed in the collapsed notification to the user after a non-spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_non_spam_call_collapsed_text_230153=0x7f1103a7;
    /**
     * Text displayed in the collapsed notification to the user after a non-spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_non_spam_call_collapsed_text_230154=0x7f1103a8;
    /**
     * Text displayed in the collapsed notification to the user after a non-spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_non_spam_call_collapsed_text_230155=0x7f1103a9;
    /**
     * Text displayed in the expanded notification to the user after a non-spam call ends. [CHAR LIMIT=NONE]
     */
    public static final int spam_notification_non_spam_call_expanded_text=0x7f1103aa;
    /**
     * Text displayed in the expanded notification to the user after a non-spam call ends. [CHAR LIMIT=NONE]
     */
    public static final int spam_notification_non_spam_call_expanded_text_230151=0x7f1103ab;
    /**
     * Text displayed in the expanded notification to the user after a non-spam call ends. [CHAR LIMIT=NONE]
     */
    public static final int spam_notification_non_spam_call_expanded_text_230152=0x7f1103ac;
    /**
     * Text displayed in the expanded notification to the user after a non-spam call ends. [CHAR LIMIT=NONE]
     */
    public static final int spam_notification_non_spam_call_expanded_text_230153=0x7f1103ad;
    /**
     * Text displayed in the expanded notification to the user after a non-spam call ends. [CHAR LIMIT=NONE]
     */
    public static final int spam_notification_non_spam_call_expanded_text_230154=0x7f1103ae;
    /**
     * Text displayed in the expanded notification to the user after a non-spam call ends. [CHAR LIMIT=NONE]
     */
    public static final int spam_notification_non_spam_call_expanded_text_230155=0x7f1103af;
    /**
     * Text for the toast shown after the user presses not spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_not_spam_toast_text=0x7f1103b0;
    /**
     * Text for the toast shown after the user presses not spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_not_spam_toast_text_230151=0x7f1103b1;
    /**
     * Text for the toast shown after the user presses not spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_not_spam_toast_text_230152=0x7f1103b2;
    /**
     * Text for the toast shown after the user presses not spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_not_spam_toast_text_230153=0x7f1103b3;
    /**
     * Text for the toast shown after the user presses not spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_not_spam_toast_text_230154=0x7f1103b4;
    /**
     * Text for the toast shown after the user presses not spam. [CHAR LIMIT=100]
     */
    public static final int spam_notification_not_spam_toast_text_230155=0x7f1103b5;
    /**
     * Text for the reporting spam action in the after call prompt. [CHAR LIMIT=20]
     */
    public static final int spam_notification_report_spam_action_text=0x7f1103b6;
    /**
     * Text displayed in the collapsed notification to the user after a spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_spam_call_collapsed_text=0x7f1103b7;
    /**
     * Text displayed in the collapsed notification to the user after a spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_spam_call_collapsed_text_230151=0x7f1103b8;
    /**
     * Text displayed in the collapsed notification to the user after a spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_spam_call_collapsed_text_230152=0x7f1103b9;
    /**
     * Text displayed in the collapsed notification to the user after a spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_spam_call_collapsed_text_230153=0x7f1103ba;
    /**
     * Text displayed in the collapsed notification to the user after a spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_spam_call_collapsed_text_230154=0x7f1103bb;
    /**
     * Text displayed in the collapsed notification to the user after a spam call ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_spam_call_collapsed_text_230155=0x7f1103bc;
    /**
     * Title for the notification to the user after a call from an spammer ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_title=0x7f1103bd;
    /**
     * Title for the notification to the user after a call from an spammer ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_title_230151=0x7f1103be;
    /**
     * Title for the notification to the user after a call from an spammer ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_title_230152=0x7f1103bf;
    /**
     * Title for the notification to the user after a call from an spammer ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_title_230153=0x7f1103c0;
    /**
     * Title for the notification to the user after a call from an spammer ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_title_230154=0x7f1103c1;
    /**
     * Title for the notification to the user after a call from an spammer ends. [CHAR LIMIT=100]
     */
    public static final int spam_notification_title_230155=0x7f1103c2;
    /**
     * Text for the marking a call as not spam in the after call prompt. [CHAR LIMIT=40]
     */
    public static final int spam_notification_was_not_spam_action_text=0x7f1103c3;
    /**
     * Text for the marking a call as not spam in the after call prompt. [CHAR LIMIT=40]
     */
    public static final int spam_notification_was_not_spam_action_text_230151=0x7f1103c4;
    /**
     * Text for the marking a call as not spam in the after call prompt. [CHAR LIMIT=40]
     */
    public static final int spam_notification_was_not_spam_action_text_230152=0x7f1103c5;
    /**
     * Text for the marking a call as not spam in the after call prompt. [CHAR LIMIT=40]
     */
    public static final int spam_notification_was_not_spam_action_text_230153=0x7f1103c6;
    /**
     * Text for the marking a call as not spam in the after call prompt. [CHAR LIMIT=40]
     */
    public static final int spam_notification_was_not_spam_action_text_230154=0x7f1103c7;
    /**
     * Text for the marking a call as not spam in the after call prompt. [CHAR LIMIT=40]
     */
    public static final int spam_notification_was_not_spam_action_text_230155=0x7f1103c8;
    /**
     * Label under the name of a spam number in the call log. [CHAR LIMIT=15]
     */
    public static final int spam_number_call_log_label=0x7f1103c9;
    public static final int spam_photo_text=0x7f1103ca;
    /**
     * text for a button that prompts the user to add a contact to their favorites. [CHAR LIMIT=12]
     */
    public static final int speed_dial_add_button_text=0x7f1103cb;
    /**
     * Shown as a prompt to turn on the contacts permission to enable speed dial [CHAR LIMIT=NONE]
     */
    public static final int speed_dial_contacts_permission_description=0x7f1103cc;
    /**
     * Title of a dialog asking the user to choose their the mode/type of communication for a
     * specific contact where communication modes are video calling and voice calling. [CHAR LIMIT=NONE]
     */
    public static final int speed_dial_disambig_dialog_title=0x7f1103cd;
    /**
     * Shown when there are no speed dial favorites.
     */
    public static final int speed_dial_empty=0x7f1103ce;
    /**
     * Shown as an action when there are no speed dial favorites
     */
    public static final int speed_dial_empty_add_favorite_action=0x7f1103cf;
    /**
     * [CHAR LIMIT=NONE] Shown as an action when the all contacts list is empty
     */
    public static final int speed_dial_no_contacts_action_text=0x7f1103d0;
    /**
     * [CHAR LIMIT=NONE] Shown when there are no contacts in the all contacts list.
     */
    public static final int speed_dial_no_contacts_description=0x7f1103d1;
    /**
     * text for a checkbox in a dialog that prompts the user to select a phone number from a list.
     * If the user checks this box, we will remember their selection and never ask for it again. [CHAR LIMIT=NONE]
     */
    public static final int speed_dial_remember_this_choice=0x7f1103d2;
    /**
     * Text shown on a dragging target that removes the contact from favorites
     */
    public static final int speed_dial_remove_favorites=0x7f1103d3;
    /**
     * The label of the button used to turn on a single permission [CHAR LIMIT=30]
     */
    public static final int speed_dial_turn_on_contacts_permission=0x7f1103d4;
    /**
     * Used to display as default status when the contact is available for chat [CHAR LIMIT=19]
     */
    public static final int status_available=0x7f1103d5;
    /**
     * Used to display as default status when the contact is away or idle for chat [CHAR LIMIT=19]
     */
    public static final int status_away=0x7f1103d6;
    public static final int status_bar_notification_info_overflow=0x7f1103d7;
    /**
     * Used to display as default status when the contact is busy or Do not disturb for chat [CHAR LIMIT=19]
     */
    public static final int status_busy=0x7f1103d8;
    /**
     * Text shown to the user in a button to prompt them to mark a contact as a favorite contact [CHAR LIMIT=30].
     */
    public static final int suggested_contact_bottom_sheet_add_favorite_option=0x7f1103d9;
    /**
     * header for a list of contacts that are suggestions for the user to place calls to based on
     * their frequently contacted contacts. [CHAR LIMIT=30]
     */
    public static final int suggestions_header=0x7f1103da;
    /**
     * Accessibility text for the tab showing the user's contacts. [CHAR LIMIT=40]
     */
    public static final int tab_all_contacts=0x7f1103db;
    /**
     * Accessibility text for the tab showing the call history. [CHAR LIMIT=40]
     */
    public static final int tab_history=0x7f1103dc;
    /**
     * Accessibility text for the tab showing recent and favorite contacts who can be called.
     * [CHAR LIMIT=40]
     */
    public static final int tab_speed_dial=0x7f1103dd;
    /**
     * String format to describe a tab e.g.call history tab.
     */
    public static final int tab_title=0x7f1103de;
    /**
     * Tab text to show users their call log/call history [CHAR LIMIT=10]
     */
    public static final int tab_title_call_history=0x7f1103df;
    /**
     * Tab text to show users their contacts  [CHAR LIMIT=10]
     */
    public static final int tab_title_contacts=0x7f1103e0;
    /**
     * Tab text to show users their favorite contacts that they can call in 1 click [CHAR LIMIT=10]
     */
    public static final int tab_title_speed_dial=0x7f1103e1;
    /**
     * Tab text to show users their voicemails  [CHAR LIMIT=10]
     */
    public static final int tab_title_voicemail=0x7f1103e2;
    /**
     * Accessibility text for the tab showing the user's voicemails. [CHAR LIMIT=40]
     */
    public static final int tab_voicemail=0x7f1103e3;
    public static final int terms_and_conditions_decline_dialog_title=0x7f1103e4;
    /**
     * Internal preferences key for displaying the terms of service
     */
    public static final int terms_of_service_key=0x7f1103e5;
    /**
     * Label shown on the About Phone screen for the terms of service option [CHAR LIMIT=50]
     */
    public static final int terms_of_service_label=0x7f1103e6;
    /**
     * URL for terms of service
     */
    public static final int terms_of_service_url=0x7f1103e7;
    /**
     * Shown as a message that notifies the user that the Phone app cannot write to system settings, which is why the system settings app is being launched directly instead. [CHAR LIMIT=NONE]
     */
    public static final int toast_cannot_write_system_settings=0x7f1103e8;
    /**
     * Toast shown when text is copied to the clipboard [CHAR LIMIT=64]
     */
    public static final int toast_text_copied=0x7f1103e9;
    /**
     * Accessibility string for close/navigation icon in DialerToolbar
     */
    public static final int toolbar_close=0x7f1103ea;
    public static final int transcription_learn_more_url=0x7f1103eb;
    /**
     * Title for "answered elsewhere" call type. This will happen if a call was ringing
     * simultaneously on multiple devices, and the user answered it on a device other than the
     * current device. [CHAR LIMIT=60]
     */
    public static final int type_answered_elsewhere=0x7f1103ec;
    /**
     * Title for blocked call type. [CHAR LIMIT=40]
     */
    public static final int type_blocked=0x7f1103ed;
    /**
     * Title for incoming call type. [CHAR LIMIT=40]
     */
    public static final int type_incoming=0x7f1103ee;
    /**
     * Title for incoming call which was transferred to another device. [CHAR LIMIT=60]
     */
    public static final int type_incoming_pulled=0x7f1103ef;
    /**
     * Title for incoming video call in call details screen [CHAR LIMIT=60]
     */
    public static final int type_incoming_video=0x7f1103f0;
    /**
     * Title for incoming video call in call details screen which was transferred to another device.
     * [CHAR LIMIT=60]
     */
    public static final int type_incoming_video_pulled=0x7f1103f1;
    /**
     * Title for missed call type. [CHAR LIMIT=40]
     */
    public static final int type_missed=0x7f1103f2;
    /**
     * Title for missed video call in call details screen [CHAR LIMIT=60]
     */
    public static final int type_missed_video=0x7f1103f3;
    /**
     * Title for outgoing call type. [CHAR LIMIT=40]
     */
    public static final int type_outgoing=0x7f1103f4;
    /**
     * Title for outgoing call which was transferred to another device. [CHAR LIMIT=60]
     */
    public static final int type_outgoing_pulled=0x7f1103f5;
    /**
     * Title for outgoing video call in call details screen [CHAR LIMIT=60]
     */
    public static final int type_outgoing_video=0x7f1103f6;
    /**
     * Title for outgoing video call in call details screen which was transferred to another device.
     * [CHAR LIMIT=60]
     */
    public static final int type_outgoing_video_pulled=0x7f1103f7;
    /**
     * Title for rejected call type. [CHAR LIMIT=40]
     */
    public static final int type_rejected=0x7f1103f8;
    /**
     * Title for voicemail details screen
     */
    public static final int type_voicemail=0x7f1103f9;
    /**
     * Options shown in a call log/voicemail menu to unblock a number. [CHAR LIMIT=30]
     */
    public static final int unblock_number=0x7f1103fa;
    /**
     * Text in alert dialog after clicking on Unblock.  [CHAR LIMIT=100]
     */
    public static final int unblock_number_alert_details=0x7f1103fb;
    /**
     * Confirmation dialog for unblocking a number. [CHAR LIMIT=NONE]
     */
    public static final int unblock_number_confirmation_title=0x7f1103fc;
    /**
     * Toast if the user clicked the unblock button but it failed. [CHAR LIMIT=100]
     */
    public static final int unblock_number_failed_toast=0x7f1103fd;
    /**
     * Unblock number alert dialog button [CHAR LIMIT=32]
     */
    public static final int unblock_number_ok=0x7f1103fe;
    /**
     * Title of alert dialog after clicking on Unblock.  [CHAR LIMIT=100]
     */
    public static final int unblock_report_number_alert_title=0x7f1103ff;
    /**
     * String used to display calls from unknown numbers in the call log
     */
    public static final int unknown=0x7f110400;
    /**
     * String to identify an unknown/restricted callers. ex. "Unknown 1", "Restricted 2", ect.
     */
    public static final int unknown_counter=0x7f110401;
    public static final int unknown_helpline_name=0x7f110402;
    /**
     * A default message to send with a phone call. [CHAR LIMIT=27]
     */
    public static final int urgent=0x7f110403;
    /**
     * String describing the text on the header of the profile contact in the contacts list
     * This may be programatically capitalized. [CHAR LIMIT=20]
     */
    public static final int user_profile_contacts_list_header=0x7f110404;
    public static final int verizon_domestic_customer_support_display_number=0x7f110405;
    public static final int verizon_domestic_customer_support_number=0x7f110406;
    public static final int verizon_terms_and_conditions_1_1_english=0x7f110407;
    public static final int verizon_terms_and_conditions_1_1_spanish=0x7f110408;
    public static final int verizon_terms_and_conditions_accept_english=0x7f110409;
    public static final int verizon_terms_and_conditions_accept_spanish=0x7f11040a;
    public static final int verizon_terms_and_conditions_decline_dialog_downgrade=0x7f11040b;
    public static final int verizon_terms_and_conditions_decline_dialog_message=0x7f11040c;
    public static final int verizon_terms_and_conditions_decline_english=0x7f11040d;
    public static final int verizon_terms_and_conditions_decline_set_pin_dialog_message=0x7f11040e;
    public static final int verizon_terms_and_conditions_decline_set_pin_dialog_set_pin=0x7f11040f;
    public static final int verizon_terms_and_conditions_decline_spanish=0x7f110410;
    public static final int verizon_terms_and_conditions_message=0x7f110411;
    public static final int verizon_terms_and_conditions_policy_url=0x7f110412;
    public static final int verizon_terms_and_conditions_title=0x7f110413;
    /**
     * Internal key for vibrate when ringing preference.
     */
    public static final int vibrate_on_preference_key=0x7f110414;
    /**
     * Setting option name to enable or disable vibration when ringing the phone.
     * [CHAR LIMIT=30]
     */
    public static final int vibrate_on_ring_title=0x7f110415;
    /**
     * Option shown in a call log/voicemail menu to make a video call [CHAR LIMIT=30]
     */
    public static final int video_call=0x7f110416;
    public static final int video_call_lte_to_wifi_failed_do_not_show=0x7f110417;
    public static final int video_call_lte_to_wifi_failed_message=0x7f110418;
    /**
     * Displayed when WiFi handover from LTE fails during a video call.
     */
    public static final int video_call_lte_to_wifi_failed_title=0x7f110419;
    /**
     * Displayed when handover from WiFi to Lte occurs during a video call
     */
    public static final int video_call_lte_to_wifi_handover_toast=0x7f11041a;
    /**
     * Message of alert dialog displayed when video call is not available. [CHAR LIMIT=NONE]
     */
    public static final int video_call_not_available_message=0x7f11041b;
    /**
     * Title of alert dialog displayed when video call is not available. [CHAR LIMIT=NONE]
     */
    public static final int video_call_not_available_title=0x7f11041c;
    /**
     * Displayed when handover from WiFi to Lte occurs during a video call
     */
    public static final int video_call_wifi_to_lte_handover_toast=0x7f11041d;
    /**
     * Instruction text to notify user that charges may apply on video calling. [CHAR LIMIT=NONE]
     */
    public static final int videocall_charges_alert_dialog_description=0x7f11041e;
    /**
     * Text indicates the video from remote party is off. [CHAR LIMIT=40]
     */
    public static final int videocall_remote_video_off=0x7f11041f;
    /**
     * Text indicates the video from remote party is on. [CHAR LIMIT=40]
     */
    public static final int videocall_remote_video_on=0x7f110420;
    /**
     * Text indicates the call is held by remote party. [CHAR LIMIT=20]
     */
    public static final int videocall_remotely_held=0x7f110421;
    /**
     * Text indicates the call is resumed from held by remote party. [CHAR LIMIT=20]
     */
    public static final int videocall_remotely_resumed=0x7f110422;
    public static final int view=0x7f110423;
    /**
     * Button text to prompt a user to open an sms conversation [CHAR LIMIT=NONE]
     */
    public static final int view_conversation=0x7f110424;
    /**
     * Button to view the updates from the current group on the group detail page [CHAR LIMIT=25]
     */
    public static final int view_updates_from_group=0x7f110425;
    /**
     * Error message for the voicemail PIN change if the new PIN contains invalid character
     */
    public static final int vm_change_pin_error_invalid=0x7f110426;
    /**
     * Error message for the voicemail PIN change if the old PIN entered doesn't match
     */
    public static final int vm_change_pin_error_mismatch=0x7f110427;
    /**
     * Error message for the voicemail PIN change if operation has failed
     */
    public static final int vm_change_pin_error_system_error=0x7f110428;
    /**
     * Error message for the voicemail PIN change if the PIN is too long
     */
    public static final int vm_change_pin_error_too_long=0x7f110429;
    /**
     * Error message for the voicemail PIN change if the PIN is too short
     */
    public static final int vm_change_pin_error_too_short=0x7f11042a;
    /**
     * Error message for the voicemail PIN change if the PIN is too weak
     */
    public static final int vm_change_pin_error_too_weak=0x7f11042b;
    /**
     * Hint for the new PIN field in the change vociemail PIN dialog
     */
    public static final int vm_change_pin_new_pin=0x7f11042c;
    /**
     * Hint for the old PIN field in the change vociemail PIN dialog
     */
    public static final int vm_change_pin_old_pin=0x7f11042d;
    /**
     * Message on the dialog when PIN changing is in progress
     */
    public static final int vm_change_pin_progress_message=0x7f11042e;
    /**
     * Voice call button label of alert dialog displayed when video call is not available. [CHAR LIMIT=20]
     */
    public static final int voice_call=0x7f11042f;
    /**
     * Message displayed when there is no application available to handle voice search. [CHAR LIMIT=NONE]
     */
    public static final int voice_search_not_available=0x7f110430;
    /**
     * String used for displaying calls to the voicemail number in the call log
     */
    public static final int voicemail=0x7f110431;
    /**
     * A format string used for displaying the date and time for a voicemail call log. For example: Jul 25, 2014 at 2:49 PM
     * The date will be replaced by 'Today' for voicemails created on the current day. For example: Today at 2:49 PM
     */
    public static final int voicemailCallLogDateTimeFormat=0x7f110432;
    /**
     * A format string used for displaying the date, time and duration for a voicemail call log. For example: Jul 25, 2014 at 2:49 PM • 00:34
     */
    public static final int voicemailCallLogDateTimeFormatWithDuration=0x7f110433;
    /**
     * The string 'Today'. This value is used in the voicemailCallLogDateTimeFormat rather than an
     * explicit date string, e.g. Jul 25, 2014, in the event that a voicemail was created on the
     * current day
     */
    public static final int voicemailCallLogToday=0x7f110434;
    /**
     * Format for duration of voicemails which are displayed when viewing voicemail. For example "01:22"
     */
    public static final int voicemailDurationFormat=0x7f110435;
    public static final int voicemailMultiSelectActionBarTitle=0x7f110436;
    public static final int voicemailMultiSelectDeleteCancel=0x7f110437;
    public static final int voicemailMultiSelectDeleteConfirm=0x7f110438;
    public static final int voicemail_action_call_customer_support=0x7f110439;
    public static final int voicemail_action_call_voicemail=0x7f11043a;
    public static final int voicemail_action_dimiss=0x7f11043b;
    public static final int voicemail_action_retry=0x7f11043c;
    public static final int voicemail_action_set_pin=0x7f11043d;
    public static final int voicemail_action_sync=0x7f11043e;
    public static final int voicemail_action_turn_archive_on=0x7f11043f;
    public static final int voicemail_action_turn_off_airplane_mode=0x7f110440;
    /**
     * Summary information while visual voicemail is activating after turning it on [CHAR LIMIT=NONE]
     */
    public static final int voicemail_activating_summary_info=0x7f110441;
    public static final int voicemail_advanced_settings_key=0x7f110442;
    /**
     * Title for advanced settings in the voicemail settings
     */
    public static final int voicemail_advanced_settings_title=0x7f110443;
    /**
     * Internal key for a preference to change greeting
     */
    public static final int voicemail_change_greeting_key=0x7f110444;
    /**
     * Title for changing voicemail greeting activity [CHAR LIMIT=40]
     */
    public static final int voicemail_change_greeting_preference_title=0x7f110445;
    /**
     * DO NOT TRANSLATE. Internal key for a voicemail change pin preference.
     */
    public static final int voicemail_change_pin_key=0x7f110446;
    public static final int voicemail_change_pin_preference_summary_disable=0x7f110447;
    public static final int voicemail_change_pin_preference_summary_not_activated=0x7f110448;
    /**
     * Voicemail change PIN dialog title [CHAR LIMIT=40]
     */
    public static final int voicemail_change_pin_preference_title=0x7f110449;
    /**
     * Summary information for visual voicemail donation setting [CHAR LIMIT=NONE]
     */
    public static final int voicemail_donate_preference_summary_info=0x7f11044a;
    /**
     * Content of voicemail donation promo dialog
     * [CHAR LIMIT=NONE]
     */
    public static final int voicemail_donation_promo_content=0x7f11044b;
    public static final int voicemail_donation_promo_learn_more_url=0x7f11044c;
    /**
     * Label for the voicemail donation promo dialog opt-in button
     * [CHAR LIMIT=20]
     */
    public static final int voicemail_donation_promo_opt_in=0x7f11044d;
    /**
     * Label for the voicemail donation promo dialog opt-out button
     * [CHAR LIMIT=20]
     */
    public static final int voicemail_donation_promo_opt_out=0x7f11044e;
    /**
     * Title of voicemail donation promo dialog
     * [CHAR LIMIT=64]
     */
    public static final int voicemail_donation_promo_title=0x7f11044f;
    /**
     * String used to display voicemails from unknown numbers in the voicemail tab.  [CHAR LIMIT=30]
     */
    public static final int voicemail_entry_unknown=0x7f110450;
    public static final int voicemail_error_activating_message=0x7f110451;
    public static final int voicemail_error_activating_title=0x7f110452;
    public static final int voicemail_error_activation_failed_message=0x7f110453;
    public static final int voicemail_error_activation_failed_title=0x7f110454;
    public static final int voicemail_error_bad_config_message=0x7f110455;
    public static final int voicemail_error_bad_config_title=0x7f110456;
    public static final int voicemail_error_communication_message=0x7f110457;
    public static final int voicemail_error_communication_title=0x7f110458;
    public static final int voicemail_error_inbox_almost_full_turn_archive_on_message=0x7f110459;
    public static final int voicemail_error_inbox_almost_full_turn_archive_on_title=0x7f11045a;
    public static final int voicemail_error_inbox_full_message=0x7f11045b;
    public static final int voicemail_error_inbox_full_title=0x7f11045c;
    public static final int voicemail_error_inbox_full_turn_archive_on_message=0x7f11045d;
    public static final int voicemail_error_inbox_full_turn_archive_on_title=0x7f11045e;
    public static final int voicemail_error_inbox_near_full_message=0x7f11045f;
    public static final int voicemail_error_inbox_near_full_title=0x7f110460;
    public static final int voicemail_error_no_data_cellular_required_message=0x7f110461;
    public static final int voicemail_error_no_data_message=0x7f110462;
    public static final int voicemail_error_no_data_title=0x7f110463;
    public static final int voicemail_error_no_signal_airplane_mode_message=0x7f110464;
    public static final int voicemail_error_no_signal_cellular_required_message=0x7f110465;
    public static final int voicemail_error_no_signal_message=0x7f110466;
    public static final int voicemail_error_no_signal_title=0x7f110467;
    public static final int voicemail_error_not_activate_no_signal_airplane_mode_message=0x7f110468;
    public static final int voicemail_error_not_activate_no_signal_message=0x7f110469;
    public static final int voicemail_error_not_activate_no_signal_title=0x7f11046a;
    public static final int voicemail_error_pin_not_set_message=0x7f11046b;
    public static final int voicemail_error_pin_not_set_title=0x7f11046c;
    public static final int voicemail_error_server_connection_message=0x7f11046d;
    public static final int voicemail_error_server_connection_title=0x7f11046e;
    public static final int voicemail_error_server_message=0x7f11046f;
    public static final int voicemail_error_server_title=0x7f110470;
    /**
     * Message to display whilst we are waiting for the content to be fetched. [CHAR LIMIT=40]
     */
    public static final int voicemail_fetching_content=0x7f110471;
    /**
     * Message to display if we fail to get content within a suitable time period. [CHAR LIMIT=40]
     */
    public static final int voicemail_fetching_timout=0x7f110472;
    /**
     * String used to display the default staring point of a voicemail
     */
    public static final int voicemail_media_player_inital_start_position=0x7f110473;
    /**
     * String used to display the state of the voicemail media player
     */
    public static final int voicemail_media_player_state=0x7f110474;
    /**
     * DO NOT TRANSLATE. Internal key for a voicemail notification preference.
     */
    public static final int voicemail_notifications_key=0x7f110475;
    /**
     * Voicemail notifications title. The user clicks on this preference to select
     * which sound to play and whether to vibrate when a voicemail notification is received.
     * [CHAR LIMIT=30]
     */
    public static final int voicemail_notifications_preference_title=0x7f110476;
    /**
     * String describing the "play/pause" button in the playback control used to listen to a
     * voicemail message.  Starts playback or pauses ongoing playback.
     * Note: AccessibilityServices uses this attribute to announce the purpose of the button.
     * [CHAR LIMIT=NONE]
     */
    public static final int voicemail_play_start_pause=0x7f110477;
    /**
     * Message to show when there is an error playing back the voicemail. [CHAR LIMIT=40]
     */
    public static final int voicemail_playback_error=0x7f110478;
    /**
     * Voicemail change PIN dialog title [CHAR LIMIT=40]
     */
    public static final int voicemail_set_pin_preference_title=0x7f110479;
    /**
     * Label for the voicemail settings section [CHAR LIMIT=30]
     */
    public static final int voicemail_settings_label=0x7f11047a;
    /**
     * Call settings screen, setting option name
     */
    public static final int voicemail_settings_title=0x7f11047b;
    /**
     * Title of the "Voicemail" settings screen, with a text label identifying which SIM the settings are for.
     */
    public static final int voicemail_settings_with_label=0x7f11047c;
    /**
     * String describing the "speaker off" button on the playback control used to listen to a
     * voicemail message.  When speaker is off, playback of the voicemail will occur through the
     * phone earpiece.
     * Note: AccessibilityServices uses this attribute to announce the purpose of the button.
     * [CHAR LIMIT=NONE]
     */
    public static final int voicemail_speaker_off=0x7f11047d;
    /**
     * String describing the "speaker on" button on the playback control used to listen to a
     * voicemail message.  When speaker is on, playback of the voicemail will occur through the
     * phone speaker.
     * Note: AccessibilityServices uses this attribute to announce the purpose of the button.
     * [CHAR LIMIT=NONE]
     */
    public static final int voicemail_speaker_on=0x7f11047e;
    /**
     * String used for displaying calls to the voicemail number in the call log
     */
    public static final int voicemail_string=0x7f11047f;
    /**
     * Label indicating who provided the voicemail transcription [CHAR LIMIT=64]
     */
    public static final int voicemail_transcription_branding_text=0x7f110480;
    /**
     * Label indicating that a voicemail transcription failed [CHAR LIMIT=64]
     */
    public static final int voicemail_transcription_failed=0x7f110481;
    /**
     * Label indicating that a voicemail transcription failed because it was in an
     * unsupported language [CHAR LIMIT=64]
     */
    public static final int voicemail_transcription_failed_language_not_supported=0x7f110482;
    /**
     * Label indicating that a voicemail transcription failed because no speech was detected
     * [CHAR LIMIT=64]
     */
    public static final int voicemail_transcription_failed_no_speech=0x7f110483;
    /**
     * Label indicating that a voicemail transcription is in progress [CHAR LIMIT=64]
     */
    public static final int voicemail_transcription_in_progress=0x7f110484;
    /**
     * Summary information for visual voicemail transcription setting [CHAR LIMIT=NONE]
     */
    public static final int voicemail_transcription_preference_summary_info=0x7f110485;
    /**
     * Prompt asking the user to rate the quality of the voicemail transcription
     * [CHAR LIMIT=30]
     */
    public static final int voicemail_transcription_rating=0x7f110486;
    /**
     * Message displayed after user has rated a voicemail transcription [CHAR LIMIT=30]
     */
    public static final int voicemail_transcription_rating_thanks=0x7f110487;
    /**
     * DO NOT TRANSLATE. Internal key for a visual voicemail archive preference.
     */
    public static final int voicemail_visual_voicemail_archive_key=0x7f110488;
    /**
     * Visual voicemail archive on/off title [CHAR LIMIT=40]
     */
    public static final int voicemail_visual_voicemail_auto_archive_switch_title=0x7f110489;
    public static final int voicemail_visual_voicemail_donation_key=0x7f11048a;
    /**
     * Title for visual voicemail setting that enables user to donate their voicemails for analysis.
     * [CHAR LIMIT=40]
     */
    public static final int voicemail_visual_voicemail_donation_switch_title=0x7f11048b;
    /**
     * DO NOT TRANSLATE. Internal key for a visual voicemail preference.
     */
    public static final int voicemail_visual_voicemail_key=0x7f11048c;
    /**
     * Visual voicemail on/off title [CHAR LIMIT=40]
     */
    public static final int voicemail_visual_voicemail_switch_title=0x7f11048d;
    public static final int voicemail_visual_voicemail_transcription_key=0x7f11048e;
    /**
     * Title for visual voicemail setting that enables users voicemails to be transcribed by Google.
     * [CHAR LIMIT=40]
     */
    public static final int voicemail_visual_voicemail_transcription_switch_title=0x7f11048f;
    public static final int vvm3_error_imap_error_message=0x7f110490;
    public static final int vvm3_error_imap_error_title=0x7f110491;
    public static final int vvm3_error_imap_getquota_error_message=0x7f110492;
    public static final int vvm3_error_imap_getquota_error_title=0x7f110493;
    public static final int vvm3_error_imap_select_error_message=0x7f110494;
    public static final int vvm3_error_imap_select_error_title=0x7f110495;
    public static final int vvm3_error_invalid_password_message=0x7f110496;
    public static final int vvm3_error_invalid_password_title=0x7f110497;
    public static final int vvm3_error_mailbox_not_initialized_message=0x7f110498;
    public static final int vvm3_error_mailbox_not_initialized_title=0x7f110499;
    public static final int vvm3_error_service_not_activated_message=0x7f11049a;
    public static final int vvm3_error_service_not_activated_title=0x7f11049b;
    public static final int vvm3_error_service_not_provisioned_message=0x7f11049c;
    public static final int vvm3_error_service_not_provisioned_title=0x7f11049d;
    public static final int vvm3_error_spg_dns_failure_message=0x7f11049e;
    public static final int vvm3_error_spg_dns_failure_title=0x7f11049f;
    public static final int vvm3_error_spg_no_cellular_message=0x7f1104a0;
    public static final int vvm3_error_spg_no_cellular_title=0x7f1104a1;
    public static final int vvm3_error_status_sms_timeout_message=0x7f1104a2;
    public static final int vvm3_error_status_sms_timeout_title=0x7f1104a3;
    public static final int vvm3_error_subscriber_blocked_message=0x7f1104a4;
    public static final int vvm3_error_subscriber_blocked_title=0x7f1104a5;
    public static final int vvm3_error_subscriber_unknown_message=0x7f1104a6;
    public static final int vvm3_error_subscriber_unknown_title=0x7f1104a7;
    public static final int vvm3_error_unknown_device_message=0x7f1104a8;
    public static final int vvm3_error_unknown_device_title=0x7f1104a9;
    public static final int vvm3_error_unknown_user_message=0x7f1104aa;
    public static final int vvm3_error_unknown_user_title=0x7f1104ab;
    public static final int vvm3_error_user_blocked_message=0x7f1104ac;
    public static final int vvm3_error_user_blocked_title=0x7f1104ad;
    public static final int vvm3_error_vmg_dns_failure_message=0x7f1104ae;
    public static final int vvm3_error_vmg_dns_failure_title=0x7f1104af;
    public static final int vvm3_error_vmg_no_cellular_message=0x7f1104b0;
    public static final int vvm3_error_vmg_no_cellular_title=0x7f1104b1;
    public static final int vvm3_error_vmg_timeout_message=0x7f1104b2;
    public static final int vvm3_error_vmg_timeout_title=0x7f1104b3;
    public static final int vvm3_error_vms_dns_failure_message=0x7f1104b4;
    public static final int vvm3_error_vms_dns_failure_title=0x7f1104b5;
    public static final int vvm3_error_vms_no_cellular_message=0x7f1104b6;
    public static final int vvm3_error_vms_no_cellular_title=0x7f1104b7;
    public static final int vvm3_error_vms_timeout_message=0x7f1104b8;
    public static final int vvm3_error_vms_timeout_title=0x7f1104b9;
    public static final int vvm_config_override_enabled_key=0x7f1104ba;
    public static final int vvm_config_override_load_current_key=0x7f1104bb;
    /**
     * Message to replace the transcription if a visual voicemail message is not supported
     */
    public static final int vvm_unsupported_message_format=0x7f1104bc;
    /**
     * In-call screen: body text of the dialog that appears when we encounter
     * the "wait" character in a phone number to be dialed; this dialog asks the
     * user if it's OK to send the numbers following the "wait".
     */
    public static final int wait_prompt_str=0x7f1104bd;
    /**
     * A default message to send with a phone call. [CHAR LIMIT=27]
     */
    public static final int want_to_chat=0x7f1104be;
    public static final int wb_amr_format=0x7f1104bf;
    /**
     * Header that expands to list all website types when editing a website of a contact
     * [CHAR LIMIT=20]
     */
    public static final int websiteLabelsGroup=0x7f1104c0;
  }
  public static final class style {
    public static final int ActionModeStyle=0x7f120000;
    /**
     * Colors our actionbar text in action mode to dialer white text color.
     */
    public static final int ActionModeTitleTextStyle=0x7f120001;
    public static final int AfterCallDialogStyle=0x7f120002;
    public static final int AfterCallNotificationTheme=0x7f120003;
    public static final int AlertDialog_AppCompat=0x7f120004;
    public static final int AlertDialog_AppCompat_Light=0x7f120005;
    /**
     * Used to style all Dialer's AlertDialogs. Every button is awarded this for free if the parent
     * activity's theme extends from Dialer.ThemeBase(.NoActionBar) or doesn't specify a theme.
     */
    public static final int AlertDialogTheme=0x7f120006;
    public static final int Animation_AppCompat_Dialog=0x7f120007;
    public static final int Animation_AppCompat_DropDownUp=0x7f120008;
    public static final int Animation_AppCompat_Tooltip=0x7f120009;
    public static final int Animation_Design_BottomSheetDialog=0x7f12000a;
    public static final int Answer_Button=0x7f12000b;
    public static final int Answer_Button_Answer=0x7f12000c;
    public static final int Answer_Button_Decline=0x7f12000d;
    public static final int AudioRouteItem=0x7f12000e;
    public static final int BackgroundOnlyTheme=0x7f12000f;
    public static final int Base_AlertDialog_AppCompat=0x7f120010;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f120011;
    public static final int Base_Animation_AppCompat_Dialog=0x7f120012;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f120013;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f120014;
    public static final int Base_CardView=0x7f120015;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f120016;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f120017;
    public static final int Base_TextAppearance_AppCompat=0x7f120018;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f120019;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f12001a;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f12001b;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f12001c;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f12001d;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f12001e;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f12001f;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f120020;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f120021;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f120022;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f120023;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f120024;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f120025;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f120026;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f120027;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f120028;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f120029;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f12002a;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f12002b;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f12002c;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f12002d;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f12002e;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f12002f;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f120030;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f120031;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f120032;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f120033;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f120034;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f120035;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f120036;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f120037;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f120038;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f120039;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f12003a;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f12003b;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f12003c;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f12003d;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f12003e;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f12003f;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f120040;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f120041;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f120042;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f120043;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f120044;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f120045;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f120046;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f120047;
    public static final int Base_Theme_AppCompat=0x7f120048;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f120049;
    public static final int Base_Theme_AppCompat_Dialog=0x7f12004a;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f12004b;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f12004c;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f12004d;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f12004e;
    public static final int Base_Theme_AppCompat_Light=0x7f12004f;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f120050;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f120051;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f120052;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f120053;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f120054;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f120055;
    public static final int Base_Theme_MaterialComponents=0x7f120056;
    public static final int Base_Theme_MaterialComponents_Bridge=0x7f120057;
    public static final int Base_Theme_MaterialComponents_CompactMenu=0x7f120058;
    public static final int Base_Theme_MaterialComponents_Dialog=0x7f120059;
    public static final int Base_Theme_MaterialComponents_Dialog_Alert=0x7f12005a;
    public static final int Base_Theme_MaterialComponents_Dialog_FixedSize=0x7f12005b;
    public static final int Base_Theme_MaterialComponents_Dialog_MinWidth=0x7f12005c;
    public static final int Base_Theme_MaterialComponents_DialogWhenLarge=0x7f12005d;
    public static final int Base_Theme_MaterialComponents_Light=0x7f12005e;
    public static final int Base_Theme_MaterialComponents_Light_Bridge=0x7f12005f;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar=0x7f120060;
    public static final int Base_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f120061;
    public static final int Base_Theme_MaterialComponents_Light_Dialog=0x7f120062;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_Alert=0x7f120063;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_FixedSize=0x7f120064;
    public static final int Base_Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f120065;
    public static final int Base_Theme_MaterialComponents_Light_DialogWhenLarge=0x7f120066;
    public static final int Base_ThemeOverlay_AppCompat=0x7f120067;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f120068;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f120069;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f12006a;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f12006b;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f12006c;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f12006d;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog=0x7f12006e;
    public static final int Base_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f12006f;
    public static final int Base_V14_Theme_MaterialComponents=0x7f120070;
    public static final int Base_V14_Theme_MaterialComponents_Bridge=0x7f120071;
    public static final int Base_V14_Theme_MaterialComponents_Dialog=0x7f120072;
    public static final int Base_V14_Theme_MaterialComponents_Light=0x7f120073;
    public static final int Base_V14_Theme_MaterialComponents_Light_Bridge=0x7f120074;
    public static final int Base_V14_Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f120075;
    public static final int Base_V14_Theme_MaterialComponents_Light_Dialog=0x7f120076;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog=0x7f120077;
    public static final int Base_V14_ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f120078;
    public static final int Base_V21_Theme_AppCompat=0x7f120079;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f12007a;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f12007b;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f12007c;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f12007d;
    public static final int Base_V22_Theme_AppCompat=0x7f12007e;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f12007f;
    public static final int Base_V23_Theme_AppCompat=0x7f120080;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f120081;
    public static final int Base_V26_Theme_AppCompat=0x7f120082;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f120083;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f120084;
    public static final int Base_V28_Theme_AppCompat=0x7f120085;
    public static final int Base_V28_Theme_AppCompat_Light=0x7f120086;
    public static final int Base_V7_Theme_AppCompat=0x7f120087;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f120088;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f120089;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f12008a;
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f12008b;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f12008c;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f12008d;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f12008e;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f12008f;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f120090;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f120091;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f120092;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f120093;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f120094;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f120095;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f120096;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f120097;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f120098;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f120099;
    public static final int Base_Widget_AppCompat_Button=0x7f12009a;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f12009b;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f12009c;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f12009d;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f12009e;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f12009f;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f1200a0;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f1200a1;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f1200a2;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f1200a3;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f1200a4;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f1200a5;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f1200a6;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f1200a7;
    public static final int Base_Widget_AppCompat_EditText=0x7f1200a8;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f1200a9;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f1200aa;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f1200ab;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f1200ac;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f1200ad;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f1200ae;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f1200af;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f1200b0;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f1200b1;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f1200b2;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f1200b3;
    public static final int Base_Widget_AppCompat_ListView=0x7f1200b4;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f1200b5;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f1200b6;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f1200b7;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f1200b8;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f1200b9;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f1200ba;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f1200bb;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f1200bc;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f1200bd;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f1200be;
    public static final int Base_Widget_AppCompat_SearchView=0x7f1200bf;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f1200c0;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f1200c1;
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f1200c2;
    public static final int Base_Widget_AppCompat_Spinner=0x7f1200c3;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f1200c4;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f1200c5;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f1200c6;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1200c7;
    public static final int Base_Widget_Design_TabLayout=0x7f1200c8;
    public static final int Base_Widget_MaterialComponents_Chip=0x7f1200c9;
    public static final int Base_Widget_MaterialComponents_TextInputEditText=0x7f1200ca;
    public static final int Base_Widget_MaterialComponents_TextInputLayout=0x7f1200cb;
    public static final int BaseTheme=0x7f1200cc;
    public static final int BaseTheme_Dark=0x7f1200cd;
    public static final int BlockedNumbersDescriptionTextStyle=0x7f1200ce;
    public static final int BottomRowIcon=0x7f1200cf;
    public static final int ButtonTheme=0x7f1200d0;
    /**
     * CallContactsActivity is an invisible trampoline activity for launcher shortcuts to jump into
     * the calling activity. When the user taps a shortcut they will be taken to either the phone
     * number disambiguation dialog or directly into the incall UI via this activity, but this
     * activity itself should be completely transparent to the user.
     * Note that this must inherit from Theme.AppCompat. We inherit from Theme.AppCompat.Light so
     * that the colors of the disambiguation dialog match the colors when it is shown via the
     * favorites tiles tab.
     */
    public static final int CallContactsTheme=0x7f1200d1;
    public static final int CallDetailsActionItemStyle=0x7f1200d2;
    public static final int CallLogActionIconStyle=0x7f1200d3;
    public static final int CallLogActionStyle=0x7f1200d4;
    public static final int CallLogActionSupportTextStyle=0x7f1200d5;
    public static final int CallLogActionTextStyle=0x7f1200d6;
    /**
     * Ideally we would make a callLogCardStyle attribute but we don't want to expand dialer/app
     */
    public static final int CallLogCardStyle=0x7f1200d7;
    public static final int CallStatsBarStyle=0x7f1200d8;
    public static final int CardView=0x7f1200d9;
    public static final int CardView_Dark=0x7f1200da;
    public static final int CardView_Light=0x7f1200db;
    /**
     * TextView style used for headers.
     * This is similar to ?android:attr/listSeparatorTextView but uses different
     * background and text color. See also android:style/Widget.Holo.TextView.ListSeparator
     * (which is private, so we cannot specify it as a parent style).
     */
    public static final int ContactListSeparatorTextViewStyle=0x7f1200dc;
    public static final int DeviceIdBody=0x7f1200dd;
    /**
     * Update to Theme.AppCompat.Light.NoActionBar once we no longer depend on ActionBars.
     */
    public static final int Dialer=0x7f1200de;
    public static final int Dialer_Dark=0x7f1200df;
    /**
     * Activities and Applications should inherit from one of the themes above.
     */
    public static final int Dialer_Dark_ThemeBase=0x7f1200e0;
    /**
     * Deprecated: ActionBars are clunky and Toolbar (along with Dialer.ThemeBase.NoActionBar)
     * should be used in favor
     */
    public static final int Dialer_Dark_ThemeBase_ActionBar=0x7f1200e1;
    public static final int Dialer_Dark_ThemeBase_NoActionBar=0x7f1200e2;
    public static final int Dialer_Incall_TextAppearance=0x7f1200e3;
    public static final int Dialer_Incall_TextAppearance_Hint=0x7f1200e4;
    public static final int Dialer_Incall_TextAppearance_Label=0x7f1200e5;
    public static final int Dialer_Incall_TextAppearance_Large=0x7f1200e6;
    public static final int Dialer_Incall_TextAppearance_Message=0x7f1200e7;
    public static final int Dialer_Incall_TextAppearance_RttMessage=0x7f1200e8;
    /**
     * - These are official UX approved text styles and all TextViews should inherit from one of these.
     * - If you think you don't see the style you need, double check with your UX designer.
     */
    public static final int Dialer_TextAppearance_Header1=0x7f1200e9;
    public static final int Dialer_TextAppearance_Header1_Ellipsize=0x7f1200ea;
    public static final int Dialer_TextAppearance_Header2=0x7f1200eb;
    public static final int Dialer_TextAppearance_Header2_Ellipsize=0x7f1200ec;
    public static final int Dialer_TextAppearance_OVERLINE=0x7f1200ed;
    public static final int Dialer_TextAppearance_OVERLINE_Ellipsize=0x7f1200ee;
    public static final int Dialer_TextAppearance_Primary=0x7f1200ef;
    public static final int Dialer_TextAppearance_Primary_Ellipsize=0x7f1200f0;
    public static final int Dialer_TextAppearance_Secondary=0x7f1200f1;
    public static final int Dialer_TextAppearance_Secondary_Ellipsize=0x7f1200f2;
    public static final int Dialer_TextAppearance_Secondary2=0x7f1200f3;
    public static final int Dialer_TextAppearance_Secondary2_Ellipsize=0x7f1200f4;
    public static final int Dialer_TextAppearance_SubHeader=0x7f1200f5;
    public static final int Dialer_TextAppearance_SubHeader_Ellipsize=0x7f1200f6;
    /**
     * Activities and Applications should inherit from one of the themes above.
     */
    public static final int Dialer_ThemeBase=0x7f1200f7;
    /**
     * Deprecated: ActionBars are clunky and Toolbar (along with Dialer.ThemeBase.NoActionBar)
     * should be used in favor
     */
    public static final int Dialer_ThemeBase_ActionBar=0x7f1200f8;
    public static final int Dialer_ThemeBase_NoActionBar=0x7f1200f9;
    /**
     * Used to style all Dialer's action bars. Every actionbar is awarded this for free if the parent
     * activity's theme extends from Dialer.ThemeBase.ActionBar or doesn't specify a theme.
     */
    public static final int DialerActionBarBaseStyle=0x7f1200fa;
    public static final int DialerActionBarBaseTheme=0x7f1200fb;
    /**
     * Used to style all Dialer's button's text. Every button is awarded this for free if the parent
     * activity's theme extends from Dialer.ThemeBase(.NoActionBar) or doesn't specify a theme.
     */
    public static final int DialerButtonTextStyle=0x7f1200fc;
    /**
     * This Checkbox style helps align checkboxes with the common list element layout(Image + text)
     */
    public static final int DialerCheckboxStyle=0x7f1200fd;
    public static final int DialerFlatButtonStyle=0x7f1200fe;
    /**
     * is not colored white, to draw more attention to it.
     */
    public static final int DialerPrimaryFlatButtonStyle=0x7f1200ff;
    public static final int Dialpad=0x7f120100;
    public static final int Dialpad_Themed=0x7f120101;
    public static final int DialpadContainer=0x7f120102;
    public static final int DialpadKeyButtonStyle=0x7f120103;
    public static final int DialpadKeyInternalLayoutStyle=0x7f120104;
    public static final int DialpadKeyLettersStyle=0x7f120105;
    public static final int DialpadKeyNumberStyle=0x7f120106;
    public static final int DialpadKeyPoundStyle=0x7f120107;
    public static final int DialpadKeyStarStyle=0x7f120108;
    public static final int DialpadSpaceStyle=0x7f120109;
    public static final int DialpadTheme=0x7f12010a;
    /**
     * Text style for tabs.
     */
    public static final int DialtactsActionBarTabTextStyle=0x7f12010b;
    /**
     * Text in the action bar at the top of the screen
     */
    public static final int DialtactsActionBarTitleText=0x7f12010c;
    public static final int DialtactsSearchBarThemeOverlay=0x7f12010d;
    public static final int DialtactsTheme=0x7f12010e;
    public static final int DirectoryHeader=0x7f12010f;
    public static final int DirectoryHeaderStyle=0x7f120110;
    public static final int ErrorActionDeclineStyle=0x7f120111;
    public static final int ErrorActionStyle=0x7f120112;
    public static final int FullWidthDivider=0x7f120113;
    /**
     * A derivative project can extend these themes to customize the application theme without
     * affecting the base theme
     */
    public static final int HelplineTheme=0x7f120114;
    public static final int HelplineTheme_Dark=0x7f120115;
    public static final int HistoryItemBottomSheet=0x7f120116;
    public static final int HistoryItemBottomSheet_Base=0x7f120117;
    public static final int HistoryItemBottomSheet_BottomSheetStyle=0x7f120118;
    public static final int InCallDialpad=0x7f120119;
    public static final int Incall_Button_End=0x7f12011a;
    public static final int Incall_Button_VideoCall=0x7f12011b;
    public static final int LaunchTheme=0x7f12011c;
    public static final int ListViewStyle=0x7f12011d;
    public static final int LocationAddressTextStyle=0x7f12011e;
    public static final int LocationAddressTitleTextStyle=0x7f12011f;
    public static final int LocationErrorTextStyle=0x7f120120;
    public static final int LocationLatLongTextStyle=0x7f120121;
    public static final int LocationLoadingTextStyle=0x7f120122;
    /**
     * Colors our actionbar in action mode to dialer theme color.
     */
    public static final int MainActionModeStyle=0x7f120123;
    /**
     * TODO(a bug): refactor into dialer/theme
     */
    public static final int MainActivityTheme=0x7f120124;
    /**
     * TODO(a bug): refactor into dialer/theme
     */
    public static final int MainActivityTheme_Dark=0x7f120125;
    /**
     * Used as a procy for values-v27/styles.xml
     */
    public static final int MainActivityThemeBase=0x7f120126;
    public static final int MainActivityThemeBase_Dark=0x7f120127;
    public static final int ManageBlockedNumbersActionBarStyle=0x7f120128;
    public static final int ManageBlockedNumbersStyle=0x7f120129;
    public static final int OverflowMenu=0x7f12012a;
    public static final int Platform_AppCompat=0x7f12012b;
    public static final int Platform_AppCompat_Light=0x7f12012c;
    public static final int Platform_MaterialComponents=0x7f12012d;
    public static final int Platform_MaterialComponents_Dialog=0x7f12012e;
    public static final int Platform_MaterialComponents_Light=0x7f12012f;
    public static final int Platform_MaterialComponents_Light_Dialog=0x7f120130;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f120131;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f120132;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f120133;
    public static final int Platform_V21_AppCompat=0x7f120134;
    public static final int Platform_V21_AppCompat_Light=0x7f120135;
    public static final int Platform_V25_AppCompat=0x7f120136;
    public static final int Platform_V25_AppCompat_Light=0x7f120137;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f120138;
    public static final int PromoLinkStyle=0x7f120139;
    public static final int RaisedErrorActionStyle=0x7f12013a;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f12013b;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f12013c;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f12013d;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f12013e;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f12013f;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x7f120140;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x7f120141;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f120142;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x7f120143;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f120144;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f120145;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f120146;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f120147;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f120148;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f120149;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f12014a;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f12014b;
    public static final int RttButton=0x7f12014c;
    public static final int RttTranscriptBubble=0x7f12014d;
    public static final int RttTranscriptBubble_Local=0x7f12014e;
    public static final int RttTranscriptBubble_Remote=0x7f12014f;
    public static final int RttTranscriptBubble_Timestamp=0x7f120150;
    public static final int RttTranscriptLink=0x7f120151;
    public static final int RttTranscriptMessage=0x7f120152;
    public static final int SectionHeaderStyle=0x7f120153;
    /**
     * Style applied to the "Settings" screen.  Keep in sync with SettingsLight in Telephony.
     */
    public static final int SettingsStyle=0x7f120154;
    public static final int SpeedDialContextMenuItem=0x7f120155;
    public static final int SpeedDialContextMenuItem_NoDrawableTint=0x7f120156;
    /**
     * TODO(a bug): This is only actively used in empty_content_view.xml. Move it there.
     */
    public static final int TextActionStyle=0x7f120157;
    public static final int TextAppearance_AppCompat=0x7f120158;
    public static final int TextAppearance_AppCompat_Body1=0x7f120159;
    public static final int TextAppearance_AppCompat_Body2=0x7f12015a;
    public static final int TextAppearance_AppCompat_Button=0x7f12015b;
    public static final int TextAppearance_AppCompat_Caption=0x7f12015c;
    public static final int TextAppearance_AppCompat_Display1=0x7f12015d;
    public static final int TextAppearance_AppCompat_Display2=0x7f12015e;
    public static final int TextAppearance_AppCompat_Display3=0x7f12015f;
    public static final int TextAppearance_AppCompat_Display4=0x7f120160;
    public static final int TextAppearance_AppCompat_Headline=0x7f120161;
    public static final int TextAppearance_AppCompat_Inverse=0x7f120162;
    public static final int TextAppearance_AppCompat_Large=0x7f120163;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f120164;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f120165;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f120166;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f120167;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f120168;
    public static final int TextAppearance_AppCompat_Medium=0x7f120169;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f12016a;
    public static final int TextAppearance_AppCompat_Menu=0x7f12016b;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f12016c;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f12016d;
    public static final int TextAppearance_AppCompat_Small=0x7f12016e;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f12016f;
    public static final int TextAppearance_AppCompat_Subhead=0x7f120170;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f120171;
    public static final int TextAppearance_AppCompat_Title=0x7f120172;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f120173;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f120174;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f120175;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f120176;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f120177;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f120178;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f120179;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f12017a;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f12017b;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f12017c;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f12017d;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f12017e;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f12017f;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f120180;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f120181;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f120182;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f120183;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f120184;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f120185;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f120186;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f120187;
    public static final int TextAppearance_CallStatsCategoryTitle=0x7f120188;
    public static final int TextAppearance_Compat_Notification=0x7f120189;
    public static final int TextAppearance_Compat_Notification_Info=0x7f12018a;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f12018b;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f12018c;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f12018d;
    public static final int TextAppearance_Compat_Notification_Media=0x7f12018e;
    public static final int TextAppearance_Compat_Notification_Time=0x7f12018f;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f120190;
    public static final int TextAppearance_Compat_Notification_Title=0x7f120191;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f120192;
    public static final int TextAppearance_Design_CollapsingToolbar_Expanded=0x7f120193;
    public static final int TextAppearance_Design_Counter=0x7f120194;
    public static final int TextAppearance_Design_Counter_Overflow=0x7f120195;
    public static final int TextAppearance_Design_Error=0x7f120196;
    public static final int TextAppearance_Design_HelperText=0x7f120197;
    public static final int TextAppearance_Design_Hint=0x7f120198;
    public static final int TextAppearance_Design_Snackbar_Message=0x7f120199;
    public static final int TextAppearance_Design_Tab=0x7f12019a;
    public static final int TextAppearance_MaterialComponents_Body1=0x7f12019b;
    public static final int TextAppearance_MaterialComponents_Body2=0x7f12019c;
    public static final int TextAppearance_MaterialComponents_Button=0x7f12019d;
    public static final int TextAppearance_MaterialComponents_Caption=0x7f12019e;
    public static final int TextAppearance_MaterialComponents_Chip=0x7f12019f;
    public static final int TextAppearance_MaterialComponents_Headline1=0x7f1201a0;
    public static final int TextAppearance_MaterialComponents_Headline2=0x7f1201a1;
    public static final int TextAppearance_MaterialComponents_Headline3=0x7f1201a2;
    public static final int TextAppearance_MaterialComponents_Headline4=0x7f1201a3;
    public static final int TextAppearance_MaterialComponents_Headline5=0x7f1201a4;
    public static final int TextAppearance_MaterialComponents_Headline6=0x7f1201a5;
    public static final int TextAppearance_MaterialComponents_Overline=0x7f1201a6;
    public static final int TextAppearance_MaterialComponents_Subtitle1=0x7f1201a7;
    public static final int TextAppearance_MaterialComponents_Subtitle2=0x7f1201a8;
    public static final int TextAppearance_MaterialComponents_Tab=0x7f1201a9;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f1201aa;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f1201ab;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f1201ac;
    public static final int TextAppearanceMedium=0x7f1201ad;
    public static final int TextAppearanceSmall=0x7f1201ae;
    public static final int Theme_AppCompat=0x7f1201af;
    public static final int Theme_AppCompat_CallComposer=0x7f1201b0;
    public static final int Theme_AppCompat_CompactMenu=0x7f1201b1;
    public static final int Theme_AppCompat_DayNight=0x7f1201b2;
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f1201b3;
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f1201b4;
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f1201b5;
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f1201b6;
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f1201b7;
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f1201b8;
    public static final int Theme_AppCompat_Dialog=0x7f1201b9;
    public static final int Theme_AppCompat_Dialog_Alert=0x7f1201ba;
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f1201bb;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f1201bc;
    public static final int Theme_AppCompat_Light=0x7f1201bd;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f1201be;
    public static final int Theme_AppCompat_Light_Dialog=0x7f1201bf;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f1201c0;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f1201c1;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f1201c2;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f1201c3;
    public static final int Theme_AppCompat_NoActionBar=0x7f1201c4;
    /**
     * TODO(a bug): investigate making this style's parent Dialer.ThemeBase.NoActionBar
     */
    public static final int Theme_AppCompat_Translucent=0x7f1201c5;
    public static final int Theme_CallSubjectDialogTheme=0x7f1201c6;
    public static final int Theme_Design=0x7f1201c7;
    public static final int Theme_Design_BottomSheetDialog=0x7f1201c8;
    public static final int Theme_Design_Light=0x7f1201c9;
    public static final int Theme_Design_Light_BottomSheetDialog=0x7f1201ca;
    public static final int Theme_Design_Light_NoActionBar=0x7f1201cb;
    public static final int Theme_Design_NoActionBar=0x7f1201cc;
    public static final int Theme_InCallScreen=0x7f1201cd;
    /**
     * Theme for the InCallActivity activity. Should have a transparent background for the
     * circular reveal animation for a new outgoing call to work correctly. We don't just use
     * Theme.Black.NoTitleBar directly, since we want any popups or dialogs from the
     * InCallActivity to have the correct Material style.
     */
    public static final int Theme_InCallScreen_Light=0x7f1201ce;
    public static final int Theme_InCallScreen_ManageConference=0x7f1201cf;
    public static final int Theme_Incall_DialogHolder=0x7f1201d0;
    public static final int Theme_MaterialComponents=0x7f1201d1;
    public static final int Theme_MaterialComponents_BottomSheetDialog=0x7f1201d2;
    public static final int Theme_MaterialComponents_Bridge=0x7f1201d3;
    public static final int Theme_MaterialComponents_CompactMenu=0x7f1201d4;
    public static final int Theme_MaterialComponents_Dialog=0x7f1201d5;
    public static final int Theme_MaterialComponents_Dialog_Alert=0x7f1201d6;
    public static final int Theme_MaterialComponents_Dialog_MinWidth=0x7f1201d7;
    public static final int Theme_MaterialComponents_DialogWhenLarge=0x7f1201d8;
    public static final int Theme_MaterialComponents_Light=0x7f1201d9;
    public static final int Theme_MaterialComponents_Light_BottomSheetDialog=0x7f1201da;
    public static final int Theme_MaterialComponents_Light_Bridge=0x7f1201db;
    public static final int Theme_MaterialComponents_Light_DarkActionBar=0x7f1201dc;
    public static final int Theme_MaterialComponents_Light_DarkActionBar_Bridge=0x7f1201dd;
    public static final int Theme_MaterialComponents_Light_Dialog=0x7f1201de;
    public static final int Theme_MaterialComponents_Light_Dialog_Alert=0x7f1201df;
    public static final int Theme_MaterialComponents_Light_Dialog_MinWidth=0x7f1201e0;
    public static final int Theme_MaterialComponents_Light_DialogWhenLarge=0x7f1201e1;
    public static final int Theme_MaterialComponents_Light_NoActionBar=0x7f1201e2;
    public static final int Theme_MaterialComponents_Light_NoActionBar_Bridge=0x7f1201e3;
    public static final int Theme_MaterialComponents_NoActionBar=0x7f1201e4;
    public static final int Theme_MaterialComponents_NoActionBar_Bridge=0x7f1201e5;
    /**
     * We don't want to style this, need to discuss with Yen why this was used instead of a default theme
     */
    public static final int Theme_PreCall_DialogHolder=0x7f1201e6;
    public static final int ThemeOverlay_AppCompat=0x7f1201e7;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f1201e8;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f1201e9;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f1201ea;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f1201eb;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f1201ec;
    public static final int ThemeOverlay_AppCompat_Light=0x7f1201ed;
    public static final int ThemeOverlay_MaterialComponents=0x7f1201ee;
    public static final int ThemeOverlay_MaterialComponents_ActionBar=0x7f1201ef;
    public static final int ThemeOverlay_MaterialComponents_Dark=0x7f1201f0;
    public static final int ThemeOverlay_MaterialComponents_Dark_ActionBar=0x7f1201f1;
    public static final int ThemeOverlay_MaterialComponents_Dialog=0x7f1201f2;
    public static final int ThemeOverlay_MaterialComponents_Dialog_Alert=0x7f1201f3;
    public static final int ThemeOverlay_MaterialComponents_Light=0x7f1201f4;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText=0x7f1201f5;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox=0x7f1201f6;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f1201f7;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox=0x7f1201f8;
    public static final int ThemeOverlay_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f1201f9;
    public static final int TosButtonStyle=0x7f1201fa;
    public static final int TosDetailsTextStyle=0x7f1201fb;
    public static final int TosLinkStyle=0x7f1201fc;
    public static final int TosTextStyle=0x7f1201fd;
    public static final int TosTitleStyle=0x7f1201fe;
    public static final int TranscriptionQualityRating=0x7f1201ff;
    public static final int TranscriptionQualityRatingIcon=0x7f120200;
    public static final int TransparentTheme=0x7f120201;
    public static final int VideoPreviewHolder=0x7f120202;
    public static final int VoicemailPlaybackLayoutButtonStyle=0x7f120203;
    public static final int Widget_AppCompat_ActionBar=0x7f120204;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f120205;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f120206;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f120207;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f120208;
    public static final int Widget_AppCompat_ActionButton=0x7f120209;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f12020a;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f12020b;
    public static final int Widget_AppCompat_ActionMode=0x7f12020c;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f12020d;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f12020e;
    public static final int Widget_AppCompat_Button=0x7f12020f;
    public static final int Widget_AppCompat_Button_Borderless=0x7f120210;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f120211;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f120212;
    public static final int Widget_AppCompat_Button_Colored=0x7f120213;
    public static final int Widget_AppCompat_Button_Small=0x7f120214;
    public static final int Widget_AppCompat_ButtonBar=0x7f120215;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f120216;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f120217;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f120218;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f120219;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f12021a;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f12021b;
    public static final int Widget_AppCompat_EditText=0x7f12021c;
    public static final int Widget_AppCompat_ImageButton=0x7f12021d;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f12021e;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f12021f;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f120220;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f120221;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f120222;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f120223;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f120224;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f120225;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f120226;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f120227;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f120228;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f120229;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f12022a;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f12022b;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f12022c;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f12022d;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f12022e;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f12022f;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f120230;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f120231;
    public static final int Widget_AppCompat_Light_SearchView=0x7f120232;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f120233;
    public static final int Widget_AppCompat_ListMenuView=0x7f120234;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f120235;
    public static final int Widget_AppCompat_ListView=0x7f120236;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f120237;
    public static final int Widget_AppCompat_ListView_Menu=0x7f120238;
    public static final int Widget_AppCompat_PopupMenu=0x7f120239;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f12023a;
    public static final int Widget_AppCompat_PopupWindow=0x7f12023b;
    public static final int Widget_AppCompat_ProgressBar=0x7f12023c;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f12023d;
    public static final int Widget_AppCompat_RatingBar=0x7f12023e;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f12023f;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f120240;
    public static final int Widget_AppCompat_SearchView=0x7f120241;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f120242;
    public static final int Widget_AppCompat_SeekBar=0x7f120243;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f120244;
    public static final int Widget_AppCompat_Spinner=0x7f120245;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f120246;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f120247;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f120248;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f120249;
    public static final int Widget_AppCompat_Toolbar=0x7f12024a;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f12024b;
    public static final int Widget_Compat_NotificationActionContainer=0x7f12024c;
    public static final int Widget_Compat_NotificationActionText=0x7f12024d;
    public static final int Widget_Design_AppBarLayout=0x7f12024e;
    public static final int Widget_Design_BottomNavigationView=0x7f12024f;
    public static final int Widget_Design_BottomSheet_Modal=0x7f120250;
    public static final int Widget_Design_CollapsingToolbar=0x7f120251;
    public static final int Widget_Design_FloatingActionButton=0x7f120252;
    public static final int Widget_Design_NavigationView=0x7f120253;
    public static final int Widget_Design_ScrimInsetsFrameLayout=0x7f120254;
    public static final int Widget_Design_Snackbar=0x7f120255;
    public static final int Widget_Design_TabLayout=0x7f120256;
    public static final int Widget_Design_TextInputLayout=0x7f120257;
    public static final int Widget_MaterialComponents_BottomAppBar=0x7f120258;
    public static final int Widget_MaterialComponents_BottomAppBar_Colored=0x7f120259;
    public static final int Widget_MaterialComponents_BottomNavigationView=0x7f12025a;
    public static final int Widget_MaterialComponents_BottomNavigationView_Colored=0x7f12025b;
    public static final int Widget_MaterialComponents_BottomSheet_Modal=0x7f12025c;
    public static final int Widget_MaterialComponents_Button=0x7f12025d;
    public static final int Widget_MaterialComponents_Button_Icon=0x7f12025e;
    public static final int Widget_MaterialComponents_Button_OutlinedButton=0x7f12025f;
    public static final int Widget_MaterialComponents_Button_OutlinedButton_Icon=0x7f120260;
    public static final int Widget_MaterialComponents_Button_TextButton=0x7f120261;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog=0x7f120262;
    public static final int Widget_MaterialComponents_Button_TextButton_Dialog_Icon=0x7f120263;
    public static final int Widget_MaterialComponents_Button_TextButton_Icon=0x7f120264;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton=0x7f120265;
    public static final int Widget_MaterialComponents_Button_UnelevatedButton_Icon=0x7f120266;
    public static final int Widget_MaterialComponents_CardView=0x7f120267;
    public static final int Widget_MaterialComponents_Chip_Action=0x7f120268;
    public static final int Widget_MaterialComponents_Chip_Choice=0x7f120269;
    public static final int Widget_MaterialComponents_Chip_Entry=0x7f12026a;
    public static final int Widget_MaterialComponents_Chip_Filter=0x7f12026b;
    public static final int Widget_MaterialComponents_ChipGroup=0x7f12026c;
    public static final int Widget_MaterialComponents_FloatingActionButton=0x7f12026d;
    public static final int Widget_MaterialComponents_NavigationView=0x7f12026e;
    public static final int Widget_MaterialComponents_Snackbar=0x7f12026f;
    public static final int Widget_MaterialComponents_Snackbar_FullWidth=0x7f120270;
    public static final int Widget_MaterialComponents_TabLayout=0x7f120271;
    public static final int Widget_MaterialComponents_TabLayout_Colored=0x7f120272;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox=0x7f120273;
    public static final int Widget_MaterialComponents_TextInputEditText_FilledBox_Dense=0x7f120274;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox=0x7f120275;
    public static final int Widget_MaterialComponents_TextInputEditText_OutlinedBox_Dense=0x7f120276;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox=0x7f120277;
    public static final int Widget_MaterialComponents_TextInputLayout_FilledBox_Dense=0x7f120278;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox=0x7f120279;
    public static final int Widget_MaterialComponents_TextInputLayout_OutlinedBox_Dense=0x7f12027a;
    public static final int Widget_MaterialComponents_Toolbar=0x7f12027b;
    public static final int Widget_Support_CoordinatorLayout=0x7f12027c;
    public static final int message_composer_textview=0x7f12027d;
    public static final int phoneaccount_textview=0x7f12027e;
    public static final int phoneaccount_textview_unread_call=0x7f12027f;
    public static final int primary_textview=0x7f120280;
    public static final int primary_textview_unread_call=0x7f120281;
    public static final int secondary_textview=0x7f120282;
    public static final int secondary_textview_unread_call=0x7f120283;
    public static final int voicemail_media_player_buttons=0x7f120284;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.android.dialer:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.android.dialer:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.android.dialer:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.android.dialer:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.android.dialer:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.android.dialer:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.android.dialer:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.android.dialer:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.android.dialer:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.android.dialer:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.android.dialer:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.android.dialer:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.android.dialer:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height com.android.dialer:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.android.dialer:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.android.dialer:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.android.dialer:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.android.dialer:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.android.dialer:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.android.dialer:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.android.dialer:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.android.dialer:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.android.dialer:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.android.dialer:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.android.dialer:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.android.dialer:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.android.dialer:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.android.dialer:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.android.dialer:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f040035, 0x7f040037, 0x7f040038, 0x7f0400a6, 
      0x7f0400a7, 0x7f0400a8, 0x7f0400a9, 0x7f0400aa, 
      0x7f0400ab, 0x7f0400b9, 0x7f0400cd, 0x7f0400ce, 
      0x7f0400d9, 0x7f040105, 0x7f04010a, 0x7f04010f, 
      0x7f040110, 0x7f040112, 0x7f04011e, 0x7f040128, 
      0x7f040165, 0x7f040172, 0x7f040184, 0x7f040189, 
      0x7f04018a, 0x7f0401be, 0x7f0401c1, 0x7f040206, 
      0x7f040210
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.android.dialer:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.android.dialer:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.android.dialer:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.android.dialer:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.android.dialer:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.android.dialer:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f040035, 0x7f040037, 0x7f040084, 0x7f040105, 
      0x7f0401c1, 0x7f040210
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.android.dialer:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.android.dialer:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f0400de, 0x7f04011f
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen com.android.dialer:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.android.dialer:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.android.dialer:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.android.dialer:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.android.dialer:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.android.dialer:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.android.dialer:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x7f040058, 0x7f040059, 0x7f040142, 
      0x7f040143, 0x7f04016f, 0x7f0401a6, 0x7f0401a7
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:buttonIconDimen
     */
    public static final int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:listLayout
     */
    public static final int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:showTitle
     */
    public static final int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AppBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_touchscreenBlocksFocus android:touchscreenBlocksFocus}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_keyboardNavigationCluster android:keyboardNavigationCluster}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_elevation com.android.dialer:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #AppBarLayout_expanded com.android.dialer:expanded}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_liftOnScroll com.android.dialer:liftOnScroll}</code></td><td></td></tr>
     * </table>
     * @see #AppBarLayout_android_background
     * @see #AppBarLayout_android_touchscreenBlocksFocus
     * @see #AppBarLayout_android_keyboardNavigationCluster
     * @see #AppBarLayout_elevation
     * @see #AppBarLayout_expanded
     * @see #AppBarLayout_liftOnScroll
     */
    public static final int[] AppBarLayout={
      0x010100d4, 0x0101048f, 0x01010540, 0x7f0400d9, 
      0x7f0400df, 0x7f04013d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int AppBarLayout_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#touchscreenBlocksFocus}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:touchscreenBlocksFocus
     */
    public static final int AppBarLayout_android_touchscreenBlocksFocus=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#keyboardNavigationCluster}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:keyboardNavigationCluster
     */
    public static final int AppBarLayout_android_keyboardNavigationCluster=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:elevation
     */
    public static final int AppBarLayout_elevation=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#expanded}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:expanded
     */
    public static final int AppBarLayout_expanded=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#liftOnScroll}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:liftOnScroll
     */
    public static final int AppBarLayout_liftOnScroll=5;
    /**
     * Attributes that can be used with a AppBarLayoutStates.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsed com.android.dialer:state_collapsed}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsible com.android.dialer:state_collapsible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_liftable com.android.dialer:state_liftable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_lifted com.android.dialer:state_lifted}</code></td><td></td></tr>
     * </table>
     * @see #AppBarLayoutStates_state_collapsed
     * @see #AppBarLayoutStates_state_collapsible
     * @see #AppBarLayoutStates_state_liftable
     * @see #AppBarLayoutStates_state_lifted
     */
    public static final int[] AppBarLayoutStates={
      0x7f0401b4, 0x7f0401b5, 0x7f0401b6, 0x7f0401b7
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#state_collapsed}
     * attribute's value can be found in the {@link #AppBarLayoutStates} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:state_collapsed
     */
    public static final int AppBarLayoutStates_state_collapsed=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#state_collapsible}
     * attribute's value can be found in the {@link #AppBarLayoutStates} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:state_collapsible
     */
    public static final int AppBarLayoutStates_state_collapsible=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#state_liftable}
     * attribute's value can be found in the {@link #AppBarLayoutStates} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:state_liftable
     */
    public static final int AppBarLayoutStates_state_liftable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#state_lifted}
     * attribute's value can be found in the {@link #AppBarLayoutStates} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:state_lifted
     */
    public static final int AppBarLayoutStates_state_lifted=3;
    /**
     * Attributes that can be used with a AppBarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollFlags com.android.dialer:layout_scrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollInterpolator com.android.dialer:layout_scrollInterpolator}</code></td><td></td></tr>
     * </table>
     * @see #AppBarLayout_Layout_layout_scrollFlags
     * @see #AppBarLayout_Layout_layout_scrollInterpolator
     */
    public static final int[] AppBarLayout_Layout={
      0x7f04013b, 0x7f04013c
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#layout_scrollFlags}
     * attribute's value can be found in the {@link #AppBarLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td></td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td></td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td></td></tr>
     * <tr><td>scroll</td><td>1</td><td></td></tr>
     * <tr><td>snap</td><td>10</td><td></td></tr>
     * <tr><td>snapMargins</td><td>20</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:layout_scrollFlags
     */
    public static final int AppBarLayout_Layout_layout_scrollFlags=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#layout_scrollInterpolator}
     * attribute's value can be found in the {@link #AppBarLayout_Layout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:layout_scrollInterpolator
     */
    public static final int AppBarLayout_Layout_layout_scrollInterpolator=1;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.android.dialer:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.android.dialer:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.android.dialer:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x7f0401b1, 0x7f040204, 0x7f040205
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.android.dialer:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.android.dialer:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.android.dialer:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x7f040201, 0x7f040202, 0x7f040203
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.android.dialer:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.android.dialer:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.android.dialer:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.android.dialer:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.android.dialer:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight com.android.dialer:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.android.dialer:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight com.android.dialer:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight com.android.dialer:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.android.dialer:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x7f040030, 0x7f040031, 0x7f040032, 
      0x7f040033, 0x7f040034, 0x7f0400f3, 0x7f0400f6, 
      0x7f040130, 0x7f04013e, 0x7f0401e1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:firstBaselineToTopHeight
     */
    public static final int AppCompatTextView_firstBaselineToTopHeight=6;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=7;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:lastBaselineToBottomHeight
     */
    public static final int AppCompatTextView_lastBaselineToBottomHeight=8;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:lineHeight
     */
    public static final int AppCompatTextView_lineHeight=9;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=10;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.android.dialer:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.android.dialer:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.android.dialer:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.android.dialer:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.android.dialer:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.android.dialer:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.android.dialer:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.android.dialer:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.android.dialer:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.android.dialer:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.android.dialer:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.android.dialer:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.android.dialer:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.android.dialer:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.android.dialer:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.android.dialer:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.android.dialer:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.android.dialer:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.android.dialer:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.android.dialer:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.android.dialer:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.android.dialer:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.android.dialer:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.android.dialer:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.android.dialer:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.android.dialer:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.android.dialer:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.android.dialer:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.android.dialer:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.android.dialer:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.android.dialer:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.android.dialer:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.android.dialer:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.android.dialer:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.android.dialer:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.android.dialer:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.android.dialer:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.android.dialer:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.android.dialer:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.android.dialer:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.android.dialer:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.android.dialer:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.android.dialer:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.android.dialer:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.android.dialer:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.android.dialer:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.android.dialer:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.android.dialer:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.android.dialer:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.android.dialer:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.android.dialer:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.android.dialer:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.android.dialer:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.android.dialer:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.android.dialer:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.android.dialer:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.android.dialer:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius com.android.dialer:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.android.dialer:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.android.dialer:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.android.dialer:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.android.dialer:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.android.dialer:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.android.dialer:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.android.dialer:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.android.dialer:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.android.dialer:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.android.dialer:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.android.dialer:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.android.dialer:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.android.dialer:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.android.dialer:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.android.dialer:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.android.dialer:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.android.dialer:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.android.dialer:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.android.dialer:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.android.dialer:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.android.dialer:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.android.dialer:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.android.dialer:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.android.dialer:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.android.dialer:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.android.dialer:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.android.dialer:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.android.dialer:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.android.dialer:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.android.dialer:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.android.dialer:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.android.dialer:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.android.dialer:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.android.dialer:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.android.dialer:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.android.dialer:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.android.dialer:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.android.dialer:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.android.dialer:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.android.dialer:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.android.dialer:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.android.dialer:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.android.dialer:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.android.dialer:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.android.dialer:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.android.dialer:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.android.dialer:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.android.dialer:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.android.dialer:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.android.dialer:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass com.android.dialer:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.android.dialer:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.android.dialer:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.android.dialer:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.android.dialer:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.android.dialer:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.android.dialer:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.android.dialer:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.android.dialer:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.android.dialer:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.android.dialer:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x7f040000, 0x7f040001, 
      0x7f040002, 0x7f040003, 0x7f040004, 0x7f040005, 
      0x7f040006, 0x7f040007, 0x7f040008, 0x7f040009, 
      0x7f04000a, 0x7f04000b, 0x7f04000c, 0x7f04000e, 
      0x7f04000f, 0x7f040010, 0x7f040011, 0x7f040012, 
      0x7f040013, 0x7f040014, 0x7f040015, 0x7f040016, 
      0x7f040017, 0x7f040018, 0x7f040019, 0x7f04001a, 
      0x7f04001b, 0x7f04001c, 0x7f04001d, 0x7f04001e, 
      0x7f040022, 0x7f040023, 0x7f040024, 0x7f040025, 
      0x7f040026, 0x7f04002d, 0x7f040044, 0x7f040052, 
      0x7f040053, 0x7f040054, 0x7f040055, 0x7f040056, 
      0x7f04005a, 0x7f04005b, 0x7f040065, 0x7f04006a, 
      0x7f04008a, 0x7f04008b, 0x7f04008d, 0x7f04008e, 
      0x7f04008f, 0x7f040090, 0x7f040091, 0x7f040099, 
      0x7f04009b, 0x7f04009d, 0x7f0400b2, 0x7f0400bb, 
      0x7f0400bc, 0x7f0400bd, 0x7f0400cf, 0x7f0400d1, 
      0x7f0400d4, 0x7f0400d5, 0x7f0400d6, 0x7f0400d7, 
      0x7f0400d8, 0x7f04010f, 0x7f04011b, 0x7f040140, 
      0x7f040141, 0x7f040144, 0x7f040145, 0x7f040146, 
      0x7f040147, 0x7f040148, 0x7f040149, 0x7f04014a, 
      0x7f04017b, 0x7f04017c, 0x7f04017d, 0x7f040183, 
      0x7f040185, 0x7f04018d, 0x7f04018e, 0x7f04018f, 
      0x7f040190, 0x7f04019d, 0x7f04019f, 0x7f0401a0, 
      0x7f0401a1, 0x7f0401ae, 0x7f0401af, 0x7f0401c5, 
      0x7f0401ec, 0x7f0401ed, 0x7f0401ee, 0x7f0401ef, 
      0x7f0401f1, 0x7f0401f2, 0x7f0401f3, 0x7f0401f4, 
      0x7f0401f7, 0x7f0401f8, 0x7f040212, 0x7f040213, 
      0x7f040214, 0x7f040215, 0x7f04021e, 0x7f040220, 
      0x7f040221, 0x7f040222, 0x7f040223, 0x7f040224, 
      0x7f040225, 0x7f040226, 0x7f040227, 0x7f040228, 
      0x7f040229
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=23;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=24;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=26;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=28;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=31;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=35;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=36;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=37;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=38;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=39;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=43;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=44;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=45;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=46;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=47;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=48;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=49;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=50;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=53;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorError
     */
    public static final int AppCompatTheme_colorError=54;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=55;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=56;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=57;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=58;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dialogCornerRadius
     */
    public static final int AppCompatTheme_dialogCornerRadius=59;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=60;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=61;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=62;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=63;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=64;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=65;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=66;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=67;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=68;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=69;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=70;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=71;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=72;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=73;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=74;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=75;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=76;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=77;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=78;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=79;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=80;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=81;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=82;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=83;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=84;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=85;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=86;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=87;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=88;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=89;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=90;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=91;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=92;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=93;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=94;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=95;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=96;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=97;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=98;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=99;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=100;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=101;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=102;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=103;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=104;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=105;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=106;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=107;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=108;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=109;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:viewInflaterClass
     */
    public static final int AppCompatTheme_viewInflaterClass=110;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=111;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=112;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=113;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.dialer:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=114;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.dialer:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=115;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.dialer:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=116;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.dialer:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=117;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.dialer:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=118;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.dialer:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=119;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=120;
    /**
     * Attributes that can be used with a AutoResizeTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AutoResizeTextView_autoResizeText_minTextSize com.android.dialer:autoResizeText_minTextSize}</code></td><td>The minimum text size to use in this view.</td></tr>
     * <tr><td><code>{@link #AutoResizeTextView_autoResizeText_resizeStepUnit com.android.dialer:autoResizeText_resizeStepUnit}</code></td><td>The unit to use when computing step increments for the resize operation.</td></tr>
     * </table>
     * @see #AutoResizeTextView_autoResizeText_minTextSize
     * @see #AutoResizeTextView_autoResizeText_resizeStepUnit
     */
    public static final int[] AutoResizeTextView={
      0x7f04002e, 0x7f04002f
    };
    /**
     * <p>
     * @attr description
     * The minimum text size to use in this view. Text size will be scale down to fit the text
     * in this view, but no smaller than the minimum size specified in this attribute.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:autoResizeText_minTextSize
     */
    public static final int AutoResizeTextView_autoResizeText_minTextSize=0;
    /**
     * <p>
     * @attr description
     * The unit to use when computing step increments for the resize operation. That is, the
     * resized text will be guaranteed to be a whole number (integer) value in the unit
     * specified. For example, if the unit is scaled pixels (sp), then the font size might be
     * 13sp or 14sp, but not 13.5sp.
     * The enum values must match the values from android.util.TypedValue.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>unitDip</td><td>1</td><td>Must match TypedValue.COMPLEX_UNIT_DIP.</td></tr>
     * <tr><td>unitIn</td><td>4</td><td>Must match TypedValue.COMPLEX_UNIT_IN.</td></tr>
     * <tr><td>unitMm</td><td>5</td><td>Must match TypedValue.COMPLEX_UNIT_MM.</td></tr>
     * <tr><td>unitPt</td><td>3</td><td>Must match TypedValue.COMPLEX_UNIT_PT.</td></tr>
     * <tr><td>unitPx</td><td>0</td><td>Must match TypedValue.COMPLEX_UNIT_PX.</td></tr>
     * <tr><td>unitSp</td><td>2</td><td>Must match TypedValue.COMPLEX_UNIT_SP.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:autoResizeText_resizeStepUnit
     */
    public static final int AutoResizeTextView_autoResizeText_resizeStepUnit=1;
    /**
     * Attributes that can be used with a BottomAppBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomAppBar_backgroundTint com.android.dialer:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabAlignmentMode com.android.dialer:fabAlignmentMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleMargin com.android.dialer:fabCradleMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleRoundedCornerRadius com.android.dialer:fabCradleRoundedCornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_fabCradleVerticalOffset com.android.dialer:fabCradleVerticalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomAppBar_hideOnScroll com.android.dialer:hideOnScroll}</code></td><td></td></tr>
     * </table>
     * @see #BottomAppBar_backgroundTint
     * @see #BottomAppBar_fabAlignmentMode
     * @see #BottomAppBar_fabCradleMargin
     * @see #BottomAppBar_fabCradleRoundedCornerRadius
     * @see #BottomAppBar_fabCradleVerticalOffset
     * @see #BottomAppBar_hideOnScroll
     */
    public static final int[] BottomAppBar={
      0x7f040039, 0x7f0400e7, 0x7f0400e8, 0x7f0400e9, 
      0x7f0400ea, 0x7f04010b
    };
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:backgroundTint
     */
    public static final int BottomAppBar_backgroundTint=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fabAlignmentMode}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>0</td><td></td></tr>
     * <tr><td>end</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:fabAlignmentMode
     */
    public static final int BottomAppBar_fabAlignmentMode=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fabCradleMargin}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:fabCradleMargin
     */
    public static final int BottomAppBar_fabCradleMargin=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fabCradleRoundedCornerRadius}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:fabCradleRoundedCornerRadius
     */
    public static final int BottomAppBar_fabCradleRoundedCornerRadius=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fabCradleVerticalOffset}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:fabCradleVerticalOffset
     */
    public static final int BottomAppBar_fabCradleVerticalOffset=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#hideOnScroll}
     * attribute's value can be found in the {@link #BottomAppBar} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:hideOnScroll
     */
    public static final int BottomAppBar_hideOnScroll=5;
    /**
     * Attributes that can be used with a BottomNavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomNavigationView_elevation com.android.dialer:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemBackground com.android.dialer:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemHorizontalTranslationEnabled com.android.dialer:itemHorizontalTranslationEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemIconSize com.android.dialer:itemIconSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemIconTint com.android.dialer:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextAppearanceActive com.android.dialer:itemTextAppearanceActive}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextAppearanceInactive com.android.dialer:itemTextAppearanceInactive}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextColor com.android.dialer:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_labelVisibilityMode com.android.dialer:labelVisibilityMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_menu com.android.dialer:menu}</code></td><td></td></tr>
     * </table>
     * @see #BottomNavigationView_elevation
     * @see #BottomNavigationView_itemBackground
     * @see #BottomNavigationView_itemHorizontalTranslationEnabled
     * @see #BottomNavigationView_itemIconSize
     * @see #BottomNavigationView_itemIconTint
     * @see #BottomNavigationView_itemTextAppearanceActive
     * @see #BottomNavigationView_itemTextAppearanceInactive
     * @see #BottomNavigationView_itemTextColor
     * @see #BottomNavigationView_labelVisibilityMode
     * @see #BottomNavigationView_menu
     */
    public static final int[] BottomNavigationView={
      0x7f0400d9, 0x7f040122, 0x7f040124, 0x7f040126, 
      0x7f040127, 0x7f04012b, 0x7f04012c, 0x7f04012d, 
      0x7f04012f, 0x7f04016e
    };
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:elevation
     */
    public static final int BottomNavigationView_elevation=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemBackground}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:itemBackground
     */
    public static final int BottomNavigationView_itemBackground=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemHorizontalTranslationEnabled}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:itemHorizontalTranslationEnabled
     */
    public static final int BottomNavigationView_itemHorizontalTranslationEnabled=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemIconSize}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:itemIconSize
     */
    public static final int BottomNavigationView_itemIconSize=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:itemIconTint
     */
    public static final int BottomNavigationView_itemIconTint=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemTextAppearanceActive}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:itemTextAppearanceActive
     */
    public static final int BottomNavigationView_itemTextAppearanceActive=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemTextAppearanceInactive}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:itemTextAppearanceInactive
     */
    public static final int BottomNavigationView_itemTextAppearanceInactive=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:itemTextColor
     */
    public static final int BottomNavigationView_itemTextColor=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#labelVisibilityMode}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * <tr><td>labeled</td><td>1</td><td></td></tr>
     * <tr><td>selected</td><td>0</td><td></td></tr>
     * <tr><td>unlabeled</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:labelVisibilityMode
     */
    public static final int BottomNavigationView_labelVisibilityMode=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#menu}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:menu
     */
    public static final int BottomNavigationView_menu=9;
    /**
     * Attributes that can be used with a BottomSheetBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_fitToContents com.android.dialer:behavior_fitToContents}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_hideable com.android.dialer:behavior_hideable}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_peekHeight com.android.dialer:behavior_peekHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_skipCollapsed com.android.dialer:behavior_skipCollapsed}</code></td><td></td></tr>
     * </table>
     * @see #BottomSheetBehavior_Layout_behavior_fitToContents
     * @see #BottomSheetBehavior_Layout_behavior_hideable
     * @see #BottomSheetBehavior_Layout_behavior_peekHeight
     * @see #BottomSheetBehavior_Layout_behavior_skipCollapsed
     */
    public static final int[] BottomSheetBehavior_Layout={
      0x7f04003d, 0x7f04003e, 0x7f040040, 0x7f040041
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#behavior_fitToContents}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:behavior_fitToContents
     */
    public static final int BottomSheetBehavior_Layout_behavior_fitToContents=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#behavior_hideable}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:behavior_hideable
     */
    public static final int BottomSheetBehavior_Layout_behavior_hideable=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#behavior_peekHeight}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:behavior_peekHeight
     */
    public static final int BottomSheetBehavior_Layout_behavior_peekHeight=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#behavior_skipCollapsed}
     * attribute's value can be found in the {@link #BottomSheetBehavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:behavior_skipCollapsed
     */
    public static final int BottomSheetBehavior_Layout_behavior_skipCollapsed=3;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.android.dialer:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x7f040027
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a CallTypeIconsView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CallTypeIconsView_useLargeIcons com.android.dialer:useLargeIcons}</code></td><td>This attribute is used to let CallTypeIconsView know that we want to use large
     * icons (Call Details) instead of small icons (Call Log).</td></tr>
     * </table>
     * @see #CallTypeIconsView_useLargeIcons
     */
    public static final int[] CallTypeIconsView={
      0x7f04021d
    };
    /**
     * <p>
     * @attr description
     * This attribute is used to let CallTypeIconsView know that we want to use large
     * icons (Call Details) instead of small icons (Call Log). Using large icons also limits
     * CallTypeIconsView to only use one icon at a time.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:useLargeIcons
     */
    public static final int CallTypeIconsView_useLargeIcons=0;
    /**
     * Attributes that can be used with a CardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CardView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardBackgroundColor com.android.dialer:cardBackgroundColor}</code></td><td>Background color for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardCornerRadius com.android.dialer:cardCornerRadius}</code></td><td>Corner radius for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardElevation com.android.dialer:cardElevation}</code></td><td>Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardMaxElevation com.android.dialer:cardMaxElevation}</code></td><td>Maximum Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardPreventCornerOverlap com.android.dialer:cardPreventCornerOverlap}</code></td><td>Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.</td></tr>
     * <tr><td><code>{@link #CardView_cardUseCompatPadding com.android.dialer:cardUseCompatPadding}</code></td><td>Add padding in API v21+ as well to have the same measurements with previous versions.</td></tr>
     * <tr><td><code>{@link #CardView_contentPadding com.android.dialer:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingBottom com.android.dialer:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingLeft com.android.dialer:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingRight com.android.dialer:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingTop com.android.dialer:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * </table>
     * @see #CardView_android_minWidth
     * @see #CardView_android_minHeight
     * @see #CardView_cardBackgroundColor
     * @see #CardView_cardCornerRadius
     * @see #CardView_cardElevation
     * @see #CardView_cardMaxElevation
     * @see #CardView_cardPreventCornerOverlap
     * @see #CardView_cardUseCompatPadding
     * @see #CardView_contentPadding
     * @see #CardView_contentPaddingBottom
     * @see #CardView_contentPaddingLeft
     * @see #CardView_contentPaddingRight
     * @see #CardView_contentPaddingTop
     */
    public static final int[] CardView={
      0x0101013f, 0x01010140, 0x7f04005e, 0x7f04005f, 
      0x7f040060, 0x7f040061, 0x7f040062, 0x7f040063, 
      0x7f0400ac, 0x7f0400ad, 0x7f0400ae, 0x7f0400af, 
      0x7f0400b0
    };
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int CardView_android_minWidth=0;
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int CardView_android_minHeight=1;
    /**
     * <p>
     * @attr description
     * Background color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:cardBackgroundColor
     */
    public static final int CardView_cardBackgroundColor=2;
    /**
     * <p>
     * @attr description
     * Corner radius for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:cardCornerRadius
     */
    public static final int CardView_cardCornerRadius=3;
    /**
     * <p>
     * @attr description
     * Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:cardElevation
     */
    public static final int CardView_cardElevation=4;
    /**
     * <p>
     * @attr description
     * Maximum Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:cardMaxElevation
     */
    public static final int CardView_cardMaxElevation=5;
    /**
     * <p>
     * @attr description
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:cardPreventCornerOverlap
     */
    public static final int CardView_cardPreventCornerOverlap=6;
    /**
     * <p>
     * @attr description
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:cardUseCompatPadding
     */
    public static final int CardView_cardUseCompatPadding=7;
    /**
     * <p>
     * @attr description
     * Inner padding between the edges of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentPadding
     */
    public static final int CardView_contentPadding=8;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentPaddingBottom
     */
    public static final int CardView_contentPaddingBottom=9;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentPaddingLeft
     */
    public static final int CardView_contentPaddingLeft=10;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentPaddingRight
     */
    public static final int CardView_contentPaddingRight=11;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentPaddingTop
     */
    public static final int CardView_contentPaddingTop=12;
    /**
     * Attributes that can be used with a CheckableImageButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckableImageButton_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckableImageButton_contentDescriptionChecked com.android.dialer:contentDescriptionChecked}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckableImageButton_contentDescriptionUnchecked com.android.dialer:contentDescriptionUnchecked}</code></td><td></td></tr>
     * </table>
     * @see #CheckableImageButton_android_checked
     * @see #CheckableImageButton_contentDescriptionChecked
     * @see #CheckableImageButton_contentDescriptionUnchecked
     */
    public static final int[] CheckableImageButton={
      0x01010106, 0x7f0400a4, 0x7f0400a5
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#checked}
     * attribute's value can be found in the {@link #CheckableImageButton} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int CheckableImageButton_android_checked=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#contentDescriptionChecked}
     * attribute's value can be found in the {@link #CheckableImageButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:contentDescriptionChecked
     */
    public static final int CheckableImageButton_contentDescriptionChecked=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#contentDescriptionUnchecked}
     * attribute's value can be found in the {@link #CheckableImageButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:contentDescriptionUnchecked
     */
    public static final int CheckableImageButton_contentDescriptionUnchecked=2;
    /**
     * Attributes that can be used with a CheckableLabeledButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckableLabeledButton_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckableLabeledButton_incall_icon com.android.dialer:incall_icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckableLabeledButton_incall_labelText com.android.dialer:incall_labelText}</code></td><td></td></tr>
     * </table>
     * @see #CheckableLabeledButton_android_enabled
     * @see #CheckableLabeledButton_incall_icon
     * @see #CheckableLabeledButton_incall_labelText
     */
    public static final int[] CheckableLabeledButton={
      0x0101000e, 0x7f04011c, 0x7f04011d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #CheckableLabeledButton} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int CheckableLabeledButton_android_enabled=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#incall_icon}
     * attribute's value can be found in the {@link #CheckableLabeledButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:incall_icon
     */
    public static final int CheckableLabeledButton_incall_icon=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#incall_labelText}
     * attribute's value can be found in the {@link #CheckableLabeledButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:incall_labelText
     */
    public static final int CheckableLabeledButton_incall_labelText=2;
    /**
     * Attributes that can be used with a Chip.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Chip_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_ellipsize android:ellipsize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_text android:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIcon com.android.dialer:checkedIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconEnabled com.android.dialer:checkedIconEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_checkedIconVisible com.android.dialer:checkedIconVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipBackgroundColor com.android.dialer:chipBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipCornerRadius com.android.dialer:chipCornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipEndPadding com.android.dialer:chipEndPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIcon com.android.dialer:chipIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIconEnabled com.android.dialer:chipIconEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIconSize com.android.dialer:chipIconSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIconTint com.android.dialer:chipIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipIconVisible com.android.dialer:chipIconVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipMinHeight com.android.dialer:chipMinHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipStartPadding com.android.dialer:chipStartPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeColor com.android.dialer:chipStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_chipStrokeWidth com.android.dialer:chipStrokeWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIcon com.android.dialer:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #Chip_closeIconEnabled com.android.dialer:closeIconEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconEndPadding com.android.dialer:closeIconEndPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconSize com.android.dialer:closeIconSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconStartPadding com.android.dialer:closeIconStartPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconTint com.android.dialer:closeIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_closeIconVisible com.android.dialer:closeIconVisible}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_hideMotionSpec com.android.dialer:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_iconEndPadding com.android.dialer:iconEndPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_iconStartPadding com.android.dialer:iconStartPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_rippleColor com.android.dialer:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_showMotionSpec com.android.dialer:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_textEndPadding com.android.dialer:textEndPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #Chip_textStartPadding com.android.dialer:textStartPadding}</code></td><td></td></tr>
     * </table>
     * @see #Chip_android_textAppearance
     * @see #Chip_android_ellipsize
     * @see #Chip_android_maxWidth
     * @see #Chip_android_text
     * @see #Chip_android_checkable
     * @see #Chip_checkedIcon
     * @see #Chip_checkedIconEnabled
     * @see #Chip_checkedIconVisible
     * @see #Chip_chipBackgroundColor
     * @see #Chip_chipCornerRadius
     * @see #Chip_chipEndPadding
     * @see #Chip_chipIcon
     * @see #Chip_chipIconEnabled
     * @see #Chip_chipIconSize
     * @see #Chip_chipIconTint
     * @see #Chip_chipIconVisible
     * @see #Chip_chipMinHeight
     * @see #Chip_chipStartPadding
     * @see #Chip_chipStrokeColor
     * @see #Chip_chipStrokeWidth
     * @see #Chip_closeIcon
     * @see #Chip_closeIconEnabled
     * @see #Chip_closeIconEndPadding
     * @see #Chip_closeIconSize
     * @see #Chip_closeIconStartPadding
     * @see #Chip_closeIconTint
     * @see #Chip_closeIconVisible
     * @see #Chip_hideMotionSpec
     * @see #Chip_iconEndPadding
     * @see #Chip_iconStartPadding
     * @see #Chip_rippleColor
     * @see #Chip_showMotionSpec
     * @see #Chip_textEndPadding
     * @see #Chip_textStartPadding
     */
    public static final int[] Chip={
      0x01010034, 0x010100ab, 0x0101011f, 0x0101014f, 
      0x010101e5, 0x7f040067, 0x7f040068, 0x7f040069, 
      0x7f04006b, 0x7f04006c, 0x7f04006d, 0x7f04006f, 
      0x7f040070, 0x7f040071, 0x7f040072, 0x7f040073, 
      0x7f040074, 0x7f040079, 0x7f04007a, 0x7f04007b, 
      0x7f04007d, 0x7f04007e, 0x7f04007f, 0x7f040080, 
      0x7f040081, 0x7f040082, 0x7f040083, 0x7f040109, 
      0x7f040113, 0x7f040117, 0x7f040195, 0x7f0401a4, 
      0x7f0401f9, 0x7f0401fb
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int Chip_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ellipsize}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>3</td><td></td></tr>
     * <tr><td>marquee</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:ellipsize
     */
    public static final int Chip_android_ellipsize=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int Chip_android_maxWidth=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int Chip_android_text=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#checkable}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int Chip_android_checkable=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#checkedIcon}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:checkedIcon
     */
    public static final int Chip_checkedIcon=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#checkedIconEnabled}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:checkedIconEnabled
     */
    public static final int Chip_checkedIconEnabled=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#checkedIconVisible}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:checkedIconVisible
     */
    public static final int Chip_checkedIconVisible=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipBackgroundColor}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:chipBackgroundColor
     */
    public static final int Chip_chipBackgroundColor=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipCornerRadius}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:chipCornerRadius
     */
    public static final int Chip_chipCornerRadius=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipEndPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:chipEndPadding
     */
    public static final int Chip_chipEndPadding=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipIcon}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:chipIcon
     */
    public static final int Chip_chipIcon=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipIconEnabled}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:chipIconEnabled
     */
    public static final int Chip_chipIconEnabled=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipIconSize}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:chipIconSize
     */
    public static final int Chip_chipIconSize=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipIconTint}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:chipIconTint
     */
    public static final int Chip_chipIconTint=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipIconVisible}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:chipIconVisible
     */
    public static final int Chip_chipIconVisible=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipMinHeight}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:chipMinHeight
     */
    public static final int Chip_chipMinHeight=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipStartPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:chipStartPadding
     */
    public static final int Chip_chipStartPadding=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipStrokeColor}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:chipStrokeColor
     */
    public static final int Chip_chipStrokeColor=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipStrokeWidth}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:chipStrokeWidth
     */
    public static final int Chip_chipStrokeWidth=19;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:closeIcon
     */
    public static final int Chip_closeIcon=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#closeIconEnabled}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:closeIconEnabled
     */
    public static final int Chip_closeIconEnabled=21;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#closeIconEndPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:closeIconEndPadding
     */
    public static final int Chip_closeIconEndPadding=22;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#closeIconSize}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:closeIconSize
     */
    public static final int Chip_closeIconSize=23;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#closeIconStartPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:closeIconStartPadding
     */
    public static final int Chip_closeIconStartPadding=24;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#closeIconTint}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:closeIconTint
     */
    public static final int Chip_closeIconTint=25;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#closeIconVisible}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:closeIconVisible
     */
    public static final int Chip_closeIconVisible=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#hideMotionSpec}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:hideMotionSpec
     */
    public static final int Chip_hideMotionSpec=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#iconEndPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:iconEndPadding
     */
    public static final int Chip_iconEndPadding=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#iconStartPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:iconStartPadding
     */
    public static final int Chip_iconStartPadding=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#rippleColor}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:rippleColor
     */
    public static final int Chip_rippleColor=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#showMotionSpec}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:showMotionSpec
     */
    public static final int Chip_showMotionSpec=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textEndPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:textEndPadding
     */
    public static final int Chip_textEndPadding=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textStartPadding}
     * attribute's value can be found in the {@link #Chip} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:textStartPadding
     */
    public static final int Chip_textStartPadding=33;
    /**
     * Attributes that can be used with a ChipGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChipGroup_checkedChip com.android.dialer:checkedChip}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacing com.android.dialer:chipSpacing}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingHorizontal com.android.dialer:chipSpacingHorizontal}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_chipSpacingVertical com.android.dialer:chipSpacingVertical}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_singleLine com.android.dialer:singleLine}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChipGroup_singleSelection com.android.dialer:singleSelection}</code></td><td></td></tr>
     * </table>
     * @see #ChipGroup_checkedChip
     * @see #ChipGroup_chipSpacing
     * @see #ChipGroup_chipSpacingHorizontal
     * @see #ChipGroup_chipSpacingVertical
     * @see #ChipGroup_singleLine
     * @see #ChipGroup_singleSelection
     */
    public static final int[] ChipGroup={
      0x7f040066, 0x7f040075, 0x7f040076, 0x7f040077, 
      0x7f0401a8, 0x7f0401a9
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#checkedChip}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:checkedChip
     */
    public static final int ChipGroup_checkedChip=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipSpacing}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:chipSpacing
     */
    public static final int ChipGroup_chipSpacing=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipSpacingHorizontal}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:chipSpacingHorizontal
     */
    public static final int ChipGroup_chipSpacingHorizontal=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipSpacingVertical}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:chipSpacingVertical
     */
    public static final int ChipGroup_chipSpacingVertical=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#singleLine}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:singleLine
     */
    public static final int ChipGroup_singleLine=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#singleSelection}
     * attribute's value can be found in the {@link #ChipGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:singleSelection
     */
    public static final int ChipGroup_singleSelection=5;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleGravity com.android.dialer:collapsedTitleGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleTextAppearance com.android.dialer:collapsedTitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_contentScrim com.android.dialer:contentScrim}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleGravity com.android.dialer:expandedTitleGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMargin com.android.dialer:expandedTitleMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginBottom com.android.dialer:expandedTitleMarginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginEnd com.android.dialer:expandedTitleMarginEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginStart com.android.dialer:expandedTitleMarginStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginTop com.android.dialer:expandedTitleMarginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleTextAppearance com.android.dialer:expandedTitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimAnimationDuration com.android.dialer:scrimAnimationDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimVisibleHeightTrigger com.android.dialer:scrimVisibleHeightTrigger}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_statusBarScrim com.android.dialer:statusBarScrim}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_title com.android.dialer:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_titleEnabled com.android.dialer:titleEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_toolbarId com.android.dialer:toolbarId}</code></td><td></td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_collapsedTitleGravity
     * @see #CollapsingToolbarLayout_collapsedTitleTextAppearance
     * @see #CollapsingToolbarLayout_contentScrim
     * @see #CollapsingToolbarLayout_expandedTitleGravity
     * @see #CollapsingToolbarLayout_expandedTitleMargin
     * @see #CollapsingToolbarLayout_expandedTitleMarginBottom
     * @see #CollapsingToolbarLayout_expandedTitleMarginEnd
     * @see #CollapsingToolbarLayout_expandedTitleMarginStart
     * @see #CollapsingToolbarLayout_expandedTitleMarginTop
     * @see #CollapsingToolbarLayout_expandedTitleTextAppearance
     * @see #CollapsingToolbarLayout_scrimAnimationDuration
     * @see #CollapsingToolbarLayout_scrimVisibleHeightTrigger
     * @see #CollapsingToolbarLayout_statusBarScrim
     * @see #CollapsingToolbarLayout_title
     * @see #CollapsingToolbarLayout_titleEnabled
     * @see #CollapsingToolbarLayout_toolbarId
     */
    public static final int[] CollapsingToolbarLayout={
      0x7f040087, 0x7f040088, 0x7f0400b1, 0x7f0400e0, 
      0x7f0400e1, 0x7f0400e2, 0x7f0400e3, 0x7f0400e4, 
      0x7f0400e5, 0x7f0400e6, 0x7f040198, 0x7f04019a, 
      0x7f0401b9, 0x7f040206, 0x7f040207, 0x7f040211
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#collapsedTitleGravity}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:collapsedTitleGravity
     */
    public static final int CollapsingToolbarLayout_collapsedTitleGravity=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#collapsedTitleTextAppearance}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:collapsedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_collapsedTitleTextAppearance=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#contentScrim}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:contentScrim
     */
    public static final int CollapsingToolbarLayout_contentScrim=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#expandedTitleGravity}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:expandedTitleGravity
     */
    public static final int CollapsingToolbarLayout_expandedTitleGravity=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#expandedTitleMargin}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:expandedTitleMargin
     */
    public static final int CollapsingToolbarLayout_expandedTitleMargin=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#expandedTitleMarginBottom}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:expandedTitleMarginBottom
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginBottom=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#expandedTitleMarginEnd}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:expandedTitleMarginEnd
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginEnd=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#expandedTitleMarginStart}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:expandedTitleMarginStart
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginStart=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#expandedTitleMarginTop}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:expandedTitleMarginTop
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginTop=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#expandedTitleTextAppearance}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:expandedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_expandedTitleTextAppearance=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#scrimAnimationDuration}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.dialer:scrimAnimationDuration
     */
    public static final int CollapsingToolbarLayout_scrimAnimationDuration=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#scrimVisibleHeightTrigger}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:scrimVisibleHeightTrigger
     */
    public static final int CollapsingToolbarLayout_scrimVisibleHeightTrigger=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#statusBarScrim}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:statusBarScrim
     */
    public static final int CollapsingToolbarLayout_statusBarScrim=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#title}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:title
     */
    public static final int CollapsingToolbarLayout_title=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#titleEnabled}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:titleEnabled
     */
    public static final int CollapsingToolbarLayout_titleEnabled=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#toolbarId}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:toolbarId
     */
    public static final int CollapsingToolbarLayout_toolbarId=15;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseMode com.android.dialer:layout_collapseMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier com.android.dialer:layout_collapseParallaxMultiplier}</code></td><td></td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_Layout_layout_collapseMode
     * @see #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier
     */
    public static final int[] CollapsingToolbarLayout_Layout={
      0x7f040136, 0x7f040137
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#layout_collapseMode}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>parallax</td><td>2</td><td></td></tr>
     * <tr><td>pin</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:layout_collapseMode
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseMode=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#layout_collapseParallaxMultiplier}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.dialer:layout_collapseParallaxMultiplier
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.dialer:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f040028
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.dialer:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.android.dialer:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.android.dialer:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x7f04005c, 0x7f04005d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:buttonTint
     */
    public static final int CompoundButton_buttonTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=2;
    /**
     * Attributes that can be used with a ContactBrowser.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ContactBrowser_contact_browser_background com.android.dialer:contact_browser_background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactBrowser_contact_browser_list_padding_left com.android.dialer:contact_browser_list_padding_left}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactBrowser_contact_browser_list_padding_right com.android.dialer:contact_browser_list_padding_right}</code></td><td></td></tr>
     * </table>
     * @see #ContactBrowser_contact_browser_background
     * @see #ContactBrowser_contact_browser_list_padding_left
     * @see #ContactBrowser_contact_browser_list_padding_right
     */
    public static final int[] ContactBrowser={
      0x7f0400a0, 0x7f0400a1, 0x7f0400a2
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#contact_browser_background}
     * attribute's value can be found in the {@link #ContactBrowser} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:contact_browser_background
     */
    public static final int ContactBrowser_contact_browser_background=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#contact_browser_list_padding_left}
     * attribute's value can be found in the {@link #ContactBrowser} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contact_browser_list_padding_left
     */
    public static final int ContactBrowser_contact_browser_list_padding_left=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#contact_browser_list_padding_right}
     * attribute's value can be found in the {@link #ContactBrowser} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contact_browser_list_padding_right
     */
    public static final int ContactBrowser_contact_browser_list_padding_right=2;
    /**
     * Attributes that can be used with a ContactListItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ContactListItemView_activated_background com.android.dialer:activated_background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_background_color com.android.dialer:list_item_background_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_data_width_weight com.android.dialer:list_item_data_width_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_gap_between_image_and_text com.android.dialer:list_item_gap_between_image_and_text}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_gap_between_label_and_data com.android.dialer:list_item_gap_between_label_and_data}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_header_height com.android.dialer:list_item_header_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_header_text_color com.android.dialer:list_item_header_text_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_header_text_indent com.android.dialer:list_item_header_text_indent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_header_text_size com.android.dialer:list_item_header_text_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_height com.android.dialer:list_item_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_label_width_weight com.android.dialer:list_item_label_width_weight}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_name_text_color com.android.dialer:list_item_name_text_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_name_text_size com.android.dialer:list_item_name_text_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_padding_bottom com.android.dialer:list_item_padding_bottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_padding_left com.android.dialer:list_item_padding_left}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_padding_right com.android.dialer:list_item_padding_right}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_padding_top com.android.dialer:list_item_padding_top}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_photo_size com.android.dialer:list_item_photo_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_prefix_highlight_color com.android.dialer:list_item_prefix_highlight_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_presence_icon_margin com.android.dialer:list_item_presence_icon_margin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_presence_icon_size com.android.dialer:list_item_presence_icon_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_profile_photo_size com.android.dialer:list_item_profile_photo_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_text_indent com.android.dialer:list_item_text_indent}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_text_offset_top com.android.dialer:list_item_text_offset_top}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_video_call_icon_margin com.android.dialer:list_item_video_call_icon_margin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_item_video_call_icon_size com.android.dialer:list_item_video_call_icon_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_list_section_header_height com.android.dialer:list_section_header_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactListItemView_section_header_background com.android.dialer:section_header_background}</code></td><td></td></tr>
     * </table>
     * @see #ContactListItemView_activated_background
     * @see #ContactListItemView_list_item_background_color
     * @see #ContactListItemView_list_item_data_width_weight
     * @see #ContactListItemView_list_item_gap_between_image_and_text
     * @see #ContactListItemView_list_item_gap_between_label_and_data
     * @see #ContactListItemView_list_item_header_height
     * @see #ContactListItemView_list_item_header_text_color
     * @see #ContactListItemView_list_item_header_text_indent
     * @see #ContactListItemView_list_item_header_text_size
     * @see #ContactListItemView_list_item_height
     * @see #ContactListItemView_list_item_label_width_weight
     * @see #ContactListItemView_list_item_name_text_color
     * @see #ContactListItemView_list_item_name_text_size
     * @see #ContactListItemView_list_item_padding_bottom
     * @see #ContactListItemView_list_item_padding_left
     * @see #ContactListItemView_list_item_padding_right
     * @see #ContactListItemView_list_item_padding_top
     * @see #ContactListItemView_list_item_photo_size
     * @see #ContactListItemView_list_item_prefix_highlight_color
     * @see #ContactListItemView_list_item_presence_icon_margin
     * @see #ContactListItemView_list_item_presence_icon_size
     * @see #ContactListItemView_list_item_profile_photo_size
     * @see #ContactListItemView_list_item_text_indent
     * @see #ContactListItemView_list_item_text_offset_top
     * @see #ContactListItemView_list_item_video_call_icon_margin
     * @see #ContactListItemView_list_item_video_call_icon_size
     * @see #ContactListItemView_list_section_header_height
     * @see #ContactListItemView_section_header_background
     */
    public static final int[] ContactListItemView={
      0x7f040021, 0x7f04014b, 0x7f04014c, 0x7f04014d, 
      0x7f04014e, 0x7f04014f, 0x7f040150, 0x7f040151, 
      0x7f040152, 0x7f040153, 0x7f040154, 0x7f040155, 
      0x7f040156, 0x7f040157, 0x7f040158, 0x7f040159, 
      0x7f04015a, 0x7f04015b, 0x7f04015c, 0x7f04015d, 
      0x7f04015e, 0x7f04015f, 0x7f040160, 0x7f040161, 
      0x7f040162, 0x7f040163, 0x7f040164, 0x7f04019e
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#activated_background}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:activated_background
     */
    public static final int ContactListItemView_activated_background=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_background_color}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:list_item_background_color
     */
    public static final int ContactListItemView_list_item_background_color=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_data_width_weight}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.dialer:list_item_data_width_weight
     */
    public static final int ContactListItemView_list_item_data_width_weight=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_gap_between_image_and_text}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_gap_between_image_and_text
     */
    public static final int ContactListItemView_list_item_gap_between_image_and_text=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_gap_between_label_and_data}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_gap_between_label_and_data
     */
    public static final int ContactListItemView_list_item_gap_between_label_and_data=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_header_height}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_header_height
     */
    public static final int ContactListItemView_list_item_header_height=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_header_text_color}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:list_item_header_text_color
     */
    public static final int ContactListItemView_list_item_header_text_color=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_header_text_indent}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_header_text_indent
     */
    public static final int ContactListItemView_list_item_header_text_indent=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_header_text_size}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_header_text_size
     */
    public static final int ContactListItemView_list_item_header_text_size=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_height}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_height
     */
    public static final int ContactListItemView_list_item_height=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_label_width_weight}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.dialer:list_item_label_width_weight
     */
    public static final int ContactListItemView_list_item_label_width_weight=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_name_text_color}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:list_item_name_text_color
     */
    public static final int ContactListItemView_list_item_name_text_color=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_name_text_size}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_name_text_size
     */
    public static final int ContactListItemView_list_item_name_text_size=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_padding_bottom}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_padding_bottom
     */
    public static final int ContactListItemView_list_item_padding_bottom=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_padding_left}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_padding_left
     */
    public static final int ContactListItemView_list_item_padding_left=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_padding_right}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_padding_right
     */
    public static final int ContactListItemView_list_item_padding_right=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_padding_top}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_padding_top
     */
    public static final int ContactListItemView_list_item_padding_top=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_photo_size}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_photo_size
     */
    public static final int ContactListItemView_list_item_photo_size=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_prefix_highlight_color}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:list_item_prefix_highlight_color
     */
    public static final int ContactListItemView_list_item_prefix_highlight_color=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_presence_icon_margin}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_presence_icon_margin
     */
    public static final int ContactListItemView_list_item_presence_icon_margin=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_presence_icon_size}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_presence_icon_size
     */
    public static final int ContactListItemView_list_item_presence_icon_size=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_profile_photo_size}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_profile_photo_size
     */
    public static final int ContactListItemView_list_item_profile_photo_size=21;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_text_indent}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_text_indent
     */
    public static final int ContactListItemView_list_item_text_indent=22;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_text_offset_top}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_text_offset_top
     */
    public static final int ContactListItemView_list_item_text_offset_top=23;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_video_call_icon_margin}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_video_call_icon_margin
     */
    public static final int ContactListItemView_list_item_video_call_icon_margin=24;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_item_video_call_icon_size}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_item_video_call_icon_size
     */
    public static final int ContactListItemView_list_item_video_call_icon_size=25;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#list_section_header_height}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:list_section_header_height
     */
    public static final int ContactListItemView_list_section_header_height=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#section_header_background}
     * attribute's value can be found in the {@link #ContactListItemView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:section_header_background
     */
    public static final int ContactListItemView_section_header_background=27;
    /**
     * Attributes that can be used with a ContactsDataKind.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ContactsDataKind_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactsDataKind_android_mimeType android:mimeType}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactsDataKind_android_summaryColumn android:summaryColumn}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactsDataKind_android_detailColumn android:detailColumn}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactsDataKind_android_detailSocialSummary android:detailSocialSummary}</code></td><td></td></tr>
     * <tr><td><code>{@link #ContactsDataKind_android_allContactsName android:allContactsName}</code></td><td></td></tr>
     * </table>
     * @see #ContactsDataKind_android_icon
     * @see #ContactsDataKind_android_mimeType
     * @see #ContactsDataKind_android_summaryColumn
     * @see #ContactsDataKind_android_detailColumn
     * @see #ContactsDataKind_android_detailSocialSummary
     * @see #ContactsDataKind_android_allContactsName
     */
    public static final int[] ContactsDataKind={
      0x01010002, 0x01010026, 0x010102a2, 0x010102a3, 
      0x010102a4, 0x010102cc
    };
    /**
     * <p>
     * @attr description
     * Icon used to represent data of this kind.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int ContactsDataKind_android_icon=0;
    /**
     * <p>
     * @attr description
     * Mime-type handled by this mapping.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:mimeType
     */
    public static final int ContactsDataKind_android_mimeType=1;
    /**
     * <p>
     * @attr description
     * Column in data table that summarizes this data.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryColumn
     */
    public static final int ContactsDataKind_android_summaryColumn=2;
    /**
     * <p>
     * @attr description
     * Column in data table that contains details for this data.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:detailColumn
     */
    public static final int ContactsDataKind_android_detailColumn=3;
    /**
     * <p>
     * @attr description
     * Flag indicating that detail should be built from SocialProvider.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:detailSocialSummary
     */
    public static final int ContactsDataKind_android_detailSocialSummary=4;
    /**
     * <p>
     * @attr description
     * Resource representing the term "All Contacts" (e.g. "All Friends" or
     * "All connections"). Optional (Default is "All Contacts").
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:allContactsName
     */
    public static final int ContactsDataKind_android_allContactsName=5;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.android.dialer:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.android.dialer:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f04012e, 0x7f0401b8
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.android.dialer:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.android.dialer:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.android.dialer:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.android.dialer:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.android.dialer:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.android.dialer:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f040133, 0x7f040134, 0x7f040135, 
      0x7f040138, 0x7f040139, 0x7f04013a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.dialer:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a DesignTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DesignTheme_bottomSheetDialogTheme com.android.dialer:bottomSheetDialogTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #DesignTheme_bottomSheetStyle com.android.dialer:bottomSheetStyle}</code></td><td></td></tr>
     * </table>
     * @see #DesignTheme_bottomSheetDialogTheme
     * @see #DesignTheme_bottomSheetStyle
     */
    public static final int[] DesignTheme={
      0x7f040047, 0x7f040048
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#bottomSheetDialogTheme}
     * attribute's value can be found in the {@link #DesignTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:bottomSheetDialogTheme
     */
    public static final int DesignTheme_bottomSheetDialogTheme=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#bottomSheetStyle}
     * attribute's value can be found in the {@link #DesignTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:bottomSheetStyle
     */
    public static final int DesignTheme_bottomSheetStyle=1;
    /**
     * Attributes that can be used with a Dialpad.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Dialpad_dialpad_digits_adjustable_height com.android.dialer:dialpad_digits_adjustable_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #Dialpad_dialpad_digits_adjustable_text_size com.android.dialer:dialpad_digits_adjustable_text_size}</code></td><td></td></tr>
     * <tr><td><code>{@link #Dialpad_dialpad_key_button_touch_tint com.android.dialer:dialpad_key_button_touch_tint}</code></td><td></td></tr>
     * <tr><td><code>{@link #Dialpad_dialpad_key_letters_size_for_dual_alphabets com.android.dialer:dialpad_key_letters_size_for_dual_alphabets}</code></td><td></td></tr>
     * <tr><td><code>{@link #Dialpad_dialpad_key_letters_size_for_single_alphabet com.android.dialer:dialpad_key_letters_size_for_single_alphabet}</code></td><td></td></tr>
     * <tr><td><code>{@link #Dialpad_dialpad_key_number_margin_bottom com.android.dialer:dialpad_key_number_margin_bottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #Dialpad_dialpad_key_numbers_size com.android.dialer:dialpad_key_numbers_size}</code></td><td></td></tr>
     * </table>
     * @see #Dialpad_dialpad_digits_adjustable_height
     * @see #Dialpad_dialpad_digits_adjustable_text_size
     * @see #Dialpad_dialpad_key_button_touch_tint
     * @see #Dialpad_dialpad_key_letters_size_for_dual_alphabets
     * @see #Dialpad_dialpad_key_letters_size_for_single_alphabet
     * @see #Dialpad_dialpad_key_number_margin_bottom
     * @see #Dialpad_dialpad_key_numbers_size
     */
    public static final int[] Dialpad={
      0x7f0400bf, 0x7f0400c0, 0x7f0400c3, 0x7f0400c4, 
      0x7f0400c5, 0x7f0400c6, 0x7f0400c7
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_digits_adjustable_height}
     * attribute's value can be found in the {@link #Dialpad} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dialpad_digits_adjustable_height
     */
    public static final int Dialpad_dialpad_digits_adjustable_height=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_digits_adjustable_text_size}
     * attribute's value can be found in the {@link #Dialpad} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dialpad_digits_adjustable_text_size
     */
    public static final int Dialpad_dialpad_digits_adjustable_text_size=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_key_button_touch_tint}
     * attribute's value can be found in the {@link #Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:dialpad_key_button_touch_tint
     */
    public static final int Dialpad_dialpad_key_button_touch_tint=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_key_letters_size_for_dual_alphabets}
     * attribute's value can be found in the {@link #Dialpad} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dialpad_key_letters_size_for_dual_alphabets
     */
    public static final int Dialpad_dialpad_key_letters_size_for_dual_alphabets=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_key_letters_size_for_single_alphabet}
     * attribute's value can be found in the {@link #Dialpad} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dialpad_key_letters_size_for_single_alphabet
     */
    public static final int Dialpad_dialpad_key_letters_size_for_single_alphabet=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_key_number_margin_bottom}
     * attribute's value can be found in the {@link #Dialpad} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dialpad_key_number_margin_bottom
     */
    public static final int Dialpad_dialpad_key_number_margin_bottom=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_key_numbers_size}
     * attribute's value can be found in the {@link #Dialpad} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dialpad_key_numbers_size
     */
    public static final int Dialpad_dialpad_key_numbers_size=6;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.android.dialer:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.android.dialer:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.android.dialer:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.android.dialer:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.android.dialer:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.android.dialer:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.android.dialer:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.android.dialer:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x7f04002a, 0x7f04002b, 0x7f04003b, 0x7f040089, 
      0x7f0400d2, 0x7f040101, 0x7f0401ad, 0x7f0401fd
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a Favorites.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Favorites_favorites_padding_bottom com.android.dialer:favorites_padding_bottom}</code></td><td></td></tr>
     * </table>
     * @see #Favorites_favorites_padding_bottom
     */
    public static final int[] Favorites={
      0x7f0400f2
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#favorites_padding_bottom}
     * attribute's value can be found in the {@link #Favorites} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:favorites_padding_bottom
     */
    public static final int Favorites_favorites_padding_bottom=0;
    /**
     * Attributes that can be used with a FixedAspectSurfaceView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FixedAspectSurfaceView_aspectRatio com.android.dialer:aspectRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #FixedAspectSurfaceView_scaleHeight com.android.dialer:scaleHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FixedAspectSurfaceView_scaleWidth com.android.dialer:scaleWidth}</code></td><td></td></tr>
     * </table>
     * @see #FixedAspectSurfaceView_aspectRatio
     * @see #FixedAspectSurfaceView_scaleHeight
     * @see #FixedAspectSurfaceView_scaleWidth
     */
    public static final int[] FixedAspectSurfaceView={
      0x7f04002c, 0x7f040196, 0x7f040197
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#aspectRatio}
     * attribute's value can be found in the {@link #FixedAspectSurfaceView} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.dialer:aspectRatio
     */
    public static final int FixedAspectSurfaceView_aspectRatio=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#scaleHeight}
     * attribute's value can be found in the {@link #FixedAspectSurfaceView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:scaleHeight
     */
    public static final int FixedAspectSurfaceView_scaleHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#scaleWidth}
     * attribute's value can be found in the {@link #FixedAspectSurfaceView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:scaleWidth
     */
    public static final int FixedAspectSurfaceView_scaleWidth=2;
    /**
     * Attributes that can be used with a FloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTint com.android.dialer:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTintMode com.android.dialer:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_borderWidth com.android.dialer:borderWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_elevation com.android.dialer:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabCustomSize com.android.dialer:fabCustomSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabSize com.android.dialer:fabSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hideMotionSpec com.android.dialer:hideMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_hoveredFocusedTranslationZ com.android.dialer:hoveredFocusedTranslationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_maxImageSize com.android.dialer:maxImageSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_pressedTranslationZ com.android.dialer:pressedTranslationZ}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_rippleColor com.android.dialer:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_showMotionSpec com.android.dialer:showMotionSpec}</code></td><td></td></tr>
     * <tr><td><code>{@link #FloatingActionButton_useCompatPadding com.android.dialer:useCompatPadding}</code></td><td></td></tr>
     * </table>
     * @see #FloatingActionButton_backgroundTint
     * @see #FloatingActionButton_backgroundTintMode
     * @see #FloatingActionButton_borderWidth
     * @see #FloatingActionButton_elevation
     * @see #FloatingActionButton_fabCustomSize
     * @see #FloatingActionButton_fabSize
     * @see #FloatingActionButton_hideMotionSpec
     * @see #FloatingActionButton_hoveredFocusedTranslationZ
     * @see #FloatingActionButton_maxImageSize
     * @see #FloatingActionButton_pressedTranslationZ
     * @see #FloatingActionButton_rippleColor
     * @see #FloatingActionButton_showMotionSpec
     * @see #FloatingActionButton_useCompatPadding
     */
    public static final int[] FloatingActionButton={
      0x7f040039, 0x7f04003a, 0x7f040043, 0x7f0400d9, 
      0x7f0400eb, 0x7f0400ec, 0x7f040109, 0x7f040111, 
      0x7f04016c, 0x7f040188, 0x7f040195, 0x7f0401a4, 
      0x7f04021c
    };
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:backgroundTint
     */
    public static final int FloatingActionButton_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:backgroundTintMode
     */
    public static final int FloatingActionButton_backgroundTintMode=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#borderWidth}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:borderWidth
     */
    public static final int FloatingActionButton_borderWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:elevation
     */
    public static final int FloatingActionButton_elevation=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fabCustomSize}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:fabCustomSize
     */
    public static final int FloatingActionButton_fabCustomSize=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fabSize}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mini</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:fabSize
     */
    public static final int FloatingActionButton_fabSize=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#hideMotionSpec}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:hideMotionSpec
     */
    public static final int FloatingActionButton_hideMotionSpec=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#hoveredFocusedTranslationZ}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:hoveredFocusedTranslationZ
     */
    public static final int FloatingActionButton_hoveredFocusedTranslationZ=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#maxImageSize}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:maxImageSize
     */
    public static final int FloatingActionButton_maxImageSize=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#pressedTranslationZ}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:pressedTranslationZ
     */
    public static final int FloatingActionButton_pressedTranslationZ=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#rippleColor}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:rippleColor
     */
    public static final int FloatingActionButton_rippleColor=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#showMotionSpec}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:showMotionSpec
     */
    public static final int FloatingActionButton_showMotionSpec=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#useCompatPadding}
     * attribute's value can be found in the {@link #FloatingActionButton} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:useCompatPadding
     */
    public static final int FloatingActionButton_useCompatPadding=12;
    /**
     * Attributes that can be used with a FloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_Behavior_Layout_behavior_autoHide com.android.dialer:behavior_autoHide}</code></td><td></td></tr>
     * </table>
     * @see #FloatingActionButton_Behavior_Layout_behavior_autoHide
     */
    public static final int[] FloatingActionButton_Behavior_Layout={
      0x7f04003c
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#behavior_autoHide}
     * attribute's value can be found in the {@link #FloatingActionButton_Behavior_Layout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:behavior_autoHide
     */
    public static final int FloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * Attributes that can be used with a FlowLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FlowLayout_itemSpacing com.android.dialer:itemSpacing}</code></td><td></td></tr>
     * <tr><td><code>{@link #FlowLayout_lineSpacing com.android.dialer:lineSpacing}</code></td><td></td></tr>
     * </table>
     * @see #FlowLayout_itemSpacing
     * @see #FlowLayout_lineSpacing
     */
    public static final int[] FlowLayout={
      0x7f040129, 0x7f04013f
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemSpacing}
     * attribute's value can be found in the {@link #FlowLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:itemSpacing
     */
    public static final int FlowLayout_itemSpacing=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#lineSpacing}
     * attribute's value can be found in the {@link #FlowLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:lineSpacing
     */
    public static final int FlowLayout_lineSpacing=1;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.dialer:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.dialer:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.dialer:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.dialer:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.dialer:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.dialer:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
      0x7f0400f7, 0x7f0400f8, 0x7f0400f9, 0x7f0400fa, 
      0x7f0400fb, 0x7f0400fc
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.dialer:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.dialer:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.android.dialer:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.dialer:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.android.dialer:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f0400f5, 0x7f0400fd, 0x7f0400fe, 
      0x7f0400ff, 0x7f04021a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.dialer:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.dialer:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a ForegroundLinearLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foreground android:foreground}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foregroundGravity android:foregroundGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_foregroundInsidePadding com.android.dialer:foregroundInsidePadding}</code></td><td></td></tr>
     * </table>
     * @see #ForegroundLinearLayout_android_foreground
     * @see #ForegroundLinearLayout_android_foregroundGravity
     * @see #ForegroundLinearLayout_foregroundInsidePadding
     */
    public static final int[] ForegroundLinearLayout={
      0x01010109, 0x01010200, 0x7f040100
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foreground}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:foreground
     */
    public static final int ForegroundLinearLayout_android_foreground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foregroundGravity}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:foregroundGravity
     */
    public static final int ForegroundLinearLayout_android_foregroundGravity=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#foregroundInsidePadding}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:foregroundInsidePadding
     */
    public static final int ForegroundLinearLayout_foregroundInsidePadding=2;
    /**
     * Attributes that can be used with a LinearColorBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearColorBar_backgroundColor com.android.dialer:backgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearColorBar_blueColor com.android.dialer:blueColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearColorBar_greenColor com.android.dialer:greenColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearColorBar_orangeColor com.android.dialer:orangeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearColorBar_redColor com.android.dialer:redColor}</code></td><td></td></tr>
     * </table>
     * @see #LinearColorBar_backgroundColor
     * @see #LinearColorBar_blueColor
     * @see #LinearColorBar_greenColor
     * @see #LinearColorBar_orangeColor
     * @see #LinearColorBar_redColor
     */
    public static final int[] LinearColorBar={
      0x7f040036, 0x7f040042, 0x7f040103, 0x7f040175, 
      0x7f040192
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#backgroundColor}
     * attribute's value can be found in the {@link #LinearColorBar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:backgroundColor
     */
    public static final int LinearColorBar_backgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#blueColor}
     * attribute's value can be found in the {@link #LinearColorBar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:blueColor
     */
    public static final int LinearColorBar_blueColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#greenColor}
     * attribute's value can be found in the {@link #LinearColorBar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:greenColor
     */
    public static final int LinearColorBar_greenColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#orangeColor}
     * attribute's value can be found in the {@link #LinearColorBar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:orangeColor
     */
    public static final int LinearColorBar_orangeColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#redColor}
     * attribute's value can be found in the {@link #LinearColorBar} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:redColor
     */
    public static final int LinearColorBar_redColor=4;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.android.dialer:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.android.dialer:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.android.dialer:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.android.dialer:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f0400ce, 0x7f0400d0, 0x7f04016d, 
      0x7f0401a3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a MaterialButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetLeft android:insetLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetRight android:insetRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetTop android:insetTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_android_insetBottom android:insetBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTint com.android.dialer:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #MaterialButton_backgroundTintMode com.android.dialer:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_cornerRadius com.android.dialer:cornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_icon com.android.dialer:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconGravity com.android.dialer:iconGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_iconPadding com.android.dialer:iconPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_iconSize com.android.dialer:iconSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTint com.android.dialer:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MaterialButton_iconTintMode com.android.dialer:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MaterialButton_rippleColor com.android.dialer:rippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeColor com.android.dialer:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialButton_strokeWidth com.android.dialer:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialButton_android_insetLeft
     * @see #MaterialButton_android_insetRight
     * @see #MaterialButton_android_insetTop
     * @see #MaterialButton_android_insetBottom
     * @see #MaterialButton_backgroundTint
     * @see #MaterialButton_backgroundTintMode
     * @see #MaterialButton_cornerRadius
     * @see #MaterialButton_icon
     * @see #MaterialButton_iconGravity
     * @see #MaterialButton_iconPadding
     * @see #MaterialButton_iconSize
     * @see #MaterialButton_iconTint
     * @see #MaterialButton_iconTintMode
     * @see #MaterialButton_rippleColor
     * @see #MaterialButton_strokeColor
     * @see #MaterialButton_strokeWidth
     */
    public static final int[] MaterialButton={
      0x010101b7, 0x010101b8, 0x010101b9, 0x010101ba, 
      0x7f040039, 0x7f04003a, 0x7f0400b4, 0x7f040112, 
      0x7f040114, 0x7f040115, 0x7f040116, 0x7f040118, 
      0x7f040119, 0x7f040195, 0x7f0401ba, 0x7f0401bb
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetLeft}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetLeft
     */
    public static final int MaterialButton_android_insetLeft=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetRight}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetRight
     */
    public static final int MaterialButton_android_insetRight=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetTop}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetTop
     */
    public static final int MaterialButton_android_insetTop=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#insetBottom}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:insetBottom
     */
    public static final int MaterialButton_android_insetBottom=3;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:backgroundTint
     */
    public static final int MaterialButton_backgroundTint=4;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:backgroundTintMode
     */
    public static final int MaterialButton_backgroundTintMode=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#cornerRadius}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:cornerRadius
     */
    public static final int MaterialButton_cornerRadius=6;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:icon
     */
    public static final int MaterialButton_icon=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#iconGravity}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * <tr><td>textStart</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:iconGravity
     */
    public static final int MaterialButton_iconGravity=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#iconPadding}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:iconPadding
     */
    public static final int MaterialButton_iconPadding=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#iconSize}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:iconSize
     */
    public static final int MaterialButton_iconSize=10;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:iconTint
     */
    public static final int MaterialButton_iconTint=11;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:iconTintMode
     */
    public static final int MaterialButton_iconTintMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#rippleColor}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:rippleColor
     */
    public static final int MaterialButton_rippleColor=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#strokeColor}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:strokeColor
     */
    public static final int MaterialButton_strokeColor=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #MaterialButton} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:strokeWidth
     */
    public static final int MaterialButton_strokeWidth=15;
    /**
     * Attributes that can be used with a MaterialCardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeColor com.android.dialer:strokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialCardView_strokeWidth com.android.dialer:strokeWidth}</code></td><td></td></tr>
     * </table>
     * @see #MaterialCardView_strokeColor
     * @see #MaterialCardView_strokeWidth
     */
    public static final int[] MaterialCardView={
      0x7f0401ba, 0x7f0401bb
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#strokeColor}
     * attribute's value can be found in the {@link #MaterialCardView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:strokeColor
     */
    public static final int MaterialCardView_strokeColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#strokeWidth}
     * attribute's value can be found in the {@link #MaterialCardView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:strokeWidth
     */
    public static final int MaterialCardView_strokeWidth=1;
    /**
     * Attributes that can be used with a MaterialComponentsTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_bottomSheetDialogTheme com.android.dialer:bottomSheetDialogTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_bottomSheetStyle com.android.dialer:bottomSheetStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_chipGroupStyle com.android.dialer:chipGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_chipStandaloneStyle com.android.dialer:chipStandaloneStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_chipStyle com.android.dialer:chipStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorAccent com.android.dialer:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorBackgroundFloating com.android.dialer:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorPrimary com.android.dialer:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorPrimaryDark com.android.dialer:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_colorSecondary com.android.dialer:colorSecondary}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_editTextStyle com.android.dialer:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_floatingActionButtonStyle com.android.dialer:floatingActionButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_materialButtonStyle com.android.dialer:materialButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_materialCardViewStyle com.android.dialer:materialCardViewStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_navigationViewStyle com.android.dialer:navigationViewStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_scrimBackground com.android.dialer:scrimBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_snackbarButtonStyle com.android.dialer:snackbarButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_tabStyle com.android.dialer:tabStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceBody1 com.android.dialer:textAppearanceBody1}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceBody2 com.android.dialer:textAppearanceBody2}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceButton com.android.dialer:textAppearanceButton}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceCaption com.android.dialer:textAppearanceCaption}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline1 com.android.dialer:textAppearanceHeadline1}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline2 com.android.dialer:textAppearanceHeadline2}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline3 com.android.dialer:textAppearanceHeadline3}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline4 com.android.dialer:textAppearanceHeadline4}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline5 com.android.dialer:textAppearanceHeadline5}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceHeadline6 com.android.dialer:textAppearanceHeadline6}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceOverline com.android.dialer:textAppearanceOverline}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceSubtitle1 com.android.dialer:textAppearanceSubtitle1}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textAppearanceSubtitle2 com.android.dialer:textAppearanceSubtitle2}</code></td><td></td></tr>
     * <tr><td><code>{@link #MaterialComponentsTheme_textInputStyle com.android.dialer:textInputStyle}</code></td><td></td></tr>
     * </table>
     * @see #MaterialComponentsTheme_bottomSheetDialogTheme
     * @see #MaterialComponentsTheme_bottomSheetStyle
     * @see #MaterialComponentsTheme_chipGroupStyle
     * @see #MaterialComponentsTheme_chipStandaloneStyle
     * @see #MaterialComponentsTheme_chipStyle
     * @see #MaterialComponentsTheme_colorAccent
     * @see #MaterialComponentsTheme_colorBackgroundFloating
     * @see #MaterialComponentsTheme_colorPrimary
     * @see #MaterialComponentsTheme_colorPrimaryDark
     * @see #MaterialComponentsTheme_colorSecondary
     * @see #MaterialComponentsTheme_editTextStyle
     * @see #MaterialComponentsTheme_floatingActionButtonStyle
     * @see #MaterialComponentsTheme_materialButtonStyle
     * @see #MaterialComponentsTheme_materialCardViewStyle
     * @see #MaterialComponentsTheme_navigationViewStyle
     * @see #MaterialComponentsTheme_scrimBackground
     * @see #MaterialComponentsTheme_snackbarButtonStyle
     * @see #MaterialComponentsTheme_tabStyle
     * @see #MaterialComponentsTheme_textAppearanceBody1
     * @see #MaterialComponentsTheme_textAppearanceBody2
     * @see #MaterialComponentsTheme_textAppearanceButton
     * @see #MaterialComponentsTheme_textAppearanceCaption
     * @see #MaterialComponentsTheme_textAppearanceHeadline1
     * @see #MaterialComponentsTheme_textAppearanceHeadline2
     * @see #MaterialComponentsTheme_textAppearanceHeadline3
     * @see #MaterialComponentsTheme_textAppearanceHeadline4
     * @see #MaterialComponentsTheme_textAppearanceHeadline5
     * @see #MaterialComponentsTheme_textAppearanceHeadline6
     * @see #MaterialComponentsTheme_textAppearanceOverline
     * @see #MaterialComponentsTheme_textAppearanceSubtitle1
     * @see #MaterialComponentsTheme_textAppearanceSubtitle2
     * @see #MaterialComponentsTheme_textInputStyle
     */
    public static final int[] MaterialComponentsTheme={
      0x7f040047, 0x7f040048, 0x7f04006e, 0x7f040078, 
      0x7f04007c, 0x7f04008a, 0x7f04008b, 0x7f040099, 
      0x7f04009b, 0x7f04009c, 0x7f0400d8, 0x7f0400f4, 
      0x7f040167, 0x7f040168, 0x7f040173, 0x7f040199, 
      0x7f0401aa, 0x7f0401dd, 0x7f0401e2, 0x7f0401e3, 
      0x7f0401e4, 0x7f0401e5, 0x7f0401e6, 0x7f0401e7, 
      0x7f0401e8, 0x7f0401e9, 0x7f0401ea, 0x7f0401eb, 
      0x7f0401f0, 0x7f0401f5, 0x7f0401f6, 0x7f0401fa
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#bottomSheetDialogTheme}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:bottomSheetDialogTheme
     */
    public static final int MaterialComponentsTheme_bottomSheetDialogTheme=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#bottomSheetStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:bottomSheetStyle
     */
    public static final int MaterialComponentsTheme_bottomSheetStyle=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipGroupStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:chipGroupStyle
     */
    public static final int MaterialComponentsTheme_chipGroupStyle=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipStandaloneStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:chipStandaloneStyle
     */
    public static final int MaterialComponentsTheme_chipStandaloneStyle=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#chipStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:chipStyle
     */
    public static final int MaterialComponentsTheme_chipStyle=4;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorAccent
     */
    public static final int MaterialComponentsTheme_colorAccent=5;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorBackgroundFloating
     */
    public static final int MaterialComponentsTheme_colorBackgroundFloating=6;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorPrimary
     */
    public static final int MaterialComponentsTheme_colorPrimary=7;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorPrimaryDark
     */
    public static final int MaterialComponentsTheme_colorPrimaryDark=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#colorSecondary}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:colorSecondary
     */
    public static final int MaterialComponentsTheme_colorSecondary=9;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:editTextStyle
     */
    public static final int MaterialComponentsTheme_editTextStyle=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#floatingActionButtonStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.dialer:floatingActionButtonStyle
     */
    public static final int MaterialComponentsTheme_floatingActionButtonStyle=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#materialButtonStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:materialButtonStyle
     */
    public static final int MaterialComponentsTheme_materialButtonStyle=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#materialCardViewStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:materialCardViewStyle
     */
    public static final int MaterialComponentsTheme_materialCardViewStyle=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#navigationViewStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:navigationViewStyle
     */
    public static final int MaterialComponentsTheme_navigationViewStyle=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#scrimBackground}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:scrimBackground
     */
    public static final int MaterialComponentsTheme_scrimBackground=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#snackbarButtonStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:snackbarButtonStyle
     */
    public static final int MaterialComponentsTheme_snackbarButtonStyle=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:tabStyle
     */
    public static final int MaterialComponentsTheme_tabStyle=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceBody1}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceBody1
     */
    public static final int MaterialComponentsTheme_textAppearanceBody1=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceBody2}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceBody2
     */
    public static final int MaterialComponentsTheme_textAppearanceBody2=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceButton}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceButton
     */
    public static final int MaterialComponentsTheme_textAppearanceButton=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceCaption}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceCaption
     */
    public static final int MaterialComponentsTheme_textAppearanceCaption=21;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceHeadline1}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceHeadline1
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline1=22;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceHeadline2}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceHeadline2
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline2=23;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceHeadline3}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceHeadline3
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline3=24;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceHeadline4}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceHeadline4
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline4=25;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceHeadline5}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceHeadline5
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline5=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceHeadline6}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceHeadline6
     */
    public static final int MaterialComponentsTheme_textAppearanceHeadline6=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceOverline}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceOverline
     */
    public static final int MaterialComponentsTheme_textAppearanceOverline=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceSubtitle1}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceSubtitle1
     */
    public static final int MaterialComponentsTheme_textAppearanceSubtitle1=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textAppearanceSubtitle2}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textAppearanceSubtitle2
     */
    public static final int MaterialComponentsTheme_textAppearanceSubtitle2=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#textInputStyle}
     * attribute's value can be found in the {@link #MaterialComponentsTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:textInputStyle
     */
    public static final int MaterialComponentsTheme_textInputStyle=31;
    /**
     * Attributes that can be used with a MaxHeightScrollView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaxHeightScrollView_maxHeight com.android.dialer:maxHeight}</code></td><td></td></tr>
     * </table>
     * @see #MaxHeightScrollView_maxHeight
     */
    public static final int[] MaxHeightScrollView={
      0x7f04016b
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#maxHeight}
     * attribute's value can be found in the {@link #MaxHeightScrollView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:maxHeight
     */
    public static final int MaxHeightScrollView_maxHeight=0;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.android.dialer:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.android.dialer:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.android.dialer:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.android.dialer:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.android.dialer:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.android.dialer:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.android.dialer:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.android.dialer:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.android.dialer:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.android.dialer:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f04000d, 0x7f04001f, 0x7f040020, 
      0x7f040029, 0x7f0400a3, 0x7f040118, 0x7f040119, 
      0x7f040174, 0x7f0401a2, 0x7f040216
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.android.dialer:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.android.dialer:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f040187, 
      0x7f0401bc
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a NavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationView_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_fitsSystemWindows android:fitsSystemWindows}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_elevation com.android.dialer:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #NavigationView_headerLayout com.android.dialer:headerLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemBackground com.android.dialer:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemHorizontalPadding com.android.dialer:itemHorizontalPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconPadding com.android.dialer:itemIconPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconTint com.android.dialer:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextAppearance com.android.dialer:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextColor com.android.dialer:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_menu com.android.dialer:menu}</code></td><td></td></tr>
     * </table>
     * @see #NavigationView_android_background
     * @see #NavigationView_android_fitsSystemWindows
     * @see #NavigationView_android_maxWidth
     * @see #NavigationView_elevation
     * @see #NavigationView_headerLayout
     * @see #NavigationView_itemBackground
     * @see #NavigationView_itemHorizontalPadding
     * @see #NavigationView_itemIconPadding
     * @see #NavigationView_itemIconTint
     * @see #NavigationView_itemTextAppearance
     * @see #NavigationView_itemTextColor
     * @see #NavigationView_menu
     */
    public static final int[] NavigationView={
      0x010100d4, 0x010100dd, 0x0101011f, 0x7f0400d9, 
      0x7f040104, 0x7f040122, 0x7f040123, 0x7f040125, 
      0x7f040127, 0x7f04012a, 0x7f04012d, 0x7f04016e
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int NavigationView_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fitsSystemWindows}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:fitsSystemWindows
     */
    public static final int NavigationView_android_fitsSystemWindows=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int NavigationView_android_maxWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:elevation
     */
    public static final int NavigationView_elevation=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#headerLayout}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:headerLayout
     */
    public static final int NavigationView_headerLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemBackground}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:itemBackground
     */
    public static final int NavigationView_itemBackground=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemHorizontalPadding}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:itemHorizontalPadding
     */
    public static final int NavigationView_itemHorizontalPadding=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemIconPadding}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:itemIconPadding
     */
    public static final int NavigationView_itemIconPadding=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:itemIconTint
     */
    public static final int NavigationView_itemIconTint=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemTextAppearance}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:itemTextAppearance
     */
    public static final int NavigationView_itemTextAppearance=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:itemTextColor
     */
    public static final int NavigationView_itemTextColor=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#menu}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:menu
     */
    public static final int NavigationView_menu=11;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.android.dialer:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x7f040176
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.android.dialer:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f0401b3
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a ProportionalLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ProportionalLayout_direction com.android.dialer:direction}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProportionalLayout_ratio com.android.dialer:ratio}</code></td><td></td></tr>
     * </table>
     * @see #ProportionalLayout_direction
     * @see #ProportionalLayout_ratio
     */
    public static final int[] ProportionalLayout={
      0x7f0400cc, 0x7f040191
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#direction}
     * attribute's value can be found in the {@link #ProportionalLayout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:direction
     */
    public static final int ProportionalLayout_direction=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#ratio}
     * attribute's value can be found in the {@link #ProportionalLayout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.dialer:ratio
     */
    public static final int ProportionalLayout_ratio=1;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.android.dialer:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.android.dialer:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x7f040177, 0x7f04017a
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.android.dialer:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.android.dialer:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.android.dialer:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.android.dialer:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.android.dialer:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.android.dialer:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.android.dialer:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.android.dialer:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.android.dialer:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100f1, 0x7f0400ed, 0x7f0400ee, 
      0x7f0400ef, 0x7f0400f0, 0x7f0400f1, 0x7f040132, 
      0x7f040194, 0x7f0401ac, 0x7f0401b2
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=6;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extandroidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:layoutManager
     */
    public static final int RecyclerView_layoutManager=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.dialer:spanCount
     */
    public static final int RecyclerView_spanCount=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=10;
    /**
     * Attributes that can be used with a ResizingText.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ResizingText_resizing_text_min_size com.android.dialer:resizing_text_min_size}</code></td><td></td></tr>
     * </table>
     * @see #ResizingText_resizing_text_min_size
     */
    public static final int[] ResizingText={
      0x7f040193
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#resizing_text_min_size}
     * attribute's value can be found in the {@link #ResizingText} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:resizing_text_min_size
     */
    public static final int ResizingText_resizing_text_min_size=0;
    /**
     * Attributes that can be used with a RttCheckableButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RttCheckableButton_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #RttCheckableButton_contentDescriptionChecked com.android.dialer:contentDescriptionChecked}</code></td><td></td></tr>
     * <tr><td><code>{@link #RttCheckableButton_contentDescriptionUnchecked com.android.dialer:contentDescriptionUnchecked}</code></td><td></td></tr>
     * </table>
     * @see #RttCheckableButton_android_checked
     * @see #RttCheckableButton_contentDescriptionChecked
     * @see #RttCheckableButton_contentDescriptionUnchecked
     */
    public static final int[] RttCheckableButton={
      0x01010106, 0x7f0400a4, 0x7f0400a5
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#checked}
     * attribute's value can be found in the {@link #RttCheckableButton} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int RttCheckableButton_android_checked=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#contentDescriptionChecked}
     * attribute's value can be found in the {@link #RttCheckableButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:contentDescriptionChecked
     */
    public static final int RttCheckableButton_contentDescriptionChecked=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#contentDescriptionUnchecked}
     * attribute's value can be found in the {@link #RttCheckableButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:contentDescriptionUnchecked
     */
    public static final int RttCheckableButton_contentDescriptionUnchecked=2;
    /**
     * Attributes that can be used with a ScrimInsetsFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrimInsetsFrameLayout_insetForeground com.android.dialer:insetForeground}</code></td><td></td></tr>
     * </table>
     * @see #ScrimInsetsFrameLayout_insetForeground
     */
    public static final int[] ScrimInsetsFrameLayout={
      0x7f040120
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#insetForeground}
     * attribute's value can be found in the {@link #ScrimInsetsFrameLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:insetForeground
     */
    public static final int ScrimInsetsFrameLayout_insetForeground=0;
    /**
     * Attributes that can be used with a ScrollingViewBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrollingViewBehavior_Layout_behavior_overlapTop com.android.dialer:behavior_overlapTop}</code></td><td></td></tr>
     * </table>
     * @see #ScrollingViewBehavior_Layout_behavior_overlapTop
     */
    public static final int[] ScrollingViewBehavior_Layout={
      0x7f04003f
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#behavior_overlapTop}
     * attribute's value can be found in the {@link #ScrollingViewBehavior_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:behavior_overlapTop
     */
    public static final int ScrollingViewBehavior_Layout_behavior_overlapTop=0;
    public static final int[] SearchEditTextLayout={
    };
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.android.dialer:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.android.dialer:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.android.dialer:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.android.dialer:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.android.dialer:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.android.dialer:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.android.dialer:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.android.dialer:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.android.dialer:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.android.dialer:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.android.dialer:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.android.dialer:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.android.dialer:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f04007d, 0x7f04009f, 0x7f0400ba, 0x7f040102, 
      0x7f04011a, 0x7f040131, 0x7f04018b, 0x7f04018c, 
      0x7f04019b, 0x7f04019c, 0x7f0401bd, 0x7f0401c2, 
      0x7f04021f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a Snackbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Snackbar_snackbarButtonStyle com.android.dialer:snackbarButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Snackbar_snackbarStyle com.android.dialer:snackbarStyle}</code></td><td></td></tr>
     * </table>
     * @see #Snackbar_snackbarButtonStyle
     * @see #Snackbar_snackbarStyle
     */
    public static final int[] Snackbar={
      0x7f0401aa, 0x7f0401ab
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#snackbarButtonStyle}
     * attribute's value can be found in the {@link #Snackbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:snackbarButtonStyle
     */
    public static final int Snackbar_snackbarButtonStyle=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#snackbarStyle}
     * attribute's value can be found in the {@link #Snackbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:snackbarStyle
     */
    public static final int Snackbar_snackbarStyle=1;
    /**
     * Attributes that can be used with a SnackbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SnackbarLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SnackbarLayout_elevation com.android.dialer:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_maxActionInlineWidth com.android.dialer:maxActionInlineWidth}</code></td><td></td></tr>
     * </table>
     * @see #SnackbarLayout_android_maxWidth
     * @see #SnackbarLayout_elevation
     * @see #SnackbarLayout_maxActionInlineWidth
     */
    public static final int[] SnackbarLayout={
      0x0101011f, 0x7f0400d9, 0x7f040169
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SnackbarLayout_android_maxWidth=0;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:elevation
     */
    public static final int SnackbarLayout_elevation=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#maxActionInlineWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:maxActionInlineWidth
     */
    public static final int SnackbarLayout_maxActionInlineWidth=2;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.android.dialer:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x7f040184
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.android.dialer:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.android.dialer:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.android.dialer:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.android.dialer:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.android.dialer:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.android.dialer:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.android.dialer:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.android.dialer:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.android.dialer:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.android.dialer:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.android.dialer:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f0401a5, 
      0x7f0401b0, 0x7f0401c3, 0x7f0401c4, 0x7f0401c6, 
      0x7f0401fe, 0x7f0401ff, 0x7f040200, 0x7f040217, 
      0x7f040218, 0x7f040219
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a SwitchPreferenceWithClickableSummary.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreferenceWithClickableSummary_urlToOpen com.android.dialer:urlToOpen}</code></td><td></td></tr>
     * </table>
     * @see #SwitchPreferenceWithClickableSummary_urlToOpen
     */
    public static final int[] SwitchPreferenceWithClickableSummary={
      0x7f04021b
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#urlToOpen}
     * attribute's value can be found in the {@link #SwitchPreferenceWithClickableSummary} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:urlToOpen
     */
    public static final int SwitchPreferenceWithClickableSummary_urlToOpen=0;
    /**
     * Attributes that can be used with a TabItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #TabItem_android_icon
     * @see #TabItem_android_layout
     * @see #TabItem_android_text
     */
    public static final int[] TabItem={
      0x01010002, 0x010100f2, 0x0101014f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #TabItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int TabItem_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #TabItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int TabItem_android_layout=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #TabItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int TabItem_android_text=2;
    /**
     * Attributes that can be used with a TabLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabLayout_tabBackground com.android.dialer:tabBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabContentStart com.android.dialer:tabContentStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabGravity com.android.dialer:tabGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTint com.android.dialer:tabIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIconTintMode com.android.dialer:tabIconTintMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicator com.android.dialer:tabIndicator}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorAnimationDuration com.android.dialer:tabIndicatorAnimationDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorColor com.android.dialer:tabIndicatorColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorFullWidth com.android.dialer:tabIndicatorFullWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorGravity com.android.dialer:tabIndicatorGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorHeight com.android.dialer:tabIndicatorHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabInlineLabel com.android.dialer:tabInlineLabel}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabMaxWidth com.android.dialer:tabMaxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabMinWidth com.android.dialer:tabMinWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabMode com.android.dialer:tabMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPadding com.android.dialer:tabPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingBottom com.android.dialer:tabPaddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingEnd com.android.dialer:tabPaddingEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingStart com.android.dialer:tabPaddingStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingTop com.android.dialer:tabPaddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabRippleColor com.android.dialer:tabRippleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabSelectedTextColor com.android.dialer:tabSelectedTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextAppearance com.android.dialer:tabTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextColor com.android.dialer:tabTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabLayout_tabUnboundedRipple com.android.dialer:tabUnboundedRipple}</code></td><td></td></tr>
     * </table>
     * @see #TabLayout_tabBackground
     * @see #TabLayout_tabContentStart
     * @see #TabLayout_tabGravity
     * @see #TabLayout_tabIconTint
     * @see #TabLayout_tabIconTintMode
     * @see #TabLayout_tabIndicator
     * @see #TabLayout_tabIndicatorAnimationDuration
     * @see #TabLayout_tabIndicatorColor
     * @see #TabLayout_tabIndicatorFullWidth
     * @see #TabLayout_tabIndicatorGravity
     * @see #TabLayout_tabIndicatorHeight
     * @see #TabLayout_tabInlineLabel
     * @see #TabLayout_tabMaxWidth
     * @see #TabLayout_tabMinWidth
     * @see #TabLayout_tabMode
     * @see #TabLayout_tabPadding
     * @see #TabLayout_tabPaddingBottom
     * @see #TabLayout_tabPaddingEnd
     * @see #TabLayout_tabPaddingStart
     * @see #TabLayout_tabPaddingTop
     * @see #TabLayout_tabRippleColor
     * @see #TabLayout_tabSelectedTextColor
     * @see #TabLayout_tabTextAppearance
     * @see #TabLayout_tabTextColor
     * @see #TabLayout_tabUnboundedRipple
     */
    public static final int[] TabLayout={
      0x7f0401c7, 0x7f0401c8, 0x7f0401c9, 0x7f0401ca, 
      0x7f0401cb, 0x7f0401cc, 0x7f0401cd, 0x7f0401ce, 
      0x7f0401cf, 0x7f0401d0, 0x7f0401d1, 0x7f0401d2, 
      0x7f0401d3, 0x7f0401d4, 0x7f0401d5, 0x7f0401d6, 
      0x7f0401d7, 0x7f0401d8, 0x7f0401d9, 0x7f0401da, 
      0x7f0401db, 0x7f0401dc, 0x7f0401de, 0x7f0401df, 
      0x7f0401e0
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabBackground}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:tabBackground
     */
    public static final int TabLayout_tabBackground=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabContentStart}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:tabContentStart
     */
    public static final int TabLayout_tabContentStart=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabGravity}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:tabGravity
     */
    public static final int TabLayout_tabGravity=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabIconTint}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:tabIconTint
     */
    public static final int TabLayout_tabIconTint=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabIconTintMode}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td></td></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:tabIconTintMode
     */
    public static final int TabLayout_tabIconTintMode=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabIndicator}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:tabIndicator
     */
    public static final int TabLayout_tabIndicator=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabIndicatorAnimationDuration}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.dialer:tabIndicatorAnimationDuration
     */
    public static final int TabLayout_tabIndicatorAnimationDuration=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabIndicatorColor}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:tabIndicatorColor
     */
    public static final int TabLayout_tabIndicatorColor=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabIndicatorFullWidth}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:tabIndicatorFullWidth
     */
    public static final int TabLayout_tabIndicatorFullWidth=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabIndicatorGravity}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>stretch</td><td>3</td><td></td></tr>
     * <tr><td>top</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:tabIndicatorGravity
     */
    public static final int TabLayout_tabIndicatorGravity=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabIndicatorHeight}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:tabIndicatorHeight
     */
    public static final int TabLayout_tabIndicatorHeight=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabInlineLabel}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:tabInlineLabel
     */
    public static final int TabLayout_tabInlineLabel=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabMaxWidth}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:tabMaxWidth
     */
    public static final int TabLayout_tabMaxWidth=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabMinWidth}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:tabMinWidth
     */
    public static final int TabLayout_tabMinWidth=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabMode}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:tabMode
     */
    public static final int TabLayout_tabMode=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabPadding}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:tabPadding
     */
    public static final int TabLayout_tabPadding=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabPaddingBottom}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:tabPaddingBottom
     */
    public static final int TabLayout_tabPaddingBottom=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabPaddingEnd}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:tabPaddingEnd
     */
    public static final int TabLayout_tabPaddingEnd=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabPaddingStart}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:tabPaddingStart
     */
    public static final int TabLayout_tabPaddingStart=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabPaddingTop}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:tabPaddingTop
     */
    public static final int TabLayout_tabPaddingTop=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabRippleColor}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:tabRippleColor
     */
    public static final int TabLayout_tabRippleColor=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabSelectedTextColor}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:tabSelectedTextColor
     */
    public static final int TabLayout_tabSelectedTextColor=21;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabTextAppearance}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:tabTextAppearance
     */
    public static final int TabLayout_tabTextAppearance=22;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabTextColor}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:tabTextColor
     */
    public static final int TabLayout_tabTextColor=23;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#tabUnboundedRipple}
     * attribute's value can be found in the {@link #TabLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:tabUnboundedRipple
     */
    public static final int TabLayout_tabUnboundedRipple=24;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.android.dialer:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.android.dialer:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_textAllCaps
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x7f0400f6, 
      0x7f0401e1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:fontFamily
     */
    public static final int TextAppearance_fontFamily=11;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=12;
    /**
     * Attributes that can be used with a TextInputLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputLayout_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_hint android:hint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundColor com.android.dialer:boxBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxBackgroundMode com.android.dialer:boxBackgroundMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCollapsedPaddingTop com.android.dialer:boxCollapsedPaddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomEnd com.android.dialer:boxCornerRadiusBottomEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusBottomStart com.android.dialer:boxCornerRadiusBottomStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopEnd com.android.dialer:boxCornerRadiusTopEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxCornerRadiusTopStart com.android.dialer:boxCornerRadiusTopStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeColor com.android.dialer:boxStrokeColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_boxStrokeWidth com.android.dialer:boxStrokeWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterEnabled com.android.dialer:counterEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterMaxLength com.android.dialer:counterMaxLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextAppearance com.android.dialer:counterOverflowTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextAppearance com.android.dialer:counterTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorEnabled com.android.dialer:errorEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextAppearance com.android.dialer:errorTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperText com.android.dialer:helperText}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextEnabled com.android.dialer:helperTextEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_helperTextTextAppearance com.android.dialer:helperTextTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintAnimationEnabled com.android.dialer:hintAnimationEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintEnabled com.android.dialer:hintEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextAppearance com.android.dialer:hintTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleContentDescription com.android.dialer:passwordToggleContentDescription}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleDrawable com.android.dialer:passwordToggleDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleEnabled com.android.dialer:passwordToggleEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTint com.android.dialer:passwordToggleTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTintMode com.android.dialer:passwordToggleTintMode}</code></td><td></td></tr>
     * </table>
     * @see #TextInputLayout_android_textColorHint
     * @see #TextInputLayout_android_hint
     * @see #TextInputLayout_boxBackgroundColor
     * @see #TextInputLayout_boxBackgroundMode
     * @see #TextInputLayout_boxCollapsedPaddingTop
     * @see #TextInputLayout_boxCornerRadiusBottomEnd
     * @see #TextInputLayout_boxCornerRadiusBottomStart
     * @see #TextInputLayout_boxCornerRadiusTopEnd
     * @see #TextInputLayout_boxCornerRadiusTopStart
     * @see #TextInputLayout_boxStrokeColor
     * @see #TextInputLayout_boxStrokeWidth
     * @see #TextInputLayout_counterEnabled
     * @see #TextInputLayout_counterMaxLength
     * @see #TextInputLayout_counterOverflowTextAppearance
     * @see #TextInputLayout_counterTextAppearance
     * @see #TextInputLayout_errorEnabled
     * @see #TextInputLayout_errorTextAppearance
     * @see #TextInputLayout_helperText
     * @see #TextInputLayout_helperTextEnabled
     * @see #TextInputLayout_helperTextTextAppearance
     * @see #TextInputLayout_hintAnimationEnabled
     * @see #TextInputLayout_hintEnabled
     * @see #TextInputLayout_hintTextAppearance
     * @see #TextInputLayout_passwordToggleContentDescription
     * @see #TextInputLayout_passwordToggleDrawable
     * @see #TextInputLayout_passwordToggleEnabled
     * @see #TextInputLayout_passwordToggleTint
     * @see #TextInputLayout_passwordToggleTintMode
     */
    public static final int[] TextInputLayout={
      0x0101009a, 0x01010150, 0x7f040049, 0x7f04004a, 
      0x7f04004b, 0x7f04004c, 0x7f04004d, 0x7f04004e, 
      0x7f04004f, 0x7f040050, 0x7f040051, 0x7f0400b5, 
      0x7f0400b6, 0x7f0400b7, 0x7f0400b8, 0x7f0400dc, 
      0x7f0400dd, 0x7f040106, 0x7f040107, 0x7f040108, 
      0x7f04010c, 0x7f04010d, 0x7f04010e, 0x7f04017e, 
      0x7f04017f, 0x7f040180, 0x7f040181, 0x7f040182
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextInputLayout_android_textColorHint=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#hint}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:hint
     */
    public static final int TextInputLayout_android_hint=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#boxBackgroundColor}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:boxBackgroundColor
     */
    public static final int TextInputLayout_boxBackgroundColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#boxBackgroundMode}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>filled</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>outline</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:boxBackgroundMode
     */
    public static final int TextInputLayout_boxBackgroundMode=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#boxCollapsedPaddingTop}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:boxCollapsedPaddingTop
     */
    public static final int TextInputLayout_boxCollapsedPaddingTop=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#boxCornerRadiusBottomEnd}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:boxCornerRadiusBottomEnd
     */
    public static final int TextInputLayout_boxCornerRadiusBottomEnd=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#boxCornerRadiusBottomStart}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:boxCornerRadiusBottomStart
     */
    public static final int TextInputLayout_boxCornerRadiusBottomStart=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#boxCornerRadiusTopEnd}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:boxCornerRadiusTopEnd
     */
    public static final int TextInputLayout_boxCornerRadiusTopEnd=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#boxCornerRadiusTopStart}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:boxCornerRadiusTopStart
     */
    public static final int TextInputLayout_boxCornerRadiusTopStart=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#boxStrokeColor}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:boxStrokeColor
     */
    public static final int TextInputLayout_boxStrokeColor=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#boxStrokeWidth}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:boxStrokeWidth
     */
    public static final int TextInputLayout_boxStrokeWidth=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#counterEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:counterEnabled
     */
    public static final int TextInputLayout_counterEnabled=11;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#counterMaxLength}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.dialer:counterMaxLength
     */
    public static final int TextInputLayout_counterMaxLength=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#counterOverflowTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:counterOverflowTextAppearance
     */
    public static final int TextInputLayout_counterOverflowTextAppearance=13;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#counterTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:counterTextAppearance
     */
    public static final int TextInputLayout_counterTextAppearance=14;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#errorEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:errorEnabled
     */
    public static final int TextInputLayout_errorEnabled=15;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#errorTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:errorTextAppearance
     */
    public static final int TextInputLayout_errorTextAppearance=16;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#helperText}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:helperText
     */
    public static final int TextInputLayout_helperText=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#helperTextEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:helperTextEnabled
     */
    public static final int TextInputLayout_helperTextEnabled=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#helperTextTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:helperTextTextAppearance
     */
    public static final int TextInputLayout_helperTextTextAppearance=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#hintAnimationEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:hintAnimationEnabled
     */
    public static final int TextInputLayout_hintAnimationEnabled=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#hintEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:hintEnabled
     */
    public static final int TextInputLayout_hintEnabled=21;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#hintTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:hintTextAppearance
     */
    public static final int TextInputLayout_hintTextAppearance=22;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#passwordToggleContentDescription}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:passwordToggleContentDescription
     */
    public static final int TextInputLayout_passwordToggleContentDescription=23;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#passwordToggleDrawable}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:passwordToggleDrawable
     */
    public static final int TextInputLayout_passwordToggleDrawable=24;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#passwordToggleEnabled}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:passwordToggleEnabled
     */
    public static final int TextInputLayout_passwordToggleEnabled=25;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#passwordToggleTint}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:passwordToggleTint
     */
    public static final int TextInputLayout_passwordToggleTint=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#passwordToggleTintMode}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td></td></tr>
     * <tr><td>screen</td><td>f</td><td></td></tr>
     * <tr><td>src_atop</td><td>9</td><td></td></tr>
     * <tr><td>src_in</td><td>5</td><td></td></tr>
     * <tr><td>src_over</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.dialer:passwordToggleTintMode
     */
    public static final int TextInputLayout_passwordToggleTintMode=27;
    /**
     * Attributes that can be used with a Theme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Theme_android_textColorSecondary android:textColorSecondary}</code></td><td></td></tr>
     * </table>
     * @see #Theme_android_textColorSecondary
     */
    public static final int[] Theme={
      0x01010038
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorSecondary}
     * attribute's value can be found in the {@link #Theme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorSecondary
     */
    public static final int Theme_android_textColorSecondary=0;
    /**
     * Attributes that can be used with a Theme_Dialpad.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_background com.android.dialer:dialpad_background}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_elevation com.android.dialer:dialpad_elevation}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_text_color com.android.dialer:dialpad_text_color}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_text_color_primary com.android.dialer:dialpad_text_color_primary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Theme_Dialpad_dialpad_text_color_secondary com.android.dialer:dialpad_text_color_secondary}</code></td><td></td></tr>
     * </table>
     * @see #Theme_Dialpad_dialpad_background
     * @see #Theme_Dialpad_dialpad_elevation
     * @see #Theme_Dialpad_dialpad_text_color
     * @see #Theme_Dialpad_dialpad_text_color_primary
     * @see #Theme_Dialpad_dialpad_text_color_secondary
     */
    public static final int[] Theme_Dialpad={
      0x7f0400be, 0x7f0400c1, 0x7f0400c9, 0x7f0400ca, 
      0x7f0400cb
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_background}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:dialpad_background
     */
    public static final int Theme_Dialpad_dialpad_background=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_elevation}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:dialpad_elevation
     */
    public static final int Theme_Dialpad_dialpad_elevation=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_text_color}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:dialpad_text_color
     */
    public static final int Theme_Dialpad_dialpad_text_color=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_text_color_primary}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:dialpad_text_color_primary
     */
    public static final int Theme_Dialpad_dialpad_text_color_primary=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#dialpad_text_color_secondary}
     * attribute's value can be found in the {@link #Theme_Dialpad} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:dialpad_text_color_secondary
     */
    public static final int Theme_Dialpad_dialpad_text_color_secondary=4;
    /**
     * Attributes that can be used with a ThemeEnforcement.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ThemeEnforcement_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceMaterialTheme com.android.dialer:enforceMaterialTheme}</code></td><td></td></tr>
     * <tr><td><code>{@link #ThemeEnforcement_enforceTextAppearance com.android.dialer:enforceTextAppearance}</code></td><td></td></tr>
     * </table>
     * @see #ThemeEnforcement_android_textAppearance
     * @see #ThemeEnforcement_enforceMaterialTheme
     * @see #ThemeEnforcement_enforceTextAppearance
     */
    public static final int[] ThemeEnforcement={
      0x01010034, 0x7f0400da, 0x7f0400db
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #ThemeEnforcement} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int ThemeEnforcement_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#enforceMaterialTheme}
     * attribute's value can be found in the {@link #ThemeEnforcement} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:enforceMaterialTheme
     */
    public static final int ThemeEnforcement_enforceMaterialTheme=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#enforceTextAppearance}
     * attribute's value can be found in the {@link #ThemeEnforcement} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.dialer:enforceTextAppearance
     */
    public static final int ThemeEnforcement_enforceTextAppearance=2;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.android.dialer:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.android.dialer:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.android.dialer:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.android.dialer:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.android.dialer:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.android.dialer:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.android.dialer:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.android.dialer:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.android.dialer:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.android.dialer:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.android.dialer:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.android.dialer:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.android.dialer:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.android.dialer:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.android.dialer:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.android.dialer:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.android.dialer:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.android.dialer:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.android.dialer:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.android.dialer:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.android.dialer:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.android.dialer:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.android.dialer:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.android.dialer:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.android.dialer:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.android.dialer:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.android.dialer:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f040057, 0x7f040085, 
      0x7f040086, 0x7f0400a6, 0x7f0400a7, 0x7f0400a8, 
      0x7f0400a9, 0x7f0400aa, 0x7f0400ab, 0x7f040165, 
      0x7f040166, 0x7f04016a, 0x7f040170, 0x7f040171, 
      0x7f040184, 0x7f0401be, 0x7f0401bf, 0x7f0401c0, 
      0x7f040206, 0x7f040208, 0x7f040209, 0x7f04020a, 
      0x7f04020b, 0x7f04020c, 0x7f04020d, 0x7f04020e, 
      0x7f04020f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=14;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:navigationIcon
     */
    public static final int Toolbar_navigationIcon=15;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:popupTheme
     */
    public static final int Toolbar_popupTheme=16;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:subtitle
     */
    public static final int Toolbar_subtitle=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=18;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.dialer:title
     */
    public static final int Toolbar_title=20;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:titleMargin
     */
    public static final int Toolbar_titleMargin=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=25;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.dialer.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=27;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:titleTextColor
     */
    public static final int Toolbar_titleTextColor=28;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.android.dialer:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.android.dialer:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.android.dialer:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x7f040178, 0x7f040179, 
      0x7f0401fc
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.dialer:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.dialer:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.android.dialer:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.android.dialer:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x7f040039, 0x7f04003a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.dialer:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.dialer:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
  }
  public static final class xml {
    public static final int about_phone_fragment=0x7f140000;
    public static final int assisted_dialing_setting=0x7f140001;
    public static final int call_record_states=0x7f140002;
    public static final int display_options_settings=0x7f140003;
    public static final int file_paths=0x7f140004;
    public static final int lookup_settings=0x7f140005;
    public static final int shortcuts=0x7f140006;
    public static final int sound_settings=0x7f140007;
    public static final int voicemail_settings=0x7f140008;
    public static final int vvm_config=0x7f140009;
    public static final int vvm_config_override=0x7f14000a;
  }
}