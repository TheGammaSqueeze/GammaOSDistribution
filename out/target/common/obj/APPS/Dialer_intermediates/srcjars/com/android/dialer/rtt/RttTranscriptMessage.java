// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/apps/Dialer/java/com/android/dialer/rtt/rtt_transcript.proto

package com.android.dialer.rtt;

/**
 * <pre>
 * Single chat message inside a RTT call.
 * </pre>
 *
 * Protobuf type {@code com.android.dialer.rtt.RttTranscriptMessage}
 */
public  final class RttTranscriptMessage extends
    com.google.protobuf.GeneratedMessageLite<
        RttTranscriptMessage, RttTranscriptMessage.Builder> implements
    // @@protoc_insertion_point(message_implements:com.android.dialer.rtt.RttTranscriptMessage)
    RttTranscriptMessageOrBuilder {
  private RttTranscriptMessage() {
    content_ = "";
  }
  private int bitField0_;
  public static final int CONTENT_FIELD_NUMBER = 1;
  private java.lang.String content_;
  /**
   * <code>optional string content = 1;</code>
   */
  @java.lang.Override
  public boolean hasContent() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional string content = 1;</code>
   */
  @java.lang.Override
  public java.lang.String getContent() {
    return content_;
  }
  /**
   * <code>optional string content = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getContentBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(content_);
  }
  /**
   * <code>optional string content = 1;</code>
   */
  private void setContent(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    content_ = value;
  }
  /**
   * <code>optional string content = 1;</code>
   */
  private void clearContent() {
    bitField0_ = (bitField0_ & ~0x00000001);
    content_ = getDefaultInstance().getContent();
  }
  /**
   * <code>optional string content = 1;</code>
   */
  private void setContentBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    content_ = value.toStringUtf8();
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 2;
  private long timestamp_;
  /**
   * <code>optional int64 timestamp = 2;</code>
   */
  @java.lang.Override
  public boolean hasTimestamp() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional int64 timestamp = 2;</code>
   */
  @java.lang.Override
  public long getTimestamp() {
    return timestamp_;
  }
  /**
   * <code>optional int64 timestamp = 2;</code>
   */
  private void setTimestamp(long value) {
    bitField0_ |= 0x00000002;
    timestamp_ = value;
  }
  /**
   * <code>optional int64 timestamp = 2;</code>
   */
  private void clearTimestamp() {
    bitField0_ = (bitField0_ & ~0x00000002);
    timestamp_ = 0L;
  }

  public static final int IS_REMOTE_FIELD_NUMBER = 3;
  private boolean isRemote_;
  /**
   * <pre>
   * Whether this message is sent from local device or received from remote
   * party.
   * </pre>
   *
   * <code>optional bool is_remote = 3;</code>
   */
  @java.lang.Override
  public boolean hasIsRemote() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Whether this message is sent from local device or received from remote
   * party.
   * </pre>
   *
   * <code>optional bool is_remote = 3;</code>
   */
  @java.lang.Override
  public boolean getIsRemote() {
    return isRemote_;
  }
  /**
   * <pre>
   * Whether this message is sent from local device or received from remote
   * party.
   * </pre>
   *
   * <code>optional bool is_remote = 3;</code>
   */
  private void setIsRemote(boolean value) {
    bitField0_ |= 0x00000004;
    isRemote_ = value;
  }
  /**
   * <pre>
   * Whether this message is sent from local device or received from remote
   * party.
   * </pre>
   *
   * <code>optional bool is_remote = 3;</code>
   */
  private void clearIsRemote() {
    bitField0_ = (bitField0_ & ~0x00000004);
    isRemote_ = false;
  }

  public static final int IS_FINISHED_FIELD_NUMBER = 4;
  private boolean isFinished_;
  /**
   * <code>optional bool is_finished = 4;</code>
   */
  @java.lang.Override
  public boolean hasIsFinished() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional bool is_finished = 4;</code>
   */
  @java.lang.Override
  public boolean getIsFinished() {
    return isFinished_;
  }
  /**
   * <code>optional bool is_finished = 4;</code>
   */
  private void setIsFinished(boolean value) {
    bitField0_ |= 0x00000008;
    isFinished_ = value;
  }
  /**
   * <code>optional bool is_finished = 4;</code>
   */
  private void clearIsFinished() {
    bitField0_ = (bitField0_ & ~0x00000008);
    isFinished_ = false;
  }

  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.rtt.RttTranscriptMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.android.dialer.rtt.RttTranscriptMessage prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Single chat message inside a RTT call.
   * </pre>
   *
   * Protobuf type {@code com.android.dialer.rtt.RttTranscriptMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.android.dialer.rtt.RttTranscriptMessage, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.android.dialer.rtt.RttTranscriptMessage)
      com.android.dialer.rtt.RttTranscriptMessageOrBuilder {
    // Construct using com.android.dialer.rtt.RttTranscriptMessage.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional string content = 1;</code>
     */
    @java.lang.Override
    public boolean hasContent() {
      return instance.hasContent();
    }
    /**
     * <code>optional string content = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getContent() {
      return instance.getContent();
    }
    /**
     * <code>optional string content = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getContentBytes() {
      return instance.getContentBytes();
    }
    /**
     * <code>optional string content = 1;</code>
     */
    public Builder setContent(
        java.lang.String value) {
      copyOnWrite();
      instance.setContent(value);
      return this;
    }
    /**
     * <code>optional string content = 1;</code>
     */
    public Builder clearContent() {
      copyOnWrite();
      instance.clearContent();
      return this;
    }
    /**
     * <code>optional string content = 1;</code>
     */
    public Builder setContentBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setContentBytes(value);
      return this;
    }

    /**
     * <code>optional int64 timestamp = 2;</code>
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return instance.hasTimestamp();
    }
    /**
     * <code>optional int64 timestamp = 2;</code>
     */
    @java.lang.Override
    public long getTimestamp() {
      return instance.getTimestamp();
    }
    /**
     * <code>optional int64 timestamp = 2;</code>
     */
    public Builder setTimestamp(long value) {
      copyOnWrite();
      instance.setTimestamp(value);
      return this;
    }
    /**
     * <code>optional int64 timestamp = 2;</code>
     */
    public Builder clearTimestamp() {
      copyOnWrite();
      instance.clearTimestamp();
      return this;
    }

    /**
     * <pre>
     * Whether this message is sent from local device or received from remote
     * party.
     * </pre>
     *
     * <code>optional bool is_remote = 3;</code>
     */
    @java.lang.Override
    public boolean hasIsRemote() {
      return instance.hasIsRemote();
    }
    /**
     * <pre>
     * Whether this message is sent from local device or received from remote
     * party.
     * </pre>
     *
     * <code>optional bool is_remote = 3;</code>
     */
    @java.lang.Override
    public boolean getIsRemote() {
      return instance.getIsRemote();
    }
    /**
     * <pre>
     * Whether this message is sent from local device or received from remote
     * party.
     * </pre>
     *
     * <code>optional bool is_remote = 3;</code>
     */
    public Builder setIsRemote(boolean value) {
      copyOnWrite();
      instance.setIsRemote(value);
      return this;
    }
    /**
     * <pre>
     * Whether this message is sent from local device or received from remote
     * party.
     * </pre>
     *
     * <code>optional bool is_remote = 3;</code>
     */
    public Builder clearIsRemote() {
      copyOnWrite();
      instance.clearIsRemote();
      return this;
    }

    /**
     * <code>optional bool is_finished = 4;</code>
     */
    @java.lang.Override
    public boolean hasIsFinished() {
      return instance.hasIsFinished();
    }
    /**
     * <code>optional bool is_finished = 4;</code>
     */
    @java.lang.Override
    public boolean getIsFinished() {
      return instance.getIsFinished();
    }
    /**
     * <code>optional bool is_finished = 4;</code>
     */
    public Builder setIsFinished(boolean value) {
      copyOnWrite();
      instance.setIsFinished(value);
      return this;
    }
    /**
     * <code>optional bool is_finished = 4;</code>
     */
    public Builder clearIsFinished() {
      copyOnWrite();
      instance.clearIsFinished();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.android.dialer.rtt.RttTranscriptMessage)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.android.dialer.rtt.RttTranscriptMessage();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "content_",
            "timestamp_",
            "isRemote_",
            "isFinished_",
          };
          java.lang.String info =
              "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0000\u0001\b\u0000\u0002" +
              "\u0002\u0001\u0003\u0007\u0002\u0004\u0007\u0003";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.android.dialer.rtt.RttTranscriptMessage> parser = PARSER;
        if (parser == null) {
          synchronized (com.android.dialer.rtt.RttTranscriptMessage.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.android.dialer.rtt.RttTranscriptMessage>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.android.dialer.rtt.RttTranscriptMessage)
  private static final com.android.dialer.rtt.RttTranscriptMessage DEFAULT_INSTANCE;
  static {
    RttTranscriptMessage defaultInstance = new RttTranscriptMessage();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      RttTranscriptMessage.class, defaultInstance);
  }

  public static com.android.dialer.rtt.RttTranscriptMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<RttTranscriptMessage> PARSER;

  public static com.google.protobuf.Parser<RttTranscriptMessage> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

