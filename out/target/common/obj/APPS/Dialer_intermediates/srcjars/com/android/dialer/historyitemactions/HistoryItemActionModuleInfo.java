// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/apps/Dialer/java/com/android/dialer/historyitemactions/history_item_action_module_info.proto

package com.android.dialer.historyitemactions;

/**
 * <pre>
 * Contains information needed to construct items (modules) in a bottom sheet.
 * Next ID: 17
 * </pre>
 *
 * Protobuf type {@code com.android.dialer.historyitemactions.HistoryItemActionModuleInfo}
 */
public  final class HistoryItemActionModuleInfo extends
    com.google.protobuf.GeneratedMessageLite<
        HistoryItemActionModuleInfo, HistoryItemActionModuleInfo.Builder> implements
    // @@protoc_insertion_point(message_implements:com.android.dialer.historyitemactions.HistoryItemActionModuleInfo)
    HistoryItemActionModuleInfoOrBuilder {
  private HistoryItemActionModuleInfo() {
    normalizedNumber_ = "";
    countryIso_ = "";
    name_ = "";
    lookupUri_ = "";
    phoneAccountComponentName_ = "";
  }
  /**
   * <pre>
   * Places that can host items (modules) in a bottom sheet
   * </pre>
   *
   * Protobuf enum {@code com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host}
   */
  public enum Host
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>CALL_LOG = 1;</code>
     */
    CALL_LOG(1),
    /**
     * <code>VOICEMAIL = 2;</code>
     */
    VOICEMAIL(2),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>CALL_LOG = 1;</code>
     */
    public static final int CALL_LOG_VALUE = 1;
    /**
     * <code>VOICEMAIL = 2;</code>
     */
    public static final int VOICEMAIL_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Host valueOf(int value) {
      return forNumber(value);
    }

    public static Host forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return CALL_LOG;
        case 2: return VOICEMAIL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Host>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Host> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Host>() {
            @java.lang.Override
            public Host findValueByNumber(int number) {
              return Host.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return HostVerifier.INSTANCE;
    }

    private static final class HostVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new HostVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Host.forNumber(number) != null;
            }
          };

    private final int value;

    private Host(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host)
  }

  private int bitField0_;
  public static final int NORMALIZED_NUMBER_FIELD_NUMBER = 1;
  private java.lang.String normalizedNumber_;
  /**
   * <pre>
   * The dialer-normalized version of a phone number.
   * See DialerPhoneNumber.normalized_number.
   * </pre>
   *
   * <code>optional string normalized_number = 1;</code>
   */
  @java.lang.Override
  public boolean hasNormalizedNumber() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The dialer-normalized version of a phone number.
   * See DialerPhoneNumber.normalized_number.
   * </pre>
   *
   * <code>optional string normalized_number = 1;</code>
   */
  @java.lang.Override
  public java.lang.String getNormalizedNumber() {
    return normalizedNumber_;
  }
  /**
   * <pre>
   * The dialer-normalized version of a phone number.
   * See DialerPhoneNumber.normalized_number.
   * </pre>
   *
   * <code>optional string normalized_number = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNormalizedNumberBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(normalizedNumber_);
  }
  /**
   * <pre>
   * The dialer-normalized version of a phone number.
   * See DialerPhoneNumber.normalized_number.
   * </pre>
   *
   * <code>optional string normalized_number = 1;</code>
   */
  private void setNormalizedNumber(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    normalizedNumber_ = value;
  }
  /**
   * <pre>
   * The dialer-normalized version of a phone number.
   * See DialerPhoneNumber.normalized_number.
   * </pre>
   *
   * <code>optional string normalized_number = 1;</code>
   */
  private void clearNormalizedNumber() {
    bitField0_ = (bitField0_ & ~0x00000001);
    normalizedNumber_ = getDefaultInstance().getNormalizedNumber();
  }
  /**
   * <pre>
   * The dialer-normalized version of a phone number.
   * See DialerPhoneNumber.normalized_number.
   * </pre>
   *
   * <code>optional string normalized_number = 1;</code>
   */
  private void setNormalizedNumberBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    normalizedNumber_ = value.toStringUtf8();
  }

  public static final int COUNTRY_ISO_FIELD_NUMBER = 2;
  private java.lang.String countryIso_;
  /**
   * <pre>
   * The ISO 3166-1 two letters country code of the number.
   * </pre>
   *
   * <code>optional string country_iso = 2;</code>
   */
  @java.lang.Override
  public boolean hasCountryIso() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The ISO 3166-1 two letters country code of the number.
   * </pre>
   *
   * <code>optional string country_iso = 2;</code>
   */
  @java.lang.Override
  public java.lang.String getCountryIso() {
    return countryIso_;
  }
  /**
   * <pre>
   * The ISO 3166-1 two letters country code of the number.
   * </pre>
   *
   * <code>optional string country_iso = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCountryIsoBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(countryIso_);
  }
  /**
   * <pre>
   * The ISO 3166-1 two letters country code of the number.
   * </pre>
   *
   * <code>optional string country_iso = 2;</code>
   */
  private void setCountryIso(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    countryIso_ = value;
  }
  /**
   * <pre>
   * The ISO 3166-1 two letters country code of the number.
   * </pre>
   *
   * <code>optional string country_iso = 2;</code>
   */
  private void clearCountryIso() {
    bitField0_ = (bitField0_ & ~0x00000002);
    countryIso_ = getDefaultInstance().getCountryIso();
  }
  /**
   * <pre>
   * The ISO 3166-1 two letters country code of the number.
   * </pre>
   *
   * <code>optional string country_iso = 2;</code>
   */
  private void setCountryIsoBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    countryIso_ = value.toStringUtf8();
  }

  public static final int NAME_FIELD_NUMBER = 3;
  private java.lang.String name_;
  /**
   * <pre>
   * The name associated with the number.
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  @java.lang.Override
  public boolean hasName() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The name associated with the number.
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * The name associated with the number.
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * The name associated with the number.
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  private void setName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    name_ = value;
  }
  /**
   * <pre>
   * The name associated with the number.
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  private void clearName() {
    bitField0_ = (bitField0_ & ~0x00000004);
    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * The name associated with the number.
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    name_ = value.toStringUtf8();
  }

  public static final int CALL_TYPE_FIELD_NUMBER = 4;
  private int callType_;
  /**
   * <pre>
   * The type of the call.
   * See android.provider.CallLog.Calls.TYPE.
   * </pre>
   *
   * <code>optional int32 call_type = 4;</code>
   */
  @java.lang.Override
  public boolean hasCallType() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The type of the call.
   * See android.provider.CallLog.Calls.TYPE.
   * </pre>
   *
   * <code>optional int32 call_type = 4;</code>
   */
  @java.lang.Override
  public int getCallType() {
    return callType_;
  }
  /**
   * <pre>
   * The type of the call.
   * See android.provider.CallLog.Calls.TYPE.
   * </pre>
   *
   * <code>optional int32 call_type = 4;</code>
   */
  private void setCallType(int value) {
    bitField0_ |= 0x00000008;
    callType_ = value;
  }
  /**
   * <pre>
   * The type of the call.
   * See android.provider.CallLog.Calls.TYPE.
   * </pre>
   *
   * <code>optional int32 call_type = 4;</code>
   */
  private void clearCallType() {
    bitField0_ = (bitField0_ & ~0x00000008);
    callType_ = 0;
  }

  public static final int FEATURES_FIELD_NUMBER = 5;
  private int features_;
  /**
   * <pre>
   * Bit-mask describing features of the call.
   * See android.provider.CallLog.Calls.FEATURES.
   * </pre>
   *
   * <code>optional int32 features = 5;</code>
   */
  @java.lang.Override
  public boolean hasFeatures() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Bit-mask describing features of the call.
   * See android.provider.CallLog.Calls.FEATURES.
   * </pre>
   *
   * <code>optional int32 features = 5;</code>
   */
  @java.lang.Override
  public int getFeatures() {
    return features_;
  }
  /**
   * <pre>
   * Bit-mask describing features of the call.
   * See android.provider.CallLog.Calls.FEATURES.
   * </pre>
   *
   * <code>optional int32 features = 5;</code>
   */
  private void setFeatures(int value) {
    bitField0_ |= 0x00000010;
    features_ = value;
  }
  /**
   * <pre>
   * Bit-mask describing features of the call.
   * See android.provider.CallLog.Calls.FEATURES.
   * </pre>
   *
   * <code>optional int32 features = 5;</code>
   */
  private void clearFeatures() {
    bitField0_ = (bitField0_ & ~0x00000010);
    features_ = 0;
  }

  public static final int LOOKUP_URI_FIELD_NUMBER = 6;
  private java.lang.String lookupUri_;
  /**
   * <pre>
   * The Contacts Provider lookup URI for the contact associated with the
   * number.
   * </pre>
   *
   * <code>optional string lookup_uri = 6;</code>
   */
  @java.lang.Override
  public boolean hasLookupUri() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * The Contacts Provider lookup URI for the contact associated with the
   * number.
   * </pre>
   *
   * <code>optional string lookup_uri = 6;</code>
   */
  @java.lang.Override
  public java.lang.String getLookupUri() {
    return lookupUri_;
  }
  /**
   * <pre>
   * The Contacts Provider lookup URI for the contact associated with the
   * number.
   * </pre>
   *
   * <code>optional string lookup_uri = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLookupUriBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(lookupUri_);
  }
  /**
   * <pre>
   * The Contacts Provider lookup URI for the contact associated with the
   * number.
   * </pre>
   *
   * <code>optional string lookup_uri = 6;</code>
   */
  private void setLookupUri(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
    lookupUri_ = value;
  }
  /**
   * <pre>
   * The Contacts Provider lookup URI for the contact associated with the
   * number.
   * </pre>
   *
   * <code>optional string lookup_uri = 6;</code>
   */
  private void clearLookupUri() {
    bitField0_ = (bitField0_ & ~0x00000020);
    lookupUri_ = getDefaultInstance().getLookupUri();
  }
  /**
   * <pre>
   * The Contacts Provider lookup URI for the contact associated with the
   * number.
   * </pre>
   *
   * <code>optional string lookup_uri = 6;</code>
   */
  private void setLookupUriBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
    lookupUri_ = value.toStringUtf8();
  }

  public static final int PHONE_ACCOUNT_COMPONENT_NAME_FIELD_NUMBER = 7;
  private java.lang.String phoneAccountComponentName_;
  /**
   * <pre>
   * The component name of the account used to place or receive the call.
   * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
   * </pre>
   *
   * <code>optional string phone_account_component_name = 7;</code>
   */
  @java.lang.Override
  public boolean hasPhoneAccountComponentName() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * The component name of the account used to place or receive the call.
   * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
   * </pre>
   *
   * <code>optional string phone_account_component_name = 7;</code>
   */
  @java.lang.Override
  public java.lang.String getPhoneAccountComponentName() {
    return phoneAccountComponentName_;
  }
  /**
   * <pre>
   * The component name of the account used to place or receive the call.
   * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
   * </pre>
   *
   * <code>optional string phone_account_component_name = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPhoneAccountComponentNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(phoneAccountComponentName_);
  }
  /**
   * <pre>
   * The component name of the account used to place or receive the call.
   * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
   * </pre>
   *
   * <code>optional string phone_account_component_name = 7;</code>
   */
  private void setPhoneAccountComponentName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
    phoneAccountComponentName_ = value;
  }
  /**
   * <pre>
   * The component name of the account used to place or receive the call.
   * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
   * </pre>
   *
   * <code>optional string phone_account_component_name = 7;</code>
   */
  private void clearPhoneAccountComponentName() {
    bitField0_ = (bitField0_ & ~0x00000040);
    phoneAccountComponentName_ = getDefaultInstance().getPhoneAccountComponentName();
  }
  /**
   * <pre>
   * The component name of the account used to place or receive the call.
   * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
   * </pre>
   *
   * <code>optional string phone_account_component_name = 7;</code>
   */
  private void setPhoneAccountComponentNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
    phoneAccountComponentName_ = value.toStringUtf8();
  }

  public static final int CAN_REPORT_AS_INVALID_NUMBER_FIELD_NUMBER = 8;
  private boolean canReportAsInvalidNumber_;
  /**
   * <pre>
   * Whether the number can be reported as invalid through People API
   * </pre>
   *
   * <code>optional bool can_report_as_invalid_number = 8;</code>
   */
  @java.lang.Override
  public boolean hasCanReportAsInvalidNumber() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * Whether the number can be reported as invalid through People API
   * </pre>
   *
   * <code>optional bool can_report_as_invalid_number = 8;</code>
   */
  @java.lang.Override
  public boolean getCanReportAsInvalidNumber() {
    return canReportAsInvalidNumber_;
  }
  /**
   * <pre>
   * Whether the number can be reported as invalid through People API
   * </pre>
   *
   * <code>optional bool can_report_as_invalid_number = 8;</code>
   */
  private void setCanReportAsInvalidNumber(boolean value) {
    bitField0_ |= 0x00000080;
    canReportAsInvalidNumber_ = value;
  }
  /**
   * <pre>
   * Whether the number can be reported as invalid through People API
   * </pre>
   *
   * <code>optional bool can_report_as_invalid_number = 8;</code>
   */
  private void clearCanReportAsInvalidNumber() {
    bitField0_ = (bitField0_ & ~0x00000080);
    canReportAsInvalidNumber_ = false;
  }

  public static final int CAN_SUPPORT_ASSISTED_DIALING_FIELD_NUMBER = 9;
  private boolean canSupportAssistedDialing_;
  /**
   * <pre>
   * Whether assisted dialing is supported.
   * </pre>
   *
   * <code>optional bool can_support_assisted_dialing = 9;</code>
   */
  @java.lang.Override
  public boolean hasCanSupportAssistedDialing() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * Whether assisted dialing is supported.
   * </pre>
   *
   * <code>optional bool can_support_assisted_dialing = 9;</code>
   */
  @java.lang.Override
  public boolean getCanSupportAssistedDialing() {
    return canSupportAssistedDialing_;
  }
  /**
   * <pre>
   * Whether assisted dialing is supported.
   * </pre>
   *
   * <code>optional bool can_support_assisted_dialing = 9;</code>
   */
  private void setCanSupportAssistedDialing(boolean value) {
    bitField0_ |= 0x00000100;
    canSupportAssistedDialing_ = value;
  }
  /**
   * <pre>
   * Whether assisted dialing is supported.
   * </pre>
   *
   * <code>optional bool can_support_assisted_dialing = 9;</code>
   */
  private void clearCanSupportAssistedDialing() {
    bitField0_ = (bitField0_ & ~0x00000100);
    canSupportAssistedDialing_ = false;
  }

  public static final int CAN_SUPPORT_CARRIER_VIDEO_CALL_FIELD_NUMBER = 10;
  private boolean canSupportCarrierVideoCall_;
  /**
   * <pre>
   * Whether carrier video call is supported.
   * </pre>
   *
   * <code>optional bool can_support_carrier_video_call = 10;</code>
   */
  @java.lang.Override
  public boolean hasCanSupportCarrierVideoCall() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * Whether carrier video call is supported.
   * </pre>
   *
   * <code>optional bool can_support_carrier_video_call = 10;</code>
   */
  @java.lang.Override
  public boolean getCanSupportCarrierVideoCall() {
    return canSupportCarrierVideoCall_;
  }
  /**
   * <pre>
   * Whether carrier video call is supported.
   * </pre>
   *
   * <code>optional bool can_support_carrier_video_call = 10;</code>
   */
  private void setCanSupportCarrierVideoCall(boolean value) {
    bitField0_ |= 0x00000200;
    canSupportCarrierVideoCall_ = value;
  }
  /**
   * <pre>
   * Whether carrier video call is supported.
   * </pre>
   *
   * <code>optional bool can_support_carrier_video_call = 10;</code>
   */
  private void clearCanSupportCarrierVideoCall() {
    bitField0_ = (bitField0_ & ~0x00000200);
    canSupportCarrierVideoCall_ = false;
  }

  public static final int IS_BLOCKED_FIELD_NUMBER = 11;
  private boolean isBlocked_;
  /**
   * <pre>
   * Whether the number is blocked.
   * </pre>
   *
   * <code>optional bool is_blocked = 11;</code>
   */
  @java.lang.Override
  public boolean hasIsBlocked() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * Whether the number is blocked.
   * </pre>
   *
   * <code>optional bool is_blocked = 11;</code>
   */
  @java.lang.Override
  public boolean getIsBlocked() {
    return isBlocked_;
  }
  /**
   * <pre>
   * Whether the number is blocked.
   * </pre>
   *
   * <code>optional bool is_blocked = 11;</code>
   */
  private void setIsBlocked(boolean value) {
    bitField0_ |= 0x00000400;
    isBlocked_ = value;
  }
  /**
   * <pre>
   * Whether the number is blocked.
   * </pre>
   *
   * <code>optional bool is_blocked = 11;</code>
   */
  private void clearIsBlocked() {
    bitField0_ = (bitField0_ & ~0x00000400);
    isBlocked_ = false;
  }

  public static final int IS_SPAM_FIELD_NUMBER = 12;
  private boolean isSpam_;
  /**
   * <pre>
   * Whether the number is spam.
   * </pre>
   *
   * <code>optional bool is_spam = 12;</code>
   */
  @java.lang.Override
  public boolean hasIsSpam() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * Whether the number is spam.
   * </pre>
   *
   * <code>optional bool is_spam = 12;</code>
   */
  @java.lang.Override
  public boolean getIsSpam() {
    return isSpam_;
  }
  /**
   * <pre>
   * Whether the number is spam.
   * </pre>
   *
   * <code>optional bool is_spam = 12;</code>
   */
  private void setIsSpam(boolean value) {
    bitField0_ |= 0x00000800;
    isSpam_ = value;
  }
  /**
   * <pre>
   * Whether the number is spam.
   * </pre>
   *
   * <code>optional bool is_spam = 12;</code>
   */
  private void clearIsSpam() {
    bitField0_ = (bitField0_ & ~0x00000800);
    isSpam_ = false;
  }

  public static final int IS_VOICEMAIL_CALL_FIELD_NUMBER = 13;
  private boolean isVoicemailCall_;
  /**
   * <pre>
   * Whether the call is to the voicemail inbox.
   * </pre>
   *
   * <code>optional bool is_voicemail_call = 13;</code>
   */
  @java.lang.Override
  public boolean hasIsVoicemailCall() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   * <pre>
   * Whether the call is to the voicemail inbox.
   * </pre>
   *
   * <code>optional bool is_voicemail_call = 13;</code>
   */
  @java.lang.Override
  public boolean getIsVoicemailCall() {
    return isVoicemailCall_;
  }
  /**
   * <pre>
   * Whether the call is to the voicemail inbox.
   * </pre>
   *
   * <code>optional bool is_voicemail_call = 13;</code>
   */
  private void setIsVoicemailCall(boolean value) {
    bitField0_ |= 0x00001000;
    isVoicemailCall_ = value;
  }
  /**
   * <pre>
   * Whether the call is to the voicemail inbox.
   * </pre>
   *
   * <code>optional bool is_voicemail_call = 13;</code>
   */
  private void clearIsVoicemailCall() {
    bitField0_ = (bitField0_ & ~0x00001000);
    isVoicemailCall_ = false;
  }

  public static final int CONTACT_SOURCE_FIELD_NUMBER = 14;
  private int contactSource_;
  /**
   * <pre>
   * The source of the contact if there is one associated with the number.
   * </pre>
   *
   * <code>optional .com.android.dialer.logging.ContactSource.Type contact_source = 14;</code>
   */
  @java.lang.Override
  public boolean hasContactSource() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   * <pre>
   * The source of the contact if there is one associated with the number.
   * </pre>
   *
   * <code>optional .com.android.dialer.logging.ContactSource.Type contact_source = 14;</code>
   */
  @java.lang.Override
  public com.android.dialer.logging.ContactSource.Type getContactSource() {
    com.android.dialer.logging.ContactSource.Type result = com.android.dialer.logging.ContactSource.Type.forNumber(contactSource_);
    return result == null ? com.android.dialer.logging.ContactSource.Type.UNKNOWN_SOURCE_TYPE : result;
  }
  /**
   * <pre>
   * The source of the contact if there is one associated with the number.
   * </pre>
   *
   * <code>optional .com.android.dialer.logging.ContactSource.Type contact_source = 14;</code>
   */
  private void setContactSource(com.android.dialer.logging.ContactSource.Type value) {
    if (value == null) {
      throw new NullPointerException();
    }
    bitField0_ |= 0x00002000;
    contactSource_ = value.getNumber();
  }
  /**
   * <pre>
   * The source of the contact if there is one associated with the number.
   * </pre>
   *
   * <code>optional .com.android.dialer.logging.ContactSource.Type contact_source = 14;</code>
   */
  private void clearContactSource() {
    bitField0_ = (bitField0_ & ~0x00002000);
    contactSource_ = 0;
  }

  public static final int HOST_FIELD_NUMBER = 15;
  private int host_;
  /**
   * <code>optional .com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
   */
  @java.lang.Override
  public boolean hasHost() {
    return ((bitField0_ & 0x00004000) != 0);
  }
  /**
   * <code>optional .com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
   */
  @java.lang.Override
  public com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host getHost() {
    com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host result = com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host.forNumber(host_);
    return result == null ? com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host.UNKNOWN : result;
  }
  /**
   * <code>optional .com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
   */
  private void setHost(com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host value) {
    if (value == null) {
      throw new NullPointerException();
    }
    bitField0_ |= 0x00004000;
    host_ = value.getNumber();
  }
  /**
   * <code>optional .com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
   */
  private void clearHost() {
    bitField0_ = (bitField0_ & ~0x00004000);
    host_ = 0;
  }

  public static final int IS_EMERGENCY_NUMBER_FIELD_NUMBER = 16;
  private boolean isEmergencyNumber_;
  /**
   * <pre>
   * Whether the number is an emergency number.
   * </pre>
   *
   * <code>optional bool is_emergency_number = 16;</code>
   */
  @java.lang.Override
  public boolean hasIsEmergencyNumber() {
    return ((bitField0_ & 0x00008000) != 0);
  }
  /**
   * <pre>
   * Whether the number is an emergency number.
   * </pre>
   *
   * <code>optional bool is_emergency_number = 16;</code>
   */
  @java.lang.Override
  public boolean getIsEmergencyNumber() {
    return isEmergencyNumber_;
  }
  /**
   * <pre>
   * Whether the number is an emergency number.
   * </pre>
   *
   * <code>optional bool is_emergency_number = 16;</code>
   */
  private void setIsEmergencyNumber(boolean value) {
    bitField0_ |= 0x00008000;
    isEmergencyNumber_ = value;
  }
  /**
   * <pre>
   * Whether the number is an emergency number.
   * </pre>
   *
   * <code>optional bool is_emergency_number = 16;</code>
   */
  private void clearIsEmergencyNumber() {
    bitField0_ = (bitField0_ & ~0x00008000);
    isEmergencyNumber_ = false;
  }

  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.android.dialer.historyitemactions.HistoryItemActionModuleInfo prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Contains information needed to construct items (modules) in a bottom sheet.
   * Next ID: 17
   * </pre>
   *
   * Protobuf type {@code com.android.dialer.historyitemactions.HistoryItemActionModuleInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.android.dialer.historyitemactions.HistoryItemActionModuleInfo, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.android.dialer.historyitemactions.HistoryItemActionModuleInfo)
      com.android.dialer.historyitemactions.HistoryItemActionModuleInfoOrBuilder {
    // Construct using com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The dialer-normalized version of a phone number.
     * See DialerPhoneNumber.normalized_number.
     * </pre>
     *
     * <code>optional string normalized_number = 1;</code>
     */
    @java.lang.Override
    public boolean hasNormalizedNumber() {
      return instance.hasNormalizedNumber();
    }
    /**
     * <pre>
     * The dialer-normalized version of a phone number.
     * See DialerPhoneNumber.normalized_number.
     * </pre>
     *
     * <code>optional string normalized_number = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getNormalizedNumber() {
      return instance.getNormalizedNumber();
    }
    /**
     * <pre>
     * The dialer-normalized version of a phone number.
     * See DialerPhoneNumber.normalized_number.
     * </pre>
     *
     * <code>optional string normalized_number = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNormalizedNumberBytes() {
      return instance.getNormalizedNumberBytes();
    }
    /**
     * <pre>
     * The dialer-normalized version of a phone number.
     * See DialerPhoneNumber.normalized_number.
     * </pre>
     *
     * <code>optional string normalized_number = 1;</code>
     */
    public Builder setNormalizedNumber(
        java.lang.String value) {
      copyOnWrite();
      instance.setNormalizedNumber(value);
      return this;
    }
    /**
     * <pre>
     * The dialer-normalized version of a phone number.
     * See DialerPhoneNumber.normalized_number.
     * </pre>
     *
     * <code>optional string normalized_number = 1;</code>
     */
    public Builder clearNormalizedNumber() {
      copyOnWrite();
      instance.clearNormalizedNumber();
      return this;
    }
    /**
     * <pre>
     * The dialer-normalized version of a phone number.
     * See DialerPhoneNumber.normalized_number.
     * </pre>
     *
     * <code>optional string normalized_number = 1;</code>
     */
    public Builder setNormalizedNumberBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNormalizedNumberBytes(value);
      return this;
    }

    /**
     * <pre>
     * The ISO 3166-1 two letters country code of the number.
     * </pre>
     *
     * <code>optional string country_iso = 2;</code>
     */
    @java.lang.Override
    public boolean hasCountryIso() {
      return instance.hasCountryIso();
    }
    /**
     * <pre>
     * The ISO 3166-1 two letters country code of the number.
     * </pre>
     *
     * <code>optional string country_iso = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getCountryIso() {
      return instance.getCountryIso();
    }
    /**
     * <pre>
     * The ISO 3166-1 two letters country code of the number.
     * </pre>
     *
     * <code>optional string country_iso = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCountryIsoBytes() {
      return instance.getCountryIsoBytes();
    }
    /**
     * <pre>
     * The ISO 3166-1 two letters country code of the number.
     * </pre>
     *
     * <code>optional string country_iso = 2;</code>
     */
    public Builder setCountryIso(
        java.lang.String value) {
      copyOnWrite();
      instance.setCountryIso(value);
      return this;
    }
    /**
     * <pre>
     * The ISO 3166-1 two letters country code of the number.
     * </pre>
     *
     * <code>optional string country_iso = 2;</code>
     */
    public Builder clearCountryIso() {
      copyOnWrite();
      instance.clearCountryIso();
      return this;
    }
    /**
     * <pre>
     * The ISO 3166-1 two letters country code of the number.
     * </pre>
     *
     * <code>optional string country_iso = 2;</code>
     */
    public Builder setCountryIsoBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCountryIsoBytes(value);
      return this;
    }

    /**
     * <pre>
     * The name associated with the number.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    @java.lang.Override
    public boolean hasName() {
      return instance.hasName();
    }
    /**
     * <pre>
     * The name associated with the number.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * The name associated with the number.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * The name associated with the number.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * The name associated with the number.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * The name associated with the number.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The type of the call.
     * See android.provider.CallLog.Calls.TYPE.
     * </pre>
     *
     * <code>optional int32 call_type = 4;</code>
     */
    @java.lang.Override
    public boolean hasCallType() {
      return instance.hasCallType();
    }
    /**
     * <pre>
     * The type of the call.
     * See android.provider.CallLog.Calls.TYPE.
     * </pre>
     *
     * <code>optional int32 call_type = 4;</code>
     */
    @java.lang.Override
    public int getCallType() {
      return instance.getCallType();
    }
    /**
     * <pre>
     * The type of the call.
     * See android.provider.CallLog.Calls.TYPE.
     * </pre>
     *
     * <code>optional int32 call_type = 4;</code>
     */
    public Builder setCallType(int value) {
      copyOnWrite();
      instance.setCallType(value);
      return this;
    }
    /**
     * <pre>
     * The type of the call.
     * See android.provider.CallLog.Calls.TYPE.
     * </pre>
     *
     * <code>optional int32 call_type = 4;</code>
     */
    public Builder clearCallType() {
      copyOnWrite();
      instance.clearCallType();
      return this;
    }

    /**
     * <pre>
     * Bit-mask describing features of the call.
     * See android.provider.CallLog.Calls.FEATURES.
     * </pre>
     *
     * <code>optional int32 features = 5;</code>
     */
    @java.lang.Override
    public boolean hasFeatures() {
      return instance.hasFeatures();
    }
    /**
     * <pre>
     * Bit-mask describing features of the call.
     * See android.provider.CallLog.Calls.FEATURES.
     * </pre>
     *
     * <code>optional int32 features = 5;</code>
     */
    @java.lang.Override
    public int getFeatures() {
      return instance.getFeatures();
    }
    /**
     * <pre>
     * Bit-mask describing features of the call.
     * See android.provider.CallLog.Calls.FEATURES.
     * </pre>
     *
     * <code>optional int32 features = 5;</code>
     */
    public Builder setFeatures(int value) {
      copyOnWrite();
      instance.setFeatures(value);
      return this;
    }
    /**
     * <pre>
     * Bit-mask describing features of the call.
     * See android.provider.CallLog.Calls.FEATURES.
     * </pre>
     *
     * <code>optional int32 features = 5;</code>
     */
    public Builder clearFeatures() {
      copyOnWrite();
      instance.clearFeatures();
      return this;
    }

    /**
     * <pre>
     * The Contacts Provider lookup URI for the contact associated with the
     * number.
     * </pre>
     *
     * <code>optional string lookup_uri = 6;</code>
     */
    @java.lang.Override
    public boolean hasLookupUri() {
      return instance.hasLookupUri();
    }
    /**
     * <pre>
     * The Contacts Provider lookup URI for the contact associated with the
     * number.
     * </pre>
     *
     * <code>optional string lookup_uri = 6;</code>
     */
    @java.lang.Override
    public java.lang.String getLookupUri() {
      return instance.getLookupUri();
    }
    /**
     * <pre>
     * The Contacts Provider lookup URI for the contact associated with the
     * number.
     * </pre>
     *
     * <code>optional string lookup_uri = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLookupUriBytes() {
      return instance.getLookupUriBytes();
    }
    /**
     * <pre>
     * The Contacts Provider lookup URI for the contact associated with the
     * number.
     * </pre>
     *
     * <code>optional string lookup_uri = 6;</code>
     */
    public Builder setLookupUri(
        java.lang.String value) {
      copyOnWrite();
      instance.setLookupUri(value);
      return this;
    }
    /**
     * <pre>
     * The Contacts Provider lookup URI for the contact associated with the
     * number.
     * </pre>
     *
     * <code>optional string lookup_uri = 6;</code>
     */
    public Builder clearLookupUri() {
      copyOnWrite();
      instance.clearLookupUri();
      return this;
    }
    /**
     * <pre>
     * The Contacts Provider lookup URI for the contact associated with the
     * number.
     * </pre>
     *
     * <code>optional string lookup_uri = 6;</code>
     */
    public Builder setLookupUriBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLookupUriBytes(value);
      return this;
    }

    /**
     * <pre>
     * The component name of the account used to place or receive the call.
     * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
     * </pre>
     *
     * <code>optional string phone_account_component_name = 7;</code>
     */
    @java.lang.Override
    public boolean hasPhoneAccountComponentName() {
      return instance.hasPhoneAccountComponentName();
    }
    /**
     * <pre>
     * The component name of the account used to place or receive the call.
     * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
     * </pre>
     *
     * <code>optional string phone_account_component_name = 7;</code>
     */
    @java.lang.Override
    public java.lang.String getPhoneAccountComponentName() {
      return instance.getPhoneAccountComponentName();
    }
    /**
     * <pre>
     * The component name of the account used to place or receive the call.
     * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
     * </pre>
     *
     * <code>optional string phone_account_component_name = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPhoneAccountComponentNameBytes() {
      return instance.getPhoneAccountComponentNameBytes();
    }
    /**
     * <pre>
     * The component name of the account used to place or receive the call.
     * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
     * </pre>
     *
     * <code>optional string phone_account_component_name = 7;</code>
     */
    public Builder setPhoneAccountComponentName(
        java.lang.String value) {
      copyOnWrite();
      instance.setPhoneAccountComponentName(value);
      return this;
    }
    /**
     * <pre>
     * The component name of the account used to place or receive the call.
     * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
     * </pre>
     *
     * <code>optional string phone_account_component_name = 7;</code>
     */
    public Builder clearPhoneAccountComponentName() {
      copyOnWrite();
      instance.clearPhoneAccountComponentName();
      return this;
    }
    /**
     * <pre>
     * The component name of the account used to place or receive the call.
     * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
     * </pre>
     *
     * <code>optional string phone_account_component_name = 7;</code>
     */
    public Builder setPhoneAccountComponentNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPhoneAccountComponentNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Whether the number can be reported as invalid through People API
     * </pre>
     *
     * <code>optional bool can_report_as_invalid_number = 8;</code>
     */
    @java.lang.Override
    public boolean hasCanReportAsInvalidNumber() {
      return instance.hasCanReportAsInvalidNumber();
    }
    /**
     * <pre>
     * Whether the number can be reported as invalid through People API
     * </pre>
     *
     * <code>optional bool can_report_as_invalid_number = 8;</code>
     */
    @java.lang.Override
    public boolean getCanReportAsInvalidNumber() {
      return instance.getCanReportAsInvalidNumber();
    }
    /**
     * <pre>
     * Whether the number can be reported as invalid through People API
     * </pre>
     *
     * <code>optional bool can_report_as_invalid_number = 8;</code>
     */
    public Builder setCanReportAsInvalidNumber(boolean value) {
      copyOnWrite();
      instance.setCanReportAsInvalidNumber(value);
      return this;
    }
    /**
     * <pre>
     * Whether the number can be reported as invalid through People API
     * </pre>
     *
     * <code>optional bool can_report_as_invalid_number = 8;</code>
     */
    public Builder clearCanReportAsInvalidNumber() {
      copyOnWrite();
      instance.clearCanReportAsInvalidNumber();
      return this;
    }

    /**
     * <pre>
     * Whether assisted dialing is supported.
     * </pre>
     *
     * <code>optional bool can_support_assisted_dialing = 9;</code>
     */
    @java.lang.Override
    public boolean hasCanSupportAssistedDialing() {
      return instance.hasCanSupportAssistedDialing();
    }
    /**
     * <pre>
     * Whether assisted dialing is supported.
     * </pre>
     *
     * <code>optional bool can_support_assisted_dialing = 9;</code>
     */
    @java.lang.Override
    public boolean getCanSupportAssistedDialing() {
      return instance.getCanSupportAssistedDialing();
    }
    /**
     * <pre>
     * Whether assisted dialing is supported.
     * </pre>
     *
     * <code>optional bool can_support_assisted_dialing = 9;</code>
     */
    public Builder setCanSupportAssistedDialing(boolean value) {
      copyOnWrite();
      instance.setCanSupportAssistedDialing(value);
      return this;
    }
    /**
     * <pre>
     * Whether assisted dialing is supported.
     * </pre>
     *
     * <code>optional bool can_support_assisted_dialing = 9;</code>
     */
    public Builder clearCanSupportAssistedDialing() {
      copyOnWrite();
      instance.clearCanSupportAssistedDialing();
      return this;
    }

    /**
     * <pre>
     * Whether carrier video call is supported.
     * </pre>
     *
     * <code>optional bool can_support_carrier_video_call = 10;</code>
     */
    @java.lang.Override
    public boolean hasCanSupportCarrierVideoCall() {
      return instance.hasCanSupportCarrierVideoCall();
    }
    /**
     * <pre>
     * Whether carrier video call is supported.
     * </pre>
     *
     * <code>optional bool can_support_carrier_video_call = 10;</code>
     */
    @java.lang.Override
    public boolean getCanSupportCarrierVideoCall() {
      return instance.getCanSupportCarrierVideoCall();
    }
    /**
     * <pre>
     * Whether carrier video call is supported.
     * </pre>
     *
     * <code>optional bool can_support_carrier_video_call = 10;</code>
     */
    public Builder setCanSupportCarrierVideoCall(boolean value) {
      copyOnWrite();
      instance.setCanSupportCarrierVideoCall(value);
      return this;
    }
    /**
     * <pre>
     * Whether carrier video call is supported.
     * </pre>
     *
     * <code>optional bool can_support_carrier_video_call = 10;</code>
     */
    public Builder clearCanSupportCarrierVideoCall() {
      copyOnWrite();
      instance.clearCanSupportCarrierVideoCall();
      return this;
    }

    /**
     * <pre>
     * Whether the number is blocked.
     * </pre>
     *
     * <code>optional bool is_blocked = 11;</code>
     */
    @java.lang.Override
    public boolean hasIsBlocked() {
      return instance.hasIsBlocked();
    }
    /**
     * <pre>
     * Whether the number is blocked.
     * </pre>
     *
     * <code>optional bool is_blocked = 11;</code>
     */
    @java.lang.Override
    public boolean getIsBlocked() {
      return instance.getIsBlocked();
    }
    /**
     * <pre>
     * Whether the number is blocked.
     * </pre>
     *
     * <code>optional bool is_blocked = 11;</code>
     */
    public Builder setIsBlocked(boolean value) {
      copyOnWrite();
      instance.setIsBlocked(value);
      return this;
    }
    /**
     * <pre>
     * Whether the number is blocked.
     * </pre>
     *
     * <code>optional bool is_blocked = 11;</code>
     */
    public Builder clearIsBlocked() {
      copyOnWrite();
      instance.clearIsBlocked();
      return this;
    }

    /**
     * <pre>
     * Whether the number is spam.
     * </pre>
     *
     * <code>optional bool is_spam = 12;</code>
     */
    @java.lang.Override
    public boolean hasIsSpam() {
      return instance.hasIsSpam();
    }
    /**
     * <pre>
     * Whether the number is spam.
     * </pre>
     *
     * <code>optional bool is_spam = 12;</code>
     */
    @java.lang.Override
    public boolean getIsSpam() {
      return instance.getIsSpam();
    }
    /**
     * <pre>
     * Whether the number is spam.
     * </pre>
     *
     * <code>optional bool is_spam = 12;</code>
     */
    public Builder setIsSpam(boolean value) {
      copyOnWrite();
      instance.setIsSpam(value);
      return this;
    }
    /**
     * <pre>
     * Whether the number is spam.
     * </pre>
     *
     * <code>optional bool is_spam = 12;</code>
     */
    public Builder clearIsSpam() {
      copyOnWrite();
      instance.clearIsSpam();
      return this;
    }

    /**
     * <pre>
     * Whether the call is to the voicemail inbox.
     * </pre>
     *
     * <code>optional bool is_voicemail_call = 13;</code>
     */
    @java.lang.Override
    public boolean hasIsVoicemailCall() {
      return instance.hasIsVoicemailCall();
    }
    /**
     * <pre>
     * Whether the call is to the voicemail inbox.
     * </pre>
     *
     * <code>optional bool is_voicemail_call = 13;</code>
     */
    @java.lang.Override
    public boolean getIsVoicemailCall() {
      return instance.getIsVoicemailCall();
    }
    /**
     * <pre>
     * Whether the call is to the voicemail inbox.
     * </pre>
     *
     * <code>optional bool is_voicemail_call = 13;</code>
     */
    public Builder setIsVoicemailCall(boolean value) {
      copyOnWrite();
      instance.setIsVoicemailCall(value);
      return this;
    }
    /**
     * <pre>
     * Whether the call is to the voicemail inbox.
     * </pre>
     *
     * <code>optional bool is_voicemail_call = 13;</code>
     */
    public Builder clearIsVoicemailCall() {
      copyOnWrite();
      instance.clearIsVoicemailCall();
      return this;
    }

    /**
     * <pre>
     * The source of the contact if there is one associated with the number.
     * </pre>
     *
     * <code>optional .com.android.dialer.logging.ContactSource.Type contact_source = 14;</code>
     */
    @java.lang.Override
    public boolean hasContactSource() {
      return instance.hasContactSource();
    }
    /**
     * <pre>
     * The source of the contact if there is one associated with the number.
     * </pre>
     *
     * <code>optional .com.android.dialer.logging.ContactSource.Type contact_source = 14;</code>
     */
    @java.lang.Override
    public com.android.dialer.logging.ContactSource.Type getContactSource() {
      return instance.getContactSource();
    }
    /**
     * <pre>
     * The source of the contact if there is one associated with the number.
     * </pre>
     *
     * <code>optional .com.android.dialer.logging.ContactSource.Type contact_source = 14;</code>
     */
    public Builder setContactSource(com.android.dialer.logging.ContactSource.Type value) {
      copyOnWrite();
      instance.setContactSource(value);
      return this;
    }
    /**
     * <pre>
     * The source of the contact if there is one associated with the number.
     * </pre>
     *
     * <code>optional .com.android.dialer.logging.ContactSource.Type contact_source = 14;</code>
     */
    public Builder clearContactSource() {
      copyOnWrite();
      instance.clearContactSource();
      return this;
    }

    /**
     * <code>optional .com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
     */
    @java.lang.Override
    public boolean hasHost() {
      return instance.hasHost();
    }
    /**
     * <code>optional .com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
     */
    @java.lang.Override
    public com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host getHost() {
      return instance.getHost();
    }
    /**
     * <code>optional .com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
     */
    public Builder setHost(com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host value) {
      copyOnWrite();
      instance.setHost(value);
      return this;
    }
    /**
     * <code>optional .com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
     */
    public Builder clearHost() {
      copyOnWrite();
      instance.clearHost();
      return this;
    }

    /**
     * <pre>
     * Whether the number is an emergency number.
     * </pre>
     *
     * <code>optional bool is_emergency_number = 16;</code>
     */
    @java.lang.Override
    public boolean hasIsEmergencyNumber() {
      return instance.hasIsEmergencyNumber();
    }
    /**
     * <pre>
     * Whether the number is an emergency number.
     * </pre>
     *
     * <code>optional bool is_emergency_number = 16;</code>
     */
    @java.lang.Override
    public boolean getIsEmergencyNumber() {
      return instance.getIsEmergencyNumber();
    }
    /**
     * <pre>
     * Whether the number is an emergency number.
     * </pre>
     *
     * <code>optional bool is_emergency_number = 16;</code>
     */
    public Builder setIsEmergencyNumber(boolean value) {
      copyOnWrite();
      instance.setIsEmergencyNumber(value);
      return this;
    }
    /**
     * <pre>
     * Whether the number is an emergency number.
     * </pre>
     *
     * <code>optional bool is_emergency_number = 16;</code>
     */
    public Builder clearIsEmergencyNumber() {
      copyOnWrite();
      instance.clearIsEmergencyNumber();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.android.dialer.historyitemactions.HistoryItemActionModuleInfo)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.android.dialer.historyitemactions.HistoryItemActionModuleInfo();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "normalizedNumber_",
            "countryIso_",
            "name_",
            "callType_",
            "features_",
            "lookupUri_",
            "phoneAccountComponentName_",
            "canReportAsInvalidNumber_",
            "canSupportAssistedDialing_",
            "canSupportCarrierVideoCall_",
            "isBlocked_",
            "isSpam_",
            "isVoicemailCall_",
            "contactSource_",
            com.android.dialer.logging.ContactSource.Type.internalGetVerifier(),
            "host_",
            com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.Host.internalGetVerifier(),
            "isEmergencyNumber_",
          };
          java.lang.String info =
              "\u0001\u0010\u0000\u0001\u0001\u0010\u0010\u0000\u0000\u0000\u0001\b\u0000\u0002" +
              "\b\u0001\u0003\b\u0002\u0004\u0004\u0003\u0005\u0004\u0004\u0006\b\u0005\u0007\b" +
              "\u0006\b\u0007\u0007\t\u0007\b\n\u0007\t\u000b\u0007\n\f\u0007\u000b\r\u0007\f\u000e" +
              "\f\r\u000f\f\u000e\u0010\u0007\u000f";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.android.dialer.historyitemactions.HistoryItemActionModuleInfo> parser = PARSER;
        if (parser == null) {
          synchronized (com.android.dialer.historyitemactions.HistoryItemActionModuleInfo.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.android.dialer.historyitemactions.HistoryItemActionModuleInfo>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.android.dialer.historyitemactions.HistoryItemActionModuleInfo)
  private static final com.android.dialer.historyitemactions.HistoryItemActionModuleInfo DEFAULT_INSTANCE;
  static {
    HistoryItemActionModuleInfo defaultInstance = new HistoryItemActionModuleInfo();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      HistoryItemActionModuleInfo.class, defaultInstance);
  }

  public static com.android.dialer.historyitemactions.HistoryItemActionModuleInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<HistoryItemActionModuleInfo> PARSER;

  public static com.google.protobuf.Parser<HistoryItemActionModuleInfo> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

