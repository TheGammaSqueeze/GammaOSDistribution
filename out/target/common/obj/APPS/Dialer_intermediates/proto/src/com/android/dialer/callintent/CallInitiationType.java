// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/apps/Dialer/java/com/android/dialer/callintent/call_initiation_type.proto

package com.android.dialer.callintent;

/**
 * <pre>
 * Different ways a call can be initiated.
 * </pre>
 *
 * Protobuf type {@code com.android.dialer.callintent.CallInitiationType}
 */
public  final class CallInitiationType extends
    com.google.protobuf.GeneratedMessageLite<
        CallInitiationType, CallInitiationType.Builder> implements
    // @@protoc_insertion_point(message_implements:com.android.dialer.callintent.CallInitiationType)
    CallInitiationTypeOrBuilder {
  private CallInitiationType() {
  }
  /**
   * Protobuf enum {@code com.android.dialer.callintent.CallInitiationType.Type}
   */
  public enum Type
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Initiation type unknown
     * </pre>
     *
     * <code>UNKNOWN_INITIATION = 0;</code>
     */
    UNKNOWN_INITIATION(0),
    /**
     * <pre>
     * Incoming call initiated by Telecom.
     * </pre>
     *
     * <code>INCOMING_INITIATION = 1;</code>
     */
    INCOMING_INITIATION(1),
    /**
     * <code>DIALPAD = 2;</code>
     */
    DIALPAD(2),
    /**
     * <code>SPEED_DIAL = 3;</code>
     */
    SPEED_DIAL(3),
    /**
     * <code>SPEED_DIAL_DISAMBIG_DIALOG = 20;</code>
     */
    SPEED_DIAL_DISAMBIG_DIALOG(20),
    /**
     * <code>REMOTE_DIRECTORY = 4;</code>
     */
    REMOTE_DIRECTORY(4),
    /**
     * <pre>
     * Call placed via a search result returned by typing into the dialpad.
     * </pre>
     *
     * <code>SMART_DIAL = 5;</code>
     */
    SMART_DIAL(5),
    /**
     * <pre>
     * Call placed via a search result returned by typing into the search box.
     * </pre>
     *
     * <code>REGULAR_SEARCH = 6;</code>
     */
    REGULAR_SEARCH(6),
    /**
     * <pre>
     * Call placed via the call log fragment displayed in the main Dialer
     * activity.
     * </pre>
     *
     * <code>CALL_LOG = 7;</code>
     */
    CALL_LOG(7),
    /**
     * <pre>
     * Call placed via a call log fragment displaying a filtered list of
     * voicemails.
     * </pre>
     *
     * <code>CALL_LOG_FILTER = 8;</code>
     */
    CALL_LOG_FILTER(8),
    /**
     * <pre>
     * Call placed via the call log fragment containing voicemails only.
     * </pre>
     *
     * <code>VOICEMAIL_LOG = 9;</code>
     */
    VOICEMAIL_LOG(9),
    /**
     * <pre>
     * Call placed via the call details screen
     * </pre>
     *
     * <code>CALL_DETAILS = 10;</code>
     */
    CALL_DETAILS(10),
    /**
     * <pre>
     * Call placed via the quick contacts card
     * </pre>
     *
     * <code>QUICK_CONTACTS = 11;</code>
     */
    QUICK_CONTACTS(11),
    /**
     * <pre>
     * Call was placed from outside the Dialer (e.g. CALL intent sent
     * via third party app)
     * </pre>
     *
     * <code>EXTERNAL_INITIATION = 12;</code>
     */
    EXTERNAL_INITIATION(12),
    /**
     * <code>LAUNCHER_SHORTCUT = 13;</code>
     */
    LAUNCHER_SHORTCUT(13),
    /**
     * <code>CALL_COMPOSER = 14;</code>
     */
    CALL_COMPOSER(14),
    /**
     * <code>MISSED_CALL_NOTIFICATION = 15;</code>
     */
    MISSED_CALL_NOTIFICATION(15),
    /**
     * <code>CALL_SUBJECT_DIALOG = 16;</code>
     */
    CALL_SUBJECT_DIALOG(16),
    /**
     * <code>IMS_VIDEO_BLOCKED_FALLBACK_TO_VOICE = 17;</code>
     */
    IMS_VIDEO_BLOCKED_FALLBACK_TO_VOICE(17),
    /**
     * <code>LEGACY_VOICEMAIL_NOTIFICATION = 18;</code>
     */
    LEGACY_VOICEMAIL_NOTIFICATION(18),
    /**
     * <code>VOICEMAIL_ERROR_MESSAGE = 19;</code>
     */
    VOICEMAIL_ERROR_MESSAGE(19),
    ;

    /**
     * <pre>
     * Initiation type unknown
     * </pre>
     *
     * <code>UNKNOWN_INITIATION = 0;</code>
     */
    public static final int UNKNOWN_INITIATION_VALUE = 0;
    /**
     * <pre>
     * Incoming call initiated by Telecom.
     * </pre>
     *
     * <code>INCOMING_INITIATION = 1;</code>
     */
    public static final int INCOMING_INITIATION_VALUE = 1;
    /**
     * <code>DIALPAD = 2;</code>
     */
    public static final int DIALPAD_VALUE = 2;
    /**
     * <code>SPEED_DIAL = 3;</code>
     */
    public static final int SPEED_DIAL_VALUE = 3;
    /**
     * <code>SPEED_DIAL_DISAMBIG_DIALOG = 20;</code>
     */
    public static final int SPEED_DIAL_DISAMBIG_DIALOG_VALUE = 20;
    /**
     * <code>REMOTE_DIRECTORY = 4;</code>
     */
    public static final int REMOTE_DIRECTORY_VALUE = 4;
    /**
     * <pre>
     * Call placed via a search result returned by typing into the dialpad.
     * </pre>
     *
     * <code>SMART_DIAL = 5;</code>
     */
    public static final int SMART_DIAL_VALUE = 5;
    /**
     * <pre>
     * Call placed via a search result returned by typing into the search box.
     * </pre>
     *
     * <code>REGULAR_SEARCH = 6;</code>
     */
    public static final int REGULAR_SEARCH_VALUE = 6;
    /**
     * <pre>
     * Call placed via the call log fragment displayed in the main Dialer
     * activity.
     * </pre>
     *
     * <code>CALL_LOG = 7;</code>
     */
    public static final int CALL_LOG_VALUE = 7;
    /**
     * <pre>
     * Call placed via a call log fragment displaying a filtered list of
     * voicemails.
     * </pre>
     *
     * <code>CALL_LOG_FILTER = 8;</code>
     */
    public static final int CALL_LOG_FILTER_VALUE = 8;
    /**
     * <pre>
     * Call placed via the call log fragment containing voicemails only.
     * </pre>
     *
     * <code>VOICEMAIL_LOG = 9;</code>
     */
    public static final int VOICEMAIL_LOG_VALUE = 9;
    /**
     * <pre>
     * Call placed via the call details screen
     * </pre>
     *
     * <code>CALL_DETAILS = 10;</code>
     */
    public static final int CALL_DETAILS_VALUE = 10;
    /**
     * <pre>
     * Call placed via the quick contacts card
     * </pre>
     *
     * <code>QUICK_CONTACTS = 11;</code>
     */
    public static final int QUICK_CONTACTS_VALUE = 11;
    /**
     * <pre>
     * Call was placed from outside the Dialer (e.g. CALL intent sent
     * via third party app)
     * </pre>
     *
     * <code>EXTERNAL_INITIATION = 12;</code>
     */
    public static final int EXTERNAL_INITIATION_VALUE = 12;
    /**
     * <code>LAUNCHER_SHORTCUT = 13;</code>
     */
    public static final int LAUNCHER_SHORTCUT_VALUE = 13;
    /**
     * <code>CALL_COMPOSER = 14;</code>
     */
    public static final int CALL_COMPOSER_VALUE = 14;
    /**
     * <code>MISSED_CALL_NOTIFICATION = 15;</code>
     */
    public static final int MISSED_CALL_NOTIFICATION_VALUE = 15;
    /**
     * <code>CALL_SUBJECT_DIALOG = 16;</code>
     */
    public static final int CALL_SUBJECT_DIALOG_VALUE = 16;
    /**
     * <code>IMS_VIDEO_BLOCKED_FALLBACK_TO_VOICE = 17;</code>
     */
    public static final int IMS_VIDEO_BLOCKED_FALLBACK_TO_VOICE_VALUE = 17;
    /**
     * <code>LEGACY_VOICEMAIL_NOTIFICATION = 18;</code>
     */
    public static final int LEGACY_VOICEMAIL_NOTIFICATION_VALUE = 18;
    /**
     * <code>VOICEMAIL_ERROR_MESSAGE = 19;</code>
     */
    public static final int VOICEMAIL_ERROR_MESSAGE_VALUE = 19;


    @java.lang.Override
    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    public static Type forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_INITIATION;
        case 1: return INCOMING_INITIATION;
        case 2: return DIALPAD;
        case 3: return SPEED_DIAL;
        case 20: return SPEED_DIAL_DISAMBIG_DIALOG;
        case 4: return REMOTE_DIRECTORY;
        case 5: return SMART_DIAL;
        case 6: return REGULAR_SEARCH;
        case 7: return CALL_LOG;
        case 8: return CALL_LOG_FILTER;
        case 9: return VOICEMAIL_LOG;
        case 10: return CALL_DETAILS;
        case 11: return QUICK_CONTACTS;
        case 12: return EXTERNAL_INITIATION;
        case 13: return LAUNCHER_SHORTCUT;
        case 14: return CALL_COMPOSER;
        case 15: return MISSED_CALL_NOTIFICATION;
        case 16: return CALL_SUBJECT_DIALOG;
        case 17: return IMS_VIDEO_BLOCKED_FALLBACK_TO_VOICE;
        case 18: return LEGACY_VOICEMAIL_NOTIFICATION;
        case 19: return VOICEMAIL_ERROR_MESSAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            @java.lang.Override
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return TypeVerifier.INSTANCE;
    }

    private static final class TypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Type.forNumber(number) != null;
            }
          };

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.android.dialer.callintent.CallInitiationType.Type)
  }

  public static com.android.dialer.callintent.CallInitiationType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.callintent.CallInitiationType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.callintent.CallInitiationType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.callintent.CallInitiationType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.callintent.CallInitiationType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.callintent.CallInitiationType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.callintent.CallInitiationType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.callintent.CallInitiationType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.dialer.callintent.CallInitiationType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.callintent.CallInitiationType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.dialer.callintent.CallInitiationType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.callintent.CallInitiationType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.android.dialer.callintent.CallInitiationType prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Different ways a call can be initiated.
   * </pre>
   *
   * Protobuf type {@code com.android.dialer.callintent.CallInitiationType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.android.dialer.callintent.CallInitiationType, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.android.dialer.callintent.CallInitiationType)
      com.android.dialer.callintent.CallInitiationTypeOrBuilder {
    // Construct using com.android.dialer.callintent.CallInitiationType.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    // @@protoc_insertion_point(builder_scope:com.android.dialer.callintent.CallInitiationType)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.android.dialer.callintent.CallInitiationType();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = null;java.lang.String info =
              "\u0001\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.android.dialer.callintent.CallInitiationType> parser = PARSER;
        if (parser == null) {
          synchronized (com.android.dialer.callintent.CallInitiationType.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.android.dialer.callintent.CallInitiationType>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.android.dialer.callintent.CallInitiationType)
  private static final com.android.dialer.callintent.CallInitiationType DEFAULT_INSTANCE;
  static {
    CallInitiationType defaultInstance = new CallInitiationType();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      CallInitiationType.class, defaultInstance);
  }

  public static com.android.dialer.callintent.CallInitiationType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<CallInitiationType> PARSER;

  public static com.google.protobuf.Parser<CallInitiationType> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

