// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/apps/Dialer/java/com/android/dialer/rtt/rtt_transcript.proto

package com.android.dialer.rtt;

/**
 * <pre>
 * RTT transcript which contains chat history of a RTT call.
 * </pre>
 *
 * Protobuf type {@code com.android.dialer.rtt.RttTranscript}
 */
public  final class RttTranscript extends
    com.google.protobuf.GeneratedMessageLite<
        RttTranscript, RttTranscript.Builder> implements
    // @@protoc_insertion_point(message_implements:com.android.dialer.rtt.RttTranscript)
    RttTranscriptOrBuilder {
  private RttTranscript() {
    id_ = "";
    number_ = "";
    messages_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private java.lang.String id_;
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  @java.lang.Override
  public boolean hasId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  @java.lang.Override
  public java.lang.String getId() {
    return id_;
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(id_);
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void setId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    id_ = value;
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void clearId() {
    bitField0_ = (bitField0_ & ~0x00000001);
    id_ = getDefaultInstance().getId();
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void setIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    id_ = value.toStringUtf8();
  }

  public static final int NUMBER_FIELD_NUMBER = 2;
  private java.lang.String number_;
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  @java.lang.Override
  public boolean hasNumber() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  @java.lang.Override
  public java.lang.String getNumber() {
    return number_;
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNumberBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(number_);
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  private void setNumber(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    number_ = value;
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  private void clearNumber() {
    bitField0_ = (bitField0_ & ~0x00000002);
    number_ = getDefaultInstance().getNumber();
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  private void setNumberBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    number_ = value.toStringUtf8();
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 3;
  private long timestamp_;
  /**
   * <pre>
   * Timestamp when the RTT call is created.
   * </pre>
   *
   * <code>optional int64 timestamp = 3;</code>
   */
  @java.lang.Override
  public boolean hasTimestamp() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Timestamp when the RTT call is created.
   * </pre>
   *
   * <code>optional int64 timestamp = 3;</code>
   */
  @java.lang.Override
  public long getTimestamp() {
    return timestamp_;
  }
  /**
   * <pre>
   * Timestamp when the RTT call is created.
   * </pre>
   *
   * <code>optional int64 timestamp = 3;</code>
   */
  private void setTimestamp(long value) {
    bitField0_ |= 0x00000004;
    timestamp_ = value;
  }
  /**
   * <pre>
   * Timestamp when the RTT call is created.
   * </pre>
   *
   * <code>optional int64 timestamp = 3;</code>
   */
  private void clearTimestamp() {
    bitField0_ = (bitField0_ & ~0x00000004);
    timestamp_ = 0L;
  }

  public static final int MESSAGES_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.ProtobufList<com.android.dialer.rtt.RttTranscriptMessage> messages_;
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.android.dialer.rtt.RttTranscriptMessage> getMessagesList() {
    return messages_;
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  public java.util.List<? extends com.android.dialer.rtt.RttTranscriptMessageOrBuilder> 
      getMessagesOrBuilderList() {
    return messages_;
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  @java.lang.Override
  public int getMessagesCount() {
    return messages_.size();
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  @java.lang.Override
  public com.android.dialer.rtt.RttTranscriptMessage getMessages(int index) {
    return messages_.get(index);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  public com.android.dialer.rtt.RttTranscriptMessageOrBuilder getMessagesOrBuilder(
      int index) {
    return messages_.get(index);
  }
  private void ensureMessagesIsMutable() {
    if (!messages_.isModifiable()) {
      messages_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(messages_);
     }
  }

  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void setMessages(
      int index, com.android.dialer.rtt.RttTranscriptMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMessagesIsMutable();
    messages_.set(index, value);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void setMessages(
      int index, com.android.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
    ensureMessagesIsMutable();
    messages_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addMessages(com.android.dialer.rtt.RttTranscriptMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMessagesIsMutable();
    messages_.add(value);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addMessages(
      int index, com.android.dialer.rtt.RttTranscriptMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMessagesIsMutable();
    messages_.add(index, value);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addMessages(
      com.android.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
    ensureMessagesIsMutable();
    messages_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addMessages(
      int index, com.android.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
    ensureMessagesIsMutable();
    messages_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addAllMessages(
      java.lang.Iterable<? extends com.android.dialer.rtt.RttTranscriptMessage> values) {
    ensureMessagesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, messages_);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void clearMessages() {
    messages_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void removeMessages(int index) {
    ensureMessagesIsMutable();
    messages_.remove(index);
  }

  public static com.android.dialer.rtt.RttTranscript parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.rtt.RttTranscript parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscript parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.rtt.RttTranscript parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscript parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.dialer.rtt.RttTranscript parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscript parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.rtt.RttTranscript parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscript parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.rtt.RttTranscript parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.dialer.rtt.RttTranscript parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.dialer.rtt.RttTranscript parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.android.dialer.rtt.RttTranscript prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * RTT transcript which contains chat history of a RTT call.
   * </pre>
   *
   * Protobuf type {@code com.android.dialer.rtt.RttTranscript}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.android.dialer.rtt.RttTranscript, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.android.dialer.rtt.RttTranscript)
      com.android.dialer.rtt.RttTranscriptOrBuilder {
    // Construct using com.android.dialer.rtt.RttTranscript.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    @java.lang.Override
    public boolean hasId() {
      return instance.hasId();
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getId() {
      return instance.getId();
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      return instance.getIdBytes();
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder setId(
        java.lang.String value) {
      copyOnWrite();
      instance.setId(value);
      return this;
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder clearId() {
      copyOnWrite();
      instance.clearId();
      return this;
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    @java.lang.Override
    public boolean hasNumber() {
      return instance.hasNumber();
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getNumber() {
      return instance.getNumber();
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNumberBytes() {
      return instance.getNumberBytes();
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    public Builder setNumber(
        java.lang.String value) {
      copyOnWrite();
      instance.setNumber(value);
      return this;
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    public Builder clearNumber() {
      copyOnWrite();
      instance.clearNumber();
      return this;
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    public Builder setNumberBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNumberBytes(value);
      return this;
    }

    /**
     * <pre>
     * Timestamp when the RTT call is created.
     * </pre>
     *
     * <code>optional int64 timestamp = 3;</code>
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return instance.hasTimestamp();
    }
    /**
     * <pre>
     * Timestamp when the RTT call is created.
     * </pre>
     *
     * <code>optional int64 timestamp = 3;</code>
     */
    @java.lang.Override
    public long getTimestamp() {
      return instance.getTimestamp();
    }
    /**
     * <pre>
     * Timestamp when the RTT call is created.
     * </pre>
     *
     * <code>optional int64 timestamp = 3;</code>
     */
    public Builder setTimestamp(long value) {
      copyOnWrite();
      instance.setTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * Timestamp when the RTT call is created.
     * </pre>
     *
     * <code>optional int64 timestamp = 3;</code>
     */
    public Builder clearTimestamp() {
      copyOnWrite();
      instance.clearTimestamp();
      return this;
    }

    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    @java.lang.Override
    public java.util.List<com.android.dialer.rtt.RttTranscriptMessage> getMessagesList() {
      return java.util.Collections.unmodifiableList(
          instance.getMessagesList());
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    @java.lang.Override
    public int getMessagesCount() {
      return instance.getMessagesCount();
    }/**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    @java.lang.Override
    public com.android.dialer.rtt.RttTranscriptMessage getMessages(int index) {
      return instance.getMessages(index);
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder setMessages(
        int index, com.android.dialer.rtt.RttTranscriptMessage value) {
      copyOnWrite();
      instance.setMessages(index, value);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder setMessages(
        int index, com.android.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
      copyOnWrite();
      instance.setMessages(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addMessages(com.android.dialer.rtt.RttTranscriptMessage value) {
      copyOnWrite();
      instance.addMessages(value);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addMessages(
        int index, com.android.dialer.rtt.RttTranscriptMessage value) {
      copyOnWrite();
      instance.addMessages(index, value);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addMessages(
        com.android.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
      copyOnWrite();
      instance.addMessages(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addMessages(
        int index, com.android.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
      copyOnWrite();
      instance.addMessages(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addAllMessages(
        java.lang.Iterable<? extends com.android.dialer.rtt.RttTranscriptMessage> values) {
      copyOnWrite();
      instance.addAllMessages(values);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder clearMessages() {
      copyOnWrite();
      instance.clearMessages();
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.android.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder removeMessages(int index) {
      copyOnWrite();
      instance.removeMessages(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.android.dialer.rtt.RttTranscript)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.android.dialer.rtt.RttTranscript();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "id_",
            "number_",
            "timestamp_",
            "messages_",
            com.android.dialer.rtt.RttTranscriptMessage.class,
          };
          java.lang.String info =
              "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0001\u0000\u0001\b\u0000\u0002" +
              "\b\u0001\u0003\u0002\u0002\u0004\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.android.dialer.rtt.RttTranscript> parser = PARSER;
        if (parser == null) {
          synchronized (com.android.dialer.rtt.RttTranscript.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.android.dialer.rtt.RttTranscript>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.android.dialer.rtt.RttTranscript)
  private static final com.android.dialer.rtt.RttTranscript DEFAULT_INSTANCE;
  static {
    RttTranscript defaultInstance = new RttTranscript();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      RttTranscript.class, defaultInstance);
  }

  public static com.android.dialer.rtt.RttTranscript getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<RttTranscript> PARSER;

  public static com.google.protobuf.Parser<RttTranscript> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

