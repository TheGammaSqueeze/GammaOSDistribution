# compiler: R8
# compiler_version: 3.0.41-sc04
# min_api: 32
# pg_map_id: de9f4a4
# common_typos_disable
android.internal.telephony.sysprop.TelephonyProperties -> android.internal.telephony.sysprop.TelephonyProperties:
    168:168:void airplane_mode_on(java.lang.Boolean) -> airplane_mode_on
    402:403:java.util.Optional data_roaming() -> data_roaming
    300:301:java.util.Optional ecm_exit_timer() -> ecm_exit_timer
    232:233:java.util.Optional lte_on_cdma_device() -> lte_on_cdma_device
    407:408:java.util.Optional mobile_data() -> mobile_data
    21:27:java.lang.Boolean tryParseBoolean(java.lang.String) -> tryParseBoolean
    35:35:java.lang.Integer tryParseInteger(java.lang.String) -> tryParseInteger
    51:51:java.lang.Long tryParseLong(java.lang.String) -> tryParseLong
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    25:26:void <init>() -> <init>
    37:41:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    54:74:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    82:83:void <init>(android.os.IBinder) -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    138:141:void <init>(android.os.Parcel) -> <init>
    130:135:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:73:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:58:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:63:void run() -> run
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    111:276:void <init>() -> <init>
    96:96:void access$001(androidx.activity.ComponentActivity) -> access$001
    411:412:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    441:441:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    492:500:void ensureViewModelStore() -> ensureViewModelStore
    689:689:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    466:466:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    550:550:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    556:556:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    482:487:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    418:420:void initViewTreeOwners() -> initViewTreeOwners
    634:635:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    539:539:void onBackPressed() -> onBackPressed
    306:312:void onCreate(android.os.Bundle) -> onCreate
    654:658:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    338:357:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    319:325:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    695:714:void reportFullyDrawn() -> reportFullyDrawn
    389:390:void setContentView(int) -> setContentView
    395:396:void setContentView(android.view.View) -> setContentView
    403:404:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    570:570:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    584:584:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    601:601:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    618:618:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    122:122:void <init>(androidx.activity.ComponentActivity) -> <init>
    129:133:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    144:144:void <init>(androidx.activity.ComponentActivity) -> <init>
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    238:238:void <init>(androidx.activity.ComponentActivity) -> <init>
    242:246:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    252:252:void <init>(androidx.activity.ComponentActivity) -> <init>
    256:261:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    266:266:void <init>(androidx.activity.ComponentActivity) -> <init>
    270:271:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    106:106:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    45:46:void <init>(android.app.Activity) -> <init>
    101:108:void initializeReflectiveFields() -> initializeReflectiveFields
    51:94:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    46:55:void <init>(boolean) -> <init>
    103:103:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:92:void remove() -> remove
    107:107:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:71:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    59:78:void <init>(java.lang.Runnable) -> <init>
    148:153:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    114:116:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    187:197:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    223:226:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    246:250:void cancel() -> cancel
    232:240:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    203:204:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    209:210:void cancel() -> cancel
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
    42:49:void <init>() -> <init>
    73:76:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:108:void clearAvailableContext() -> clearAvailableContext
    97:99:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
    109:109:void <clinit>() -> <clinit>
    45:47:void <init>(int,android.content.Intent) -> <init>
    50:52:void <init>(android.os.Parcel) -> <init>
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    90:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
    34:34:void <init>() -> <init>
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
    51:76:void <init>() -> <init>
    399:400:void bindRcKey(int,java.lang.String) -> bindRcKey
    318:322:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    359:367:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    389:392:int generateRandomNumber() -> generateRandomNumber
    290:302:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    271:277:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    199:216:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    372:377:int registerKey(java.lang.String) -> registerKey
    243:261:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    134:152:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
    216:216:void <init>(androidx.activity.result.ActivityResultRegistry,int,androidx.activity.result.contract.ActivityResultContract,java.lang.String) -> <init>
    224:224:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
    409:411:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$LifecycleContainer:
    430:433:void clearObservers() -> clearObservers
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
    132:132:void <clinit>() -> <clinit>
    124:128:void <init>(android.os.Parcel) -> <init>
    151:154:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
    39:39:void <init>() -> <init>
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
    158:158:void <init>() -> <init>
    158:158:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    229:238:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    93:93:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.appcompat.R$styleable -> androidx.appcompat.R$styleable:
    9446:19557:void <clinit>() -> <clinit>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1374:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1374:1386:void <init>(int,int) -> <init>
    1374:1401:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1405:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    82:205:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:222:boolean canTextInput(android.view.View) -> canTextInput
    829:832:void centerButton(android.widget.Button) -> centerButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:233:void installContent() -> installContent
    749:754:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    443:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    324:348:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:257:void setCustomTitle(android.view.View) -> setCustomTitle
    359:367:void setIcon(int) -> setIcon
    378:386:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:263:void setMessage(java.lang.CharSequence) -> setMessage
    560:631:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    271:273:void setView(int) -> setView
    280:282:void setView(android.view.View) -> setView
    290:296:void setView(android.view.View,int,int,int,int) -> setView
    763:824:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:742:void setupContent(android.view.ViewGroup) -> setupContent
    640:668:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:713:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:552:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:146:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:596:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:603:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:615:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:622:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    869:927:void <init>(android.content.Context) -> <init>
    931:975:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1097:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1002:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1016:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1025:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1070:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1082:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:157:void <init>(android.content.DialogInterface) -> <init>
    162:171:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1104:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    840:840:void <init>(android.content.Context) -> <init>
    844:850:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:860:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    98:99:void <init>(android.content.Context,int) -> <init>
    140:140:android.widget.ListView getListView() -> getListView
    278:279:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    114:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:146:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:313:void <init>(android.content.Context) -> <init>
    342:345:void <init>(android.content.Context,int) -> <init>
    983:992:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:660:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:398:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:445:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    408:408:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    418:418:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    509:510:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    620:620:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:474:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    853:856:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:367:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:377:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    1008:1009:androidx.appcompat.app.AlertDialog show() -> show
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    94:95:void <init>() -> <init>
    212:213:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    139:139:void attachBaseContext(android.content.Context) -> attachBaseContext
    650:653:void closeOptionsMenu() -> closeOptionsMenu
    593:599:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    259:259:android.view.View findViewById(int) -> findViewById
    583:586:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    189:189:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    604:607:android.content.res.Resources getResources() -> getResources
    163:163:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    500:500:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    116:126:void initDelegate() -> initDelegate
    219:221:void initViewTreeOwners() -> initViewTreeOwners
    314:314:void invalidateOptionsMenu() -> invalidateOptionsMenu
    226:235:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    540:540:void onContentChanged() -> onContentChanged
    417:417:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    278:279:void onDestroy() -> onDestroy
    633:636:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    264:271:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    564:564:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    575:575:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    150:151:void onPostCreate(android.os.Bundle) -> onPostCreate
    240:241:void onPostResume() -> onPostResume
    246:247:void onStart() -> onStart
    252:253:void onStop() -> onStop
    462:481:boolean onSupportNavigateUp() -> onSupportNavigateUp
    284:285:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    641:644:void openOptionsMenu() -> openOptionsMenu
    616:623:boolean performMenuItemShortcut(android.view.KeyEvent) -> performMenuItemShortcut
    194:195:void setContentView(int) -> setContentView
    200:201:void setContentView(android.view.View) -> setContentView
    206:207:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    144:145:void setTheme(int) -> setTheme
    309:309:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    533:533:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    517:517:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatActivity$1 -> androidx.appcompat.app.AppCompatActivity$1:
    117:117:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    121:122:android.os.Bundle saveState() -> saveState
androidx.appcompat.app.AppCompatActivity$2 -> androidx.appcompat.app.AppCompatActivity$2:
    126:126:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    129:132:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    173:175:void <clinit>() -> <clinit>
    271:271:void <init>() -> <init>
    655:661:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate) -> addActiveDelegate
    395:395:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    230:230:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    241:241:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    604:604:int getDefaultNightMode() -> getDefaultNightMode
    665:668:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate) -> removeActivityDelegate
    672:682:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    137:191:void <clinit>() -> <clinit>
    286:286:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    290:290:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    214:336:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    713:716:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2361:2361:boolean applyDayNight() -> applyDayNight
    2366:2388:boolean applyDayNight(boolean) -> applyDayNight
    1021:1054:void applyFixedSizeWindow() -> applyFixedSizeWindow
    343:470:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    780:803:void attachToWindow(android.view.Window) -> attachToWindow
    2449:2449:int calculateNightMode() -> calculateNightMode
    2069:2089:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1951:1961:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    755:759:void cleanupAutoManagers() -> cleanupAutoManagers
    1965:1965:void closePanel(int) -> closePanel
    1969:1996:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    2469:2480:android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration) -> createOverrideConfigurationForDayNight
    841:1005:android.view.ViewGroup createSubDecor() -> createSubDecor
    1522:1556:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2335:2355:void dismissPopups() -> dismissPopups
    1454:1472:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2157:2178:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1393:1394:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    807:835:void ensureSubDecor() -> ensureSubDecor
    771:775:void ensureWindow() -> ensureWindow
    2094:2098:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    632:633:android.view.View findViewById(int) -> findViewById
    3368:3466:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta
    606:612:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2626:2629:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context) -> getAutoBatteryNightModeManager
    2614:2614:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> getAutoTimeNightModeManager
    2618:2622:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context) -> getAutoTimeNightModeManager
    2413:2413:int getLocalNightMode() -> getLocalNightMode
    620:625:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2107:2117:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    536:537:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    1140:1144:java.lang.CharSequence getTitle() -> getTitle
    545:545:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    549:561:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1826:1841:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1732:1734:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1783:1820:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1587:1592:void installViewFactory() -> installViewFactory
    1219:1222:void invalidateOptionsMenu() -> invalidateOptionsMenu
    2148:2152:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2633:2667:boolean isActivityManifestHandlingUiMode() -> isActivityManifestHandlingUiMode
    1389:1389:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2426:2442:int mapNightMode(android.content.Context,int) -> mapNightMode
    1400:1407:boolean onBackPressed() -> onBackPressed
    640:654:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    492:523:void onCreate(android.os.Bundle) -> onCreate
    1604:1604:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1613:1613:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    725:750:void onDestroy() -> onDestroy
    1505:1513:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2001:2004:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1417:1443:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1478:1494:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2012:2058:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1174:1178:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1186:1186:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1165:1167:void onMenuOpened(int) -> onMenuOpened
    1149:1158:void onPanelClosed(int) -> onPanelClosed
    529:529:void onPostCreate(android.os.Bundle) -> onPostCreate
    678:680:void onPostResume() -> onPostResume
    659:663:void onStart() -> onStart
    668:672:void onStop() -> onStop
    1634:1728:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    541:541:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    2124:2140:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1847:1945:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1739:1779:void reopenMenu(boolean) -> reopenMenu
    1059:1096:boolean requestWindowFeature(int) -> requestWindowFeature
    2318:2322:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    686:690:void setContentView(android.view.View) -> setContentView
    695:699:void setContentView(int) -> setContentView
    704:708:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    765:765:void setTheme(int) -> setTheme
    1127:1134:void setTitle(java.lang.CharSequence) -> setTitle
    1379:1379:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1565:1581:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1192:1214:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1226:1373:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2310:2311:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1618:1624:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2498:2550:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2561:2601:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration) -> updateResourcesConfigurationForNightMode
    2194:2295:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> updateStatusGuard
    2302:2306:void updateStatusGuardColor(android.view.View) -> updateStatusGuardColor
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$1:
    165:165:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    182:185:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    169:177:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    264:264:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    267:274:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    940:940:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    944:956:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$4:
    962:962:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    965:965:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    1005:1005:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1011:1011:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1281:1281:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1284:1307:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1292:1292:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1300:1302:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1295:1295:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1334:1334:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1347:1349:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1337:1341:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2765:2765:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2779:2779:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2770:2772:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2676:2677:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2693:2693:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2682:2682:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2698:2726:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2687:2688:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2706:2706:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2709:2718:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl:
    3487:3487:android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration) -> createConfigurationContext
    3480:3481:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_densityDpi
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl:
    3496:3496:boolean isPowerSaveMode(android.os.PowerManager) -> isPowerSaveMode
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl:
    3506:3510:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_locale
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl:
    3521:3529:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_colorMode
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    3051:3052:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    3057:3058:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3063:3064:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    3069:3074:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    3112:3113:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    3119:3120:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    3085:3104:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    3178:3185:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    3126:3135:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    3163:3171:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    3145:3154:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3274:3276:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3295:3297:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3282:3283:int getApplyableNightMode() -> getApplyableNightMode
    3290:3290:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    3195:3195:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3227:3234:void cleanup() -> cleanup
    3204:3220:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    3213:3213:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    3216:3216:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3246:3247:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3263:3266:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3253:3253:int getApplyableNightMode() -> getApplyableNightMode
    3258:3258:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl:
    484:484:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration) -> applyOverrideConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    3015:3016:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3021:3022:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3045:3045:boolean isOutOfBounds(int,int) -> isOutOfBounds
    3027:3036:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3041:3041:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2848:2851:void <init>(int) -> <init>
    2916:2925:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2855:2858:boolean hasPanelItems() -> hasPanelItems
    2904:2911:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2872:2900:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState:
    2995:2995:void <clinit>() -> <clinit>
    2965:2965:void <init>() -> <init>
    2984:2989:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    2975:2979:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1:
    2995:2995:void <init>() -> <init>
    2995:2995:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2995:2995:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2998:2998:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3003:3003:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2995:2995:java.lang.Object[] newArray(int) -> newArray
    3008:3008:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2731:2731:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2736:2746:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2754:2757:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    45:67:void <init>(android.content.Context,int) -> <init>
    129:129:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    140:142:void dismiss() -> dismiss
    213:214:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    176:179:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    185:187:int getThemeResId(android.content.Context,int) -> getThemeResId
    169:169:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:79:void onCreate(android.os.Bundle) -> onCreate
    134:135:void onStop() -> onStop
    95:95:void setContentView(int) -> setContentView
    100:100:void setContentView(android.view.View) -> setContentView
    105:105:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:118:void setTitle(java.lang.CharSequence) -> setTitle
    123:124:void setTitle(int) -> setTitle
    208:208:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    160:160:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    75:87:void <clinit>() -> <clinit>
    73:90:void <init>() -> <init>
    313:328:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    240:240:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    204:204:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    224:224:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    234:234:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    209:209:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    219:219:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    199:199:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    246:246:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    229:229:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    251:251:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    256:256:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    214:214:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    194:194:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    261:261:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    100:186:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    333:347:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    277:304:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    360:381:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    266:266:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    397:399:void <init>(android.view.View,java.lang.String) -> <init>
    404:414:void onClick(android.view.View) -> onClick
    422:447:void resolveMethod(android.content.Context) -> resolveMethod
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    46:54:void flush(android.content.res.Resources) -> flush
    60:77:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:108:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:160:void flushNougats(android.content.res.Resources) -> flushNougats
    166:205:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    95:136:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    66:71:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    110:124:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:138:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:101:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    60:60:void setInstance(androidx.appcompat.app.TwilightManager) -> setInstance
    148:191:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:205:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    85:86:void <clinit>() -> <clinit>
    99:175:void <init>(android.app.Activity,boolean) -> <init>
    99:180:void <init>(android.app.Dialog) -> <init>
    874:905:void animateToMode(boolean) -> animateToMode
    973:974:boolean collapseActionView() -> collapseActionView
    310:313:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    349:356:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    835:861:void doHide(boolean) -> doHide
    786:830:void doShow(boolean) -> doShow
    672:672:void enableContentAnimations(boolean) -> enableContentAnimations
    235:241:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    516:516:int getDisplayOptions() -> getDisplayOptions
    511:511:int getNavigationMode() -> getNavigationMode
    919:931:android.content.Context getThemedContext() -> getThemedContext
    710:715:void hideForActionMode() -> hideForActionMode
    721:723:void hideForSystem() -> hideForSystem
    193:231:void init(android.view.View) -> init
    257:257:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    961:963:void onContentScrollStarted() -> onContentScrollStarted
    1400:1408:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    319:319:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1393:1394:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    378:378:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    472:476:void setDisplayOptions(int,int) -> setDisplayOptions
    247:247:void setElevation(float) -> setElevation
    261:282:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    729:734:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    393:393:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    331:333:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    444:444:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    914:914:boolean shouldAnimateContextView() -> shouldAnimateContextView
    684:689:void showForActionMode() -> showForActionMode
    695:697:void showForSystem() -> showForSystem
    521:535:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    769:780:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:147:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:156:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:165:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    991:996:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1058:1063:boolean dispatchOnCreate() -> dispatchOnCreate
    1011:1037:void finish() -> finish
    1115:1115:android.view.View getCustomView() -> getCustomView
    1006:1006:android.view.Menu getMenu() -> getMenu
    1001:1001:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1099:1099:java.lang.CharSequence getSubtitle() -> getSubtitle
    1094:1094:java.lang.CharSequence getTitle() -> getTitle
    1042:1054:void invalidate() -> invalidate
    1110:1110:boolean isTitleOptional() -> isTitleOptional
    1120:1121:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1148:1152:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1068:1069:void setCustomView(android.view.View) -> setCustomView
    1074:1074:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1089:1089:void setSubtitle(int) -> setSubtitle
    1079:1079:void setTitle(java.lang.CharSequence) -> setTitle
    1084:1084:void setTitle(int) -> setTitle
    1104:1105:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    50:55:void <clinit>() -> <clinit>
    150:158:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    130:144:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    67:86:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    173:176:android.util.TypedValue getTypedValue() -> getTypedValue
    112:122:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    162:167:boolean isColorInt(android.content.Context,int) -> isColorInt
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry:
    186:188:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    92:92:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    105:121:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:boolean canApplyTheme() -> canApplyTheme
    619:620:void clearMutated() -> clearMutated
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    614:614:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    171:177:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    201:209:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    483:497:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    472:472:void init() -> init
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    264:270:void jumpToCurrentState() -> jumpToCurrentState
    605:607:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    278:286:boolean onStateChange(int[]) -> onStateChange
    564:600:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    510:554:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    293:349:boolean selectTransition(int) -> selectTransition
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    718:720:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    89:89:void setDither(boolean) -> setDither
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    214:220:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    449:467:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    370:371:void <init>(android.graphics.drawable.Animatable) -> <init>
    376:376:void start() -> start
    381:381:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    634:641:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    667:668:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    652:661:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    681:681:int getKeyframeIdAt(int) -> getKeyframeIdAt
    673:677:int indexOfKeyframe(int[]) -> indexOfKeyframe
    685:686:int indexOfTransition(int,int) -> indexOfTransition
    690:691:boolean isTransitionReversed(int,int) -> isTransitionReversed
    647:648:void mutate() -> mutate
    702:702:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    708:708:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    695:696:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    433:434:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    439:439:void start() -> start
    444:444:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    392:406:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    411:411:boolean canReverse() -> canReverse
    421:421:void reverse() -> reverse
    416:416:void start() -> start
    426:426:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    732:733:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    759:772:float getInterpolation(float) -> getInterpolation
    754:754:int getTotalDuration() -> getTotalDuration
    737:749:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    353:353:void <init>() -> <init>
    353:353:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    54:75:void <init>() -> <init>
    535:570:void animate(boolean) -> animate
    594:594:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    600:600:boolean canApplyTheme() -> canApplyTheme
    634:635:void clearMutated() -> clearMutated
    87:91:void draw(android.graphics.Canvas) -> draw
    153:153:int getAlpha() -> getAlpha
    97:98:int getChangingConfigurations() -> getChangingConfigurations
    605:607:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    577:577:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    415:415:int getCurrentIndex() -> getCurrentIndex
    295:298:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    341:344:int getIntrinsicHeight() -> getIntrinsicHeight
    333:336:int getIntrinsicWidth() -> getIntrinsicWidth
    357:360:int getMinimumHeight() -> getMinimumHeight
    349:352:int getMinimumWidth() -> getMinimumWidth
    405:406:int getOpacity() -> getOpacity
    131:132:void getOutline(android.graphics.Outline) -> getOutline
    108:123:boolean getPadding(android.graphics.Rect) -> getPadding
    491:531:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    368:372:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    250:270:void jumpToCurrentState() -> jumpToCurrentState
    614:618:android.graphics.drawable.Drawable mutate() -> mutate
    102:103:boolean needsMirroring() -> needsMirroring
    218:222:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    328:328:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    315:319:boolean onLevelChange(int) -> onLevelChange
    304:308:boolean onStateChange(int[]) -> onStateChange
    1207:1207:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    378:379:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    428:480:boolean selectDrawable(int) -> selectDrawable
    138:145:void setAlpha(int) -> setAlpha
    233:236:void setAutoMirrored(boolean) -> setAutoMirrored
    169:173:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1156:1166:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    159:162:void setDither(boolean) -> setDither
    276:277:void setHotspot(float,float) -> setHotspot
    283:289:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:183:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:192:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    392:397:boolean setVisible(boolean,boolean) -> setVisible
    385:386:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    588:588:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    467:467:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    470:471:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl -> androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl:
    1218:1218:boolean canApplyTheme(android.graphics.drawable.Drawable$ConstantState) -> canApplyTheme
    1226:1226:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
    1222:1222:android.content.res.Resources getResources(android.content.res.Resources$Theme) -> getResources
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1172:1172:void <init>() -> <init>
    1193:1194:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1200:1201:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1181:1182:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1176:1176:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    653:755:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:785:int addChild(android.graphics.drawable.Drawable) -> addChild
    897:907:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    914:924:boolean canApplyTheme() -> canApplyTheme
    1137:1150:boolean canConstantState() -> canConstantState
    953:953:void clearMutated() -> clearMutated
    1045:1060:void computeConstantSize() -> computeConstantSize
    802:809:void createAllFutures() -> createAllFutures
    798:798:int getCapacity() -> getCapacity
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    830:843:android.graphics.drawable.Drawable getChild(int) -> getChild
    823:823:int getChildCount() -> getChildCount
    1018:1021:int getConstantHeight() -> getConstantHeight
    1038:1041:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1028:1031:int getConstantMinimumWidth() -> getConstantMinimumWidth
    969:990:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1008:1011:int getConstantWidth() -> getConstantWidth
    1085:1096:int getOpacity() -> getOpacity
    1126:1130:void growArray(int,int) -> growArray
    793:794:void invalidateCache() -> invalidateCache
    1001:1001:boolean isConstantSize() -> isConstantSize
    814:818:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    994:994:void setConstantSize(boolean) -> setConstantSize
    1065:1065:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1073:1073:void setExitFadeDuration(int) -> setExitFadeDuration
    855:869:boolean setLayoutDirection(int,int) -> setLayoutDirection
    962:962:void setVariablePadding(boolean) -> setVariablePadding
    881:889:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:47:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:52:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    113:113:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    139:139:int getIntrinsicHeight() -> getIntrinsicHeight
    134:134:int getIntrinsicWidth() -> getIntrinsicWidth
    149:149:int getMinimumHeight() -> getMinimumHeight
    144:144:int getMinimumWidth() -> getMinimumWidth
    124:124:int getOpacity() -> getOpacity
    154:154:boolean getPadding(android.graphics.Rect) -> getPadding
    103:103:int[] getState() -> getState
    129:129:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    222:222:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    162:162:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    193:193:boolean isAutoMirrored() -> isAutoMirrored
    93:93:boolean isStateful() -> isStateful
    108:108:void jumpToCurrentState() -> jumpToCurrentState
    57:57:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:183:boolean onLevelChange(int) -> onLevelChange
    170:170:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    83:83:void setAlpha(int) -> setAlpha
    188:188:void setAutoMirrored(boolean) -> setAutoMirrored
    62:62:void setChangingConfigurations(int) -> setChangingConfigurations
    88:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    73:73:void setDither(boolean) -> setDither
    78:78:void setFilterBitmap(boolean) -> setFilterBitmap
    213:213:void setHotspot(float,float) -> setHotspot
    218:218:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    98:98:boolean setState(int[]) -> setState
    198:198:void setTint(int) -> setTint
    203:203:void setTintList(android.content.res.ColorStateList) -> setTintList
    208:208:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    118:118:boolean setVisible(boolean,boolean) -> setVisible
    226:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    178:178:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    403:407:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    414:416:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    391:392:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    324:325:void clearMutated() -> clearMutated
    79:79:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    319:319:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    235:252:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    310:312:android.graphics.drawable.Drawable mutate() -> mutate
    113:122:boolean onStateChange(int[]) -> onStateChange
    397:399:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    332:337:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    351:352:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    381:384:void growArray(int,int) -> growArray
    357:360:int indexOfStateSet(int[]) -> indexOfStateSet
    343:347:void mutate() -> mutate
    370:370:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    376:376:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.resources.R$styleable -> androidx.appcompat.resources.R$styleable:
    9446:19557:void <clinit>() -> <clinit>
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:38:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:47:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:59:int getMaxActionButtons() -> getMaxActionButtons
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:81:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:57:void setTag(java.lang.Object) -> setTag
    134:134:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:48:void <init>() -> <init>
    63:64:void <init>(android.content.Context,int) -> <init>
    77:78:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    97:104:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    83:83:void attachBaseContext(android.content.Context) -> attachBaseContext
    200:200:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:126:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    161:167:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    147:156:android.content.res.Resources$Theme getTheme() -> getTheme
    142:142:int getThemeResId() -> getThemeResId
    186:194:void initializeTheme() -> initializeTheme
    182:182:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    131:133:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    51:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    106:112:void finish() -> finish
    132:132:android.view.View getCustomView() -> getCustomView
    117:117:android.view.Menu getMenu() -> getMenu
    137:137:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    127:127:java.lang.CharSequence getSubtitle() -> getSubtitle
    122:122:java.lang.CharSequence getTitle() -> getTitle
    101:101:void invalidate() -> invalidate
    90:90:boolean isTitleOptional() -> isTitleOptional
    142:142:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    162:163:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    95:96:void setCustomView(android.view.View) -> setCustomView
    69:69:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    79:79:void setSubtitle(int) -> setSubtitle
    64:64:void setTitle(java.lang.CharSequence) -> setTitle
    74:74:void setTitle(int) -> setTitle
    84:85:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:51:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:81:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:76:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:116:void setCustomView(android.view.View) -> setCustomView
    71:71:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:106:void setSubtitle(int) -> setSubtitle
    61:61:void setTag(java.lang.Object) -> setTag
    66:66:void setTitle(java.lang.CharSequence) -> setTitle
    96:96:void setTitle(int) -> setTitle
    131:131:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:154:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:203:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:185:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:178:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:104:void <init>(android.content.Context) -> <init>
    231:235:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:136:void inflate(int,android.view.Menu) -> inflate
    145:219:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    337:352:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    530:531:void addItem() -> addItem
    535:537:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    462:462:char getShortcut(java.lang.String) -> getShortcut
    542:542:boolean hasAddedItem() -> hasAddedItem
    549:554:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:379:void readGroup(android.util.AttributeSet) -> readGroup
    386:455:void readItem(android.util.AttributeSet) -> readItem
    356:361:void resetGroup() -> resetGroup
    467:525:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    42:120:void <init>() -> <init>
    90:96:void cancel() -> cancel
    86:86:void onAnimationsEnded() -> onAnimationsEnded
    53:54:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:63:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:101:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:108:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:115:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:82:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:132:void onAnimationStart(android.view.View) -> onAnimationStart
    137:139:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:54:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:171:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:166:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:129:void onAttachedToWindow() -> onAttachedToWindow
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:134:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:139:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:184:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:178:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:114:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:124:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    53:84:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    437:446:void applyIconTint() -> applyIconTint
    340:340:android.view.ActionProvider getActionProvider() -> getActionProvider
    94:94:int getAlphabeticModifiers() -> getAlphabeticModifiers
    89:89:char getAlphabeticShortcut() -> getAlphabeticShortcut
    392:392:java.lang.CharSequence getContentDescription() -> getContentDescription
    99:99:int getGroupId() -> getGroupId
    104:104:android.graphics.drawable.Drawable getIcon() -> getIcon
    418:418:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    433:433:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    109:109:android.content.Intent getIntent() -> getIntent
    114:114:int getItemId() -> getItemId
    129:129:int getNumericModifiers() -> getNumericModifiers
    124:124:char getNumericShortcut() -> getNumericShortcut
    134:134:int getOrder() -> getOrder
    144:144:java.lang.CharSequence getTitle() -> getTitle
    149:149:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    403:403:java.lang.CharSequence getTooltipText() -> getTooltipText
    159:159:boolean isCheckable() -> isCheckable
    164:164:boolean isChecked() -> isChecked
    169:169:boolean isEnabled() -> isEnabled
    174:174:boolean isVisible() -> isVisible
    335:335:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    325:325:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    345:345:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    179:179:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    185:186:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    192:192:android.view.MenuItem setCheckable(boolean) -> setCheckable
    203:203:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    386:386:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    209:209:android.view.MenuItem setEnabled(boolean) -> setEnabled
    215:217:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    223:225:android.view.MenuItem setIcon(int) -> setIcon
    408:411:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    423:426:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    231:231:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    237:237:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    243:244:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    381:381:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    250:250:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    256:257:android.view.MenuItem setShortcut(char,char) -> setShortcut
    264:267:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    360:360:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    355:355:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    273:273:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    279:279:android.view.MenuItem setTitle(int) -> setTitle
    285:285:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    397:397:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    291:291:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:151:void onClick(android.view.View) -> onClick
    92:95:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:294:void onMeasure(int,int) -> onMeasure
    333:333:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    215:233:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:156:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:114:void setPadding(int,int,int,int) -> setPadding
    160:160:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    188:209:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:300:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:306:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:316:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:65:void <init>(android.content.Context,int,int) -> <init>
    134:138:void addItemView(android.view.View,int) -> addItemView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    148:148:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:72:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:214:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:222:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:154:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    248:248:void setId(int) -> setId
    91:121:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    34:35:void <init>(android.content.Context) -> <init>
    39:53:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    62:74:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    83:87:void internalClear() -> internalClear
    92:97:void internalRemoveGroup(int) -> internalRemoveGroup
    104:109:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    355:360:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    246:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    288:295:void dismiss() -> dismiss
    656:658:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    517:519:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    538:581:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    316:316:int getInitialMenuPosition() -> getInitialMenuPosition
    766:768:android.widget.ListView getListView() -> getListView
    330:345:int getNextMenuPosition(int) -> getNextMenuPosition
    589:589:boolean isShowing() -> isShowing
    668:721:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    600:611:void onDismiss() -> onDismiss
    303:304:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    630:642:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    750:755:void setAnchorView(android.view.View) -> setAnchorView
    624:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    242:242:void setForceShowIcon(boolean) -> setForceShowIcon
    741:744:void setGravity(int) -> setGravity
    773:774:void setHorizontalOffset(int) -> setHorizontalOffset
    761:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    785:785:void setShowTitle(boolean) -> setShowTitle
    779:780:void setVerticalOffset(int) -> setVerticalOffset
    260:278:void show() -> show
    370:502:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    617:618:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:112:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    127:133:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:193:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:143:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:188:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    801:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    808:808:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    73:73:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:81:void onDetachedFromWindow() -> onDetachedFromWindow
    92:92:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    74:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:97:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:138:void addContentView(android.view.View) -> addContentView
    142:145:void addContentView(android.view.View,int) -> addContentView
    347:353:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    327:330:android.view.LayoutInflater getInflater() -> getInflater
    166:166:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    309:313:void insertCheckBox() -> insertCheckBox
    294:297:void insertIconView() -> insertIconView
    301:305:void insertRadioButton() -> insertRadioButton
    102:119:void onFinishInflate() -> onFinishInflate
    282:290:void onMeasure(int,int) -> onMeasure
    171:210:void setCheckable(boolean) -> setCheckable
    150:150:void setForceShowIcon(boolean) -> setForceShowIcon
    339:341:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    256:276:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    242:250:void setShortcut(boolean,char) -> setShortcut
    235:236:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    156:160:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:73:void <init>(android.content.Context,int) -> <init>
    81:83:void <init>(int,int) -> <init>
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:173:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    143:148:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:138:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:133:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    232:235:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:289:void findExpandedIndex() -> findExpandedIndex
    240:242:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    268:272:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:295:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    36:49:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:126:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    94:109:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:132:void notifyDataSetChanged() -> notifyDataSetChanged
    57:57:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:235:void <init>(android.content.Context) -> <init>
    466:466:android.view.MenuItem add(java.lang.CharSequence) -> add
    471:471:android.view.MenuItem add(int) -> add
    476:476:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    481:481:android.view.MenuItem add(int,int,int,int) -> add
    520:540:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    441:452:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    250:250:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    263:265:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    486:486:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    491:491:android.view.SubMenu addSubMenu(int) -> addSubMenu
    496:498:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    505:505:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    841:842:void changeMenuMode() -> changeMenuMode
    604:609:void clear() -> clear
    1213:1217:void clearHeader() -> clearHeader
    1030:1041:void close(boolean) -> close
    1046:1046:void close() -> close
    1373:1389:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    460:460:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    834:834:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    284:295:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    300:314:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1351:1367:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    724:724:int findGroupIndex(int) -> findGroupIndex
    728:737:int findGroupIndex(int,int) -> findGroupIndex
    847:849:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    693:699:android.view.MenuItem findItem(int) -> findItem
    711:715:int findItemIndex(int) -> findItemIndex
    930:956:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    882:911:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1163:1199:void flagActionItems() -> flagActionItems
    1203:1204:java.util.ArrayList getActionItems() -> getActionItems
    830:830:android.content.Context getContext() -> getContext
    1395:1395:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1316:1316:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1312:1312:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1320:1320:android.view.View getHeaderView() -> getHeaderView
    752:752:android.view.MenuItem getItem(int) -> getItem
    1208:1209:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1347:1347:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    781:785:int getOrdering(int) -> getOrdering
    826:826:android.content.res.Resources getResources() -> getResources
    1118:1133:java.util.ArrayList getVisibleItems() -> getVisibleItems
    675:683:boolean hasVisibleItems() -> hasVisibleItems
    514:514:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    792:792:boolean isQwertyMode() -> isQwertyMode
    757:757:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    822:822:boolean isShortcutsVisible() -> isShortcutsVisible
    1112:1113:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1101:1102:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1057:1067:void onItemsChanged(boolean) -> onItemsChanged
    971:971:boolean performIdentifierAction(int,int) -> performIdentifierAction
    975:975:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    979:1014:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    859:868:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    554:565:void removeGroup(int) -> removeGroup
    549:549:void removeItem(int) -> removeItem
    580:584:void removeItemAtInt(int,boolean) -> removeItemAtInt
    275:278:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    404:424:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    375:395:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    434:434:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    239:239:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    613:627:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    632:638:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    510:510:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    663:668:void setGroupEnabled(int,boolean) -> setGroupEnabled
    645:658:void setGroupVisible(int,boolean) -> setGroupVisible
    1283:1283:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1295:1295:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1222:1248:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1259:1259:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1271:1271:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1307:1307:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1404:1404:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    762:764:void setQwertyMode(boolean) -> setQwertyMode
    812:815:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    747:747:int size() -> size
    1086:1090:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1078:1081:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    43:44:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    140:141:void dismiss() -> dismiss
    170:170:void onClick(android.content.DialogInterface,int) -> onClick
    152:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    147:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    96:126:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    162:163:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    54:90:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    68:145:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    403:403:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:582:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    838:848:boolean collapseActionView() -> collapseActionView
    824:830:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:773:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:508:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:477:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:859:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:176:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    716:716:boolean requiresOverflow() -> requiresOverflow
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:756:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:764:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:866:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:254:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:269:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:598:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:624:android.view.MenuItem setChecked(boolean) -> setChecked
    631:634:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:884:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    191:196:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:605:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:519:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:531:android.view.MenuItem setIcon(int) -> setIcon
    539:543:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:559:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:228:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    721:723:void setIsActionButton(boolean) -> setIsActionButton
    682:682:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:296:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:310:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:876:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:672:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:320:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:333:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    742:746:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:818:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:430:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:806:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:458:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:493:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:898:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:665:android.view.MenuItem setVisible(boolean) -> setVisible
    655:656:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:809:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:60:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:314:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:293:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:306:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:272:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:284:android.view.MenuItem setActionView(int) -> setActionView
    171:171:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:177:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:204:android.view.MenuItem setChecked(boolean) -> setChecked
    343:343:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:225:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:393:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:108:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:114:android.view.MenuItem setIcon(int) -> setIcon
    365:365:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:376:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:125:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:149:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:155:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:337:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:247:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:136:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:143:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:258:void setShowAsAction(int) -> setShowAsAction
    263:263:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:80:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:86:android.view.MenuItem setTitle(int) -> setTitle
    97:97:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:354:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:434:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:454:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    463:464:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:496:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:490:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:514:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:524:void onActionViewCollapsed() -> onActionViewCollapsed
    519:519:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:415:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:402:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    147:164:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:131:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:71:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    203:207:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    80:80:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    61:340:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    230:263:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    304:305:void dismiss() -> dismiss
    161:164:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    326:326:boolean isShowing() -> isShowing
    318:321:void onDismiss() -> onDismiss
    106:106:void setAnchorView(android.view.View) -> setAnchorView
    119:121:void setForceShowIcon(boolean) -> setForceShowIcon
    133:133:void setGravity(int) -> setGravity
    95:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    331:333:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    144:145:void show() -> show
    269:296:void showPopup(int,int,boolean,boolean) -> showPopup
    174:182:boolean tryShow() -> tryShow
    210:218:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    340:340:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    343:343:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:45:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    94:102:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:124:void clear() -> clear
    164:164:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:118:void removeGroup(int) -> removeGroup
    111:112:void removeItem(int) -> removeItem
    129:129:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:139:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:134:void setGroupVisible(int,boolean) -> setGroupVisible
    184:184:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:135:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    215:216:void dismiss() -> dismiss
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:305:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:243:void onDismiss() -> onDismiss
    330:331:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:290:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:325:void setAnchorView(android.view.View) -> setAnchorView
    258:258:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:140:void setForceShowIcon(boolean) -> setForceShowIcon
    145:145:void setGravity(int) -> setGravity
    350:350:void setHorizontalOffset(int) -> setHorizontalOffset
    339:339:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:360:void setShowTitle(boolean) -> setShowTitle
    355:355:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:201:boolean tryShow() -> tryShow
    249:252:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:73:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    87:91:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    43:46:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    138:138:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    90:91:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    133:133:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    143:147:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    75:75:android.view.MenuItem getItem() -> getItem
    70:70:android.view.Menu getParentMenu() -> getParentMenu
    85:85:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    157:157:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    56:56:boolean isQwertyMode() -> isQwertyMode
    66:66:boolean isShortcutsVisible() -> isShortcutsVisible
    80:80:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    152:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    108:108:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    113:113:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    118:118:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    123:123:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    128:128:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    96:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    102:102:android.view.SubMenu setIcon(int) -> setIcon
    51:51:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:40:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:75:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:57:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:63:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:45:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:51:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:69:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:80:android.view.SubMenu setIcon(int) -> setIcon
    86:86:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    54:54:void <init>(android.content.Context) -> <init>
    58:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:36:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    36:36:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    248:254:int measureChildView(android.view.View,int,int,int) -> measureChildView
    75:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:134:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    96:109:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    262:269:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    187:191:void setVisibility(int) -> setVisibility
    160:175:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    275:276:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    302:302:void onAnimationCancel(android.view.View) -> onAnimationCancel
    294:297:void onAnimationEnd(android.view.View) -> onAnimationEnd
    288:289:void onAnimationStart(android.view.View) -> onAnimationStart
    281:282:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:33:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:47:void draw(android.graphics.Canvas) -> draw
    68:75:void getOutline(android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    55:55:void <init>(android.content.Context) -> <init>
    59:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:176:void drawableStateChanged() -> drawableStateChanged
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    243:243:android.view.View getTabContainer() -> getTabContainer
    263:263:boolean isCollapsed(android.view.View) -> isCollapsed
    182:190:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:86:void onFinishInflate() -> onFinishInflate
    222:222:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:345:void onLayout(boolean,int,int,int,int) -> onLayout
    273:296:void onMeasure(int,int) -> onMeasure
    214:214:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    229:232:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:203:void setTransitioning(boolean) -> setTransitioning
    153:157:void setVisibility(int) -> setVisibility
    257:257:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:163:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    59:59:void <init>(android.content.Context) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    195:196:void closeMode() -> closeMode
    239:239:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    244:244:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    132:132:java.lang.CharSequence getSubtitle() -> getSubtitle
    128:128:java.lang.CharSequence getTitle() -> getTitle
    163:191:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    136:158:void initTitle() -> initTitle
    384:384:boolean isTitleOptional() -> isTitleOptional
    202:207:void killMode() -> killMode
    90:93:void onDetachedFromWindow() -> onDetachedFromWindow
    42:42:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    365:372:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    329:354:void onLayout(boolean,int,int,int,int) -> onLayout
    249:323:void onMeasure(int,int) -> onMeasure
    42:42:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    99:99:void setContentHeight(int) -> setContentHeight
    103:114:void setCustomView(android.view.View) -> setCustomView
    123:124:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    118:119:void setTitle(java.lang.CharSequence) -> setTitle
    377:380:void setTitleOptional(boolean) -> setTitleOptional
    42:42:void setVisibility(int) -> setVisibility
    42:42:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    213:214:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    172:172:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    175:175:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    147:147:void <clinit>() -> <clinit>
    155:155:void <init>(android.content.Context) -> <init>
    71:162:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    741:742:void addActionBarHideOffset() -> addActionBarHideOffset
    288:303:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    822:823:boolean canShowOverflowMenu() -> canShowOverflowMenu
    404:404:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    876:877:void dismissPopups() -> dismissPopups
    543:550:void draw(android.graphics.Canvas) -> draw
    311:334:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    63:63:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    389:389:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    63:63:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    394:394:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    399:399:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:int getActionBarHideOffset() -> getActionBarHideOffset
    682:688:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    670:670:int getNestedScrollAxes() -> getNestedScrollAxes
    718:721:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    846:847:boolean hideOverflowMenu() -> hideOverflowMenu
    166:175:void init(android.content.Context) -> init
    771:780:void initFeature(int) -> initFeature
    211:211:boolean isInOverlayMode() -> isInOverlayMode
    834:835:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    828:829:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    347:384:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    241:243:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    180:181:void onDetachedFromWindow() -> onDetachedFromWindow
    520:536:void onLayout(boolean,int,int,int,int) -> onLayout
    410:514:void onMeasure(int,int) -> onMeasure
    646:654:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    599:599:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    564:564:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    592:592:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    626:627:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    577:577:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    615:619:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    571:571:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    607:610:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    584:584:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    632:640:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    253:271:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    278:281:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    731:732:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    726:727:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    674:677:void pullChildren() -> pullChildren
    736:737:void removeActionBarHideOffset() -> removeActionBarHideOffset
    711:714:void setActionBarHideOffset(int) -> setActionBarHideOffset
    185:193:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    215:215:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    693:697:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    858:859:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    852:853:void setMenuPrepared() -> setMenuPrepared
    199:206:void setOverlayMode(boolean) -> setOverlayMode
    753:754:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    759:760:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    746:748:boolean shouldHideActionBarOnFling(float) -> shouldHideActionBarOnFling
    840:841:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    114:114:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    123:124:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    117:118:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    128:128:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    131:133:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    137:137:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    140:143:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    882:882:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    886:886:void <init>(int,int) -> <init>
    890:890:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    75:87:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    54:54:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter) -> access$600
    207:216:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    373:374:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:324:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    413:540:boolean flagActionItems() -> flagActionItems
    191:200:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:184:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    354:362:boolean hideOverflowMenu() -> hideOverflowMenu
    384:385:boolean hideSubMenus() -> hideSubMenus
    92:129:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    399:399:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    395:395:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    548:549:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:137:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    281:312:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    158:158:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    586:587:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    148:149:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:341:boolean showOverflowMenu() -> showOverflowMenu
    226:270:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    733:742:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    747:750:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    800:800:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    805:805:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    782:783:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    788:795:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    628:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    671:676:boolean performClick() -> performClick
    692:705:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    638:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    641:645:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    650:650:boolean onForwardingStarted() -> onForwardingStarted
    659:663:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    715:718:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    723:728:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    755:755:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    769:774:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    760:764:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    611:611:void <clinit>() -> <clinit>
    594:594:void <init>() -> <init>
    597:598:void <init>(android.os.Parcel) -> <init>
    608:608:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
    612:612:void <init>() -> <init>
    612:612:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    615:615:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    612:612:java.lang.Object[] newArray(int) -> newArray
    620:620:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    78:78:void <init>(android.content.Context) -> <init>
    82:88:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    609:609:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    722:723:void dismissPopupMenus() -> dismissPopupMenus
    50:50:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    582:584:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    590:590:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:604:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    615:616:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    650:662:android.view.Menu getMenu() -> getMenu
    735:742:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    699:699:boolean hideOverflowMenu() -> hideOverflowMenu
    638:638:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    624:624:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    715:715:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    709:709:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    571:571:boolean isOverflowReserved() -> isOverflowReserved
    406:434:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    130:137:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    543:544:void onDetachedFromWindow() -> onDetachedFromWindow
    441:536:void onLayout(boolean,int,int,int,int) -> onLayout
    149:174:void onMeasure(int,int) -> onMeasure
    180:388:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    681:681:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    755:755:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    671:672:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    143:143:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    577:577:void setOverflowReserved(boolean) -> setOverflowReserved
    99:104:void setPopupTheme(int) -> setPopupTheme
    124:125:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    690:690:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    792:792:void <init>() -> <init>
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    832:832:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    836:836:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    840:841:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    845:846:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    774:774:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    779:780:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    785:786:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    873:873:void <clinit>() -> <clinit>
    878:881:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:55:void <init>(android.content.Context) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:232:void forceUniformWidth(int,int) -> forceUniformWidth
    265:342:void onLayout(boolean,int,int,int,int) -> onLayout
    64:66:void onMeasure(int,int) -> onMeasure
    248:256:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:348:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    75:203:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    59:59:void <clinit>() -> <clinit>
    67:67:void <init>(android.content.Context) -> <init>
    71:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:92:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:179:void drawableStateChanged() -> drawableStateChanged
    140:141:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    168:169:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    193:193:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    110:112:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    102:104:void setBackgroundResource(int) -> setBackgroundResource
    203:204:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    97:97:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    125:126:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    153:154:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    185:187:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    37:45:void <init>(android.view.View) -> <init>
    178:196:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    123:137:void applySupportBackgroundTint() -> applySupportBackgroundTint
    105:105:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    119:119:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    49:76:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:92:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    80:85:void onSetBackgroundResource(int) -> onSetBackgroundResource
    144:152:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    96:101:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    109:115:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    156:160:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    70:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:166:void drawableStateChanged() -> drawableStateChanged
    329:333:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    313:317:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    297:301:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    345:349:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    279:285:int getAutoSizeTextType() -> getAutoSizeTextType
    127:128:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    155:156:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    180:181:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    186:187:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    192:194:void onLayout(boolean,int,int,int,int) -> onLayout
    211:213:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    243:248:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    261:265:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    224:228:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    97:99:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    89:91:void setBackgroundResource(int) -> setBackgroundResource
    376:377:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    112:113:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    140:141:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    387:388:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    409:410:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    172:174:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    200:204:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    66:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:82:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    229:234:void drawableStateChanged() -> drawableStateChanged
    100:102:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    179:180:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    207:208:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    213:215:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    221:223:void setBackgroundResource(int) -> setBackgroundResource
    87:89:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    95:95:void setButtonDrawable(int) -> setButtonDrawable
    164:165:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    192:193:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    113:114:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    138:139:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    58:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    87:89:void drawableStateChanged() -> drawableStateChanged
    95:95:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    74:74:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    105:106:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    79:81:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    39:47:void <init>(android.widget.CompoundButton) -> <init>
    127:143:void applyButtonTint() -> applyButtonTint
    148:153:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    51:91:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    117:123:void onSetButtonDrawable() -> onSetButtonDrawable
    95:98:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    106:109:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    54:54:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:android.graphics.PorterDuff$Mode access$000() -> access$000
    466:469:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    475:475:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    480:480:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    507:507:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    498:498:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    484:485:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    59:460:void preload() -> preload
    502:502:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    62:128:void <init>() -> <init>
    360:360:boolean arrayContains(int[],int) -> arrayContains
    143:143:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    158:181:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    148:149:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    136:137:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    234:251:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    189:228:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    260:308:android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> getRatingBarLayerDrawable
    372:394:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    452:453:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    313:316:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    323:353:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    402:435:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    97:97:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    102:117:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    257:257:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener buildOnCommitContentListener(android.view.View) -> buildOnCommitContentListener
    208:213:void drawableStateChanged() -> drawableStateChanged
    174:175:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    202:203:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    82:82:java.lang.CharSequence getText() -> getText
    126:131:android.text.Editable getText() -> getText
    315:318:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    234:242:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    323:326:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
    371:371:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
    337:350:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    144:146:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    136:138:void setBackgroundResource(int) -> setBackgroundResource
    287:288:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    159:160:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    187:188:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    219:221:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    297:301:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatEditText$1 -> androidx.appcompat.widget.AppCompatEditText$1:
    257:257:void <init>(android.view.View) -> <init>
    263:276:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> onCommitContent
androidx.appcompat.widget.AppCompatEditor -> androidx.appcompat.widget.AppCompatEditor:
    44:45:void <init>(android.widget.TextView) -> <init>
    69:74:android.app.Activity getActivity() -> getActivity
    49:64:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
androidx.appcompat.widget.AppCompatEditor$Api24Impl -> androidx.appcompat.widget.AppCompatEditor$Api24Impl:
    85:96:boolean onDrop(android.view.DragEvent,android.widget.TextView,android.app.Activity) -> onDrop
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    28:37:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    70:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    245:250:void drawableStateChanged() -> drawableStateChanged
    156:157:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    184:185:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    211:212:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    239:240:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    256:256:boolean hasOverlappingRendering() -> hasOverlappingRendering
    126:128:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    118:120:void setBackgroundResource(int) -> setBackgroundResource
    102:104:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    94:96:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    89:89:void setImageResource(int) -> setImageResource
    110:112:void setImageURI(android.net.Uri) -> setImageURI
    141:142:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    169:170:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    196:197:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    224:225:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    47:48:void <init>(android.widget.ImageView) -> <init>
    200:218:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    141:159:void applySupportImageTint() -> applySupportImageTint
    123:123:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    137:137:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    103:104:boolean hasOverlappingRendering() -> hasOverlappingRendering
    52:85:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    90:99:void setImageResource(int) -> setImageResource
    114:119:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    127:133:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    178:182:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    65:65:void <init>(android.content.Context) -> <init>
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:82:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    256:261:void drawableStateChanged() -> drawableStateChanged
    166:167:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    194:195:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    222:223:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    250:251:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    267:267:boolean hasOverlappingRendering() -> hasOverlappingRendering
    136:138:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    128:130:void setBackgroundResource(int) -> setBackgroundResource
    112:114:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    104:106:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    96:98:void setImageResource(int) -> setImageResource
    120:122:void setImageURI(android.net.Uri) -> setImageURI
    151:152:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    179:180:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    207:208:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    235:236:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    56:56:void <clinit>() -> <clinit>
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:90:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    172:177:void drawableStateChanged() -> drawableStateChanged
    138:139:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    166:167:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    191:191:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    108:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    100:102:void setBackgroundResource(int) -> setBackgroundResource
    95:95:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    123:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    151:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    183:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:59:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:93:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:68:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:77:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:86:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:48:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTile() -> getSampleTile
    52:65:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:109:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:133:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    228:233:void drawableStateChanged() -> drawableStateChanged
    98:100:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    178:179:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    206:207:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    212:214:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    220:222:void setBackgroundResource(int) -> setBackgroundResource
    85:87:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    93:93:void setButtonDrawable(int) -> setButtonDrawable
    163:164:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    191:192:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    111:112:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    136:137:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:69:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:67:void drawableStateChanged() -> drawableStateChanged
    72:73:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    60:62:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    36:43:void <init>(android.widget.SeekBar) -> <init>
    128:142:void applyTickMarkTint() -> applyTickMarkTint
    165:182:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    154:157:void drawableStateChanged() -> drawableStateChanged
    148:149:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:76:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    80:95:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    79:79:void <clinit>() -> <clinit>
    144:144:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    160:160:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    180:180:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    106:301:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    566:595:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    551:553:void drawableStateChanged() -> drawableStateChanged
    373:376:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    347:350:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    392:395:int getDropDownWidth() -> getDropDownWidth
    603:603:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    328:331:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    309:309:android.content.Context getPopupContext() -> getPopupContext
    472:472:java.lang.CharSequence getPrompt() -> getPrompt
    516:517:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    545:546:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    419:422:void onDetachedFromWindow() -> onDetachedFromWindow
    436:443:void onMeasure(int,int) -> onMeasure
    625:648:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    617:619:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    428:431:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    449:458:boolean performClick() -> performClick
    77:77:void setAdapter(android.widget.Adapter) -> setAdapter
    404:413:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    485:487:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    477:479:void setBackgroundResource(int) -> setBackgroundResource
    357:361:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    338:341:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    383:386:void setDropDownWidth(int) -> setDropDownWidth
    314:317:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    323:323:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    463:466:void setPrompt(java.lang.CharSequence) -> setPrompt
    501:502:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    530:531:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    607:610:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    264:264:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    267:267:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    273:274:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    632:632:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    635:643:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    858:858:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    866:868:void dismiss() -> dismiss
    889:889:java.lang.CharSequence getHintText() -> getHintText
    874:874:boolean isShowing() -> isShowing
    913:917:void onClick(android.content.DialogInterface,int) -> onClick
    879:879:void setAdapter(android.widget.ListAdapter) -> setAdapter
    922:922:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    932:932:void setHorizontalOffset(int) -> setHorizontalOffset
    952:952:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    884:884:void setPromptText(java.lang.CharSequence) -> setPromptText
    927:927:void setVerticalOffset(int) -> setVerticalOffset
    894:908:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    703:721:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    778:780:boolean areAllItemsEnabled() -> areAllItemsEnabled
    729:729:int getCount() -> getCount
    749:750:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    734:734:java.lang.Object getItem(int) -> getItem
    739:739:long getItemId(int) -> getItemId
    744:744:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    755:755:boolean hasStableIds() -> hasStableIds
    812:812:boolean isEmpty() -> isEmpty
    792:794:boolean isEnabled(int) -> isEnabled
    760:761:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    767:768:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    965:975:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    962:962:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    1006:1040:void computeContentWidth() -> computeContentWidth
    996:996:java.lang.CharSequence getHintText() -> getHintText
    1112:1112:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1102:1102:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    990:991:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1107:1107:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    1002:1002:void setPromptText(java.lang.CharSequence) -> setPromptText
    1045:1086:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    975:975:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    978:983:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1071:1071:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1074:1081:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1086:1086:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1089:1091:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    671:671:void <clinit>() -> <clinit>
    657:657:void <init>(android.os.Parcelable) -> <init>
    661:662:void <init>(android.os.Parcel) -> <init>
    667:668:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    672:672:void <init>() -> <init>
    672:672:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    675:675:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    672:672:java.lang.Object[] newArray(int) -> newArray
    680:680:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    42:43:void <init>(android.widget.TextView) -> <init>
    62:68:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    51:51:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    73:80:void <init>(android.widget.TextView) -> <init>
    542:542:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    523:535:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    579:579:void autoSizeText() -> autoSizeText
    548:552:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    624:624:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    620:620:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    616:616:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    628:628:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    612:612:int getAutoSizeTextType() -> getAutoSizeTextType
    585:585:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    85:337:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    437:450:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    561:562:void onLayout(boolean,int,int,int,int) -> onLayout
    519:519:void onSetCompoundDrawables() -> onSetCompoundDrawables
    457:510:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    722:723:void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> populateSurroundingTextIfNeeded
    515:515:void setAllCaps(boolean) -> setAllCaps
    601:601:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    607:607:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    593:593:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    637:642:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    651:656:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    672:701:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    660:665:void setCompoundTints() -> setCompoundTints
    569:571:void setTextSize(int,float) -> setTextSize
    589:589:void setTextSizeInternal(int,float) -> setTextSizeInternal
    342:429:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
    362:362:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    365:371:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$2 -> androidx.appcompat.widget.AppCompatTextHelper$2:
    443:443:void <init>(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int) -> <init>
    446:446:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    93:93:void <init>(android.content.Context) -> <init>
    97:97:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:113:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    488:492:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    198:203:void drawableStateChanged() -> drawableStateChanged
    370:374:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    351:355:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    332:336:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    389:393:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    311:317:int getAutoSizeTextType() -> getAutoSizeTextType
    428:428:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    433:433:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    156:157:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    184:185:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    501:502:java.lang.CharSequence getText() -> getText
    529:532:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    401:403:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    209:211:void onLayout(boolean,int,int,int,int) -> onLayout
    556:557:void onMeasure(int,int) -> onMeasure
    228:230:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    268:273:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    290:294:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    245:249:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    126:128:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    118:120:void setBackgroundResource(int) -> setBackgroundResource
    563:565:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    573:575:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    605:607:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    615:622:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    582:584:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    590:597:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    447:448:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    408:411:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    418:421:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    438:438:void setLineHeight(int) -> setLineHeight
    141:142:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    169:170:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    663:664:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    703:704:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    190:192:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    511:515:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    217:221:void setTextSize(int,float) -> setTextSize
    709:726:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    64:79:void <clinit>() -> <clinit>
    87:160:void <init>(android.widget.TextView) -> <init>
    864:871:java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> accessAndReturnWithDefault
    603:636:void autoSizeText() -> autoSizeText
    510:532:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    640:645:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    734:739:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    779:799:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    822:829:android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre16
    805:811:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    697:717:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    467:467:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    451:451:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    435:435:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    480:480:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    421:421:int getAutoSizeTextType() -> getAutoSizeTextType
    899:910:java.lang.reflect.Field getTextViewField(java.lang.String) -> getTextViewField
    879:891:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    722:728:void initTempTextPaint(int) -> initTempTextPaint
    846:855:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    923:923:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    169:241:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    328:341:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    371:398:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    261:287:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    659:687:void setRawTextSize(float) -> setRawTextSize
    651:655:void setTextSizeInternal(int,float) -> setTextSizeInternal
    573:593:boolean setupAutoSizeText() -> setupAutoSizeText
    484:492:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    497:503:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    744:768:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    932:932:boolean supportsAutoSizeText() -> supportsAutoSizeText
    549:569:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl:
    112:112:void <init>() -> <init>
    115:115:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23:
    124:124:void <init>() -> <init>
    129:132:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29:
    138:138:void <init>() -> <init>
    148:148:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    142:142:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    60:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:73:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    150:155:void drawableStateChanged() -> drawableStateChanged
    116:117:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    144:145:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    86:88:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    78:80:void setBackgroundResource(int) -> setBackgroundResource
    101:102:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    129:130:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    47:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:154:int getMinimumHeight() -> getMinimumHeight
    144:145:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    175:175:boolean isStacked() -> isStacked
    72:139:void onMeasure(int,int) -> onMeasure
    158:170:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    60:60:void <init>(android.content.Context) -> <init>
    64:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    78:78:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    197:198:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    202:203:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    187:188:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    192:193:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    177:178:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    182:183:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    208:210:void onAttachedToWindow() -> onAttachedToWindow
    216:218:void onDetachedFromWindow() -> onDetachedFromWindow
    101:172:void onMeasure(int,int) -> onMeasure
    82:82:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    93:95:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    42:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:50:void <init>(android.content.Context) -> <init>
    55:78:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    45:59:void <clinit>() -> <clinit>
    142:173:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    131:133:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    184:193:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    73:122:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    201:206:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    50:127:void <init>(android.content.Context,boolean) -> <init>
    629:641:void clearPressedItem() -> clearPressedItem
    541:542:void clickPressedItem(android.view.View,int) -> clickPressedItem
    201:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    564:568:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    187:194:void drawableStateChanged() -> drawableStateChanged
    165:165:boolean hasFocus() -> hasFocus
    145:145:boolean hasWindowFocus() -> hasWindowFocus
    155:155:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    291:348:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    470:471:void onDetachedFromWindow() -> onDetachedFromWindow
    484:530:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    429:462:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:218:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:624:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    585:598:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    574:578:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    553:553:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:689:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    170:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    372:373:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    557:559:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    381:382:void <init>(android.graphics.drawable.Drawable) -> <init>
    399:400:void draw(android.graphics.Canvas) -> draw
    386:386:void setEnabled(boolean) -> setEnabled
    406:407:void setHotspot(float,float) -> setHotspot
    413:414:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    391:392:boolean setState(int[]) -> setState
    420:421:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:700:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:712:void cancel() -> cancel
    716:716:void post() -> post
    706:707:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:48:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:48:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    66:77:void <init>(android.view.View) -> <init>
    216:221:void clearCallbacks() -> clearCallbacks
    156:158:boolean onForwardingStopped() -> onForwardingStopped
    226:248:void onLongPress() -> onLongPress
    94:111:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:280:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:208:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    121:125:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    289:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:311:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:300:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:316:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:323:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:329:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:334:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    151:151:void <init>(android.content.Context) -> <init>
    155:155:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    102:194:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1761:1761:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    332:368:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    305:327:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    373:375:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    379:381:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1327:1342:void forceUniformHeight(int,int) -> forceUniformHeight
    905:920:void forceUniformWidth(int,int) -> forceUniformWidth
    59:59:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1744:1747:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    59:59:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    59:59:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1731:1731:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1754:1754:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    433:481:int getBaseline() -> getBaseline
    231:231:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    288:288:int getDividerWidth() -> getDividerWidth
    1710:1710:int getGravity() -> getGravity
    515:515:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    528:528:int getVirtualChildCount() -> getVirtualChildCount
    577:583:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1531:1649:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1436:1513:void layoutVertical(int,int,int,int) -> layoutVertical
    1387:1387:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    938:1319:void measureHorizontal(int,int) -> measureHorizontal
    605:899:void measureVertical(int,int) -> measureVertical
    293:300:void onDraw(android.graphics.Canvas) -> onDraw
    1766:1767:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1772:1773:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1416:1419:void onLayout(boolean,int,int,int,int) -> onLayout
    560:563:void onMeasure(int,int) -> onMeasure
    402:402:void setBaselineAligned(boolean) -> setBaselineAligned
    1655:1655:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    242:254:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    1689:1699:void setGravity(int) -> setGravity
    1664:1666:void setOrientation(int) -> setOrientation
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1785:1785:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1792:1792:void <init>(int,int) -> <init>
    1813:1813:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:105:void <clinit>() -> <clinit>
    248:248:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    115:277:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1158:1325:int buildDropDown() -> buildDropDown
    846:851:void clearListSelection() -> clearListSelection
    950:950:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    772:776:void dismiss() -> dismiss
    460:460:android.view.View getAnchorView() -> getAnchorView
    423:423:android.graphics.drawable.Drawable getBackground() -> getBackground
    477:477:int getHorizontalOffset() -> getHorizontalOffset
    946:946:android.widget.ListView getListView() -> getListView
    1445:1457:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    493:496:int getVerticalOffset() -> getVerticalOffset
    545:545:int getWidth() -> getWidth
    868:868:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    345:345:boolean isModal() -> isModal
    860:860:boolean isShowing() -> isShowing
    789:793:void removePromptView() -> removePromptView
    287:298:void setAdapter(android.widget.ListAdapter) -> setAdapter
    470:470:void setAnchorView(android.view.View) -> setAnchorView
    441:441:void setAnimationStyle(int) -> setAnimationStyle
    432:432:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    565:570:void setContentWidth(int) -> setContentWidth
    538:538:void setDropDownGravity(int) -> setDropDownGravity
    517:517:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    486:486:void setHorizontalOffset(int) -> setHorizontalOffset
    811:811:void setInputMethodMode(int) -> setInputMethodMode
    335:336:void setModal(boolean) -> setModal
    785:785:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    619:619:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1338:1339:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1431:1440:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    312:312:void setPromptPosition(int) -> setPromptPosition
    830:836:void setSelection(int) -> setSelection
    505:506:void setVerticalOffset(int) -> setVerticalOffset
    555:555:void setWidth(int) -> setWidth
    663:762:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1167:1167:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1171:1173:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1186:1186:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1192:1195:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1361:1361:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1366:1366:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1343:1343:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1348:1350:void onChanged() -> onChanged
    1356:1356:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1407:1407:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1418:1421:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1386:1386:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1391:1400:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1371:1371:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1376:1380:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    61:66:void <clinit>() -> <clinit>
    74:74:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    80:81:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    122:123:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    130:131:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    86:87:void setEnterTransition(java.lang.Object) -> setEnterTransition
    92:93:void setExitTransition(java.lang.Object) -> setExitTransition
    98:98:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    106:115:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    147:157:void <init>(android.content.Context,boolean) -> <init>
    138:138:boolean hasFocus() -> hasFocus
    138:138:boolean hasWindowFocus() -> hasWindowFocus
    138:138:boolean isFocused() -> isFocused
    138:138:boolean isInTouchMode() -> isInTouchMode
    138:138:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    138:138:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    201:242:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    171:195:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    138:138:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    162:162:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    138:138:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    85:115:void <clinit>() -> <clinit>
    61:121:void <init>() -> <init>
    370:373:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> addDelegate
    339:349:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    405:413:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    485:495:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    170:170:long createCacheKey(android.util.TypedValue) -> createCacheKey
    175:195:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    466:467:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    96:100:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    318:334:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    135:135:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    140:158:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    473:481:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    382:392:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    396:398:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    377:377:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    107:111:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    501:502:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    232:308:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    162:167:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    354:361:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    131:132:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    203:221:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    439:457:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    366:366:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate:
    539:539:void <init>() -> <init>
    545:547:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate:
    523:523:void <init>() -> <init>
    531:533:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    419:419:void <init>(int) -> <init>
    433:433:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    423:423:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    427:427:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate -> androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate:
    553:553:void <init>() -> <init>
    557:571:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate:
    506:506:void <init>() -> <init>
    514:516:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:49:void <init>(android.content.res.Resources) -> <init>
    188:188:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    173:173:boolean getBoolean(int) -> getBoolean
    162:162:int getColor(int) -> getColor
    168:168:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    251:251:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    246:246:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    131:131:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    137:137:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    144:144:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    150:150:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    256:256:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    178:178:int getInteger(int) -> getInteger
    183:183:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    156:156:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    276:276:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    261:261:java.lang.String getResourceName(int) -> getResourceName
    266:266:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    271:271:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    214:214:void getValue(int,android.util.TypedValue,boolean) -> getValue
    227:227:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    221:221:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    193:193:android.content.res.XmlResourceParser getXml(int) -> getXml
    232:232:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    198:198:java.io.InputStream openRawResource(int) -> openRawResource
    203:203:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    208:208:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    288:288:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    282:282:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    238:240:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    47:47:int getStart() -> getStart
    68:70:void setAbsolute(int,int) -> setAbsolute
    74:88:void setDirection(boolean) -> setDirection
    55:63:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    176:176:void <clinit>() -> <clinit>
    267:267:void <init>(android.content.Context) -> <init>
    271:271:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    131:1713:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1364:1383:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    497:501:void clearFocus() -> clearFocus
    1537:1559:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1582:1635:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1567:1570:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1202:1202:void dismissSuggestions() -> dismissSuggestions
    1697:1701:void forceSuggestionQuery() -> forceSuggestionQuery
    851:855:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1088:1097:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    864:865:int getPreferredHeight() -> getPreferredHeight
    859:860:int getPreferredWidth() -> getPreferredWidth
    619:624:java.lang.CharSequence getQueryHint() -> getQueryHint
    683:683:boolean isIconified() -> isIconified
    1706:1706:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    910:910:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1517:1518:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1477:1477:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1279:1283:void onActionViewCollapsed() -> onActionViewCollapsed
    1291:1297:void onActionViewExpanded() -> onActionViewExpanded
    1206:1220:void onCloseClicked() -> onCloseClicked
    964:966:void onDetachedFromWindow() -> onDetachedFromWindow
    1388:1392:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1399:1401:boolean onItemSelected(int) -> onItemSelected
    832:845:void onLayout(boolean,int,int,int,int) -> onLayout
    783:827:void onMeasure(int,int) -> onMeasure
    1353:1360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1345:1347:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1226:1230:void onSearchClicked() -> onSearchClicked
    1188:1196:void onSubmitQuery() -> onSubmitQuery
    1174:1184:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1258:1263:void onTextFocusChanged() -> onTextFocusChanged
    1236:1253:void onVoiceClicked() -> onVoiceClicked
    1269:1271:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    945:945:void postUpdateFocusedState() -> postUpdateFocusedState
    480:491:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1444:1445:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    670:672:void setIconified(boolean) -> setIconified
    642:645:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    441:441:void setImeOptions(int) -> setImeOptions
    464:464:void setInputType(int) -> setInputType
    764:766:void setMaxWidth(int) -> setMaxWidth
    571:579:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    933:940:void updateCloseButton() -> updateCloseButton
    949:959:void updateFocusedState() -> updateFocusedState
    1102:1103:void updateQueryHint() -> updateQueryHint
    924:929:void updateSubmitArea() -> updateSubmitArea
    915:919:void updateSubmitButton(boolean) -> updateSubmitButton
    869:889:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1154:1158:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    178:178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    181:181:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1713:1713:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1720:1720:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    185:185:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    188:188:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    331:331:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    334:335:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    376:376:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    380:380:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    976:976:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    979:988:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    998:998:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1002:1027:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1161:1161:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1168:1168:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1407:1407:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1415:1415:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1419:1419:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1427:1427:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector:
    2037:2063:void <init>() -> <init>
    2080:2083:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2070:2073:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2090:2093:void ensureImeVisible(android.widget.AutoCompleteTextView) -> ensureImeVisible
    2100:2101:void preApi29Check() -> preApi29Check
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1325:1325:void <clinit>() -> <clinit>
    1304:1304:void <init>(android.os.Parcelable) -> <init>
    1308:1309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1320:1321:java.lang.String toString() -> toString
    1314:1315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1325:1325:void <init>() -> <init>
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1328:1328:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object[] newArray(int) -> newArray
    1338:1338:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1842:1842:void <init>(android.content.Context) -> <init>
    1846:1846:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1834:1851:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1931:1931:boolean enoughToFilter() -> enoughToFilter
    2025:2031:void ensureImeVisible() -> ensureImeVisible
    1964:1968:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1876:1876:boolean isEmpty() -> isEmpty
    1983:1986:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1856:1859:void onFinishInflate() -> onFinishInflate
    1921:1922:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1939:1957:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1903:1914:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    2002:2021:void setImeVisibility(boolean) -> setImeVisibility
    1863:1863:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1868:1869:void setThreshold(int) -> setThreshold
    1992:1996:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1834:1834:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1837:1837:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1760:1766:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1778:1817:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1770:1773:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    116:199:void <clinit>() -> <clinit>
    209:209:void <init>(android.content.Context) -> <init>
    220:220:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    130:315:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1060:1065:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    719:733:void applyThumbTint() -> applyThumbTint
    596:610:void applyTrackTint() -> applyTrackTint
    1069:1070:void cancelPositionAnimator() -> cancelPositionAnimator
    1019:1022:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1174:1234:void draw(android.graphics.Canvas) -> draw
    1394:1403:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1372:1388:void drawableStateChanged() -> drawableStateChanged
    1304:1309:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1316:1321:int getCompoundPaddingRight() -> getCompoundPaddingRight
    1075:1075:boolean getTargetCheckedState() -> getTargetCheckedState
    1334:1339:int getThumbOffset() -> getThumbOffset
    1343:1354:int getThumbScrollRange() -> getThumbScrollRange
    923:935:boolean hitThumb(float,float) -> hitThumb
    1414:1426:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    909:915:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1363:1365:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1239:1299:void onDraw(android.graphics.Canvas) -> onDraw
    1432:1433:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1438:1449:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1118:1169:void onLayout(boolean,int,int,int,int) -> onLayout
    832:894:void onMeasure(int,int) -> onMeasure
    900:904:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    941:1015:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1095:1112:void setChecked(boolean) -> setChecked
    1461:1462:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    1482:1485:void setOffStateDescriptionOnRAndAbove() -> setOffStateDescriptionOnRAndAbove
    1473:1476:void setOnStateDescriptionOnRAndAbove() -> setOnStateDescriptionOnRAndAbove
    325:360:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    391:405:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    417:422:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    367:379:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    800:805:void setTextOff(java.lang.CharSequence) -> setTextOff
    776:781:void setTextOn(java.lang.CharSequence) -> setTextOn
    1084:1085:void setThumbPosition(float) -> setThumbPosition
    1031:1055:void stopDrag(android.view.MotionEvent) -> stopDrag
    1090:1090:void toggle() -> toggle
    1409:1409:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    117:117:void <init>(java.lang.Class,java.lang.String) -> <init>
    117:117:java.lang.Object get(java.lang.Object) -> get
    120:120:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    117:117:void set(java.lang.Object,java.lang.Object) -> set
    125:125:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    41:53:void <clinit>() -> <clinit>
    162:175:void checkAppCompatTheme(android.view.View,android.content.Context) -> checkAppCompatTheme
    126:138:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    91:97:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    152:154:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    109:115:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    143:146:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:102:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:116:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:72:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:38:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:36:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:49:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:69:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    158:158:boolean getBoolean(int,boolean) -> getBoolean
    170:170:int getColor(int,int) -> getColor
    174:184:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    196:196:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    200:200:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    80:86:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    90:93:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    166:166:float getFloat(int,float) -> getFloat
    119:126:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    162:162:int getInt(int,int) -> getInt
    188:188:int getInteger(int,int) -> getInteger
    208:208:int getLayoutDimension(int,int) -> getLayoutDimension
    216:216:int getResourceId(int,int) -> getResourceId
    150:150:java.lang.String getString(int) -> getString
    146:146:java.lang.CharSequence getText(int) -> getText
    220:220:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    76:76:android.content.res.TypedArray getWrappedTypeArray() -> getWrappedTypeArray
    240:240:boolean hasValue(int) -> hasValue
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    252:252:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    229:229:void <init>(android.content.Context) -> <init>
    233:233:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    182:353:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2250:2255:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2142:2164:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1513:1528:void addSystemView(android.view.View,boolean) -> addSystemView
    518:518:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2224:2224:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    726:729:void collapseActionView() -> collapseActionView
    596:597:void dismissPopupMenus() -> dismissPopupMenus
    1494:1503:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2287:2288:void ensureContentInsets() -> ensureContentInsets
    696:697:void ensureLogoView() -> ensureLogoView
    1155:1163:void ensureMenu() -> ensureMenu
    1168:1176:void ensureMenuView() -> ensureMenuView
    1484:1489:void ensureNavButtonView() -> ensureNavButtonView
    146:146:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2219:2219:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    146:146:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    146:146:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2201:2201:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2206:2213:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2171:2172:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2091:2115:int getChildTop(android.view.View,int) -> getChildTop
    2130:2130:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1269:1269:int getContentInsetEnd() -> getContentInsetEnd
    1249:1249:int getContentInsetStart() -> getContentInsetStart
    1444:1450:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1463:1465:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1478:1480:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1429:1431:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2189:2191:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    1129:1130:android.view.Menu getMenu() -> getMenu
    1181:1181:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    918:918:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1010:1010:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    795:795:java.lang.CharSequence getSubtitle() -> getSubtitle
    739:739:java.lang.CharSequence getTitle() -> getTitle
    2195:2196:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2046:2059:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2230:2233:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    712:712:boolean hasExpandedActionView() -> hasExpandedActionView
    552:552:boolean hideOverflowMenu() -> hideOverflowMenu
    1194:1194:void inflateMenu(int) -> inflateMenu
    2259:2259:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    534:534:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    528:528:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2066:2073:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2079:2086:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1655:1672:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1630:1646:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1574:1575:void onDetachedFromWindow() -> onDetachedFromWindow
    1609:1622:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1828:2042:void onLayout(boolean,int,int,int,int) -> onLayout
    1698:1823:void onMeasure(int,int) -> onMeasure
    1546:1563:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    494:499:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1534:1540:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1585:1598:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1568:1569:void postShowOverflowMenu() -> postShowOverflowMenu
    2237:2244:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    2269:2270:void setCollapsible(boolean) -> setCollapsible
    1228:1229:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    633:642:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    678:682:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    558:589:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    932:932:void setNavigationContentDescription(int) -> setNavigationContentDescription
    946:950:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    988:997:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1023:1024:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    364:369:void setPopupTheme(int) -> setPopupTheme
    817:840:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    859:861:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    901:903:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    763:786:void setTitle(java.lang.CharSequence) -> setTitle
    848:850:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    880:882:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1679:1685:boolean shouldCollapse() -> shouldCollapse
    2185:2185:boolean shouldLayout(android.view.View) -> shouldLayout
    543:543:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    204:204:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    207:208:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    222:222:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    224:224:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1503:1503:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1506:1506:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2446:2446:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2544:2555:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2507:2534:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2452:2455:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2466:2482:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2350:2353:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2350:2358:void <init>(int,int) -> <init>
    2350:2373:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2350:2377:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2350:2384:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2350:2388:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2392:2395:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2424:2424:void <clinit>() -> <clinit>
    2408:2410:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2414:2414:void <init>(android.os.Parcelable) -> <init>
    2419:2421:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2424:2424:void <init>() -> <init>
    2424:2424:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2424:2424:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2427:2427:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2432:2432:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2424:2424:java.lang.Object[] newArray(int) -> newArray
    2437:2437:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:96:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:182:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:232:void collapseActionView() -> collapseActionView
    208:210:int detectDisplayOptions() -> detectDisplayOptions
    375:375:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    380:380:int getDisplayOptions() -> getDisplayOptions
    458:458:int getNavigationMode() -> getNavigationMode
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:286:void initIndeterminateProgress() -> initIndeterminateProgress
    281:281:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    448:448:void setCollapsible(boolean) -> setCollapsible
    540:545:void setCustomView(android.view.View) -> setCustomView
    196:201:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    385:414:void setDisplayOptions(int) -> setDisplayOptions
    422:425:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    306:307:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    317:318:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:370:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    360:360:void setMenuPrepared() -> setMenuPrepared
    620:621:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:626:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:594:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    273:275:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:256:void setTitle(java.lang.CharSequence) -> setTitle
    260:262:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:661:void setVisibility(int) -> setVisibility
    237:237:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:244:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:634:void updateHomeAccessibility() -> updateHomeAccessibility
    611:614:void updateNavigationIcon() -> updateNavigationIcon
    323:330:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:188:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:586:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:580:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:574:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    41:44:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    54:116:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:224:void cancelPendingShow() -> cancelPendingShow
    250:251:void clearAnchorPos() -> clearAnchorPos
    192:206:void hide() -> hide
    129:145:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:123:boolean onLongClick(android.view.View) -> onLongClick
    159:159:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:220:void scheduleShow() -> scheduleShow
    210:215:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:104:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:188:void show(boolean) -> show
    235:242:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:57:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:63:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    54:72:void <init>(android.content.Context) -> <init>
    105:182:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    188:203:android.view.View getAppRootView(android.view.View) -> getAppRootView
    91:96:void hide() -> hide
    100:100:boolean isShowing() -> isShowing
    78:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    56:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    68:72:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    96:96:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    78:78:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    55:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    198:237:android.view.View inflate() -> inflate
    151:151:void onMeasure(int,int) -> onMeasure
    139:139:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    175:185:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:50:void <clinit>() -> <clinit>
    66:70:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:94:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:45:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:53:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> createAsync
    59:59:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:72:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:49:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    76:77:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    67:67:boolean contains(java.lang.Object) -> contains
    42:42:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    47:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    57:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    151:152:java.util.Iterator descendingIterator() -> descendingIterator
    170:170:java.util.Map$Entry eldest() -> eldest
    185:202:boolean equals(java.lang.Object) -> equals
    47:52:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    208:210:int hashCode() -> hashCode
    141:142:java.util.Iterator iterator() -> iterator
    161:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    177:177:java.util.Map$Entry newest() -> newest
    76:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    67:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    99:124:java.lang.Object remove(java.lang.Object) -> remove
    131:131:int size() -> size
    217:227:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    284:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    294:294:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    289:289:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    301:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    311:311:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    306:306:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    368:370:void <init>(java.lang.Object,java.lang.Object) -> <init>
    401:405:boolean equals(java.lang.Object) -> equals
    376:376:java.lang.Object getKey() -> getKey
    382:382:java.lang.Object getValue() -> getValue
    410:410:int hashCode() -> hashCode
    387:387:java.lang.Object setValue(java.lang.Object) -> setValue
    392:392:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    322:324:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    338:341:boolean hasNext() -> hasNext
    318:318:java.lang.Object next() -> next
    346:352:java.util.Map$Entry next() -> next
    330:332:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    235:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    242:242:boolean hasNext() -> hasNext
    230:230:java.lang.Object next() -> next
    272:273:java.util.Map$Entry next() -> next
    264:267:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    248:258:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> androidx.arch.core.internal.SafeIterableMap$SupportRemove:
    356:356:void <init>() -> <init>
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    62:62:void <init>() -> <init>
    69:69:void <init>(int) -> <init>
    87:88:boolean containsAll(java.util.Collection) -> containsAll
    152:154:java.util.Set entrySet() -> entrySet
    640:644:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    169:171:java.util.Set keySet() -> keySet
    101:103:void putAll(java.util.Map) -> putAll
    113:117:boolean removeAll(java.util.Collection) -> removeAll
    127:133:boolean retainAll(java.util.Collection) -> retainAll
    621:631:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    186:188:java.util.Collection values() -> values
androidx.collection.ArrayMap$EntrySet -> androidx.collection.ArrayMap$EntrySet:
    193:193:void <init>(androidx.collection.ArrayMap) -> <init>
    193:193:boolean add(java.lang.Object) -> add
    197:197:boolean add(java.util.Map$Entry) -> add
    202:206:boolean addAll(java.util.Collection) -> addAll
    211:211:void clear() -> clear
    216:224:boolean contains(java.lang.Object) -> contains
    229:230:boolean containsAll(java.util.Collection) -> containsAll
    282:282:boolean equals(java.lang.Object) -> equals
    288:292:int hashCode() -> hashCode
    239:239:boolean isEmpty() -> isEmpty
    244:244:java.util.Iterator iterator() -> iterator
    250:250:boolean remove(java.lang.Object) -> remove
    256:256:boolean removeAll(java.util.Collection) -> removeAll
    262:262:boolean retainAll(java.util.Collection) -> retainAll
    267:267:int size() -> size
    272:272:java.lang.Object[] toArray() -> toArray
    277:277:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$KeyIterator -> androidx.collection.ArrayMap$KeyIterator:
    495:496:void <init>(androidx.collection.ArrayMap) -> <init>
    501:501:java.lang.Object elementAt(int) -> elementAt
    506:506:void removeAt(int) -> removeAt
androidx.collection.ArrayMap$KeySet -> androidx.collection.ArrayMap$KeySet:
    298:298:void <init>(androidx.collection.ArrayMap) -> <init>
    301:301:boolean add(java.lang.Object) -> add
    306:306:boolean addAll(java.util.Collection) -> addAll
    311:311:void clear() -> clear
    316:316:boolean contains(java.lang.Object) -> contains
    321:321:boolean containsAll(java.util.Collection) -> containsAll
    376:376:boolean equals(java.lang.Object) -> equals
    382:384:int hashCode() -> hashCode
    326:326:boolean isEmpty() -> isEmpty
    331:331:java.util.Iterator iterator() -> iterator
    336:338:boolean remove(java.lang.Object) -> remove
    346:346:boolean removeAll(java.util.Collection) -> removeAll
    351:351:boolean retainAll(java.util.Collection) -> retainAll
    356:356:int size() -> size
    361:364:java.lang.Object[] toArray() -> toArray
    371:371:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$MapIterator -> androidx.collection.ArrayMap$MapIterator:
    531:533:void <init>(androidx.collection.ArrayMap) -> <init>
    589:598:boolean equals(java.lang.Object) -> equals
    562:566:java.lang.Object getKey() -> getKey
    571:575:java.lang.Object getValue() -> getValue
    538:538:boolean hasNext() -> hasNext
    603:610:int hashCode() -> hashCode
    526:526:java.lang.Object next() -> next
    543:545:java.util.Map$Entry next() -> next
    551:557:void remove() -> remove
    580:584:java.lang.Object setValue(java.lang.Object) -> setValue
    615:615:java.lang.String toString() -> toString
androidx.collection.ArrayMap$ValueCollection -> androidx.collection.ArrayMap$ValueCollection:
    390:390:void <init>(androidx.collection.ArrayMap) -> <init>
    393:393:boolean add(java.lang.Object) -> add
    398:398:boolean addAll(java.util.Collection) -> addAll
    403:403:void clear() -> clear
    408:408:boolean contains(java.lang.Object) -> contains
    413:414:boolean containsAll(java.util.Collection) -> containsAll
    423:423:boolean isEmpty() -> isEmpty
    428:428:java.util.Iterator iterator() -> iterator
    433:435:boolean remove(java.lang.Object) -> remove
    443:448:boolean removeAll(java.util.Collection) -> removeAll
    459:464:boolean retainAll(java.util.Collection) -> retainAll
    475:475:int size() -> size
    480:483:java.lang.Object[] toArray() -> toArray
    490:490:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.ArrayMap$ValueIterator -> androidx.collection.ArrayMap$ValueIterator:
    511:512:void <init>(androidx.collection.ArrayMap) -> <init>
    517:517:java.lang.Object elementAt(int) -> elementAt
    522:522:void removeAt(int) -> removeAt
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    78:79:void <clinit>() -> <clinit>
    279:279:void <init>() -> <init>
    286:293:void <init>(int) -> <init>
    416:469:boolean add(java.lang.Object) -> add
    752:755:boolean addAll(java.util.Collection) -> addAll
    174:230:void allocArrays(int) -> allocArrays
    89:91:int binarySearch(int) -> binarySearch
    333:343:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    738:739:boolean containsAll(java.util.Collection) -> containsAll
    352:364:void ensureCapacity(int) -> ensureCapacity
    636:645:boolean equals(java.lang.Object) -> equals
    239:270:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    664:667:int hashCode() -> hashCode
    96:123:int indexOf(java.lang.Object,int) -> indexOf
    386:386:int indexOf(java.lang.Object) -> indexOf
    134:161:int indexOfNull() -> indexOfNull
    404:404:boolean isEmpty() -> isEmpty
    711:711:java.util.Iterator iterator() -> iterator
    504:506:boolean remove(java.lang.Object) -> remove
    768:769:boolean removeAll(java.util.Collection) -> removeAll
    519:566:java.lang.Object removeAt(int) -> removeAt
    783:785:boolean retainAll(java.util.Collection) -> retainAll
    596:596:int size() -> size
    602:603:java.lang.Object[] toArray() -> toArray
    610:617:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    681:699:java.lang.String toString() -> toString
    396:396:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$ElementIterator -> androidx.collection.ArraySet$ElementIterator:
    715:716:void <init>(androidx.collection.ArraySet) -> <init>
    721:721:java.lang.Object elementAt(int) -> elementAt
    726:726:void removeAt(int) -> removeAt
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.IndexBasedArrayIterator -> androidx.collection.IndexBasedArrayIterator:
    27:28:void <init>(int) -> <init>
    36:36:boolean hasNext() -> hasNext
    41:44:java.lang.Object next() -> next
    50:56:void remove() -> remove
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    457:483:void append(long,java.lang.Object) -> append
    441:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    218:238:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    354:358:long keyAt(int) -> keyAt
    249:291:void put(long,java.lang.Object) -> put
    139:144:void remove(long) -> remove
    171:173:void removeAt(int) -> removeAt
    328:332:int size() -> size
    495:516:java.lang.String toString() -> toString
    374:378:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:56:void <init>(int) -> <init>
    281:281:void evictAll() -> evictAll
    84:125:java.lang.Object get(java.lang.Object) -> get
    139:156:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    348:351:java.lang.String toString() -> toString
    171:189:void trimToSize(int) -> trimToSize
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    246:253:void <init>(int) -> <init>
    165:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    687:721:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    381:382:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    738:743:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    423:423:boolean isEmpty() -> isEmpty
    392:392:java.lang.Object keyAt(int) -> keyAt
    437:494:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    528:530:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    543:545:java.lang.Object remove(java.lang.Object) -> remove
    558:562:boolean remove(java.lang.Object,java.lang.Object) -> remove
    576:626:java.lang.Object removeAt(int) -> removeAt
    639:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    655:659:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    414:415:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    670:670:int size() -> size
    757:782:java.lang.String toString() -> toString
    402:402:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    461:487:void append(int,java.lang.Object) -> append
    445:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    231:251:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    362:366:int keyAt(int) -> keyAt
    262:304:void put(int,java.lang.Object) -> put
    341:345:int size() -> size
    499:520:java.lang.String toString() -> toString
    376:380:java.lang.Object valueAt(int) -> valueAt
androidx.core.R$styleable -> androidx.core.R$styleable:
    9446:19557:void <clinit>() -> <clinit>
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    290:293:void finishAffinity(android.app.Activity) -> finishAffinity
    580:603:void recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityCompat$2 -> androidx.core.app.ActivityCompat$2:
    588:588:void <init>(android.app.Activity) -> <init>
    591:595:void run() -> run
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    91:99:void <clinit>() -> <clinit>
    378:378:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    358:359:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    320:322:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    306:308:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    334:349:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    368:369:java.lang.reflect.Field getTokenField() -> getTokenField
    330:330:boolean needsRelaunchCall() -> needsRelaunchCall
    257:296:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity) -> queueOnStopIfNecessary
    109:169:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    143:143:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    146:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    159:159:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    166:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    269:269:void <init>(java.lang.Object,java.lang.Object) -> <init>
    273:290:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    183:195:void <init>(android.app.Activity) -> <init>
    241:246:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    218:226:void onActivityPaused(android.app.Activity) -> onActivityPaused
    207:208:void onActivityStarted(android.app.Activity) -> onActivityStarted
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    175:177:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:76:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:63:void <init>() -> <init>
    136:140:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    127:131:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    85:86:void onCreate(android.os.Bundle) -> onCreate
    92:93:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    122:122:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:81:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    129:148:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    195:204:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:276:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    108:113:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    79:83:void <init>(android.content.Context) -> <init>
    121:121:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    160:175:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    256:256:java.util.Iterator iterator() -> iterator
    268:268:void startActivities() -> startActivities
    283:294:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    159:162:void <clinit>() -> <clinit>
    552:555:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    535:538:int getColor(android.content.Context,int) -> getColor
    516:516:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    479:496:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    248:251:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
    823:823:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
    862:862:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.ContextCompat$Api23Impl:
    889:889:int getColor(android.content.Context,int) -> getColor
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    97:114:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:135:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    51:51:void <clinit>() -> <clinit>
    90:102:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    117:123:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    212:215:android.util.TypedValue getTypedValue() -> getTypedValue
    69:72:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    132:200:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    204:206:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    229:229:int modulateColorAlpha(int,float) -> modulateColorAlpha
    222:223:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:64:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:171:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:142:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    109:114:boolean onStateChanged(int[]) -> onStateChanged
    90:90:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    253:258:int getType(android.content.res.TypedArray,int) -> getType
    184:192:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    271:295:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    197:202:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    209:249:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    309:337:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    344:344:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    300:302:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    169:170:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    174:174:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    129:135:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    139:139:java.lang.String getFileName() -> getFileName
    159:159:int getResourceId() -> getResourceId
    155:155:int getTtcIndex() -> getTtcIndex
    151:151:java.lang.String getVariationSettings() -> getVariationSettings
    143:143:int getWeight() -> getWeight
    147:147:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    86:90:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String) -> <init>
    103:103:int getFetchStrategy() -> getFetchStrategy
    99:99:androidx.core.provider.FontRequest getRequest() -> getRequest
    113:113:java.lang.String getSystemFontFamilyName() -> getSystemFontFamilyName
    107:107:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    195:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:142:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:185:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    204:209:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:223:void <init>(java.util.List,java.util.List) -> <init>
    227:229:void <init>(int,int) -> <init>
    232:234:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    42:48:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:61:int[] append(int[],int,int) -> append
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    69:72:void <clinit>() -> <clinit>
    258:266:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList) -> addColorStateListToCache
    237:251:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int) -> getCachedColorStateList
    193:212:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    103:106:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    506:509:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    278:281:android.util.TypedValue getTypedValue() -> getTypedValue
    221:229:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflateColorStateList
    270:272:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    529:535:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    559:617:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry:
    314:316:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey:
    290:292:void <init>(android.content.res.Resources,android.content.res.Resources$Theme) -> <init>
    298:301:boolean equals(java.lang.Object) -> equals
    306:306:int hashCode() -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    406:406:void <init>() -> <init>
    452:452:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    436:436:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
    464:464:android.os.Handler getHandler(android.os.Handler) -> getHandler
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    436:436:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    439:439:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    452:452:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    455:455:void run() -> run
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
    653:656:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23:
    671:671:void <clinit>() -> <clinit>
    677:695:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29:
    664:664:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    354:356:int getAttr(android.content.Context,int,int) -> getAttr
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    275:277:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:180:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    310:312:java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    326:328:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    342:344:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    253:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    667:667:float circularInterpolate(float,float,float) -> circularInterpolate
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    136:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    366:366:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    36:36:void <clinit>() -> <clinit>
    43:47:void <init>(int,int,int,int) -> <init>
    142:149:boolean equals(java.lang.Object) -> equals
    156:159:int hashCode() -> hashCode
    114:115:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    64:66:androidx.core.graphics.Insets of(int,int,int,int) -> of
    77:77:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    188:188:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    198:198:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    165:165:java.lang.String toString() -> toString
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    190:190:void addNode(java.util.ArrayList,char,float[]) -> addNode
    141:146:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    55:64:float[] copyOfRange(float[],int,int) -> copyOfRange
    97:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:79:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    123:125:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    260:299:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    174:175:int nextStart(java.lang.String,int) -> nextStart
    163:166:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    199:199:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:354:void <init>(char,float[]) -> <init>
    357:359:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    399:642:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:780:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:719:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    388:390:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    371:373:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    50:69:void <clinit>() -> <clinit>
    244:244:void clearCache() -> clearCache
    224:235:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    193:193:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    125:162:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    176:180:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    94:94:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    82:82:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
    202:208:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int) -> getBestFontFromFamily
    105:108:android.graphics.Typeface getSystemFontFamily(java.lang.String) -> getSystemFontFamily
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter:
    261:262:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    274:275:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    267:268:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:168:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:104:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:96:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:87:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:114:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:124:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:95:boolean isUsable() -> isUsable
    103:103:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:107:void <init>() -> <init>
    194:194:void abortCreation(java.lang.Object) -> abortCreation
    140:142:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:156:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:172:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:183:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:127:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:351:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:64:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
    44:44:void <init>() -> <init>
    110:139:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    63:97:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    54:54:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    155:160:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    48:48:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    220:222:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) -> addFontFamily
    170:177:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    138:150:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    115:131:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    188:204:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    154:154:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    68:70:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    100:100:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    212:216:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface) -> getFontFamily
    86:94:long getUniqueKey(android.graphics.Typeface) -> getUniqueKey
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    100:100:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    100:100:int getWeight(java.lang.Object) -> getWeight
    103:103:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    100:100:boolean isItalic(java.lang.Object) -> isItalic
    108:108:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.graphics.TypefaceCompatBaseImpl$2:
    154:154:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    154:154:int getWeight(java.lang.Object) -> getWeight
    157:157:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    154:154:boolean isItalic(java.lang.Object) -> isItalic
    162:162:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    183:183:void closeQuietly(java.io.Closeable) -> closeQuietly
    130:141:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    149:164:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    173:177:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    69:78:java.io.File getTempFile(android.content.Context) -> getTempFile
    94:98:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    109:119:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    208:223:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> readFontInfoIntoByteBuffer
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    188:189:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:198:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    177:178:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:211:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:410:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:271:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:62:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:79:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:111:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:124:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:374:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:138:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:152:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:166:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:335:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:316:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    208:208:void <clinit>() -> <clinit>
    155:379:void <init>() -> <init>
    1211:1245:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    436:442:int getResId() -> getResId
    1157:1169:int getResId(android.graphics.drawable.Icon) -> getResId
    937:973:void onPostParceling() -> onPostParceling
    900:930:void onPreParceling(boolean) -> onPreParceling
    858:895:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:53:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.RoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawable:
    50:393:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    84:85:void computeBitmapSize() -> computeBitmapSize
    260:269:void draw(android.graphics.Canvas) -> draw
    284:284:int getAlpha() -> getAlpha
    295:295:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    356:356:float getCornerRadius() -> getCornerRadius
    366:366:int getIntrinsicHeight() -> getIntrinsicHeight
    361:361:int getIntrinsicWidth() -> getIntrinsicWidth
    371:378:int getOpacity() -> getOpacity
    345:349:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    275:278:void setAlpha(int) -> setAlpha
    303:310:void setCircular(boolean) -> setCircular
    289:290:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    330:340:void setCornerRadius(float) -> setCornerRadius
    217:218:void setDither(boolean) -> setDither
    211:212:void setFilterBitmap(boolean) -> setFilterBitmap
    315:316:void updateCircularCornerRadius() -> updateCircularCornerRadius
    227:254:void updateDstRect() -> updateDstRect
androidx.core.graphics.drawable.RoundedBitmapDrawable21 -> androidx.core.graphics.drawable.RoundedBitmapDrawable21:
    32:32:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    37:38:void getOutline(android.graphics.Outline) -> getOutline
    57:57:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory:
    73:76:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    43:43:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    62:62:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:65:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    222:224:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    216:216:int getLayoutDirection() -> getLayoutDirection
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    334:334:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    263:263:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:81:void jumpToCurrentState() -> jumpToCurrentState
    232:240:android.graphics.drawable.Drawable mutate() -> mutate
    255:255:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> mutateConstantState
    91:92:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    210:210:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    284:284:boolean onLevelChange(int) -> onLevelChange
    271:271:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:120:void setAlpha(int) -> setAlpha
    198:198:void setAutoMirrored(boolean) -> setAutoMirrored
    98:98:void setChangingConfigurations(int) -> setChangingConfigurations
    125:125:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:110:void setDither(boolean) -> setDither
    115:115:void setFilterBitmap(boolean) -> setFilterBitmap
    138:139:boolean setState(int[]) -> setState
    289:289:void setTint(int) -> setTint
    294:295:void setTintList(android.content.res.ColorStateList) -> setTintList
    300:301:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    342:360:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    279:279:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:75:void updateLocalState(android.content.res.Resources) -> updateLocalState
    305:324:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    43:44:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:49:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    141:145:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:64:void getOutline(android.graphics.Outline) -> getOutline
    113:115:boolean isCompatTintEnabled() -> isCompatTintEnabled
    129:133:boolean isProjected() -> isProjected
    54:54:void setHotspot(float,float) -> setHotspot
    59:59:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:105:boolean setState(int[]) -> setState
    84:87:void setTint(int) -> setTint
    75:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:96:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.WrappedDrawableState:
    32:40:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> canConstantState
    61:62:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:56:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    51:57:boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String) -> isAtLeastPreReleaseCodename
    155:155:boolean isAtLeastR() -> isAtLeastR
    166:166:boolean isAtLeastS() -> isAtLeastS
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    37:37:void <init>() -> <init>
    69:91:void cancel() -> cancel
    46:48:boolean isCanceled() -> isCanceled
    111:122:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    153:155:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    50:63:void <clinit>() -> <clinit>
    104:105:void beginSection(java.lang.String) -> beginSection
    117:118:void endSection() -> endSection
androidx.core.provider.CallbackWithHandler -> androidx.core.provider.CallbackWithHandler:
    40:42:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> <init>
    67:68:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    80:83:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult) -> onTypefaceResult
    54:55:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.CallbackWithHandler$1 -> androidx.core.provider.CallbackWithHandler$1:
    55:55:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface) -> <init>
    58:58:void run() -> run
androidx.core.provider.CallbackWithHandler$2 -> androidx.core.provider.CallbackWithHandler$2:
    68:68:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int) -> <init>
    71:71:void run() -> run
androidx.core.provider.CalleeHandler -> androidx.core.provider.CalleeHandler:
    36:39:android.os.Handler create() -> create
androidx.core.provider.FontProvider -> androidx.core.provider.FontProvider:
    197:197:void <clinit>() -> <clinit>
    226:228:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    214:218:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    190:194:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    53:61:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal) -> getFontFamilyResult
    76:101:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    121:186:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> query
androidx.core.provider.FontProvider$1 -> androidx.core.provider.FontProvider$1:
    197:197:void <init>() -> <init>
    197:197:int compare(java.lang.Object,java.lang.Object) -> compare
    200:205:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    57:63:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    93:94:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String) -> createIdentifier
    133:133:java.util.List getCertificates() -> getCertificates
    145:145:int getCertificatesArrayResId() -> getCertificatesArrayResId
    164:164:java.lang.String getId() -> getId
    103:103:java.lang.String getProviderAuthority() -> getProviderAuthority
    112:112:java.lang.String getProviderPackage() -> getProviderPackage
    121:121:java.lang.String getQuery() -> getQuery
    169:188:java.lang.String toString() -> toString
androidx.core.provider.FontRequestWorker -> androidx.core.provider.FontRequestWorker:
    58:72:void <clinit>() -> <clinit>
    221:221:java.lang.String createCacheId(androidx.core.provider.FontRequest,int) -> createCacheId
    263:279:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult) -> getFontFamilyResultStatus
    232:256:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> getFontSync
    164:200:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler) -> requestFontAsync
    102:133:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int) -> requestFontSync
    76:76:void resetTypefaceCache() -> resetTypefaceCache
androidx.core.provider.FontRequestWorker$1 -> androidx.core.provider.FontRequestWorker$1:
    117:117:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    117:117:java.lang.Object call() -> call
    120:120:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$2 -> androidx.core.provider.FontRequestWorker$2:
    171:171:void <init>(androidx.core.provider.CallbackWithHandler) -> <init>
    171:171:void accept(java.lang.Object) -> accept
    174:174:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$3 -> androidx.core.provider.FontRequestWorker$3:
    191:191:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    191:191:java.lang.Object call() -> call
    194:194:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$4 -> androidx.core.provider.FontRequestWorker$4:
    200:200:void <init>(java.lang.String) -> <init>
    200:200:void accept(java.lang.Object) -> accept
    204:212:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$TypefaceResult -> androidx.core.provider.FontRequestWorker$TypefaceResult:
    295:297:void <init>(int) -> <init>
    301:303:void <init>(android.graphics.Typeface) -> <init>
    308:308:boolean isSuccess() -> isSuccess
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    610:610:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    163:169:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> requestFont
    178:178:void resetTypefaceCache() -> resetTypefaceCache
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    390:392:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    407:407:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> create
    400:400:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    396:396:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    292:297:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    308:308:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int) -> create
    345:345:int getResultCode() -> getResultCode
    322:322:int getTtcIndex() -> getTtcIndex
    315:315:android.net.Uri getUri() -> getUri
    329:329:int getWeight() -> getWeight
    336:336:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    478:478:void <init>() -> <init>
androidx.core.provider.RequestExecutor -> androidx.core.provider.RequestExecutor:
    82:93:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int) -> createDefaultExecutor
    56:57:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer) -> execute
    65:73:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int) -> submit
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> androidx.core.provider.RequestExecutor$DefaultThreadFactory:
    164:166:void <init>(java.lang.String,int) -> <init>
    171:171:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread:
    178:179:void <init>(java.lang.Runnable,java.lang.String,int) -> <init>
    184:185:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> androidx.core.provider.RequestExecutor$ReplyRunnable:
    135:138:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer) -> <init>
    145:151:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> androidx.core.provider.RequestExecutor$ReplyRunnable$1:
    151:151:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object) -> <init>
    154:154:void run() -> run
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    73:73:void <clinit>() -> <clinit>
    754:754:char charAt(int) -> charAt
    523:523:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    512:513:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    729:729:int getSpanEnd(java.lang.Object) -> getSpanEnd
    734:734:int getSpanFlags(java.lang.Object) -> getSpanFlags
    724:724:int getSpanStart(java.lang.Object) -> getSpanStart
    714:717:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    749:749:int length() -> length
    739:739:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    695:702:void removeSpan(java.lang.Object) -> removeSpan
    678:685:void setSpan(java.lang.Object,int,int,int) -> setSpan
    759:759:java.lang.CharSequence subSequence(int,int) -> subSequence
    765:765:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    197:210:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    214:219:void <init>(android.text.PrecomputedText$Params) -> <init>
    335:343:boolean equals(java.lang.Object) -> equals
    275:318:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    253:253:int getBreakStrategy() -> getBreakStrategy
    265:265:int getHyphenationFrequency() -> getHyphenationFrequency
    241:241:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    228:228:android.text.TextPaint getTextPaint() -> getTextPaint
    352:373:int hashCode() -> hashCode
    379:400:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    116:127:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    51:54:boolean equals(java.lang.Object,java.lang.Object) -> equals
    93:96:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:98:void <init>(int) -> <init>
    104:108:java.lang.Object acquire() -> acquire
    128:129:boolean isInPool(java.lang.Object) -> isInPool
    116:121:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    228:234:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    207:207:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    173:175:int checkFlagsArgument(int,int) -> checkFlagsArgument
    119:119:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    136:136:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    131:131:void <clinit>() -> <clinit>
    140:140:void <init>() -> <init>
    147:149:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    217:217:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    319:322:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    397:399:java.util.List getActionList(android.view.View) -> getActionList
    156:156:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    384:387:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    257:257:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    276:277:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    237:237:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    301:301:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    346:359:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    366:374:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    174:174:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    196:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    64:65:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    119:122:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:76:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:91:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    97:97:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    103:103:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    127:127:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    108:108:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    113:113:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    133:134:void <init>(android.content.Context) -> <init>
    164:164:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    306:307:void reset() -> reset
    283:283:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    293:298:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.core.view.ContentInfoCompat -> androidx.core.view.ContentInfoCompat:
    137:143:void <init>(androidx.core.view.ContentInfoCompat$Builder) -> <init>
    123:123:java.lang.String flagsToString(int) -> flagsToString
    163:163:android.content.ClipData getClip() -> getClip
    180:180:int getFlags() -> getFlags
    172:172:int getSource() -> getSource
    93:93:java.lang.String sourceToString(int) -> sourceToString
    149:154:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.ContentInfoCompat$Builder:
    293:295:void <init>(android.content.ClipData,int) -> <init>
    365:365:androidx.core.view.ContentInfoCompat build() -> build
    356:356:androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle) -> setExtras
    331:331:androidx.core.view.ContentInfoCompat$Builder setFlags(int) -> setFlags
    344:344:androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri) -> setLinkUri
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    112:113:void <init>(java.lang.Object) -> <init>
    194:198:boolean equals(java.lang.Object) -> equals
    127:128:int getSafeInsetBottom() -> getSafeInsetBottom
    136:137:int getSafeInsetLeft() -> getSafeInsetLeft
    145:146:int getSafeInsetRight() -> getSafeInsetRight
    118:119:int getSafeInsetTop() -> getSafeInsetTop
    203:203:int hashCode() -> hashCode
    208:208:java.lang.String toString() -> toString
    212:212:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> wrap
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    64:67:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    96:106:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:138:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:174:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    83:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:153:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    72:87:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    140:150:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    207:211:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    463:466:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:325:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:506:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:537:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:421:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    351:354:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:57:void <init>(android.view.View) -> <init>
    348:351:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:371:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:332:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    231:231:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:271:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    406:408:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:73:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    416:419:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:161:boolean startNestedScroll(int,int) -> startNestedScroll
    175:175:void stopNestedScroll() -> stopNestedScroll
    186:189:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:50:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:63:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:79:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    115:117:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:46:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:64:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:71:boolean onPreDraw() -> onPreDraw
    90:90:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:95:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:85:void removeListener() -> removeListener
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    470:4480:void <clinit>() -> <clinit>
    4329:4329:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    2068:2074:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    2644:2645:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2565:2571:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    4129:4132:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4121:4124:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    922:929:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    945:948:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    954:974:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1789:1790:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    4245:4245:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    2918:2922:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2963:2967:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3766:3772:android.view.Display getDisplay(android.view.View) -> getDisplay
    2819:2822:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View) -> getFallback
    1101:1102:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    782:783:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1611:1612:int getLayoutDirection(android.view.View) -> getLayoutDirection
    2034:2050:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2000:2016:int getMinimumWidth(android.view.View) -> getMinimumWidth
    2782:2782:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View) -> getOnReceiveContentMimeTypes
    934:938:androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View) -> getOrCreateAccessibilityDelegateCompat
    2622:2625:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    1399:1399:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2409:2415:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2422:2423:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    3666:3667:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    988:989:boolean hasTransientState(android.view.View) -> hasTransientState
    4308:4309:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3654:3657:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3460:3463:boolean isLaidOut(android.view.View) -> isLaidOut
    4172:4173:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    4422:4455:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    2537:2543:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    4249:4249:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    2805:2815:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    1017:1020:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1057:1060:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1079:1082:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    2433:2436:void requestApplyInsets(android.view.View) -> requestApplyInsets
    522:523:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    4177:4177:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    725:728:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    2904:2907:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2934:2951:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2981:2998:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    2341:2342:void setElevation(android.view.View,float) -> setElevation
    1128:1138:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    826:827:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    2517:2518:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    3718:3719:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    1381:1382:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
    2387:2393:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4462:4476:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    4272:4272:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3083:3086:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2826:2826:void <init>() -> <init>
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    4178:4178:void <init>(int,java.lang.Class,int) -> <init>
    4178:4178:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4183:4183:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4178:4178:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4189:4189:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4178:4178:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4194:4194:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    4250:4250:void <init>(int,java.lang.Class,int,int) -> <init>
    4250:4250:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4255:4255:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4250:4250:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4261:4261:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4250:4250:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4266:4266:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4273:4273:void <init>(int,java.lang.Class,int,int) -> <init>
    4273:4273:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4278:4278:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4273:4273:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4284:4284:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4273:4273:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4289:4289:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$5 -> androidx.core.view.ViewCompat$5:
    4330:4330:void <init>(int,java.lang.Class,int) -> <init>
    4330:4330:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4335:4335:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4330:4330:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4341:4341:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4330:4330:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4346:4346:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4483:4485:void <init>() -> <init>
    4527:4533:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4490:4492:void onGlobalLayout() -> onGlobalLayout
    4501:4501:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4539:4539:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4359:4359:void <init>(int,java.lang.Class,int) -> <init>
    4364:4368:void <init>(int,java.lang.Class,int,int) -> <init>
    4413:4414:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4402:4402:boolean extrasAvailable() -> extrasAvailable
    4398:4398:boolean frameworkAvailable() -> frameworkAvailable
    4387:4391:java.lang.Object get(android.view.View) -> get
    4373:4381:void set(android.view.View,java.lang.Object) -> set
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4819:4823:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4746:4751:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    4741:4741:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    4760:4774:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
    4774:4775:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4780:4806:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    4836:4843:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
    4857:4857:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4552:4552:void <clinit>() -> <clinit>
    4548:4567:void <init>() -> <init>
    4577:4581:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4587:4598:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4606:4620:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4570:4573:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4665:4670:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4632:4655:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4705:4729:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:44:void <clinit>() -> <clinit>
    106:117:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    424:432:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    461:469:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    384:397:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    329:353:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    248:262:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    207:221:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    282:295:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    30:38:void <init>(android.view.View) -> <init>
    138:139:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    464:465:void cancel() -> cancel
    237:238:long getDuration() -> getDuration
    123:124:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    254:255:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    729:734:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    742:759:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    286:287:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    776:787:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    644:645:void start() -> start
    183:184:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    742:742:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    745:745:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    750:750:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    755:755:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    780:780:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    783:783:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    45:46:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    101:107:void onAnimationCancel(android.view.View) -> onAnimationCancel
    75:95:void onAnimationEnd(android.view.View) -> onAnimationEnd
    52:68:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    78:81:void <clinit>() -> <clinit>
    88:100:void <init>(android.view.WindowInsets) -> <init>
    109:129:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    506:506:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    477:477:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    319:319:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2111:2111:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    721:725:boolean equals(java.lang.Object) -> equals
    490:490:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    668:668:androidx.core.graphics.Insets getInsets(int) -> getInsets
    549:549:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    239:239:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    191:191:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    223:223:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    207:207:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    730:730:int hashCode() -> hashCode
    651:651:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1334:1341:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    340:342:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    1703:1703:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2107:2107:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2103:2103:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1801:1801:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    741:741:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    148:148:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    168:173:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder:
    2128:2137:void <clinit>() -> <clinit>
    2144:2168:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    1396:1404:void <init>() -> <init>
    1413:1421:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1610:1610:androidx.core.view.WindowInsetsCompat build() -> build
    1584:1584:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1439:1439:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1620:1620:void <init>() -> <init>
    1623:1624:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1669:1691:void applyInsetTypes() -> applyInsetTypes
    1697:1698:androidx.core.view.WindowInsetsCompat build() -> build
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    1717:1718:void <init>() -> <init>
    1722:1723:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1742:1746:androidx.core.view.WindowInsetsCompat build() -> build
    1758:1791:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1736:1736:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1728:1729:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1809:1810:void <init>() -> <init>
    1814:1818:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1854:1857:androidx.core.view.WindowInsetsCompat build() -> build
    1833:1833:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1843:1843:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1828:1828:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1823:1823:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1838:1838:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
    1865:1865:void <init>() -> <init>
    1869:1869:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    746:750:void <clinit>() -> <clinit>
    754:755:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    783:783:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    773:773:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    768:768:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    840:846:boolean equals(java.lang.Object) -> equals
    821:821:androidx.core.graphics.Insets getInsets(int) -> getInsets
    805:805:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    793:793:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    799:799:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    788:788:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    811:811:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    852:853:int hashCode() -> hashCode
    816:816:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    892:899:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    903:903:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1110:1114:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1085:1086:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1184:1186:boolean equals(java.lang.Object) -> equals
    914:914:androidx.core.graphics.Insets getInsets(int) -> getInsets
    940:945:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    955:1041:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    1101:1104:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1063:1070:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1125:1154:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    1077:1080:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    908:908:boolean isRound() -> isRound
    1168:1179:void loadReflectionField() -> loadReflectionField
    1162:1162:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1096:1096:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1091:1091:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    1192:1195:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1192:1200:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1211:1211:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1217:1217:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1223:1230:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1205:1205:boolean isConsumed() -> isConsumed
    1235:1235:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    1243:1243:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1247:1247:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1259:1259:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1265:1269:boolean equals(java.lang.Object) -> equals
    1253:1253:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1274:1274:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    1281:1286:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1281:1290:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1305:1309:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1296:1299:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1315:1318:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    1324:1324:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
    1347:1347:void <clinit>() -> <clinit>
    1350:1350:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1354:1354:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    1360:1361:androidx.core.graphics.Insets getInsets(int) -> getInsets
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
    2043:2043:int indexOf(int) -> indexOf
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
    2072:2093:int toPlatformType(int) -> toPlatformType
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:58:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:71:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    343:344:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    322:323:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1250:1701:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1997:1997:void addAction(int) -> addAction
    2030:2031:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    2775:2778:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2704:2715:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    2766:2770:void clearExtrasSpans() -> clearExtrasSpans
    4088:4102:boolean equals(java.lang.Object) -> equals
    2001:2008:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    3075:3087:java.util.List getActionList() -> getActionList
    1982:1982:int getActions() -> getActions
    2227:2227:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2259:2259:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    2642:2642:java.lang.CharSequence getClassName() -> getClassName
    2741:2743:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2802:2802:java.lang.CharSequence getContentDescription() -> getContentDescription
    3405:3408:android.os.Bundle getExtras() -> getExtras
    2722:2725:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2618:2618:java.lang.CharSequence getPackageName() -> getPackageName
    2732:2732:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2666:2680:java.lang.CharSequence getText() -> getText
    2895:2896:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2762:2762:boolean hasSpans() -> hasSpans
    4077:4077:int hashCode() -> hashCode
    2751:2758:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2283:2283:boolean isCheckable() -> isCheckable
    2307:2307:boolean isChecked() -> isChecked
    2465:2465:boolean isClickable() -> isClickable
    2513:2513:boolean isEnabled() -> isEnabled
    2331:2331:boolean isFocusable() -> isFocusable
    2355:2355:boolean isFocused() -> isFocused
    2489:2489:boolean isLongClickable() -> isLongClickable
    2537:2537:boolean isPassword() -> isPassword
    2561:2561:boolean isScrollable() -> isScrollable
    2441:2441:boolean isSelected() -> isSelected
    2092:2093:boolean performAction(int,android.os.Bundle) -> performAction
    2782:2791:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    4170:4175:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2657:2657:void setClassName(java.lang.CharSequence) -> setClassName
    2999:3001:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3008:3010:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    3929:3932:void setHeading(boolean) -> setHeading
    3805:3808:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    3857:3860:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2576:2576:void setScrollable(boolean) -> setScrollable
    2847:2850:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    4112:4166:java.lang.String toString() -> toString
    1718:1718:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1711:1711:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    105:589:void <clinit>() -> <clinit>
    609:609:void <init>(int,java.lang.CharSequence) -> <init>
    627:627:void <init>(java.lang.Object) -> <init>
    632:632:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    637:645:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    723:732:boolean equals(java.lang.Object) -> equals
    654:655:int getId() -> getId
    668:669:java.lang.CharSequence getLabel() -> getLabel
    715:715:int hashCode() -> hashCode
    684:698:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    809:810:void <init>(java.lang.Object) -> <init>
    779:786:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    933:934:void <init>(java.lang.Object) -> <init>
    900:907:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    137:138:void <init>(java.lang.Object) -> <init>
    145:145:java.lang.Object getProvider() -> getProvider
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    508:509:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    558:559:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    46:46:void <init>() -> <init>
    54:54:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    64:64:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    98:98:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    183:183:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    148:148:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    169:169:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    113:113:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    133:133:void <init>() -> <init>
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    91:91:void <clinit>() -> <clinit>
    181:192:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    462:464:boolean isCutOnSurrogate(java.lang.CharSequence,int,int) -> isCutOnSurrogate
    158:165:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
    235:267:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
    212:215:void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence) -> setInitialSurroundingText
    484:492:void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> setSurroundingText
    296:338:void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> trimLongSurroundingText
androidx.core.view.inputmethod.EditorInfoCompat$Impl30 -> androidx.core.view.inputmethod.EditorInfoCompat$Impl30:
    536:536:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    261:288:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    77:114:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
    271:271:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    275:279:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
    288:288:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    291:294:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    169:173:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    177:178:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    186:186:android.net.Uri getContentUri() -> getContentUri
    196:196:android.content.ClipDescription getDescription() -> getDescription
    204:204:android.net.Uri getLinkUri() -> getLinkUri
    247:247:void requestPermission() -> requestPermission
    222:225:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    109:110:void <init>(java.lang.Object) -> <init>
    114:115:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    121:121:android.net.Uri getContentUri() -> getContentUri
    127:127:android.content.ClipDescription getDescription() -> getDescription
    133:133:android.net.Uri getLinkUri() -> getLinkUri
    144:144:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:65:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    83:83:android.net.Uri getLinkUri() -> getLinkUri
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:225:void <init>(android.view.View) -> <init>
    687:691:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    638:645:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:543:void requestStop() -> requestStop
    420:420:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:359:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:240:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:403:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:297:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:316:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:452:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:436:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:380:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:338:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:529:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:761:void <init>() -> <init>
    831:842:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    795:796:boolean isFinished() -> isFinished
    788:791:void requestStop() -> requestStop
    769:769:void setRampDownDuration(int) -> setRampDownDuration
    765:765:void setRampUpDuration(int) -> setRampUpDuration
    852:853:void setTargetVelocity(float,float) -> setTargetVelocity
    776:781:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:695:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:727:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    44:44:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    123:142:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    57:60:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:96:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    66:70:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    87:88:float getDistance(android.widget.EdgeEffect) -> getDistance
    194:197:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    239:242:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.EdgeEffectCompat$Api31Impl -> androidx.core.widget.EdgeEffectCompat$Api31Impl:
    306:308:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    329:329:float getDistance(android.widget.EdgeEffect) -> getDistance
    319:321:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    37:41:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    74:78:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:65:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    88:103:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:35:void <init>(android.widget.ListView) -> <init>
    51:73:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:40:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    37:53:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    189:191:void <clinit>() -> <clinit>
    203:203:void <init>(android.content.Context) -> <init>
    207:207:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    105:231:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1763:1764:void abortAnimatedScroll() -> abortAnimatedScroll
    488:492:void addView(android.view.View) -> addView
    497:501:void addView(android.view.View,int) -> addView
    506:510:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    515:519:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1382:1426:boolean arrowScroll(int) -> arrowScroll
    539:543:boolean canScroll() -> canScroll
    1626:1626:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1619:1619:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1612:1612:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1662:1714:void computeScroll() -> computeScroll
    1815:1874:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1605:1605:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1598:1598:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1574:1584:int computeVerticalScrollRange() -> computeVerticalScrollRange
    637:637:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    314:314:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    319:319:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    270:270:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    309:309:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    239:239:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    303:303:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1458:1461:void doScrollY(int) -> doScrollY
    2073:2116:void draw(android.graphics.Canvas) -> draw
    1016:1019:boolean edgeEffectFling(int) -> edgeEffectFling
    2039:2045:void endDrag() -> endDrag
    649:682:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1203:1236:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    2027:2034:void fling(int) -> fling
    1319:1334:boolean fullScroll(int) -> fullScroll
    451:459:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    472:472:int getMaxScrollAmount() -> getMaxScrollAmount
    424:424:int getNestedScrollAxes() -> getNestedScrollAxes
    1176:1181:int getScrollRange() -> getScrollRange
    436:441:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1096:1107:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    257:257:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    297:297:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    691:697:boolean inChild(int,int) -> inChild
    703:706:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    476:483:void initScrollView() -> initScrollView
    711:712:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    282:282:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1436:1436:boolean isOffScreen(android.view.View) -> isOffScreen
    2015:2016:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1444:1448:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1632:1642:void measureChild(android.view.View,int,int) -> measureChild
    1648:1656:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1982:1984:void onAttachedToWindow() -> onAttachedToWindow
    1068:1084:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    744:840:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1944:1977:void onLayout(boolean,int,int,int,int) -> onLayout
    601:629:void onMeasure(int,int) -> onMeasure
    410:411:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    419:419:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    373:373:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    403:403:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    327:327:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    367:367:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    398:398:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    354:355:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    387:387:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    331:340:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1113:1113:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1911:1923:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2152:2160:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2165:2167:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    592:595:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1051:1061:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1989:2003:void onSizeChanged(int,int,int,int) -> onSizeChanged
    381:381:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    360:361:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    392:392:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    845:1009:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1121:1169:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1281:1302:boolean pageScroll(int) -> pageScroll
    717:719:void recycleVelocityTracker() -> recycleVelocityTracker
    1731:1747:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    1881:1887:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1930:1933:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    726:728:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1938:1939:void requestLayout() -> requestLayout
    1754:1759:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1352:1369:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    2056:2066:void scrollTo(int,int) -> scrollTo
    1773:1781:void scrollToChild(android.view.View) -> scrollToChild
    1794:1800:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    569:571:void setFillViewport(boolean) -> setFillViewport
    277:277:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    532:532:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    1473:1473:void smoothScrollBy(int,int) -> smoothScrollBy
    1496:1517:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1550:1550:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1563:1563:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    247:247:boolean startNestedScroll(int,int) -> startNestedScroll
    287:287:boolean startNestedScroll(int) -> startNestedScroll
    1039:1044:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    252:252:void stopNestedScroll(int) -> stopNestedScroll
    292:292:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2211:2211:void <init>() -> <init>
    2276:2284:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2251:2267:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2214:2240:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2197:2197:void <clinit>() -> <clinit>
    2175:2175:void <init>(android.os.Parcelable) -> <init>
    2179:2180:void <init>(android.os.Parcel) -> <init>
    2192:2193:java.lang.String toString() -> toString
    2185:2186:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2198:2198:void <init>() -> <init>
    2198:2198:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2198:2198:java.lang.Object[] newArray(int) -> newArray
    2206:2206:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    90:106:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:170:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:79:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    788:788:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    798:798:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    927:974:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    835:847:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1013:1017:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1047:1051:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    713:736:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    758:777:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    816:822:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    904:913:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    519:529:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    564:567:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    691:691:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    679:681:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    650:659:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    685:687:boolean isEditable(android.widget.TextView) -> isEditable
    666:673:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    583:583:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    572:572:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    588:588:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    577:578:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    597:644:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.core.widget.TextViewOnReceiveContentListener -> androidx.core.widget.TextViewOnReceiveContentListener:
    49:49:void <init>() -> <init>
    94:97:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int) -> coerceToText
    56:85:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> onReceiveContent
    103:108:void replaceSelection(android.text.Editable,java.lang.CharSequence) -> replaceSelection
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl -> androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl:
    118:121:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl -> androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl:
    131:133:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:40:void <init>() -> <init>
    48:52:void <init>(android.os.Parcelable) -> <init>
    70:72:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    77:77:android.os.Parcelable getSuperState() -> getSuperState
    87:87:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    90:90:void <init>() -> <init>
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2201:2201:void <clinit>() -> <clinit>
    2172:2184:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2193:2198:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2201:2201:void <init>() -> <init>
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2204:2204:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2209:2209:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:java.lang.Object[] newArray(int) -> newArray
    2214:2214:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.fragment.R$styleable -> androidx.fragment.R$styleable:
    9446:19557:void <clinit>() -> <clinit>
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    38:141:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    264:276:void bumpBackStackNesting(int) -> bumpBackStackNesting
    310:311:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    183:184:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    58:58:void dump(java.lang.String,java.io.PrintWriter) -> dump
    63:130:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    402:458:void executeOps() -> executeOps
    470:525:void executePopOps(boolean) -> executePopOps
    553:613:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    345:352:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    685:685:java.lang.String getName() -> getName
    358:361:boolean interactsWith(int) -> interactsWith
    373:386:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    677:679:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    658:660:boolean isPostponed() -> isPostponed
    284:288:void runOnCommitRunnables() -> runOnCommitRunnables
    668:671:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    42:54:java.lang.String toString() -> toString
    632:650:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackRecordState -> androidx.fragment.app.BackStackRecordState:
    204:204:void <clinit>() -> <clinit>
    50:83:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    86:100:void <init>(android.os.Parcel) -> <init>
    148:178:void fillInBackStackRecord(androidx.fragment.app.BackStackRecord) -> fillInBackStackRecord
    111:120:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    188:201:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackRecordState$1 -> androidx.fragment.app.BackStackRecordState$1:
    205:205:void <init>() -> <init>
    205:205:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    208:208:androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel) -> createFromParcel
    205:205:java.lang.Object[] newArray(int) -> newArray
    213:213:androidx.fragment.app.BackStackRecordState[] newArray(int) -> newArray
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    75:75:void <clinit>() -> <clinit>
    40:42:void <init>(android.os.Parcel) -> <init>
    71:72:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    76:76:void <init>() -> <init>
    76:76:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    79:79:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    76:76:java.lang.Object[] newArray(int) -> newArray
    84:84:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
    52:52:void <init>(android.view.ViewGroup) -> <init>
    721:722:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    680:694:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    61:126:void executeOperations(java.util.List,boolean) -> executeOperations
    703:713:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    662:666:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    132:272:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    287:648:java.util.Map startTransitions(java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
    103:103:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    106:108:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
    181:181:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    184:190:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
    197:197:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator) -> <init>
    200:200:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
    245:245:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    255:255:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
    255:255:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    258:259:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
    272:272:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    275:277:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
    453:453:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    456:457:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
    492:492:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    495:495:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
    577:577:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    580:580:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
    628:628:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo) -> <init>
    631:631:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
    761:766:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    771:777:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
    731:733:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    755:755:void completeSpecialEffect() -> completeSpecialEffect
    738:738:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    743:743:androidx.core.os.CancellationSignal getSignal() -> getSignal
    747:750:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
    792:818:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    842:849:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    862:871:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    837:837:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    824:824:java.lang.Object getTransition() -> getTransition
    832:832:boolean hasSharedElementTransition() -> hasSharedElementTransition
    828:828:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    122:122:void <clinit>() -> <clinit>
    134:537:void <init>() -> <init>
    2759:2786:void callStartTransitionListener(boolean) -> callStartTransitionListener
    2886:2886:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2803:2873:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3253:3256:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    665:665:boolean equals(java.lang.Object) -> equals
    2878:2881:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    915:915:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2614:2615:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2639:2640:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3326:3329:android.view.View getAnimatingAway() -> getAnimatingAway
    3341:3344:android.animation.Animator getAnimator() -> getAnimator
    1075:1078:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    888:888:android.content.Context getContext() -> getContext
    2397:2400:java.lang.Object getEnterTransition() -> getEnterTransition
    3312:3315:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2476:2479:java.lang.Object getExitTransition() -> getExitTransition
    3319:3322:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3363:3366:android.view.View getFocusedView() -> getFocusedView
    942:942:java.lang.Object getHost() -> getHost
    1673:1678:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    319:319:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    410:413:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3260:3263:int getNextAnim() -> getNextAnim
    3274:3277:int getNextTransition() -> getNextTransition
    1087:1087:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1039:1041:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3352:3355:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2514:2517:java.lang.Object getReenterTransition() -> getReenterTransition
    965:965:android.content.res.Resources getResources() -> getResources
    2436:2439:java.lang.Object getReturnTransition() -> getReturnTransition
    456:456:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2547:2550:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2585:2589:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3290:3291:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3298:3299:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    856:862:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    1952:1952:android.view.View getView() -> getView
    397:405:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    672:672:int hashCode() -> hashCode
    568:572:void initLifecycle() -> initLifecycle
    2165:2180:void initState() -> initState
    611:631:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    3377:3380:boolean isHideReplaced() -> isHideReplaced
    658:658:boolean isInBackStack() -> isInBackStack
    1198:1199:boolean isMenuVisible() -> isMenuVisible
    3370:3373:boolean isPostponed() -> isPostponed
    1135:1135:boolean isRemoving() -> isRemoving
    1144:1145:boolean isRemovingParent() -> isRemovingParent
    763:766:boolean isStateSaved() -> isStateSaved
    3042:3042:void noteStateNotSaved() -> noteStateNotSaved
    1997:1997:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1490:1491:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1780:1784:void onAttach(android.content.Context) -> onAttach
    1799:1799:void onAttach(android.app.Activity) -> onAttach
    2086:2086:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1867:1870:void onCreate(android.os.Bundle) -> onCreate
    2296:2296:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1924:1925:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2155:2155:void onDestroy() -> onDestroy
    2145:2145:void onDestroyView() -> onDestroyView
    2190:2190:void onDetach() -> onDetach
    1623:1623:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1728:1732:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1748:1748:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2130:2130:void onLowMemory() -> onLowMemory
    2112:2112:void onPause() -> onPause
    2036:2036:void onResume() -> onResume
    2024:2024:void onStart() -> onStart
    2123:2123:void onStop() -> onStop
    2013:2013:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2983:2992:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2905:2918:void performAttach() -> performAttach
    3067:3068:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3122:3126:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2922:2945:void performCreate(android.os.Bundle) -> performCreate
    3087:3092:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2950:2970:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3204:3211:void performDestroy() -> performDestroy
    3183:3200:void performDestroyView() -> performDestroyView
    3217:3231:void performDetach() -> performDetach
    1655:1655:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3072:3073:void performLowMemory() -> performLowMemory
    3057:3058:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3110:3116:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3132:3136:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3151:3160:void performPause() -> performPause
    3062:3063:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3099:3104:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3046:3052:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3025:3038:void performResume() -> performResume
    3141:3145:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3007:3020:void performStart() -> performStart
    3167:3176:void performStop() -> performStop
    2977:2978:void performViewCreated() -> performViewCreated
    927:929:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    899:901:android.content.Context requireContext() -> requireContext
    1963:1965:android.view.View requireView() -> requireView
    1888:1892:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    638:653:void restoreViewState(android.os.Bundle) -> restoreViewState
    2996:3002:void restoreViewState() -> restoreViewState
    3333:3333:void setAnimatingAway(android.view.View) -> setAnimatingAway
    3337:3337:void setAnimator(android.animation.Animator) -> setAnimator
    724:727:void setArguments(android.os.Bundle) -> setArguments
    3359:3359:void setFocusedView(android.view.View) -> setFocusedView
    3384:3384:void setHideReplaced(boolean) -> setHideReplaced
    3267:3270:void setNextAnim(int) -> setNextAnim
    3281:3285:void setNextTransition(int) -> setNextTransition
    3236:3248:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    3348:3348:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    3306:3308:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    2732:2746:void startPostponedEnterTransition() -> startPostponedEnterTransition
    678:696:java.lang.String toString() -> toString
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    256:256:void <init>(androidx.fragment.app.Fragment) -> <init>
    259:259:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    2739:2739:void <init>(androidx.fragment.app.Fragment) -> <init>
    2742:2742:void run() -> run
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2778:2778:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2781:2781:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2886:2886:void <init>(androidx.fragment.app.Fragment) -> <init>
    2890:2894:android.view.View onFindViewById(int) -> onFindViewById
    2899:2899:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    2926:2926:void <init>(androidx.fragment.app.Fragment) -> <init>
    2930:2932:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    3510:3543:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    516:516:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
    306:306:void <init>() -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    490:490:void <clinit>() -> <clinit>
    472:475:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    486:486:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    491:491:void <init>() -> <init>
    491:491:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    491:491:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    494:494:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    499:499:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    491:491:java.lang.Object[] newArray(int) -> newArray
    504:504:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    84:104:void <init>() -> <init>
    313:313:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    532:545:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    578:578:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    125:140:void init() -> init
    791:791:void markFragmentsCreated() -> markFragmentsCreated
    797:812:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    163:164:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    259:261:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:272:void onCreate(android.os.Bundle) -> onCreate
    281:285:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    292:294:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    303:305:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    321:323:void onDestroy() -> onDestroy
    331:332:void onLowMemory() -> onLowMemory
    340:349:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    235:235:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    391:392:void onNewIntent(android.content.Intent) -> onNewIntent
    362:364:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    372:375:void onPause() -> onPause
    251:251:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    422:423:void onPostResume() -> onPostResume
    459:459:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    444:448:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    603:604:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    411:414:void onResume() -> onResume
    433:434:void onResumeFragments() -> onResumeFragments
    467:482:void onStart() -> onStart
    401:401:void onStateNotSaved() -> onStateNotSaved
    490:496:void onStop() -> onStop
    515:515:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
    126:126:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    130:135:android.os.Bundle saveState() -> saveState
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.FragmentActivity$2:
    140:140:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    143:149:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    692:693:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    784:784:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    703:703:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    715:715:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    709:709:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    766:766:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    772:772:android.view.View onFindViewById(int) -> onFindViewById
    687:687:java.lang.Object onGetHost() -> onGetHost
    737:737:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    732:732:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    777:778:boolean onHasView() -> onHasView
    726:726:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    742:742:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
    130:193:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback) -> animateRemoveFragment
    46:112:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean) -> loadAnimation
    202:208:int transitToAnimResourceId(int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$1 -> androidx.fragment.app.FragmentAnim$1:
    134:134:void <init>(androidx.fragment.app.Fragment) -> <init>
    137:142:void onCancel() -> onCancel
androidx.fragment.app.FragmentAnim$2 -> androidx.fragment.app.FragmentAnim$2:
    150:150:void <init>(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    160:160:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$2$1 -> androidx.fragment.app.FragmentAnim$2$1:
    160:160:void <init>(androidx.fragment.app.FragmentAnim$2) -> <init>
    163:165:void run() -> run
androidx.fragment.app.FragmentAnim$3 -> androidx.fragment.app.FragmentAnim$3:
    179:179:void <init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    182:188:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
    221:225:void <init>(android.view.animation.Animation) -> <init>
    229:233:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
    249:259:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    264:271:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    279:286:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    293:299:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
    105:178:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    373:377:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    286:291:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    304:309:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    229:234:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    239:246:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    262:269:void endViewTransition(android.view.View) -> endViewTransition
    219:222:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    351:355:void removeAllViewsInLayout() -> removeAllViewsInLayout
    361:363:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    327:328:void removeView(android.view.View) -> removeView
    314:316:void removeViewAt(int) -> removeViewAt
    321:322:void removeViewInLayout(android.view.View) -> removeViewInLayout
    334:337:void removeViews(int,int) -> removeViews
    343:346:void removeViewsInLayout(int,int) -> removeViewsInLayout
    274:274:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    197:205:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    251:257:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:61:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:116:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    251:251:void dispatchActivityCreated() -> dispatchActivityCreated
    367:367:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    429:429:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    240:240:void dispatchCreate() -> dispatchCreate
    391:391:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    334:334:void dispatchDestroy() -> dispatchDestroy
    379:379:void dispatchLowMemory() -> dispatchLowMemory
    345:345:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    416:416:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    440:440:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    284:284:void dispatchPause() -> dispatchPause
    356:356:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    403:403:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    273:273:void dispatchResume() -> dispatchResume
    262:262:void dispatchStart() -> dispatchStart
    295:295:void dispatchStop() -> dispatchStop
    451:451:boolean execPendingActions() -> execPendingActions
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    142:142:void noteStateNotSaved() -> noteStateNotSaved
    134:135:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    193:198:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    152:152:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    70:71:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:54:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    91:91:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    81:99:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    242:242:android.app.Activity getActivity() -> getActivity
    247:247:android.content.Context getContext() -> getContext
    252:252:android.os.Handler getHandler() -> getHandler
    128:128:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
    36:37:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    44:44:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    51:173:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
    158:158:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    161:166:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    46:54:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:163:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:115:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:146:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:280:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:294:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:222:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:100:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:130:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:208:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:251:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:194:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:236:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:179:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:266:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    97:524:void <init>() -> <init>
    97:97:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    97:97:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    97:97:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2476:2485:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2591:2594:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    853:856:void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> addCancellationSignal
    1728:1739:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3523:3523:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    2935:3043:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1810:1817:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    578:578:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    1505:1512:void cancelExitAnimation(androidx.fragment.app.Fragment) -> cancelExitAnimation
    3553:3555:boolean checkForMenus() -> checkForMenus
    1863:1864:void checkStateLoss() -> checkStateLoss
    2007:2009:void cleanupExec() -> cleanupExec
    894:894:void clearFragmentResult(java.lang.String) -> clearFragmentResult
    2530:2536:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    2260:2268:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    2366:2396:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1556:1601:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1714:1723:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1530:1538:void destroyFragmentView(androidx.fragment.app.Fragment) -> destroyFragmentView
    1794:1804:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3175:3178:void dispatchActivityCreated() -> dispatchActivityCreated
    3157:3160:void dispatchAttach() -> dispatchAttach
    3264:3266:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3341:3346:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3164:3167:void dispatchCreate() -> dispatchCreate
    3280:3306:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3210:3226:void dispatchDestroy() -> dispatchDestroy
    3206:3206:void dispatchDestroyView() -> dispatchDestroyView
    3272:3274:void dispatchLowMemory() -> dispatchLowMemory
    3248:3250:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3533:3534:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3327:3332:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3355:3360:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3378:3379:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    3196:3196:void dispatchPause() -> dispatchPause
    3256:3258:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3312:3318:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3384:3386:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    3189:3192:void dispatchResume() -> dispatchResume
    3182:3185:void dispatchStart() -> dispatchStart
    3232:3244:void dispatchStateChange(int) -> dispatchStateChange
    3200:3202:void dispatchStop() -> dispatchStop
    3171:3171:void dispatchViewCreated() -> dispatchViewCreated
    2576:2578:void doPendingDeferredStart() -> doPendingDeferredStart
    1228:1307:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2514:2523:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1950:1979:void ensureExecReady(boolean) -> ensureExecReady
    2016:2031:boolean execPendingActions(boolean) -> execPendingActions
    1983:1999:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    2414:2424:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2140:2254:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    2042:2068:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1859:1859:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    2689:2726:int findBackStackIndex(java.lang.String,int,boolean) -> findBackStackIndex
    1833:1833:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1850:1850:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1854:1854:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2495:2503:void forcePostponedTransactions() -> forcePostponedTransactions
    2555:2571:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    817:817:int getBackStackEntryCount() -> getBackStackEntryCount
    1120:1120:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2923:2923:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    2448:2463:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3440:3450:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    2928:2928:androidx.fragment.app.FragmentStore getFragmentStore() -> getFragmentStore
    1110:1110:java.util.List getFragments() -> getFragments
    2913:2913:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3593:3593:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3488:3488:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2918:2918:androidx.fragment.app.Fragment getParent() -> getParent
    3403:3403:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3473:3483:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    1033:1035:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1115:1115:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    664:675:void handleOnBackPressed() -> handleOnBackPressed
    1767:1773:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3569:3570:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1189:1189:boolean isDestroyed() -> isDestroyed
    142:142:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3565:3565:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    655:655:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    636:643:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1329:1329:boolean isStateAtLeast(int) -> isStateAtLeast
    1884:1884:boolean isStateSaved() -> isStateSaved
    2285:2291:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1611:1642:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1334:1498:void moveToState(androidx.fragment.app.Fragment,int) -> moveToState
    1542:1542:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1656:1693:void moveToState(int,boolean) -> moveToState
    3084:3092:void noteStateNotSaved() -> noteStateNotSaved
    1042:1048:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    1312:1323:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    712:712:boolean popBackStackImmediate() -> popBackStackImmediate
    784:809:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2661:2667:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2313:2341:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    867:874:void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> removeCancellationSignal
    1746:1756:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    2090:2126:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2583:2585:void reportBackStackChanged() -> reportBackStackChanged
    2816:2908:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    2755:2799:android.os.Parcelable saveAllState() -> saveAllState
    1927:1936:void scheduleCommit() -> scheduleCommit
    1521:1524:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3407:3412:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3366:3374:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2436:2442:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1784:1789:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1699:1700:void startPendingDeferredFragments() -> startPendingDeferredFragments
    1195:1215:java.lang.String toString() -> toString
    612:622:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
    434:434:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    437:437:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
    3019:3019:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    3019:3019:void onActivityResult(java.lang.Object) -> onActivityResult
    3022:3039:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.FragmentManager$11:
    3045:3045:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    3045:3045:void onActivityResult(java.lang.Object) -> onActivityResult
    3049:3073:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
    452:452:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    461:462:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onComplete
    456:456:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onStart
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
    479:479:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    484:484:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
    489:489:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    493:493:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
    524:524:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    527:527:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    911:924:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
    1570:1570:void <init>(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1573:1576:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
    2943:2943:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2948:2948:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
    2991:2991:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2991:2991:void onActivityResult(java.lang.Object) -> onActivityResult
    2994:3012:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
    3797:3797:void <init>() -> <init>
    3797:3797:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3828:3828:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
    3783:3783:void <clinit>() -> <clinit>
    3767:3769:void <init>(android.os.Parcel) -> <init>
    3779:3780:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
    3784:3784:void <init>() -> <init>
    3784:3784:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3787:3787:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3784:3784:java.lang.Object[] newArray(int) -> newArray
    3792:3792:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
    3694:3696:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3753:3753:void cancelTransaction() -> cancelTransaction
    3737:3745:void completeTransaction() -> completeTransaction
    3727:3727:boolean isReady() -> isReady
    3706:3710:void onStartEnterTransition() -> onStartEnterTransition
    3720:3720:void startListening() -> startListening
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    68:68:void <clinit>() -> <clinit>
    32:37:void <init>() -> <init>
    32:48:void <init>(android.os.Parcel) -> <init>
    58:65:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    77:77:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    57:87:void <init>(boolean) -> <init>
    112:123:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:200:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    275:281:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:171:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    178:181:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    286:288:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:104:void onCleared() -> onCleared
    154:162:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    96:96:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    295:322:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:45:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    165:165:void <clinit>() -> <clinit>
    44:56:void <init>(androidx.fragment.app.Fragment) -> <init>
    59:72:void <init>(android.os.Parcel) -> <init>
    81:103:androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> instantiate
    111:140:java.lang.String toString() -> toString
    150:162:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    166:166:void <init>() -> <init>
    166:166:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    169:169:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    166:166:java.lang.Object[] newArray(int) -> newArray
    174:174:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
    50:64:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    50:86:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    50:119:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    553:557:void activityCreated() -> activityCreated
    808:809:void addViewToContainer() -> addViewToContainer
    404:441:void attach() -> attach
    146:227:int computeExpectedState() -> computeExpectedState
    445:456:void create() -> create
    461:549:void createView() -> createView
    730:780:void destroy() -> destroy
    709:726:void destroyFragmentView() -> destroyFragmentView
    785:800:void detach() -> detach
    358:371:void ensureInflatedView() -> ensureInflatedView
    125:125:androidx.fragment.app.Fragment getFragment() -> getFragment
    591:599:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    234:354:void moveToExpectedState() -> moveToExpectedState
    605:609:void pause() -> pause
    377:399:void restoreState(java.lang.ClassLoader) -> restoreState
    570:587:void resume() -> resume
    657:686:android.os.Bundle saveBasicState() -> saveBasicState
    622:642:androidx.fragment.app.FragmentState saveState() -> saveState
    693:704:void saveViewState() -> saveViewState
    135:135:void setFragmentManagerState(int) -> setFragmentManagerState
    562:566:void start() -> start
    613:617:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
    510:510:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    513:514:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
    153:153:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
    34:38:void <init>() -> <init>
    90:96:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    164:167:void burpActive() -> burpActive
    292:292:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    100:102:void dispatchStateChange(int) -> dispatchStateChange
    372:398:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    315:317:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    248:258:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    270:282:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    302:305:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    340:362:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    208:211:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    230:235:java.util.List getActiveFragments() -> getActiveFragments
    297:297:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    220:225:java.util.List getFragments() -> getFragments
    47:47:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    71:85:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    139:154:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    109:125:void moveToExpectedState() -> moveToExpectedState
    132:135:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    51:51:void resetActiveFragments() -> resetActiveFragments
    55:65:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    172:181:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    190:203:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    43:43:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    114:114:void <clinit>() -> <clinit>
    96:97:void <init>(android.os.Parcel) -> <init>
    109:110:java.lang.String toString() -> toString
    102:103:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    105:139:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    245:245:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    251:252:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    143:147:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    693:697:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    256:287:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    793:793:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    74:74:void <init>() -> <init>
    77:82:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    85:90:void <init>(int,androidx.fragment.app.Fragment,boolean) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    48:81:void <clinit>() -> <clinit>
    695:698:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1173:1259:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1125:1128:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    187:212:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1142:1148:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    1030:1031:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    518:519:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    889:931:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    831:866:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    472:512:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1054:1064:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    738:783:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    609:671:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    354:414:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsOrdered
    237:294:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsReordered
    1272:1273:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    557:559:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    570:572:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    962:969:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    543:546:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1092:1108:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    307:328:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    86:88:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    1007:1010:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    441:441:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    986:995:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1077:1079:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    127:161:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    275:275:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    278:278:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    328:328:void <init>(java.util.ArrayList) -> <init>
    331:331:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    396:396:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    399:399:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    441:441:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    444:460:void run() -> run
androidx.fragment.app.FragmentTransition$5 -> androidx.fragment.app.FragmentTransition$5:
    671:671:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    674:677:void run() -> run
androidx.fragment.app.FragmentTransition$6 -> androidx.fragment.app.FragmentTransition$6:
    783:783:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    786:804:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1282:1282:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    34:34:void <init>() -> <init>
    332:333:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:111:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:216:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    45:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    189:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    340:341:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    305:323:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:146:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:225:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    79:83:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    348:349:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:271:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:73:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:298:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    55:56:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:165:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    155:156:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    241:241:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    228:235:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    277:277:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    45:45:void <init>() -> <init>
    358:371:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    219:232:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    384:384:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    403:405:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    242:252:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    82:107:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    395:395:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    160:165:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    339:339:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    302:302:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    263:263:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    179:199:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    199:199:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    202:204:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    263:263:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    266:272:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    339:339:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    342:347:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    29:31:void <init>() -> <init>
    53:54:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    68:68:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    62:62:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    37:39:void initialize() -> initialize
    47:47:boolean isInitialized() -> isInitialized
    72:72:void performRestore(android.os.Bundle) -> performRestore
    76:76:void performSave(android.os.Bundle) -> performSave
    58:58:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
    25:31:void <init>(java.lang.String) -> <init>
    35:35:void close() -> close
    39:39:void flush() -> flush
    55:57:void flushBuilder() -> flushBuilder
    44:49:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
    84:93:void <init>(android.view.ViewGroup) -> <init>
    190:221:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    152:157:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    170:175:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    179:184:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    161:166:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    257:297:void executePendingOperations() -> executePendingOperations
    132:133:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    142:143:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    301:331:void forceCompleteAllOperations() -> forceCompleteAllOperations
    250:252:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    118:125:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    55:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:78:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    229:246:void markPostponedState() -> markPostponedState
    335:341:void updateFinalState() -> updateFinalState
    225:225:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
    204:204:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    207:208:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
    214:214:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    217:218:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
    441:604:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
    705:707:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    741:742:void complete() -> complete
    712:735:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
    502:524:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    642:642:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    589:598:void cancel() -> cancel
    683:692:void complete() -> complete
    668:669:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    539:539:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    558:558:androidx.fragment.app.Fragment getFragment() -> getFragment
    549:549:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    562:562:boolean isCanceled() -> isCanceled
    674:674:boolean isComplete() -> isComplete
    656:657:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    604:636:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    568:585:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
    524:524:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    527:527:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
    481:493:void <clinit>() -> <clinit>
    481:481:void <init>(java.lang.String,int) -> <init>
    481:481:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    481:481:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
    382:398:void <clinit>() -> <clinit>
    382:382:void <init>(java.lang.String,int) -> <init>
    441:472:void applyState(android.view.View) -> applyState
    409:412:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    425:431:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    382:382:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    382:382:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:23:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    36:67:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    71:71:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    36:67:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    71:71:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    36:67:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    71:71:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    38:46:float interpolate(float[],float,float) -> interpolate
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    105:160:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    81:85:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:64:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    91:100:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    169:179:void <init>(java.util.Map) -> <init>
    185:186:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    193:194:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    205:208:void <init>(int,java.lang.reflect.Method) -> <init>
    237:242:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
    214:228:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    26:27:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    32:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    27:29:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    34:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    79:86:void <init>() -> <init>
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.Lifecycle$1:
    169:258:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    128:157:void <clinit>() -> <clinit>
    129:129:void <init>(java.lang.String,int) -> <init>
    169:175:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    258:272:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
    213:219:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    128:128:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    128:128:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    280:320:void <clinit>() -> <clinit>
    281:281:void <init>(java.lang.String,int) -> <init>
    329:329:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    280:280:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    280:280:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    91:91:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    51:97:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    172:206:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    272:285:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    162:167:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    335:335:androidx.lifecycle.LifecycleRegistry createUnsafe(androidx.lifecycle.LifecycleOwner) -> createUnsafe
    315:317:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    253:266:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    249:249:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    133:134:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    153:158:boolean isSynced() -> isSynced
    109:110:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    339:339:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    138:149:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    210:210:void popParentState() -> popParentState
    214:214:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    219:232:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    120:121:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    293:310:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    346:348:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    352:355:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    105:111:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    119:138:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    207:207:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    143:148:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    200:200:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    68:98:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    154:192:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    61:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    60:112:void <init>() -> <init>
    486:487:void assertMainThread(java.lang.String) -> assertMainThread
    378:397:void changeActiveCounter(int) -> changeActiveCounter
    117:133:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:158:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    244:250:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    306:309:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:93:void run() -> run
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    437:437:void detachObserver() -> detachObserver
    417:426:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    411:411:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    460:468:void activeStateChanged(boolean) -> activeStateChanged
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    40:40:void <init>() -> <init>
    50:50:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    30:32:void <init>(java.lang.Object) -> <init>
    37:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    37:37:void <init>() -> <init>
    60:68:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch
    140:144:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    82:82:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    94:94:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    88:88:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    42:54:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    100:102:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    133:136:void onDestroy() -> onDestroy
    121:122:void onPause() -> onPause
    114:116:void onResume() -> onResume
    107:109:void onStart() -> onStart
    127:128:void onStop() -> onStop
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
    164:164:void <init>() -> <init>
    178:178:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    196:196:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    187:187:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    224:224:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    201:201:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    210:210:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    167:167:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    98:102:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    45:50:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    41:41:boolean isAttached() -> isAttached
    55:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    107:111:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
    111:111:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    115:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$OnRecreation:
    75:75:void <init>() -> <init>
    79:91:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    25:26:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    31:32:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    107:111:void <init>() -> <init>
    125:138:void clear() -> clear
    186:190:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    177:182:java.lang.Object getTag(java.lang.String) -> getTag
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    125:127:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    146:150:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    171:189:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    65:65:void <init>() -> <init>
    81:81:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
    54:54:void <init>() -> <init>
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:64:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:45:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
    49:49:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
    50:50:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    43:43:void <init>() -> <init>
    131:131:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    381:383:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    518:518:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    44:44:boolean isLoggingEnabled(int) -> isLoggingEnabled
    496:496:void markForRedelivery() -> markForRedelivery
    502:511:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    152:154:androidx.loader.content.Loader destroy(boolean) -> destroy
    220:223:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    79:80:void onActive() -> onActive
    85:86:void onInactive() -> onInactive
    137:139:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    192:192:void setValue(java.lang.Object) -> setValue
    203:209:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    290:290:void <clinit>() -> <clinit>
    289:305:void <init>() -> <init>
    364:371:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    301:301:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    344:347:void markForRedelivery() -> markForRedelivery
    353:359:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    290:290:void <init>() -> <init>
    295:295:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.preference.CheckBoxPreference -> androidx.preference.CheckBoxPreference:
    45:45:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    42:64:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    67:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    90:91:void performClick(android.view.View) -> performClick
    109:116:void syncCheckboxView(android.view.View) -> syncCheckboxView
    96:105:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.CheckBoxPreference$Listener -> androidx.preference.CheckBoxPreference$Listener:
    121:121:void <init>(androidx.preference.CheckBoxPreference) -> <init>
    125:131:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.DialogPreference -> androidx.preference.DialogPreference:
    52:83:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    87:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    91:91:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    257:257:void onClick() -> onClick
androidx.preference.DropDownPreference -> androidx.preference.DropDownPreference:
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    40:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    99:99:android.widget.ArrayAdapter createAdapter() -> createAdapter
    119:123:void notifyChanged() -> notifyChanged
    80:80:void onClick() -> onClick
    104:107:void updateEntries() -> updateEntries
androidx.preference.DropDownPreference$1 -> androidx.preference.DropDownPreference$1:
    40:40:void <init>(androidx.preference.DropDownPreference) -> <init>
    44:46:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.preference.EditTextPreference -> androidx.preference.EditTextPreference:
    44:54:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    58:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:96:java.lang.String getText() -> getText
    101:101:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    111:111:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.EditTextPreference$SavedState -> androidx.preference.EditTextPreference$SavedState:
    181:181:void <clinit>() -> <clinit>
    197:198:void <init>(android.os.Parcel) -> <init>
    207:208:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.EditTextPreference$SavedState$1 -> androidx.preference.EditTextPreference$SavedState$1:
    182:182:void <init>() -> <init>
    182:182:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    185:185:androidx.preference.EditTextPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    182:182:java.lang.Object[] newArray(int) -> newArray
    190:190:androidx.preference.EditTextPreference$SavedState[] newArray(int) -> newArray
androidx.preference.EditTextPreference$SimpleSummaryProvider -> androidx.preference.EditTextPreference$SimpleSummaryProvider:
    221:221:void <init>() -> <init>
    231:234:androidx.preference.EditTextPreference$SimpleSummaryProvider getInstance() -> getInstance
    217:217:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> provideSummary
    239:242:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference) -> provideSummary
androidx.preference.ListPreference -> androidx.preference.ListPreference:
    49:74:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    78:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:82:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    223:225:int findIndexOfValue(java.lang.String) -> findIndexOfValue
    117:117:java.lang.CharSequence[] getEntries() -> getEntries
    212:213:java.lang.CharSequence getEntry() -> getEntry
    145:145:java.lang.CharSequence[] getEntryValues() -> getEntryValues
    161:173:java.lang.CharSequence getSummary() -> getSummary
    203:203:java.lang.String getValue() -> getValue
    245:245:int getValueIndex() -> getValueIndex
    250:250:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    186:192:void setValue(java.lang.String) -> setValue
androidx.preference.ListPreference$SavedState -> androidx.preference.ListPreference$SavedState:
    285:285:void <clinit>() -> <clinit>
    301:302:void <init>(android.os.Parcel) -> <init>
    311:312:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.ListPreference$SavedState$1 -> androidx.preference.ListPreference$SavedState$1:
    286:286:void <init>() -> <init>
    286:286:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    289:289:androidx.preference.ListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    286:286:java.lang.Object[] newArray(int) -> newArray
    294:294:androidx.preference.ListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.ListPreference$SimpleSummaryProvider -> androidx.preference.ListPreference$SimpleSummaryProvider:
    325:325:void <init>() -> <init>
    335:338:androidx.preference.ListPreference$SimpleSummaryProvider getInstance() -> getInstance
    321:321:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> provideSummary
    343:346:java.lang.CharSequence provideSummary(androidx.preference.ListPreference) -> provideSummary
androidx.preference.MultiSelectListPreference -> androidx.preference.MultiSelectListPreference:
    46:64:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    72:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    193:197:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
androidx.preference.MultiSelectListPreference$SavedState -> androidx.preference.MultiSelectListPreference$SavedState:
    236:236:void <clinit>() -> <clinit>
    252:258:void <init>(android.os.Parcel) -> <init>
    267:269:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.MultiSelectListPreference$SavedState$1 -> androidx.preference.MultiSelectListPreference$SavedState$1:
    237:237:void <init>() -> <init>
    237:237:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    240:240:androidx.preference.MultiSelectListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    237:237:java.lang.Object[] newArray(int) -> newArray
    245:245:androidx.preference.MultiSelectListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.Preference -> androidx.preference.Preference:
    127:277:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    297:297:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    312:312:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1120:1120:boolean callChangeListener(java.lang.Object) -> callChangeListener
    91:91:int compareTo(java.lang.Object) -> compareTo
    1246:1258:int compareTo(androidx.preference.Preference) -> compareTo
    1214:1214:android.content.Context getContext() -> getContext
    1975:1986:java.lang.StringBuilder getFilterableStringBuilder() -> getFilterableStringBuilder
    376:376:java.lang.String getFragment() -> getFragment
    358:358:android.content.Intent getIntent() -> getIntent
    1948:1957:boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    1786:1795:int getPersistedInt(int) -> getPersistedInt
    1679:1688:java.lang.String getPersistedString(java.lang.String) -> getPersistedString
    1297:1297:androidx.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    734:737:java.lang.CharSequence getSummary() -> getSummary
    1109:1109:androidx.preference.Preference$SummaryProvider getSummaryProvider() -> getSummaryProvider
    682:682:java.lang.CharSequence getTitle() -> getTitle
    977:977:boolean hasKey() -> hasKey
    796:796:boolean isEnabled() -> isEnabled
    817:817:boolean isSelectable() -> isSelectable
    1276:1277:void notifyChanged() -> notifyChanged
    1466:1474:void notifyDependencyChange(boolean) -> notifyDependencyChange
    1485:1491:void onDependencyChanged(androidx.preference.Preference,boolean) -> onDependencyChanged
    1502:1508:void onParentChanged(androidx.preference.Preference,boolean) -> onParentChanged
    1168:1168:void performClick(android.view.View) -> performClick
    1180:1201:void performClick() -> performClick
    1918:1931:boolean persistBoolean(boolean) -> persistBoolean
    1756:1769:boolean persistInt(int) -> persistInt
    1649:1663:boolean persistString(java.lang.String) -> persistString
    1095:1096:void setSummaryProvider(androidx.preference.Preference$SummaryProvider) -> setSummaryProvider
    1518:1518:boolean shouldDisableDependents() -> shouldDisableDependents
    1962:1962:java.lang.String toString() -> toString
androidx.preference.Preference$1 -> androidx.preference.Preference$1:
    178:178:void <init>(androidx.preference.Preference) -> <init>
    181:181:void onClick(android.view.View) -> onClick
androidx.preference.Preference$BaseSavedState -> androidx.preference.Preference$BaseSavedState:
    2196:2196:void <clinit>() -> <clinit>
    2210:2210:void <init>(android.os.Parcel) -> <init>
androidx.preference.Preference$BaseSavedState$1 -> androidx.preference.Preference$BaseSavedState$1:
    2197:2197:void <init>() -> <init>
    2197:2197:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2200:2200:androidx.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2197:2197:java.lang.Object[] newArray(int) -> newArray
    2205:2205:androidx.preference.Preference$BaseSavedState[] newArray(int) -> newArray
androidx.preference.PreferenceCategory -> androidx.preference.PreferenceCategory:
    43:43:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    47:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:66:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.PreferenceGroup -> androidx.preference.PreferenceGroup:
    58:99:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    103:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    107:107:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    190:190:androidx.preference.Preference getPreference(int) -> getPreference
    180:180:int getPreferenceCount() -> getPreferenceCount
    474:480:void notifyDependencyChange(boolean) -> notifyDependencyChange
    150:154:void setInitialExpandedChildrenCount(int) -> setInitialExpandedChildrenCount
androidx.preference.PreferenceGroup$1 -> androidx.preference.PreferenceGroup$1:
    73:73:void <init>(androidx.preference.PreferenceGroup) -> <init>
    76:78:void run() -> run
androidx.preference.PreferenceGroup$SavedState -> androidx.preference.PreferenceGroup$SavedState:
    577:577:void <clinit>() -> <clinit>
    593:594:void <init>(android.os.Parcel) -> <init>
    604:605:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.PreferenceGroup$SavedState$1 -> androidx.preference.PreferenceGroup$SavedState$1:
    578:578:void <init>() -> <init>
    578:578:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    581:581:androidx.preference.PreferenceGroup$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    578:578:java.lang.Object[] newArray(int) -> newArray
    586:586:androidx.preference.PreferenceGroup$SavedState[] newArray(int) -> newArray
androidx.preference.PreferenceScreen -> androidx.preference.PreferenceScreen:
    42:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:63:void onClick() -> onClick
androidx.preference.R$styleable -> androidx.preference.R$styleable:
    9446:19557:void <clinit>() -> <clinit>
androidx.preference.SeekBarPreference -> androidx.preference.SeekBarPreference:
    74:148:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    152:152:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:156:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    207:207:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    274:279:void setMax(int) -> setMax
    253:255:void setSeekBarIncrement(int) -> setSeekBarIncrement
    348:360:void setValueInternal(int,boolean) -> setValueInternal
    389:395:void syncValueInternal(android.widget.SeekBar) -> syncValueInternal
    407:408:void updateLabelValue(int) -> updateLabelValue
androidx.preference.SeekBarPreference$1 -> androidx.preference.SeekBarPreference$1:
    74:74:void <init>(androidx.preference.SeekBarPreference) -> <init>
    77:81:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    87:87:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    92:94:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
androidx.preference.SeekBarPreference$2 -> androidx.preference.SeekBarPreference$2:
    104:104:void <init>(androidx.preference.SeekBarPreference) -> <init>
    107:127:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.preference.SeekBarPreference$SavedState -> androidx.preference.SeekBarPreference$SavedState:
    451:451:void <clinit>() -> <clinit>
    469:474:void <init>(android.os.Parcel) -> <init>
    483:488:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.SeekBarPreference$SavedState$1 -> androidx.preference.SeekBarPreference$SavedState$1:
    452:452:void <init>() -> <init>
    452:452:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    455:455:androidx.preference.SeekBarPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    452:452:java.lang.Object[] newArray(int) -> newArray
    460:460:androidx.preference.SeekBarPreference$SavedState[] newArray(int) -> newArray
androidx.preference.SwitchPreference -> androidx.preference.SwitchPreference:
    45:88:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    101:101:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    111:111:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    195:196:void performClick(android.view.View) -> performClick
    151:152:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    140:141:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    214:225:void syncSwitchView(android.view.View) -> syncSwitchView
    201:210:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreference$Listener -> androidx.preference.SwitchPreference$Listener:
    230:230:void <init>(androidx.preference.SwitchPreference) -> <init>
    234:241:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.SwitchPreferenceCompat -> androidx.preference.SwitchPreferenceCompat:
    45:88:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    101:101:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    111:111:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    193:194:void performClick(android.view.View) -> performClick
    149:150:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    138:139:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    212:223:void syncSwitchView(android.view.View) -> syncSwitchView
    199:208:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreferenceCompat$Listener -> androidx.preference.SwitchPreferenceCompat$Listener:
    228:228:void <init>(androidx.preference.SwitchPreferenceCompat) -> <init>
    232:239:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.TwoStatePreference -> androidx.preference.TwoStatePreference:
    47:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:78:boolean isChecked() -> isChecked
    64:68:void onClick() -> onClick
    193:193:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    88:95:void setChecked(boolean) -> setChecked
    188:188:void setDisableDependentsState(boolean) -> setDisableDependentsState
    147:149:void setSummaryOff(java.lang.CharSequence) -> setSummaryOff
    115:117:void setSummaryOn(java.lang.CharSequence) -> setSummaryOn
    102:103:boolean shouldDisableDependents() -> shouldDisableDependents
    220:245:void syncSummaryView(android.view.View) -> syncSummaryView
androidx.preference.TwoStatePreference$SavedState -> androidx.preference.TwoStatePreference$SavedState:
    276:276:void <clinit>() -> <clinit>
    292:293:void <init>(android.os.Parcel) -> <init>
    302:303:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.TwoStatePreference$SavedState$1 -> androidx.preference.TwoStatePreference$SavedState$1:
    277:277:void <init>() -> <init>
    277:277:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    280:280:androidx.preference.TwoStatePreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    277:277:java.lang.Object[] newArray(int) -> newArray
    285:285:androidx.preference.TwoStatePreference$SavedState[] newArray(int) -> newArray
androidx.preference.UnPressableLinearLayout -> androidx.preference.UnPressableLinearLayout:
    39:39:void <init>(android.content.Context) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.preference.internal.PreferenceImageView -> androidx.preference.internal.PreferenceImageView:
    45:45:void <init>(android.content.Context) -> <init>
    49:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:64:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:86:int getMaxHeight() -> getMaxHeight
    75:75:int getMaxWidth() -> getMaxWidth
    91:111:void onMeasure(int,int) -> onMeasure
    80:81:void setMaxHeight(int) -> setMaxHeight
    69:70:void setMaxWidth(int) -> setMaxWidth
androidx.recyclerview.R$styleable -> androidx.recyclerview.R$styleable:
    9446:19557:void <clinit>() -> <clinit>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:72:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:78:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:432:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:130:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:613:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:183:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:223:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:422:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:124:void consumePostponedUpdates() -> consumePostponedUpdates
    557:584:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:302:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:324:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:493:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    727:734:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    439:455:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:115:void preProcess() -> preProcess
    741:743:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:752:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:89:void reset() -> reset
    330:404:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:655:void <init>(int,int,int,java.lang.Object) -> <init>
    659:659:java.lang.String cmdToString() -> cmdToString
    684:709:boolean equals(java.lang.Object) -> equals
    718:720:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:51:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    282:284:void detachViewFromParent(int) -> detachViewFromParent
    206:212:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    117:123:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:193:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    160:168:void removeViewAt(int) -> removeViewAt
    373:386:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:358:void unhide(android.view.View) -> unhide
    70:71:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    422:426:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:416:void ensureNext() -> ensureNext
    433:436:boolean get(int) -> get
    471:486:boolean remove(int) -> remove
    441:443:void reset() -> reset
    407:410:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:55:void <init>() -> <init>
    229:251:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    348:395:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    278:315:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    199:217:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:642:void cancelAll(java.util.List) -> cancelAll
    550:551:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:518:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:637:void endAnimations() -> endAnimations
    400:404:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:415:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    420:431:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    102:186:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:129:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:152:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:175:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:215:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:206:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:241:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:249:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:236:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:304:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:313:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:295:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:372:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:361:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:393:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:383:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:160:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:172:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:258:void cancelHide() -> cancelHide
    183:186:void destroyCallbacks() -> destroyCallbacks
    316:328:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:311:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:543:int[] getHorizontalRange() -> getHorizontalRange
    516:516:android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> getHorizontalThumbDrawable
    511:511:android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> getHorizontalTrackDrawable
    533:534:int[] getVerticalRange() -> getVerticalRange
    526:526:android.graphics.drawable.Drawable getVerticalThumbDrawable() -> getVerticalThumbDrawable
    521:521:android.graphics.drawable.Drawable getVerticalTrackDrawable() -> getVerticalTrackDrawable
    244:252:void hide(int) -> hide
    461:474:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    224:224:boolean isVisible() -> isVisible
    268:285:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:394:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    409:437:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:191:void requestRedraw() -> requestRedraw
    262:263:void resetHideDelay(int) -> resetHideDelay
    479:479:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:212:void setState(int) -> setState
    177:179:void setupCallbacks() -> setupCallbacks
    228:237:void show() -> show
    446:457:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:126:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    549:551:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:572:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:566:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    577:577:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:585:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:163:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:261:void buildTaskList() -> buildTaskList
    344:351:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:362:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:270:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:187:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:368:void prefetch(long) -> prefetch
    316:339:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:306:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:167:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:405:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:208:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    65:65:void <init>() -> <init>
    152:155:void clearPrefetchPositions() -> clearPrefetchPositions
    79:84:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:142:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:75:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    38:38:void <init>() -> <init>
    46:50:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    44:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    1223:1226:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1205:1208:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1314:1352:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1281:1305:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1232:1235:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1214:1217:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    467:479:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    147:161:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:201:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:207:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:226:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:213:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:220:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    824:834:void setSpanCount(int) -> setSpanCount
    109:113:void setStackFromEnd(boolean) -> setStackFromEnd
    1200:1200:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1358:1358:void <init>() -> <init>
    1367:1367:int getSpanIndex(int,int) -> getSpanIndex
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1385:1390:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1394:void <init>(int,int) -> <init>
    1385:1398:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1385:1402:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1424:1424:int getSpanIndex() -> getSpanIndex
    1434:1434:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    844:850:void <init>() -> <init>
    1008:1023:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    940:948:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    927:935:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1042:1057:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    905:905:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    897:897:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation:
    2477:2477:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2469:2472:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2442:2442:void setFraction(float) -> setFraction
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:72:void <init>() -> <init>
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    67:187:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1413:1414:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    298:298:boolean canScrollHorizontally() -> canScrollHorizontally
    306:306:boolean canScrollVertically() -> canScrollVertically
    1151:1151:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1141:1141:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1161:1161:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1181:1187:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1170:1176:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1192:1198:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    1156:1156:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1146:1146:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1166:1166:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1059:1059:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1048:1049:void ensureLayoutState() -> ensureLayoutState
    1805:1809:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1787:1791:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1950:1951:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1990:1991:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2017:2034:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1775:1775:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1765:1765:android.view.View getChildClosestToStart() -> getChildClosestToStart
    1229:1229:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    234:237:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    243:246:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    252:272:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    344:354:void setOrientation(int) -> setOrientation
    397:402:void setReverseLayout(boolean) -> setReverseLayout
    313:318:void setStackFromEnd(boolean) -> setStackFromEnd
    2177:2177:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2482:2483:void <init>() -> <init>
    2487:2490:void reset() -> reset
    2505:2505:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2578:2578:void <init>() -> <init>
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2220:2306:void <init>() -> <init>
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2458:2458:void <clinit>() -> <clinit>
    2422:2422:void <init>() -> <init>
    2426:2429:void <init>(android.os.Parcel) -> <init>
    2432:2435:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2443:2443:void invalidateAnchor() -> invalidateAnchor
    2453:2455:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2459:2459:void <init>() -> <init>
    2459:2459:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2462:2462:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2459:2459:java.lang.Object[] newArray(int) -> newArray
    2467:2467:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:26:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    214:216:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:34:void reorderOps(java.util.List) -> reorderOps
    157:171:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:49:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    61:149:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    179:208:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:47:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    243:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    298:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    305:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    396:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    403:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    221:617:void <clinit>() -> <clinit>
    684:684:void <init>(android.content.Context) -> <init>
    688:688:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    368:760:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2816:2840:void absorbGlows(int,int) -> absorbGlows
    212:212:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    212:212:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    3156:3157:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1640:1653:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1669:1669:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    3292:3292:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1777:1780:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    3261:3274:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4962:4963:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3701:3702:void cancelScroll() -> cancelScroll
    4788:4788:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    6158:6172:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    2232:2235:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    2207:2210:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2255:2258:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2304:2307:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2280:2283:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2327:2330:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2793:2810:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    2006:2039:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    820:864:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3869:3876:void defaultOnMeasure(int,int) -> defaultOnMeasure
    7974:7982:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3938:3944:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    4101:4101:void dispatchLayout() -> dispatchLayout
    12085:12085:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    12090:12090:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    12073:12073:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    12079:12079:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    12053:12053:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    12067:12067:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5484:5498:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    11964:11977:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    4004:4004:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1490:1490:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1482:1482:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3332:3341:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4717:4772:void draw(android.graphics.Canvas) -> draw
    5318:5318:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2885:2893:void ensureBottomGlow() -> ensureBottomGlow
    2845:2853:void ensureLeftGlow() -> ensureLeftGlow
    2858:2866:void ensureRightGlow() -> ensureRightGlow
    2871:2879:void ensureTopGlow() -> ensureTopGlow
    768:771:java.lang.String exceptionLabel() -> exceptionLabel
    5077:5080:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    3361:3366:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    5234:5246:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2648:2691:boolean fling(int,int) -> fling
    2960:3034:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4793:4796:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4801:4804:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4809:4812:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    11981:11986:int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionInRecyclerView
    1319:1322:int getBaseline() -> getBaseline
    4646:4646:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    13999:14002:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    5103:5103:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1135:1135:boolean getClipToPadding() -> getClipToPadding
    5384:5389:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    872:878:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    1547:1547:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    6183:6184:long getNanoTime() -> getNanoTime
    14028:14031:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    12042:12042:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    5517:5518:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    2047:2053:boolean hasUpdatedView() -> hasUpdatedView
    1005:1005:void initAdapterManager() -> initAdapterManager
    782:783:void initAutofill() -> initAutofill
    882:882:void initChildrenHelper() -> initChildrenHelper
    11995:12005:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2898:2898:void invalidateGlows() -> invalidateGlows
    3934:3934:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    3232:3232:boolean isAttachedToWindow() -> isAttachedToWindow
    3968:3968:boolean isComputingLayout() -> isComputingLayout
    2450:2450:boolean isLayoutSuppressed() -> isLayoutSuppressed
    12017:12017:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    3050:3100:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    4707:4712:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    1911:1954:void nestedScrollByInternal(int,int,android.view.MotionEvent,int) -> nestedScrollByInternal
    4887:4900:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4853:4883:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4906:4930:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    3173:3201:void onAttachedToWindow() -> onAttachedToWindow
    3207:3223:void onDetachedFromWindow() -> onDetachedFromWindow
    4778:4782:void onDraw(android.graphics.Canvas) -> onDraw
    3911:3911:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3915:3915:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3919:3928:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3718:3759:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3375:3482:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4691:4694:void onLayout(boolean,int,int,int,int) -> onLayout
    3768:3858:void onMeasure(int,int) -> onMeasure
    3706:3712:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    3163:3168:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1460:1474:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1446:1452:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    3881:3883:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3529:3687:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    4034:4034:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    4044:4071:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    2742:2764:void pullGlows(float,float,float,float) -> pullGlows
    4579:4585:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    2770:2787:void releaseGlows() -> releaseGlows
    2133:2148:int releaseHorizontalGlow(int,float) -> releaseHorizontalGlow
    2166:2182:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    1208:1220:void removeAndRecycleViews() -> removeAndRecycleViews
    1524:1535:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4622:4638:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1722:1731:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    3301:3303:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1789:1790:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    3105:3108:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    3123:3145:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    3151:3151:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3519:3524:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4699:4702:void requestLayout() -> requestLayout
    3693:3697:void resetScroll() -> resetScroll
    1873:1884:void scrollBy(int,int) -> scrollBy
    2077:2115:boolean scrollByInternal(int,int,android.view.MotionEvent,int) -> scrollByInternal
    1867:1867:void scrollTo(int,int) -> scrollTo
    3996:3999:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    805:806:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    11954:11959:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1112:1118:void setClipToPadding(boolean) -> setClipToPadding
    1381:1419:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2496:2519:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    12012:12012:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1611:1622:void setScrollState(int) -> setScrollState
    3980:3988:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2532:2532:void smoothScrollBy(int,int) -> smoothScrollBy
    2544:2544:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2563:2563:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2601:2630:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    2345:2347:void startInterceptRequestLayout() -> startInterceptRequestLayout
    12022:12022:boolean startNestedScroll(int) -> startNestedScroll
    12027:12027:boolean startNestedScroll(int,int) -> startNestedScroll
    3498:3511:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    2362:2392:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    12032:12032:void stopNestedScroll() -> stopNestedScroll
    12037:12037:void stopNestedScroll(int) -> stopNestedScroll
    2703:2704:void stopScroll() -> stopScroll
    2711:2713:void stopScrollersInternal() -> stopScrollersInternal
    2422:2437:void suppressLayout(boolean) -> suppressLayout
    4940:4958:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    401:401:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    404:417:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    599:599:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    602:605:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    609:609:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    646:646:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    882:882:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    969:983:void detachViewFromParent(int) -> detachViewFromParent
    927:927:android.view.View getChildAt(int) -> getChildAt
    885:885:int getChildCount() -> getChildCount
    947:947:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    902:902:int indexOfChild(android.view.View) -> indexOfChild
    996:998:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    932:942:void removeAllViews() -> removeAllViews
    907:919:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    1005:1005:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1050:1062:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    1008:1014:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1040:1041:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1074:1075:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1080:1082:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    1025:1027:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    1033:1034:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1046:1046:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1069:1069:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    12231:12231:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5885:5885:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    13263:13333:void <init>() -> <init>
    13650:13656:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13866:13866:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    13734:13736:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13874:13878:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    13359:13359:long getAddDuration() -> getAddDuration
    13395:13395:long getChangeDuration() -> getChangeDuration
    13341:13341:long getMoveDuration() -> getMoveDuration
    13377:13377:long getRemoveDuration() -> getRemoveDuration
    13892:13892:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    13454:13454:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    13416:13416:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13959:13959:void <init>() -> <init>
    13971:13971:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13987:13991:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    13221:13221:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    13226:13235:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    11100:11100:void <init>() -> <init>
    11111:11111:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    11132:11132:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    8017:8124:void <init>() -> <init>
    8331:8332:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8310:8319:int chooseSize(int,int,int) -> chooseSize
    8542:8543:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8547:8548:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8771:8776:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8795:8795:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    10158:10158:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    9358:9358:android.view.View getChildAt(int) -> getChildAt
    9347:9347:int getChildCount() -> getChildCount
    10252:10281:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    10102:10102:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    10054:10054:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    10066:10066:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    10090:10090:int getDecoratedRight(android.view.View) -> getDecoratedRight
    10078:10078:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9422:9422:int getHeight() -> getHeight
    8915:8915:int getLayoutDirection() -> getLayoutDirection
    10173:10173:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    9462:9462:int getPaddingBottom() -> getPaddingBottom
    9432:9432:int getPaddingLeft() -> getPaddingLeft
    9452:9452:int getPaddingRight() -> getPaddingRight
    9442:9442:int getPaddingTop() -> getPaddingTop
    9099:9099:int getPosition(android.view.View) -> getPosition
    11030:11038:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    10188:10188:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10143:10143:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9406:9406:int getWidth() -> getWidth
    8559:8559:boolean isAttachedToWindow() -> isAttachedToWindow
    8422:8422:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    10390:10401:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8645:8645:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    10805:10805:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10821:10829:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10756:10756:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10786:10800:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10836:10839:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10524:10524:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    10654:10654:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    10415:10415:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10437:10437:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10945:10945:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10961:10986:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10993:10993:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10746:10749:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9651:9676:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    9335:9337:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8590:8591:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    9063:9065:void removeViewAt(int) -> removeViewAt
    10304:10304:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    10325:10334:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    8282:8283:void requestLayout() -> requestLayout
    10873:10873:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    8178:8189:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    8026:8026:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8029:8029:android.view.View getChildAt(int) -> getChildAt
    8052:8053:int getChildEnd(android.view.View) -> getChildEnd
    8045:8046:int getChildStart(android.view.View) -> getChildStart
    8039:8039:int getParentEnd() -> getParentEnd
    8034:8034:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    8062:8062:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    8065:8065:android.view.View getChildAt(int) -> getChildAt
    8089:8090:int getChildEnd(android.view.View) -> getChildEnd
    8082:8083:int getChildStart(android.view.View) -> getChildStart
    8075:8076:int getParentEnd() -> getParentEnd
    8070:8070:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    11078:11078:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    12101:12109:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    12101:12113:void <init>(int,int) -> <init>
    12101:12117:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    12101:12121:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    12101:12125:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    12185:12185:int getViewLayoutPosition() -> getViewLayoutPosition
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    11262:11262:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5941:5967:void <init>() -> <init>
    6122:6125:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    6047:6056:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    6084:6084:boolean willBindInTime(int,long,long) -> willBindInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5958:5962:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    6203:6213:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6830:6848:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6226:6227:void clear() -> clear
    6919:6921:void clearScrap() -> clearScrap
    6395:6402:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    7073:7085:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6928:6940:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    7183:7186:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6911:6911:int getScrapCount() -> getScrapCount
    6964:7005:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6915:6915:android.view.View getScrapViewAt(int) -> getScrapViewAt
    7243:7248:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    7126:7135:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    7107:7116:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    7148:7162:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6857:6861:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6696:6702:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6721:6726:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6666:6691:void recycleView(android.view.View) -> recycleView
    6735:6817:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6874:6889:void scrapView(android.view.View) -> scrapView
    6310:6319:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6448:6600:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6900:6907:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    6241:6247:void updateViewCacheSize() -> updateViewCacheSize
    6272:6281:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    7191:7201:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5810:5810:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12866:12866:void <clinit>() -> <clinit>
    12844:12846:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12853:12853:void <init>(android.os.Parcelable) -> <init>
    12863:12863:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12858:12859:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12866:12866:void <init>() -> <init>
    12866:12866:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12866:12866:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12869:12869:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12874:12874:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12866:12866:java.lang.Object[] newArray(int) -> newArray
    12879:12879:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12894:12966:void <init>() -> <init>
    13147:13149:int getItemCount() -> getItemCount
    13023:13023:boolean isPreLayout() -> isPreLayout
    12992:12993:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    13176:13176:java.lang.String toString() -> toString
androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$StretchEdgeEffectFactory:
    5925:5925:void <init>() -> <init>
    5929:5929:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5526:5535:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5772:5780:int computeScrollDuration(int,int) -> computeScrollDuration
    5704:5715:void fling(int,int) -> fling
    5699:5700:void internalPostOnAnimation() -> internalPostOnAnimation
    5691:5694:void postOnAnimation() -> postOnAnimation
    5540:5686:void run() -> run
    5735:5762:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5784:5785:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    11453:11453:void <clinit>() -> <clinit>
    11787:11790:void addChangePayload(java.lang.Object) -> addChangePayload
    11782:11782:void addFlags(int) -> addFlags
    11802:11805:void clearPayload() -> clearPayload
    11729:11729:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    11733:11733:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11795:11797:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11940:11940:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11491:11493:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11666:11669:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    11713:11713:int getItemViewType() -> getItemViewType
    11565:11565:int getLayoutPosition() -> getLayoutPosition
    11696:11696:int getOldPosition() -> getOldPosition
    11809:11818:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11762:11762:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11774:11774:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11770:11770:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    11754:11754:boolean isBound() -> isBound
    11746:11746:boolean isInvalid() -> isInvalid
    11923:11924:boolean isRecyclable() -> isRecyclable
    11758:11758:boolean isRemoved() -> isRemoved
    11717:11717:boolean isScrap() -> isScrap
    11766:11766:boolean isTmpDetached() -> isTmpDetached
    11944:11944:boolean isUpdated() -> isUpdated
    11750:11750:boolean needsUpdate() -> needsUpdate
    11497:11508:void offsetPosition(int,boolean) -> offsetPosition
    11856:11858:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11823:11834:void resetInternal() -> resetInternal
    11778:11778:void setFlags(int,int) -> setFlags
    11899:11911:void setIsRecyclable(boolean) -> setIsRecyclable
    11741:11742:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11932:11932:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11524:11524:boolean shouldIgnore() -> shouldIgnore
    11864:11883:java.lang.String toString() -> toString
    11721:11721:void unScrap() -> unScrap
    11725:11725:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    44:50:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:84:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:74:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:64:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    112:120:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    223:227:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:154:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:216:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    179:183:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:194:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:302:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:344:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:317:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:357:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:292:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:335:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:277:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:326:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    106:234:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    527:528:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    2001:2001:boolean canScrollHorizontally() -> canScrollHorizontally
    1996:1996:boolean canScrollVertically() -> canScrollVertically
    269:309:boolean checkForGaps() -> checkForGaps
    2247:2247:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    402:413:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    1096:1096:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1076:1076:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1116:1116:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1100:1105:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1080:1085:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1120:1125:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    1111:1111:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1091:1091:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1131:1131:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    257:259:void createOrientationHelpers() -> createOrientationHelpers
    1361:1367:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1331:1338:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1319:1321:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2222:2226:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2233:2233:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2238:2241:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2182:2183:int getFirstChildPosition() -> getFirstChildPosition
    2177:2178:int getLastChildPosition() -> getLastChildPosition
    1505:1543:void handleUpdate(int,int,int) -> handleUpdate
    339:391:android.view.View hasGapsToFix() -> hasGapsToFix
    548:549:void invalidateSpanAssignments() -> invalidateSpanAssignments
    253:253:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    567:567:boolean isLayoutRTL() -> isLayoutRTL
    322:329:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    1294:1308:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1481:1481:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1486:1487:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1492:1492:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1476:1476:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1498:1498:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    1244:1284:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:316:void onScrollStateChanged(int) -> onScrollStateChanged
    449:459:void setOrientation(int) -> setOrientation
    476:481:void setReverseLayout(boolean) -> setReverseLayout
    428:437:void setSpanCount(int) -> setSpanCount
    943:943:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    215:215:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    218:218:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3243:3244:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3248:3254:void reset() -> reset
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2424:2424:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2428:2428:void <init>(int,int) -> <init>
    2432:2432:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2436:2436:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2812:2812:void <init>() -> <init>
    2891:2894:void clear() -> clear
    2879:2886:void ensureSize(int) -> ensureSize
    2823:2831:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3027:3036:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3006:3011:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2838:2852:int invalidateAfter(int) -> invalidateAfter
    2957:2977:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2928:2936:void offsetForAddition(int,int) -> offsetForAddition
    2898:2906:void offsetForRemoval(int,int) -> offsetForRemoval
    2940:2948:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2910:2922:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2871:2871:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3105:3105:void <clinit>() -> <clinit>
    3059:3066:void <init>(android.os.Parcel) -> <init>
    3070:3070:void <init>() -> <init>
    3074:3074:int getGapForSpan(int) -> getGapForSpan
    3097:3101:java.lang.String toString() -> toString
    3084:3091:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3106:3106:void <init>() -> <init>
    3106:3106:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3109:3109:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3106:3106:java.lang.Object[] newArray(int) -> newArray
    3114:3114:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3215:3215:void <clinit>() -> <clinit>
    3138:3138:void <init>() -> <init>
    3141:3161:void <init>(android.os.Parcel) -> <init>
    3164:3174:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3199:3212:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3216:3216:void <init>() -> <init>
    3216:3216:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3219:3219:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3216:3216:java.lang.Object[] newArray(int) -> newArray
    3224:3224:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2483:2490:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2539:2546:void calculateCachedEnd() -> calculateCachedEnd
    2505:2512:void calculateCachedStart() -> calculateCachedStart
    2609:2611:void clear() -> clear
    2527:2535:int getEndLine(int) -> getEndLine
    2553:2557:int getEndLine() -> getEndLine
    2655:2655:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2494:2501:int getStartLine(int) -> getStartLine
    2519:2523:int getStartLine() -> getStartLine
    2615:2616:void invalidateCache() -> invalidateCache
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:133:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:233:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    148:148:void addFlags(int) -> addFlags
    166:185:boolean boundsMatch() -> boundsMatch
    152:152:void resetFlags() -> resetFlags
    141:144:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    36:47:void <init>() -> <init>
    132:132:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    64:70:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    273:273:void onDetach() -> onDetach
    260:268:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    307:307:void <clinit>() -> <clinit>
    309:309:void <init>() -> <init>
    326:326:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:321:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:43:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:64:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:92:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
    96:100:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    112:112:void add(java.lang.String) -> add
    106:107:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    44:52:void <init>() -> <init>
    76:84:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    190:208:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:229:void performSave(android.os.Bundle) -> performSave
    109:111:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    167:180:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:203:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:38:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:62:void performRestore(android.os.Bundle) -> performRestore
    74:74:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
    53:53:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.tracing.Trace -> androidx.tracing.Trace:
    80:81:void beginSection(java.lang.String) -> beginSection
    93:94:void endSection() -> endSection
    229:237:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    159:169:boolean isEnabledFallback() -> isEnabledFallback
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
    49:49:void beginSection(java.lang.String) -> beginSection
    60:60:void endSection() -> endSection
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    24:136:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    170:170:void <init>() -> <init>
    174:174:void <init>(android.content.Context) -> <init>
    158:735:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    524:525:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    534:535:boolean canApplyTheme() -> canApplyTheme
    145:145:void clearColorFilter() -> clearColorFilter
    255:256:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    286:292:void draw(android.graphics.Canvas) -> draw
    323:326:int getAlpha() -> getAlpha
    278:281:int getChangingConfigurations() -> getChangingConfigurations
    349:352:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    267:268:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    145:145:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    422:425:int getIntrinsicHeight() -> getIntrinsicHeight
    414:417:int getIntrinsicWidth() -> getIntrinsicWidth
    145:145:int getMinimumHeight() -> getMinimumHeight
    145:145:int getMinimumWidth() -> getMinimumWidth
    406:409:int getOpacity() -> getOpacity
    145:145:boolean getPadding(android.graphics.Rect) -> getPadding
    145:145:int[] getState() -> getState
    145:145:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    448:513:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    519:519:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    430:433:boolean isAutoMirrored() -> isAutoMirrored
    702:706:boolean isRunning() -> isRunning
    396:399:boolean isStateful() -> isStateful
    145:145:void jumpToCurrentState() -> jumpToCurrentState
    195:196:android.graphics.drawable.Drawable mutate() -> mutate
    298:302:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    315:318:boolean onLevelChange(int) -> onLevelChange
    307:310:boolean onStateChange(int[]) -> onStateChange
    331:335:void setAlpha(int) -> setAlpha
    438:442:void setAutoMirrored(boolean) -> setAutoMirrored
    145:145:void setChangingConfigurations(int) -> setChangingConfigurations
    145:145:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    340:344:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    145:145:void setFilterBitmap(boolean) -> setFilterBitmap
    145:145:void setHotspot(float,float) -> setHotspot
    145:145:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    145:145:boolean setState(int[]) -> setState
    357:362:void setTint(int) -> setTint
    367:372:void setTintList(android.content.res.ColorStateList) -> setTintList
    377:382:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    387:391:boolean setVisible(boolean,boolean) -> setVisible
    684:694:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    663:678:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    711:722:void start() -> start
    727:732:void stop() -> stop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    735:735:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    738:738:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    743:743:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    748:748:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    601:629:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    646:646:int getChangingConfigurations() -> getChangingConfigurations
    636:636:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    641:641:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    650:653:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    550:551:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    583:583:boolean canApplyTheme() -> canApplyTheme
    588:588:int getChangingConfigurations() -> getChangingConfigurations
    556:559:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    565:568:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    574:577:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    105:139:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    65:93:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    498:498:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    511:565:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    762:766:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    792:792:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    204:324:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    652:661:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    633:646:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    97:100:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    116:116:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    128:145:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    873:894:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    801:847:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    855:857:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    679:754:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    576:621:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    342:373:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    387:422:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    433:490:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    163:163:void <init>() -> <init>
    154:154:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    182:196:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    68:68:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:76:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    202:222:float getInterpolation(float) -> getInterpolation
    130:133:void initCubic(float,float,float,float) -> initCubic
    137:178:void initPath(android.graphics.Path) -> initPath
    123:126:void initQuad(float,float) -> initQuad
    82:117:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    31:31:void <init>() -> <init>
    97:98:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    105:109:void clearColorFilter() -> clearColorFilter
    114:117:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    130:133:int getMinimumHeight() -> getMinimumHeight
    122:125:int getMinimumWidth() -> getMinimumWidth
    138:141:boolean getPadding(android.graphics.Rect) -> getPadding
    146:149:int[] getState() -> getState
    155:158:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    88:89:void jumpToCurrentState() -> jumpToCurrentState
    47:50:boolean onLevelChange(int) -> onLevelChange
    163:167:void setChangingConfigurations(int) -> setChangingConfigurations
    38:42:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    80:81:void setFilterBitmap(boolean) -> setFilterBitmap
    64:65:void setHotspot(float,float) -> setHotspot
    72:73:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    172:175:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    282:282:void <clinit>() -> <clinit>
    312:320:void <init>() -> <init>
    312:325:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    690:690:int applyAlpha(int,float) -> applyAlpha
    279:279:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    585:586:boolean canApplyTheme() -> canApplyTheme
    279:279:void clearColorFilter() -> clearColorFilter
    643:648:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    684:685:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    657:671:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createWithoutDelegate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createWithoutDelegate
    358:425:void draw(android.graphics.Canvas) -> draw
    430:434:int getAlpha() -> getAlpha
    928:931:int getChangingConfigurations() -> getChangingConfigurations
    463:466:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    348:353:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    279:279:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    575:579:int getIntrinsicHeight() -> getIntrinsicHeight
    566:570:int getIntrinsicWidth() -> getIntrinsicWidth
    279:279:int getMinimumHeight() -> getMinimumHeight
    279:279:int getMinimumWidth() -> getMinimumWidth
    557:558:int getOpacity() -> getOpacity
    279:279:boolean getPadding(android.graphics.Rect) -> getPadding
    279:279:int[] getState() -> getState
    343:343:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    279:279:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    699:704:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    710:728:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    819:880:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    936:940:void invalidateSelf() -> invalidateSelf
    594:597:boolean isAutoMirrored() -> isAutoMirrored
    526:532:boolean isStateful() -> isStateful
    279:279:void jumpToCurrentState() -> jumpToCurrentState
    330:337:android.graphics.drawable.Drawable mutate() -> mutate
    910:912:boolean needMirroring() -> needMirroring
    921:922:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    537:549:boolean onStateChange(int[]) -> onStateChange
    739:749:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    945:949:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    905:905:void setAllowCaching(boolean) -> setAllowCaching
    439:446:void setAlpha(int) -> setAlpha
    602:606:void setAutoMirrored(boolean) -> setAutoMirrored
    279:279:void setChangingConfigurations(int) -> setChangingConfigurations
    279:279:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    452:458:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    279:279:void setFilterBitmap(boolean) -> setFilterBitmap
    279:279:void setHotspot(float,float) -> setHotspot
    279:279:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    279:279:boolean setState(int[]) -> setState
    486:491:void setTint(int) -> setTint
    496:505:void setTintList(android.content.res.ColorStateList) -> setTintList
    511:520:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    954:957:boolean setVisible(boolean,boolean) -> setVisible
    962:966:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    757:813:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    480:481:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1771:1771:void <init>() -> <init>
    1776:1776:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1781:1788:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1796:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1825:1838:void <init>() -> <init>
    1825:1858:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2031:2031:float getFillAlpha() -> getFillAlpha
    2021:2021:int getFillColor() -> getFillColor
    2010:2010:float getStrokeAlpha() -> getStrokeAlpha
    1990:1990:int getStrokeColor() -> getStrokeColor
    1864:1868:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1877:1881:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    2000:2000:float getStrokeWidth() -> getStrokeWidth
    2051:2051:float getTrimPathEnd() -> getTrimPathEnd
    2061:2061:float getTrimPathOffset() -> getTrimPathOffset
    2041:2041:float getTrimPathStart() -> getTrimPathStart
    1893:1896:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1963:1963:boolean isStateful() -> isStateful
    1968:1969:boolean onStateChanged(int[]) -> onStateChanged
    2036:2036:void setFillAlpha(float) -> setFillAlpha
    2026:2026:void setFillColor(int) -> setFillColor
    2015:2015:void setStrokeAlpha(float) -> setStrokeAlpha
    1995:1995:void setStrokeColor(int) -> setStrokeColor
    2005:2005:void setStrokeWidth(float) -> setStrokeWidth
    2056:2056:void setTrimPathEnd(float) -> setTrimPathEnd
    2066:2066:void setTrimPathOffset(float) -> setTrimPathOffset
    2046:2046:void setTrimPathStart(float) -> setTrimPathStart
    1904:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1448:1503:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1448:1509:void <init>() -> <init>
    1513:1513:java.lang.String getGroupName() -> getGroupName
    1517:1517:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1589:1589:float getPivotX() -> getPivotX
    1602:1602:float getPivotY() -> getPivotY
    1576:1576:float getRotation() -> getRotation
    1615:1615:float getScaleX() -> getScaleX
    1628:1628:float getScaleY() -> getScaleY
    1641:1641:float getTranslateX() -> getTranslateX
    1654:1654:float getTranslateY() -> getTranslateY
    1521:1524:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1667:1668:boolean isStateful() -> isStateful
    1678:1679:boolean onStateChanged(int[]) -> onStateChanged
    1594:1596:void setPivotX(float) -> setPivotX
    1607:1609:void setPivotY(float) -> setPivotY
    1581:1583:void setRotation(float) -> setRotation
    1620:1622:void setScaleX(float) -> setScaleX
    1633:1635:void setScaleY(float) -> setScaleY
    1646:1648:void setTranslateX(float) -> setTranslateX
    1659:1661:void setTranslateY(float) -> setTranslateY
    1566:1570:void updateLocalMatrix() -> updateLocalMatrix
    1532:1560:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1426:1426:void <init>() -> <init>
    1426:1426:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1690:1696:void <init>() -> <init>
    1690:1725:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1753:1753:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1736:1736:java.lang.String getPathName() -> getPathName
    1758:1762:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1729:1731:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1173:1173:void <clinit>() -> <clinit>
    1174:1197:void <init>() -> <init>
    1174:1233:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1267:1267:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1242:1262:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1272:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1216:1216:float getAlpha() -> getAlpha
    1396:1406:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1205:1205:int getRootAlpha() -> getRootAlpha
    1415:1418:boolean isStateful() -> isStateful
    1422:1422:boolean onStateChanged(int[]) -> onStateChanged
    1211:1211:void setAlpha(float) -> setAlpha
    1201:1201:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1018:1048:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1018:1125:void <init>() -> <init>
    1096:1097:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1104:1108:boolean canReuseCache() -> canReuseCache
    1087:1090:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1055:1056:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1142:1142:int getChangingConfigurations() -> getChangingConfigurations
    1067:1077:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1060:1060:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1146:1146:boolean isStateful() -> isStateful
    1131:1131:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1137:1137:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1150:1151:boolean onStateChanged(int[]) -> onStateChanged
    1117:1121:void updateCacheStates() -> updateCacheStates
    1081:1083:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    978:979:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1006:1006:boolean canApplyTheme() -> canApplyTheme
    1011:1011:int getChangingConfigurations() -> getChangingConfigurations
    984:985:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    991:992:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    998:1000:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    38:39:void <init>(android.os.Parcel) -> <init>
    56:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    87:90:void <init>(androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap) -> <init>
    1635:1640:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1613:1617:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1624:1628:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    400:403:boolean readBoolean(boolean,int) -> readBoolean
    473:476:byte[] readByteArray(byte[],int) -> readByteArray
    617:620:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1566:1582:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    410:413:int readInt(int,int) -> readInt
    482:485:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    452:455:java.lang.String readString(java.lang.String,int) -> readString
    1496:1499:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1512:1516:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    295:296:void writeBoolean(boolean,int) -> writeBoolean
    305:306:void writeByteArray(byte[],int) -> writeByteArray
    326:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    335:336:void writeInt(int,int) -> writeInt
    392:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    371:372:void writeString(java.lang.String,int) -> writeString
    1591:1607:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1022:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1030:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1043:1048:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:51:void <init>(android.os.Parcel) -> <init>
    41:65:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap,androidx.collection.SimpleArrayMap) -> <init>
    99:109:void closeField() -> closeField
    119:120:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:241:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:94:void setOutputField(int) -> setOutputField
    181:181:void writeBoolean(boolean) -> writeBoolean
    127:130:void writeByteArray(byte[]) -> writeByteArray
    196:196:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:146:void writeInt(int) -> writeInt
    176:176:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:166:void writeString(java.lang.String) -> writeString
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1403:1403:void <clinit>() -> <clinit>
    1420:1426:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1398:1399:java.lang.String toString() -> toString
    1391:1393:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1403:1403:void <init>() -> <init>
    1403:1403:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1403:1403:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1406:1406:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1411:1411:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1403:1403:java.lang.Object[] newArray(int) -> newArray
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
com.android.internal.telephony.AndroidUtilIndentingPrintWriter -> com.android.internal.telephony.AndroidUtilIndentingPrintWriter:
# {"id":"sourceFile","fileName":"IndentingPrintWriter.java"}
    60:60:void <init>(java.io.Writer,java.lang.String) -> <init>
    70:70:void <init>(java.io.Writer,java.lang.String,int) -> <init>
    41:79:void <init>(java.io.Writer,java.lang.String,java.lang.String,int) -> <init>
    130:131:com.android.internal.telephony.AndroidUtilIndentingPrintWriter decreaseIndent() -> decreaseIndent
    120:121:com.android.internal.telephony.AndroidUtilIndentingPrintWriter increaseIndent() -> increaseIndent
    242:248:void maybeWriteIndent() -> maybeWriteIndent
    181:181:void println() -> println
    186:187:void write(int) -> write
    192:194:void write(java.lang.String,int,int) -> write
    199:237:void write(char[],int,int) -> write
com.android.internal.telephony.BaseParceledListSlice -> com.android.internal.telephony.BaseParceledListSlice:
    48:48:void <clinit>() -> <clinit>
    52:113:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    40:40:boolean access$000() -> access$000
    40:40:java.lang.String access$100() -> access$100
    40:40:int access$200() -> access$200
    40:40:java.util.List access$300(com.android.internal.telephony.BaseParceledListSlice) -> access$300
    40:40:void access$400(java.lang.Class,java.lang.Class) -> access$400
    135:135:java.util.List getList() -> getList
    118:123:java.lang.Object readCreator(android.os.Parcelable$Creator,android.os.Parcel,java.lang.ClassLoader) -> readCreator
    127:130:void verifySameType(java.lang.Class,java.lang.Class) -> verifySameType
    153:200:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.internal.telephony.BaseParceledListSlice$1 -> com.android.internal.telephony.BaseParceledListSlice$1:
    173:173:void <init>(com.android.internal.telephony.BaseParceledListSlice,int,java.lang.Class,int) -> <init>
    178:194:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.internal.telephony.BasicShellCommandHandler -> com.android.internal.telephony.BasicShellCommandHandler:
    34:34:void <init>() -> <init>
    78:117:int exec(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[]) -> exec
    170:176:java.io.PrintWriter getErrPrintWriter() -> getErrPrintWriter
    244:249:java.lang.String getNextArg() -> getNextArg
    292:295:java.lang.String getNextArgRequired() -> getNextArgRequired
    211:235:java.lang.String getNextOption() -> getNextOption
    143:146:java.io.PrintWriter getOutPrintWriter() -> getOutPrintWriter
    160:163:java.io.OutputStream getRawErrorStream() -> getRawErrorStream
    133:136:java.io.OutputStream getRawOutputStream() -> getRawOutputStream
    281:284:int getRemainingArgsCount() -> getRemainingArgsCount
    301:304:int handleDefaultCommands(java.lang.String) -> handleDefaultCommands
    58:71:void init(android.os.Binder,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],int) -> init
    256:259:java.lang.String peekNextArg() -> peekNextArg
com.android.internal.telephony.IndentingPrintWriter -> com.android.internal.telephony.IndentingPrintWriter:
    32:32:void <init>(java.io.Writer,java.lang.String) -> <init>
    27:27:com.android.internal.telephony.AndroidUtilIndentingPrintWriter decreaseIndent() -> decreaseIndent
    61:61:com.android.internal.telephony.IndentingPrintWriter decreaseIndent() -> decreaseIndent
    27:27:com.android.internal.telephony.AndroidUtilIndentingPrintWriter increaseIndent() -> increaseIndent
    55:55:com.android.internal.telephony.IndentingPrintWriter increaseIndent() -> increaseIndent
com.android.internal.telephony.LocalLog -> com.android.internal.telephony.LocalLog:
    48:48:void <init>(int) -> <init>
    51:54:void <init>(int,boolean) -> <init>
    72:76:void append(java.lang.String) -> append
    80:81:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    84:85:void dump(java.io.PrintWriter) -> dump
    94:98:void dump(java.lang.String,java.io.PrintWriter) -> dump
    59:68:void log(java.lang.String) -> log
com.android.internal.telephony.ParceledListSlice -> com.android.internal.telephony.ParceledListSlice:
    71:71:void <clinit>() -> <clinit>
    32:32:void <init>(android.os.Parcel,java.lang.ClassLoader,com.android.internal.telephony.ParceledListSlice$1) -> <init>
    38:38:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    48:50:int describeContents() -> describeContents
    32:32:java.util.List getList() -> getList
    67:67:android.os.Parcelable$Creator readParcelableCreator(android.os.Parcel,java.lang.ClassLoader) -> readParcelableCreator
    32:32:void writeElement(java.lang.Object,android.os.Parcel,int) -> writeElement
    57:57:void writeElement(android.os.Parcelable,android.os.Parcel,int) -> writeElement
    32:32:void writeParcelableCreator(java.lang.Object,android.os.Parcel) -> writeParcelableCreator
    62:62:void writeParcelableCreator(android.os.Parcelable,android.os.Parcel) -> writeParcelableCreator
    32:32:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.internal.telephony.ParceledListSlice$1 -> com.android.internal.telephony.ParceledListSlice$1:
    72:72:void <init>() -> <init>
    72:72:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    74:74:com.android.internal.telephony.ParceledListSlice createFromParcel(android.os.Parcel) -> createFromParcel
    79:79:com.android.internal.telephony.ParceledListSlice createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    72:72:java.lang.Object[] newArray(int) -> newArray
    84:84:com.android.internal.telephony.ParceledListSlice[] newArray(int) -> newArray
com.android.internal.telephony.Preconditions -> com.android.internal.telephony.Preconditions:
    167:167:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
com.android.internal.telephony.SomeArgs -> com.android.internal.telephony.SomeArgs:
    35:35:void <clinit>() -> <clinit>
    44:67:void <init>() -> <init>
    117:131:void clear() -> clear
    73:84:com.android.internal.telephony.SomeArgs obtain() -> obtain
    99:113:void recycle() -> recycle
com.android.internal.telephony.State -> com.android.internal.telephony.State:
    36:36:void <init>() -> <init>
    79:81:java.lang.String getName() -> getName
com.android.internal.telephony.StateMachine -> com.android.internal.telephony.StateMachine:
    1305:1310:void <init>(java.lang.String) -> <init>
    1319:1320:void <init>(java.lang.String,android.os.Looper) -> <init>
    1329:1330:void <init>(java.lang.String,android.os.Handler) -> <init>
    424:424:android.os.HandlerThread access$400(com.android.internal.telephony.StateMachine) -> access$400
    424:424:android.os.HandlerThread access$402(com.android.internal.telephony.StateMachine,android.os.HandlerThread) -> access$402
    424:424:com.android.internal.telephony.StateMachine$SmHandler access$502(com.android.internal.telephony.StateMachine,com.android.internal.telephony.StateMachine$SmHandler) -> access$502
    424:424:java.lang.String access$700(com.android.internal.telephony.StateMachine) -> access$700
    1568:1571:void addLogRec(java.lang.String) -> addLogRec
    1354:1354:void addState(com.android.internal.telephony.State,com.android.internal.telephony.State) -> addState
    1363:1363:void addState(com.android.internal.telephony.State) -> addState
    1551:1555:java.util.Collection copyLogRecs() -> copyLogRecs
    1445:1445:void deferMessage(android.os.Message) -> deferMessage
    2089:2096:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1390:1392:android.os.Message getCurrentMessage() -> getCurrentMessage
    1400:1402:com.android.internal.telephony.IState getCurrentState() -> getCurrentState
    1603:1603:android.os.Handler getHandler() -> getHandler
    1542:1544:com.android.internal.telephony.StateMachine$LogRec getLogRec(int) -> getLogRec
    1532:1534:int getLogRecCount() -> getLogRecCount
    1522:1524:int getLogRecMaxSize() -> getLogRecMaxSize
    1511:1513:int getLogRecSize() -> getLogRecSize
    1485:1485:java.lang.String getName() -> getName
    1986:1992:boolean hasDeferredMessages(int) -> hasDeferredMessages
    2003:2006:boolean hasMessages(int) -> hasMessages
    1295:1296:void initStateMachine(java.lang.String,android.os.Looper) -> initStateMachine
    2048:2051:boolean isDbg() -> isDbg
    2015:2018:boolean isQuit(android.os.Message) -> isQuit
    2128:2128:void log(java.lang.String) -> log
    2118:2119:void logAndAddLogRec(java.lang.String) -> logAndAddLogRec
    2137:2137:void logd(java.lang.String) -> logd
    2173:2173:void loge(java.lang.String) -> loge
    2183:2183:void loge(java.lang.String,java.lang.Throwable) -> loge
    2155:2155:void logi(java.lang.String) -> logi
    2146:2146:void logv(java.lang.String) -> logv
    2164:2164:void logw(java.lang.String) -> logw
    1617:1617:android.os.Message obtainMessage() -> obtainMessage
    1632:1632:android.os.Message obtainMessage(int) -> obtainMessage
    1649:1649:android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    1667:1667:android.os.Message obtainMessage(int,int) -> obtainMessage
    1686:1686:android.os.Message obtainMessage(int,int,int) -> obtainMessage
    1706:1706:android.os.Message obtainMessage(int,int,int,java.lang.Object) -> obtainMessage
    2026:2029:void quit() -> quit
    2037:2040:void quitNow() -> quitNow
    1972:1978:void removeDeferredMessages(int) -> removeDeferredMessages
    1962:1965:void removeMessages(int) -> removeMessages
    1371:1371:void removeState(com.android.internal.telephony.State) -> removeState
    1717:1720:void sendMessage(int) -> sendMessage
    1731:1734:void sendMessage(int,java.lang.Object) -> sendMessage
    1745:1748:void sendMessage(int,int) -> sendMessage
    1758:1761:void sendMessage(int,int,int) -> sendMessage
    1772:1775:void sendMessage(int,int,int,java.lang.Object) -> sendMessage
    1786:1789:void sendMessage(android.os.Message) -> sendMessage
    1879:1882:void sendMessageAtFrontOfQueue(int) -> sendMessageAtFrontOfQueue
    1893:1896:void sendMessageAtFrontOfQueue(int,java.lang.Object) -> sendMessageAtFrontOfQueue
    1907:1910:void sendMessageAtFrontOfQueue(int,int) -> sendMessageAtFrontOfQueue
    1922:1925:void sendMessageAtFrontOfQueue(int,int,int) -> sendMessageAtFrontOfQueue
    1936:1939:void sendMessageAtFrontOfQueue(int,int,int,java.lang.Object) -> sendMessageAtFrontOfQueue
    1950:1953:void sendMessageAtFrontOfQueue(android.os.Message) -> sendMessageAtFrontOfQueue
    1799:1802:void sendMessageDelayed(int,long) -> sendMessageDelayed
    1812:1815:void sendMessageDelayed(int,java.lang.Object,long) -> sendMessageDelayed
    1825:1828:void sendMessageDelayed(int,int,long) -> sendMessageDelayed
    1838:1841:void sendMessageDelayed(int,int,int,long) -> sendMessageDelayed
    1852:1855:void sendMessageDelayed(int,int,int,java.lang.Object,long) -> sendMessageDelayed
    1865:1868:void sendMessageDelayed(android.os.Message,long) -> sendMessageDelayed
    2061:2064:void setDbg(boolean) -> setDbg
    1382:1382:void setInitialState(com.android.internal.telephony.State) -> setInitialState
    1503:1503:void setLogOnlyTransitions(boolean) -> setLogOnlyTransitions
    1494:1494:void setLogRecSize(int) -> setLogRecSize
    2073:2077:void start() -> start
    2104:2109:java.lang.String toString() -> toString
    1421:1421:void transitionTo(com.android.internal.telephony.IState) -> transitionTo
    1432:1432:void transitionToHaltingState() -> transitionToHaltingState
    1454:1454:void unhandledMessage(android.os.Message) -> unhandledMessage
com.android.internal.telephony.StateMachine$LogRec -> com.android.internal.telephony.StateMachine$LogRec:
    472:473:void <init>(com.android.internal.telephony.StateMachine,android.os.Message,java.lang.String,com.android.internal.telephony.IState,com.android.internal.telephony.IState,com.android.internal.telephony.IState) -> <init>
    537:562:java.lang.String toString() -> toString
    484:490:void update(com.android.internal.telephony.StateMachine,android.os.Message,java.lang.String,com.android.internal.telephony.IState,com.android.internal.telephony.IState,com.android.internal.telephony.IState) -> update
com.android.internal.telephony.StateMachine$LogRecords -> com.android.internal.telephony.StateMachine$LogRecords:
    577:577:void <init>(com.android.internal.telephony.StateMachine$1) -> <init>
    581:590:void <init>() -> <init>
    577:577:int access$1900(com.android.internal.telephony.StateMachine$LogRecords) -> access$1900
    577:577:java.util.Vector access$2000(com.android.internal.telephony.StateMachine$LogRecords) -> access$2000
    668:679:void add(com.android.internal.telephony.StateMachine,android.os.Message,java.lang.String,com.android.internal.telephony.IState,com.android.internal.telephony.IState,com.android.internal.telephony.IState) -> add
    634:635:void cleanup() -> cleanup
    627:627:int count() -> count
    643:650:com.android.internal.telephony.StateMachine$LogRec get(int) -> get
    613:613:boolean logOnlyTransitions() -> logOnlyTransitions
    609:610:void setLogOnlyTransitions(boolean) -> setLogOnlyTransitions
    602:606:void setSize(int) -> setSize
    620:620:int size() -> size
com.android.internal.telephony.StateMachine$SmHandler -> com.android.internal.telephony.StateMachine$SmHandler:
    691:691:void <clinit>() -> <clinit>
    682:682:void <init>(android.os.Looper,com.android.internal.telephony.StateMachine,com.android.internal.telephony.StateMachine$1) -> <init>
    685:1226:void <init>(android.os.Looper,com.android.internal.telephony.StateMachine) -> <init>
    682:682:void access$1000(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.State) -> access$1000
    682:682:void access$1100(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.State) -> access$1100
    682:682:android.os.Message access$1200(com.android.internal.telephony.StateMachine$SmHandler) -> access$1200
    682:682:com.android.internal.telephony.IState access$1300(com.android.internal.telephony.StateMachine$SmHandler) -> access$1300
    682:682:void access$1400(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.IState) -> access$1400
    682:682:com.android.internal.telephony.StateMachine$SmHandler$HaltingState access$1500(com.android.internal.telephony.StateMachine$SmHandler) -> access$1500
    682:682:void access$1600(com.android.internal.telephony.StateMachine$SmHandler,android.os.Message) -> access$1600
    682:682:boolean access$1700(com.android.internal.telephony.StateMachine$SmHandler) -> access$1700
    682:682:com.android.internal.telephony.StateMachine$LogRecords access$1800(com.android.internal.telephony.StateMachine$SmHandler) -> access$1800
    682:682:com.android.internal.telephony.StateMachine$SmHandler$StateInfo[] access$2100(com.android.internal.telephony.StateMachine$SmHandler) -> access$2100
    682:682:int access$2200(com.android.internal.telephony.StateMachine$SmHandler) -> access$2200
    682:682:com.android.internal.telephony.State access$2300(com.android.internal.telephony.StateMachine$SmHandler) -> access$2300
    682:682:java.util.ArrayList access$2400(com.android.internal.telephony.StateMachine$SmHandler) -> access$2400
    682:682:boolean access$2500(com.android.internal.telephony.StateMachine$SmHandler,android.os.Message) -> access$2500
    682:682:void access$2600(com.android.internal.telephony.StateMachine$SmHandler) -> access$2600
    682:682:void access$2700(com.android.internal.telephony.StateMachine$SmHandler) -> access$2700
    682:682:boolean access$2800(com.android.internal.telephony.StateMachine$SmHandler) -> access$2800
    682:682:void access$2900(com.android.internal.telephony.StateMachine$SmHandler,boolean) -> access$2900
    682:682:com.android.internal.telephony.StateMachine access$300(com.android.internal.telephony.StateMachine$SmHandler) -> access$300
    682:682:void access$3000(com.android.internal.telephony.StateMachine$SmHandler) -> access$3000
    682:682:com.android.internal.telephony.StateMachine$SmHandler$StateInfo access$900(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.State,com.android.internal.telephony.State) -> access$900
    1165:1191:com.android.internal.telephony.StateMachine$SmHandler$StateInfo addState(com.android.internal.telephony.State,com.android.internal.telephony.State) -> addState
    927:943:void cleanupAfterQuitting() -> cleanupAfterQuitting
    950:975:void completeConstruction() -> completeConstruction
    1247:1253:void deferMessage(android.os.Message) -> deferMessage
    1145:1145:android.os.Message getCurrentMessage() -> getCurrentMessage
    1152:1152:com.android.internal.telephony.IState getCurrentState() -> getCurrentState
    796:826:void handleMessage(android.os.Message) -> handleMessage
    1032:1041:void invokeEnterMethods(int) -> invokeEnterMethods
    1018:1024:void invokeExitMethods(com.android.internal.telephony.StateMachine$SmHandler$StateInfo) -> invokeExitMethods
    1275:1275:boolean isDbg() -> isDbg
    1270:1270:boolean isQuit(android.os.Message) -> isQuit
    1206:1206:boolean lambda$removeState$0(com.android.internal.telephony.StateMachine$SmHandler$StateInfo,com.android.internal.telephony.StateMachine$SmHandler$StateInfo) -> lambda$removeState$0
    1054:1059:void moveDeferredMessageAtFrontOfQueue() -> moveDeferredMessageAtFrontOfQueue
    1070:1084:int moveTempStateStackToStateStack() -> moveTempStateStackToStateStack
    841:918:void performTransitions(com.android.internal.telephony.State,android.os.Message) -> performTransitions
    985:1010:com.android.internal.telephony.State processMsg(android.os.Message) -> processMsg
    1258:1259:void quit() -> quit
    1264:1265:void quitNow() -> quitNow
    1201:1212:void removeState(com.android.internal.telephony.State) -> removeState
    1280:1280:void setDbg(boolean) -> setDbg
    1231:1232:void setInitialState(com.android.internal.telephony.State) -> setInitialState
    1125:1138:void setupInitialStateStack() -> setupInitialStateStack
    1107:1115:com.android.internal.telephony.StateMachine$SmHandler$StateInfo setupTempStateStackWithStatesToEnter(com.android.internal.telephony.State) -> setupTempStateStackWithStatesToEnter
    1237:1242:void transitionTo(com.android.internal.telephony.IState) -> transitionTo
com.android.internal.telephony.StateMachine$SmHandler$$ExternalSyntheticLambda0 -> com.android.internal.telephony.StateMachine$SmHandler$$ExternalSyntheticLambda0:
    com.android.internal.telephony.StateMachine$SmHandler$StateInfo com.android.internal.telephony.StateMachine$SmHandler$$InternalSyntheticLambda$0$e0d8cac20b4da52f7e9af74b8875520709d7d17216d9703d3a84782d63e7cdee$0.f$0 -> f$0
    void com.android.internal.telephony.StateMachine$SmHandler$$InternalSyntheticLambda$0$e0d8cac20b4da52f7e9af74b8875520709d7d17216d9703d3a84782d63e7cdee$0.<init>(com.android.internal.telephony.StateMachine$SmHandler$StateInfo) -> <init>
    boolean com.android.internal.telephony.StateMachine$SmHandler$$InternalSyntheticLambda$0$e0d8cac20b4da52f7e9af74b8875520709d7d17216d9703d3a84782d63e7cdee$0.test(java.lang.Object) -> test
com.android.internal.telephony.StateMachine$SmHandler$HaltingState -> com.android.internal.telephony.StateMachine$SmHandler$HaltingState:
    770:770:void <init>(com.android.internal.telephony.StateMachine$SmHandler) -> <init>
    770:770:void <init>(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.StateMachine$1) -> <init>
    773:773:boolean processMessage(android.os.Message) -> processMessage
com.android.internal.telephony.StateMachine$SmHandler$QuittingState -> com.android.internal.telephony.StateMachine$SmHandler$QuittingState:
    781:781:void <init>(com.android.internal.telephony.StateMachine$SmHandler) -> <init>
    781:781:void <init>(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.StateMachine$1) -> <init>
com.android.internal.telephony.StateMachine$SmHandler$StateInfo -> com.android.internal.telephony.StateMachine$SmHandler$StateInfo:
    727:727:void <init>(com.android.internal.telephony.StateMachine$SmHandler) -> <init>
    727:727:void <init>(com.android.internal.telephony.StateMachine$SmHandler,com.android.internal.telephony.StateMachine$1) -> <init>
    742:743:java.lang.String toString() -> toString
com.android.internal.telephony.StringParceledListSlice -> com.android.internal.telephony.StringParceledListSlice:
    65:65:void <clinit>() -> <clinit>
    31:31:void <init>(android.os.Parcel,java.lang.ClassLoader,com.android.internal.telephony.StringParceledListSlice$1) -> <init>
    37:37:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    61:61:android.os.Parcelable$Creator readParcelableCreator(android.os.Parcel,java.lang.ClassLoader) -> readParcelableCreator
    31:31:void writeElement(java.lang.Object,android.os.Parcel,int) -> writeElement
    51:51:void writeElement(java.lang.String,android.os.Parcel,int) -> writeElement
    31:31:void writeParcelableCreator(java.lang.Object,android.os.Parcel) -> writeParcelableCreator
    31:31:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.internal.telephony.StringParceledListSlice$1 -> com.android.internal.telephony.StringParceledListSlice$1:
    66:66:void <init>() -> <init>
    66:66:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    66:66:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    68:68:com.android.internal.telephony.StringParceledListSlice createFromParcel(android.os.Parcel) -> createFromParcel
    73:73:com.android.internal.telephony.StringParceledListSlice createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    66:66:java.lang.Object[] newArray(int) -> newArray
    78:78:com.android.internal.telephony.StringParceledListSlice[] newArray(int) -> newArray
com.android.internal.telephony.UserIcons -> com.android.internal.telephony.UserIcons:
    33:33:void <clinit>() -> <clinit>
    51:56:android.graphics.Bitmap convertToBitmap(android.graphics.drawable.Drawable) -> convertToBitmap
    73:77:android.graphics.drawable.Drawable getDefaultUserIcon(android.content.res.Resources,int,boolean) -> getDefaultUserIcon
com.android.phone.ADNList -> com.android.phone.ADNList:
    51:61:void <clinit>() -> <clinit>
    47:78:void <init>() -> <init>
    47:47:void access$000(com.android.phone.ADNList) -> access$000
    47:47:void access$100(com.android.phone.ADNList,boolean) -> access$100
    47:47:void access$200(com.android.phone.ADNList) -> access$200
    195:197:void displayProgress(boolean) -> displayProgress
    165:172:android.widget.CursorAdapter newAdapter() -> newAdapter
    82:86:void onCreate(android.os.Bundle) -> onCreate
    91:92:void onResume() -> onResume
    97:99:void onStop() -> onStop
    113:117:void query() -> query
    121:121:void reQuery() -> reQuery
    104:109:android.net.Uri resolveIntent() -> resolveIntent
    149:160:void setAdapter() -> setAdapter
com.android.phone.ADNList$1 -> com.android.phone.ADNList$1:
    172:172:void <init>(com.android.phone.ADNList) -> <init>
    174:182:boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.android.phone.ADNList$QueryHandler -> com.android.phone.ADNList$QueryHandler:
    203:204:void <init>(com.android.phone.ADNList,android.content.ContentResolver) -> <init>
    233:233:void onDeleteComplete(int,java.lang.Object,int) -> onDeleteComplete
    221:221:void onInsertComplete(int,java.lang.Object,android.net.Uri) -> onInsertComplete
    210:215:void onQueryComplete(int,java.lang.Object,android.database.Cursor) -> onQueryComplete
    227:227:void onUpdateComplete(int,java.lang.Object,int) -> onUpdateComplete
com.android.phone.Assert -> com.android.phone.Assert:
    56:56:void fail(java.lang.String) -> fail
    36:40:void isMainThread() -> isMainThread
    31:31:void isTrue(boolean) -> isTrue
com.android.phone.CLIRListPreference -> com.android.phone.CLIRListPreference:
    24:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:43:void <init>(android.content.Context) -> <init>
    22:22:com.android.phone.TimeConsumingPreferenceListener access$100(com.android.phone.CLIRListPreference) -> access$100
    22:22:com.android.internal.telephony.Phone access$200(com.android.phone.CLIRListPreference) -> access$200
    150:155:int convertValueToCLIRMode(java.lang.String) -> convertValueToCLIRMode
    90:138:void handleGetCLIRResult(int[]) -> handleGetCLIRResult
    64:84:void init(com.android.phone.TimeConsumingPreferenceListener,boolean,com.android.internal.telephony.Phone) -> init
    48:58:void onDialogClosed(boolean) -> onDialogClosed
com.android.phone.CLIRListPreference$MyHandler -> com.android.phone.CLIRListPreference$MyHandler:
    160:160:void <init>(com.android.phone.CLIRListPreference) -> <init>
    160:160:void <init>(com.android.phone.CLIRListPreference,com.android.phone.CLIRListPreference$1) -> <init>
    177:199:void handleGetCLIRResponse(android.os.Message) -> handleGetCLIRResponse
    166:171:void handleMessage(android.os.Message) -> handleMessage
    205:213:void handleSetCLIRResponse(android.os.Message) -> handleSetCLIRResponse
com.android.phone.CallBarringDeselectAllPreference -> com.android.phone.CallBarringDeselectAllPreference:
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:57:void onBindDialogView(android.view.View) -> onBindDialogView
    46:47:void showDialog(android.os.Bundle) -> showDialog
com.android.phone.CallBarringEditPreference -> com.android.phone.CallBarringEditPreference:
    56:91:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:100:void <init>(android.content.Context) -> <init>
    51:51:com.android.phone.TimeConsumingPreferenceListener access$100(com.android.phone.CallBarringEditPreference) -> access$100
    51:51:java.lang.String access$200(com.android.phone.CallBarringEditPreference) -> access$200
    51:51:com.android.internal.telephony.Phone access$300(com.android.phone.CallBarringEditPreference) -> access$300
    51:51:int access$400(com.android.internal.telephony.Phone) -> access$400
    224:227:int getServiceClassForCallBarring(com.android.internal.telephony.Phone) -> getServiceClassForCallBarring
    216:216:void handleCallBarringResult(boolean) -> handleCallBarringResult
    107:115:void init(com.android.phone.TimeConsumingPreferenceListener,boolean,com.android.internal.telephony.Phone) -> init
    170:180:void onBindDialogView(android.view.View) -> onBindDialogView
    134:157:void onBindView(android.view.View) -> onBindView
    122:123:void onClick(android.content.DialogInterface,int) -> onClick
    186:210:void onDialogClosed(boolean) -> onDialogClosed
    164:165:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    241:241:boolean shouldDisableDependents() -> shouldDisableDependents
    128:129:void showDialog(android.os.Bundle) -> showDialog
    235:236:void updateSummaryText() -> updateSummaryText
com.android.phone.CallBarringEditPreference$MyHandler -> com.android.phone.CallBarringEditPreference$MyHandler:
    248:248:void <init>(com.android.phone.CallBarringEditPreference,com.android.phone.CallBarringEditPreference$1) -> <init>
    254:255:void <init>(com.android.phone.CallBarringEditPreference) -> <init>
    275:319:void handleGetCallBarringResponse(android.os.Message) -> handleGetCallBarringResponse
    261:266:void handleMessage(android.os.Message) -> handleMessage
    324:343:void handleSetCallBarringResponse(android.os.Message) -> handleSetCallBarringResponse
com.android.phone.CallFeaturesSetting -> com.android.phone.CallFeaturesSetting:
    82:310:void <init>() -> <init>
    82:82:void access$000(java.lang.String) -> access$000
    82:82:void access$100(com.android.phone.CallFeaturesSetting,boolean) -> access$100
    82:82:android.preference.SwitchPreference access$300(com.android.phone.CallFeaturesSetting) -> access$300
    82:82:android.preference.Preference access$400(com.android.phone.CallFeaturesSetting) -> access$400
    82:82:void access$500(com.android.phone.CallFeaturesSetting) -> access$500
    184:201:boolean doSsOverUtPrecautions(android.preference.Preference) -> doSsOverUtPrecautions
    611:614:android.content.res.Resources getResourcesForSubId() -> getResourcesForSubId
    603:607:void goUpToTopLevelSetting(android.app.Activity,com.android.phone.SubscriptionInfoHelper) -> goUpToTopLevelSetting
    136:159:void handleAirplaneModeChange(boolean) -> handleAirplaneModeChange
    285:291:void listenPhoneState(boolean) -> listenPhoneState
    584:584:void log(java.lang.String) -> log
    544:561:void maybeHideVoicemailSettings() -> maybeHideVoicemailSettings
    253:270:void onCreate(android.os.Bundle) -> onCreate
    575:580:void onNewIntent(android.content.Intent) -> onNewIntent
    589:594:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    324:335:void onPause() -> onPause
    219:242:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    167:177:boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    341:446:void onResume() -> onResume
    274:280:void updateImsManager(com.android.internal.telephony.Phone) -> updateImsManager
    450:534:void updateVtWfc() -> updateVtWfc
com.android.phone.CallFeaturesSetting$1 -> com.android.phone.CallFeaturesSetting$1:
    120:120:void <init>(com.android.phone.CallFeaturesSetting) -> <init>
    123:129:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.phone.CallFeaturesSetting$2 -> com.android.phone.CallFeaturesSetting$2:
    225:225:void <init>(com.android.phone.CallFeaturesSetting) -> <init>
    228:233:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.CallFeaturesSetting$3 -> com.android.phone.CallFeaturesSetting$3:
    311:311:void <init>(com.android.phone.CallFeaturesSetting) -> <init>
    317:317:void onProvisioningIntChanged(int,int) -> onProvisioningIntChanged
com.android.phone.CallFeaturesSetting$CallFeaturesTelephonyCallback -> com.android.phone.CallFeaturesSetting$CallFeaturesTelephonyCallback:
    295:295:void <init>(com.android.phone.CallFeaturesSetting) -> <init>
    295:295:void <init>(com.android.phone.CallFeaturesSetting,com.android.phone.CallFeaturesSetting$1) -> <init>
    301:305:void onCallStateChanged(int) -> onCallStateChanged
com.android.phone.CallForwardEditPreference -> com.android.phone.CallForwardEditPreference:
    35:35:void <clinit>() -> <clinit>
    46:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:80:void <init>(android.content.Context) -> <init>
    32:32:com.android.phone.CarrierXmlParser$SsEntry$SSAction access$100(com.android.phone.CallForwardEditPreference) -> access$100
    32:32:boolean access$1000(com.android.phone.CallForwardEditPreference) -> access$1000
    32:32:com.android.phone.CarrierXmlParser$SsEntry$SSAction access$102(com.android.phone.CallForwardEditPreference,com.android.phone.CarrierXmlParser$SsEntry$SSAction) -> access$102
    32:32:com.android.internal.telephony.Phone access$1100(com.android.phone.CallForwardEditPreference) -> access$1100
    32:32:com.android.phone.CallForwardEditPreference$MyHandler access$1200(com.android.phone.CallForwardEditPreference) -> access$1200
    32:32:long access$1300(com.android.phone.CallForwardEditPreference) -> access$1300
    32:32:int access$1400(com.android.phone.CallForwardEditPreference) -> access$1400
    32:32:int access$1402(com.android.phone.CallForwardEditPreference,int) -> access$1402
    32:32:int access$1500(com.android.phone.CallForwardEditPreference) -> access$1500
    32:32:int access$1502(com.android.phone.CallForwardEditPreference,int) -> access$1502
    32:32:java.lang.Object access$1600(com.android.phone.CallForwardEditPreference) -> access$1600
    32:32:java.lang.Object access$1602(com.android.phone.CallForwardEditPreference,java.lang.Object) -> access$1602
    32:32:java.util.HashMap access$1700(com.android.phone.CallForwardEditPreference) -> access$1700
    32:32:com.android.phone.CarrierXmlParser access$200(com.android.phone.CallForwardEditPreference) -> access$200
    32:32:com.android.phone.TimeConsumingPreferenceListener access$500(com.android.phone.CallForwardEditPreference) -> access$500
    32:32:int access$600(com.android.phone.CallForwardEditPreference) -> access$600
    32:32:void access$700(com.android.phone.CallForwardEditPreference,com.android.internal.telephony.CallForwardInfo) -> access$700
    32:32:boolean access$800(com.android.phone.CallForwardEditPreference) -> access$800
    32:32:void access$900(com.android.phone.CallForwardEditPreference) -> access$900
    286:290:java.lang.String getCurrentCountryIso() -> getCurrentCountryIso
    206:231:void handleCallForwardResult(com.android.internal.telephony.CallForwardInfo) -> handleCallForwardResult
    85:97:void init(com.android.phone.TimeConsumingPreferenceListener,com.android.internal.telephony.Phone,boolean,boolean) -> init
    605:607:boolean isSkipCFFailToDisableDialog() -> isSkipCFFailToDisableDialog
    109:110:void onBindDialogView(android.view.View) -> onBindDialogView
    115:116:void onClick(android.content.DialogInterface,int) -> onClick
    121:199:void onDialogClosed(boolean) -> onDialogClosed
    102:103:void restoreCallForwardInfo(com.android.internal.telephony.CallForwardInfo) -> restoreCallForwardInfo
    241:253:void startCallForwardOptionsQuery() -> startCallForwardOptionsQuery
    258:274:void updateSummaryText() -> updateSummaryText
com.android.phone.CallForwardEditPreference$MyHandler -> com.android.phone.CallForwardEditPreference$MyHandler:
    297:303:void <init>(com.android.phone.CallForwardEditPreference) -> <init>
    297:297:void <init>(com.android.phone.CallForwardEditPreference,com.android.phone.CallForwardEditPreference$1) -> <init>
    297:297:void access$1800(com.android.phone.CallForwardEditPreference$MyHandler,android.telephony.TelephonyManager$UssdResponseCallback,com.android.phone.CarrierXmlParser$SsEntry$SSAction,java.util.HashMap) -> access$1800
    297:297:com.android.internal.telephony.CallForwardInfo[] access$300(com.android.phone.CallForwardEditPreference$MyHandler,java.util.HashMap) -> access$300
    297:297:void access$400(com.android.phone.CallForwardEditPreference$MyHandler,java.lang.Object,java.lang.Throwable) -> access$400
    361:467:void handleGetCFResponse(android.os.Message) -> handleGetCFResponse
    344:355:void handleMessage(android.os.Message) -> handleMessage
    472:494:void handleSetCFResponse(android.os.Message) -> handleSetCFResponse
    564:592:com.android.internal.telephony.CallForwardInfo[] makeCallForwardInfo(java.util.HashMap) -> makeCallForwardInfo
    533:534:android.os.Message makeGetCfMessage(int,int,java.lang.Object) -> makeGetCfMessage
    540:541:android.os.Message makeSetCfMessage(int,int) -> makeSetCfMessage
    500:518:void prepareUssdCommand(android.os.Message,com.android.phone.CarrierXmlParser$SsEntry$SSAction) -> prepareUssdCommand
    547:557:void sendCfMessage(java.lang.Object,java.lang.Throwable) -> sendCfMessage
    524:529:void sendUssdCommand(android.telephony.TelephonyManager$UssdResponseCallback,com.android.phone.CarrierXmlParser$SsEntry$SSAction,java.util.HashMap) -> sendUssdCommand
com.android.phone.CallForwardEditPreference$MyHandler$1 -> com.android.phone.CallForwardEditPreference$MyHandler$1:
    304:304:void <init>(com.android.phone.CallForwardEditPreference$MyHandler) -> <init>
    308:329:void onReceiveUssdResponse(android.telephony.TelephonyManager,java.lang.String,java.lang.CharSequence) -> onReceiveUssdResponse
    335:338:void onReceiveUssdResponseFailed(android.telephony.TelephonyManager,java.lang.String,int) -> onReceiveUssdResponseFailed
com.android.phone.CallForwardEditPreference$MyHandler$2 -> com.android.phone.CallForwardEditPreference$MyHandler$2:
    513:513:void <init>(com.android.phone.CallForwardEditPreference$MyHandler) -> <init>
    516:516:void run() -> run
com.android.phone.CallNotifier -> com.android.phone.CallNotifier:
    72:758:void <init>(com.android.phone.PhoneGlobals) -> <init>
    60:60:void access$000(com.android.phone.CallNotifier,java.lang.String) -> access$000
    60:60:com.android.internal.telephony.CallManager access$100(com.android.phone.CallNotifier) -> access$100
    60:60:android.bluetooth.BluetoothHeadset access$200(com.android.phone.CallNotifier) -> access$200
    60:60:android.bluetooth.BluetoothHeadset access$202(com.android.phone.CallNotifier,android.bluetooth.BluetoothHeadset) -> access$202
    60:60:boolean access$300(com.android.phone.CallNotifier) -> access$300
    60:60:android.media.AudioManager access$400(com.android.phone.CallNotifier) -> access$400
    60:60:boolean access$500() -> access$500
    60:60:void access$600(com.android.phone.CallNotifier) -> access$600
    60:60:android.media.ToneGenerator access$700(com.android.phone.CallNotifier) -> access$700
    60:60:java.util.Map access$800(com.android.phone.CallNotifier) -> access$800
    60:60:java.util.Map access$900(com.android.phone.CallNotifier) -> access$900
    636:637:boolean containsSubId(java.util.List,int) -> containsSubId
    161:172:void createSignalInfoToneGenerator() -> createSignalInfoToneGenerator
    191:242:void handleMessage(android.os.Message) -> handleMessage
    116:123:com.android.phone.CallNotifier init(com.android.phone.PhoneGlobals) -> init
    486:486:boolean isBluetoothAudioOn() -> isBluetoothAudioOn
    798:798:void log(java.lang.String) -> log
    494:502:void onDisplayInfo(android.os.AsyncResult) -> onDisplayInfo
    713:741:void onSignalInfo(android.os.AsyncResult) -> onSignalInfo
    513:552:void onSuppServiceFailed(android.os.AsyncResult) -> onSuppServiceFailed
    649:674:void onTtyModeReceived(android.os.AsyncResult) -> onTtyModeReceived
    180:186:void registerForNotifications() -> registerForNotifications
    754:755:void stopSignalInfoTone() -> stopSignalInfoTone
    251:254:void updateCallNotifierRegistrationsAfterRadioTechnologyChange() -> updateCallNotifierRegistrationsAfterRadioTechnologyChange
    557:557:void updatePhoneStateListeners(boolean) -> updatePhoneStateListeners
    562:623:void updatePhoneStateListeners(boolean,int,int) -> updatePhoneStateListeners
com.android.phone.CallNotifier$1 -> com.android.phone.CallNotifier$1:
    148:148:void <init>(com.android.phone.CallNotifier) -> <init>
    151:151:void onSubscriptionsChanged() -> onSubscriptionsChanged
com.android.phone.CallNotifier$2 -> com.android.phone.CallNotifier$2:
    571:571:void <init>(com.android.phone.CallNotifier) -> <init>
    571:571:int compare(java.lang.Object,java.lang.Object) -> compare
    573:574:int compare(java.lang.Integer,java.lang.Integer) -> compare
com.android.phone.CallNotifier$3 -> com.android.phone.CallNotifier$3:
    759:759:void <init>(com.android.phone.CallNotifier) -> <init>
    761:761:void onServiceConnected(int,android.bluetooth.BluetoothProfile) -> onServiceConnected
    766:766:void onServiceDisconnected(int) -> onServiceDisconnected
com.android.phone.CallNotifier$CallNotifierTelephonyCallback -> com.android.phone.CallNotifier$CallNotifierTelephonyCallback:
    776:778:void <init>(com.android.phone.CallNotifier,int) -> <init>
    790:793:void onCallForwardingIndicatorChanged(boolean) -> onCallForwardingIndicatorChanged
    784:785:void onMessageWaitingIndicatorChanged(boolean) -> onMessageWaitingIndicatorChanged
com.android.phone.CallNotifier$InCallTonePlayer -> com.android.phone.CallNotifier$InCallTonePlayer:
    307:310:void <init>(com.android.phone.CallNotifier,int) -> <init>
    315:479:void run() -> run
com.android.phone.CallNotifier$SignalInfoTonePlayer -> com.android.phone.CallNotifier$SignalInfoTonePlayer:
    689:691:void <init>(com.android.phone.CallNotifier,int) -> <init>
    696:703:void run() -> run
com.android.phone.CallWaitingSwitchPreference -> com.android.phone.CallWaitingSwitchPreference:
    26:39:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:47:void <init>(android.content.Context) -> <init>
    23:23:java.util.concurrent.ScheduledExecutorService access$100(com.android.phone.CallWaitingSwitchPreference) -> access$100
    23:23:android.telephony.TelephonyManager access$200(com.android.phone.CallWaitingSwitchPreference) -> access$200
    23:23:com.android.phone.TimeConsumingPreferenceListener access$300(com.android.phone.CallWaitingSwitchPreference) -> access$300
    23:23:boolean access$400(com.android.phone.CallWaitingSwitchPreference) -> access$400
    23:23:boolean access$402(com.android.phone.CallWaitingSwitchPreference,boolean) -> access$402
    23:23:int access$500(com.android.phone.CallWaitingSwitchPreference) -> access$500
    23:23:int access$600(com.android.phone.CallWaitingSwitchPreference) -> access$600
    52:67:void init(com.android.phone.TimeConsumingPreferenceListener,boolean,com.android.internal.telephony.Phone) -> init
    102:106:void onClick() -> onClick
    73:75:void queryStatusCallBack(int) -> queryStatusCallBack
    79:96:void updateStatusCallBack(int) -> updateStatusCallBack
com.android.phone.CallWaitingSwitchPreference$$ExternalSyntheticLambda0 -> com.android.phone.CallWaitingSwitchPreference$$ExternalSyntheticLambda0:
    com.android.phone.CallWaitingSwitchPreference com.android.phone.CallWaitingSwitchPreference$$InternalSyntheticLambda$0$294e8e9cf66444698282ee059432e3852366259af36f58f2601fed5d52c4d4af$0.f$0 -> f$0
    void com.android.phone.CallWaitingSwitchPreference$$InternalSyntheticLambda$0$294e8e9cf66444698282ee059432e3852366259af36f58f2601fed5d52c4d4af$0.<init>(com.android.phone.CallWaitingSwitchPreference) -> <init>
    void com.android.phone.CallWaitingSwitchPreference$$InternalSyntheticLambda$0$294e8e9cf66444698282ee059432e3852366259af36f58f2601fed5d52c4d4af$0.accept(java.lang.Object) -> accept
com.android.phone.CallWaitingSwitchPreference$1 -> com.android.phone.CallWaitingSwitchPreference$1:
    86:86:void <init>(com.android.phone.CallWaitingSwitchPreference,java.util.function.Consumer) -> <init>
    89:89:void run() -> run
com.android.phone.CallWaitingSwitchPreference$MyHandler -> com.android.phone.CallWaitingSwitchPreference$MyHandler:
    110:110:void <init>(com.android.phone.CallWaitingSwitchPreference) -> <init>
    110:110:void <init>(com.android.phone.CallWaitingSwitchPreference,com.android.phone.CallWaitingSwitchPreference$1) -> <init>
    115:117:void handleMessage(android.os.Message) -> handleMessage
    123:152:void updateUi() -> updateUi
com.android.phone.CallWaitingUssdResultReceiver -> com.android.phone.CallWaitingUssdResultReceiver:
    46:49:void <init>(android.os.Handler,com.android.internal.telephony.IIntegerConsumer,com.android.phone.CarrierXmlParser,com.android.phone.CarrierXmlParser$SsEntry$SSAction) -> <init>
    78:99:int getStatusFromResponse(android.telephony.UssdResponse) -> getStatusFromResponse
    110:110:void log(java.lang.String) -> log
    54:70:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.android.phone.CarrierConfigLoader -> com.android.phone.CarrierConfigLoader:
    123:720:void <init>(android.content.Context,com.android.internal.telephony.SubscriptionInfoUpdater,android.os.Looper) -> <init>
    87:87:java.lang.String access$100(int) -> access$100
    87:87:java.lang.String access$1000(com.android.phone.CarrierConfigLoader) -> access$1000
    87:87:android.os.PersistableBundle access$1100(com.android.phone.CarrierConfigLoader,java.lang.String,java.lang.String,int) -> access$1100
    87:87:void access$1200(com.android.phone.CarrierConfigLoader,java.lang.String) -> access$1200
    87:87:android.os.PersistableBundle[] access$1300(com.android.phone.CarrierConfigLoader) -> access$1300
    87:87:android.os.PersistableBundle[] access$1400(com.android.phone.CarrierConfigLoader) -> access$1400
    87:87:android.os.Handler access$1500(com.android.phone.CarrierConfigLoader) -> access$1500
    87:87:boolean access$1600(com.android.phone.CarrierConfigLoader,java.lang.String,int,int) -> access$1600
    87:87:java.lang.Integer access$1700(com.android.phone.CarrierConfigLoader,int) -> access$1700
    87:87:void access$1800(com.android.phone.CarrierConfigLoader,int) -> access$1800
    87:87:void access$1900(com.android.phone.CarrierConfigLoader,java.lang.String) -> access$1900
    87:87:void access$200(com.android.phone.CarrierConfigLoader,java.lang.String) -> access$200
    87:87:com.android.phone.CarrierConfigLoader$CarrierServiceConnection[] access$2000(com.android.phone.CarrierConfigLoader) -> access$2000
    87:87:void access$2100(com.android.phone.CarrierConfigLoader,android.content.Context,com.android.phone.CarrierConfigLoader$CarrierServiceConnection,int) -> access$2100
    87:87:void access$2200(com.android.phone.CarrierConfigLoader,int) -> access$2200
    87:87:void access$2300(com.android.phone.CarrierConfigLoader) -> access$2300
    87:87:android.os.PersistableBundle access$2400(com.android.phone.CarrierConfigLoader,java.lang.String) -> access$2400
    87:87:android.os.PersistableBundle access$2502(com.android.phone.CarrierConfigLoader,android.os.PersistableBundle) -> access$2502
    87:87:void access$2600(com.android.phone.CarrierConfigLoader,int,boolean) -> access$2600
    87:87:com.android.phone.CarrierConfigLoader$CarrierServiceConnection[] access$2700(com.android.phone.CarrierConfigLoader) -> access$2700
    87:87:void access$2800(com.android.phone.CarrierConfigLoader,android.content.Context,com.android.phone.CarrierConfigLoader$CarrierServiceConnection,int) -> access$2800
    87:87:android.content.Context access$300(com.android.phone.CarrierConfigLoader) -> access$300
    87:87:boolean[] access$400(com.android.phone.CarrierConfigLoader) -> access$400
    87:87:boolean[] access$500(com.android.phone.CarrierConfigLoader) -> access$500
    87:87:void access$600(com.android.phone.CarrierConfigLoader,int) -> access$600
    87:87:boolean access$700(com.android.phone.CarrierConfigLoader,java.lang.String) -> access$700
    87:87:android.os.PersistableBundle[] access$800(com.android.phone.CarrierConfigLoader) -> access$800
    87:87:java.lang.String access$900(com.android.phone.CarrierConfigLoader,int) -> access$900
    839:855:boolean bindToConfigPackage(java.lang.String,int,int) -> bindToConfigPackage
    797:797:void broadcastConfigChangedIntent(int) -> broadcastConfigChangedIntent
    801:834:void broadcastConfigChangedIntent(int,boolean) -> broadcastConfigChangedIntent
    1158:1171:boolean clearCachedConfigForPackage(java.lang.String) -> clearCachedConfigForPackage
    746:761:void clearConfigForPhone(int,boolean) -> clearConfigForPhone
    1436:1478:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1556:1616:void dumpCarrierServiceIfBound(java.io.FileDescriptor,com.android.internal.telephony.IndentingPrintWriter,java.lang.String,java.lang.String,boolean) -> dumpCarrierServiceIfBound
    1523:1536:void enforceCallerIsSystemOrRequestingPackage(java.lang.String) -> enforceCallerIsSystemOrRequestingPackage
    1743:1743:java.lang.String eventToString(int) -> eventToString
    941:948:int getCarrierIdForPhoneId(int) -> getCarrierIdForPhoneId
    873:890:android.service.carrier.CarrierIdentifier getCarrierIdentifierForPhoneId(int) -> getCarrierIdentifierForPhoneId
    897:906:java.lang.String getCarrierPackageForPhoneId(int) -> getCarrierPackageForPhoneId
    1223:1223:android.os.PersistableBundle getConfigForSubId(int,java.lang.String) -> getConfigForSubId
    1230:1264:android.os.PersistableBundle getConfigForSubIdWithFeature(int,java.lang.String,java.lang.String) -> getConfigForSubIdWithFeature
    1385:1385:android.os.PersistableBundle getConfigFromCarrierApp(int) -> getConfigFromCarrierApp
    1380:1380:android.os.PersistableBundle getConfigFromDefaultApp(int) -> getConfigFromDefaultApp
    1367:1370:java.lang.String getDefaultCarrierServicePackageName() -> getDefaultCarrierServicePackageName
    1128:1134:java.lang.String getFilePathForLogging(java.lang.String,java.lang.String) -> getFilePathForLogging
    1184:1184:java.lang.String getFilenameForConfig(java.lang.String,java.lang.String,java.lang.String,int) -> getFilenameForConfig
    1189:1189:java.lang.String getFilenameForNoSimConfig(java.lang.String) -> getFilenameForNoSimConfig
    1375:1375:android.os.Handler getHandler() -> getHandler
    913:920:java.lang.String getIccIdForPhoneId(int) -> getIccIdForPhoneId
    1420:1424:java.lang.Integer getMessageToken(int) -> getMessageToken
    1390:1390:android.os.PersistableBundle getNoSimConfig() -> getNoSimConfig
    1395:1395:android.os.PersistableBundle getOverrideConfig(int) -> getOverrideConfig
    1195:1196:java.lang.String getPackageVersion(java.lang.String) -> getPackageVersion
    927:934:int getSpecificCarrierIdForPhoneId(int) -> getSpecificCarrierIdForPhoneId
    1620:1625:boolean hasCarrierPrivileges(java.lang.String,int) -> hasCarrierPrivileges
    729:740:com.android.phone.CarrierConfigLoader init(android.content.Context) -> init
    1284:1303:void lambda$overrideConfig$0(int,android.os.PersistableBundle,boolean) -> lambda$overrideConfig$0
    1748:1748:void logd(java.lang.String) -> logd
    1752:1752:void logd(java.lang.String,java.lang.Throwable) -> logd
    1756:1757:void logdWithLocalLog(java.lang.String) -> logdWithLocalLog
    1761:1762:void loge(java.lang.String) -> loge
    1322:1338:void notifyConfigChangedForSubId(int) -> notifyConfigChangedForSubId
    769:793:void notifySubscriptionInfoUpdater(int) -> notifySubscriptionInfoUpdater
    1214:1216:void onMultiSimConfigChanged() -> onMultiSimConfigChanged
    1273:1283:void overrideConfig(int,android.os.PersistableBundle,boolean) -> overrideConfig
    1310:1314:void overrideConfig(android.os.PersistableBundle[],int,android.os.PersistableBundle) -> overrideConfig
    1485:1510:void printConfig(android.os.PersistableBundle,com.android.internal.telephony.IndentingPrintWriter,java.lang.String) -> printConfig
    1059:1117:android.os.PersistableBundle restoreConfigFromXml(java.lang.String,java.lang.String,int,boolean) -> restoreConfigFromXml
    1141:1141:android.os.PersistableBundle restoreConfigFromXml(java.lang.String,java.lang.String,int) -> restoreConfigFromXml
    1145:1145:android.os.PersistableBundle restoreNoSimConfigFromXml(java.lang.String) -> restoreNoSimConfigFromXml
    976:1025:void saveConfigToXml(java.lang.String,java.lang.String,int,android.service.carrier.CarrierIdentifier,android.os.PersistableBundle,boolean) -> saveConfigToXml
    1032:1032:void saveConfigToXml(java.lang.String,java.lang.String,int,android.service.carrier.CarrierIdentifier,android.os.PersistableBundle) -> saveConfigToXml
    1037:1037:void saveNoSimConfigToXml(java.lang.String,android.os.PersistableBundle) -> saveNoSimConfigToXml
    1400:1402:void unbindIfBound(android.content.Context,com.android.phone.CarrierConfigLoader$CarrierServiceConnection,int) -> unbindIfBound
    1408:1410:void unbindIfBoundForNoSimConfig(android.content.Context,com.android.phone.CarrierConfigLoader$CarrierServiceConnection,int) -> unbindIfBoundForNoSimConfig
    1210:1210:void updateConfigForPhoneId(int) -> updateConfigForPhoneId
    1343:1360:void updateConfigForPhoneId(int,java.lang.String) -> updateConfigForPhoneId
com.android.phone.CarrierConfigLoader$$ExternalSyntheticLambda0 -> com.android.phone.CarrierConfigLoader$$ExternalSyntheticLambda0:
    com.android.phone.CarrierConfigLoader com.android.phone.CarrierConfigLoader$$InternalSyntheticLambda$0$82c737a93bb309b5994c2ac1449029fd0869dff46b974665c4e10c0a40a3c0e2$0.f$0 -> f$0
    boolean com.android.phone.CarrierConfigLoader$$InternalSyntheticLambda$0$82c737a93bb309b5994c2ac1449029fd0869dff46b974665c4e10c0a40a3c0e2$0.f$3 -> f$3
    int com.android.phone.CarrierConfigLoader$$InternalSyntheticLambda$0$82c737a93bb309b5994c2ac1449029fd0869dff46b974665c4e10c0a40a3c0e2$0.f$1 -> f$1
    android.os.PersistableBundle com.android.phone.CarrierConfigLoader$$InternalSyntheticLambda$0$82c737a93bb309b5994c2ac1449029fd0869dff46b974665c4e10c0a40a3c0e2$0.f$2 -> f$2
    void com.android.phone.CarrierConfigLoader$$InternalSyntheticLambda$0$82c737a93bb309b5994c2ac1449029fd0869dff46b974665c4e10c0a40a3c0e2$0.<init>(com.android.phone.CarrierConfigLoader,int,android.os.PersistableBundle,boolean) -> <init>
    void com.android.phone.CarrierConfigLoader$$InternalSyntheticLambda$0$82c737a93bb309b5994c2ac1449029fd0869dff46b974665c4e10c0a40a3c0e2$0.run() -> run
com.android.phone.CarrierConfigLoader$1 -> com.android.phone.CarrierConfigLoader$1:
    1159:1159:void <init>(com.android.phone.CarrierConfigLoader,java.lang.String) -> <init>
    1161:1164:boolean accept(java.io.File,java.lang.String) -> accept
com.android.phone.CarrierConfigLoader$CarrierServiceConnection -> com.android.phone.CarrierConfigLoader$CarrierServiceConnection:
    1635:1638:void <init>(com.android.phone.CarrierConfigLoader,int,java.lang.String,int) -> <init>
    1656:1657:void onBindingDied(android.content.ComponentName) -> onBindingDied
    1662:1663:void onNullBinding(android.content.ComponentName) -> onNullBinding
    1643:1645:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    1650:1651:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.android.phone.CarrierConfigLoader$ConfigHandler -> com.android.phone.CarrierConfigLoader$ConfigHandler:
    208:209:void <init>(com.android.phone.CarrierConfigLoader,android.os.Looper) -> <init>
    214:670:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.CarrierConfigLoader$ConfigHandler$1 -> com.android.phone.CarrierConfigLoader$ConfigHandler$1:
    321:321:void <init>(com.android.phone.CarrierConfigLoader$ConfigHandler,android.os.Handler,com.android.phone.CarrierConfigLoader$CarrierServiceConnection,int,android.service.carrier.CarrierIdentifier) -> <init>
    324:344:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.android.phone.CarrierConfigLoader$ConfigHandler$2 -> com.android.phone.CarrierConfigLoader$ConfigHandler$2:
    451:451:void <init>(com.android.phone.CarrierConfigLoader$ConfigHandler,android.os.Handler,com.android.phone.CarrierConfigLoader$CarrierServiceConnection,int,android.service.carrier.CarrierIdentifier) -> <init>
    454:484:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.android.phone.CarrierConfigLoader$ConfigHandler$3 -> com.android.phone.CarrierConfigLoader$ConfigHandler$3:
    631:631:void <init>(com.android.phone.CarrierConfigLoader$ConfigHandler,android.os.Handler,com.android.phone.CarrierConfigLoader$CarrierServiceConnection,int) -> <init>
    634:651:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.android.phone.CarrierConfigLoader$ConfigLoaderBroadcastReceiver -> com.android.phone.CarrierConfigLoader$ConfigLoaderBroadcastReceiver:
    1667:1667:void <init>(com.android.phone.CarrierConfigLoader) -> <init>
    1667:1667:void <init>(com.android.phone.CarrierConfigLoader,com.android.phone.CarrierConfigLoader$1) -> <init>
    1670:1690:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.phone.CarrierXmlParser -> com.android.phone.CarrierXmlParser:
    422:438:void <init>(android.content.Context,int) -> <init>
    664:679:boolean compareCommand(java.lang.String,java.lang.String) -> compareCommand
    471:494:com.android.phone.CarrierXmlParser$SsFeature generateFeatureList(android.content.res.XmlResourceParser) -> generateFeatureList
    645:645:java.lang.String getCallerIdActivateCommandFromXml() -> getCallerIdActivateCommandFromXml
    649:649:java.lang.String getCallerIdDeactivateCommandFromXml() -> getCallerIdDeactivateCommandFromXml
    635:641:com.android.phone.CarrierXmlParser$SsEntry$SSAction getCallerIdUssdCommandAction(java.lang.String) -> getCallerIdUssdCommandAction
    619:619:com.android.phone.CarrierXmlParser$SsFeature getFeature(java.lang.String) -> getFeature
    595:597:java.lang.String getSpecificAttributeValue(android.content.res.XmlResourceParser,java.lang.String) -> getSpecificAttributeValue
    654:655:boolean isCallerIdActivate(java.lang.String) -> isCallerIdActivate
    659:660:boolean isCallerIdDeactivate(java.lang.String) -> isCallerIdDeactivate
    443:464:java.util.HashMap parseXml(android.content.res.XmlResourceParser) -> parseXml
    529:561:com.android.phone.CarrierXmlParser$SsEntry readCommandEntry(android.content.res.XmlResourceParser) -> readCommandEntry
    502:520:void readCommandResultEntry(android.content.res.XmlResourceParser,com.android.phone.CarrierXmlParser$SsFeature) -> readCommandResultEntry
    567:583:void readParameters(android.content.res.XmlResourceParser,com.android.phone.CarrierXmlParser$SsEntry,int,java.lang.String) -> readParameters
    605:607:java.lang.String readText(android.content.res.XmlResourceParser) -> readText
com.android.phone.CarrierXmlParser$SsEntry -> com.android.phone.CarrierXmlParser$SsEntry:
    187:198:void <init>(java.lang.String) -> <init>
    215:227:java.lang.String getCommandStructure() -> getCommandStructure
    275:313:java.util.HashMap getResponseSet(java.lang.String,java.util.HashMap) -> getResponseSet
    238:263:java.lang.String makeCommand(java.util.Map) -> makeCommand
    204:208:java.lang.String toString() -> toString
com.android.phone.CarrierXmlParser$SsEntry$SSAction -> com.android.phone.CarrierXmlParser$SsEntry$SSAction:
    179:183:void <clinit>() -> <clinit>
    179:179:void <init>(java.lang.String,int) -> <init>
    179:179:com.android.phone.CarrierXmlParser$SsEntry$SSAction valueOf(java.lang.String) -> valueOf
    179:179:com.android.phone.CarrierXmlParser$SsEntry$SSAction[] values() -> values
com.android.phone.CarrierXmlParser$SsFeature -> com.android.phone.CarrierXmlParser$SsFeature:
    355:360:void <init>(com.android.phone.CarrierXmlParser) -> <init>
    385:386:java.lang.String getCommandStructure(com.android.phone.CarrierXmlParser$SsEntry$SSAction) -> getCommandStructure
    365:368:java.lang.String getResponseCodeString() -> getResponseCodeString
    411:412:java.util.HashMap getResponseSet(com.android.phone.CarrierXmlParser$SsEntry$SSAction,java.lang.String) -> getResponseSet
    398:399:java.lang.String makeCommand(com.android.phone.CarrierXmlParser$SsEntry$SSAction,java.util.Map) -> makeCommand
    376:376:java.lang.String toString() -> toString
com.android.phone.CarrierXmlParser$SsResultEntry -> com.android.phone.CarrierXmlParser$SsResultEntry:
    328:328:void <init>() -> <init>
    344:345:java.lang.String getDefinitionByCompareValue(java.lang.String) -> getDefinitionByCompareValue
    333:333:java.lang.String toString() -> toString
com.android.phone.CarrierXmlParser$UssdParser -> com.android.phone.CarrierXmlParser$UssdParser:
    137:141:void <init>(java.lang.String) -> <init>
    171:171:java.util.Vector getResult() -> getResult
    151:163:void newFromResponseString(java.lang.String) -> newFromResponseString
com.android.phone.CdmaCallForwardOptions -> com.android.phone.CdmaCallForwardOptions:
    42:42:void <clinit>() -> <clinit>
    39:63:void <init>() -> <init>
    211:254:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    74:147:void onCreate(android.os.Bundle) -> onCreate
    199:206:void onFinished(android.preference.Preference,boolean) -> onFinished
    259:264:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    153:177:void onResume() -> onResume
    183:193:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.android.phone.CdmaCallOptions -> com.android.phone.CdmaCallOptions:
    34:34:void <init>() -> <init>
    34:34:void access$000(com.android.phone.CdmaCallOptions,boolean) -> access$000
    57:120:void onCreate(android.os.Bundle) -> onCreate
    175:180:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    185:185:boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    126:127:void onStop() -> onStop
    138:156:void registerMmTelCapsCallback(int) -> registerMmTelCapsCallback
    131:134:void unregisterMmTelCapsCallback() -> unregisterMmTelCapsCallback
    161:169:void updatePreferencesEnabled(boolean) -> updatePreferencesEnabled
com.android.phone.CdmaCallOptions$UtCallback -> com.android.phone.CdmaCallOptions$UtCallback:
    41:41:void <init>(com.android.phone.CdmaCallOptions) -> <init>
    41:41:void <init>(com.android.phone.CdmaCallOptions,com.android.phone.CdmaCallOptions$1) -> <init>
    44:46:void onCapabilitiesStatusChanged(android.telephony.ims.feature.MmTelFeature$MmTelCapabilities) -> onCapabilitiesStatusChanged
com.android.phone.CdmaCallWaitingPreference -> com.android.phone.CdmaCallWaitingPreference:
    40:45:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    49:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:53:void <init>(android.content.Context) -> <init>
    33:33:com.android.phone.CdmaCallWaitingPreference$MyHandler access$100(com.android.phone.CdmaCallWaitingPreference) -> access$100
    33:33:com.android.internal.telephony.Phone access$200(com.android.phone.CdmaCallWaitingPreference) -> access$200
    33:33:com.android.phone.TimeConsumingPreferenceListener access$300(com.android.phone.CdmaCallWaitingPreference) -> access$300
    33:33:android.content.Context access$400(com.android.phone.CdmaCallWaitingPreference) -> access$400
    57:63:void init(com.android.phone.TimeConsumingPreferenceListener,com.android.internal.telephony.Phone) -> init
    79:102:void onClick() -> onClick
    73:74:void setActionAvailable(boolean) -> setActionAvailable
    109:110:void setEnabled(boolean) -> setEnabled
com.android.phone.CdmaCallWaitingPreference$1 -> com.android.phone.CdmaCallWaitingPreference$1:
    84:84:void <init>(com.android.phone.CdmaCallWaitingPreference) -> <init>
    86:89:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.CdmaCallWaitingPreference$2 -> com.android.phone.CdmaCallWaitingPreference$2:
    93:93:void <init>(com.android.phone.CdmaCallWaitingPreference) -> <init>
    95:98:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.CdmaCallWaitingPreference$MyHandler -> com.android.phone.CdmaCallWaitingPreference$MyHandler:
    113:113:void <init>(com.android.phone.CdmaCallWaitingPreference) -> <init>
    113:113:void <init>(com.android.phone.CdmaCallWaitingPreference,com.android.phone.CdmaCallWaitingPreference$1) -> <init>
    130:181:void handleGetCallWaitingResponse(android.os.Message) -> handleGetCallWaitingResponse
    119:124:void handleMessage(android.os.Message) -> handleMessage
    187:205:void handleSetCallWaitingResponse(android.os.Message) -> handleSetCallWaitingResponse
com.android.phone.CdmaPhoneCallState -> com.android.phone.CdmaPhoneCallState:
    45:45:void <init>() -> <init>
    76:79:void CdmaPhoneCallStateInit() -> CdmaPhoneCallStateInit
    86:86:com.android.phone.CdmaPhoneCallState$PhoneCallState getCurrentCallState() -> getCurrentCallState
    93:107:void setCurrentCallState(com.android.phone.CdmaPhoneCallState$PhoneCallState) -> setCurrentCallState
com.android.phone.CdmaPhoneCallState$PhoneCallState -> com.android.phone.CdmaPhoneCallState$PhoneCallState:
    54:58:void <clinit>() -> <clinit>
    54:54:void <init>(java.lang.String,int) -> <init>
    54:54:com.android.phone.CdmaPhoneCallState$PhoneCallState valueOf(java.lang.String) -> valueOf
    54:54:com.android.phone.CdmaPhoneCallState$PhoneCallState[] values() -> values
com.android.phone.CdmaVoicePrivacySwitchPreference -> com.android.phone.CdmaVoicePrivacySwitchPreference:
    31:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:48:void <init>(android.content.Context) -> <init>
    54:57:void onClick() -> onClick
    107:107:void setPhone(com.android.internal.telephony.Phone) -> setPhone
com.android.phone.CdmaVoicePrivacySwitchPreference$MyHandler -> com.android.phone.CdmaVoicePrivacySwitchPreference$MyHandler:
    62:62:void <init>(com.android.phone.CdmaVoicePrivacySwitchPreference) -> <init>
    62:62:void <init>(com.android.phone.CdmaVoicePrivacySwitchPreference,com.android.phone.CdmaVoicePrivacySwitchPreference$1) -> <init>
    79:89:void handleGetVPResponse(android.os.Message) -> handleGetVPResponse
    68:73:void handleMessage(android.os.Message) -> handleMessage
    95:102:void handleSetVPResponse(android.os.Message) -> handleSetVPResponse
com.android.phone.ChangeIccPinScreen -> com.android.phone.ChangeIccPinScreen:
    44:168:void <init>() -> <init>
    44:44:void access$000(com.android.phone.ChangeIccPinScreen,android.os.AsyncResult) -> access$000
    44:44:android.widget.EditText access$100(com.android.phone.ChangeIccPinScreen) -> access$100
    44:44:boolean access$1000(com.android.phone.ChangeIccPinScreen) -> access$1000
    44:44:android.widget.EditText access$1100(com.android.phone.ChangeIccPinScreen) -> access$1100
    44:44:android.widget.Button access$1200(com.android.phone.ChangeIccPinScreen) -> access$1200
    44:44:android.app.AlertDialog access$1300(com.android.phone.ChangeIccPinScreen) -> access$1300
    44:44:android.widget.EditText access$200(com.android.phone.ChangeIccPinScreen) -> access$200
    44:44:android.widget.EditText access$300(com.android.phone.ChangeIccPinScreen) -> access$300
    44:44:android.widget.Button access$400(com.android.phone.ChangeIccPinScreen) -> access$400
    44:44:com.android.internal.telephony.Phone access$500(com.android.phone.ChangeIccPinScreen) -> access$500
    44:44:int access$600(com.android.phone.ChangeIccPinScreen,java.lang.String,java.lang.String) -> access$600
    44:44:android.widget.TextView access$700(com.android.phone.ChangeIccPinScreen) -> access$700
    44:44:android.os.Handler access$800(com.android.phone.ChangeIccPinScreen) -> access$800
    44:44:void access$900(com.android.phone.ChangeIccPinScreen) -> access$900
    279:290:void displayPUKAlert() -> displayPUKAlert
    235:272:void handleResult(android.os.AsyncResult) -> handleResult
    92:136:void onCreate(android.os.Bundle) -> onCreate
    145:147:void reset() -> reset
    140:141:void resolveIntent() -> resolveIntent
    298:299:void showConfirmation() -> showConfirmation
    155:159:int validateNewPin(java.lang.String,java.lang.String) -> validateNewPin
com.android.phone.ChangeIccPinScreen$1 -> com.android.phone.ChangeIccPinScreen$1:
    78:78:void <init>(com.android.phone.ChangeIccPinScreen) -> <init>
    80:83:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.ChangeIccPinScreen$2 -> com.android.phone.ChangeIccPinScreen$2:
    168:168:void <init>(com.android.phone.ChangeIccPinScreen) -> <init>
    170:229:void onClick(android.view.View) -> onClick
com.android.phone.ChangeIccPinScreen$3 -> com.android.phone.ChangeIccPinScreen$3:
    245:245:void <init>(com.android.phone.ChangeIccPinScreen) -> <init>
    247:247:void run() -> run
com.android.phone.ChangeIccPinScreen$4 -> com.android.phone.ChangeIccPinScreen$4:
    290:290:void <init>(com.android.phone.ChangeIccPinScreen) -> <init>
    292:292:void run() -> run
com.android.phone.ChangeIccPinScreen$EntryState -> com.android.phone.ChangeIccPinScreen$EntryState:
    50:52:void <clinit>() -> <clinit>
    50:50:void <init>(java.lang.String,int) -> <init>
    50:50:com.android.phone.ChangeIccPinScreen$EntryState valueOf(java.lang.String) -> valueOf
    50:50:com.android.phone.ChangeIccPinScreen$EntryState[] values() -> values
com.android.phone.DumpsysHandler -> com.android.phone.DumpsysHandler:
    18:20:void dump(android.content.Context,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
com.android.phone.EccShortcutAdapter -> com.android.phone.EccShortcutAdapter:
    53:58:void <init>(android.content.Context) -> <init>
    63:63:int getCount() -> getCount
    40:40:java.lang.Object getItem(int) -> getItem
    68:68:com.android.phone.EccShortcutAdapter$EccDisplayMaterial getItem(int) -> getItem
    78:79:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    142:147:boolean hasShortcut(java.lang.String) -> hasShortcut
    157:159:java.lang.String pickEmergencyNumberForCategory(int,java.util.List) -> pickEmergencyNumberForCategory
    168:200:com.android.phone.EccShortcutAdapter$EccDisplayMaterial prepareEccMaterial(android.content.Context,java.lang.String,java.util.List) -> prepareEccMaterial
    111:138:void updateCountryEccInfo(android.content.Context,com.android.phone.ShortcutViewUtils$PhoneInfo) -> updateCountryEccInfo
com.android.phone.EccShortcutAdapter$EccDisplayMaterial -> com.android.phone.EccShortcutAdapter$EccDisplayMaterial:
    47:50:void <init>() -> <init>
    47:47:void <init>(com.android.phone.EccShortcutAdapter$1) -> <init>
com.android.phone.EditPhoneNumberPreference -> com.android.phone.EditPhoneNumberPreference:
    127:438:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    152:152:void <init>(android.content.Context) -> <init>
    45:45:android.app.Activity access$000(com.android.phone.EditPhoneNumberPreference) -> access$000
    45:45:android.content.Intent access$100(com.android.phone.EditPhoneNumberPreference) -> access$100
    45:45:int access$200(com.android.phone.EditPhoneNumberPreference) -> access$200
    383:383:java.lang.String getPhoneNumber() -> getPhoneNumber
    388:388:java.lang.String getRawPhoneNumber() -> getRawPhoneNumber
    506:506:java.lang.String getStringValue() -> getStringValue
    466:466:java.lang.CharSequence getSummaryOn() -> getSummaryOn
    363:363:boolean isToggled() -> isToggled
    523:523:boolean isUnknownStatus() -> isUnknownStatus
    249:253:void onAddEditTextToDialogView(android.view.View,android.widget.EditText) -> onAddEditTextToDialogView
    198:228:void onBindDialogView(android.view.View) -> onBindDialogView
    162:189:void onBindView(android.view.View) -> onBindView
    327:334:void onClick(android.content.DialogInterface,int) -> onClick
    342:353:void onDialogClosed(boolean) -> onDialogClosed
    317:319:void onPickActivityResult(java.lang.String) -> onPickActivityResult
    264:280:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    408:409:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    441:442:boolean persistString(java.lang.String) -> persistString
    294:294:void setDialogOnClosedListener(com.android.phone.EditPhoneNumberPreference$OnDialogClosedListener) -> setDialogOnClosedListener
    299:301:void setParentActivity(android.app.Activity,int) -> setParentActivity
    307:309:void setParentActivity(android.app.Activity,int,com.android.phone.EditPhoneNumberPreference$GetDefaultNumberListener) -> setParentActivity
    394:396:com.android.phone.EditPhoneNumberPreference setPhoneNumber(java.lang.String) -> setPhoneNumber
    475:477:com.android.phone.EditPhoneNumberPreference setSummaryOff(java.lang.CharSequence) -> setSummaryOff
    451:453:com.android.phone.EditPhoneNumberPreference setSummaryOn(java.lang.CharSequence) -> setSummaryOn
    369:371:com.android.phone.EditPhoneNumberPreference setToggled(boolean) -> setToggled
    519:519:void setUnknownStatus(boolean) -> setUnknownStatus
    499:501:void setValueFromString(java.lang.String) -> setValueFromString
    425:429:boolean shouldDisableDependents() -> shouldDisableDependents
com.android.phone.EditPhoneNumberPreference$1 -> com.android.phone.EditPhoneNumberPreference$1:
    228:228:void <init>(com.android.phone.EditPhoneNumberPreference) -> <init>
    230:231:void onClick(android.view.View) -> onClick
com.android.phone.EmergencyActionGroup -> com.android.phone.EmergencyActionGroup:
    65:330:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:45:void access$000(com.android.phone.EmergencyActionGroup,android.view.View) -> access$000
    45:45:android.view.ViewGroup access$100(com.android.phone.EmergencyActionGroup) -> access$100
    45:45:java.lang.Runnable access$200(com.android.phone.EmergencyActionGroup) -> access$200
    45:45:boolean access$302(com.android.phone.EmergencyActionGroup,boolean) -> access$302
    45:45:void access$400(com.android.phone.EmergencyActionGroup) -> access$400
    45:45:void access$500(com.android.phone.EmergencyActionGroup) -> access$500
    247:254:void animateHintText(android.view.View,android.view.View,android.animation.Animator) -> animateHintText
    225:239:void decreaseAutoSizeMinTextSize(android.view.View) -> decreaseAutoSizeMinTextSize
    105:107:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    258:288:void hideTheButton() -> hideTheButton
    158:171:void onClick(android.view.View) -> onClick
    77:85:void onFinishInflate() -> onFinishInflate
    72:72:void onMeasure(int,int) -> onMeasure
    118:121:void onPostTouchEvent(android.view.MotionEvent) -> onPostTouchEvent
    100:100:void onPreTouchEvent(android.view.MotionEvent) -> onPreTouchEvent
    90:92:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    177:206:void revealTheButton(android.view.View) -> revealTheButton
    125:152:void setupAssistActions() -> setupAssistActions
    293:319:void startRipple() -> startRipple
com.android.phone.EmergencyActionGroup$1 -> com.android.phone.EmergencyActionGroup$1:
    210:210:void <init>(com.android.phone.EmergencyActionGroup) -> <init>
    215:215:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.android.phone.EmergencyActionGroup$2 -> com.android.phone.EmergencyActionGroup$2:
    276:276:void <init>(com.android.phone.EmergencyActionGroup) -> <init>
    279:281:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.phone.EmergencyActionGroup$3 -> com.android.phone.EmergencyActionGroup$3:
    307:307:void <init>(com.android.phone.EmergencyActionGroup,android.view.View) -> <init>
    310:317:void run() -> run
com.android.phone.EmergencyActionGroup$3$1 -> com.android.phone.EmergencyActionGroup$3$1:
    311:311:void <init>(com.android.phone.EmergencyActionGroup$3) -> <init>
    314:315:void run() -> run
com.android.phone.EmergencyActionGroup$4 -> com.android.phone.EmergencyActionGroup$4:
    322:322:void <init>(com.android.phone.EmergencyActionGroup) -> <init>
    325:326:void run() -> run
com.android.phone.EmergencyActionGroup$5 -> com.android.phone.EmergencyActionGroup$5:
    330:330:void <init>(com.android.phone.EmergencyActionGroup) -> <init>
    333:334:void run() -> run
com.android.phone.EmergencyAssistanceHelper -> com.android.phone.EmergencyAssistanceHelper:
    97:98:android.content.ComponentName getComponentName(android.content.pm.ResolveInfo) -> getComponentName
    119:126:java.lang.String getDefaultEmergencyPackage(android.content.Context) -> getDefaultEmergencyPackage
    114:114:boolean isSystemApp(android.content.pm.PackageInfo) -> isSystemApp
    135:136:void lambda$setDefaultEmergencyPackageAsync$0(java.lang.Boolean) -> lambda$setDefaultEmergencyPackageAsync$0
    105:108:java.util.List queryAssistActivities(android.content.Context,java.lang.String) -> queryAssistActivities
    58:84:java.util.List resolveAssistPackageAndQueryActivities(android.content.Context) -> resolveAssistPackageAndQueryActivities
    130:141:boolean setDefaultEmergencyPackageAsync(android.content.Context,java.lang.String) -> setDefaultEmergencyPackageAsync
com.android.phone.EmergencyAssistanceHelper$$ExternalSyntheticLambda0 -> com.android.phone.EmergencyAssistanceHelper$$ExternalSyntheticLambda0:
    com.android.phone.EmergencyAssistanceHelper$$InternalSyntheticLambda$0$cf77d31e31c41a9da08b6cb8418ec29965e7acdc1e706e61887347e4cb86b1be$0 com.android.phone.EmergencyAssistanceHelper$$InternalSyntheticLambda$0$cf77d31e31c41a9da08b6cb8418ec29965e7acdc1e706e61887347e4cb86b1be$0.INSTANCE -> INSTANCE
    void com.android.phone.EmergencyAssistanceHelper$$InternalSyntheticLambda$0$cf77d31e31c41a9da08b6cb8418ec29965e7acdc1e706e61887347e4cb86b1be$0.<clinit>() -> <clinit>
    void com.android.phone.EmergencyAssistanceHelper$$InternalSyntheticLambda$0$cf77d31e31c41a9da08b6cb8418ec29965e7acdc1e706e61887347e4cb86b1be$0.<init>() -> <init>
    void com.android.phone.EmergencyAssistanceHelper$$InternalSyntheticLambda$0$cf77d31e31c41a9da08b6cb8418ec29965e7acdc1e706e61887347e4cb86b1be$0.accept(java.lang.Object) -> accept
com.android.phone.EmergencyCallbackModeExitDialog -> com.android.phone.EmergencyCallbackModeExitDialog:
    51:369:void <init>() -> <init>
    51:51:android.content.ServiceConnection access$000(com.android.phone.EmergencyCallbackModeExitDialog) -> access$000
    51:51:boolean access$102(com.android.phone.EmergencyCallbackModeExitDialog,boolean) -> access$102
    51:51:void access$200(com.android.phone.EmergencyCallbackModeExitDialog) -> access$200
    51:51:java.lang.CharSequence access$300(com.android.phone.EmergencyCallbackModeExitDialog,long) -> access$300
    51:51:com.android.internal.telephony.Phone access$400(com.android.phone.EmergencyCallbackModeExitDialog) -> access$400
    297:313:java.lang.CharSequence getDialogText(long) -> getDialogText
    323:324:void onCancel(android.content.DialogInterface) -> onCancel
    78:103:void onCreate(android.os.Bundle) -> onCreate
    235:285:android.app.Dialog onCreateDialog(int) -> onCreateDialog
    120:128:void onDestroy() -> onDestroy
    114:115:void onPause() -> onPause
    134:135:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    108:109:void onResume() -> onResume
    140:141:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    195:223:void showEmergencyCallbackModeExitDialog() -> showEmergencyCallbackModeExitDialog
com.android.phone.EmergencyCallbackModeExitDialog$1 -> com.android.phone.EmergencyCallbackModeExitDialog$1:
    147:147:void <init>(com.android.phone.EmergencyCallbackModeExitDialog) -> <init>
    149:183:void run() -> run
com.android.phone.EmergencyCallbackModeExitDialog$1$1 -> com.android.phone.EmergencyCallbackModeExitDialog$1$1:
    183:183:void <init>(com.android.phone.EmergencyCallbackModeExitDialog$1) -> <init>
    185:185:void run() -> run
com.android.phone.EmergencyCallbackModeExitDialog$2 -> com.android.phone.EmergencyCallbackModeExitDialog$2:
    212:212:void <init>(com.android.phone.EmergencyCallbackModeExitDialog,long,long) -> <init>
    215:216:void onTick(long) -> onTick
com.android.phone.EmergencyCallbackModeExitDialog$3 -> com.android.phone.EmergencyCallbackModeExitDialog$3:
    253:253:void <init>(com.android.phone.EmergencyCallbackModeExitDialog) -> <init>
    256:257:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.EmergencyCallbackModeExitDialog$4 -> com.android.phone.EmergencyCallbackModeExitDialog$4:
    242:242:void <init>(com.android.phone.EmergencyCallbackModeExitDialog) -> <init>
    245:249:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.EmergencyCallbackModeExitDialog$5 -> com.android.phone.EmergencyCallbackModeExitDialog$5:
    270:270:void <init>(com.android.phone.EmergencyCallbackModeExitDialog) -> <init>
    273:274:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.EmergencyCallbackModeExitDialog$6 -> com.android.phone.EmergencyCallbackModeExitDialog$6:
    330:330:void <init>(com.android.phone.EmergencyCallbackModeExitDialog) -> <init>
    334:343:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.phone.EmergencyCallbackModeExitDialog$7 -> com.android.phone.EmergencyCallbackModeExitDialog$7:
    352:352:void <init>(com.android.phone.EmergencyCallbackModeExitDialog) -> <init>
    354:358:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    362:362:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.android.phone.EmergencyCallbackModeExitDialog$8 -> com.android.phone.EmergencyCallbackModeExitDialog$8:
    369:369:void <init>(com.android.phone.EmergencyCallbackModeExitDialog) -> <init>
    371:375:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.EmergencyCallbackModeService -> com.android.phone.EmergencyCallbackModeService:
    51:254:void <init>() -> <init>
    51:51:void access$000(com.android.phone.EmergencyCallbackModeService,android.os.AsyncResult) -> access$000
    51:51:long access$102(com.android.phone.EmergencyCallbackModeService,long) -> access$102
    276:276:boolean getEmergencyCallbackModeCallState() -> getEmergencyCallbackModeCallState
    269:269:long getEmergencyCallbackModeTimeout() -> getEmergencyCallbackModeTimeout
    250:250:android.os.IBinder onBind(android.content.Intent) -> onBind
    77:98:void onCreate() -> onCreate
    103:112:void onDestroy() -> onDestroy
    236:244:void resetEcmTimer(android.os.AsyncResult) -> resetEcmTimer
    174:229:void showNotification(long) -> showNotification
    144:167:void startTimerNotification() -> startTimerNotification
com.android.phone.EmergencyCallbackModeService$1 -> com.android.phone.EmergencyCallbackModeService$1:
    65:65:void <init>(com.android.phone.EmergencyCallbackModeService) -> <init>
    67:69:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.EmergencyCallbackModeService$2 -> com.android.phone.EmergencyCallbackModeService$2:
    119:119:void <init>(com.android.phone.EmergencyCallbackModeService) -> <init>
    123:134:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.phone.EmergencyCallbackModeService$3 -> com.android.phone.EmergencyCallbackModeService$3:
    153:153:void <init>(com.android.phone.EmergencyCallbackModeService,long,long) -> <init>
    157:157:void onTick(long) -> onTick
com.android.phone.EmergencyCallbackModeService$LocalBinder -> com.android.phone.EmergencyCallbackModeService$LocalBinder:
    259:259:void <init>(com.android.phone.EmergencyCallbackModeService) -> <init>
    261:261:com.android.phone.EmergencyCallbackModeService getService() -> getService
com.android.phone.EmergencyDialer -> com.android.phone.EmergencyDialer:
    125:125:void <clinit>() -> <clinit>
    97:193:void <init>() -> <init>
    97:97:void access$000(com.android.phone.EmergencyDialer) -> access$000
    97:97:java.util.List access$100(com.android.phone.EmergencyDialer) -> access$100
    97:97:com.android.phone.EccShortcutAdapter access$200(com.android.phone.EmergencyDialer) -> access$200
    247:253:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1189:1189:java.lang.String callSourceToString(int) -> callSourceToString
    1255:1256:boolean checkContrastRatio(android.graphics.Color,android.graphics.Color) -> checkContrastRatio
    819:827:java.lang.CharSequence createErrorMessage(java.lang.String) -> createErrorMessage
    1134:1148:void crossfade(android.view.View,android.view.View) -> crossfade
    484:486:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    1178:1178:java.lang.String entryTypeToString(int) -> entryTypeToString
    1242:1251:android.graphics.Color getNextColor(android.graphics.Color,boolean) -> getNextColor
    1214:1232:int getPrimaryColor(android.app.WallpaperColors) -> getPrimaryColor
    1194:1194:android.app.WallpaperManager getWallpaperManager() -> getWallpaperManager
    462:464:void keyPressed(int) -> keyPressed
    953:967:void maybeChangeHintSize() -> maybeChangeHintSize
    912:944:void maybeShowWfcEmergencyCallingWarning() -> maybeShowWfcEmergencyCallingWarning
    430:435:void onBackPressed() -> onBackPressed
    517:531:void onClick(android.view.View) -> onClick
    902:903:void onColorsChanged(android.app.WallpaperColors,int) -> onColorsChanged
    493:501:void onConfirmClick(com.android.phone.EmergencyShortcutButton) -> onConfirmClick
    509:511:void onConfirmClick(com.android.phone.EmergencyInfoGroup) -> onConfirmClick
    258:365:void onCreate(android.os.Bundle) -> onCreate
    836:844:android.app.Dialog onCreateDialog(int) -> onCreateDialog
    371:381:void onDestroy() -> onDestroy
    469:475:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    446:458:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    597:603:boolean onLongClick(android.view.View) -> onLongClick
    860:865:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    661:661:void onPause() -> onPause
    406:412:void onPostCreate(android.os.Bundle) -> onPostCreate
    1093:1098:void onPostTouchEvent(android.view.MotionEvent) -> onPostTouchEvent
    1079:1084:void onPreTouchEvent(android.view.MotionEvent) -> onPreTouchEvent
    851:854:void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    541:587:void onPressed(android.view.View,boolean) -> onPressed
    387:387:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    636:656:void onResume() -> onResume
    392:393:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    611:630:void onStart() -> onStart
    666:670:void onStop() -> onStop
    233:233:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    709:753:void placeCall() -> placeCall
    757:777:void placeCall(java.lang.String,int,com.android.phone.ShortcutViewUtils$PhoneInfo) -> placeCall
    791:815:void playTone(int) -> playTone
    882:885:void removePreviousDigitIfPossible() -> removePreviousDigitIfPossible
    992:1006:void setLocationInfo() -> setLocationInfo
    1011:1063:void setupEmergencyCallShortcutButton() -> setupEmergencyCallShortcutButton
    972:988:void setupEmergencyShortcutsView() -> setupEmergencyShortcutsView
    417:423:void setupKeypad() -> setupKeypad
    1199:1199:boolean supportsDarkText(android.app.WallpaperColors) -> supportsDarkText
    1115:1123:void switchView(android.view.View,android.view.View,boolean) -> switchView
    872:874:void updateDialAndDeleteButtonStateEnabledAttr() -> updateDialAndDeleteButtonStateEnabledAttr
    1067:1070:void updateLocationAndEccInfo() -> updateLocationAndEccInfo
    680:702:void updateTheme(boolean) -> updateTheme
    893:896:void updateTtsSpans() -> updateTtsSpans
com.android.phone.EmergencyDialer$1 -> com.android.phone.EmergencyDialer$1:
    181:181:void <init>(com.android.phone.EmergencyDialer) -> <init>
    184:185:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.phone.EmergencyDialer$2 -> com.android.phone.EmergencyDialer$2:
    193:193:void <init>(com.android.phone.EmergencyDialer) -> <init>
    206:210:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.android.phone.EmergencyDialer$3 -> com.android.phone.EmergencyDialer$3:
    918:918:void <init>(com.android.phone.EmergencyDialer) -> <init>
    918:918:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    921:929:java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    918:918:void onPostExecute(java.lang.Object) -> onPostExecute
    934:941:void onPostExecute(java.lang.Boolean) -> onPostExecute
com.android.phone.EmergencyDialer$4 -> com.android.phone.EmergencyDialer$4:
    1016:1016:void <init>(com.android.phone.EmergencyDialer,android.content.Context) -> <init>
    1020:1025:android.view.View inflateView(android.view.View,android.view.ViewGroup,java.lang.CharSequence,java.lang.CharSequence,int) -> inflateView
com.android.phone.EmergencyDialer$5 -> com.android.phone.EmergencyDialer$5:
    1029:1029:void <init>(com.android.phone.EmergencyDialer,android.view.ViewGroup,android.widget.TextView) -> <init>
    1032:1033:void onChanged() -> onChanged
    1038:1039:void onInvalidated() -> onInvalidated
    1044:1059:void updateLayout() -> updateLayout
com.android.phone.EmergencyDialer$6 -> com.android.phone.EmergencyDialer$6:
    1148:1148:void <init>(com.android.phone.EmergencyDialer,android.view.View) -> <init>
    1151:1151:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.phone.EmergencyInfoGroup -> com.android.phone.EmergencyInfoGroup:
    54:54:void <clinit>() -> <clinit>
    67:277:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:51:android.view.View access$000(com.android.phone.EmergencyInfoGroup) -> access$000
    51:51:void access$100(com.android.phone.EmergencyInfoGroup) -> access$100
    201:203:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    154:166:android.graphics.drawable.Drawable getCircularUserIcon() -> getCircularUserIcon
    172:176:java.lang.CharSequence getUserName() -> getUserName
    248:274:void hideSelectedButton() -> hideSelectedButton
    210:223:void onClick(android.view.View) -> onClick
    95:104:void onFinishInflate() -> onFinishInflate
    193:196:void onPostTouchEvent(android.view.MotionEvent) -> onPostTouchEvent
    184:184:void onPreTouchEvent(android.view.MotionEvent) -> onPreTouchEvent
    109:111:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    229:244:void revealSelectedButton() -> revealSelectedButton
    90:90:void setOnConfirmClickListener(com.android.phone.EmergencyInfoGroup$OnConfirmClickListener) -> setOnConfirmClickListener
    142:144:void setUserIcon() -> setUserIcon
    119:138:void setupButtonInfo() -> setupButtonInfo
com.android.phone.EmergencyInfoGroup$1 -> com.android.phone.EmergencyInfoGroup$1:
    266:266:void <init>(com.android.phone.EmergencyInfoGroup) -> <init>
    269:269:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.phone.EmergencyInfoGroup$2 -> com.android.phone.EmergencyInfoGroup$2:
    277:277:void <init>(com.android.phone.EmergencyInfoGroup) -> <init>
    280:281:void run() -> run
com.android.phone.EmergencyShortcutButton -> com.android.phone.EmergencyShortcutButton:
    52:52:void <clinit>() -> <clinit>
    65:252:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:48:android.view.View access$000(com.android.phone.EmergencyShortcutButton) -> access$000
    48:48:void access$100(com.android.phone.EmergencyShortcutButton) -> access$100
    146:148:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    134:134:java.lang.String getPhoneNumber() -> getPhoneNumber
    225:249:void hideSelectedButton() -> hideSelectedButton
    185:200:void onClick(android.view.View) -> onClick
    167:180:void onFinishInflate() -> onFinishInflate
    159:162:void onPostTouchEvent(android.view.MotionEvent) -> onPostTouchEvent
    141:141:void onPreTouchEvent(android.view.MotionEvent) -> onPreTouchEvent
    206:221:void revealSelectedButton() -> revealSelectedButton
    88:88:void setOnConfirmClickListener(com.android.phone.EmergencyShortcutButton$OnConfirmClickListener) -> setOnConfirmClickListener
    107:107:void setPhoneDescription(java.lang.CharSequence) -> setPhoneDescription
    114:124:void setPhoneNumber(java.lang.CharSequence) -> setPhoneNumber
    97:99:void setPhoneTypeIcon(int) -> setPhoneTypeIcon
com.android.phone.EmergencyShortcutButton$1 -> com.android.phone.EmergencyShortcutButton$1:
    241:241:void <init>(com.android.phone.EmergencyShortcutButton) -> <init>
    244:244:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.android.phone.EmergencyShortcutButton$2 -> com.android.phone.EmergencyShortcutButton$2:
    252:252:void <init>(com.android.phone.EmergencyShortcutButton) -> <init>
    255:256:void run() -> run
com.android.phone.EnableIccPinScreen -> com.android.phone.EnableIccPinScreen:
    38:129:void <init>() -> <init>
    38:38:void access$000(com.android.phone.EnableIccPinScreen,android.os.AsyncResult) -> access$000
    38:38:android.widget.EditText access$100(com.android.phone.EnableIccPinScreen) -> access$100
    38:38:void access$200(com.android.phone.EnableIccPinScreen,java.lang.CharSequence) -> access$200
    38:38:void access$300(com.android.phone.EnableIccPinScreen) -> access$300
    103:105:void enableIccPin() -> enableIccPin
    99:99:java.lang.String getPin() -> getPin
    110:122:void handleResult(android.os.AsyncResult) -> handleResult
    65:74:void onCreate(android.os.Bundle) -> onCreate
    78:84:void setupView() -> setupView
    89:94:void showStatus(java.lang.CharSequence) -> showStatus
com.android.phone.EnableIccPinScreen$1 -> com.android.phone.EnableIccPinScreen$1:
    50:50:void <init>(com.android.phone.EnableIccPinScreen) -> <init>
    52:55:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.EnableIccPinScreen$2 -> com.android.phone.EnableIccPinScreen$2:
    122:122:void <init>(com.android.phone.EnableIccPinScreen) -> <init>
    124:124:void run() -> run
com.android.phone.EnableIccPinScreen$3 -> com.android.phone.EnableIccPinScreen$3:
    129:129:void <init>(com.android.phone.EnableIccPinScreen) -> <init>
    131:138:void onClick(android.view.View) -> onClick
com.android.phone.GsmUmtsAdditionalCallOptions -> com.android.phone.GsmUmtsAdditionalCallOptions:
    18:39:void <init>() -> <init>
    238:239:void dismissWarningDialog() -> dismissWarningDialog
    213:218:void doPreferenceInit(int) -> doPreferenceInit
    43:134:void onCreate(android.os.Bundle) -> onCreate
    226:230:android.app.Dialog onCreateDialog(int) -> onCreateDialog
    195:199:void onFinished(android.preference.Preference,boolean) -> onFinished
    204:209:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    140:180:void onResume() -> onResume
    186:189:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    234:234:void showWarningDialog(int) -> showWarningDialog
com.android.phone.GsmUmtsCallBarringOptions -> com.android.phone.GsmUmtsCallBarringOptions:
    48:224:void <init>() -> <init>
    48:48:com.android.phone.settings.fdn.EditPinPreference access$000(com.android.phone.GsmUmtsCallBarringOptions) -> access$000
    48:48:void access$100(com.android.phone.GsmUmtsCallBarringOptions,int) -> access$100
    48:48:void access$200(com.android.phone.GsmUmtsCallBarringOptions) -> access$200
    48:48:com.android.phone.CallBarringDeselectAllPreference access$300(com.android.phone.GsmUmtsCallBarringOptions) -> access$300
    48:48:void access$400(com.android.phone.GsmUmtsCallBarringOptions,boolean) -> access$400
    142:155:void disableAllBarring(boolean) -> disableAllBarring
    130:130:void displayMessage(int) -> displayMessage
    284:284:void displayPwChangeDialog() -> displayPwChangeDialog
    289:314:void displayPwChangeDialog(int,boolean) -> displayPwChangeDialog
    348:460:void onCreate(android.os.Bundle) -> onCreate
    513:517:void onFinished(android.preference.Preference,boolean) -> onFinished
    522:527:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    119:122:void onPinEntered(com.android.phone.settings.fdn.EditPinPreference,boolean) -> onPinEntered
    532:537:void onPrepareDialog(int,android.app.Dialog,android.os.Bundle) -> onPrepareDialog
    466:481:void onResume() -> onResume
    487:502:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    331:333:void resetCallBarringPrefState(boolean) -> resetCallBarringPrefState
    321:324:void resetPwChangeState() -> resetPwChangeState
    164:209:void updatePWChangeState(boolean) -> updatePWChangeState
    343:343:boolean validatePassword(java.lang.String) -> validatePassword
com.android.phone.GsmUmtsCallBarringOptions$1 -> com.android.phone.GsmUmtsCallBarringOptions$1:
    224:224:void <init>(com.android.phone.GsmUmtsCallBarringOptions) -> <init>
    227:266:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.GsmUmtsCallForwardOptions -> com.android.phone.GsmUmtsCallForwardOptions:
    27:27:void <clinit>() -> <clinit>
    23:48:void <init>() -> <init>
    136:138:void layoutCallForwardItem(boolean,com.android.phone.CallForwardEditPreference,android.preference.PreferenceScreen) -> layoutCallForwardItem
    202:245:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    59:129:void onCreate(android.os.Bundle) -> onCreate
    190:197:void onFinished(android.preference.Preference,boolean) -> onFinished
    250:255:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    144:168:void onResume() -> onResume
    174:184:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.android.phone.GsmUmtsCallOptions -> com.android.phone.GsmUmtsCallOptions:
    30:32:void <init>() -> <init>
    67:115:void init(android.preference.PreferenceScreen,com.android.phone.SubscriptionInfoHelper) -> init
    40:51:void onCreate(android.os.Bundle) -> onCreate
    57:62:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.android.phone.IccNetworkDepersonalizationPanel -> com.android.phone.IccNetworkDepersonalizationPanel:
    60:72:void <clinit>() -> <clinit>
    125:321:void <init>(android.content.Context,com.android.internal.telephony.Phone,int) -> <init>
    53:53:android.widget.EditText access$000(com.android.phone.IccNetworkDepersonalizationPanel) -> access$000
    53:53:void access$100(com.android.phone.IccNetworkDepersonalizationPanel,java.lang.String) -> access$100
    53:53:void access$200(com.android.phone.IccNetworkDepersonalizationPanel) -> access$200
    53:53:int access$300(com.android.phone.IccNetworkDepersonalizationPanel) -> access$300
    53:53:void access$400(com.android.phone.IccNetworkDepersonalizationPanel,java.lang.String) -> access$400
    53:53:com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState access$500(com.android.phone.IccNetworkDepersonalizationPanel) -> access$500
    53:53:android.os.Handler access$600(com.android.phone.IccNetworkDepersonalizationPanel) -> access$600
    53:53:com.android.internal.telephony.Phone access$700(com.android.phone.IccNetworkDepersonalizationPanel) -> access$700
    115:120:void dialogDismiss(int) -> dialogDismiss
    279:312:void displayStatus(java.lang.String) -> displayStatus
    317:318:void hideAlert() -> hideAlert
    329:329:void log(java.lang.String) -> log
    190:227:void onCreate(android.os.Bundle) -> onCreate
    253:253:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    232:232:void onStart() -> onStart
    237:244:void onStop() -> onStop
    98:111:void showDialog(com.android.internal.telephony.Phone,int) -> showDialog
com.android.phone.IccNetworkDepersonalizationPanel$1 -> com.android.phone.IccNetworkDepersonalizationPanel$1:
    125:125:void <init>(com.android.phone.IccNetworkDepersonalizationPanel) -> <init>
    133:135:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.android.phone.IccNetworkDepersonalizationPanel$2 -> com.android.phone.IccNetworkDepersonalizationPanel$2:
    141:141:void <init>(com.android.phone.IccNetworkDepersonalizationPanel) -> <init>
    143:158:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.IccNetworkDepersonalizationPanel$2$1 -> com.android.phone.IccNetworkDepersonalizationPanel$2$1:
    148:148:void <init>(com.android.phone.IccNetworkDepersonalizationPanel$2) -> <init>
    150:152:void run() -> run
com.android.phone.IccNetworkDepersonalizationPanel$2$2 -> com.android.phone.IccNetworkDepersonalizationPanel$2$2:
    158:158:void <init>(com.android.phone.IccNetworkDepersonalizationPanel$2) -> <init>
    160:160:void run() -> run
com.android.phone.IccNetworkDepersonalizationPanel$3 -> com.android.phone.IccNetworkDepersonalizationPanel$3:
    256:256:void <init>(com.android.phone.IccNetworkDepersonalizationPanel) -> <init>
    258:272:void onClick(android.view.View) -> onClick
com.android.phone.IccNetworkDepersonalizationPanel$4 -> com.android.phone.IccNetworkDepersonalizationPanel$4:
    321:321:void <init>(com.android.phone.IccNetworkDepersonalizationPanel) -> <init>
    324:324:void onClick(android.view.View) -> onClick
com.android.phone.IccNetworkDepersonalizationPanel$statusType -> com.android.phone.IccNetworkDepersonalizationPanel$statusType:
    87:91:void <clinit>() -> <clinit>
    87:87:void <init>(java.lang.String,int) -> <init>
    87:87:com.android.phone.IccNetworkDepersonalizationPanel$statusType valueOf(java.lang.String) -> valueOf
    87:87:com.android.phone.IccNetworkDepersonalizationPanel$statusType[] values() -> values
com.android.phone.IccPanel -> com.android.phone.IccPanel:
    37:37:void <init>(android.content.Context) -> <init>
    42:71:void onCreate(android.os.Bundle) -> onCreate
    91:91:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    76:77:void onStart() -> onStart
    82:83:void onStop() -> onStop
com.android.phone.IccProvider -> com.android.phone.IccProvider:
    24:24:void <init>() -> <init>
com.android.phone.ImsRcsController -> com.android.phone.ImsRcsController:
    91:96:void <init>(com.android.phone.PhoneGlobals) -> <init>
    343:350:android.telephony.ims.RcsContactUceCapability addUceRegistrationOverrideShell(int,java.util.Set) -> addUceRegistrationOverrideShell
    381:388:android.telephony.ims.RcsContactUceCapability clearUceRegistrationOverrideShell(int) -> clearUceRegistrationOverrideShell
    566:599:void createSipDelegate(int,android.telephony.ims.DelegateRequest,java.lang.String,android.telephony.ims.aidl.ISipDelegateConnectionStateCallback,android.telephony.ims.aidl.ISipDelegateMessageCallback) -> createSipDelegate
    609:621:void destroySipDelegate(int,android.telephony.ims.aidl.ISipDelegate,int) -> destroySipDelegate
    714:714:void enforceAccessUserCapabilityExchangePermission(java.lang.String) -> enforceAccessUserCapabilityExchangePermission
    695:695:void enforceImsSingleRegistrationPermission(java.lang.String) -> enforceImsSingleRegistrationPermission
    705:705:void enforceModifyPermission() -> enforceModifyPermission
    724:724:void enforceReadContactsPermission(java.lang.String) -> enforceReadContactsPermission
    686:686:void enforceReadPrivilegedPermission(java.lang.String) -> enforceReadPrivilegedPermission
    140:154:void getImsRcsRegistrationState(int,com.android.internal.telephony.IIntegerConsumer) -> getImsRcsRegistrationState
    162:180:void getImsRcsRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer) -> getImsRcsRegistrationTransportType
    419:427:java.lang.String getLastUcePidfXmlShell(int) -> getLastUcePidfXmlShell
    400:407:android.telephony.ims.RcsContactUceCapability getLatestRcsContactUceCapabilityShell(int) -> getLatestRcsContactUceCapabilityShell
    736:736:com.android.services.telephony.rcs.RcsFeatureController getRcsFeatureController(int) -> getRcsFeatureController
    748:767:com.android.services.telephony.rcs.RcsFeatureController getRcsFeatureController(int,boolean) -> getRcsFeatureController
    318:332:int getUcePublishState(int) -> getUcePublishState
    80:87:com.android.phone.ImsRcsController init(com.android.phone.PhoneGlobals) -> init
    261:271:boolean isAvailable(int,int,int) -> isAvailable
    235:245:boolean isCapable(int,int,int) -> isCapable
    788:789:boolean isImsSingleRegistrationSupportedOnDevice() -> isImsSingleRegistrationSupportedOnDevice
    535:559:boolean isSipDelegateSupported(int) -> isSipDelegateSupported
    506:518:boolean isUceSettingEnabled(int,java.lang.String,java.lang.String) -> isUceSettingEnabled
    146:149:void lambda$getImsRcsRegistrationState$0(com.android.internal.telephony.IIntegerConsumer,java.lang.Integer) -> lambda$getImsRcsRegistrationState$0
    169:175:void lambda$getImsRcsRegistrationTransportType$1(com.android.internal.telephony.IIntegerConsumer,java.lang.Integer) -> lambda$getImsRcsRegistrationTransportType$1
    105:115:void registerImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback) -> registerImsRegistrationCallback
    192:201:void registerRcsAvailabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback) -> registerRcsAvailabilityCallback
    650:661:void registerRcsFeatureCallback(int,com.android.ims.internal.IImsServiceFeatureCallback) -> registerRcsFeatureCallback
    468:482:void registerUcePublishStateCallback(int,android.telephony.ims.aidl.IRcsUcePublishStateCallback) -> registerUcePublishStateCallback
    362:369:android.telephony.ims.RcsContactUceCapability removeUceRegistrationOverrideShell(int,java.util.Set) -> removeUceRegistrationOverrideShell
    438:445:boolean removeUceRequestDisallowedStatus(int) -> removeUceRequestDisallowedStatus
    298:313:void requestAvailability(int,java.lang.String,java.lang.String,android.net.Uri,android.telephony.ims.aidl.IRcsUceControllerCallback) -> requestAvailability
    277:292:void requestCapabilities(int,java.lang.String,java.lang.String,java.util.List,android.telephony.ims.aidl.IRcsUceControllerCallback) -> requestCapabilities
    455:462:boolean setCapabilitiesRequestTimeout(int,long) -> setCapabilitiesRequestTimeout
    802:802:void setDeviceSingleRegistrationSupportOverride(java.lang.Boolean) -> setDeviceSingleRegistrationSupportOverride
    794:794:void setRcsService(com.android.services.telephony.rcs.TelephonyRcsService) -> setRcsService
    523:530:void setUceSettingEnabled(int,boolean) -> setUceSettingEnabled
    627:641:void triggerNetworkRegistration(int,android.telephony.ims.aidl.ISipDelegate,int,java.lang.String) -> triggerNetworkRegistration
    669:677:void unregisterImsFeatureCallback(com.android.ims.internal.IImsServiceFeatureCallback) -> unregisterImsFeatureCallback
    123:132:void unregisterImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback) -> unregisterImsRegistrationCallback
    212:220:void unregisterRcsAvailabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback) -> unregisterRcsAvailabilityCallback
    487:501:void unregisterUcePublishStateCallback(int,android.telephony.ims.aidl.IRcsUcePublishStateCallback) -> unregisterUcePublishStateCallback
    780:782:void verifyImsRcsConfiguredOrThrow(int) -> verifyImsRcsConfiguredOrThrow
com.android.phone.ImsRcsController$$ExternalSyntheticLambda0 -> com.android.phone.ImsRcsController$$ExternalSyntheticLambda0:
    com.android.internal.telephony.IIntegerConsumer com.android.phone.ImsRcsController$$InternalSyntheticLambda$0$9add3c3f6f02cf909a8038b317230cfcea9bcca1c3b8060afda522becf951449$0.f$0 -> f$0
    void com.android.phone.ImsRcsController$$InternalSyntheticLambda$0$9add3c3f6f02cf909a8038b317230cfcea9bcca1c3b8060afda522becf951449$0.<init>(com.android.internal.telephony.IIntegerConsumer) -> <init>
    void com.android.phone.ImsRcsController$$InternalSyntheticLambda$0$9add3c3f6f02cf909a8038b317230cfcea9bcca1c3b8060afda522becf951449$0.accept(java.lang.Object) -> accept
com.android.phone.ImsRcsController$$ExternalSyntheticLambda1 -> com.android.phone.ImsRcsController$$ExternalSyntheticLambda1:
    com.android.internal.telephony.IIntegerConsumer com.android.phone.ImsRcsController$$InternalSyntheticLambda$0$90db8f36a89eb41a025df4333a864b1134f293df7642caf3a180f5ad7f247401$0.f$0 -> f$0
    void com.android.phone.ImsRcsController$$InternalSyntheticLambda$0$90db8f36a89eb41a025df4333a864b1134f293df7642caf3a180f5ad7f247401$0.<init>(com.android.internal.telephony.IIntegerConsumer) -> <init>
    void com.android.phone.ImsRcsController$$InternalSyntheticLambda$0$90db8f36a89eb41a025df4333a864b1134f293df7642caf3a180f5ad7f247401$0.accept(java.lang.Object) -> accept
com.android.phone.ImsUtil -> com.android.phone.ImsUtil:
    41:42:void <clinit>() -> <clinit>
    167:168:boolean getLastKnownRoamingState(int) -> getLastKnownRoamingState
    157:160:int getSubId(int) -> getSubId
    64:66:boolean isWfcEnabled(android.content.Context,int) -> isWfcEnabled
    87:92:boolean isWfcModeWifiOnly(android.content.Context,int) -> isWfcModeWifiOnly
    117:145:boolean shouldPromoteWfc(android.content.Context,int) -> shouldPromoteWfc
com.android.phone.LocalConnectionImpl -> com.android.phone.LocalConnectionImpl:
    29:30:void <init>(android.content.Context) -> <init>
    35:36:java.lang.String getCallComposerServerUrlForHandle(int,java.util.UUID) -> getCallComposerServerUrlForHandle
com.android.phone.MMIDialogActivity -> com.android.phone.MMIDialogActivity:
    40:47:void <init>() -> <init>
    40:40:void access$000(com.android.phone.MMIDialogActivity,com.android.internal.telephony.MmiCode) -> access$000
    40:40:void access$100(com.android.phone.MMIDialogActivity) -> access$100
    160:169:void dismissDialogsAndFinish() -> dismissDialogsAndFinish
    53:78:void onCreate(android.os.Bundle) -> onCreate
    83:91:void onDestroy() -> onDestroy
    141:156:void onMMICancel() -> onMMICancel
    119:130:void onMMIComplete(com.android.internal.telephony.MmiCode) -> onMMIComplete
    96:108:void showMMIDialog() -> showMMIDialog
com.android.phone.MMIDialogActivity$1 -> com.android.phone.MMIDialogActivity$1:
    63:63:void <init>(com.android.phone.MMIDialogActivity) -> <init>
    66:71:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.NotificationMgr -> com.android.phone.NotificationMgr:
    197:197:void <clinit>() -> <clinit>
    114:174:void <init>(com.android.phone.PhoneGlobals) -> <init>
    81:81:android.telephony.TelephonyManager access$000(com.android.phone.NotificationMgr) -> access$000
    81:81:void access$100(com.android.phone.NotificationMgr,int,int) -> access$100
    655:663:void cancelAsUser(java.lang.String,int,android.os.UserHandle) -> cancelAsUser
    807:809:void cancelNetworkSelection(int) -> cancelNetworkSelection
    948:954:void clearUpNetworkSelectionNotificationParam(int) -> clearUpNetworkSelectionNotificationParam
    731:742:void dismissLimitedSimFunctionWarningNotification(int) -> dismissLimitedSimFunctionWarningNotification
    750:754:void dismissLimitedSimFunctionWarningNotificationForInactiveSubs() -> dismissLimitedSimFunctionWarningNotificationForInactiveSubs
    867:869:void dismissNetworkSelectionNotification(int) -> dismissNetworkSelectionNotification
    874:878:void dismissNetworkSelectionNotificationForInactiveSubId() -> dismissNetworkSelectionNotificationForInactiveSubId
    491:494:android.content.Intent getShowVoicemailIntentForDefaultDialer(android.os.UserHandle) -> getShowVoicemailIntentForDefaultDialer
    958:958:long getTimeStamp() -> getTimeStamp
    419:423:java.util.List getUsersExcludeDying() -> getUsersExcludeDying
    429:431:boolean hasUserRestriction(java.lang.String,android.os.UserHandle) -> hasUserRestriction
    671:672:void hideDataRoamingNotification() -> hideDataRoamingNotification
    186:193:com.android.phone.NotificationMgr init(com.android.phone.PhoneGlobals) -> init
    755:756:boolean lambda$dismissLimitedSimFunctionWarningNotificationForInactiveSubs$0(java.lang.Integer) -> lambda$dismissLimitedSimFunctionWarningNotificationForInactiveSubs$0
    893:893:void log(java.lang.String) -> log
    897:897:void logi(java.lang.String) -> logi
    454:483:boolean maybeSendVoicemailNotificationUsingDefaultDialer(com.android.internal.telephony.Phone,java.lang.Integer,java.lang.String,android.app.PendingIntent,boolean,android.os.UserHandle,boolean) -> maybeSendVoicemailNotificationUsingDefaultDialer
    641:649:void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle) -> notifyAsUser
    214:226:void refreshMwi(int) -> refreshMwi
    498:505:boolean shouldManageNotificationThroughDefaultDialer(android.os.UserHandle) -> shouldManageNotificationThroughDefaultDialer
    910:928:void shouldShowNotification(int,int) -> shouldShowNotification
    609:636:void showDataRoamingNotification(int,boolean) -> showDataRoamingNotification
    681:724:void showLimitedSimFunctionWarningNotification(int,java.lang.String) -> showLimitedSimFunctionWarningNotification
    770:800:void showNetworkSelection(java.lang.String,int) -> showNetworkSelection
    936:943:void startPendingNetworkSelectionNotification(int) -> startPendingNetworkSelectionNotification
    515:515:void updateCfi(int,boolean) -> updateCfi
    524:588:void updateCfi(int,boolean,boolean) -> updateCfi
    258:258:void updateMwi(int,boolean) -> updateMwi
    270:409:void updateMwi(int,boolean,boolean) -> updateMwi
    820:861:void updateNetworkSelection(int,int) -> updateNetworkSelection
com.android.phone.NotificationMgr$$ExternalSyntheticLambda0 -> com.android.phone.NotificationMgr$$ExternalSyntheticLambda0:
    com.android.phone.NotificationMgr com.android.phone.NotificationMgr$$InternalSyntheticLambda$0$8a696aec122c051b39e0b4727a06a9eac3317b802b775766feb060ec774a53b2$0.f$0 -> f$0
    void com.android.phone.NotificationMgr$$InternalSyntheticLambda$0$8a696aec122c051b39e0b4727a06a9eac3317b802b775766feb060ec774a53b2$0.<init>(com.android.phone.NotificationMgr) -> <init>
    boolean com.android.phone.NotificationMgr$$InternalSyntheticLambda$0$8a696aec122c051b39e0b4727a06a9eac3317b802b775766feb060ec774a53b2$0.test(java.lang.Object) -> test
com.android.phone.NotificationMgr$1 -> com.android.phone.NotificationMgr$1:
    145:145:void <init>(com.android.phone.NotificationMgr) -> <init>
    148:154:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.NumberVerificationManager -> com.android.phone.NumberVerificationManager:
    53:55:void <init>(com.android.phone.NumberVerificationManager$PhoneListSupplier) -> <init>
    59:59:void <init>() -> <init>
    69:88:boolean checkIncomingCall(java.lang.String) -> checkIncomingCall
    120:165:boolean checkNumberVerificationFeasibility(com.android.internal.telephony.INumberVerificationCallback) -> checkNumberVerificationFeasibility
    181:182:java.lang.String getAuthorizedPackage(android.content.Context) -> getAuthorizedPackage
    174:177:com.android.phone.NumberVerificationManager getInstance() -> getInstance
    101:113:void lambda$requestVerification$0() -> lambda$requestVerification$0
    190:190:void overrideAuthorizedPackage(java.lang.String) -> overrideAuthorizedPackage
    93:115:void requestVerification(android.telephony.PhoneNumberRange,com.android.internal.telephony.INumberVerificationCallback,long) -> requestVerification
com.android.phone.NumberVerificationManager$$ExternalSyntheticLambda0 -> com.android.phone.NumberVerificationManager$$ExternalSyntheticLambda0:
    com.android.phone.NumberVerificationManager$$InternalSyntheticLambda$0$407722ad1815ed3e7cf8758d71ddee551d22ff089565d19e2fc18a56eaf2f3ed$0 com.android.phone.NumberVerificationManager$$InternalSyntheticLambda$0$407722ad1815ed3e7cf8758d71ddee551d22ff089565d19e2fc18a56eaf2f3ed$0.INSTANCE -> INSTANCE
    void com.android.phone.NumberVerificationManager$$InternalSyntheticLambda$0$407722ad1815ed3e7cf8758d71ddee551d22ff089565d19e2fc18a56eaf2f3ed$0.<clinit>() -> <clinit>
    void com.android.phone.NumberVerificationManager$$InternalSyntheticLambda$0$407722ad1815ed3e7cf8758d71ddee551d22ff089565d19e2fc18a56eaf2f3ed$0.<init>() -> <init>
    com.android.internal.telephony.Phone[] com.android.phone.NumberVerificationManager$$InternalSyntheticLambda$0$407722ad1815ed3e7cf8758d71ddee551d22ff089565d19e2fc18a56eaf2f3ed$0.getPhones() -> getPhones
com.android.phone.NumberVerificationManager$$ExternalSyntheticLambda1 -> com.android.phone.NumberVerificationManager$$ExternalSyntheticLambda1:
    com.android.phone.NumberVerificationManager com.android.phone.NumberVerificationManager$$InternalSyntheticLambda$0$4419a142ea9cee2abcd3c55841a202691c34a0887d87457aa8423f77c316f110$0.f$0 -> f$0
    void com.android.phone.NumberVerificationManager$$InternalSyntheticLambda$0$4419a142ea9cee2abcd3c55841a202691c34a0887d87457aa8423f77c316f110$0.<init>(com.android.phone.NumberVerificationManager) -> <init>
    void com.android.phone.NumberVerificationManager$$InternalSyntheticLambda$0$4419a142ea9cee2abcd3c55841a202691c34a0887d87457aa8423f77c316f110$0.run() -> run
com.android.phone.PhoneApp -> com.android.phone.PhoneApp:
    30:30:void <init>() -> <init>
    35:41:void onCreate() -> onCreate
com.android.phone.PhoneDisplayMessage -> com.android.phone.PhoneDisplayMessage:
    30:33:void <clinit>() -> <clinit>
    92:99:void dismissMessage() -> dismissMessage
    55:58:void displayErrorMessage(android.content.Context,java.lang.String) -> displayErrorMessage
    62:85:void displayMessage(android.content.Context,java.lang.String,java.lang.String) -> displayMessage
    42:45:void displayNetworkMessage(android.content.Context,java.lang.String) -> displayNetworkMessage
    104:104:void log(java.lang.String) -> log
com.android.phone.PhoneGlobals -> com.android.phone.PhoneGlobals:
    191:370:void <init>(android.content.Context) -> <init>
    95:95:void access$1000(com.android.phone.PhoneGlobals) -> access$1000
    95:95:void access$1100(com.android.phone.PhoneGlobals,android.content.Intent) -> access$1100
    95:95:com.android.internal.telephony.Phone access$1200(com.android.phone.PhoneGlobals) -> access$1200
    95:95:com.android.internal.telephony.Phone access$1202(com.android.phone.PhoneGlobals,com.android.internal.telephony.Phone) -> access$1202
    95:95:void access$1300(com.android.phone.PhoneGlobals) -> access$1300
    95:95:int access$1400(com.android.phone.PhoneGlobals) -> access$1400
    95:95:int access$1402(com.android.phone.PhoneGlobals,int) -> access$1402
    95:95:void access$1500(com.android.phone.PhoneGlobals) -> access$1500
    95:95:boolean access$1600() -> access$1600
    95:95:void access$200(com.android.phone.PhoneGlobals,int,com.android.internal.telephony.Phone) -> access$200
    95:95:void access$300(com.android.phone.PhoneGlobals,android.os.AsyncResult) -> access$300
    95:95:android.app.Activity access$400(com.android.phone.PhoneGlobals) -> access$400
    95:95:android.app.Activity access$402(com.android.phone.PhoneGlobals,android.app.Activity) -> access$402
    95:95:android.app.ProgressDialog access$500(com.android.phone.PhoneGlobals) -> access$500
    95:95:android.app.ProgressDialog access$502(com.android.phone.PhoneGlobals,android.app.ProgressDialog) -> access$502
    95:95:com.android.phone.PhoneGlobals access$600() -> access$600
    95:95:void access$700(com.android.phone.PhoneGlobals) -> access$700
    95:95:boolean access$800(com.android.phone.PhoneGlobals,com.android.internal.telephony.Phone) -> access$800
    95:95:void access$900(com.android.phone.PhoneGlobals,android.content.Context,int) -> access$900
    925:925:boolean dataIsNowRoaming(int) -> dataIsNowRoaming
    1012:1037:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    561:561:com.android.internal.telephony.CallManager getCallManager() -> getCallManager
    565:565:android.os.PersistableBundle getCarrierConfig() -> getCarrierConfig
    569:570:android.os.PersistableBundle getCarrierConfigForSubId(int) -> getCarrierConfigForSubId
    991:991:boolean getDeviceUceEnabled() -> getDeviceUceEnabled
    541:542:com.android.phone.PhoneGlobals getInstance() -> getInstance
    631:631:android.app.KeyguardManager getKeyguardManager() -> getKeyguardManager
    612:612:android.app.Activity getPUKEntryActivity() -> getPUKEntryActivity
    553:553:com.android.internal.telephony.Phone getPhone() -> getPhone
    557:557:com.android.internal.telephony.Phone getPhone(int) -> getPhone
    961:961:com.android.internal.telephony.Phone getPhoneInEcm() -> getPhoneInEcm
    646:662:void handleAirplaneModeChange(android.content.Context,int) -> handleAirplaneModeChange
    839:853:void handleServiceStateChanged(android.content.Intent) -> handleServiceStateChanged
    229:263:void handleSimLock(int,com.android.internal.telephony.Phone) -> handleSimLock
    641:642:void initForNewRadioTechnology() -> initForNewRadioTechnology
    670:673:boolean isCellOffInAirplaneMode(android.content.Context) -> isCellOffInAirplaneMode
    267:268:boolean isSimLocked(com.android.internal.telephony.Phone) -> isSimLocked
    699:712:void maybeTurnCellOff(android.content.Context,boolean) -> maybeTurnCellOff
    719:719:void maybeTurnCellOn(android.content.Context,boolean) -> maybeTurnCellOn
    376:531:void onCreate() -> onCreate
    636:637:void onMMIComplete(android.os.AsyncResult) -> onMMIComplete
    979:983:void onNetworkSelectionChanged(int) -> onNetworkSelectionChanged
    970:970:void refreshMwiIndicator(int) -> refreshMwiIndicator
    574:590:void registerSettingsObserver() -> registerSettingsObserver
    999:1000:void setDeviceUceEnabled(boolean) -> setDeviceUceEnabled
    607:608:void setPukEntryActivity(android.app.Activity) -> setPukEntryActivity
    625:627:void setPukEntryProgressDialog(android.app.ProgressDialog) -> setPukEntryProgressDialog
    677:682:void setRadioPowerOff(android.content.Context) -> setRadioPowerOff
    686:692:void setRadioPowerOn(android.content.Context) -> setRadioPowerOn
    864:865:boolean shouldShowDataConnectedRoaming(int) -> shouldShowDataConnectedRoaming
    876:915:void updateDataRoamingStatus() -> updateDataRoamingStatus
    929:956:void updateLimitedSimFunctionForDualSim() -> updateLimitedSimFunctionForDualSim
com.android.phone.PhoneGlobals$1 -> com.android.phone.PhoneGlobals$1:
    272:272:void <init>(com.android.phone.PhoneGlobals) -> <init>
    277:360:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.PhoneGlobals$EventSimStateChangedBag -> com.android.phone.PhoneGlobals$EventSimStateChangedBag:
    219:221:void <init>(int,java.lang.String) -> <init>
com.android.phone.PhoneGlobals$PhoneAppBroadcastReceiver -> com.android.phone.PhoneGlobals$PhoneAppBroadcastReceiver:
    726:726:void <init>(com.android.phone.PhoneGlobals) -> <init>
    726:726:void <init>(com.android.phone.PhoneGlobals,com.android.phone.PhoneGlobals$1) -> <init>
    729:798:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.phone.PhoneGlobals$SipReceiver -> com.android.phone.PhoneGlobals$SipReceiver:
    804:804:void <init>(com.android.phone.PhoneGlobals) -> <init>
    804:804:void <init>(com.android.phone.PhoneGlobals,com.android.phone.PhoneGlobals$1) -> <init>
    808:824:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.phone.PhoneGlobals$WakeState -> com.android.phone.PhoneGlobals$WakeState:
    148:151:void <clinit>() -> <clinit>
    148:148:void <init>(java.lang.String,int) -> <init>
    148:148:com.android.phone.PhoneGlobals$WakeState valueOf(java.lang.String) -> valueOf
    148:148:com.android.phone.PhoneGlobals$WakeState[] values() -> values
com.android.phone.PhoneInterfaceManager -> com.android.phone.PhoneInterfaceManager:
    360:360:void <clinit>() -> <clinit>
    378:7884:void <init>(com.android.phone.PhoneGlobals) -> <init>
    235:235:com.android.internal.telephony.Phone access$000(com.android.phone.PhoneInterfaceManager) -> access$000
    235:235:com.android.internal.telephony.Phone access$100(com.android.phone.PhoneInterfaceManager,com.android.phone.PhoneInterfaceManager$MainThreadRequest) -> access$100
    235:235:boolean access$200(com.android.phone.PhoneInterfaceManager,int) -> access$200
    235:235:com.android.internal.telephony.uicc.UiccCard access$300(com.android.phone.PhoneInterfaceManager,com.android.phone.PhoneInterfaceManager$MainThreadRequest) -> access$300
    235:235:void access$400(java.lang.String) -> access$400
    235:235:com.android.phone.PhoneGlobals access$500(com.android.phone.PhoneInterfaceManager) -> access$500
    235:235:boolean access$600(com.android.phone.PhoneInterfaceManager,android.telephony.ModemActivityInfo) -> access$600
    235:235:android.telephony.ModemActivityInfo access$700(com.android.phone.PhoneInterfaceManager) -> access$700
    235:235:com.android.internal.telephony.PhoneConfigurationManager access$800(com.android.phone.PhoneInterfaceManager) -> access$800
    235:235:void access$900(com.android.phone.PhoneInterfaceManager) -> access$900
    10086:10087:void addPackageToThermalMitigationAllowlist(java.lang.String,android.content.Context) -> addPackageToThermalMitigationAllowlist
    10714:10724:android.telephony.ims.RcsContactUceCapability addUceRegistrationOverrideShell(int,java.util.List) -> addUceRegistrationOverrideShell
    9956:9989:void bootstrapAuthenticationRequest(int,int,android.net.Uri,android.telephony.gba.UaSecurityProtocolIdentifier,boolean,android.telephony.IBootstrapAuthenticationCallback) -> bootstrapAuthenticationRequest
    4771:4784:void cacheMmTelCapabilityProvisioning(int,int,int,boolean) -> cacheMmTelCapabilityProvisioning
    2363:2363:void call(java.lang.String,java.lang.String) -> call
    2372:2406:void callForSubscriber(int,java.lang.String,java.lang.String) -> callForSubscriber
    7504:7518:boolean canChangeDtmfToneLength(int,java.lang.String,java.lang.String) -> canChangeDtmfToneLength
    9917:9917:boolean canConnectTo5GInDsdsMode() -> canConnectTo5GInDsdsMode
    8411:8425:void carrierActionReportDefaultNetworkStatus(int,boolean) -> carrierActionReportDefaultNetworkStatus
    8435:8444:void carrierActionResetAll(int) -> carrierActionResetAll
    8326:8340:void carrierActionSetRadioEnabled(int,boolean) -> carrierActionSetRadioEnabled
    9856:9873:int changeIccLockPassword(int,java.lang.String,java.lang.String) -> changeIccLockPassword
    6887:6900:int checkCarrierPrivilegesForPackage(int,java.lang.String) -> checkCarrierPrivilegesForPackage
    6906:6918:int checkCarrierPrivilegesForPackageAnyPhone(java.lang.String) -> checkCarrierPrivilegesForPackageAnyPhone
    4548:4548:void checkModifyPhoneStatePermission(int,java.lang.String) -> checkModifyPhoneStatePermission
    6364:6378:java.lang.SecurityException checkNetworkRequestForSanitizedLocationAccess(android.telephony.NetworkScanRequest,int,java.lang.String) -> checkNetworkRequestForSanitizedLocationAccess
    7803:7812:void cleanUpAllowedNetworkTypes(com.android.internal.telephony.Phone,int) -> cleanUpAllowedNetworkTypes
    7817:7819:void cleanUpSmsRawTable(android.content.Context) -> cleanUpSmsRawTable
    5888:5904:boolean clearCarrierImsServiceOverride(int) -> clearCarrierImsServiceOverride
    10866:10884:void clearSignalStrengthUpdateRequest(int,android.telephony.SignalStrengthUpdateRequest,java.lang.String) -> clearSignalStrengthUpdateRequest
    10755:10764:android.telephony.ims.RcsContactUceCapability clearUceRegistrationOverrideShell(int) -> clearUceRegistrationOverrideShell
    3423:3427:java.lang.String createTelUrl(java.lang.String) -> createTelUrl
    2334:2334:void dial(java.lang.String) -> dial
    2343:2359:void dialForSubscriber(int,java.lang.String) -> dialForSubscriber
    2799:2814:boolean disableDataConnectivity() -> disableDataConnectivity
    5754:5765:void disableIms(int) -> disableIms
    3033:3033:void disableLocationUpdates() -> disableLocationUpdates
    3711:3719:void disableVisualVoicemailSmsFilter(java.lang.String,int) -> disableVisualVoicemailSmsFilter
    4824:4830:boolean doesImsCapabilityRequireProvisioning(android.content.Context,int,int) -> doesImsCapabilityRequireProvisioning
    4857:4860:boolean doesRcsCapabilityRequireProvisioning(android.content.Context,int,int) -> doesRcsCapabilityRequireProvisioning
    9460:9470:boolean doesSwitchMultiSimConfigTriggerReboot(int,java.lang.String,java.lang.String) -> doesSwitchMultiSimConfigTriggerReboot
    8454:8463:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2778:2793:boolean enableDataConnectivity() -> enableDataConnectivity
    5735:5746:void enableIms(int) -> enableIms
    3020:3020:void enableLocationUpdates() -> enableLocationUpdates
    9296:9308:boolean enableModemForSlot(int,boolean) -> enableModemForSlot
    7465:7474:void enableVideoCalling(boolean) -> enableVideoCalling
    3698:3706:void enableVisualVoicemailSmsFilter(java.lang.String,int,android.telephony.VisualVoicemailSmsFilterSettings) -> enableVisualVoicemailSmsFilter
    3401:3401:void enforceActiveEmergencySessionPermission() -> enforceActiveEmergencySessionPermission
    3411:3411:void enforceCallPermission() -> enforceCallPermission
    3367:3375:void enforceCallingPackage(java.lang.String,int,java.lang.String) -> enforceCallingPackage
    3386:3386:void enforceModifyPermission() -> enforceModifyPermission
    8119:8119:void enforceReadPrivilegedPermission(java.lang.String) -> enforceReadPrivilegedPermission
    3419:3419:void enforceRebootPermission() -> enforceRebootPermission
    8130:8130:void enforceSendSmsPermission() -> enforceSendSmsPermission
    3415:3415:void enforceSettingsPermission() -> enforceSettingsPermission
    3395:3396:void enforceSystemCaller() -> enforceSystemCaller
    8139:8154:void enforceVisualVoicemailPackage(java.lang.String,int) -> enforceVisualVoicemailPackage
    9638:9653:void enqueueSmsPickResult(java.lang.String,java.lang.String,com.android.internal.telephony.IIntegerConsumer) -> enqueueSmsPickResult
    7752:7798:void factoryReset(int) -> factoryReset
    3444:3444:int getActivePhoneType() -> getActivePhoneType
    3449:3459:int getActivePhoneTypeForSlot(int) -> getActivePhoneTypeForSlot
    7879:7880:java.util.List getActiveSubscriptionInfoListPrivileged() -> getActiveSubscriptionInfoListPrivileged
    3738:3746:android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(int) -> getActiveVisualVoicemailSmsFilterSettings
    8166:8184:java.lang.String getAidForAppType(int,int) -> getAidForAppType
    3087:3126:java.util.List getAllCellInfo(java.lang.String,java.lang.String) -> getAllCellInfo
    8298:8315:android.telephony.CarrierRestrictionRules getAllowedCarriers() -> getAllowedCarriers
    6414:6427:int getAllowedNetworkTypesBitmask(int) -> getAllowedNetworkTypesBitmask
    6440:6447:long getAllowedNetworkTypesForReason(int,int) -> getAllowedNetworkTypesForReason
    10245:10252:java.lang.String getBoundGbaService(int) -> getBoundGbaService
    5918:5935:java.lang.String getBoundImsServicePackage(int,boolean,int) -> getBoundImsServicePackage
    3077:3080:java.util.List getCachedCellInfo() -> getCachedCellInfo
    7030:7044:int getCallComposerStatus(int) -> getCallComposerStatus
    6124:6166:void getCallForwarding(int,int,com.android.internal.telephony.ICallForwardingInfoCallback) -> getCallForwarding
    2872:2887:int getCallState() -> getCallState
    2892:2909:int getCallStateForSubscription(int,java.lang.String,java.lang.String) -> getCallStateForSubscription
    6209:6252:void getCallWaitingStatus(int,com.android.internal.telephony.IIntegerConsumer) -> getCallWaitingStatus
    10659:10666:java.lang.String getCapabilityFromEab(java.lang.String) -> getCapabilityFromEab
    8899:8904:int getCardIdForDefaultEuicc(int,java.lang.String) -> getCardIdForDefaultEuicc
    3342:3353:int getCarrierIdFromMccMnc(int,java.lang.String,boolean) -> getCarrierIdFromMccMnc
    8998:9010:int getCarrierIdListVersion(int) -> getCarrierIdListVersion
    6929:6939:java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int) -> getCarrierPackageNamesForIntentAndPhone
    6850:6863:int getCarrierPrivilegeStatus(int) -> getCarrierPrivilegeStatus
    6868:6882:int getCarrierPrivilegeStatusForUid(int,int) -> getCarrierPrivilegeStatusForUid
    6757:6786:int getCarrierPrivilegeStatusFromCarrierConfigRules(int,int,com.android.internal.telephony.Phone) -> getCarrierPrivilegeStatusFromCarrierConfigRules
    6792:6812:int getCarrierPrivilegeStatusFromCarrierConfigRules(int,com.android.internal.telephony.Phone,java.lang.String) -> getCarrierPrivilegeStatusFromCarrierConfigRules
    10596:10597:boolean getCarrierSingleRegistrationEnabled(int) -> getCarrierSingleRegistrationEnabled
    3467:3467:int getCdmaEriIconIndex(java.lang.String,java.lang.String) -> getCdmaEriIconIndex
    3474:3490:int getCdmaEriIconIndexForSubscriber(int,java.lang.String,java.lang.String) -> getCdmaEriIconIndexForSubscriber
    3500:3500:int getCdmaEriIconMode(java.lang.String,java.lang.String) -> getCdmaEriIconMode
    3507:3523:int getCdmaEriIconModeForSubscriber(int,java.lang.String,java.lang.String) -> getCdmaEriIconModeForSubscriber
    3531:3531:java.lang.String getCdmaEriText(java.lang.String,java.lang.String) -> getCdmaEriText
    3538:3554:java.lang.String getCdmaEriTextForSubscriber(int,java.lang.String,java.lang.String) -> getCdmaEriTextForSubscriber
    3562:3576:java.lang.String getCdmaMdn(int) -> getCdmaMdn
    3584:3597:java.lang.String getCdmaMin(int) -> getCdmaMin
    8223:8240:java.lang.String getCdmaPrlVersion(int) -> getCdmaPrlVersion
    9032:9041:int getCdmaRoamingMode(int) -> getCdmaRoamingMode
    9059:9068:int getCdmaSubscriptionMode(int) -> getCdmaSubscriptionMode
    2955:2985:android.telephony.CellIdentity getCellLocation(java.lang.String,java.lang.String) -> getCellLocation
    6087:6115:com.android.internal.telephony.CellNetworkScanResult getCellNetworkScanResults(int,java.lang.String,java.lang.String) -> getCellNetworkScanResults
    9273:9287:java.util.List getCertsFromCarrierPrivilegeAccessRules(int) -> getCertsFromCarrierPrivilegeAccessRules
    8520:8535:java.util.List getClientRequestStats(java.lang.String,java.lang.String,int) -> getClientRequestStats
    10644:10651:java.lang.String getContactFromEab(java.lang.String) -> getContactFromEab
    9518:9518:java.lang.String getCurrentPackageName() -> getCurrentPackageName
    3828:3840:int getDataActivationState(int,java.lang.String) -> getDataActivationState
    2935:2935:int getDataActivity() -> getDataActivity
    2940:2950:int getDataActivityForSubId(int) -> getDataActivityForSubId
    6620:6620:boolean getDataEnabled(int) -> getDataEnabled
    5052:5052:int getDataNetworkType(java.lang.String,java.lang.String) -> getDataNetworkType
    5062:5078:int getDataNetworkTypeForSubscriber(int,java.lang.String,java.lang.String) -> getDataNetworkTypeForSubscriber
    2914:2914:int getDataState() -> getDataState
    2919:2930:int getDataStateForSubId(int) -> getDataStateForSubId
    8942:8942:boolean getDefaultDataEnabled() -> getDefaultDataEnabled
    8951:8954:boolean getDefaultDataRoamingEnabled(int) -> getDefaultDataRoamingEnabled
    2276:2277:com.android.internal.telephony.Phone getDefaultPhone() -> getDefaultPhone
    5176:5176:int getDefaultSubscription() -> getDefaultSubscription
    7602:7602:java.lang.String getDeviceId(java.lang.String) -> getDeviceId
    7615:7636:java.lang.String getDeviceIdWithFeature(java.lang.String,java.lang.String) -> getDeviceIdWithFeature
    10572:10573:boolean getDeviceSingleRegistrationEnabled() -> getDeviceSingleRegistrationEnabled
    3275:3291:java.lang.String getDeviceSoftwareVersionForSlot(int,java.lang.String,java.lang.String) -> getDeviceSoftwareVersionForSlot
    10686:10692:boolean getDeviceUceEnabled() -> getDeviceUceEnabled
    8621:8633:boolean getEmergencyCallbackMode(int) -> getEmergencyCallbackMode
    9205:9217:int getEmergencyNumberDbVersion(int) -> getEmergencyNumberDbVersion
    9087:9106:java.util.Map getEmergencyNumberList(java.lang.String,java.lang.String) -> getEmergencyNumberList
    9183:9200:java.util.List getEmergencyNumberListTestMode() -> getEmergencyNumberListTestMode
    9923:9938:java.util.List getEquivalentHomePlmns(int,java.lang.String,java.lang.String) -> getEquivalentHomePlmns
    8195:8212:java.lang.String getEsn(int) -> getEsn
    5480:5502:java.lang.String[] getForbiddenPlmns(int,int,java.lang.String,java.lang.String) -> getForbiddenPlmns
    10293:10297:com.android.internal.telephony.GbaManager getGbaManager(int) -> getGbaManager
    10282:10289:int getGbaReleaseTime(int) -> getGbaReleaseTime
    6993:6999:java.lang.String getIccId(int) -> getIccId
    3203:3219:java.lang.String getImeiForSlot(int,java.lang.String,java.lang.String) -> getImeiForSlot
    5827:5838:android.telephony.ims.aidl.IImsConfig getImsConfig(int,int) -> getImsConfig
    10619:10621:boolean getImsFeatureValidationOverride(int) -> getImsFeatureValidationOverride
    5946:5972:void getImsMmTelFeatureState(int,com.android.internal.telephony.IIntegerConsumer) -> getImsMmTelFeatureState
    3996:4020:void getImsMmTelRegistrationState(int,com.android.internal.telephony.IIntegerConsumer) -> getImsMmTelRegistrationState
    4028:4057:void getImsMmTelRegistrationTransportType(int,com.android.internal.telephony.IIntegerConsumer) -> getImsMmTelRegistrationTransportType
    4880:4900:int getImsProvisioningInt(int,int) -> getImsProvisioningInt
    4705:4752:boolean getImsProvisioningStatusForCapability(int,int,int) -> getImsProvisioningStatusForCapability
    4905:4925:java.lang.String getImsProvisioningString(int,int) -> getImsProvisioningString
    7737:7747:int getImsRegTechnologyForMmTel(int) -> getImsRegTechnologyForMmTel
    5808:5819:android.telephony.ims.aidl.IImsRegistration getImsRegistration(int,int) -> getImsRegistration
    10792:10800:java.lang.String getLastUcePidfXmlShell(int) -> getLastUcePidfXmlShell
    10773:10782:android.telephony.ims.RcsContactUceCapability getLatestRcsContactUceCapabilityShell(int) -> getLatestRcsContactUceCapabilityShell
    7131:7146:java.lang.String getLine1AlphaTagForDisplay(int,java.lang.String,java.lang.String) -> getLine1AlphaTagForDisplay
    7104:7125:java.lang.String getLine1NumberForDisplay(int,java.lang.String,java.lang.String) -> getLine1NumberForDisplay
    5144:5144:int getLteOnCdmaMode(java.lang.String,java.lang.String) -> getLteOnCdmaMode
    5152:5168:int getLteOnCdmaModeForSubscriber(int,java.lang.String,java.lang.String) -> getLteOnCdmaModeForSubscriber
    6059:6078:java.lang.String getManualNetworkSelectionPlmn(int) -> getManualNetworkSelectionPlmn
    3263:3267:java.lang.String getManufacturerCodeForSlot(int) -> getManufacturerCodeForSlot
    3236:3258:java.lang.String getMeidForSlot(int,java.lang.String,java.lang.String) -> getMeidForSlot
    7235:7274:java.lang.String[] getMergedImsisFromGroup(int,java.lang.String) -> getMergedImsisFromGroup
    7154:7230:java.lang.String[] getMergedSubscriberIds(int,java.lang.String,java.lang.String) -> getMergedSubscriberIds
    4794:4796:int getMmTelCapabilityProvisioningBitfield(int,int) -> getMmTelCapabilityProvisioningBitfield
    4815:4815:java.lang.String getMmTelProvisioningKey(int,int) -> getMmTelProvisioningKey
    9659:9670:java.lang.String getMmsUAProfUrl(int) -> getMmsUAProfUrl
    9676:9687:java.lang.String getMmsUserAgent(int) -> getMmsUserAgent
    10630:10636:java.lang.String getMobileProvisioningUrl() -> getMobileProvisioningUrl
    3042:3073:java.util.List getNeighboringCellInfo(java.lang.String,java.lang.String) -> getNeighboringCellInfo
    2992:3008:java.lang.String getNetworkCountryIsoForPhone(int) -> getNetworkCountryIsoForPhone
    3908:3919:int getNetworkSelectionMode(int) -> getNetworkSelectionMode
    5018:5044:int getNetworkTypeForSubscriber(int,java.lang.String,java.lang.String) -> getNetworkTypeForSubscriber
    9016:9027:int getNumberOfModemsWithSimultaneousDataConnections(int,java.lang.String,java.lang.String) -> getNumberOfModemsWithSimultaneousDataConnections
    6944:6967:java.util.List getPackagesWithCarrierPrivileges(int) -> getPackagesWithCarrierPrivileges
    6977:6988:java.util.List getPackagesWithCarrierPrivilegesForAllPhones() -> getPackagesWithCarrierPrivilegesForAllPhones
    5695:5706:java.lang.String[] getPcscfAddress(java.lang.String,java.lang.String,java.lang.String) -> getPcscfAddress
    2310:2310:com.android.internal.telephony.Phone getPhone(int) -> getPhone
    7681:7695:android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubscriptionId(int) -> getPhoneAccountHandleForSubscriptionId
    10935:10941:android.telephony.PhoneCapability getPhoneCapability() -> getPhoneCapability
    2290:2293:com.android.internal.telephony.Phone getPhoneFromRequest(com.android.phone.PhoneInterfaceManager$MainThreadRequest) -> getPhoneFromRequest
    5225:5230:com.android.internal.telephony.Phone getPhoneFromSlotIdOrThrowException(int) -> getPhoneFromSlotIdOrThrowException
    2299:2299:com.android.internal.telephony.Phone getPhoneFromSubId(int) -> getPhoneFromSubId
    5184:5184:int getPreferredVoiceSubscription() -> getPreferredVoiceSubscription
    7346:7367:int getRadioAccessFamily(int,java.lang.String) -> getRadioAccessFamily
    9505:9509:int getRadioHalVersion() -> getRadioHalVersion
    8667:8679:int getRadioPowerState(int,java.lang.String,java.lang.String) -> getRadioPowerState
    4605:4628:boolean getRcsProvisioningStatusForCapability(int,int) -> getRcsProvisioningStatusForCapability
    10471:10474:boolean getRcsSingleRegistrationTestModeEnabled() -> getRcsSingleRegistrationTestModeEnabled
    7931:7995:android.telephony.ServiceState getServiceStateForSubscriber(int,java.lang.String,java.lang.String) -> getServiceStateForSubscriber
    8645:8655:android.telephony.SignalStrength getSignalStrength(int) -> getSignalStrength
    7824:7867:java.lang.String getSimLocaleForSubscriber(int) -> getSimLocaleForSubscriber
    10970:10978:void getSlicingConfig(android.os.ResultReceiver) -> getSlicingConfig
    5180:5180:int getSlotForDefaultSubscription() -> getSlotForDefaultSubscription
    5004:5005:int getSlotIndex(int) -> getSlotIndex
    4995:4997:int getSlotIndexOrException(int) -> getSlotIndexOrException
    9481:9497:int[] getSlotsMapping() -> getSlotsMapping
    7656:7661:int getSubIdForPhoneAccount(android.telecom.PhoneAccount) -> getSubIdForPhoneAccount
    7667:7676:int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle,java.lang.String,java.lang.String) -> getSubIdForPhoneAccountHandle
    3296:3302:int getSubscriptionCarrierId(int) -> getSubscriptionCarrierId
    3307:3313:java.lang.String getSubscriptionCarrierName(int) -> getSubscriptionCarrierName
    3318:3325:int getSubscriptionSpecificCarrierId(int) -> getSubscriptionSpecificCarrierId
    3330:3336:java.lang.String getSubscriptionSpecificCarrierName(int) -> getSubscriptionSpecificCarrierName
    9604:9619:java.util.List getSystemSelectionChannels(int) -> getSystemSelectionChannels
    8250:8258:java.util.List getTelephonyHistograms() -> getTelephonyHistograms
    10052:10059:java.util.List getThermalMitigationAllowlist(android.content.Context) -> getThermalMitigationAllowlist
    3224:3228:java.lang.String getTypeAllocationCodeForSlot(int) -> getTypeAllocationCodeForSlot
    2303:2305:com.android.internal.telephony.uicc.UiccCard getUiccCardFromRequest(com.android.phone.PhoneInterfaceManager$MainThreadRequest) -> getUiccCardFromRequest
    8766:8812:java.util.List getUiccCardsInfo(java.lang.String) -> getUiccCardsInfo
    8817:8882:android.telephony.UiccSlotInfo[] getUiccSlotsInfo() -> getUiccSlotsInfo
    3680:3692:java.lang.String getVisualVoicemailPackageName(java.lang.String,java.lang.String,int) -> getVisualVoicemailPackageName
    3658:3674:android.os.Bundle getVisualVoicemailSettings(java.lang.String,int) -> getVisualVoicemailSettings
    3725:3733:android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(java.lang.String,int) -> getVisualVoicemailSmsFilterSettings
    4406:4417:int getVoWiFiModeSetting(int) -> getVoWiFiModeSetting
    4439:4449:int getVoWiFiRoamingModeSetting(int) -> getVoWiFiRoamingModeSetting
    3808:3820:int getVoiceActivationState(int,java.lang.String) -> getVoiceActivationState
    3849:3864:int getVoiceMessageCountForSubscriber(int,java.lang.String,java.lang.String) -> getVoiceMessageCountForSubscriber
    5087:5103:int getVoiceNetworkTypeForSubscriber(int,java.lang.String,java.lang.String) -> getVoiceNetworkTypeForSubscriber
    8008:8018:android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle) -> getVoicemailRingtoneUri
    8539:8540:android.os.WorkSource getWorkSource(int) -> getWorkSource
    10019:10042:int handleDataThrottlingRequest(int,android.telephony.DataThrottlingRequest) -> handleDataThrottlingRequest
    2833:2833:boolean handlePinMmi(java.lang.String) -> handlePinMmi
    2852:2862:boolean handlePinMmiForSubscriber(int,java.lang.String) -> handlePinMmiForSubscriber
    8470:8472:int handleShellCommand(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,java.lang.String[]) -> handleShellCommand
    2837:2848:void handleUssdRequest(int,java.lang.String,android.os.ResultReceiver) -> handleUssdRequest
    6826:6840:boolean hasCarrierConfigAccess(java.lang.String,android.content.pm.PackageManager,java.util.List) -> hasCarrierConfigAccess
    5111:5112:boolean hasIccCard() -> hasIccCard
    5120:5130:boolean hasIccCardUsingSlotIndex(int) -> hasIccCardUsingSlotIndex
    5287:5290:boolean iccCloseLogicalChannel(int,int) -> iccCloseLogicalChannel
    5295:5297:boolean iccCloseLogicalChannelBySlot(int,int) -> iccCloseLogicalChannelBySlot
    5302:5313:boolean iccCloseLogicalChannelWithPermission(com.android.internal.telephony.Phone,int) -> iccCloseLogicalChannelWithPermission
    5437:5471:byte[] iccExchangeSimIO(int,int,int,int,int,int,java.lang.String) -> iccExchangeSimIO
    5236:5242:android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(int,java.lang.String,java.lang.String,int) -> iccOpenLogicalChannel
    5250:5255:android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelBySlot(int,java.lang.String,java.lang.String,int) -> iccOpenLogicalChannelBySlot
    5261:5282:android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannelWithPermission(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,int) -> iccOpenLogicalChannelWithPermission
    5372:5379:java.lang.String iccTransmitApduBasicChannel(int,java.lang.String,int,int,int,int,int,java.lang.String) -> iccTransmitApduBasicChannel
    5386:5395:java.lang.String iccTransmitApduBasicChannelBySlot(int,java.lang.String,int,int,int,int,int,java.lang.String) -> iccTransmitApduBasicChannelBySlot
    5402:5431:java.lang.String iccTransmitApduBasicChannelWithPermission(com.android.internal.telephony.Phone,java.lang.String,int,int,int,int,int,java.lang.String) -> iccTransmitApduBasicChannelWithPermission
    5319:5326:java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,int,java.lang.String) -> iccTransmitApduLogicalChannel
    5333:5340:java.lang.String iccTransmitApduLogicalChannelBySlot(int,int,int,int,int,int,int,java.lang.String) -> iccTransmitApduLogicalChannelBySlot
    5346:5366:java.lang.String iccTransmitApduLogicalChannelWithPermission(com.android.internal.telephony.Phone,int,int,int,int,int,int,java.lang.String) -> iccTransmitApduLogicalChannelWithPermission
    2245:2252:com.android.phone.PhoneInterfaceManager init(com.android.phone.PhoneGlobals) -> init
    7314:7337:int invokeOemRilRequestRaw(byte[],byte[]) -> invokeOemRilRequestRaw
    5188:5188:boolean isActiveSubscription(int) -> isActiveSubscription
    4195:4207:boolean isAdvancedCallingSettingEnabled(int) -> isAdvancedCallingSettingEnabled
    10063:10072:boolean isAnyPhoneInEmergencyState() -> isAnyPhoneInEmergencyState
    9555:9566:boolean isApnMetered(int,int) -> isApnMetered
    9428:9450:boolean isApplicationOnUicc(int,int) -> isApplicationOnUicc
    4134:4145:boolean isAvailable(int,int,int) -> isAvailable
    4115:4129:boolean isCapable(int,int,int) -> isCapable
    3873:3879:boolean isConcurrentVoiceAndDataAllowed(int) -> isConcurrentVoiceAndDataAllowed
    4308:4319:boolean isCrossSimCallingEnabledByUser(int) -> isCrossSimCallingEnabledByUser
    2819:2829:boolean isDataConnectivityPossible(int) -> isDataConnectivityPossible
    6672:6698:boolean isDataEnabled(int) -> isDataEnabled
    9537:9550:boolean isDataEnabledForApn(int,int,java.lang.String) -> isDataEnabledForApn
    6711:6745:boolean isDataEnabledForReason(int,int) -> isDataEnabledForReason
    8699:8713:boolean isDataRoamingEnabled(int) -> isDataRoamingEnabled
    9111:9129:boolean isEmergencyNumber(java.lang.String,boolean) -> isEmergencyNumber
    7547:7552:boolean isHearingAidCompatibilitySupported() -> isHearingAidCompatibilitySupported
    9795:9808:boolean isIccLockEnabled(int) -> isIccLockEnabled
    2324:2330:boolean isImsAvailableOnDevice() -> isImsAvailableOnDevice
    4554:4564:boolean isImsProvisioningRequired(int,int,boolean) -> isImsProvisioningRequired
    7646:7648:boolean isImsRegistered(int) -> isImsRegistered
    3924:3934:boolean isInEmergencySmsMode() -> isInEmergencySmsMode
    8746:8759:boolean isManualNetworkSelectionAllowed(int) -> isManualNetworkSelectionAllowed
    4759:4762:boolean isMmTelCapabilityProvisionedInCache(int,int,int) -> isMmTelCapabilityProvisionedInCache
    4159:4186:void isMmTelCapabilitySupported(int,com.android.internal.telephony.IIntegerConsumer,int,int) -> isMmTelCapabilitySupported
    9692:9709:boolean isMobileDataPolicyEnabled(int,int) -> isMobileDataPolicyEnabled
    7914:7920:boolean isModemActivityInfoValid(android.telephony.ModemActivityInfo) -> isModemActivityInfoValid
    9317:9335:boolean isModemEnabledForSlot(int,java.lang.String,java.lang.String) -> isModemEnabledForSlot
    9355:9366:int isMultiSimSupported(java.lang.String,java.lang.String) -> isMultiSimSupported
    9372:9390:int isMultiSimSupportedInternal() -> isMultiSimSupportedInternal
    9624:9631:boolean isMvnoMatched(int,int,java.lang.String) -> isMvnoMatched
    6492:6508:boolean isNrDualConnectivityEnabled(int) -> isNrDualConnectivityEnabled
    9944:9949:boolean isRadioInterfaceCapabilitySupported(java.lang.String) -> isRadioInterfaceCapabilitySupported
    2613:2613:boolean isRadioOn(java.lang.String) -> isRadioOn
    2626:2626:boolean isRadioOnForSubscriber(int,java.lang.String) -> isRadioOnForSubscriber
    2646:2656:boolean isRadioOnForSubscriber(int) -> isRadioOnForSubscriber
    2632:2642:boolean isRadioOnForSubscriberWithFeature(int,java.lang.String,java.lang.String) -> isRadioOnForSubscriberWithFeature
    2619:2619:boolean isRadioOnWithFeature(java.lang.String,java.lang.String) -> isRadioOnWithFeature
    10308:10330:boolean isRcsVolteSingleRegistrationCapable(int) -> isRcsVolteSingleRegistrationCapable
    7586:7596:boolean isRttEnabled(int) -> isRttEnabled
    7563:7577:boolean isRttSupported(int) -> isRttSupported
    6566:6577:boolean isTetheringApnRequiredForSubscriber(int) -> isTetheringApnRequiredForSubscriber
    7541:7542:boolean isTtyModeSupported() -> isTtyModeSupported
    4492:4503:boolean isTtyOverVolteEnabled(int) -> isTtyOverVolteEnabled
    6636:6658:boolean isUserDataEnabled(int) -> isUserDataEnabled
    8601:8610:boolean isUssdApiAllowed(int) -> isUssdApiAllowed
    7479:7498:boolean isVideoCallingEnabled(java.lang.String,java.lang.String) -> isVideoCallingEnabled
    7719:7729:boolean isVideoTelephonyAvailable(int) -> isVideoTelephonyAvailable
    8387:8397:boolean isVoNrEnabled(int) -> isVoNrEnabled
    4353:4364:boolean isVoWiFiRoamingSettingEnabled(int) -> isVoWiFiRoamingSettingEnabled
    4270:4281:boolean isVoWiFiSettingEnabled(int) -> isVoWiFiSettingEnabled
    8065:8075:boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle) -> isVoicemailVibrationEnabled
    4233:4244:boolean isVtSettingEnabled(int) -> isVtSettingEnabled
    7702:7712:boolean isWifiCallingAvailable(int) -> isWifiCallingAvailable
    7523:7536:boolean isWorldPhone(int,java.lang.String,java.lang.String) -> isWorldPhone
    6243:6243:void lambda$getCallWaitingStatus$4(int,java.lang.String,android.os.ResultReceiver) -> lambda$getCallWaitingStatus$4
    5962:5964:void lambda$getImsMmTelFeatureState$3(com.android.internal.telephony.IIntegerConsumer,java.lang.Integer) -> lambda$getImsMmTelFeatureState$3
    4011:4015:void lambda$getImsMmTelRegistrationState$0(com.android.internal.telephony.IIntegerConsumer,java.lang.Integer) -> lambda$getImsMmTelRegistrationState$0
    4045:4052:void lambda$getImsMmTelRegistrationTransportType$1(com.android.internal.telephony.IIntegerConsumer,java.lang.Integer) -> lambda$getImsMmTelRegistrationTransportType$1
    4176:4178:void lambda$isMmTelCapabilitySupported$2(com.android.internal.telephony.IIntegerConsumer,java.lang.Boolean) -> lambda$isMmTelCapabilitySupported$2
    6299:6299:void lambda$setCallWaitingStatus$5(int,java.lang.String,android.os.ResultReceiver) -> lambda$setCallWaitingStatus$5
    10550:10557:void lambda$setDeviceToDeviceForceEnabled$9(boolean,com.android.internal.telephony.Phone) -> lambda$setDeviceToDeviceForceEnabled$9
    9590:9590:void lambda$setSystemSelectionChannels$8(com.android.internal.telephony.IBooleanConsumer,java.lang.Boolean) -> lambda$setSystemSelectionChannels$8
    7448:7456:void lambda$uploadCallComposerPicture$6(android.os.ResultReceiver,android.util.Pair) -> lambda$uploadCallComposerPicture$6
    7390:7444:void lambda$uploadCallComposerPicture$7(android.os.ParcelFileDescriptor,android.os.ResultReceiver,java.lang.String,int) -> lambda$uploadCallComposerPicture$7
    3431:3431:void log(java.lang.String) -> log
    3439:3439:void loge(java.lang.String) -> loge
    3435:3435:void logv(java.lang.String) -> logv
    2700:2715:boolean needMobileRadioShutdown() -> needMobileRadioShutdown
    3630:3635:boolean needsOtaServiceProvisioning() -> needsOtaServiceProvisioning
    9222:9234:void notifyOtaEmergencyNumberDbInstalled() -> notifyOtaEmergencyNumberDbInstalled
    9775:9790:void notifyRcsAutoConfigurationReceived(int,byte[],boolean) -> notifyRcsAutoConfigurationReceived
    5576:5588:java.lang.String nvReadItem(int) -> nvReadItem
    5626:5637:boolean nvWriteCdmaPrl(byte[]) -> nvWriteCdmaPrl
    5601:5614:boolean nvWriteItem(int,java.lang.String) -> nvWriteItem
    10951:10959:int prepareForUnattendedReboot() -> prepareForUnattendedReboot
    2284:2286:void publish() -> publish
    5676:5688:boolean rebootModem(int) -> rebootModem
    8916:8935:void refreshUiccProfile(int) -> refreshUiccProfile
    4508:4523:void registerImsProvisioningChangedCallback(int,android.telephony.ims.aidl.IImsConfigCallback) -> registerImsProvisioningChangedCallback
    3946:3962:void registerImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback) -> registerImsRegistrationCallback
    4068:4083:void registerMmTelCapabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback) -> registerMmTelCapabilityCallback
    5774:5785:void registerMmTelFeatureCallback(int,com.android.ims.internal.IImsServiceFeatureCallback) -> registerMmTelFeatureCallback
    10339:10361:void registerRcsProvisioningCallback(int,android.telephony.ims.aidl.IRcsConfigCallback) -> registerRcsProvisioningCallback
    10674:10681:int removeContactFromEab(int,java.lang.String) -> removeContactFromEab
    10096:10097:void removePackageFromThermalMitigationAllowlist(java.lang.String,android.content.Context) -> removePackageFromThermalMitigationAllowlist
    10735:10745:android.telephony.ims.RcsContactUceCapability removeUceRegistrationOverrideShell(int,java.util.List) -> removeUceRegistrationOverrideShell
    10809:10817:boolean removeUceRequestDisallowedStatus(int) -> removeUceRequestDisallowedStatus
    3132:3133:void requestCellInfoUpdate(int,android.telephony.ICellInfoCallback,java.lang.String,java.lang.String) -> requestCellInfoUpdate
    3145:3185:void requestCellInfoUpdateInternal(int,android.telephony.ICellInfoCallback,java.lang.String,java.lang.String,android.os.WorkSource) -> requestCellInfoUpdateInternal
    3139:3140:void requestCellInfoUpdateWithWorkSource(int,android.telephony.ICellInfoCallback,java.lang.String,java.lang.String,android.os.WorkSource) -> requestCellInfoUpdateWithWorkSource
    7896:7904:void requestModemActivityInfo(android.os.ResultReceiver) -> requestModemActivityInfo
    6324:6359:int requestNetworkScan(int,android.telephony.NetworkScanRequest,android.os.Messenger,android.os.IBinder,java.lang.String,java.lang.String) -> requestNetworkScan
    3603:3623:void requestNumberVerification(android.telephony.PhoneNumberRange,long,com.android.internal.telephony.INumberVerificationCallback,java.lang.String) -> requestNumberVerification
    9882:9884:void requestUserActivityNotification() -> requestUserActivityNotification
    5715:5727:void resetIms(int) -> resetIms
    5650:5662:boolean resetModemConfig(int) -> resetModemConfig
    9256:9268:void resetOtaEmergencyNumberDbFilePath() -> resetOtaEmergencyNumberDbFilePath
    10499:10514:void sendDeviceToDeviceMessage(int,int) -> sendDeviceToDeviceMessage
    3889:3903:void sendDialerSpecialCode(java.lang.String,java.lang.String) -> sendDialerSpecialCode
    5547:5564:java.lang.String sendEnvelopeWithStatus(int,java.lang.String) -> sendEnvelopeWithStatus
    2319:2319:void sendEraseDataInSharedPreferences(com.android.internal.telephony.Phone) -> sendEraseDataInSharedPreferences
    2314:2314:void sendEraseModemConfig(com.android.internal.telephony.Phone) -> sendEraseModemConfig
    2101:2101:java.lang.Object sendRequest(int,java.lang.Object) -> sendRequest
    2111:2111:java.lang.Object sendRequest(int,java.lang.Object,android.os.WorkSource) -> sendRequest
    2121:2121:java.lang.Object sendRequest(int,java.lang.Object,java.lang.Integer) -> sendRequest
    2132:2132:java.lang.Object sendRequest(int,java.lang.Object,java.lang.Integer,long) -> sendRequest
    2141:2141:java.lang.Object sendRequest(int,java.lang.Object,int,android.os.WorkSource) -> sendRequest
    2150:2150:java.lang.Object sendRequest(int,java.lang.Object,com.android.internal.telephony.Phone,android.os.WorkSource) -> sendRequest
    2162:2208:java.lang.Object sendRequest(int,java.lang.Object,java.lang.Integer,com.android.internal.telephony.Phone,android.os.WorkSource,long) -> sendRequest
    2235:2237:void sendRequestAsync(int,java.lang.Object,com.android.internal.telephony.Phone,android.os.WorkSource) -> sendRequestAsync
    10115:10208:int sendThermalMitigationRequest(int,android.telephony.ThermalMitigationRequest,java.lang.String) -> sendThermalMitigationRequest
    3753:3757:void sendVisualVoicemailSmsForSubscriber(java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,android.app.PendingIntent) -> sendVisualVoicemailSmsForSubscriber
    10523:10538:void setActiveDeviceToDeviceTransport(java.lang.String) -> setActiveDeviceToDeviceTransport
    4212:4224:void setAdvancedCallingSettingEnabled(int,boolean) -> setAdvancedCallingSettingEnabled
    8272:8285:int setAllowedCarriers(android.telephony.CarrierRestrictionRules) -> setAllowedCarriers
    6524:6554:boolean setAllowedNetworkTypesForReason(int,int,long) -> setAllowedNetworkTypesForReason
    6587:6605:void setAlwaysReportSignalStrength(int,boolean) -> setAlwaysReportSignalStrength
    10227:10234:boolean setBoundGbaServiceOverride(int,java.lang.String) -> setBoundGbaServiceOverride
    5854:5874:boolean setBoundImsServiceOverride(int,boolean,int[],java.lang.String) -> setBoundImsServiceOverride
    7007:7025:void setCallComposerStatus(int,int) -> setCallComposerStatus
    6176:6201:void setCallForwarding(int,android.telephony.CallForwardingInfo,com.android.internal.telephony.IIntegerConsumer) -> setCallForwarding
    6260:6309:void setCallWaitingStatus(int,boolean,com.android.internal.telephony.IIntegerConsumer) -> setCallWaitingStatus
    10826:10834:boolean setCapabilitiesRequestTimeout(int,long) -> setCapabilitiesRequestTimeout
    10581:10587:boolean setCarrierSingleRegistrationEnabledOverride(int,java.lang.String) -> setCarrierSingleRegistrationEnabledOverride
    8975:8993:void setCarrierTestOverride(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setCarrierTestOverride
    9046:9054:boolean setCdmaRoamingMode(int,int) -> setCdmaRoamingMode
    9073:9081:boolean setCdmaSubscriptionMode(int,int) -> setCdmaSubscriptionMode
    3190:3198:void setCellInfoListRate(int) -> setCellInfoListRate
    9744:9762:void setCepEnabled(boolean) -> setCepEnabled
    4331:4343:void setCrossSimCallingEnabled(int,boolean) -> setCrossSimCallingEnabled
    3787:3800:void setDataActivationState(int,int) -> setDataActivationState
    8488:8509:void setDataEnabledForReason(int,int,boolean) -> setDataEnabledForReason
    8730:8741:void setDataRoamingEnabled(int,boolean) -> setDataRoamingEnabled
    10482:10489:void setDeviceSingleRegistrationEnabledOverride(java.lang.String) -> setDeviceSingleRegistrationEnabledOverride
    10543:10564:void setDeviceToDeviceForceEnabled(boolean) -> setDeviceToDeviceForceEnabled
    10697:10703:void setDeviceUceEnabled(boolean) -> setDeviceUceEnabled
    5518:5542:int setForbiddenPlmns(int,int,java.util.List,java.lang.String,java.lang.String) -> setForbiddenPlmns
    10264:10271:boolean setGbaReleaseTimeOverride(int,int) -> setGbaReleaseTimeOverride
    9824:9841:int setIccLockEnabled(int,boolean,java.lang.String) -> setIccLockEnabled
    10605:10610:boolean setImsFeatureValidationOverride(int,java.lang.String) -> setImsFeatureValidationOverride
    4930:4951:int setImsProvisioningInt(int,int,int) -> setImsProvisioningInt
    4638:4696:void setImsProvisioningStatusForCapability(int,int,int,boolean) -> setImsProvisioningStatusForCapability
    4956:4977:int setImsProvisioningString(int,int,java.lang.String) -> setImsProvisioningString
    5979:5991:void setImsRegistrationState(boolean) -> setImsRegistrationState
    7051:7097:boolean setLine1NumberForDisplayForSubscriber(int,java.lang.String,java.lang.String) -> setLine1NumberForDisplayForSubscriber
    4807:4810:void setMmTelCapabilityProvisioningBitfield(int,int,int) -> setMmTelCapabilityProvisioningBitfield
    9715:9734:void setMobileDataPolicyEnabled(int,int,boolean) -> setMobileDataPolicyEnabled
    9340:9349:void setMultiSimCarrierRestriction(boolean) -> setMultiSimCarrierRestriction
    6000:6013:void setNetworkSelectionModeAutomatic(int) -> setNetworkSelectionModeAutomatic
    6030:6048:boolean setNetworkSelectionModeManual(int,com.android.internal.telephony.OperatorInfo,boolean) -> setNetworkSelectionModeManual
    6466:6483:int setNrDualConnectivityState(int,int) -> setNrDualConnectivityState
    7279:7288:boolean setOperatorBrandOverride(int,java.lang.String) -> setOperatorBrandOverride
    2678:2678:boolean setRadio(boolean) -> setRadio
    2682:2696:boolean setRadioForSubscriber(int,boolean) -> setRadioForSubscriber
    2741:2755:boolean setRadioPower(boolean) -> setRadioPower
    10004:10007:boolean setRadioPowerForThermal(boolean) -> setRadioPowerForThermal
    10420:10452:void setRcsClientConfiguration(int,android.telephony.ims.RcsClientConfiguration) -> setRcsClientConfiguration
    4574:4598:void setRcsProvisioningStatusForCapability(int,int,boolean) -> setRcsProvisioningStatusForCapability
    10460:10463:void setRcsSingleRegistrationTestModeEnabled(boolean) -> setRcsSingleRegistrationTestModeEnabled
    7295:7308:boolean setRoamingOverride(int,java.util.List,java.util.List,java.util.List,java.util.List) -> setRoamingOverride
    4471:4483:void setRttCapabilitySetting(int,boolean) -> setRttCapabilitySetting
    10840:10860:void setSignalStrengthUpdateRequest(int,android.telephony.SignalStrengthUpdateRequest,java.lang.String) -> setSignalStrengthUpdateRequest
    8555:8567:void setSimPowerStateForSlot(int,int) -> setSimPowerStateForSlot
    8584:8597:void setSimPowerStateForSlotWithCallback(int,int,com.android.internal.telephony.IIntegerConsumer) -> setSimPowerStateForSlotWithCallback
    9572:9599:void setSystemSelectionChannels(java.util.List,int,com.android.internal.telephony.IBooleanConsumer) -> setSystemSelectionChannels
    8351:8378:int setVoNrEnabled(int,boolean) -> setVoNrEnabled
    4422:4434:void setVoWiFiModeSetting(int,int) -> setVoWiFiModeSetting
    4386:4397:void setVoWiFiNonPersistent(int,boolean,int) -> setVoWiFiNonPersistent
    4454:4466:void setVoWiFiRoamingModeSetting(int,int) -> setVoWiFiRoamingModeSetting
    4369:4381:void setVoWiFiRoamingSettingEnabled(int,boolean) -> setVoWiFiRoamingSettingEnabled
    4286:4298:void setVoWiFiSettingEnabled(int,boolean) -> setVoWiFiSettingEnabled
    3766:3779:void setVoiceActivationState(int,int) -> setVoiceActivationState
    3643:3653:boolean setVoiceMailNumber(int,java.lang.String,java.lang.String) -> setVoiceMailNumber
    8035:8053:void setVoicemailRingtoneUri(java.lang.String,android.telecom.PhoneAccountHandle,android.net.Uri) -> setVoicemailRingtoneUri
    8092:8110:void setVoicemailVibrationEnabled(java.lang.String,android.telecom.PhoneAccountHandle,boolean) -> setVoicemailVibrationEnabled
    4249:4261:void setVtSettingEnabled(int,boolean) -> setVtSettingEnabled
    2720:2730:void shutdownMobileRadios() -> shutdownMobileRadios
    2734:2736:void shutdownRadioUsingPhoneId(int) -> shutdownRadioUsingPhoneId
    9137:9154:void startEmergencyCallbackMode() -> startEmergencyCallbackMode
    6395:6404:void stopNetworkScan(int,int) -> stopNetworkScan
    2410:2411:boolean supplyPinForSubscriber(int,java.lang.String) -> supplyPinForSubscriber
    2420:2430:int[] supplyPinReportResultForSubscriber(int,java.lang.String) -> supplyPinReportResultForSubscriber
    2415:2416:boolean supplyPukForSubscriber(int,java.lang.String,java.lang.String) -> supplyPukForSubscriber
    2434:2444:int[] supplyPukReportResultForSubscriber(int,java.lang.String,java.lang.String) -> supplyPukReportResultForSubscriber
    9407:9423:void switchMultiSimConfig(int) -> switchMultiSimConfig
    8887:8894:boolean switchSlots(int[]) -> switchSlots
    2660:2660:void toggleRadioOnOff() -> toggleRadioOnOff
    2664:2674:void toggleRadioOnOffForSubscriber(int) -> toggleRadioOnOffForSubscriber
    10396:10413:void triggerRcsReconfiguration(int) -> triggerRcsReconfiguration
    5792:5800:void unregisterImsFeatureCallback(com.android.ims.internal.IImsServiceFeatureCallback) -> unregisterImsFeatureCallback
    4528:4543:void unregisterImsProvisioningChangedCallback(int,android.telephony.ims.aidl.IImsConfigCallback) -> unregisterImsProvisioningChangedCallback
    3972:3988:void unregisterImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback) -> unregisterImsRegistrationCallback
    4093:4110:void unregisterMmTelCapabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback) -> unregisterMmTelCapabilityCallback
    10370:10389:void unregisterRcsProvisioningCallback(int,android.telephony.ims.aidl.IRcsConfigCallback) -> unregisterRcsProvisioningCallback
    9162:9175:void updateEmergencyNumberListTestMode(int,android.telephony.emergency.EmergencyNumber) -> updateEmergencyNumberListTestMode
    9474:9476:void updateModemStateMetrics() -> updateModemStateMetrics
    9239:9251:void updateOtaEmergencyNumberDbFilePath(android.os.ParcelFileDescriptor) -> updateOtaEmergencyNumberDbFilePath
    2563:2563:void updateServiceLocation() -> updateServiceLocation
    2569:2607:void updateServiceLocationWithPackageName(java.lang.String) -> updateServiceLocationWithPackageName
    7375:7389:void uploadCallComposerPicture(int,java.lang.String,java.lang.String,android.os.ParcelFileDescriptor,android.os.ResultReceiver) -> uploadCallComposerPicture
    9905:9910:void userActivity() -> userActivity
    10896:10919:void validateSignalStrengthUpdateRequest(android.telephony.SignalStrengthUpdateRequest,int) -> validateSignalStrengthUpdateRequest
    4987:4989:void verifyImsMmTelConfiguredOrThrow(int) -> verifyImsMmTelConfiguredOrThrow
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda1 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda1:
    com.android.phone.PhoneInterfaceManager com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$ad25419a07061b23f523546a56bff82c4600e39f7d757c88e20f04f6e04d116c$0.f$0 -> f$0
    android.os.ResultReceiver com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$ad25419a07061b23f523546a56bff82c4600e39f7d757c88e20f04f6e04d116c$0.f$3 -> f$3
    int com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$ad25419a07061b23f523546a56bff82c4600e39f7d757c88e20f04f6e04d116c$0.f$1 -> f$1
    java.lang.String com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$ad25419a07061b23f523546a56bff82c4600e39f7d757c88e20f04f6e04d116c$0.f$2 -> f$2
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$ad25419a07061b23f523546a56bff82c4600e39f7d757c88e20f04f6e04d116c$0.<init>(com.android.phone.PhoneInterfaceManager,int,java.lang.String,android.os.ResultReceiver) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$ad25419a07061b23f523546a56bff82c4600e39f7d757c88e20f04f6e04d116c$0.run() -> run
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda10 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda10:
    boolean com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$21f7e78b8c571fd358a7418220194d64790ac901d031bacf12352d87270f0a53$0.f$0 -> f$0
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$21f7e78b8c571fd358a7418220194d64790ac901d031bacf12352d87270f0a53$0.<init>(boolean) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$21f7e78b8c571fd358a7418220194d64790ac901d031bacf12352d87270f0a53$0.accept(java.lang.Object) -> accept
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda2 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda2:
    com.android.phone.PhoneInterfaceManager com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$beed029ccf0975b7d7fb56364575b7d642bffa1307820f19e2cdba7e3162db21$0.f$0 -> f$0
    android.os.ResultReceiver com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$beed029ccf0975b7d7fb56364575b7d642bffa1307820f19e2cdba7e3162db21$0.f$3 -> f$3
    int com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$beed029ccf0975b7d7fb56364575b7d642bffa1307820f19e2cdba7e3162db21$0.f$1 -> f$1
    java.lang.String com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$beed029ccf0975b7d7fb56364575b7d642bffa1307820f19e2cdba7e3162db21$0.f$2 -> f$2
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$beed029ccf0975b7d7fb56364575b7d642bffa1307820f19e2cdba7e3162db21$0.<init>(com.android.phone.PhoneInterfaceManager,int,java.lang.String,android.os.ResultReceiver) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$beed029ccf0975b7d7fb56364575b7d642bffa1307820f19e2cdba7e3162db21$0.run() -> run
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda3 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda3:
    com.android.phone.PhoneInterfaceManager com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5522452ab4542a59fb84b8a003fe030ce00d1327d2f912b684f0dfac45821b45$0.f$0 -> f$0
    android.os.ParcelFileDescriptor com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5522452ab4542a59fb84b8a003fe030ce00d1327d2f912b684f0dfac45821b45$0.f$1 -> f$1
    android.os.ResultReceiver com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5522452ab4542a59fb84b8a003fe030ce00d1327d2f912b684f0dfac45821b45$0.f$2 -> f$2
    int com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5522452ab4542a59fb84b8a003fe030ce00d1327d2f912b684f0dfac45821b45$0.f$4 -> f$4
    java.lang.String com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5522452ab4542a59fb84b8a003fe030ce00d1327d2f912b684f0dfac45821b45$0.f$3 -> f$3
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5522452ab4542a59fb84b8a003fe030ce00d1327d2f912b684f0dfac45821b45$0.<init>(com.android.phone.PhoneInterfaceManager,android.os.ParcelFileDescriptor,android.os.ResultReceiver,java.lang.String,int) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5522452ab4542a59fb84b8a003fe030ce00d1327d2f912b684f0dfac45821b45$0.run() -> run
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda4 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda4:
    android.os.ResultReceiver com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$1$f9a8694697c774e90e0dd31257555610662859d69202afe9d6d382fe46d1c1d8$0.f$0 -> f$0
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$1$f9a8694697c774e90e0dd31257555610662859d69202afe9d6d382fe46d1c1d8$0.<init>(android.os.ResultReceiver) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$1$f9a8694697c774e90e0dd31257555610662859d69202afe9d6d382fe46d1c1d8$0.accept(java.lang.Object) -> accept
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda5 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda5:
    com.android.internal.telephony.IBooleanConsumer com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$36ca251fb589d02e18bd70c235e8d885e48be7ae84f9ccd21c72b6b66cf8185f$0.f$0 -> f$0
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$36ca251fb589d02e18bd70c235e8d885e48be7ae84f9ccd21c72b6b66cf8185f$0.<init>(com.android.internal.telephony.IBooleanConsumer) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$36ca251fb589d02e18bd70c235e8d885e48be7ae84f9ccd21c72b6b66cf8185f$0.accept(java.lang.Object) -> accept
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda6 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda6:
    com.android.internal.telephony.IIntegerConsumer com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$de45dc1f4e410f9ce314cf9fac6d08e115b16e9b7fa25211b7bbc94523c332d1$0.f$0 -> f$0
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$de45dc1f4e410f9ce314cf9fac6d08e115b16e9b7fa25211b7bbc94523c332d1$0.<init>(com.android.internal.telephony.IIntegerConsumer) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$de45dc1f4e410f9ce314cf9fac6d08e115b16e9b7fa25211b7bbc94523c332d1$0.accept(java.lang.Object) -> accept
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda7 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda7:
    com.android.internal.telephony.IIntegerConsumer com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5f607880c506157456dac8e0e66152537a02f98bae46ef88acad3c76401e1ca4$0.f$0 -> f$0
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5f607880c506157456dac8e0e66152537a02f98bae46ef88acad3c76401e1ca4$0.<init>(com.android.internal.telephony.IIntegerConsumer) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$5f607880c506157456dac8e0e66152537a02f98bae46ef88acad3c76401e1ca4$0.accept(java.lang.Object) -> accept
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda8 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda8:
    com.android.internal.telephony.IIntegerConsumer com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$a7deab0af49642d3c3ebf384a268d4ba90a30da5026249bbbab13b9c0c745639$0.f$0 -> f$0
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$a7deab0af49642d3c3ebf384a268d4ba90a30da5026249bbbab13b9c0c745639$0.<init>(com.android.internal.telephony.IIntegerConsumer) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$a7deab0af49642d3c3ebf384a268d4ba90a30da5026249bbbab13b9c0c745639$0.accept(java.lang.Object) -> accept
com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda9 -> com.android.phone.PhoneInterfaceManager$$ExternalSyntheticLambda9:
    com.android.internal.telephony.IIntegerConsumer com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$f258a25306e12fffaca7af602557a90b75b0231818dfff04f1c710e682c22578$0.f$0 -> f$0
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$f258a25306e12fffaca7af602557a90b75b0231818dfff04f1c710e682c22578$0.<init>(com.android.internal.telephony.IIntegerConsumer) -> <init>
    void com.android.phone.PhoneInterfaceManager$$InternalSyntheticLambda$0$f258a25306e12fffaca7af602557a90b75b0231818dfff04f1c710e682c22578$0.accept(java.lang.Object) -> accept
com.android.phone.PhoneInterfaceManager$1 -> com.android.phone.PhoneInterfaceManager$1:
    6144:6144:void <init>(com.android.phone.PhoneInterfaceManager,com.android.internal.telephony.ICallForwardingInfoCallback) -> <init>
    6148:6148:void onCallForwardingInfoAvailable(android.telephony.CallForwardingInfo) -> onCallForwardingInfoAvailable
    6157:6157:void onError(int) -> onError
com.android.phone.PhoneInterfaceManager$2 -> com.android.phone.PhoneInterfaceManager$2:
    7445:7445:void <init>(com.android.phone.PhoneInterfaceManager) -> <init>
com.android.phone.PhoneInterfaceManager$3 -> com.android.phone.PhoneInterfaceManager$3:
    2592:8852:void <clinit>() -> <clinit>
com.android.phone.PhoneInterfaceManager$IccAPDUArgument -> com.android.phone.PhoneInterfaceManager$IccAPDUArgument:
    415:422:void <init>(int,int,int,int,int,int,java.lang.String) -> <init>
com.android.phone.PhoneInterfaceManager$MainThreadHandler -> com.android.phone.PhoneInterfaceManager$MainThreadHandler:
    503:503:void <init>(com.android.phone.PhoneInterfaceManager) -> <init>
    503:503:void <init>(com.android.phone.PhoneInterfaceManager,com.android.phone.PhoneInterfaceManager$1) -> <init>
    511:2067:void handleMessage(android.os.Message) -> handleMessage
    2079:2091:void handleNullReturnEvent(android.os.Message,java.lang.String) -> handleNullReturnEvent
    2073:2075:void notifyRequester(com.android.phone.PhoneInterfaceManager$MainThreadRequest) -> notifyRequester
com.android.phone.PhoneInterfaceManager$MainThreadRequest -> com.android.phone.PhoneInterfaceManager$MainThreadRequest:
    450:466:void <init>(java.lang.Object,com.android.internal.telephony.Phone,android.os.WorkSource) -> <init>
    450:474:void <init>(java.lang.Object,java.lang.Integer,android.os.WorkSource) -> <init>
com.android.phone.PhoneInterfaceManager$ManualNetworkSelectionArgument -> com.android.phone.PhoneInterfaceManager$ManualNetworkSelectionArgument:
    433:435:void <init>(com.android.internal.telephony.OperatorInfo,boolean) -> <init>
com.android.phone.PhoneInterfaceManager$UnlockSim -> com.android.phone.PhoneInterfaceManager$UnlockSim:
    2456:2468:void <init>(int,com.android.internal.telephony.IccCard) -> <init>
    2451:2451:int access$1102(com.android.phone.PhoneInterfaceManager$UnlockSim,int) -> access$1102
    2451:2451:int access$1202(com.android.phone.PhoneInterfaceManager$UnlockSim,int) -> access$1202
    2451:2451:boolean access$1302(com.android.phone.PhoneInterfaceManager$UnlockSim,boolean) -> access$1302
    2473:2509:void run() -> run
    2521:2554:int[] unlockSim(java.lang.String,java.lang.String) -> unlockSim
com.android.phone.PhoneInterfaceManager$UnlockSim$1 -> com.android.phone.PhoneInterfaceManager$UnlockSim$1:
    2475:2475:void <init>(com.android.phone.PhoneInterfaceManager$UnlockSim) -> <init>
    2478:2502:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.PhoneUtils -> com.android.phone.PhoneUtils:
    91:103:void <clinit>() -> <clinit>
    70:70:java.lang.StringBuilder access$000() -> access$000
    628:640:boolean cancelMmiCode(com.android.internal.telephony.Phone) -> cancelMmiCode
    577:616:void createUssdDialog(com.android.phone.PhoneGlobals,android.content.Context,java.lang.CharSequence,com.android.internal.telephony.Phone,int) -> createUssdDialog
    307:515:void displayMMIComplete(com.android.internal.telephony.Phone,android.content.Context,com.android.internal.telephony.MmiCode,android.os.Message,android.app.AlertDialog) -> displayMMIComplete
    237:289:android.app.Dialog displayMMIInitiate(android.content.Context,com.android.internal.telephony.MmiCode,android.os.Message,android.app.Dialog) -> displayMMIInitiate
    554:561:long[] getLongArray(android.content.res.Resources,int,long[]) -> getLongArray
    745:746:com.android.internal.telephony.Phone getPhoneForPhoneAccountHandle(android.telecom.PhoneAccountHandle) -> getPhoneForPhoneAccountHandle
    769:772:com.android.internal.telephony.Phone getPhoneFromIccId(java.lang.String) -> getPhoneFromIccId
    765:765:android.content.ComponentName getPstnConnectionServiceName() -> getPstnConnectionServiceName
    730:731:int getSubIdForPhoneAccount(android.telecom.PhoneAccount) -> getSubIdForPhoneAccount
    737:739:int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle) -> getSubIdForPhoneAccountHandle
    761:761:boolean isPhoneAccountActive(android.telephony.SubscriptionManager,android.telecom.PhoneAccountHandle) -> isPhoneAccountActive
    690:690:boolean isRealIncomingCall(com.android.internal.telephony.Call$State) -> isRealIncomingCall
    698:698:void log(java.lang.String) -> log
    710:710:android.telecom.PhoneAccountHandle makePstnPhoneAccountHandle(com.android.internal.telephony.Phone) -> makePstnPhoneAccountHandle
    717:719:android.telecom.PhoneAccountHandle makePstnPhoneAccountHandleWithPrefix(com.android.internal.telephony.Phone,java.lang.String,boolean) -> makePstnPhoneAccountHandleWithPrefix
    724:725:android.telecom.PhoneAccountHandle makePstnPhoneAccountHandleWithPrefix(java.lang.String,java.lang.String,boolean) -> makePstnPhoneAccountHandleWithPrefix
    157:191:int placeOtaspCall(android.content.Context,com.android.internal.telephony.Phone,java.lang.String) -> placeOtaspCall
    521:549:void playSound(android.content.Context) -> playSound
    784:788:void registerIccStatus(android.os.Handler,int) -> registerIccStatus
    797:803:void registerIccStatus(android.os.Handler,int,int) -> registerIccStatus
    827:828:void setRadioPower(boolean) -> setRadioPower
    211:220:java.lang.String toLogSafePhoneNumber(java.lang.String) -> toLogSafePhoneNumber
    811:817:void unregisterIccStatus(android.os.Handler,int) -> unregisterIccStatus
    124:131:void updateCdmaCallStateOnNewOutgoingCall(com.android.phone.PhoneGlobals,com.android.internal.telephony.Connection) -> updateCdmaCallStateOnNewOutgoingCall
com.android.phone.PhoneUtils$1 -> com.android.phone.PhoneUtils$1:
    441:441:void <init>(android.widget.EditText,com.android.phone.PhoneGlobals,com.android.internal.telephony.MmiCode,com.android.internal.telephony.Phone) -> <init>
    448:463:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.PhoneUtils$2 -> com.android.phone.PhoneUtils$2:
    482:482:void <init>(com.android.internal.telephony.Phone,android.widget.EditText,android.app.AlertDialog) -> <init>
    487:489:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.android.phone.PhoneUtils$3 -> com.android.phone.PhoneUtils$3:
    590:590:void <init>() -> <init>
    593:593:void onDismiss(android.content.DialogInterface) -> onDismiss
com.android.phone.PhoneUtils$4 -> com.android.phone.PhoneUtils$4:
    314:314:void <clinit>() -> <clinit>
com.android.phone.R$styleable -> com.android.phone.R$styleable:
    9446:19557:void <clinit>() -> <clinit>
com.android.phone.RcsProvisioningMonitor -> com.android.phone.RcsProvisioningMonitor:
    72:72:void <clinit>() -> <clinit>
    91:496:void <init>(com.android.phone.PhoneGlobals,android.os.Looper,com.android.phone.RcsProvisioningMonitor$RoleManagerAdapter,com.android.phone.RcsProvisioningMonitor$FeatureConnectorFactory,com.android.internal.telephony.metrics.RcsStats) -> <init>
    70:70:android.os.Handler access$000(com.android.phone.RcsProvisioningMonitor) -> access$000
    70:70:void access$100(java.lang.String) -> access$100
    70:70:java.lang.Boolean access$1000(com.android.phone.RcsProvisioningMonitor) -> access$1000
    70:70:java.lang.Boolean access$1002(com.android.phone.RcsProvisioningMonitor,java.lang.Boolean) -> access$1002
    70:70:boolean access$1100(java.lang.Boolean,java.lang.Boolean) -> access$1100
    70:70:java.util.HashMap access$1200(com.android.phone.RcsProvisioningMonitor) -> access$1200
    70:70:void access$1300(com.android.phone.RcsProvisioningMonitor) -> access$1300
    70:70:com.android.internal.telephony.metrics.RcsStats access$1400(com.android.phone.RcsProvisioningMonitor) -> access$1400
    70:70:void access$1500(java.lang.String) -> access$1500
    70:70:void access$1600(com.android.phone.RcsProvisioningMonitor,int,int) -> access$1600
    70:70:void access$1700(java.lang.String) -> access$1700
    70:70:com.android.phone.RcsProvisioningMonitor$FeatureConnectorFactory access$1800(com.android.phone.RcsProvisioningMonitor) -> access$1800
    70:70:com.android.phone.PhoneGlobals access$200(com.android.phone.RcsProvisioningMonitor) -> access$200
    70:70:com.android.phone.RcsProvisioningMonitor$RoleManagerAdapter access$300(com.android.phone.RcsProvisioningMonitor) -> access$300
    70:70:void access$400(java.lang.String) -> access$400
    70:70:void access$500(com.android.phone.RcsProvisioningMonitor) -> access$500
    70:70:void access$600(com.android.phone.RcsProvisioningMonitor) -> access$600
    70:70:void access$700(com.android.phone.RcsProvisioningMonitor) -> access$700
    70:70:void access$800(com.android.phone.RcsProvisioningMonitor,int,byte[],boolean) -> access$800
    70:70:void access$900(com.android.phone.RcsProvisioningMonitor,int) -> access$900
    907:909:boolean booleanEquals(java.lang.Boolean,java.lang.Boolean) -> booleanEquals
    557:559:void destroy() -> destroy
    702:703:boolean getCarrierSingleRegistrationEnabled(int) -> getCarrierSingleRegistrationEnabled
    575:576:byte[] getConfig(int) -> getConfig
    691:692:boolean getDeviceSingleRegistrationEnabled() -> getDeviceSingleRegistrationEnabled
    882:884:java.lang.String getDmaPackageName() -> getDmaPackageName
    567:567:android.os.Handler getHandler() -> getHandler
    713:713:java.lang.Boolean getImsFeatureValidationOverride(int) -> getImsFeatureValidationOverride
    518:518:com.android.phone.RcsProvisioningMonitor getInstance() -> getInstance
    785:793:int getSingleRegistrationCapableValue(int) -> getSingleRegistrationCapableValue
    768:778:int getSingleRegistrationRequiredByCarrier(int) -> getSingleRegistrationRequiredByCarrier
    653:653:boolean getTestModeEnabled() -> getTestModeEnabled
    522:530:void init() -> init
    760:764:boolean isAcsUsed(int) -> isAcsUsed
    585:586:java.lang.Boolean isRcsVolteSingleRegistrationEnabled(int) -> isRcsVolteSingleRegistrationEnabled
    800:801:void lambda$onCarrierConfigChange$2(java.lang.Integer,com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo) -> lambda$onCarrierConfigChange$2
    723:738:void lambda$onDefaultMessagingApplicationChanged$1(java.lang.Integer,com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo) -> lambda$onDefaultMessagingApplicationChanged$1
    822:824:void lambda$onSubChanged$3(java.lang.Integer) -> lambda$onSubChanged$3
    542:542:void lambda$release$0(java.lang.Integer,com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo) -> lambda$release$0
    752:754:byte[] loadConfigForSub(int) -> loadConfigForSub
    923:923:void logd(java.lang.String) -> logd
    927:927:void loge(java.lang.String) -> loge
    919:919:void logi(java.lang.String) -> logi
    913:914:void logv(java.lang.String) -> logv
    503:511:com.android.phone.RcsProvisioningMonitor make(com.android.phone.PhoneGlobals) -> make
    865:876:void notifyDmaForSub(int,int) -> notifyDmaForSub
    798:799:void onCarrierConfigChange() -> onCarrierConfigChange
    830:845:void onConfigReceived(int,byte[],boolean) -> onConfigReceived
    717:722:void onDefaultMessagingApplicationChanged() -> onDefaultMessagingApplicationChanged
    850:860:void onReconfigRequest(int) -> onReconfigRequest
    806:821:void onSubChanged() -> onSubChanged
    667:670:boolean overrideCarrierSingleRegistrationEnabled(int,java.lang.Boolean) -> overrideCarrierSingleRegistrationEnabled
    660:660:void overrideDeviceSingleRegistrationEnabled(java.lang.Boolean) -> overrideDeviceSingleRegistrationEnabled
    680:682:boolean overrideImsFeatureValidation(int,java.lang.Boolean) -> overrideImsFeatureValidation
    890:896:void registerRcsFeatureListener(com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo) -> registerRcsFeatureListener
    611:618:boolean registerRcsProvisioningCallback(int,android.telephony.ims.aidl.IRcsConfigCallback) -> registerRcsProvisioningCallback
    534:544:void release() -> release
    604:604:void requestReconfig(int) -> requestReconfig
    548:549:void reset() -> reset
    641:644:void setTestModeEnabled(boolean) -> setTestModeEnabled
    901:902:void unregisterRcsFeatureListener(com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo) -> unregisterRcsFeatureListener
    625:632:boolean unregisterRcsProvisioningCallback(int,android.telephony.ims.aidl.IRcsConfigCallback) -> unregisterRcsProvisioningCallback
    596:596:void updateConfig(int,byte[],boolean) -> updateConfig
    745:747:void updateConfigForSub(int,byte[],boolean) -> updateConfigForSub
com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda0 -> com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda0:
    com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$2b1ea487f2a30fa5fc5b4058fa93696d93bfbebc5dfffb85437b292477a7c0d0$0 com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$2b1ea487f2a30fa5fc5b4058fa93696d93bfbebc5dfffb85437b292477a7c0d0$0.INSTANCE -> INSTANCE
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$2b1ea487f2a30fa5fc5b4058fa93696d93bfbebc5dfffb85437b292477a7c0d0$0.<clinit>() -> <clinit>
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$2b1ea487f2a30fa5fc5b4058fa93696d93bfbebc5dfffb85437b292477a7c0d0$0.<init>() -> <init>
    com.android.ims.FeatureConnector com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$2b1ea487f2a30fa5fc5b4058fa93696d93bfbebc5dfffb85437b292477a7c0d0$0.create(android.content.Context,int,com.android.ims.FeatureConnector$Listener,java.util.concurrent.Executor,java.lang.String) -> create
com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda1 -> com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda1:
    com.android.phone.RcsProvisioningMonitor com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$aa532e58b1c7c270b77e057422f9d94a2a31ea389bbb2cce023e8d62bf6f20d0$0.f$0 -> f$0
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$aa532e58b1c7c270b77e057422f9d94a2a31ea389bbb2cce023e8d62bf6f20d0$0.<init>(com.android.phone.RcsProvisioningMonitor) -> <init>
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$aa532e58b1c7c270b77e057422f9d94a2a31ea389bbb2cce023e8d62bf6f20d0$0.accept(java.lang.Object,java.lang.Object) -> accept
com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda2 -> com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda2:
    com.android.phone.RcsProvisioningMonitor com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$67b59508e0edaea51d7ecc452ec43589996b108b50c7f6d99afa66ce128f7256$0.f$0 -> f$0
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$67b59508e0edaea51d7ecc452ec43589996b108b50c7f6d99afa66ce128f7256$0.<init>(com.android.phone.RcsProvisioningMonitor) -> <init>
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$67b59508e0edaea51d7ecc452ec43589996b108b50c7f6d99afa66ce128f7256$0.accept(java.lang.Object,java.lang.Object) -> accept
com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda3 -> com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda3:
    com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$7afc27cc60366df8e631f6699c8086d6714212d0a05eed12a9c26046b0ef0eef$0 com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$7afc27cc60366df8e631f6699c8086d6714212d0a05eed12a9c26046b0ef0eef$0.INSTANCE -> INSTANCE
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$7afc27cc60366df8e631f6699c8086d6714212d0a05eed12a9c26046b0ef0eef$0.<clinit>() -> <clinit>
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$7afc27cc60366df8e631f6699c8086d6714212d0a05eed12a9c26046b0ef0eef$0.<init>() -> <init>
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$7afc27cc60366df8e631f6699c8086d6714212d0a05eed12a9c26046b0ef0eef$0.accept(java.lang.Object,java.lang.Object) -> accept
com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda4 -> com.android.phone.RcsProvisioningMonitor$$ExternalSyntheticLambda4:
    com.android.phone.RcsProvisioningMonitor com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$bf660d655968b5e90ee68247766a96a344a80ce1c0dd355f5f2214ed269c9c20$0.f$0 -> f$0
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$bf660d655968b5e90ee68247766a96a344a80ce1c0dd355f5f2214ed269c9c20$0.<init>(com.android.phone.RcsProvisioningMonitor) -> <init>
    void com.android.phone.RcsProvisioningMonitor$$InternalSyntheticLambda$0$bf660d655968b5e90ee68247766a96a344a80ce1c0dd355f5f2214ed269c9c20$0.accept(java.lang.Object) -> accept
com.android.phone.RcsProvisioningMonitor$1 -> com.android.phone.RcsProvisioningMonitor$1:
    114:114:void <init>(com.android.phone.RcsProvisioningMonitor) -> <init>
    117:118:void onSubscriptionsChanged() -> onSubscriptionsChanged
com.android.phone.RcsProvisioningMonitor$2 -> com.android.phone.RcsProvisioningMonitor$2:
    123:123:void <init>(com.android.phone.RcsProvisioningMonitor) -> <init>
    126:133:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.phone.RcsProvisioningMonitor$DmaChangedListener -> com.android.phone.RcsProvisioningMonitor$DmaChangedListener:
    139:139:void <init>(com.android.phone.RcsProvisioningMonitor) -> <init>
    139:139:void <init>(com.android.phone.RcsProvisioningMonitor,com.android.phone.RcsProvisioningMonitor$1) -> <init>
    142:144:void onRoleHoldersChanged(java.lang.String,android.os.UserHandle) -> onRoleHoldersChanged
    150:153:void register() -> register
    159:161:void unregister() -> unregister
com.android.phone.RcsProvisioningMonitor$MyHandler -> com.android.phone.RcsProvisioningMonitor$MyHandler:
    167:168:void <init>(com.android.phone.RcsProvisioningMonitor,android.os.Looper) -> <init>
    173:209:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.RcsProvisioningMonitor$RcsFeatureListener -> com.android.phone.RcsProvisioningMonitor$RcsFeatureListener:
    440:447:void <init>(com.android.phone.RcsProvisioningMonitor,int) -> <init>
    458:461:void addRcsProvisioningInfo(com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo) -> addRcsProvisioningInfo
    439:439:void connectionReady(com.android.ims.FeatureUpdates) -> connectionReady
    471:472:void connectionReady(com.android.ims.RcsFeatureManager) -> connectionReady
    477:478:void connectionUnavailable(int) -> connectionUnavailable
    451:454:void destroy() -> destroy
    472:472:void lambda$connectionReady$0(com.android.ims.RcsFeatureManager,com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo) -> lambda$connectionReady$0
    478:478:void lambda$connectionUnavailable$1(com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo) -> lambda$connectionUnavailable$1
    466:466:void removeRcsProvisioningInfo(com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo) -> removeRcsProvisioningInfo
com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$ExternalSyntheticLambda0 -> com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$ExternalSyntheticLambda0:
    com.android.ims.RcsFeatureManager com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$InternalSyntheticLambda$1$695aa6856d9f3f6a20b15b5d893cb88b7643ca26610aa249da39c1009c8f73e2$0.f$0 -> f$0
    void com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$InternalSyntheticLambda$1$695aa6856d9f3f6a20b15b5d893cb88b7643ca26610aa249da39c1009c8f73e2$0.<init>(com.android.ims.RcsFeatureManager) -> <init>
    void com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$InternalSyntheticLambda$1$695aa6856d9f3f6a20b15b5d893cb88b7643ca26610aa249da39c1009c8f73e2$0.accept(java.lang.Object) -> accept
com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$ExternalSyntheticLambda1 -> com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$ExternalSyntheticLambda1:
    com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$InternalSyntheticLambda$1$257699912a29e276c1b51387fa0d088e50bab31d79728cf4aef383277ac3096d$0 com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$InternalSyntheticLambda$1$257699912a29e276c1b51387fa0d088e50bab31d79728cf4aef383277ac3096d$0.INSTANCE -> INSTANCE
    void com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$InternalSyntheticLambda$1$257699912a29e276c1b51387fa0d088e50bab31d79728cf4aef383277ac3096d$0.<clinit>() -> <clinit>
    void com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$InternalSyntheticLambda$1$257699912a29e276c1b51387fa0d088e50bab31d79728cf4aef383277ac3096d$0.<init>() -> <init>
    void com.android.phone.RcsProvisioningMonitor$RcsFeatureListener$$InternalSyntheticLambda$1$257699912a29e276c1b51387fa0d088e50bab31d79728cf4aef383277ac3096d$0.accept(java.lang.Object) -> accept
com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo -> com.android.phone.RcsProvisioningMonitor$RcsProvisioningInfo:
    222:227:void <init>(com.android.phone.RcsProvisioningMonitor,int,int,byte[]) -> <init>
    274:287:boolean addRcsConfigCallback(android.telephony.ims.aidl.IRcsConfigCallback) -> addRcsConfigCallback
    339:340:void clear() -> clear
    395:413:void clearCallbacks() -> clearCallbacks
    332:335:void destroy() -> destroy
    270:270:byte[] getConfig() -> getConfig
    255:255:int getSingleRegistrationCapability() -> getSingleRegistrationCapability
    231:231:int getSubId() -> getSubId
    247:250:void notifyDma() -> notifyDma
    364:377:void notifyRcsAutoConfigurationReceived() -> notifyRcsAutoConfigurationReceived
    382:390:void notifyRcsAutoConfigurationRemoved() -> notifyRcsAutoConfigurationRemoved
    344:358:void onRcsStatusChanged(android.telephony.ims.aidl.IImsConfig) -> onRcsStatusChanged
    417:423:void registerMetricsCallback() -> registerMetricsCallback
    294:312:boolean removeRcsConfigCallback(android.telephony.ims.aidl.IRcsConfigCallback) -> removeRcsConfigCallback
    259:264:void setConfig(byte[]) -> setConfig
    235:240:void setSingleRegistrationCapability(int) -> setSingleRegistrationCapability
    317:327:void triggerRcsReconfiguration() -> triggerRcsReconfiguration
com.android.phone.RcsProvisioningMonitor$RoleManagerAdapterImpl -> com.android.phone.RcsProvisioningMonitor$RoleManagerAdapterImpl:
    945:945:void <init>(android.content.Context,com.android.phone.RcsProvisioningMonitor$1) -> <init>
    948:949:void <init>(android.content.Context) -> <init>
    960:960:void addOnRoleHoldersChangedListenerAsUser(java.util.concurrent.Executor,android.app.role.OnRoleHoldersChangedListener,android.os.UserHandle) -> addOnRoleHoldersChangedListenerAsUser
    954:954:java.util.List getRoleHolders(java.lang.String) -> getRoleHolders
    966:966:void removeOnRoleHoldersChangedListenerAsUser(android.app.role.OnRoleHoldersChangedListener,android.os.UserHandle) -> removeOnRoleHoldersChangedListenerAsUser
com.android.phone.ServiceStateProvider -> com.android.phone.ServiceStateProvider:
    63:288:void <clinit>() -> <clinit>
    59:233:void <init>() -> <init>
    526:539:android.database.Cursor buildSingleRowResult(java.lang.String[],java.lang.String[],java.lang.Object[]) -> buildSingleRowResult
    602:602:boolean dataNetworkTypeChanged(android.telephony.ServiceState,android.telephony.ServiceState) -> dataNetworkTypeChanged
    590:590:boolean dataRegStateChanged(android.telephony.ServiceState,android.telephony.ServiceState) -> dataRegStateChanged
    598:598:boolean dataRoamingTypeChanged(android.telephony.ServiceState,android.telephony.ServiceState) -> dataRoamingTypeChanged
    360:360:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    316:316:int getDefaultSubId() -> getDefaultSubId
    697:699:android.telephony.ServiceState getLocationRedactedServiceState(android.telephony.ServiceState) -> getLocationRedactedServiceState
    306:306:android.telephony.ServiceState getServiceState(int) -> getServiceState
    370:370:java.lang.String getType(android.net.Uri) -> getType
    678:690:boolean hasLocationPermission() -> hasLocationPermission
    321:352:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    637:647:boolean isPathPrefixMatch(android.net.Uri,android.net.Uri) -> isPathPrefixMatch
    623:626:void notifyChangeForSubId(android.content.Context,android.telephony.ServiceState,android.telephony.ServiceState,int) -> notifyChangeForSubId
    562:581:void notifyChangeForSubIdAndField(android.content.Context,android.telephony.ServiceState,android.telephony.ServiceState,int) -> notifyChangeForSubIdAndField
    376:517:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    365:365:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    586:586:boolean voiceRegStateChanged(android.telephony.ServiceState,android.telephony.ServiceState) -> voiceRegStateChanged
    594:594:boolean voiceRoamingTypeChanged(android.telephony.ServiceState,android.telephony.ServiceState) -> voiceRoamingTypeChanged
com.android.phone.ShortcutViewUtils -> com.android.phone.ShortcutViewUtils:
    46:59:void <clinit>() -> <clinit>
    42:42:boolean access$000(android.content.Context,java.lang.String) -> access$000
    310:315:java.lang.String[] getCarrierSpecificPrefixes(android.content.Context,int) -> getCarrierSpecificPrefixes
    368:422:java.util.Map getPromotedEmergencyNumberLists(android.telephony.TelephonyManager) -> getPromotedEmergencyNumberLists
    263:270:boolean isSupportedCountry(android.content.Context,java.lang.String) -> isSupportedCountry
    288:305:com.android.phone.ShortcutViewUtils$PhoneInfo loadPhoneInfo(android.content.Context,android.telecom.PhoneAccountHandle,android.telephony.TelephonyManager,android.telecom.TelecomManager,java.util.Map) -> loadPhoneInfo
    213:258:com.android.phone.ShortcutViewUtils$PhoneInfo pickPreferredPhone(android.content.Context) -> pickPreferredPhone
    327:358:java.util.List removeCarrierSpecificPrefixes(android.content.Context,int,java.util.List) -> removeCarrierSpecificPrefixes
com.android.phone.ShortcutViewUtils$Config -> com.android.phone.ShortcutViewUtils$Config:
    64:68:void <init>(android.content.Context,android.os.PersistableBundle,int) -> <init>
    103:108:boolean canEnableShortcutView(android.os.PersistableBundle,int) -> canEnableShortcutView
    88:91:java.lang.String getCountryIso() -> getCountryIso
    84:84:com.android.phone.ShortcutViewUtils$PhoneInfo getPhoneInfo() -> getPhoneInfo
    95:98:boolean hasPromotedEmergencyNumber(java.lang.String) -> hasPromotedEmergencyNumber
    115:115:boolean isAirplaneModeOn(android.content.Context) -> isAirplaneModeOn
    80:80:boolean isEnabled() -> isEnabled
    72:75:void refresh(android.content.Context) -> refresh
com.android.phone.ShortcutViewUtils$PhoneInfo -> com.android.phone.ShortcutViewUtils$PhoneInfo:
    121:121:void <init>(android.telecom.PhoneAccountHandle,boolean,int,java.lang.String,java.util.List,com.android.phone.ShortcutViewUtils$1) -> <init>
    134:139:void <init>(android.telecom.PhoneAccountHandle,boolean,int,java.lang.String,java.util.List) -> <init>
    155:155:java.lang.String getCountryIso() -> getCountryIso
    143:143:android.telecom.PhoneAccountHandle getPhoneAccountHandle() -> getPhoneAccountHandle
    159:159:java.util.List getPromotedEmergencyNumbers() -> getPromotedEmergencyNumbers
    171:172:boolean hasPromotedEmergencyNumber(java.lang.String) -> hasPromotedEmergencyNumber
    166:167:boolean isSufficientForEmergencyCall(android.content.Context) -> isSufficientForEmergencyCall
    181:197:java.lang.String toString() -> toString
com.android.phone.SimContacts -> com.android.phone.SimContacts:
    66:66:void <clinit>() -> <clinit>
    63:63:void <init>() -> <init>
    63:63:android.accounts.Account access$000(com.android.phone.SimContacts) -> access$000
    63:63:boolean access$100(android.database.Cursor,android.content.ContentResolver,android.accounts.Account) -> access$100
    63:63:android.app.ProgressDialog access$200(com.android.phone.SimContacts) -> access$200
    139:205:boolean actuallyImportOneSimContact(android.database.Cursor,android.content.ContentResolver,android.accounts.Account) -> actuallyImportOneSimContact
    211:224:void importOneSimContact(int) -> importOneSimContact
    254:254:android.widget.CursorAdapter newAdapter() -> newAdapter
    329:338:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    232:248:void onCreate(android.os.Bundle) -> onCreate
    344:351:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    279:280:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    364:381:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    357:357:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    295:324:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    286:290:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    260:274:android.net.Uri resolveIntent() -> resolveIntent
com.android.phone.SimContacts$ImportAllSimContactsThread -> com.android.phone.SimContacts$ImportAllSimContactsThread:
    102:105:void <init>(com.android.phone.SimContacts) -> <init>
    124:124:void onCancel(android.content.DialogInterface) -> onCancel
    129:132:void onClick(android.content.DialogInterface,int) -> onClick
    110:120:void run() -> run
com.android.phone.SimContacts$NamePhoneTypePair -> com.android.phone.SimContacts$NamePhoneTypePair:
    77:94:void <init>(java.lang.String) -> <init>
com.android.phone.SimPhonebookProvider -> com.android.phone.SimPhonebookProvider:
    80:125:void <clinit>() -> <clinit>
    77:131:void <init>() -> <init>
    77:77:android.telephony.SubscriptionManager access$000(com.android.phone.SimPhonebookProvider) -> access$000
    632:636:void acquireWriteLockOrThrow() -> acquireWriteLockOrThrow
    324:326:void addEfToCursor(android.database.MatrixCursor,android.telephony.SubscriptionInfo,int) -> addEfToCursor
    333:355:void addEfToCursor(android.database.MatrixCursor,android.telephony.SubscriptionInfo,int,int[]) -> addEfToCursor
    215:220:android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle) -> call
    224:225:android.os.Bundle callForEncodedNameLength(java.lang.String) -> callForEncodedNameLength
    521:521:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    526:534:int delete(android.net.Uri,android.os.Bundle) -> delete
    539:554:int deleteSimRecordsItem(com.android.phone.SimPhonebookProvider$PhonebookArgs) -> deleteSimRecordsItem
    746:751:android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int) -> getActiveSubscriptionInfo
    735:740:java.util.List getActiveSubscriptionInfoList() -> getActiveSubscriptionInfoList
    230:234:int getEncodedNameLength(java.lang.String) -> getEncodedNameLength
    169:170:com.android.internal.telephony.IIccPhoneBook getIccPhoneBook() -> getIccPhoneBook
    164:164:int getRecordCount(int[]) -> getRecordCount
    160:160:int getRecordSize(int[]) -> getRecordSize
    784:784:int[] getRecordsSizeForEf(com.android.phone.SimPhonebookProvider$PhonebookArgs) -> getRecordsSizeForEf
    438:448:java.lang.String getType(android.net.Uri) -> getType
    657:666:boolean hasPermissionsForFdnWrite(com.android.phone.SimPhonebookProvider$PhonebookArgs) -> hasPermissionsForFdnWrite
    455:455:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    461:469:android.net.Uri insert(android.net.Uri,android.content.ContentValues,android.os.Bundle) -> insert
    474:515:android.net.Uri insertSimRecord(com.android.phone.SimPhonebookProvider$PhonebookArgs,android.content.ContentValues) -> insertSimRecord
    178:178:void lambda$onCreate$0(android.content.ContentResolver,android.net.Uri) -> lambda$onCreate$0
    764:774:com.android.internal.telephony.uicc.AdnRecord loadRecord(com.android.phone.SimPhonebookProvider$PhonebookArgs) -> loadRecord
    756:756:java.util.List loadRecordsForEf(com.android.phone.SimPhonebookProvider$PhonebookArgs) -> loadRecordsForEf
    792:792:void notifyChange() -> notifyChange
    175:176:boolean onCreate() -> onCreate
    187:191:boolean onCreate(android.telephony.SubscriptionManager,java.util.function.Supplier,com.android.phone.SimPhonebookProvider$ContentNotifier) -> onCreate
    242:260:android.database.Cursor query(android.net.Uri,java.lang.String[],android.os.Bundle,android.os.CancellationSignal) -> query
    269:269:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> query
    276:276:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    280:296:android.database.Cursor queryElementaryFiles(java.lang.String[]) -> queryElementaryFiles
    303:317:android.database.Cursor queryElementaryFilesItem(com.android.phone.SimPhonebookProvider$PhonebookArgs,java.lang.String[]) -> queryElementaryFilesItem
    360:407:android.database.Cursor querySimRecords(com.android.phone.SimPhonebookProvider$PhonebookArgs,java.lang.String[]) -> querySimRecords
    415:431:android.database.Cursor querySimRecordsItem(com.android.phone.SimPhonebookProvider$PhonebookArgs,java.lang.String[]) -> querySimRecordsItem
    641:641:void releaseWriteLock() -> releaseWriteLock
    561:569:int update(android.net.Uri,android.content.ContentValues,android.os.Bundle) -> update
    576:576:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    674:679:boolean updateRecord(com.android.phone.SimPhonebookProvider$PhonebookArgs,com.android.internal.telephony.uicc.AdnRecord,java.lang.String,java.lang.String,java.lang.String) -> updateRecord
    580:609:int updateSimRecordsItem(com.android.phone.SimPhonebookProvider$PhonebookArgs,android.content.ContentValues) -> updateSimRecordsItem
    687:701:void validatePhoneNumber(java.lang.String) -> validatePhoneNumber
    150:156:void validateProjection(java.util.Set,java.lang.String[]) -> validateProjection
    615:625:void validateSubscriptionAndEf(com.android.phone.SimPhonebookProvider$PhonebookArgs) -> validateSubscriptionAndEf
    708:728:void validateValues(com.android.phone.SimPhonebookProvider$PhonebookArgs,android.content.ContentValues) -> validateValues
    645:651:void validateWritableEf(com.android.phone.SimPhonebookProvider$PhonebookArgs,java.lang.String) -> validateWritableEf
com.android.phone.SimPhonebookProvider$$ExternalSyntheticLambda0 -> com.android.phone.SimPhonebookProvider$$ExternalSyntheticLambda0:
    android.content.ContentResolver com.android.phone.SimPhonebookProvider$$InternalSyntheticLambda$0$2e2426ca252ca04db25c6cf059b9134d2eada8cb9c5ac27f3a358104a367fdd2$1.f$0 -> f$0
    void com.android.phone.SimPhonebookProvider$$InternalSyntheticLambda$0$2e2426ca252ca04db25c6cf059b9134d2eada8cb9c5ac27f3a358104a367fdd2$1.<init>(android.content.ContentResolver) -> <init>
    void com.android.phone.SimPhonebookProvider$$InternalSyntheticLambda$0$2e2426ca252ca04db25c6cf059b9134d2eada8cb9c5ac27f3a358104a367fdd2$1.notifyChange(android.net.Uri) -> notifyChange
com.android.phone.SimPhonebookProvider$$ExternalSyntheticLambda1 -> com.android.phone.SimPhonebookProvider$$ExternalSyntheticLambda1:
    com.android.phone.SimPhonebookProvider$$InternalSyntheticLambda$0$2e2426ca252ca04db25c6cf059b9134d2eada8cb9c5ac27f3a358104a367fdd2$0 com.android.phone.SimPhonebookProvider$$InternalSyntheticLambda$0$2e2426ca252ca04db25c6cf059b9134d2eada8cb9c5ac27f3a358104a367fdd2$0.INSTANCE -> INSTANCE
    void com.android.phone.SimPhonebookProvider$$InternalSyntheticLambda$0$2e2426ca252ca04db25c6cf059b9134d2eada8cb9c5ac27f3a358104a367fdd2$0.<clinit>() -> <clinit>
    void com.android.phone.SimPhonebookProvider$$InternalSyntheticLambda$0$2e2426ca252ca04db25c6cf059b9134d2eada8cb9c5ac27f3a358104a367fdd2$0.<init>() -> <init>
    java.lang.Object com.android.phone.SimPhonebookProvider$$InternalSyntheticLambda$0$2e2426ca252ca04db25c6cf059b9134d2eada8cb9c5ac27f3a358104a367fdd2$0.get() -> get
com.android.phone.SimPhonebookProvider$1 -> com.android.phone.SimPhonebookProvider$1:
    192:194:void <init>(com.android.phone.SimPhonebookProvider,com.android.phone.SimPhonebookProvider$ContentNotifier) -> <init>
    198:205:void onSubscriptionsChanged() -> onSubscriptionsChanged
com.android.phone.SimPhonebookProvider$PhonebookArgs -> com.android.phone.SimPhonebookProvider$PhonebookArgs:
    816:825:void <init>(android.net.Uri,int,java.lang.String,int,int,int,android.os.Bundle) -> <init>
    833:854:com.android.phone.SimPhonebookProvider$PhonebookArgs createFromEfName(android.net.Uri,int,java.lang.String,int,android.os.Bundle) -> createFromEfName
    867:869:com.android.phone.SimPhonebookProvider$PhonebookArgs forElementaryFilesItem(android.net.Uri) -> forElementaryFilesItem
    882:884:com.android.phone.SimPhonebookProvider$PhonebookArgs forSimRecords(android.net.Uri,android.os.Bundle) -> forSimRecords
    896:899:com.android.phone.SimPhonebookProvider$PhonebookArgs forSimRecordsItem(android.net.Uri,android.os.Bundle) -> forSimRecordsItem
    917:920:int parseRecordNumberFromUri(android.net.Uri,int) -> parseRecordNumberFromUri
    907:911:int parseSubscriptionIdFromUri(android.net.Uri,int) -> parseSubscriptionIdFromUri
com.android.phone.SpecialCharSequenceMgr -> com.android.phone.SpecialCharSequenceMgr:
    210:224:int getNextSubIdForState(com.android.internal.telephony.IccCardConstants$State,android.content.Context) -> getNextSubIdForState
    197:204:com.android.internal.telephony.IccCardConstants$State getSimState(int,android.content.Context) -> getSimState
    174:188:boolean handleAdnEntry(android.content.Context,java.lang.String) -> handleAdnEntry
    78:78:boolean handleChars(android.content.Context,java.lang.String) -> handleChars
    108:114:boolean handleChars(android.content.Context,java.lang.String,android.app.Activity) -> handleChars
    133:141:boolean handleCharsForLockedDevice(android.content.Context,java.lang.String,android.app.Activity) -> handleCharsForLockedDevice
    282:283:boolean handleIMEIDisplay(android.content.Context,java.lang.String) -> handleIMEIDisplay
    235:273:boolean handlePinEntry(android.content.Context,java.lang.String,android.app.Activity) -> handlePinEntry
    308:314:boolean handleRegulatoryInfoDisplay(android.content.Context,java.lang.String) -> handleRegulatoryInfoDisplay
    158:161:boolean handleSecretCode(java.lang.String) -> handleSecretCode
    322:322:void log(java.lang.String) -> log
    293:304:void showDeviceIdPanel(android.content.Context) -> showDeviceIdPanel
com.android.phone.SubscriptionInfoHelper -> com.android.phone.SubscriptionInfoHelper:
    50:66:void <init>(android.content.Context,android.content.Intent) -> <init>
    92:95:void addExtrasToIntent(android.content.Intent,android.telephony.SubscriptionInfo) -> addExtrasToIntent
    74:81:android.content.Intent getIntent(java.lang.Class) -> getIntent
    102:104:com.android.internal.telephony.Phone getPhone() -> getPhone
    132:132:int getSubId() -> getSubId
    128:128:boolean hasSubId() -> hasSubId
    115:124:void setActionBarTitle(android.app.ActionBar,android.content.res.Resources,int) -> setActionBarTitle
com.android.phone.TelephonyDebugService -> com.android.phone.TelephonyDebugService:
    35:39:void <init>() -> <init>
    52:52:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
com.android.phone.TelephonyShellCommand -> com.android.phone.TelephonyShellCommand:
    191:257:void <clinit>() -> <clinit>
    261:269:void <init>(com.android.internal.telephony.ITelephony,android.content.Context) -> <init>
    1654:1719:java.lang.String ccValueToString(java.lang.String,com.android.phone.TelephonyShellCommand$CcType,android.os.PersistableBundle) -> ccValueToString
    1436:1437:boolean checkShellUid() -> checkShellUid
    2714:2724:long convertNetworkTypeBitmaskFromStringToLong(java.lang.String) -> convertNetworkTypeBitmaskFromStringToLong
    1360:1360:int getDefaultSlot() -> getDefaultSlot
    1724:1861:android.os.PersistableBundle getOverrideBundle(java.lang.String,com.android.phone.TelephonyShellCommand$CcType,java.lang.String,java.util.ArrayList) -> getOverrideBundle
    1933:1944:int getSubId(java.lang.String) -> getSubId
    1601:1649:com.android.phone.TelephonyShellCommand$CcType getType(java.lang.String,java.lang.String,android.os.PersistableBundle) -> getType
    2619:2652:int handleAllowedNetworkTypesCommand(java.lang.String) -> handleAllowedNetworkTypesCommand
    996:1004:int handleBarringCommand() -> handleBarringCommand
    1011:1077:int handleBarringSendCommand() -> handleBarringSendCommand
    2530:2588:int handleCallComposerCommand() -> handleCallComposerCommand
    1583:1595:int handleCcClearValues() -> handleCcClearValues
    1443:1465:int handleCcCommand() -> handleCcCommand
    1473:1506:int handleCcGetValue() -> handleCcGetValue
    1514:1576:int handleCcSetValue() -> handleCcSetValue
    1344:1352:int handleCepChange() -> handleCepChange
    916:930:int handleD2dCommand() -> handleD2dCommand
    1084:1097:int handleD2dDeviceSupportedCommand() -> handleD2dDeviceSupportedCommand
    938:970:int handleD2dSendCommand() -> handleD2dSendCommand
    978:990:int handleD2dTransportCommand() -> handleD2dTransportCommand
    691:719:int handleDataTestModeCommand() -> handleDataTestModeCommand
    1316:1338:int handleDisableIms() -> handleDisableIms
    726:732:int handleEmergencyCallbackModeCommand() -> handleEmergencyCallbackModeCommand
    739:817:int handleEmergencyNumberTestModeCommand() -> handleEmergencyNumberTestModeCommand
    1289:1310:int handleEnableIms() -> handleEnableIms
    859:881:int handleEnablePhysicalSubscription(boolean) -> handleEnablePhysicalSubscription
    1869:1874:int handleEndBlockSuppressionCommand() -> handleEndBlockSuppressionCommand
    1908:1925:int handleGbaCommand() -> handleGbaCommand
    2024:2038:int handleGbaGetReleaseCommand() -> handleGbaGetReleaseCommand
    1976:1989:int handleGbaGetServiceCommand() -> handleGbaGetServiceCommand
    1995:2017:int handleGbaSetReleaseCommand() -> handleGbaSetReleaseCommand
    1948:1967:int handleGbaSetServiceCommand() -> handleGbaSetServiceCommand
    2658:2674:int handleGetAllowedNetworkTypesCommand(int) -> handleGetAllowedNetworkTypesCommand
    2156:2172:int handleGettingEabCapabilityCommand() -> handleGettingEabCapabilityCommand
    2135:2151:int handleGettingEabContactCommand() -> handleGettingEabContactCommand
    2598:2614:int handleHasCarrierPrivilegesCommand() -> handleHasCarrierPrivilegesCommand
    1190:1218:int handleImsClearCarrierServiceCommand() -> handleImsClearCarrierServiceCommand
    660:683:int handleImsCommand() -> handleImsCommand
    1226:1284:int handleImsGetServiceCommand() -> handleImsGetServiceCommand
    1105:1182:int handleImsSetServiceCommand() -> handleImsSetServiceCommand
    824:842:int handleNumberVerificationCommand() -> handleNumberVerificationCommand
    2080:2104:int handleRcsUceCommand() -> handleRcsUceCommand
    2110:2129:int handleRemovingEabContactCommand() -> handleRemovingEabContactCommand
    1882:1888:int handleRestartModemCommand() -> handleRestartModemCommand
    2679:2709:int handleSetAllowedNetworkTypesCommand(int) -> handleSetAllowedNetworkTypesCommand
    2043:2072:int handleSingleRegistrationConfigCommand() -> handleSingleRegistrationConfigCommand
    2446:2460:int handleSrcGetCarrierEnabledCommand() -> handleSrcGetCarrierEnabledCommand
    2404:2411:int handleSrcGetDeviceEnabledCommand() -> handleSrcGetDeviceEnabledCommand
    2495:2509:int handleSrcGetFeatureValidationCommand() -> handleSrcGetFeatureValidationCommand
    2275:2282:int handleSrcGetTestEnabledCommand() -> handleSrcGetTestEnabledCommand
    2417:2439:int handleSrcSetCarrierEnabledCommand() -> handleSrcSetCarrierEnabledCommand
    2382:2395:int handleSrcSetDeviceEnabledCommand() -> handleSrcSetDeviceEnabledCommand
    2466:2488:int handleSrcSetFeatureValidationCommand() -> handleSrcSetFeatureValidationCommand
    2253:2266:int handleSrcSetTestEnabledCommand() -> handleSrcSetTestEnabledCommand
    886:908:int handleThermalMitigationCommand() -> handleThermalMitigationCommand
    2179:2187:int handleUceGetDeviceEnabledCommand() -> handleUceGetDeviceEnabledCommand
    2354:2377:int handleUceGetPidfXml() -> handleUceGetPidfXml
    2287:2349:int handleUceOverridePublishCaps() -> handleUceOverridePublishCaps
    2212:2227:int handleUceRemoveRequestDisallowedStatus() -> handleUceRemoveRequestDisallowedStatus
    2232:2248:int handleUceSetCapRequestTimeout() -> handleUceSetCapRequestTimeout
    2192:2205:int handleUceSetDeviceEnabledCommand() -> handleUceSetDeviceEnabledCommand
    1896:1902:int handleUnattendedReboot() -> handleUnattendedReboot
    2559:2560:void lambda$handleCallComposerCommand$0(int,java.util.UUID,java.util.concurrent.CompletableFuture) -> lambda$handleCallComposerCommand$0
    275:323:int onCommand(java.lang.String) -> onCommand
    330:370:void onHelp() -> onHelp
    636:656:void onHelpAllowedNetworkTypes() -> onHelpAllowedNetworkTypes
    397:405:void onHelpBarring() -> onHelpBarring
    2515:2526:void onHelpCallComposer() -> onHelpCallComposer
    545:569:void onHelpCc() -> onHelpCc
    374:393:void onHelpD2D() -> onHelpD2D
    517:520:void onHelpDataTestMode() -> onHelpDataTestMode
    508:513:void onHelpDisableOrEnablePhysicalSubscription() -> onHelpDisableOrEnablePhysicalSubscription
    524:534:void onHelpEmergencyNumber() -> onHelpEmergencyNumber
    538:541:void onHelpEndBlockSupperssion() -> onHelpEndBlockSupperssion
    573:595:void onHelpGba() -> onHelpGba
    409:441:void onHelpIms() -> onHelpIms
    487:494:void onHelpNumberVerification() -> onHelpNumberVerification
    599:632:void onHelpSrc() -> onHelpSrc
    498:503:void onHelpThermalMitigation() -> onHelpThermalMitigation
    445:483:void onHelpUce() -> onHelpUce
    1371:1404:com.android.phone.TelephonyShellCommand$CcOptionParseResult parseCcOptions(java.lang.String,boolean) -> parseCcOptions
    1415:1431:int slotStringToSubId(java.lang.String,java.lang.String) -> slotStringToSubId
    851:853:boolean subIsEsim(int) -> subIsEsim
com.android.phone.TelephonyShellCommand$$ExternalSyntheticLambda0 -> com.android.phone.TelephonyShellCommand$$ExternalSyntheticLambda0:
    java.util.UUID com.android.phone.TelephonyShellCommand$$InternalSyntheticLambda$0$a64767a153b38a50a7f1075049ee8fc2dcf7ab18b3cd658d7df79bec49800ccb$0.f$2 -> f$2
    java.util.concurrent.CompletableFuture com.android.phone.TelephonyShellCommand$$InternalSyntheticLambda$0$a64767a153b38a50a7f1075049ee8fc2dcf7ab18b3cd658d7df79bec49800ccb$0.f$3 -> f$3
    int com.android.phone.TelephonyShellCommand$$InternalSyntheticLambda$0$a64767a153b38a50a7f1075049ee8fc2dcf7ab18b3cd658d7df79bec49800ccb$0.f$1 -> f$1
    com.android.phone.TelephonyShellCommand com.android.phone.TelephonyShellCommand$$InternalSyntheticLambda$0$a64767a153b38a50a7f1075049ee8fc2dcf7ab18b3cd658d7df79bec49800ccb$0.f$0 -> f$0
    void com.android.phone.TelephonyShellCommand$$InternalSyntheticLambda$0$a64767a153b38a50a7f1075049ee8fc2dcf7ab18b3cd658d7df79bec49800ccb$0.<init>(com.android.phone.TelephonyShellCommand,int,java.util.UUID,java.util.concurrent.CompletableFuture) -> <init>
    void com.android.phone.TelephonyShellCommand$$InternalSyntheticLambda$0$a64767a153b38a50a7f1075049ee8fc2dcf7ab18b3cd658d7df79bec49800ccb$0.runOrThrow() -> runOrThrow
com.android.phone.TelephonyShellCommand$$ExternalSyntheticLambda1 -> com.android.phone.TelephonyShellCommand$$ExternalSyntheticLambda1:
    java.util.concurrent.CompletableFuture com.android.phone.TelephonyShellCommand$$InternalSyntheticLambda$1$1b01d63f421ce204805187f319216b7b18eb79bc9b44da415c9498538865f4a6$0.f$0 -> f$0
    void com.android.phone.TelephonyShellCommand$$InternalSyntheticLambda$1$1b01d63f421ce204805187f319216b7b18eb79bc9b44da415c9498538865f4a6$0.<init>(java.util.concurrent.CompletableFuture) -> <init>
    void com.android.phone.TelephonyShellCommand$$InternalSyntheticLambda$1$1b01d63f421ce204805187f319216b7b18eb79bc9b44da415c9498538865f4a6$0.accept(java.lang.Object) -> accept
com.android.phone.TelephonyShellCommand$1 -> com.android.phone.TelephonyShellCommand$1:
    191:215:void <init>() -> <init>
com.android.phone.TelephonyShellCommand$2 -> com.android.phone.TelephonyShellCommand$2:
    1661:1661:void <clinit>() -> <clinit>
com.android.phone.TelephonyShellCommand$CcOptionParseResult -> com.android.phone.TelephonyShellCommand$CcOptionParseResult:
    181:181:void <init>(com.android.phone.TelephonyShellCommand) -> <init>
    181:181:void <init>(com.android.phone.TelephonyShellCommand,com.android.phone.TelephonyShellCommand$1) -> <init>
com.android.phone.TelephonyShellCommand$CcType -> com.android.phone.TelephonyShellCommand$CcType:
    176:178:void <clinit>() -> <clinit>
    176:176:void <init>(java.lang.String,int) -> <init>
    176:176:com.android.phone.TelephonyShellCommand$CcType valueOf(java.lang.String) -> valueOf
    176:176:com.android.phone.TelephonyShellCommand$CcType[] values() -> values
com.android.phone.TimeConsumingPreferenceActivity -> com.android.phone.TimeConsumingPreferenceActivity:
    23:60:void <init>() -> <init>
    227:227:void dismissDialogSafely(int) -> dismissDialogSafely
    222:222:void onCancel(android.content.DialogInterface) -> onCancel
    65:136:android.app.Dialog onCreateDialog(int) -> onCreateDialog
    190:195:void onError(android.preference.Preference,int) -> onError
    200:215:void onException(android.preference.Preference,com.android.internal.telephony.CommandException) -> onException
    174:184:void onFinished(android.preference.Preference,boolean) -> onFinished
    151:152:void onPause() -> onPause
    145:146:void onResume() -> onResume
    158:165:void onStarted(android.preference.Preference,boolean) -> onStarted
com.android.phone.TimeConsumingPreferenceActivity$DismissAndFinishOnClickListener -> com.android.phone.TimeConsumingPreferenceActivity$DismissAndFinishOnClickListener:
    35:35:void <init>(com.android.phone.TimeConsumingPreferenceActivity) -> <init>
    35:35:void <init>(com.android.phone.TimeConsumingPreferenceActivity,com.android.phone.TimeConsumingPreferenceActivity$1) -> <init>
    38:39:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.TimeConsumingPreferenceActivity$DismissOnClickListener -> com.android.phone.TimeConsumingPreferenceActivity$DismissOnClickListener:
    29:29:void <init>(com.android.phone.TimeConsumingPreferenceActivity) -> <init>
    29:29:void <init>(com.android.phone.TimeConsumingPreferenceActivity,com.android.phone.TimeConsumingPreferenceActivity$1) -> <init>
    32:32:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.TimeConsumingPreferenceListener -> com.android.phone.TimeConsumingPreferenceListener:
# {"id":"sourceFile","fileName":"TimeConsumingPreferenceActivity.java"}
com.android.phone.callcomposer.CallComposerPictureManager -> com.android.phone.callcomposer.CallComposerPictureManager:
    54:104:void <clinit>() -> <clinit>
    106:118:void <init>(android.content.Context,int) -> <init>
    52:52:java.lang.String access$000() -> access$000
    52:52:java.util.concurrent.ScheduledExecutorService access$100() -> access$100
    52:52:java.util.HashMap access$200(com.android.phone.callcomposer.CallComposerPictureManager) -> access$200
    52:52:java.util.HashMap access$300(com.android.phone.callcomposer.CallComposerPictureManager) -> access$300
    52:52:java.util.concurrent.CompletableFuture access$400(com.android.phone.callcomposer.CallComposerPictureManager,boolean,android.os.PersistableBundle,java.util.concurrent.Executor) -> access$400
    52:52:android.content.Context access$500(com.android.phone.callcomposer.CallComposerPictureManager) -> access$500
    52:52:com.android.phone.callcomposer.CallComposerPictureManager$CallLogProxy access$600(com.android.phone.callcomposer.CallComposerPictureManager) -> access$600
    52:52:com.android.phone.callcomposer.GbaCredentials access$702(com.android.phone.callcomposer.CallComposerPictureManager,com.android.phone.callcomposer.GbaCredentials) -> access$702
    280:281:void clearCachedData() -> clearCachedData
    72:78:void clearInstances() -> clearInstances
    375:375:java.util.concurrent.ScheduledExecutorService getExecutor() -> getExecutor
    306:328:java.util.concurrent.CompletableFuture getGbaCredentials(boolean,android.os.PersistableBundle,java.util.concurrent.Executor) -> getGbaCredentials
    58:67:com.android.phone.callcomposer.CallComposerPictureManager getInstance(android.content.Context,int) -> getInstance
    350:369:android.net.Uri getNafUri(android.os.PersistableBundle) -> getNafUri
    285:287:byte[] getPlaceholderPictureAsBytes() -> getPlaceholderPictureAsBytes
    276:276:java.lang.String getServerUrlForImageId(java.util.UUID) -> getServerUrlForImageId
    184:243:void handleDownloadFromServer(com.android.phone.callcomposer.CallComposerPictureTransfer$Factory,java.lang.String,java.util.function.Consumer) -> handleDownloadFromServer
    123:178:void handleUploadToServer(com.android.phone.callcomposer.CallComposerPictureTransfer$Factory,com.android.phone.callcomposer.ImageData,java.util.function.Consumer) -> handleUploadToServer
    188:188:void lambda$handleDownloadFromServer$1(java.util.function.Consumer,android.net.Uri) -> lambda$handleDownloadFromServer$1
    244:244:java.util.concurrent.CompletableFuture lambda$handleDownloadFromServer$2(android.os.PersistableBundle,java.lang.String,java.util.concurrent.Executor) -> lambda$handleDownloadFromServer$2
    179:179:java.util.concurrent.CompletableFuture lambda$handleUploadToServer$0(android.os.PersistableBundle,java.lang.String,java.util.concurrent.Executor) -> lambda$handleUploadToServer$0
    295:301:byte[] readBytes(java.io.InputStream) -> readBytes
    380:380:void setCallLogProxy(com.android.phone.callcomposer.CallComposerPictureManager$CallLogProxy) -> setCallLogProxy
    248:256:void storeUploadedPictureToCallLog(java.util.UUID,java.util.function.Consumer) -> storeUploadedPictureToCallLog
com.android.phone.callcomposer.CallComposerPictureManager$$ExternalSyntheticLambda0 -> com.android.phone.callcomposer.CallComposerPictureManager$$ExternalSyntheticLambda0:
    com.android.phone.callcomposer.CallComposerPictureManager com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$76984c47e9cccc561f215e37273f56983ec57cb4f6878c2e3733cff297560715$0.f$0 -> f$0
    android.os.PersistableBundle com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$76984c47e9cccc561f215e37273f56983ec57cb4f6878c2e3733cff297560715$0.f$1 -> f$1
    void com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$76984c47e9cccc561f215e37273f56983ec57cb4f6878c2e3733cff297560715$0.<init>(com.android.phone.callcomposer.CallComposerPictureManager,android.os.PersistableBundle) -> <init>
    java.util.concurrent.CompletableFuture com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$76984c47e9cccc561f215e37273f56983ec57cb4f6878c2e3733cff297560715$0.getCredentials(java.lang.String,java.util.concurrent.Executor) -> getCredentials
com.android.phone.callcomposer.CallComposerPictureManager$$ExternalSyntheticLambda1 -> com.android.phone.callcomposer.CallComposerPictureManager$$ExternalSyntheticLambda1:
    com.android.phone.callcomposer.CallComposerPictureManager com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$bfb7da8a4b78a7d98bdb36df60043ea75745614deab2bf4748449954a51493f6$1.f$0 -> f$0
    android.os.PersistableBundle com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$bfb7da8a4b78a7d98bdb36df60043ea75745614deab2bf4748449954a51493f6$1.f$1 -> f$1
    void com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$bfb7da8a4b78a7d98bdb36df60043ea75745614deab2bf4748449954a51493f6$1.<init>(com.android.phone.callcomposer.CallComposerPictureManager,android.os.PersistableBundle) -> <init>
    java.util.concurrent.CompletableFuture com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$bfb7da8a4b78a7d98bdb36df60043ea75745614deab2bf4748449954a51493f6$1.getCredentials(java.lang.String,java.util.concurrent.Executor) -> getCredentials
com.android.phone.callcomposer.CallComposerPictureManager$$ExternalSyntheticLambda2 -> com.android.phone.callcomposer.CallComposerPictureManager$$ExternalSyntheticLambda2:
    java.util.function.Consumer com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$bfb7da8a4b78a7d98bdb36df60043ea75745614deab2bf4748449954a51493f6$0.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$bfb7da8a4b78a7d98bdb36df60043ea75745614deab2bf4748449954a51493f6$0.<init>(java.util.function.Consumer) -> <init>
    void com.android.phone.callcomposer.CallComposerPictureManager$$InternalSyntheticLambda$0$bfb7da8a4b78a7d98bdb36df60043ea75745614deab2bf4748449954a51493f6$0.accept(java.lang.Object) -> accept
com.android.phone.callcomposer.CallComposerPictureManager$1 -> com.android.phone.callcomposer.CallComposerPictureManager$1:
    112:112:void <init>(com.android.phone.callcomposer.CallComposerPictureManager) -> <init>
com.android.phone.callcomposer.CallComposerPictureManager$2 -> com.android.phone.callcomposer.CallComposerPictureManager$2:
    146:146:void <init>(com.android.phone.callcomposer.CallComposerPictureManager,java.util.function.Consumer,java.util.concurrent.atomic.AtomicBoolean,android.os.PersistableBundle,com.android.phone.callcomposer.CallComposerPictureTransfer,com.android.phone.callcomposer.ImageData,java.util.UUID) -> <init>
    162:162:java.util.concurrent.CompletableFuture lambda$onRetryNeeded$0(boolean,android.os.PersistableBundle,java.lang.String,java.util.concurrent.Executor) -> lambda$onRetryNeeded$0
    164:164:void lambda$onRetryNeeded$1(com.android.phone.callcomposer.CallComposerPictureTransfer,com.android.phone.callcomposer.ImageData,com.android.phone.callcomposer.GbaCredentialsSupplier) -> lambda$onRetryNeeded$1
    149:149:void onError(int) -> onError
    154:164:void onRetryNeeded(boolean,long) -> onRetryNeeded
    170:174:void onUploadSuccessful(java.lang.String) -> onUploadSuccessful
com.android.phone.callcomposer.CallComposerPictureManager$2$$ExternalSyntheticLambda0 -> com.android.phone.callcomposer.CallComposerPictureManager$2$$ExternalSyntheticLambda0:
    com.android.phone.callcomposer.CallComposerPictureManager$2 com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$0.f$0 -> f$0
    android.os.PersistableBundle com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$0.f$2 -> f$2
    boolean com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$0.f$1 -> f$1
    void com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$0.<init>(com.android.phone.callcomposer.CallComposerPictureManager$2,boolean,android.os.PersistableBundle) -> <init>
    java.util.concurrent.CompletableFuture com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$0.getCredentials(java.lang.String,java.util.concurrent.Executor) -> getCredentials
com.android.phone.callcomposer.CallComposerPictureManager$2$$ExternalSyntheticLambda1 -> com.android.phone.callcomposer.CallComposerPictureManager$2$$ExternalSyntheticLambda1:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$1.f$0 -> f$0
    com.android.phone.callcomposer.ImageData com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$1.f$1 -> f$1
    com.android.phone.callcomposer.GbaCredentialsSupplier com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$1.f$2 -> f$2
    void com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$1.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer,com.android.phone.callcomposer.ImageData,com.android.phone.callcomposer.GbaCredentialsSupplier) -> <init>
    void com.android.phone.callcomposer.CallComposerPictureManager$2$$InternalSyntheticLambda$0$7a23a78b5921a703aadc2629b4f2e94c1f2860ed9a451f36f6960c8bc43196e2$1.run() -> run
com.android.phone.callcomposer.CallComposerPictureManager$3 -> com.android.phone.callcomposer.CallComposerPictureManager$3:
    197:197:void <init>(com.android.phone.callcomposer.CallComposerPictureManager,java.util.function.Consumer,java.util.concurrent.atomic.AtomicBoolean,android.os.PersistableBundle,com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    213:213:java.util.concurrent.CompletableFuture lambda$onRetryNeeded$0(boolean,android.os.PersistableBundle,java.lang.String,java.util.concurrent.Executor) -> lambda$onRetryNeeded$0
    215:215:void lambda$onRetryNeeded$1(com.android.phone.callcomposer.CallComposerPictureTransfer,com.android.phone.callcomposer.GbaCredentialsSupplier) -> lambda$onRetryNeeded$1
    221:225:void onDownloadSuccessful(com.android.phone.callcomposer.ImageData) -> onDownloadSuccessful
    200:200:void onError(int) -> onError
    205:215:void onRetryNeeded(boolean,long) -> onRetryNeeded
com.android.phone.callcomposer.CallComposerPictureManager$3$$ExternalSyntheticLambda0 -> com.android.phone.callcomposer.CallComposerPictureManager$3$$ExternalSyntheticLambda0:
    com.android.phone.callcomposer.CallComposerPictureManager$3 com.android.phone.callcomposer.CallComposerPictureManager$3$$InternalSyntheticLambda$0$bac70b0d0fdab04a1b39e26bc5addac9a6de004e39f8cb1e4f4abc4c603f4ba1$0.f$0 -> f$0
    android.os.PersistableBundle com.android.phone.callcomposer.CallComposerPictureManager$3$$InternalSyntheticLambda$0$bac70b0d0fdab04a1b39e26bc5addac9a6de004e39f8cb1e4f4abc4c603f4ba1$0.f$2 -> f$2
    boolean com.android.phone.callcomposer.CallComposerPictureManager$3$$InternalSyntheticLambda$0$bac70b0d0fdab04a1b39e26bc5addac9a6de004e39f8cb1e4f4abc4c603f4ba1$0.f$1 -> f$1
    void com.android.phone.callcomposer.CallComposerPictureManager$3$$InternalSyntheticLambda$0$bac70b0d0fdab04a1b39e26bc5addac9a6de004e39f8cb1e4f4abc4c603f4ba1$0.<init>(com.android.phone.callcomposer.CallComposerPictureManager$3,boolean,android.os.PersistableBundle) -> <init>
    java.util.concurrent.CompletableFuture com.android.phone.callcomposer.CallComposerPictureManager$3$$InternalSyntheticLambda$0$bac70b0d0fdab04a1b39e26bc5addac9a6de004e39f8cb1e4f4abc4c603f4ba1$0.getCredentials(java.lang.String,java.util.concurrent.Executor) -> getCredentials
com.android.phone.callcomposer.CallComposerPictureManager$3$$ExternalSyntheticLambda1 -> com.android.phone.callcomposer.CallComposerPictureManager$3$$ExternalSyntheticLambda1:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureManager$3$$InternalSyntheticLambda$0$bac70b0d0fdab04a1b39e26bc5addac9a6de004e39f8cb1e4f4abc4c603f4ba1$1.f$0 -> f$0
    com.android.phone.callcomposer.GbaCredentialsSupplier com.android.phone.callcomposer.CallComposerPictureManager$3$$InternalSyntheticLambda$0$bac70b0d0fdab04a1b39e26bc5addac9a6de004e39f8cb1e4f4abc4c603f4ba1$1.f$1 -> f$1
    void com.android.phone.callcomposer.CallComposerPictureManager$3$$InternalSyntheticLambda$0$bac70b0d0fdab04a1b39e26bc5addac9a6de004e39f8cb1e4f4abc4c603f4ba1$1.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer,com.android.phone.callcomposer.GbaCredentialsSupplier) -> <init>
    void com.android.phone.callcomposer.CallComposerPictureManager$3$$InternalSyntheticLambda$0$bac70b0d0fdab04a1b39e26bc5addac9a6de004e39f8cb1e4f4abc4c603f4ba1$1.run() -> run
com.android.phone.callcomposer.CallComposerPictureManager$3$1 -> com.android.phone.callcomposer.CallComposerPictureManager$3$1:
    226:226:void <init>(com.android.phone.callcomposer.CallComposerPictureManager$3) -> <init>
    226:226:void onError(java.lang.Throwable) -> onError
    236:237:void onError(android.provider.CallLog$CallComposerLoggingException) -> onError
    226:226:void onResult(java.lang.Object) -> onResult
    229:230:void onResult(android.net.Uri) -> onResult
com.android.phone.callcomposer.CallComposerPictureManager$4 -> com.android.phone.callcomposer.CallComposerPictureManager$4:
    258:258:void <init>(com.android.phone.callcomposer.CallComposerPictureManager,java.util.function.Consumer) -> <init>
    258:258:void onError(java.lang.Throwable) -> onError
    268:270:void onError(android.provider.CallLog$CallComposerLoggingException) -> onError
    258:258:void onResult(java.lang.Object) -> onResult
    261:262:void onResult(android.net.Uri) -> onResult
com.android.phone.callcomposer.CallComposerPictureManager$5 -> com.android.phone.callcomposer.CallComposerPictureManager$5:
    329:329:void <init>(com.android.phone.callcomposer.CallComposerPictureManager,java.util.concurrent.CompletableFuture) -> <init>
    341:342:void onAuthenticationFailure(int) -> onAuthenticationFailure
    332:336:void onKeysAvailable(byte[],java.lang.String) -> onKeysAvailable
com.android.phone.callcomposer.CallComposerPictureManager$CallLogProxy -> com.android.phone.callcomposer.CallComposerPictureManager$CallLogProxy:
    99:99:void storeCallComposerPictureAsUser(android.content.Context,android.os.UserHandle,java.io.InputStream,java.util.concurrent.Executor,android.os.OutcomeReceiver) -> storeCallComposerPictureAsUser
com.android.phone.callcomposer.CallComposerPictureTransfer -> com.android.phone.callcomposer.CallComposerPictureTransfer:
    66:66:void <init>(android.content.Context,int,java.lang.String,java.util.concurrent.ExecutorService,com.android.phone.callcomposer.CallComposerPictureTransfer$1) -> <init>
    107:111:void <init>(android.content.Context,int,java.lang.String,java.util.concurrent.ExecutorService) -> <init>
    370:370:void deliverFailure(int) -> deliverFailure
    309:339:com.android.phone.callcomposer.ImageData downloadImageFromConnection(java.net.HttpURLConnection) -> downloadImageFromConnection
    302:304:com.android.phone.callcomposer.ImageData downloadImageWithAuth(android.net.Network,java.lang.String) -> downloadImageWithAuth
    154:213:void downloadPicture(com.android.phone.callcomposer.GbaCredentialsSupplier) -> downloadPicture
    220:226:java.util.concurrent.CompletableFuture getNetworkForCallComposer() -> getNetworkForCallComposer
    514:523:java.lang.String getUserAgent() -> getUserAgent
    344:360:void handleExceptionalCompletion(java.lang.Throwable) -> handleExceptionalCompletion
    193:193:java.lang.String lambda$downloadPicture$10(gov.nist.javax.sip.header.WWWAuthenticate,com.android.phone.callcomposer.GbaCredentials) -> lambda$downloadPicture$10
    197:197:void lambda$downloadPicture$11(java.lang.String,java.lang.Throwable) -> lambda$downloadPicture$11
    175:199:java.util.concurrent.CompletionStage lambda$downloadPicture$12(com.android.phone.callcomposer.GbaCredentialsSupplier,java.util.concurrent.CompletableFuture,java.net.HttpURLConnection) -> lambda$downloadPicture$12
    204:212:void lambda$downloadPicture$13(java.util.concurrent.CompletableFuture,java.util.concurrent.CompletableFuture) -> lambda$downloadPicture$13
    214:214:java.lang.Void lambda$downloadPicture$14(java.lang.Throwable) -> lambda$downloadPicture$14
    157:157:java.net.HttpURLConnection lambda$downloadPicture$7(android.net.Network) -> lambda$downloadPicture$7
    162:169:java.util.concurrent.CompletionStage lambda$downloadPicture$8(java.net.HttpURLConnection) -> lambda$downloadPicture$8
    188:188:java.util.concurrent.CompletionStage lambda$downloadPicture$9(com.android.phone.callcomposer.GbaCredentialsSupplier,gov.nist.javax.sip.header.WWWAuthenticate) -> lambda$downloadPicture$9
    282:297:java.lang.String lambda$obtainAuthenticateHeader$15(java.net.HttpURLConnection) -> lambda$obtainAuthenticateHeader$15
    123:123:java.net.HttpURLConnection lambda$uploadPicture$0(android.net.Network) -> lambda$uploadPicture$0
    128:128:java.util.concurrent.CompletionStage lambda$uploadPicture$1(com.android.phone.callcomposer.GbaCredentialsSupplier,gov.nist.javax.sip.header.WWWAuthenticate) -> lambda$uploadPicture$1
    134:134:java.lang.String lambda$uploadPicture$2(gov.nist.javax.sip.header.WWWAuthenticate,com.android.phone.callcomposer.GbaCredentials) -> lambda$uploadPicture$2
    138:138:void lambda$uploadPicture$3(java.lang.String,java.lang.Throwable) -> lambda$uploadPicture$3
    143:143:java.lang.String lambda$uploadPicture$4(com.android.phone.callcomposer.ImageData,android.net.Network,java.lang.String) -> lambda$uploadPicture$4
    146:146:void lambda$uploadPicture$5(java.lang.String) -> lambda$uploadPicture$5
    148:148:java.lang.Void lambda$uploadPicture$6(java.lang.Throwable) -> lambda$uploadPicture$6
    530:536:void logException(java.lang.String,java.lang.Throwable) -> logException
    375:375:com.android.internal.http.multipart.Part makeUploadPart(java.lang.String,java.lang.String,java.lang.String,byte[]) -> makeUploadPart
    279:279:java.util.concurrent.CompletableFuture obtainAuthenticateHeader(java.net.HttpURLConnection) -> obtainAuthenticateHeader
    470:491:java.lang.String parseImageUploadResponseXmlForUrl(java.lang.String) -> parseImageUploadResponseXmlForUrl
    257:269:java.net.HttpURLConnection prepareImageDownloadRequest(android.net.Network,java.lang.String) -> prepareImageDownloadRequest
    238:251:java.net.HttpURLConnection prepareInitialPost(android.net.Network,java.lang.String) -> prepareInitialPost
    497:510:java.lang.String readResponseBody(java.net.HttpURLConnection) -> readResponseBody
    366:366:void scheduleRetry() -> scheduleRetry
    418:464:java.lang.String sendActualImageUpload(android.net.Network,java.lang.String,com.android.phone.callcomposer.ImageData) -> sendActualImageUpload
    116:116:void setCallback(com.android.phone.callcomposer.CallComposerPictureTransfer$PictureCallback) -> setCallback
    121:147:void uploadPicture(com.android.phone.callcomposer.ImageData,com.android.phone.callcomposer.GbaCredentialsSupplier) -> uploadPicture
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda0 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda0:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$3.f$0 -> f$0
    java.util.concurrent.CompletableFuture com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$3.f$1 -> f$1
    java.util.concurrent.CompletableFuture com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$3.f$2 -> f$2
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$3.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer,java.util.concurrent.CompletableFuture,java.util.concurrent.CompletableFuture) -> <init>
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$3.run() -> run
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda1 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda1:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$5.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$5.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$5.accept(java.lang.Object,java.lang.Object) -> accept
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda10 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda10:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$1.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$1.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$1.apply(java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda11 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda11:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$1.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$1.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$1.apply(java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda12 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda12:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$3.f$0 -> f$0
    com.android.phone.callcomposer.GbaCredentialsSupplier com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$3.f$1 -> f$1
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$3.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer,com.android.phone.callcomposer.GbaCredentialsSupplier) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$3.apply(java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda13 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda13:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$1.f$0 -> f$0
    com.android.phone.callcomposer.GbaCredentialsSupplier com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$1.f$1 -> f$1
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$1.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer,com.android.phone.callcomposer.GbaCredentialsSupplier) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$1.apply(java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda14 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda14:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$2.f$0 -> f$0
    com.android.phone.callcomposer.GbaCredentialsSupplier com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$2.f$1 -> f$1
    java.util.concurrent.CompletableFuture com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$2.f$2 -> f$2
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$2.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer,com.android.phone.callcomposer.GbaCredentialsSupplier,java.util.concurrent.CompletableFuture) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$2.apply(java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda16 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda16:
    com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$4 com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$4.INSTANCE -> INSTANCE
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$4.<clinit>() -> <clinit>
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$4.<init>() -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$4.apply(java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda17 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda17:
    com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$8 com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$8.INSTANCE -> INSTANCE
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$8.<clinit>() -> <clinit>
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$8.<init>() -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$8.apply(java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda18 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda18:
    java.net.HttpURLConnection com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$ce28b3428c3e3a836251d9a0573a346d186cbeec762a200bb6a5bff72b1ca16a$0.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$ce28b3428c3e3a836251d9a0573a346d186cbeec762a200bb6a5bff72b1ca16a$0.<init>(java.net.HttpURLConnection) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$ce28b3428c3e3a836251d9a0573a346d186cbeec762a200bb6a5bff72b1ca16a$0.get() -> get
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda2 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda2:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$3.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$3.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$3.accept(java.lang.Object,java.lang.Object) -> accept
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda3 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda3:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$4.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$4.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$4.apply(java.lang.Object,java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda4 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda4:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$4.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$4.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$4.apply(java.lang.Object,java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda5 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda5:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$2.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$2.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$2822003967b9e991dd3eba09f0b6448d5c4c42eb7612edca40be9ee33ebde121$2.apply(java.lang.Object,java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda6 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda6:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$6.f$0 -> f$0
    com.android.phone.callcomposer.ImageData com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$6.f$1 -> f$1
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$6.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer,com.android.phone.callcomposer.ImageData) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$6.apply(java.lang.Object,java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda7 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda7:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$7.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$7.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$7.accept(java.lang.Object) -> accept
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda8 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda8:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$0.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$0.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$3ecda0562733d11e40c1f9cef5d3876cccd021b81f38bf64842ede4a36e34b5d$0.apply(java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda9 -> com.android.phone.callcomposer.CallComposerPictureTransfer$$ExternalSyntheticLambda9:
    com.android.phone.callcomposer.CallComposerPictureTransfer com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$0.f$0 -> f$0
    void com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$0.<init>(com.android.phone.callcomposer.CallComposerPictureTransfer) -> <init>
    java.lang.Object com.android.phone.callcomposer.CallComposerPictureTransfer$$InternalSyntheticLambda$0$0ecd0fa169a27361ee40888fe111c9ebdf97473e38efd45228e697cbb7e36fcb$0.apply(java.lang.Object) -> apply
com.android.phone.callcomposer.CallComposerPictureTransfer$1 -> com.android.phone.callcomposer.CallComposerPictureTransfer$1:
    227:227:void <init>(com.android.phone.callcomposer.CallComposerPictureTransfer,java.util.concurrent.CompletableFuture) -> <init>
    230:230:void onAvailable(android.net.Network) -> onAvailable
com.android.phone.callcomposer.CallComposerPictureTransfer$2 -> com.android.phone.callcomposer.CallComposerPictureTransfer$2:
    375:375:void <init>(java.lang.String,java.lang.String,java.lang.String,byte[]) -> <init>
    383:383:java.lang.String getContentType() -> getContentType
    378:378:java.lang.String getName() -> getName
    412:412:long lengthOfData() -> lengthOfData
    407:407:void sendData(java.io.OutputStream) -> sendData
    398:401:void sendDispositionHeader(java.io.OutputStream) -> sendDispositionHeader
com.android.phone.callcomposer.CallComposerPictureTransfer$3 -> com.android.phone.callcomposer.CallComposerPictureTransfer$3:
    470:470:void <init>() -> <init>
    476:476:java.lang.String getPrefix(java.lang.String) -> getPrefix
    480:480:java.util.Iterator getPrefixes(java.lang.String) -> getPrefixes
com.android.phone.callcomposer.CallComposerPictureTransfer$Factory -> com.android.phone.callcomposer.CallComposerPictureTransfer$Factory:
    80:80:com.android.phone.callcomposer.CallComposerPictureTransfer create(android.content.Context,int,java.lang.String,java.util.concurrent.ExecutorService) -> create
com.android.phone.callcomposer.CallComposerPictureTransfer$NetworkAccessException -> com.android.phone.callcomposer.CallComposerPictureTransfer$NetworkAccessException:
    94:95:void <init>(int) -> <init>
com.android.phone.callcomposer.DigestAuthUtils -> com.android.phone.callcomposer.DigestAuthUtils:
    34:34:void <init>() -> <init>
    140:140:java.lang.String base16(byte[]) -> base16
    97:112:java.lang.String computeResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],java.lang.String,java.lang.String) -> computeResponse
    124:130:java.lang.String generateA1Hash(java.lang.String,java.lang.String,byte[]) -> generateA1Hash
    134:136:java.lang.String generateA2Hash(java.lang.String,java.lang.String) -> generateA2Hash
    56:92:java.lang.String generateAuthorizationHeader(gov.nist.javax.sip.header.WWWAuthenticate,com.android.phone.callcomposer.GbaCredentials,java.lang.String,java.lang.String) -> generateAuthorizationHeader
    145:147:java.security.MessageDigest getMd5Digest() -> getMd5Digest
    116:119:java.lang.String makeClientNonce() -> makeClientNonce
    43:48:gov.nist.javax.sip.header.WWWAuthenticate parseAuthenticateHeader(java.lang.String) -> parseAuthenticateHeader
com.android.phone.callcomposer.DigestAuthUtils$WorkaroundURI -> com.android.phone.callcomposer.DigestAuthUtils$WorkaroundURI:
    152:154:void <init>(java.lang.String) -> <init>
com.android.phone.callcomposer.GbaCredentials -> com.android.phone.callcomposer.GbaCredentials:
    23:25:void <init>(java.lang.String,byte[]) -> <init>
    33:33:byte[] getKey() -> getKey
    29:29:java.lang.String getTransactionId() -> getTransactionId
com.android.phone.callcomposer.ImageData -> com.android.phone.callcomposer.ImageData:
    25:28:void <init>(byte[],java.lang.String,java.lang.String) -> <init>
    40:40:java.lang.String getId() -> getId
    32:32:byte[] getImageBytes() -> getImageBytes
    36:36:java.lang.String getMimeType() -> getMimeType
    44:44:void setId(java.lang.String) -> setId
com.android.phone.common.R$styleable -> com.android.phone.common.R$styleable:
    9446:19557:void <clinit>() -> <clinit>
com.android.phone.common.dialpad.DialpadKeyButton -> com.android.phone.common.dialpad.DialpadKeyButton:
    48:48:void <clinit>() -> <clinit>
    54:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:91:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:46:void access$000(com.android.phone.common.dialpad.DialpadKeyButton,boolean) -> access$000
    46:46:java.lang.CharSequence access$100(com.android.phone.common.dialpad.DialpadKeyButton) -> access$100
    228:231:void cancelLongHover() -> cancelLongHover
    95:95:void initForAccessibility(android.content.Context) -> initForAccessibility
    148:191:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    126:131:void onSizeChanged(int,int,int,int) -> onSizeChanged
    137:141:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    109:112:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    100:103:void setLongHoverContentDescription(java.lang.CharSequence) -> setLongHoverContentDescription
    214:222:void setLongHovered(boolean) -> setLongHovered
    81:81:void setOnPressedListener(com.android.phone.common.dialpad.DialpadKeyButton$OnPressedListener) -> setOnPressedListener
    118:120:void setPressed(boolean) -> setPressed
    200:210:void simulateClickForAccessibility() -> simulateClickForAccessibility
com.android.phone.common.dialpad.DialpadKeyButton$1 -> com.android.phone.common.dialpad.DialpadKeyButton$1:
    157:157:void <init>(com.android.phone.common.dialpad.DialpadKeyButton) -> <init>
    160:161:void run() -> run
com.android.phone.common.dialpad.DialpadTextView -> com.android.phone.common.dialpad.DialpadTextView:
    35:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:55:void draw(android.graphics.Canvas) -> draw
    64:70:void onMeasure(int,int) -> onMeasure
com.android.phone.common.dialpad.DialpadView -> com.android.phone.common.dialpad.DialpadView:
    54:54:void <clinit>() -> <clinit>
    90:90:void <init>(android.content.Context) -> <init>
    94:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:109:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    219:222:android.graphics.drawable.Drawable getDrawableCompat(android.content.Context,int) -> getDrawableCompat
    115:127:void onFinishInflate() -> onFinishInflate
    132:214:void setupKeypad() -> setupKeypad
com.android.phone.common.dialpad.DigitsEditText -> com.android.phone.common.dialpad.DigitsEditText:
    39:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:50:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    56:61:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.android.phone.common.util.ViewUtil -> com.android.phone.common.util.ViewUtil:
    62:62:void <clinit>() -> <clinit>
    96:103:void resizeText(android.widget.TextView,int,int) -> resizeText
    75:77:void setupFloatingActionButton(android.view.View,android.content.res.Resources) -> setupFloatingActionButton
com.android.phone.common.util.ViewUtil$1 -> com.android.phone.common.util.ViewUtil$1:
    62:62:void <init>() -> <init>
    65:65:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.android.phone.common.widget.ResizingTextEditText -> com.android.phone.common.widget.ResizingTextEditText:
    33:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:56:void onSizeChanged(int,int,int,int) -> onSizeChanged
    46:48:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    61:61:void setResizeEnabled(boolean) -> setResizeEnabled
com.android.phone.euicc.EuiccPrivilegedActionUiDispatcherActivity -> com.android.phone.euicc.EuiccPrivilegedActionUiDispatcherActivity:
    31:31:void <init>() -> <init>
    37:53:android.content.Intent getEuiccUiIntent() -> getEuiccUiIntent
com.android.phone.euicc.EuiccPublicActionUiDispatcherActivity -> com.android.phone.euicc.EuiccPublicActionUiDispatcherActivity:
    30:30:void <init>() -> <init>
    36:46:android.content.Intent getEuiccUiIntent() -> getEuiccUiIntent
com.android.phone.euicc.EuiccResolutionUiDispatcherActivity -> com.android.phone.euicc.EuiccResolutionUiDispatcherActivity:
    38:42:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    48:64:android.content.Intent getEuiccUiIntent() -> getEuiccUiIntent
    72:76:void onDispatchFailure() -> onDispatchFailure
com.android.phone.euicc.EuiccUiDispatcherActivity -> com.android.phone.euicc.EuiccUiDispatcherActivity:
    49:59:void <init>() -> <init>
    164:164:android.content.pm.ActivityInfo findBestActivity(android.content.Intent) -> findBestActivity
    212:216:java.util.Set getAllLuiAppPackageNames(android.content.Intent) -> getAllLuiAppPackageNames
    136:148:android.content.Intent getEuiccUiIntent() -> getEuiccUiIntent
    170:183:void grantDefaultPermissionsToLuiApp(android.content.pm.ActivityInfo) -> grantDefaultPermissionsToLuiApp
    175:178:void lambda$grantDefaultPermissionsToLuiApp$0(java.util.concurrent.CountDownLatch,java.lang.Boolean) -> lambda$grantDefaultPermissionsToLuiApp$0
    196:199:void lambda$revokePermissionFromLuiApps$1(java.util.concurrent.CountDownLatch,java.lang.Boolean) -> lambda$revokePermissionFromLuiApps$1
    64:94:void onCreate(android.os.Bundle) -> onCreate
    157:158:void onDestroy() -> onDestroy
    100:122:android.content.Intent resolveEuiccUiIntent() -> resolveEuiccUiIntent
    190:205:void revokePermissionFromLuiApps(android.content.Intent) -> revokePermissionFromLuiApps
com.android.phone.euicc.EuiccUiDispatcherActivity$$ExternalSyntheticLambda0 -> com.android.phone.euicc.EuiccUiDispatcherActivity$$ExternalSyntheticLambda0:
    java.util.concurrent.CountDownLatch com.android.phone.euicc.EuiccUiDispatcherActivity$$InternalSyntheticLambda$0$a7ff721383bdbf49a0c75606bf55974c097f2467cd25bf4cf814722eea69ec70$0.f$0 -> f$0
    void com.android.phone.euicc.EuiccUiDispatcherActivity$$InternalSyntheticLambda$0$a7ff721383bdbf49a0c75606bf55974c097f2467cd25bf4cf814722eea69ec70$0.<init>(java.util.concurrent.CountDownLatch) -> <init>
    void com.android.phone.euicc.EuiccUiDispatcherActivity$$InternalSyntheticLambda$0$a7ff721383bdbf49a0c75606bf55974c097f2467cd25bf4cf814722eea69ec70$0.accept(java.lang.Object) -> accept
com.android.phone.euicc.EuiccUiDispatcherActivity$$ExternalSyntheticLambda1 -> com.android.phone.euicc.EuiccUiDispatcherActivity$$ExternalSyntheticLambda1:
    java.util.concurrent.CountDownLatch com.android.phone.euicc.EuiccUiDispatcherActivity$$InternalSyntheticLambda$0$e3f35feef189b7f02e39ac965a8a5fca8f5f5984098da00f55eee546f42a79e6$0.f$0 -> f$0
    void com.android.phone.euicc.EuiccUiDispatcherActivity$$InternalSyntheticLambda$0$e3f35feef189b7f02e39ac965a8a5fca8f5f5984098da00f55eee546f42a79e6$0.<init>(java.util.concurrent.CountDownLatch) -> <init>
    void com.android.phone.euicc.EuiccUiDispatcherActivity$$InternalSyntheticLambda$0$e3f35feef189b7f02e39ac965a8a5fca8f5f5984098da00f55eee546f42a79e6$0.accept(java.lang.Object) -> accept
com.android.phone.euicc.EuiccUiDispatcherActivity$1 -> com.android.phone.euicc.EuiccUiDispatcherActivity$1:
    72:73:void <init>(com.android.phone.euicc.EuiccUiDispatcherActivity) -> <init>
    77:77:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.android.phone.otasp.OtaspActivationService -> com.android.phone.otasp.OtaspActivationService:
    48:71:void <clinit>() -> <clinit>
    47:112:void <init>() -> <init>
    47:47:void access$000(java.lang.String) -> access$000
    47:47:void access$100(com.android.phone.otasp.OtaspActivationService) -> access$100
    47:47:void access$200(com.android.phone.otasp.OtaspActivationService) -> access$200
    47:47:void access$300(com.android.phone.otasp.OtaspActivationService,android.os.AsyncResult) -> access$300
    47:47:void access$400(java.lang.String) -> access$400
    226:226:void logd(java.lang.String) -> logd
    230:230:void loge(java.lang.String) -> loge
    176:179:void onCdmaProvisionStatusUpdate(android.os.AsyncResult) -> onCdmaProvisionStatusUpdate
    203:205:void onComplete() -> onComplete
    79:99:void onCreate() -> onCreate
    189:198:void onOtaspCallStateChanged() -> onOtaspCallStateChanged
    149:166:void onStartOtaspCall() -> onStartOtaspCall
    209:213:void unregisterAll() -> unregisterAll
    217:222:void updateActivationState(android.content.Context,boolean) -> updateActivationState
com.android.phone.otasp.OtaspActivationService$1 -> com.android.phone.otasp.OtaspActivationService$1:
    112:112:void <init>(com.android.phone.otasp.OtaspActivationService) -> <init>
    115:137:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.otasp.OtaspSimStateReceiver -> com.android.phone.otasp.OtaspSimStateReceiver:
    33:33:void <clinit>() -> <clinit>
    32:39:void <init>() -> <init>
    32:32:void access$000(java.lang.String) -> access$000
    32:32:android.content.Context access$100(com.android.phone.otasp.OtaspSimStateReceiver) -> access$100
    72:86:boolean isCarrierSupported() -> isCarrierSupported
    108:108:void logd(java.lang.String) -> logd
    92:96:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    103:104:void registerOtaspChangedHandler() -> registerOtaspChangedHandler
com.android.phone.otasp.OtaspSimStateReceiver$1 -> com.android.phone.otasp.OtaspSimStateReceiver$1:
    39:39:void <init>(com.android.phone.otasp.OtaspSimStateReceiver) -> <init>
    43:61:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.settings.AccessibilitySettingsActivity -> com.android.phone.settings.AccessibilitySettingsActivity:
    27:27:void <init>() -> <init>
    31:40:void onCreate(android.os.Bundle) -> onCreate
    45:49:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.android.phone.settings.AccessibilitySettingsFragment -> com.android.phone.settings.AccessibilitySettingsFragment:
    52:52:void <clinit>() -> <clinit>
    51:62:void <init>() -> <init>
    51:51:android.content.Context access$100(com.android.phone.settings.AccessibilitySettingsFragment) -> access$100
    51:51:boolean access$200(com.android.phone.settings.AccessibilitySettingsFragment) -> access$200
    51:51:boolean access$300(com.android.phone.settings.AccessibilitySettingsFragment) -> access$300
    291:292:boolean isCarrierAllowRttWhenRoaming(int) -> isCarrierAllowRttWhenRoaming
    250:258:boolean isOnWfc() -> isOnWfc
    280:282:boolean isTtySupportedByCarrier() -> isTtySupportedByCarrier
    235:242:boolean isVideoCallOrConferenceInProgress() -> isVideoCallOrConferenceInProgress
    201:221:boolean isVolteTtySupportedInAnySlot() -> isVolteTtySupportedInAnySlot
    92:142:void onCreate(android.os.Bundle) -> onCreate
    157:160:void onPause() -> onPause
    165:191:boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    148:151:void onResume() -> onResume
    267:268:boolean shouldShowRttSetting() -> shouldShowRttSetting
com.android.phone.settings.AccessibilitySettingsFragment$$ExternalSyntheticLambda0 -> com.android.phone.settings.AccessibilitySettingsFragment$$ExternalSyntheticLambda0:
    java.util.concurrent.LinkedBlockingQueue com.android.phone.settings.AccessibilitySettingsFragment$$InternalSyntheticLambda$0$02488631eb921fd7eca51ba558dc0abdc80f899856d81ff13b078435edbf3728$0.f$0 -> f$0
    void com.android.phone.settings.AccessibilitySettingsFragment$$InternalSyntheticLambda$0$02488631eb921fd7eca51ba558dc0abdc80f899856d81ff13b078435edbf3728$0.<init>(java.util.concurrent.LinkedBlockingQueue) -> <init>
    void com.android.phone.settings.AccessibilitySettingsFragment$$InternalSyntheticLambda$0$02488631eb921fd7eca51ba558dc0abdc80f899856d81ff13b078435edbf3728$0.accept(java.lang.Object) -> accept
com.android.phone.settings.AccessibilitySettingsFragment$AccessibilityTelephonyCallback -> com.android.phone.settings.AccessibilitySettingsFragment$AccessibilityTelephonyCallback:
    64:64:void <init>(com.android.phone.settings.AccessibilitySettingsFragment) -> <init>
    64:64:void <init>(com.android.phone.settings.AccessibilitySettingsFragment,com.android.phone.settings.AccessibilitySettingsFragment$1) -> <init>
    69:78:void onCallStateChanged(int) -> onCallStateChanged
com.android.phone.settings.AccountSelectionPreference -> com.android.phone.settings.AccountSelectionPreference:
    52:52:void <init>(android.content.Context) -> <init>
    49:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    112:121:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    139:141:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    62:62:void setListener(com.android.phone.settings.AccountSelectionPreference$AccountSelectionListener) -> setListener
    75:106:void setModel(android.telecom.TelecomManager,java.util.List,android.telecom.PhoneAccountHandle,java.lang.CharSequence) -> setModel
com.android.phone.settings.BandMode -> com.android.phone.settings.BandMode:
    58:58:void <clinit>() -> <clinit>
    50:229:void <init>() -> <init>
    50:50:com.android.phone.settings.BandMode$BandListItem access$000(com.android.phone.settings.BandMode) -> access$000
    50:50:com.android.phone.settings.BandMode$BandListItem access$002(com.android.phone.settings.BandMode,com.android.phone.settings.BandMode$BandListItem) -> access$002
    50:50:android.os.Handler access$100(com.android.phone.settings.BandMode) -> access$100
    50:50:com.android.internal.telephony.Phone access$200(com.android.phone.settings.BandMode) -> access$200
    50:50:java.lang.String[] access$300() -> access$300
    50:50:void access$400(com.android.phone.settings.BandMode,android.os.AsyncResult) -> access$400
    50:50:void access$500(com.android.phone.settings.BandMode,java.lang.Throwable) -> access$500
    160:200:void bandListLoaded(android.os.AsyncResult) -> bandListLoaded
    219:221:void clearList() -> clearList
    204:215:void displayBandSelectionResult(java.lang.Throwable) -> displayBandSelectionResult
    142:153:void loadBandList() -> loadBandList
    89:102:void onCreate(android.os.Bundle) -> onCreate
com.android.phone.settings.BandMode$1 -> com.android.phone.settings.BandMode$1:
    106:106:void <init>(com.android.phone.settings.BandMode) -> <init>
    110:120:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.phone.settings.BandMode$2 -> com.android.phone.settings.BandMode$2:
    229:229:void <init>(com.android.phone.settings.BandMode) -> <init>
    232:247:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.settings.BandMode$BandListItem -> com.android.phone.settings.BandMode$BandListItem:
    125:128:void <init>(int) -> <init>
    132:132:int getBand() -> getBand
    136:137:java.lang.String toString() -> toString
com.android.phone.settings.CallForwardInfoUtil -> com.android.phone.settings.CallForwardInfoUtil:
    98:116:com.android.internal.telephony.CallForwardInfo getCallForwardInfo(com.android.internal.telephony.CallForwardInfo[],int) -> getCallForwardInfo
    130:130:boolean hasForwardingNumber(com.android.internal.telephony.CallForwardInfo) -> hasForwardingNumber
    48:50:com.android.internal.telephony.CallForwardInfo infoForReason(com.android.internal.telephony.CallForwardInfo[],int) -> infoForReason
    126:126:boolean isServiceClassVoice(com.android.internal.telephony.CallForwardInfo) -> isServiceClassVoice
    65:65:boolean isUpdateRequired(com.android.internal.telephony.CallForwardInfo,com.android.internal.telephony.CallForwardInfo) -> isUpdateRequired
    78:82:void setCallForwardingOption(com.android.internal.telephony.Phone,com.android.internal.telephony.CallForwardInfo,android.os.Message) -> setCallForwardingOption
com.android.phone.settings.PhoneAccountSettingsActivity -> com.android.phone.settings.PhoneAccountSettingsActivity:
    27:27:void <init>() -> <init>
    31:40:void onCreate(android.os.Bundle) -> onCreate
    45:49:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.android.phone.settings.PhoneAccountSettingsFragment -> com.android.phone.settings.PhoneAccountSettingsFragment:
    62:62:void <clinit>() -> <clinit>
    36:76:void <init>() -> <init>
    36:36:void access$000(com.android.phone.settings.PhoneAccountSettingsFragment) -> access$000
    36:36:android.telephony.TelephonyManager access$100(com.android.phone.settings.PhoneAccountSettingsFragment) -> access$100
    36:36:android.telephony.SubscriptionManager access$200(com.android.phone.settings.PhoneAccountSettingsFragment) -> access$200
    36:36:java.lang.String access$300(com.android.phone.settings.PhoneAccountSettingsFragment,java.lang.String) -> access$300
    407:421:android.content.Intent buildConfigureIntent(android.content.Context,android.telecom.PhoneAccountHandle,java.lang.String) -> buildConfigureIntent
    391:399:android.content.Intent buildPhoneAccountConfigureIntent(android.content.Context,android.telecom.PhoneAccountHandle) -> buildPhoneAccountConfigureIntent
    357:374:java.util.List getCallingAccounts(boolean,boolean) -> getCallingAccounts
    385:385:android.telecom.PhoneAccountHandle getEmergencyPhoneAccount() -> getEmergencyPhoneAccount
    461:511:android.content.Intent getLaunchSmartForwardingMenuIntent() -> getLaunchSmartForwardingMenuIntent
    210:320:void initAccountList(java.util.List) -> initAccountList
    478:478:boolean lambda$getLaunchSmartForwardingMenuIntent$0(android.telephony.SubscriptionInfo) -> lambda$getLaunchSmartForwardingMenuIntent$0
    485:485:android.os.PersistableBundle lambda$getLaunchSmartForwardingMenuIntent$1(android.telephony.CarrierConfigManager,android.telephony.SubscriptionInfo) -> lambda$getLaunchSmartForwardingMenuIntent$1
    487:487:java.lang.String lambda$getLaunchSmartForwardingMenuIntent$3(android.os.PersistableBundle) -> lambda$getLaunchSmartForwardingMenuIntent$3
    489:489:boolean lambda$getLaunchSmartForwardingMenuIntent$4(java.lang.String) -> lambda$getLaunchSmartForwardingMenuIntent$4
    174:175:boolean onAccountSelected(com.android.phone.settings.AccountSelectionPreference,android.telecom.PhoneAccountHandle) -> onAccountSelected
    188:189:void onAccountSelectionDialogShow(com.android.phone.settings.AccountSelectionPreference) -> onAccountSelectionDialogShow
    87:91:void onCreate(android.os.Bundle) -> onCreate
    148:150:void onPause() -> onPause
    96:142:void onResume() -> onResume
    329:350:void updateAccounts() -> updateAccounts
    201:205:void updateDefaultOutgoingAccountsModel() -> updateDefaultOutgoingAccountsModel
    438:453:void updateMakeCallsOptions() -> updateMakeCallsOptions
com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda0 -> com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda0:
    android.telephony.CarrierConfigManager com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$1.f$0 -> f$0
    void com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$1.<init>(android.telephony.CarrierConfigManager) -> <init>
    java.lang.Object com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$1.apply(java.lang.Object) -> apply
com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda1 -> com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda1:
    com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$3 com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$3.INSTANCE -> INSTANCE
    void com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$3.<clinit>() -> <clinit>
    void com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$3.<init>() -> <init>
    java.lang.Object com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$3.apply(java.lang.Object) -> apply
com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda2 -> com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda2:
    com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$2 com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$2.INSTANCE -> INSTANCE
    void com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$2.<clinit>() -> <clinit>
    void com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$2.<init>() -> <init>
    boolean com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$2.test(java.lang.Object) -> test
com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda3 -> com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda3:
    com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$0 com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$0.INSTANCE -> INSTANCE
    void com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$0.<clinit>() -> <clinit>
    void com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$0.<init>() -> <init>
    boolean com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$0.test(java.lang.Object) -> test
com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda4 -> com.android.phone.settings.PhoneAccountSettingsFragment$$ExternalSyntheticLambda4:
    com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$4 com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$4.INSTANCE -> INSTANCE
    void com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$4.<clinit>() -> <clinit>
    void com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$4.<init>() -> <init>
    boolean com.android.phone.settings.PhoneAccountSettingsFragment$$InternalSyntheticLambda$0$e72d2b73fe4a0f5d1a35f7f27b28a5baa48cf6e75776e8ba2adbcde106acfd0b$4.test(java.lang.Object) -> test
com.android.phone.settings.PhoneAccountSettingsFragment$1 -> com.android.phone.settings.PhoneAccountSettingsFragment$1:
    78:78:void <init>(com.android.phone.settings.PhoneAccountSettingsFragment) -> <init>
    81:81:void onSubscriptionsChanged() -> onSubscriptionsChanged
com.android.phone.settings.PhoneAccountSettingsFragment$2 -> com.android.phone.settings.PhoneAccountSettingsFragment$2:
    231:231:void <init>(com.android.phone.settings.PhoneAccountSettingsFragment) -> <init>
    231:231:int compare(java.lang.Object,java.lang.Object) -> compare
    237:267:int compare(android.telecom.PhoneAccount,android.telecom.PhoneAccount) -> compare
com.android.phone.settings.PickSmsSubscriptionActivity -> com.android.phone.settings.PickSmsSubscriptionActivity:
    54:57:void <clinit>() -> <clinit>
    45:90:void <init>() -> <init>
    66:69:void addPendingResult(com.android.internal.telephony.IIntegerConsumer) -> addPendingResult
    148:151:void launchSmsPicker(android.content.Intent) -> launchSmsPicker
    133:143:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    94:98:void onCreate(android.os.Bundle) -> onCreate
    103:103:void onNewIntent(android.content.Intent) -> onNewIntent
    108:115:void onResume() -> onResume
    121:126:void onStop() -> onStop
    74:84:void sendResultAndClear(int) -> sendResultAndClear
com.android.phone.settings.RadioInfo -> com.android.phone.settings.RadioInfo:
    117:195:void <clinit>() -> <clinit>
    114:1816:void <init>() -> <init>
    114:114:void access$000(com.android.phone.settings.RadioInfo,int,int) -> access$000
    114:114:void access$1000(java.lang.String) -> access$1000
    114:114:java.util.List access$1100(com.android.phone.settings.RadioInfo) -> access$1100
    114:114:java.util.List access$1102(com.android.phone.settings.RadioInfo,java.util.List) -> access$1102
    114:114:void access$1200(com.android.phone.settings.RadioInfo,java.util.List) -> access$1200
    114:114:void access$1300(com.android.phone.settings.RadioInfo,android.telephony.SignalStrength) -> access$1300
    114:114:void access$1400(com.android.phone.settings.RadioInfo,android.telephony.ServiceState) -> access$1400
    114:114:void access$1500(com.android.phone.settings.RadioInfo) -> access$1500
    114:114:void access$1600(com.android.phone.settings.RadioInfo) -> access$1600
    114:114:void access$1700(com.android.phone.settings.RadioInfo,android.telephony.ServiceState) -> access$1700
    114:114:android.widget.EditText access$1800(com.android.phone.settings.RadioInfo) -> access$1800
    114:114:android.widget.Button access$1900(com.android.phone.settings.RadioInfo) -> access$1900
    114:114:void access$200(com.android.phone.settings.RadioInfo) -> access$200
    114:114:android.widget.TextView access$2000(com.android.phone.settings.RadioInfo) -> access$2000
    114:114:void access$2100(com.android.phone.settings.RadioInfo,java.util.List) -> access$2100
    114:114:android.os.Handler access$2200(com.android.phone.settings.RadioInfo) -> access$2200
    114:114:com.android.internal.telephony.Phone access$2300(com.android.phone.settings.RadioInfo) -> access$2300
    114:114:android.telephony.TelephonyManager access$2400(com.android.phone.settings.RadioInfo) -> access$2400
    114:114:java.lang.String access$2500(com.android.phone.settings.RadioInfo) -> access$2500
    114:114:android.widget.TextView access$2600(com.android.phone.settings.RadioInfo) -> access$2600
    114:114:java.lang.String access$2700(com.android.phone.settings.RadioInfo) -> access$2700
    114:114:android.widget.TextView access$2800(com.android.phone.settings.RadioInfo) -> access$2800
    114:114:java.lang.String access$2900(com.android.phone.settings.RadioInfo) -> access$2900
    114:114:void access$300(com.android.phone.settings.RadioInfo) -> access$300
    114:114:android.widget.TextView access$3000(com.android.phone.settings.RadioInfo) -> access$3000
    114:114:void access$3100(com.android.phone.settings.RadioInfo) -> access$3100
    114:114:void access$3200(com.android.phone.settings.RadioInfo) -> access$3200
    114:114:com.android.ims.ImsManager access$3300(com.android.phone.settings.RadioInfo) -> access$3300
    114:114:boolean access$3400(com.android.phone.settings.RadioInfo) -> access$3400
    114:114:void access$3500(com.android.phone.settings.RadioInfo) -> access$3500
    114:114:void access$3600(com.android.phone.settings.RadioInfo) -> access$3600
    114:114:java.util.concurrent.ThreadPoolExecutor access$3700(com.android.phone.settings.RadioInfo) -> access$3700
    114:114:void access$3800(com.android.phone.settings.RadioInfo) -> access$3800
    114:114:int access$3900(com.android.phone.settings.RadioInfo) -> access$3900
    114:114:int access$3902(com.android.phone.settings.RadioInfo,int) -> access$3902
    114:114:void access$400(com.android.phone.settings.RadioInfo) -> access$400
    114:114:java.lang.String[] access$4000() -> access$4000
    114:114:java.lang.String[] access$4100() -> access$4100
    114:114:int access$4202(com.android.phone.settings.RadioInfo,int) -> access$4202
    114:114:void access$4300(com.android.phone.settings.RadioInfo,int,int) -> access$4300
    114:114:int access$4402(com.android.phone.settings.RadioInfo,int) -> access$4402
    114:114:int[] access$4500() -> access$4500
    114:114:void access$4600(com.android.phone.settings.RadioInfo) -> access$4600
    114:114:android.widget.Switch access$4700(com.android.phone.settings.RadioInfo) -> access$4700
    114:114:android.widget.Switch access$4800(com.android.phone.settings.RadioInfo) -> access$4800
    114:114:void access$4900(com.android.phone.settings.RadioInfo) -> access$4900
    114:114:void access$500(com.android.phone.settings.RadioInfo,int) -> access$500
    114:114:boolean access$602(com.android.phone.settings.RadioInfo,boolean) -> access$602
    114:114:void access$700(com.android.phone.settings.RadioInfo) -> access$700
    114:114:boolean access$802(com.android.phone.settings.RadioInfo,boolean) -> access$802
    114:114:void access$900(com.android.phone.settings.RadioInfo) -> access$900
    904:916:java.lang.String buildCdmaInfoString(android.telephony.CellInfoCdma) -> buildCdmaInfoString
    969:1020:java.lang.String buildCellInfoString(java.util.List) -> buildCellInfoString
    920:931:java.lang.String buildGsmInfoString(android.telephony.CellInfoGsm) -> buildGsmInfoString
    935:950:java.lang.String buildLteInfoString(android.telephony.CellInfoLte) -> buildLteInfoString
    954:965:java.lang.String buildWcdmaInfoString(android.telephony.CellInfoWcdma) -> buildWcdmaInfoString
    1812:1813:boolean dsdsModeOnly() -> dsdsModeOnly
    1740:1745:java.lang.String getCarrierProvisioningAppString() -> getCarrierProvisioningAppString
    1771:1774:boolean getCbrsDataState() -> getCbrsDataState
    874:874:java.lang.String getCellInfoDisplayString(int) -> getCellInfoDisplayString
    886:900:java.lang.String getConnectionStatusString(android.telephony.CellInfo) -> getConnectionStatusString
    630:632:android.content.Intent getParentActivityIntent() -> getParentActivityIntent
    806:809:java.lang.String[] getPhoneIndexLabels(android.telephony.TelephonyManager) -> getPhoneIndexLabels
    1233:1246:void httpClientTest() -> httpClientTest
    1753:1753:boolean isCbrsSupported() -> isCbrsSupported
    1801:1801:boolean isDsdsEnabled() -> isDsdsEnabled
    1796:1796:boolean isDsdsSupported() -> isDsdsSupported
    1567:1573:boolean isEabEnabledByPlatform() -> isEabEnabledByPlatform
    1537:1537:boolean isEabProvisioned() -> isEabProvisioned
    1549:1562:boolean isFeatureProvisioned(int,boolean) -> isFeatureProvisioned
    1492:1494:boolean isImsVolteProvisioned() -> isImsVolteProvisioned
    1507:1509:boolean isImsVtProvisioned() -> isImsVtProvisioned
    1522:1524:boolean isImsWfcProvisioned() -> isImsWfcProvisioned
    1427:1427:boolean isRadioOn() -> isRadioOn
    1659:1665:void lambda$new$4(android.view.View) -> lambda$new$4
    1670:1676:void lambda$new$5(android.view.View) -> lambda$new$5
    563:568:void lambda$onCreate$0(android.view.View) -> lambda$onCreate$0
    620:622:void lambda$onCreate$1() -> lambda$onCreate$1
    677:679:void lambda$updateAllFields$2() -> lambda$updateAllFields$2
    1147:1147:void lambda$updateNrStats$3(java.lang.Runnable) -> lambda$updateNrStats$3
    204:204:void log(java.lang.String) -> log
    453:625:void onCreate(android.os.Bundle) -> onCreate
    755:770:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    799:800:void onDestroy() -> onDestroy
    710:716:void onPause() -> onPause
    777:793:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    640:644:void onResume() -> onResume
    743:749:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1805:1805:void performDsdsSwitch() -> performDsdsSwitch
    1200:1222:void pingHostname() -> pingHostname
    1250:1250:void refreshSmsc() -> refreshSmsc
    839:840:void registerPhoneStateListener() -> registerPhoneStateListener
    725:738:void restoreFromBundle(android.os.Bundle) -> restoreFromBundle
    1454:1455:void setEabProvisionedState(boolean) -> setEabProvisionedState
    1459:1460:void setImsConfigProvisionedState(int,boolean) -> setImsConfigProvisionedState
    1439:1440:void setImsVolteProvisionedState(boolean) -> setImsVolteProvisionedState
    1444:1445:void setImsVtProvisionedState(boolean) -> setImsVtProvisionedState
    1449:1450:void setImsWfcProvisionedState(boolean) -> setImsWfcProvisionedState
    1786:1792:void showDsdsChangeDialog() -> showDsdsChangeDialog
    815:834:void unregisterPhoneStateListener() -> unregisterPhoneStateListener
    1260:1268:void updateAllCellInfo() -> updateAllCellInfo
    648:705:void updateAllFields() -> updateAllFields
    853:854:void updateBandwidths(int,int) -> updateBandwidths
    1037:1037:void updateCallRedirect() -> updateCallRedirect
    1758:1760:void updateCbrsDataState(boolean) -> updateCbrsDataState
    1024:1024:void updateCellInfo(java.util.List) -> updateCellInfo
    1090:1109:void updateDataState() -> updateDataState
    1180:1191:void updateDataStats2() -> updateDataStats2
    846:846:void updateDnsCheckState() -> updateDnsCheckState
    1582:1610:void updateImsProvisionedState() -> updateImsProvisionedState
    1033:1033:void updateMessageWaiting() -> updateMessageWaiting
    1113:1118:void updateNetworkType() -> updateNetworkType
    1123:1156:void updateNrStats(android.telephony.ServiceState) -> updateNrStats
    403:413:void updatePhoneIndex(int,int) -> updatePhoneIndex
    1071:1086:void updatePhoneState(int) -> updatePhoneState
    378:388:void updatePhysicalChannelConfiguration(java.util.List) -> updatePhysicalChannelConfiguration
    1280:1312:void updatePingState() -> updatePingState
    392:398:void updatePreferredNetworkType(int) -> updatePreferredNetworkType
    1163:1176:void updateProperties() -> updateProperties
    1433:1435:void updateRadioPowerState() -> updateRadioPowerState
    1042:1067:void updateServiceState(android.telephony.ServiceState) -> updateServiceState
    859:870:void updateSignalStrength(android.telephony.SignalStrength) -> updateSignalStrength
    1028:1029:void updateSubscriptionIds() -> updateSubscriptionIds
com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda0 -> com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda0:
    java.util.concurrent.CompletableFuture com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$1$b98cdf3a7b9ad17d70e43e0bbe08130476c057fe430ffa37c5e8639bd9ce5f22$1.f$0 -> f$0
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$1$b98cdf3a7b9ad17d70e43e0bbe08130476c057fe430ffa37c5e8639bd9ce5f22$1.<init>(java.util.concurrent.CompletableFuture) -> <init>
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$1$b98cdf3a7b9ad17d70e43e0bbe08130476c057fe430ffa37c5e8639bd9ce5f22$1.onResult(java.lang.Object) -> onResult
com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda1 -> com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda1:
    com.android.phone.settings.RadioInfo com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$5ec80eccf370dcc615c7cb1083c5b6a874ebe7a2dd0a6a94b5132115e91d1326$0.f$0 -> f$0
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$5ec80eccf370dcc615c7cb1083c5b6a874ebe7a2dd0a6a94b5132115e91d1326$0.<init>(com.android.phone.settings.RadioInfo) -> <init>
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$5ec80eccf370dcc615c7cb1083c5b6a874ebe7a2dd0a6a94b5132115e91d1326$0.onClick(android.view.View) -> onClick
com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda2 -> com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda2:
    com.android.phone.settings.RadioInfo com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$0811f652b54e5ece7f1ed7ad4effe30ca4bcd6a700b3753f1e4be1841a663127$1.f$0 -> f$0
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$0811f652b54e5ece7f1ed7ad4effe30ca4bcd6a700b3753f1e4be1841a663127$1.<init>(com.android.phone.settings.RadioInfo) -> <init>
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$0811f652b54e5ece7f1ed7ad4effe30ca4bcd6a700b3753f1e4be1841a663127$1.onClick(android.view.View) -> onClick
com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda3 -> com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda3:
    com.android.phone.settings.RadioInfo com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$0811f652b54e5ece7f1ed7ad4effe30ca4bcd6a700b3753f1e4be1841a663127$0.f$0 -> f$0
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$0811f652b54e5ece7f1ed7ad4effe30ca4bcd6a700b3753f1e4be1841a663127$0.<init>(com.android.phone.settings.RadioInfo) -> <init>
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$0811f652b54e5ece7f1ed7ad4effe30ca4bcd6a700b3753f1e4be1841a663127$0.onClick(android.view.View) -> onClick
com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda4 -> com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda4:
    com.android.phone.settings.RadioInfo com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$41cd8cf0f6832d9f56a85b302ab6a96f8f2c0d72a442d499fa2a4490dbe66b38$0.f$0 -> f$0
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$41cd8cf0f6832d9f56a85b302ab6a96f8f2c0d72a442d499fa2a4490dbe66b38$0.<init>(com.android.phone.settings.RadioInfo) -> <init>
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$41cd8cf0f6832d9f56a85b302ab6a96f8f2c0d72a442d499fa2a4490dbe66b38$0.run() -> run
com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda5 -> com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda5:
    com.android.phone.settings.RadioInfo com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$5ec80eccf370dcc615c7cb1083c5b6a874ebe7a2dd0a6a94b5132115e91d1326$1.f$0 -> f$0
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$5ec80eccf370dcc615c7cb1083c5b6a874ebe7a2dd0a6a94b5132115e91d1326$1.<init>(com.android.phone.settings.RadioInfo) -> <init>
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$0$5ec80eccf370dcc615c7cb1083c5b6a874ebe7a2dd0a6a94b5132115e91d1326$1.run() -> run
com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda6 -> com.android.phone.settings.RadioInfo$$ExternalSyntheticLambda6:
    com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$1$b98cdf3a7b9ad17d70e43e0bbe08130476c057fe430ffa37c5e8639bd9ce5f22$0 com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$1$b98cdf3a7b9ad17d70e43e0bbe08130476c057fe430ffa37c5e8639bd9ce5f22$0.INSTANCE -> INSTANCE
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$1$b98cdf3a7b9ad17d70e43e0bbe08130476c057fe430ffa37c5e8639bd9ce5f22$0.<clinit>() -> <clinit>
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$1$b98cdf3a7b9ad17d70e43e0bbe08130476c057fe430ffa37c5e8639bd9ce5f22$0.<init>() -> <init>
    void com.android.phone.settings.RadioInfo$$InternalSyntheticLambda$1$b98cdf3a7b9ad17d70e43e0bbe08130476c057fe430ffa37c5e8639bd9ce5f22$0.execute(java.lang.Runnable) -> execute
com.android.phone.settings.RadioInfo$1 -> com.android.phone.settings.RadioInfo$1:
    301:301:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    303:305:void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities) -> onCapabilitiesChanged
com.android.phone.settings.RadioInfo$10 -> com.android.phone.settings.RadioInfo$10:
    1331:1331:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1333:1340:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.phone.settings.RadioInfo$11 -> com.android.phone.settings.RadioInfo$11:
    1346:1346:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1348:1356:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.phone.settings.RadioInfo$12 -> com.android.phone.settings.RadioInfo$12:
    1362:1362:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1364:1390:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.phone.settings.RadioInfo$13 -> com.android.phone.settings.RadioInfo$13:
    1397:1397:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1399:1401:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.phone.settings.RadioInfo$14 -> com.android.phone.settings.RadioInfo$14:
    1407:1407:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1409:1415:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.phone.settings.RadioInfo$15 -> com.android.phone.settings.RadioInfo$15:
    1460:1460:void <init>(com.android.phone.settings.RadioInfo,int,boolean) -> <init>
    1463:1466:void run() -> run
com.android.phone.settings.RadioInfo$16 -> com.android.phone.settings.RadioInfo$16:
    1473:1473:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1478:1485:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.android.phone.settings.RadioInfo$17 -> com.android.phone.settings.RadioInfo$17:
    1499:1499:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1502:1502:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.android.phone.settings.RadioInfo$18 -> com.android.phone.settings.RadioInfo$18:
    1514:1514:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1517:1517:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.android.phone.settings.RadioInfo$19 -> com.android.phone.settings.RadioInfo$19:
    1529:1529:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1532:1532:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.android.phone.settings.RadioInfo$2 -> com.android.phone.settings.RadioInfo$2:
    416:416:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    420:444:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.settings.RadioInfo$20 -> com.android.phone.settings.RadioInfo$20:
    1540:1540:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1543:1543:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.android.phone.settings.RadioInfo$21 -> com.android.phone.settings.RadioInfo$21:
    1613:1613:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1616:1617:void onClick(android.view.View) -> onClick
com.android.phone.settings.RadioInfo$22 -> com.android.phone.settings.RadioInfo$22:
    1621:1621:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1623:1627:void onClick(android.view.View) -> onClick
com.android.phone.settings.RadioInfo$23 -> com.android.phone.settings.RadioInfo$23:
    1634:1634:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1636:1636:void onClick(android.view.View) -> onClick
com.android.phone.settings.RadioInfo$24 -> com.android.phone.settings.RadioInfo$24:
    1640:1640:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1642:1643:void onClick(android.view.View) -> onClick
com.android.phone.settings.RadioInfo$24$1 -> com.android.phone.settings.RadioInfo$24$1:
    1643:1643:void <init>(com.android.phone.settings.RadioInfo$24) -> <init>
    1645:1646:void run() -> run
com.android.phone.settings.RadioInfo$25 -> com.android.phone.settings.RadioInfo$25:
    1652:1652:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1654:1654:void onClick(android.view.View) -> onClick
com.android.phone.settings.RadioInfo$26 -> com.android.phone.settings.RadioInfo$26:
    1681:1681:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1688:1690:void lambda$onItemSelected$0() -> lambda$onItemSelected$0
    1684:1691:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
com.android.phone.settings.RadioInfo$26$$ExternalSyntheticLambda0 -> com.android.phone.settings.RadioInfo$26$$ExternalSyntheticLambda0:
    com.android.phone.settings.RadioInfo$26 com.android.phone.settings.RadioInfo$26$$InternalSyntheticLambda$1$d3a2928f7ceb4d9675c81cfde028248d96c034a6a0db0d506111839f22aaaebb$0.f$0 -> f$0
    void com.android.phone.settings.RadioInfo$26$$InternalSyntheticLambda$1$d3a2928f7ceb4d9675c81cfde028248d96c034a6a0db0d506111839f22aaaebb$0.<init>(com.android.phone.settings.RadioInfo$26) -> <init>
    void com.android.phone.settings.RadioInfo$26$$InternalSyntheticLambda$1$d3a2928f7ceb4d9675c81cfde028248d96c034a6a0db0d506111839f22aaaebb$0.run() -> run
com.android.phone.settings.RadioInfo$27 -> com.android.phone.settings.RadioInfo$27:
    1700:1700:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1703:1718:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
com.android.phone.settings.RadioInfo$28 -> com.android.phone.settings.RadioInfo$28:
    1727:1727:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1730:1732:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
com.android.phone.settings.RadioInfo$29 -> com.android.phone.settings.RadioInfo$29:
    1760:1760:void <init>(com.android.phone.settings.RadioInfo,boolean) -> <init>
    1763:1763:void lambda$run$0() -> lambda$run$0
    1762:1763:void run() -> run
com.android.phone.settings.RadioInfo$29$$ExternalSyntheticLambda0 -> com.android.phone.settings.RadioInfo$29$$ExternalSyntheticLambda0:
    com.android.phone.settings.RadioInfo$29 com.android.phone.settings.RadioInfo$29$$InternalSyntheticLambda$1$8c9aa4c111f047d6a08ff55b420097cf7e11e0ddecab93e6a540399fb2a74412$0.f$0 -> f$0
    void com.android.phone.settings.RadioInfo$29$$InternalSyntheticLambda$1$8c9aa4c111f047d6a08ff55b420097cf7e11e0ddecab93e6a540399fb2a74412$0.<init>(com.android.phone.settings.RadioInfo$29) -> <init>
    void com.android.phone.settings.RadioInfo$29$$InternalSyntheticLambda$1$8c9aa4c111f047d6a08ff55b420097cf7e11e0ddecab93e6a540399fb2a74412$0.run() -> run
com.android.phone.settings.RadioInfo$3 -> com.android.phone.settings.RadioInfo$3:
    1250:1250:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1253:1253:void run() -> run
com.android.phone.settings.RadioInfo$30 -> com.android.phone.settings.RadioInfo$30:
    1778:1778:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1781:1781:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.android.phone.settings.RadioInfo$31 -> com.android.phone.settings.RadioInfo$31:
    1817:1817:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1821:1822:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.settings.RadioInfo$4 -> com.android.phone.settings.RadioInfo$4:
    1262:1262:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1264:1264:void run() -> run
com.android.phone.settings.RadioInfo$5 -> com.android.phone.settings.RadioInfo$5:
    1268:1268:void <init>(com.android.phone.settings.RadioInfo,java.lang.Runnable) -> <init>
    1271:1273:void run() -> run
com.android.phone.settings.RadioInfo$6 -> com.android.phone.settings.RadioInfo$6:
    1288:1288:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1290:1292:void run() -> run
com.android.phone.settings.RadioInfo$7 -> com.android.phone.settings.RadioInfo$7:
    1296:1296:void <init>(com.android.phone.settings.RadioInfo,java.lang.Runnable) -> <init>
    1299:1300:void run() -> run
com.android.phone.settings.RadioInfo$8 -> com.android.phone.settings.RadioInfo$8:
    1305:1305:void <init>(com.android.phone.settings.RadioInfo,java.lang.Runnable) -> <init>
    1308:1309:void run() -> run
com.android.phone.settings.RadioInfo$9 -> com.android.phone.settings.RadioInfo$9:
    1316:1316:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    1318:1325:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.phone.settings.RadioInfo$RadioInfoTelephonyCallback -> com.android.phone.settings.RadioInfo$RadioInfoTelephonyCallback:
    313:313:void <init>(com.android.phone.settings.RadioInfo) -> <init>
    313:313:void <init>(com.android.phone.settings.RadioInfo,com.android.phone.settings.RadioInfo$1) -> <init>
    348:349:void onCallForwardingIndicatorChanged(boolean) -> onCallForwardingIndicatorChanged
    336:337:void onCallStateChanged(int) -> onCallStateChanged
    354:356:void onCellInfoChanged(java.util.List) -> onCellInfoChanged
    331:331:void onDataActivity(int) -> onDataActivity
    325:326:void onDataConnectionStateChanged(int,int) -> onDataConnectionStateChanged
    342:343:void onMessageWaitingIndicatorChanged(boolean) -> onMessageWaitingIndicatorChanged
    367:372:void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    361:362:void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.android.phone.settings.SuppServicesUiUtil -> com.android.phone.settings.SuppServicesUiUtil:
    121:128:java.lang.String getSuppServiceName(android.content.Context,java.lang.String) -> getSuppServiceName
    172:240:java.lang.CharSequence handleCallerIdUssdResponse(com.android.phone.PhoneGlobals,android.content.Context,com.android.internal.telephony.Phone,com.android.internal.telephony.MmiCode) -> handleCallerIdUssdResponse
    156:158:boolean isDataRoamingOffUnderRoaming(android.content.Context,com.android.internal.telephony.Phone) -> isDataRoamingOffUnderRoaming
    150:151:boolean isMobileDataOff(android.content.Context,com.android.internal.telephony.Phone) -> isMobileDataOff
    145:145:boolean isSsOverUtPrecautions(android.content.Context,com.android.internal.telephony.Phone) -> isSsOverUtPrecautions
    89:113:java.lang.String makeMessage(android.content.Context,java.lang.String,com.android.internal.telephony.Phone) -> makeMessage
    63:84:android.app.Dialog showBlockingSuppServicesDialog(android.content.Context,com.android.internal.telephony.Phone,java.lang.String) -> showBlockingSuppServicesDialog
com.android.phone.settings.SuppServicesUiUtil$1 -> com.android.phone.settings.SuppServicesUiUtil$1:
    67:67:void <init>(android.content.Context) -> <init>
    70:75:void onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.settings.SuppServicesUiUtil$2 -> com.android.phone.settings.SuppServicesUiUtil$2:
    199:199:void <init>(com.android.phone.PhoneGlobals,android.content.Context,com.android.internal.telephony.Phone,com.android.phone.CarrierXmlParser$SsEntry$SSAction) -> <init>
    202:234:void run() -> run
com.android.phone.settings.SuppServicesUiUtil$2$1 -> com.android.phone.settings.SuppServicesUiUtil$2$1:
    203:203:void <init>(com.android.phone.settings.SuppServicesUiUtil$2) -> <init>
    208:210:void onReceiveUssdResponse(android.telephony.TelephonyManager,java.lang.String,java.lang.CharSequence) -> onReceiveUssdResponse
    218:221:void onReceiveUssdResponseFailed(android.telephony.TelephonyManager,java.lang.String,int) -> onReceiveUssdResponseFailed
com.android.phone.settings.TextViewPreference -> com.android.phone.settings.TextViewPreference:
    39:63:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    76:76:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    87:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:99:void <init>(android.content.Context) -> <init>
    109:116:void onBindView(android.view.View) -> onBindView
    127:134:void setTitle(java.lang.CharSequence) -> setTitle
    144:145:void setTitle(int) -> setTitle
com.android.phone.settings.TtyModeListPreference -> com.android.phone.settings.TtyModeListPreference:
    40:40:void <clinit>() -> <clinit>
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:67:void init() -> init
    73:101:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    125:131:boolean shouldHideHcoAndVco() -> shouldHideHcoAndVco
    108:118:void updatePreferredTtyModeSummary(int) -> updatePreferredTtyModeSummary
com.android.phone.settings.VoicemailDialogUtil -> com.android.phone.settings.VoicemailDialogUtil:
    44:108:android.app.Dialog getDialog(com.android.phone.settings.VoicemailSettingsActivity,int) -> getDialog
com.android.phone.settings.VoicemailProviderListPreference -> com.android.phone.settings.VoicemailProviderListPreference:
    40:40:void <clinit>() -> <clinit>
    69:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:154:java.lang.String getValue() -> getValue
    159:159:com.android.phone.settings.VoicemailProviderListPreference$VoicemailProvider getVoicemailProvider(java.lang.String) -> getVoicemailProvider
    163:163:boolean hasMoreThanOneVoicemailProvider() -> hasMoreThanOneVoicemailProvider
    78:80:void init(com.android.internal.telephony.Phone,android.content.Intent) -> init
    94:149:void initVoicemailProviders(android.content.Intent) -> initVoicemailProviders
com.android.phone.settings.VoicemailProviderListPreference$VoicemailProvider -> com.android.phone.settings.VoicemailProviderListPreference$VoicemailProvider:
    49:51:void <init>(com.android.phone.settings.VoicemailProviderListPreference,java.lang.String,android.content.Intent) -> <init>
    55:55:java.lang.String toString() -> toString
com.android.phone.settings.VoicemailProviderSettings -> com.android.phone.settings.VoicemailProviderSettings:
    35:35:void <clinit>() -> <clinit>
    49:63:void <init>(java.lang.String,java.lang.String,int) -> <init>
    68:70:void <init>(java.lang.String,com.android.internal.telephony.CallForwardInfo[]) -> <init>
    78:85:boolean equals(java.lang.Object) -> equals
    109:116:boolean forwardingSettingsEqual(com.android.internal.telephony.CallForwardInfo[],com.android.internal.telephony.CallForwardInfo[]) -> forwardingSettingsEqual
    99:99:com.android.internal.telephony.CallForwardInfo[] getForwardingSettings() -> getForwardingSettings
    95:95:java.lang.String getVoicemailNumber() -> getVoicemailNumber
    90:91:java.lang.String toString() -> toString
com.android.phone.settings.VoicemailProviderSettingsUtil -> com.android.phone.settings.VoicemailProviderSettingsUtil:
    132:140:void delete(android.content.Context,java.lang.String) -> delete
    144:144:android.content.SharedPreferences getPrefs(android.content.Context) -> getPrefs
    55:83:com.android.phone.settings.VoicemailProviderSettings load(android.content.Context,java.lang.String) -> load
    95:123:void save(android.content.Context,java.lang.String,com.android.phone.settings.VoicemailProviderSettings) -> save
com.android.phone.settings.VoicemailSettingsActivity -> com.android.phone.settings.VoicemailSettingsActivity:
    71:71:void <clinit>() -> <clinit>
    66:922:void <init>() -> <init>
    66:66:void access$000(com.android.phone.settings.VoicemailSettingsActivity,android.os.AsyncResult,int) -> access$000
    66:66:android.os.AsyncResult access$100(com.android.phone.settings.VoicemailSettingsActivity) -> access$100
    66:66:boolean access$1000(com.android.phone.settings.VoicemailSettingsActivity) -> access$1000
    66:66:boolean access$1002(com.android.phone.settings.VoicemailSettingsActivity,boolean) -> access$1002
    66:66:android.os.AsyncResult access$102(com.android.phone.settings.VoicemailSettingsActivity,android.os.AsyncResult) -> access$102
    66:66:void access$1100(com.android.phone.settings.VoicemailSettingsActivity,int) -> access$1100
    66:66:void access$1200(com.android.phone.settings.VoicemailSettingsActivity) -> access$1200
    66:66:void access$1300(com.android.phone.settings.VoicemailSettingsActivity) -> access$1300
    66:66:boolean access$200(com.android.phone.settings.VoicemailSettingsActivity) -> access$200
    66:66:boolean access$202(com.android.phone.settings.VoicemailSettingsActivity,boolean) -> access$202
    66:66:boolean access$300(com.android.phone.settings.VoicemailSettingsActivity) -> access$300
    66:66:com.android.phone.SubscriptionInfoHelper access$400(com.android.phone.settings.VoicemailSettingsActivity) -> access$400
    66:66:java.util.Map access$500(com.android.phone.settings.VoicemailSettingsActivity) -> access$500
    66:66:java.lang.String access$600() -> access$600
    66:66:boolean access$700(com.android.phone.settings.VoicemailSettingsActivity) -> access$700
    66:66:boolean access$800(com.android.phone.settings.VoicemailSettingsActivity) -> access$800
    66:66:void access$900(com.android.phone.settings.VoicemailSettingsActivity) -> access$900
    663:663:void dismissDialogSafely(int) -> dismissDialogSafely
    585:592:boolean getBooleanCarrierConfig(java.lang.String) -> getBooleanCarrierConfig
    776:823:void handleForwardingSettingsReadResult(android.os.AsyncResult,int) -> handleForwardingSettingsReadResult
    1075:1080:void handleSetVmOrFwdMessage() -> handleSetVmOrFwdMessage
    1110:1113:void handleVmAndFwdSetSuccess(int) -> handleVmAndFwdSetSuccess
    1092:1100:void handleVmOrFwdSetError(int) -> handleVmOrFwdSetError
    1136:1141:boolean isForwardingCompleted() -> isForwardingCompleted
    1150:1159:boolean isFwdChangeSuccess() -> isFwdChangeSuccess
    1167:1170:boolean isVmChangeSuccess() -> isVmChangeSuccess
    313:320:void maybeHidePublicSettings() -> maybeHidePublicSettings
    463:556:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    678:705:void onClick(android.content.DialogInterface,int) -> onClick
    217:256:void onCreate(android.os.Bundle) -> onCreate
    609:609:android.app.Dialog onCreateDialog(int) -> onCreateDialog
    620:624:void onDialogClosed(com.android.phone.EditPhoneNumberPreference,int) -> onDialogClosed
    428:445:java.lang.String onGetDefaultNumber(com.android.phone.EditPhoneNumberPreference) -> onGetDefaultNumber
    331:335:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    325:326:void onPause() -> onPause
    389:414:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    340:371:boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    602:603:void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    261:304:void onResume() -> onResume
    1119:1123:void onRevertDone() -> onRevertDone
    828:829:void resetForwardingChangeState() -> resetForwardingChangeState
    720:756:void saveVoiceMailAndForwardingNumber(java.lang.String,com.android.phone.settings.VoicemailProviderSettings) -> saveVoiceMailAndForwardingNumber
    834:853:void saveVoiceMailAndForwardingNumberStage2() -> saveVoiceMailAndForwardingNumberStage2
    958:962:void setVoicemailNumberWithCarrier() -> setVoicemailNumberWithCarrier
    656:657:void showDialogIfForeground(int) -> showDialogIfForeground
    568:572:void simulatePreferenceClick(android.preference.Preference) -> simulatePreferenceClick
    968:1015:void switchToPreviousVoicemailProvider() -> switchToPreviousVoicemailProvider
    1032:1051:void updateVMPreferenceWidgets(java.lang.String) -> updateVMPreferenceWidgets
    1061:1067:void updateVoiceNumberField() -> updateVoiceNumberField
com.android.phone.settings.VoicemailSettingsActivity$1 -> com.android.phone.settings.VoicemailSettingsActivity$1:
    760:760:void <init>(com.android.phone.settings.VoicemailSettingsActivity) -> <init>
    763:766:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.settings.VoicemailSettingsActivity$2 -> com.android.phone.settings.VoicemailSettingsActivity$2:
    860:860:void <init>(com.android.phone.settings.VoicemailSettingsActivity) -> <init>
    863:914:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.settings.VoicemailSettingsActivity$3 -> com.android.phone.settings.VoicemailSettingsActivity$3:
    922:922:void <init>(com.android.phone.settings.VoicemailSettingsActivity) -> <init>
    925:950:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.settings.fdn.BaseFdnContactScreen -> com.android.phone.settings.fdn.BaseFdnContactScreen:
    46:126:void <init>() -> <init>
    46:46:void access$000(com.android.phone.settings.fdn.BaseFdnContactScreen) -> access$000
    77:80:void authenticatePin2() -> authenticatePin2
    84:84:void displayProgress(boolean) -> displayProgress
    71:73:void onCreate(android.os.Bundle) -> onCreate
    208:208:void onRequestPuk2(int) -> onRequestPuk2
    101:103:void processPin2(java.lang.String) -> processPin2
    107:113:void resolveIntent() -> resolveIntent
    189:202:void showPin2LockedDialog() -> showPin2LockedDialog
    122:122:void showStatus(java.lang.CharSequence) -> showStatus
com.android.phone.settings.fdn.BaseFdnContactScreen$1 -> com.android.phone.settings.fdn.BaseFdnContactScreen$1:
    126:126:void <init>(com.android.phone.settings.fdn.BaseFdnContactScreen) -> <init>
    129:152:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.settings.fdn.BaseFdnContactScreen$QueryHandler -> com.android.phone.settings.fdn.BaseFdnContactScreen$QueryHandler:
    162:163:void <init>(com.android.phone.settings.fdn.BaseFdnContactScreen,android.content.ContentResolver) -> <init>
    183:184:void onDeleteComplete(int,java.lang.Object,int) -> onDeleteComplete
    169:170:void onInsertComplete(int,java.lang.Object,android.net.Uri) -> onInsertComplete
    176:177:void onUpdateComplete(int,java.lang.Object,int) -> onUpdateComplete
com.android.phone.settings.fdn.DeleteFdnContactScreen -> com.android.phone.settings.fdn.DeleteFdnContactScreen:
    29:29:void <init>() -> <init>
    70:87:void deleteContact() -> deleteContact
    94:99:void handleResult(boolean) -> handleResult
    99:99:void lambda$handleResult$0() -> lambda$handleResult$0
    46:54:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    33:37:void onCreate(android.os.Bundle) -> onCreate
    104:105:void pin2AuthenticationSucceed() -> pin2AuthenticationSucceed
    62:65:void resolveIntent() -> resolveIntent
com.android.phone.settings.fdn.DeleteFdnContactScreen$$ExternalSyntheticLambda0 -> com.android.phone.settings.fdn.DeleteFdnContactScreen$$ExternalSyntheticLambda0:
    com.android.phone.settings.fdn.DeleteFdnContactScreen com.android.phone.settings.fdn.DeleteFdnContactScreen$$InternalSyntheticLambda$0$9875f3c0fca5b80a1c0dcb37852071d26357cc9eedb44e15ca8f968e09653d80$0.f$0 -> f$0
    void com.android.phone.settings.fdn.DeleteFdnContactScreen$$InternalSyntheticLambda$0$9875f3c0fca5b80a1c0dcb37852071d26357cc9eedb44e15ca8f968e09653d80$0.<init>(com.android.phone.settings.fdn.DeleteFdnContactScreen) -> <init>
    void com.android.phone.settings.fdn.DeleteFdnContactScreen$$InternalSyntheticLambda$0$9875f3c0fca5b80a1c0dcb37852071d26357cc9eedb44e15ca8f968e09653d80$0.run() -> run
com.android.phone.settings.fdn.EditFdnContactScreen -> com.android.phone.settings.fdn.EditFdnContactScreen:
    76:82:void <clinit>() -> <clinit>
    57:429:void <init>() -> <init>
    57:57:android.widget.LinearLayout access$000(com.android.phone.settings.fdn.EditFdnContactScreen) -> access$000
    57:57:android.widget.EditText access$100(com.android.phone.settings.fdn.EditFdnContactScreen) -> access$100
    57:57:android.widget.Button access$200(com.android.phone.settings.fdn.EditFdnContactScreen) -> access$200
    57:57:android.widget.EditText access$300(com.android.phone.settings.fdn.EditFdnContactScreen) -> access$300
    57:57:java.lang.String access$400(com.android.phone.settings.fdn.EditFdnContactScreen) -> access$400
    57:57:boolean access$500(com.android.phone.settings.fdn.EditFdnContactScreen,java.lang.String) -> access$500
    57:57:boolean access$600(com.android.phone.settings.fdn.EditFdnContactScreen) -> access$600
    57:57:void access$700(com.android.phone.settings.fdn.EditFdnContactScreen) -> access$700
    295:312:void addContact() -> addContact
    345:351:void deleteSelected() -> deleteSelected
    356:361:void displayProgress(boolean) -> displayProgress
    265:265:java.lang.String getNameFromTextField() -> getNameFromTextField
    269:269:java.lang.String getNumberFromTextField() -> getNumberFromTextField
    368:388:void handleResult(boolean,boolean) -> handleResult
    288:288:boolean isValidNumber(java.lang.String) -> isValidNumber
    388:388:void lambda$handleResult$0() -> lambda$handleResult$0
    123:163:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    90:107:void onCreate(android.os.Bundle) -> onCreate
    173:181:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    199:213:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    190:191:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    444:447:void pin2AuthenticationSucceed() -> pin2AuthenticationSucceed
    218:219:void resolveIntent() -> resolveIntent
    276:277:void setButtonEnabled() -> setButtonEnabled
    229:260:void setupView() -> setupView
    318:337:void updateContact() -> updateContact
com.android.phone.settings.fdn.EditFdnContactScreen$$ExternalSyntheticLambda0 -> com.android.phone.settings.fdn.EditFdnContactScreen$$ExternalSyntheticLambda0:
    com.android.phone.settings.fdn.EditFdnContactScreen com.android.phone.settings.fdn.EditFdnContactScreen$$InternalSyntheticLambda$0$4adea42226f56485a5f200f18ade69c17f0dd12344fb22ec516ee4615599420e$0.f$0 -> f$0
    void com.android.phone.settings.fdn.EditFdnContactScreen$$InternalSyntheticLambda$0$4adea42226f56485a5f200f18ade69c17f0dd12344fb22ec516ee4615599420e$0.<init>(com.android.phone.settings.fdn.EditFdnContactScreen) -> <init>
    void com.android.phone.settings.fdn.EditFdnContactScreen$$InternalSyntheticLambda$0$4adea42226f56485a5f200f18ade69c17f0dd12344fb22ec516ee4615599420e$0.run() -> run
com.android.phone.settings.fdn.EditFdnContactScreen$1 -> com.android.phone.settings.fdn.EditFdnContactScreen$1:
    391:391:void <init>(com.android.phone.settings.fdn.EditFdnContactScreen) -> <init>
    394:412:void onClick(android.view.View) -> onClick
com.android.phone.settings.fdn.EditFdnContactScreen$2 -> com.android.phone.settings.fdn.EditFdnContactScreen$2:
    419:419:void <init>(com.android.phone.settings.fdn.EditFdnContactScreen) -> <init>
    423:424:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.android.phone.settings.fdn.EditFdnContactScreen$3 -> com.android.phone.settings.fdn.EditFdnContactScreen$3:
    429:429:void <init>(com.android.phone.settings.fdn.EditFdnContactScreen) -> <init>
    438:438:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.android.phone.settings.fdn.EditPinPreference -> com.android.phone.settings.fdn.EditPinPreference:
    56:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:60:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    65:70:void onBindDialogView(android.view.View) -> onBindDialogView
    86:88:void onDialogClosed(boolean) -> onDialogClosed
    75:80:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    52:52:void setOnPinEnteredListener(com.android.phone.settings.fdn.EditPinPreference$OnPinEnteredListener) -> setOnPinEnteredListener
    98:98:void showPinDialog() -> showPinDialog
com.android.phone.settings.fdn.FdnList -> com.android.phone.settings.fdn.FdnList:
    89:89:void <clinit>() -> <clinit>
    46:94:void <init>() -> <init>
    46:46:void access$100(com.android.phone.settings.fdn.FdnList,int) -> access$100
    46:46:void access$200(com.android.phone.settings.fdn.FdnList,int) -> access$200
    46:46:void access$300(com.android.phone.settings.fdn.FdnList,int) -> access$300
    46:46:boolean access$400(com.android.phone.settings.fdn.FdnList) -> access$400
    202:203:void addContact() -> addContact
    232:232:void deleteSelected() -> deleteSelected
    236:243:void deleteSelected(int) -> deleteSelected
    248:248:void dialSelected() -> dialSelected
    252:257:void dialSelected(int) -> dialSelected
    213:213:void editSelected() -> editSelected
    220:227:void editSelected(int) -> editSelected
    266:268:android.net.Uri getContentUri(com.android.phone.SubscriptionInfoHelper) -> getContentUri
    278:283:boolean getFdnDialDirectlySupported() -> getFdnDialDirectlySupported
    99:109:void onCreate(android.os.Bundle) -> onCreate
    135:146:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    196:197:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    165:191:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    152:158:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    114:115:void onResume() -> onResume
    120:122:void onStop() -> onStop
    128:130:android.net.Uri resolveIntent() -> resolveIntent
com.android.phone.settings.fdn.FdnList$SelectionPopupMenu -> com.android.phone.settings.fdn.FdnList$SelectionPopupMenu:
    48:67:void <init>(com.android.phone.settings.fdn.FdnList,android.content.Context,android.view.View,int) -> <init>
    47:47:int access$000(com.android.phone.settings.fdn.FdnList$SelectionPopupMenu) -> access$000
    71:77:void showPopUp() -> showPopUp
com.android.phone.settings.fdn.FdnList$SelectionPopupMenu$1 -> com.android.phone.settings.fdn.FdnList$SelectionPopupMenu$1:
    48:48:void <init>(com.android.phone.settings.fdn.FdnList$SelectionPopupMenu) -> <init>
    52:57:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.phone.settings.fdn.FdnSetting -> com.android.phone.settings.fdn.FdnSetting:
    43:265:void <init>() -> <init>
    43:43:void access$000(com.android.phone.settings.fdn.FdnSetting,int) -> access$000
    43:43:void access$100(com.android.phone.settings.fdn.FdnSetting,int,int) -> access$100
    43:43:com.android.phone.settings.fdn.EditPinPreference access$1000(com.android.phone.settings.fdn.FdnSetting) -> access$1000
    43:43:com.android.phone.settings.fdn.EditPinPreference access$1100(com.android.phone.settings.fdn.FdnSetting) -> access$1100
    43:43:void access$200(com.android.phone.settings.fdn.FdnSetting,int) -> access$200
    43:43:void access$300(com.android.phone.settings.fdn.FdnSetting) -> access$300
    43:43:void access$400(com.android.phone.settings.fdn.FdnSetting,java.lang.String) -> access$400
    43:43:boolean access$500(com.android.phone.settings.fdn.FdnSetting) -> access$500
    43:43:void access$600(com.android.phone.settings.fdn.FdnSetting) -> access$600
    43:43:void access$700(com.android.phone.settings.fdn.FdnSetting) -> access$700
    43:43:int access$800(com.android.phone.settings.fdn.FdnSetting) -> access$800
    43:43:void access$900(com.android.phone.settings.fdn.FdnSetting,boolean) -> access$900
    367:377:void displayMessage(int,int) -> displayMessage
    381:381:void displayMessage(int) -> displayMessage
    388:388:void displayPinChangeDialog(com.android.phone.settings.fdn.EditPinPreference) -> displayPinChangeDialog
    394:425:void displayPinChangeDialog(com.android.phone.settings.fdn.EditPinPreference,int,boolean) -> displayPinChangeDialog
    600:600:void log(java.lang.String) -> log
    507:552:void onCreate(android.os.Bundle) -> onCreate
    591:596:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    100:103:void onPinEntered(com.android.phone.settings.fdn.EditPinPreference,boolean) -> onPinEntered
    605:609:void onRequestPuk2(int) -> onRequestPuk2
    558:561:void onResume() -> onResume
    569:585:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    434:438:void resetPinChangeState() -> resetPinChangeState
    446:450:void resetPinChangeStateForPUK2() -> resetPinChangeStateForPUK2
    613:625:void showPin2OrPuk2LockedDialog(int) -> showPin2OrPuk2LockedDialog
    113:135:void toggleFDNEnable(boolean) -> toggleFDNEnable
    492:501:void updateChangePIN2() -> updateChangePIN2
    477:484:void updateEnableFDN() -> updateEnableFDN
    148:256:void updatePINChangeState(com.android.phone.settings.fdn.EditPinPreference,boolean) -> updatePINChangeState
    466:466:boolean validatePin(java.lang.String,boolean) -> validatePin
com.android.phone.settings.fdn.FdnSetting$1 -> com.android.phone.settings.fdn.FdnSetting$1:
    265:265:void <init>(com.android.phone.settings.fdn.FdnSetting) -> <init>
    268:357:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.settings.fdn.FdnSetting$2 -> com.android.phone.settings.fdn.FdnSetting$2:
    281:281:void <clinit>() -> <clinit>
com.android.phone.settings.fdn.GetPin2Screen -> com.android.phone.settings.fdn.GetPin2Screen:
    41:99:void <init>() -> <init>
    41:41:android.widget.EditText access$000(com.android.phone.settings.fdn.GetPin2Screen) -> access$000
    41:41:void access$100(com.android.phone.settings.fdn.GetPin2Screen) -> access$100
    74:74:java.lang.String getPin2() -> getPin2
    49:61:void onCreate(android.os.Bundle) -> onCreate
    93:93:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    66:70:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    78:87:void returnResult() -> returnResult
com.android.phone.settings.fdn.GetPin2Screen$1 -> com.android.phone.settings.fdn.GetPin2Screen$1:
    99:99:void <init>(com.android.phone.settings.fdn.GetPin2Screen) -> <init>
    102:106:void onClick(android.view.View) -> onClick
com.android.phone.settings.fdn.Pin2LockedDialogFragment -> com.android.phone.settings.fdn.Pin2LockedDialogFragment:
    37:37:void <init>() -> <init>
    85:86:void lambda$onCreateDialog$1(android.content.DialogInterface,int) -> lambda$onCreateDialog$1
    95:99:void onCancel(android.content.DialogInterface) -> onCancel
    56:83:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.android.phone.settings.fdn.Pin2LockedDialogFragment$$ExternalSyntheticLambda0 -> com.android.phone.settings.fdn.Pin2LockedDialogFragment$$ExternalSyntheticLambda0:
    com.android.phone.settings.fdn.Pin2LockedDialogFragment com.android.phone.settings.fdn.Pin2LockedDialogFragment$$InternalSyntheticLambda$0$03888c632611ad1c8c1a3567e65ba8cba9d6eb9028d8f7ac61054f9ee7160c94$1.f$0 -> f$0
    void com.android.phone.settings.fdn.Pin2LockedDialogFragment$$InternalSyntheticLambda$0$03888c632611ad1c8c1a3567e65ba8cba9d6eb9028d8f7ac61054f9ee7160c94$1.<init>(com.android.phone.settings.fdn.Pin2LockedDialogFragment) -> <init>
    void com.android.phone.settings.fdn.Pin2LockedDialogFragment$$InternalSyntheticLambda$0$03888c632611ad1c8c1a3567e65ba8cba9d6eb9028d8f7ac61054f9ee7160c94$1.onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.settings.fdn.Pin2LockedDialogFragment$$ExternalSyntheticLambda1 -> com.android.phone.settings.fdn.Pin2LockedDialogFragment$$ExternalSyntheticLambda1:
    com.android.phone.settings.fdn.Pin2LockedDialogFragment$$InternalSyntheticLambda$0$03888c632611ad1c8c1a3567e65ba8cba9d6eb9028d8f7ac61054f9ee7160c94$0 com.android.phone.settings.fdn.Pin2LockedDialogFragment$$InternalSyntheticLambda$0$03888c632611ad1c8c1a3567e65ba8cba9d6eb9028d8f7ac61054f9ee7160c94$0.INSTANCE -> INSTANCE
    void com.android.phone.settings.fdn.Pin2LockedDialogFragment$$InternalSyntheticLambda$0$03888c632611ad1c8c1a3567e65ba8cba9d6eb9028d8f7ac61054f9ee7160c94$0.<clinit>() -> <clinit>
    void com.android.phone.settings.fdn.Pin2LockedDialogFragment$$InternalSyntheticLambda$0$03888c632611ad1c8c1a3567e65ba8cba9d6eb9028d8f7ac61054f9ee7160c94$0.<init>() -> <init>
    void com.android.phone.settings.fdn.Pin2LockedDialogFragment$$InternalSyntheticLambda$0$03888c632611ad1c8c1a3567e65ba8cba9d6eb9028d8f7ac61054f9ee7160c94$0.onClick(android.content.DialogInterface,int) -> onClick
com.android.phone.vvm.CarrierVvmPackageInstalledReceiver -> com.android.phone.vvm.CarrierVvmPackageInstalledReceiver:
    49:49:void <init>() -> <init>
    109:120:java.util.Set getCarrierVvmPackages(android.telephony.TelephonyManager) -> getCarrierVvmPackages
    67:104:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    60:62:void register(android.content.Context) -> register
com.android.phone.vvm.PhoneAccountHandleConverter -> com.android.phone.vvm.PhoneAccountHandleConverter:
    39:50:android.telecom.PhoneAccountHandle fromSubId(int) -> fromSubId
    54:54:int toSubId(android.telecom.PhoneAccountHandle) -> toSubId
com.android.phone.vvm.RemoteVvmTaskManager -> com.android.phone.vvm.RemoteVvmTaskManager:
    60:60:void <init>() -> <init>
    60:60:int access$000(com.android.phone.vvm.RemoteVvmTaskManager) -> access$000
    60:60:int access$002(com.android.phone.vvm.RemoteVvmTaskManager,int) -> access$002
    60:60:int access$010(com.android.phone.vvm.RemoteVvmTaskManager) -> access$010
    60:60:void access$100(com.android.phone.vvm.RemoteVvmTaskManager) -> access$100
    60:60:com.android.phone.vvm.RemoteVvmTaskManager$RemoteServiceConnection access$202(com.android.phone.vvm.RemoteVvmTaskManager,com.android.phone.vvm.RemoteVvmTaskManager$RemoteServiceConnection) -> access$202
    60:60:android.os.Messenger access$300(com.android.phone.vvm.RemoteVvmTaskManager) -> access$300
    60:60:int access$400(com.android.phone.vvm.RemoteVvmTaskManager) -> access$400
    375:380:void checkReference() -> checkReference
    195:207:android.content.ComponentName getBroadcastPackage(android.content.Context) -> getBroadcastPackage
    122:122:android.content.ComponentName getRemotePackage(android.content.Context,int) -> getRemotePackage
    134:187:android.content.ComponentName getRemotePackage(android.content.Context,int,java.lang.String) -> getRemotePackage
    113:113:boolean hasRemoteService(android.content.Context,int,java.lang.String) -> hasRemoteService
    385:386:android.content.Intent newBindIntent(android.content.Context) -> newBindIntent
    212:213:void onCreate() -> onCreate
    231:262:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    339:370:void send(android.content.ComponentName,int,android.os.Bundle) -> send
    88:91:void startCellServiceConnected(android.content.Context,android.telecom.PhoneAccountHandle) -> startCellServiceConnected
    106:109:void startSimRemoved(android.content.Context,android.telecom.PhoneAccountHandle) -> startSimRemoved
    96:102:void startSmsReceived(android.content.Context,android.telephony.VisualVoicemailSms,java.lang.String) -> startSmsReceived
com.android.phone.vvm.RemoteVvmTaskManager$1 -> com.android.phone.vvm.RemoteVvmTaskManager$1:
    213:213:void <init>(com.android.phone.vvm.RemoteVvmTaskManager) -> <init>
    216:223:void handleMessage(android.os.Message) -> handleMessage
com.android.phone.vvm.RemoteVvmTaskManager$RemoteServiceConnection -> com.android.phone.vvm.RemoteVvmTaskManager$RemoteServiceConnection:
    283:285:void <init>(com.android.phone.vvm.RemoteVvmTaskManager) -> <init>
    283:283:void <init>(com.android.phone.vvm.RemoteVvmTaskManager,com.android.phone.vvm.RemoteVvmTaskManager$1) -> <init>
    295:297:void enqueue(android.os.Message) -> enqueue
    302:302:boolean isConnected() -> isConnected
    307:309:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    313:318:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    322:333:void runQueue() -> runQueue
com.android.phone.vvm.VisualVoicemailPreferences -> com.android.phone.vvm.VisualVoicemailPreferences:
    41:43:void <init>(android.content.Context,android.telecom.PhoneAccountHandle) -> <init>
    129:129:boolean contains(java.lang.String) -> contains
    97:97:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    144:144:java.lang.String getKey(java.lang.String) -> getKey
    120:120:java.lang.String getString(java.lang.String) -> getString
    133:136:java.lang.Object getValue(java.lang.String,java.lang.Object) -> getValue
com.android.phone.vvm.VisualVoicemailSettingsUtil -> com.android.phone.vvm.VisualVoicemailSettingsUtil:
    33:41:android.os.Bundle dump(android.content.Context,android.telecom.PhoneAccountHandle) -> dump
com.android.phone.vvm.VisualVoicemailSmsFilterConfig -> com.android.phone.vvm.VisualVoicemailSmsFilterConfig:
    35:35:android.content.SharedPreferences access$800(android.content.Context) -> access$800
    35:35:java.lang.String access$900(java.lang.String,int) -> access$900
    58:60:void disableVisualVoicemailSmsFilter(android.content.Context,java.lang.String,int) -> disableVisualVoicemailSmsFilter
    48:53:void enableVisualVoicemailSmsFilter(android.content.Context,java.lang.String,int,android.telephony.VisualVoicemailSmsFilterSettings) -> enableVisualVoicemailSmsFilter
    65:72:android.telephony.VisualVoicemailSmsFilterSettings getActiveVisualVoicemailSmsFilterSettings(android.content.Context,int) -> getActiveVisualVoicemailSmsFilterSettings
    99:99:android.content.SharedPreferences getSharedPreferences(android.content.Context) -> getSharedPreferences
    82:94:android.telephony.VisualVoicemailSmsFilterSettings getVisualVoicemailSmsFilterSettings(android.content.Context,java.lang.String,int) -> getVisualVoicemailSmsFilterSettings
    106:106:java.lang.String makePerPhoneAccountKeyPrefix(java.lang.String,int) -> makePerPhoneAccountKeyPrefix
com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor -> com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor:
    115:117:void <init>(android.content.Context,java.lang.String,int) -> <init>
    110:110:com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor access$000(com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor,java.lang.String,boolean) -> access$000
    110:110:com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor access$100(com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor,java.lang.String,java.lang.String) -> access$100
    110:110:com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor access$200(com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor,java.lang.String,java.util.List) -> access$200
    110:110:com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor access$300(com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor,java.lang.String,int) -> access$300
    141:141:void apply() -> apply
    145:145:java.lang.String makeKey(java.lang.String) -> makeKey
    131:131:com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor setBoolean(java.lang.String,boolean) -> setBoolean
    121:121:com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor setInt(java.lang.String,int) -> setInt
    126:126:com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor setString(java.lang.String,java.lang.String) -> setString
    136:136:com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Editor setStringList(java.lang.String,java.util.List) -> setStringList
com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Reader -> com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Reader:
    155:157:void <init>(android.content.Context,java.lang.String,int) -> <init>
    150:150:boolean access$400(com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Reader,java.lang.String,boolean) -> access$400
    150:150:int access$500(com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Reader,java.lang.String,int) -> access$500
    150:150:java.util.List access$600(com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Reader,java.lang.String,java.util.List) -> access$600
    150:150:java.lang.String access$700(com.android.phone.vvm.VisualVoicemailSmsFilterConfig$Reader,java.lang.String,java.lang.String) -> access$700
    169:169:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    161:161:int getInt(java.lang.String,int) -> getInt
    165:165:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    173:177:java.util.List getStringSet(java.lang.String,java.util.List) -> getStringSet
    181:181:java.lang.String makeKey(java.lang.String) -> makeKey
com.android.phone.vvm.VvmDumpHandler -> com.android.phone.vvm.VvmDumpHandler:
    17:34:void dump(android.content.Context,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
com.android.phone.vvm.VvmLog -> com.android.phone.vvm.VvmLog:
    33:33:void <clinit>() -> <clinit>
    40:43:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    47:48:int e(java.lang.String,java.lang.String) -> e
    52:53:int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    67:68:int i(java.lang.String,java.lang.String) -> i
    36:36:void log(java.lang.String,java.lang.String) -> log
    57:58:int w(java.lang.String,java.lang.String) -> w
    97:98:int wtf(java.lang.String,java.lang.String) -> wtf
com.android.phone.vvm.VvmSimStateTracker -> com.android.phone.vvm.VvmSimStateTracker:
    62:68:void <clinit>() -> <clinit>
    53:53:void <init>() -> <init>
    53:53:android.telephony.TelephonyManager access$000(android.content.Context,android.telecom.PhoneAccountHandle) -> access$000
    53:53:java.util.Map access$100() -> access$100
    53:53:void access$200(com.android.phone.vvm.VvmSimStateTracker,android.content.Context,android.telecom.PhoneAccountHandle) -> access$200
    182:204:void checkRemovedSim(android.content.Context) -> checkRemovedSim
    252:253:android.telephony.TelephonyManager getTelephonyManager(android.content.Context,android.telecom.PhoneAccountHandle) -> getTelephonyManager
    209:209:boolean isBootCompleted() -> isBootCompleted
    244:246:void listenToAccount(android.content.Context,android.telecom.PhoneAccountHandle) -> listenToAccount
    161:173:void onBootCompleted(android.content.Context) -> onBootCompleted
    218:239:void onCarrierConfigChanged(android.content.Context,android.telecom.PhoneAccountHandle) -> onCarrierConfigChanged
    117:156:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    177:178:void sendConnected(android.content.Context,android.telecom.PhoneAccountHandle) -> sendConnected
    213:214:void sendSimRemoved(android.content.Context,android.telecom.PhoneAccountHandle) -> sendSimRemoved
com.android.phone.vvm.VvmSimStateTracker$ServiceStateListener -> com.android.phone.vvm.VvmSimStateTracker$ServiceStateListener:
    80:82:void <init>(com.android.phone.vvm.VvmSimStateTracker,android.content.Context,android.telecom.PhoneAccountHandle) -> <init>
    86:92:void listen() -> listen
    106:109:void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    99:101:void unlisten() -> unlisten
com.android.phone.vvm.VvmSmsReceiver -> com.android.phone.vvm.VvmSmsReceiver:
    31:31:void <init>() -> <init>
    37:56:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.services.telephony.CdmaConference -> com.android.services.telephony.CdmaConference:
    41:47:void <init>(android.telecom.PhoneAccountHandle) -> <init>
    214:218:com.android.services.telephony.CdmaConnection getFirstConnection() -> getFirstConnection
    169:174:com.android.internal.telephony.Call getOriginalCall() -> getOriginalCall
    205:208:com.android.internal.telephony.Connection getOriginalConnection(android.telecom.Connection) -> getOriginalConnection
    188:197:boolean isSwapSupportedAfterMerge() -> isSwapSupportedAfterMerge
    78:78:void onAddConferenceParticipants(java.util.List) -> onAddConferenceParticipants
    84:84:void onAnswer(int) -> onAnswer
    60:66:void onDisconnect() -> onDisconnect
    94:94:void onHold() -> onHold
    107:115:void onMerge() -> onMerge
    120:124:void onPlayDtmfTone(char) -> onPlayDtmfTone
    89:89:void onReject() -> onReject
    73:73:void onSeparate(android.telecom.Connection) -> onSeparate
    130:134:void onStopDtmfTone() -> onStopDtmfTone
    140:141:void onSwap() -> onSwap
    102:102:void onUnhold() -> onUnhold
    145:151:void sendFlash() -> sendFlash
    225:225:void setHoldable(boolean) -> setHoldable
    52:52:void updateCapabilities(int) -> updateCapabilities
com.android.services.telephony.CdmaConferenceController -> com.android.services.telephony.CdmaConferenceController:
    54:93:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    53:53:void access$000(com.android.services.telephony.CdmaConferenceController) -> access$000
    53:53:void access$100(com.android.services.telephony.CdmaConferenceController,com.android.services.telephony.CdmaConnection) -> access$100
    100:143:void add(com.android.services.telephony.CdmaConnection) -> add
    148:151:void addInternal(com.android.services.telephony.CdmaConnection) -> addInternal
    143:143:void lambda$add$0(com.android.services.telephony.CdmaConnection) -> lambda$add$0
    168:230:void recalculateConference() -> recalculateConference
    155:164:void remove(com.android.services.telephony.CdmaConnection) -> remove
com.android.services.telephony.CdmaConferenceController$$ExternalSyntheticLambda0 -> com.android.services.telephony.CdmaConferenceController$$ExternalSyntheticLambda0:
    com.android.services.telephony.CdmaConnection com.android.services.telephony.CdmaConferenceController$$InternalSyntheticLambda$0$6073cb17c2a13d76b69d2e7d37855ac061d2f274f3ad1e901159fc745257fecf$0.f$1 -> f$1
    com.android.services.telephony.CdmaConferenceController com.android.services.telephony.CdmaConferenceController$$InternalSyntheticLambda$0$6073cb17c2a13d76b69d2e7d37855ac061d2f274f3ad1e901159fc745257fecf$0.f$0 -> f$0
    void com.android.services.telephony.CdmaConferenceController$$InternalSyntheticLambda$0$6073cb17c2a13d76b69d2e7d37855ac061d2f274f3ad1e901159fc745257fecf$0.<init>(com.android.services.telephony.CdmaConferenceController,com.android.services.telephony.CdmaConnection) -> <init>
    void com.android.services.telephony.CdmaConferenceController$$InternalSyntheticLambda$0$6073cb17c2a13d76b69d2e7d37855ac061d2f274f3ad1e901159fc745257fecf$0.run() -> run
com.android.services.telephony.CdmaConferenceController$1 -> com.android.services.telephony.CdmaConferenceController$1:
    55:55:void <init>(com.android.services.telephony.CdmaConferenceController) -> <init>
    68:68:void onDestroyed(android.telecom.Connection) -> onDestroyed
    63:63:void onDisconnected(android.telecom.Connection,android.telecom.DisconnectCause) -> onDisconnected
    58:58:void onStateChanged(android.telecom.Connection,int) -> onStateChanged
com.android.services.telephony.CdmaConferenceController$2 -> com.android.services.telephony.CdmaConferenceController$2:
    121:121:void <init>(com.android.services.telephony.CdmaConferenceController,com.android.services.telephony.CdmaConnection,java.util.List) -> <init>
    124:127:void run() -> run
com.android.services.telephony.CdmaConnection -> com.android.services.telephony.CdmaConnection:
    46:94:void <init>(com.android.internal.telephony.Connection,com.android.services.telephony.EmergencyTonePlayer,boolean,int,java.lang.String) -> <init>
    39:39:void access$000(com.android.services.telephony.CdmaConnection,int) -> access$000
    39:39:void access$100(com.android.services.telephony.CdmaConnection) -> access$100
    39:39:void access$200(com.android.services.telephony.CdmaConnection) -> access$200
    182:183:int buildConnectionCapabilities() -> buildConnectionCapabilities
    154:155:com.android.services.telephony.TelephonyConnection cloneConnection() -> cloneConnection
    331:335:void close() -> close
    200:202:void forceAsDialing(boolean) -> forceAsDialing
    266:283:void handleBurstDtmfConfirmation() -> handleBurstDtmfConfirmation
    310:317:void handleCdmaConnectionTimeReset() -> handleCdmaConnectionTimeReset
    305:306:void handleExitedEcmMode() -> handleExitedEcmMode
    221:229:void hangupCallWaiting(int) -> hangupCallWaiting
    207:207:boolean isCallWaiting() -> isCallWaiting
    287:292:boolean isEmergency() -> isEmergency
    141:142:void onAnswer() -> onAnswer
    101:106:void onPlayDtmfTone(char) -> onPlayDtmfTone
    120:133:void onReject() -> onReject
    161:177:void onStateChanged(int) -> onStateChanged
    113:114:void onStopDtmfTone() -> onStopDtmfTone
    191:194:void performConference(android.telecom.Connection) -> performConference
    259:261:void sendBurstDtmfStringLocked(java.lang.String) -> sendBurstDtmfStringLocked
    249:255:void sendShortDtmfToNetwork(char) -> sendShortDtmfToNetwork
    323:325:void setOriginalConnection(com.android.internal.telephony.Connection) -> setOriginalConnection
    217:217:void startCallWaitingTimer() -> startCallWaitingTimer
    237:242:boolean useBurstDtmf() -> useBurstDtmf
com.android.services.telephony.CdmaConnection$1 -> com.android.services.telephony.CdmaConnection$1:
    46:46:void <init>(com.android.services.telephony.CdmaConnection) -> <init>
    51:59:void handleMessage(android.os.Message) -> handleMessage
com.android.services.telephony.CdmaConnection$2 -> com.android.services.telephony.CdmaConnection$2:
    122:122:void <clinit>() -> <clinit>
com.android.services.telephony.ConferenceParticipantConnection -> com.android.services.telephony.ConferenceParticipantConnection:
    62:82:void <init>(com.android.internal.telephony.Connection,com.android.ims.internal.ConferenceParticipant,boolean) -> <init>
    181:192:java.lang.String getCountryIso(com.android.internal.telephony.Phone) -> getCountryIso
    150:150:android.net.Uri getEndpoint() -> getEndpoint
    141:141:android.net.Uri getUserEntity() -> getUserEntity
    132:132:void onDisconnect() -> onDisconnect
    162:165:void setCapabilitiesAndProperties(boolean) -> setCapabilitiesAndProperties
    202:221:java.lang.String toString() -> toString
    91:118:void updateState(int) -> updateState
com.android.services.telephony.DeviceState -> com.android.services.telephony.DeviceState:
    29:29:void <init>() -> <init>
    51:51:int getCellOnStatus(android.content.Context) -> getCellOnStatus
    46:46:boolean isAirplaneModeOn(android.content.Context) -> isAirplaneModeOn
    42:42:boolean isRadioPowerDownAllowedOnBluetooth(android.content.Context) -> isRadioPowerDownAllowedOnBluetooth
    37:37:boolean isSuplDdsSwitchRequiredForEmergencyCall(android.content.Context) -> isSuplDdsSwitchRequiredForEmergencyCall
    56:56:boolean isTtyModeEnabled(android.content.Context) -> isTtyModeEnabled
    32:32:boolean shouldCheckSimStateBeforeOutgoingCall(android.content.Context) -> shouldCheckSimStateBeforeOutgoingCall
com.android.services.telephony.DisconnectCauseUtil -> com.android.services.telephony.DisconnectCauseUtil:
    263:390:java.lang.CharSequence getLabelFromDisconnectCause(android.content.Context,int) -> getLabelFromDisconnectCause
    405:574:java.lang.CharSequence getLabelFromPreciseDisconnectCause(android.content.Context,int,int) -> getLabelFromPreciseDisconnectCause
    794:795:boolean isRadioOffForThermalMitigation(int) -> isRadioOffForThermalMitigation
    45:45:android.telecom.DisconnectCause toTelecomDisconnectCause(int) -> toTelecomDisconnectCause
    59:59:android.telecom.DisconnectCause toTelecomDisconnectCause(int,java.lang.String) -> toTelecomDisconnectCause
    73:74:android.telecom.DisconnectCause toTelecomDisconnectCause(int,int,java.lang.String) -> toTelecomDisconnectCause
    87:87:android.telecom.DisconnectCause toTelecomDisconnectCause(int,java.lang.String,int) -> toTelecomDisconnectCause
    104:111:android.telecom.DisconnectCause toTelecomDisconnectCause(int,int,java.lang.String,int,android.telephony.ims.ImsReasonInfo) -> toTelecomDisconnectCause
    229:229:int toTelecomDisconnectCauseCode(int) -> toTelecomDisconnectCauseCode
    589:790:java.lang.CharSequence toTelecomDisconnectCauseDescription(android.content.Context,int,int) -> toTelecomDisconnectCauseDescription
    243:246:java.lang.CharSequence toTelecomDisconnectCauseLabel(android.content.Context,int,int) -> toTelecomDisconnectCauseLabel
    844:853:int toTelecomDisconnectCauseTone(int,int) -> toTelecomDisconnectCauseTone
    821:836:java.lang.String toTelecomDisconnectReason(android.content.Context,int,java.lang.String,int) -> toTelecomDisconnectReason
com.android.services.telephony.EmergencyTonePlayer -> com.android.services.telephony.EmergencyTonePlayer:
    42:49:void <clinit>() -> <clinit>
    57:62:void <init>(android.content.Context) -> <init>
    137:138:int getToneSetting() -> getToneSetting
    66:71:void start() -> start
    105:121:void startAlert() -> startAlert
    85:93:void startVibrate() -> startVibrate
    80:81:void stop() -> stop
    126:132:void stopAlert() -> stopAlert
    98:100:void stopVibrate() -> stopVibrate
com.android.services.telephony.GsmConnection -> com.android.services.telephony.GsmConnection:
    26:26:void <init>(com.android.internal.telephony.Connection,java.lang.String,int) -> <init>
    70:76:int buildConnectionCapabilities() -> buildConnectionCapabilities
    59:62:int buildConnectionProperties() -> buildConnectionProperties
    38:38:com.android.services.telephony.TelephonyConnection cloneConnection() -> cloneConnection
    44:45:void onPlayDtmfTone(char) -> onPlayDtmfTone
    52:53:void onStopDtmfTone() -> onStopDtmfTone
com.android.services.telephony.HoldTracker -> com.android.services.telephony.HoldTracker:
    32:33:void <init>() -> <init>
    41:47:void addHoldable(android.telecom.PhoneAccountHandle,com.android.services.telephony.Holdable) -> addHoldable
    56:61:void removeHoldable(android.telecom.PhoneAccountHandle,com.android.services.telephony.Holdable) -> removeHoldable
    69:84:void updateHoldCapability(android.telecom.PhoneAccountHandle) -> updateHoldCapability
com.android.services.telephony.ImsConference -> com.android.services.telephony.ImsConference:
    205:459:void <init>(com.android.services.telephony.TelecomAccountRegistry,com.android.services.telephony.TelephonyConnectionServiceProxy,com.android.services.telephony.TelephonyConnection,android.telecom.PhoneAccountHandle,com.android.services.telephony.ImsConference$FeatureFlagProxy,com.android.services.telephony.ImsConference$CarrierConfiguration) -> <init>
    70:70:com.android.services.telephony.TelephonyConnection access$100(com.android.services.telephony.ImsConference) -> access$100
    70:70:int access$200(com.android.services.telephony.ImsConference,int,int,boolean) -> access$200
    70:70:void access$300(com.android.services.telephony.ImsConference,int) -> access$300
    70:70:void access$400(com.android.services.telephony.ImsConference) -> access$400
    70:70:void access$500(com.android.services.telephony.ImsConference,android.os.Bundle) -> access$500
    70:70:void access$600(com.android.services.telephony.ImsConference) -> access$600
    473:502:int applyHostCapabilities(int,int,boolean) -> applyHostCapabilities
    517:537:int applyHostProperties(int,int) -> applyHostProperties
    1600:1600:int applyHostPropertiesToChild(int,int) -> applyHostPropertiesToChild
    1239:1271:void createConferenceParticipantConnection(com.android.services.telephony.TelephonyConnection,com.android.ims.internal.ConferenceParticipant) -> createConferenceParticipantConnection
    1293:1306:void disconnectConferenceParticipants() -> disconnectConferenceParticipants
    1332:1340:java.lang.String extractPhoneNumber(android.net.Uri) -> extractPhoneNumber
    1584:1587:android.os.Bundle getChildExtrasFromHostBundle(android.os.Bundle) -> getChildExtrasFromHostBundle
    581:581:android.telecom.Connection getConferenceHost() -> getConferenceHost
    1631:1631:int getNumberOfParticipants() -> getNumberOfParticipants
    561:562:android.telecom.Connection$VideoProvider getVideoProvider() -> getVideoProvider
    574:575:int getVideoState() -> getVideoState
    958:1117:void handleConferenceParticipantsUpdate(com.android.services.telephony.TelephonyConnection,java.util.List) -> handleConferenceParticipantsUpdate
    1650:1651:void handleConnectionDestruction(com.android.services.telephony.ConferenceParticipantConnection) -> handleConnectionDestruction
    1401:1457:void handleOriginalConnectionChange() -> handleOriginalConnectionChange
    813:820:boolean isConferenceHost() -> isConferenceHost
    1639:1640:boolean isFullConference() -> isFullConference
    1357:1383:boolean isParticipantHost(android.net.Uri[],android.net.Uri) -> isParticipantHost
    796:802:boolean isRemotelyHosted() -> isRemotelyHosted
    1511:1511:boolean isVideoCapable() -> isVideoCapable
    989:991:boolean lambda$handleConferenceParticipantsUpdate$2(com.android.ims.internal.ConferenceParticipant) -> lambda$handleConferenceParticipantsUpdate$2
    908:908:java.lang.String lambda$setConferenceHost$0(java.lang.String) -> lambda$setConferenceHost$0
    914:914:java.lang.String lambda$setConferenceHost$1(java.lang.String) -> lambda$setConferenceHost$1
    667:670:void onAddConferenceParticipants(java.util.List) -> onAddConferenceParticipants
    678:681:void onAnswer(int) -> onAnswer
    750:751:void onConnectionAdded(android.telecom.Connection) -> onConnectionAdded
    610:625:void onDisconnect() -> onDisconnect
    700:703:void onHold() -> onHold
    651:656:void onMerge(android.telecom.Connection) -> onMerge
    724:727:void onPlayDtmfTone(char) -> onPlayDtmfTone
    689:692:void onReject() -> onReject
    639:639:void onSeparate(android.telecom.Connection) -> onSeparate
    735:738:void onStopDtmfTone() -> onStopDtmfTone
    711:714:void onUnhold() -> onUnhold
    1280:1286:void removeConferenceParticipant(com.android.services.telephony.ConferenceParticipantConnection) -> removeConferenceParticipant
    869:941:void setConferenceHost(com.android.services.telephony.TelephonyConnection) -> setConferenceHost
    756:760:void setHoldable(boolean) -> setHoldable
    597:597:void setParticipants(java.util.List) -> setParticipants
    1466:1501:void setState(int) -> setState
    1181:1221:void startEmulatingSinglePartyCall() -> startEmulatingSinglePartyCall
    1133:1163:void stopEmulatingSinglePartyCall() -> stopEmulatingSinglePartyCall
    1612:1624:java.lang.String toString() -> toString
    408:413:void updateConferenceParticipantsAfterCreation() -> updateConferenceParticipantsAfterCreation
    1550:1554:void updateConnectionProperties(int) -> updateConnectionProperties
    1565:1573:void updateExtras(android.os.Bundle) -> updateExtras
    840:859:void updateManageConference() -> updateManageConference
    1517:1539:void updateStatusHints() -> updateStatusHints
com.android.services.telephony.ImsConference$$ExternalSyntheticLambda1 -> com.android.services.telephony.ImsConference$$ExternalSyntheticLambda1:
    com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$0 com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$0.<clinit>() -> <clinit>
    void com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$0.<init>() -> <init>
    java.lang.Object com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$0.apply(java.lang.Object) -> apply
com.android.services.telephony.ImsConference$$ExternalSyntheticLambda2 -> com.android.services.telephony.ImsConference$$ExternalSyntheticLambda2:
    com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$4 com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$4.INSTANCE -> INSTANCE
    void com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$4.<clinit>() -> <clinit>
    void com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$4.<init>() -> <init>
    java.lang.Object com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$4.apply(java.lang.Object) -> apply
com.android.services.telephony.ImsConference$$ExternalSyntheticLambda3 -> com.android.services.telephony.ImsConference$$ExternalSyntheticLambda3:
    com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$2 com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$2.INSTANCE -> INSTANCE
    void com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$2.<clinit>() -> <clinit>
    void com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$2.<init>() -> <init>
    java.lang.Object com.android.services.telephony.ImsConference$$InternalSyntheticLambda$1$3ef4ee2b8140e2cb0c87a926ff03b74b3e2b0dbdec88d97b7fe8cd37f7200b54$2.apply(java.lang.Object) -> apply
com.android.services.telephony.ImsConference$$ExternalSyntheticLambda4 -> com.android.services.telephony.ImsConference$$ExternalSyntheticLambda4:
    com.android.services.telephony.ImsConference com.android.services.telephony.ImsConference$$InternalSyntheticLambda$0$cd35f63f342b0455879e932916301ff4fd46883e9634a994231803bf6e26f18c$0.f$0 -> f$0
    void com.android.services.telephony.ImsConference$$InternalSyntheticLambda$0$cd35f63f342b0455879e932916301ff4fd46883e9634a994231803bf6e26f18c$0.<init>(com.android.services.telephony.ImsConference) -> <init>
    boolean com.android.services.telephony.ImsConference$$InternalSyntheticLambda$0$cd35f63f342b0455879e932916301ff4fd46883e9634a994231803bf6e26f18c$0.test(java.lang.Object) -> test
com.android.services.telephony.ImsConference$1 -> com.android.services.telephony.ImsConference$1:
    206:206:void <init>(com.android.services.telephony.ImsConference) -> <init>
    316:319:void onConferenceParticipantsChanged(android.telecom.Connection,java.util.List) -> onConferenceParticipantsChanged
    248:254:void onConnectionCapabilitiesChanged(android.telecom.Connection,int) -> onConnectionCapabilitiesChanged
    285:292:void onConnectionEvent(android.telecom.Connection,java.lang.String,android.os.Bundle) -> onConnectionEvent
    260:262:void onConnectionPropertiesChanged(android.telecom.Connection,int) -> onConnectionPropertiesChanged
    228:228:void onDisconnected(android.telecom.Connection,android.telecom.DisconnectCause) -> onDisconnected
    273:274:void onExtrasChanged(android.telecom.Connection,android.os.Bundle) -> onExtrasChanged
    279:280:void onExtrasRemoved(android.telecom.Connection,java.util.List) -> onExtrasRemoved
    297:298:void onOriginalConnectionConfigured(com.android.services.telephony.TelephonyConnection) -> onOriginalConnectionConfigured
    330:331:void onRingbackRequested(android.telecom.Connection,boolean) -> onRingbackRequested
    216:216:void onStateChanged(android.telecom.Connection,int) -> onStateChanged
    267:268:void onStatusHintsChanged(android.telecom.Connection,android.telecom.StatusHints) -> onStatusHintsChanged
    240:242:void onVideoProviderChanged(android.telecom.Connection,android.telecom.Connection$VideoProvider) -> onVideoProviderChanged
    233:234:void onVideoStateChanged(android.telecom.Connection,int) -> onVideoStateChanged
com.android.services.telephony.ImsConference$CarrierConfiguration -> com.android.services.telephony.ImsConference$CarrierConfiguration:
    84:84:void <init>(boolean,int,boolean,boolean,com.android.services.telephony.ImsConference$1) -> <init>
    158:162:void <init>(boolean,int,boolean,boolean) -> <init>
    179:179:int getMaximumConferenceSize() -> getMaximumConferenceSize
    197:197:boolean isHoldAllowed() -> isHoldAllowed
    171:171:boolean isMaximumConferenceSizeEnforced() -> isMaximumConferenceSizeEnforced
    189:189:boolean shouldLocalDisconnectEmptyConference() -> shouldLocalDisconnectEmptyConference
com.android.services.telephony.ImsConference$CarrierConfiguration$Builder -> com.android.services.telephony.ImsConference$CarrierConfiguration$Builder:
    88:92:void <init>() -> <init>
    142:142:com.android.services.telephony.ImsConference$CarrierConfiguration build() -> build
    133:133:com.android.services.telephony.ImsConference$CarrierConfiguration$Builder setIsHoldAllowed(boolean) -> setIsHoldAllowed
    101:101:com.android.services.telephony.ImsConference$CarrierConfiguration$Builder setIsMaximumConferenceSizeEnforced(boolean) -> setIsMaximumConferenceSizeEnforced
    111:111:com.android.services.telephony.ImsConference$CarrierConfiguration$Builder setMaximumConferenceSize(int) -> setMaximumConferenceSize
    123:123:com.android.services.telephony.ImsConference$CarrierConfiguration$Builder setShouldLocalDisconnectEmptyConference(boolean) -> setShouldLocalDisconnectEmptyConference
com.android.services.telephony.ImsConferenceController -> com.android.services.telephony.ImsConferenceController:
    51:138:void <init>(com.android.services.telephony.TelecomAccountRegistry,com.android.services.telephony.TelephonyConnectionServiceProxy,com.android.services.telephony.ImsConference$FeatureFlagProxy) -> <init>
    45:45:com.android.services.telephony.TelecomAccountRegistry access$000(com.android.services.telephony.ImsConferenceController) -> access$000
    45:45:java.util.ArrayList access$100(com.android.services.telephony.ImsConferenceController) -> access$100
    45:45:void access$200(com.android.services.telephony.ImsConferenceController) -> access$200
    45:45:void access$300(com.android.services.telephony.ImsConferenceController) -> access$300
    160:180:void add(com.android.services.telephony.TelephonyConnection) -> add
    142:149:void addConference(com.android.services.telephony.ImsConference) -> addConference
    459:484:com.android.services.telephony.ImsConference$CarrierConfiguration getCarrierConfig(com.android.internal.telephony.Phone) -> getCarrierConfig
    347:355:boolean isMemberOfPeerConference(android.telecom.Connection) -> isMemberOfPeerConference
    331:331:boolean lambda$recalculateConferenceable$1(android.telecom.Conferenceable) -> lambda$recalculateConferenceable$1
    332:332:android.telecom.Connection lambda$recalculateConferenceable$2(android.telecom.Conferenceable) -> lambda$recalculateConferenceable$2
    219:220:void recalculate() -> recalculate
    362:371:void recalculateConference() -> recalculateConference
    227:335:void recalculateConferenceable() -> recalculateConferenceable
    190:211:void remove(android.telecom.Connection) -> remove
    391:455:void startConference(com.android.services.telephony.TelephonyConnection) -> startConference
com.android.services.telephony.ImsConferenceController$$ExternalSyntheticLambda0 -> com.android.services.telephony.ImsConferenceController$$ExternalSyntheticLambda0:
    com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$2 com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$2.INSTANCE -> INSTANCE
    void com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$2.<clinit>() -> <clinit>
    void com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$2.<init>() -> <init>
    java.lang.Object com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$2.apply(java.lang.Object) -> apply
com.android.services.telephony.ImsConferenceController$$ExternalSyntheticLambda1 -> com.android.services.telephony.ImsConferenceController$$ExternalSyntheticLambda1:
    android.telecom.Conferenceable com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$0.f$0 -> f$0
    void com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$0.<init>(android.telecom.Conferenceable) -> <init>
    boolean com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$0.test(java.lang.Object) -> test
com.android.services.telephony.ImsConferenceController$$ExternalSyntheticLambda2 -> com.android.services.telephony.ImsConferenceController$$ExternalSyntheticLambda2:
    com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$1 com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$1.INSTANCE -> INSTANCE
    void com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$1.<clinit>() -> <clinit>
    void com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$1.<init>() -> <init>
    boolean com.android.services.telephony.ImsConferenceController$$InternalSyntheticLambda$1$54bbb756e65ced5d30a50ef78f9c02e01eead376f1a90f2939b161ddb644eada$1.test(java.lang.Object) -> test
com.android.services.telephony.ImsConferenceController$1 -> com.android.services.telephony.ImsConferenceController$1:
    52:52:void <init>(com.android.services.telephony.ImsConferenceController) -> <init>
    55:64:void onDestroyed(android.telecom.Conference) -> onDestroyed
    69:70:void onStateChanged(android.telecom.Conference,int,int) -> onStateChanged
com.android.services.telephony.ImsConferenceController$2 -> com.android.services.telephony.ImsConferenceController$2:
    75:75:void <init>(com.android.services.telephony.ImsConferenceController) -> <init>
    78:79:void onConferenceStarted() -> onConferenceStarted
    84:85:void onConferenceSupportedChanged(android.telecom.Connection,boolean) -> onConferenceSupportedChanged
    102:102:void onDestroyed(android.telecom.Connection) -> onDestroyed
    96:97:void onDisconnected(android.telecom.Connection,android.telecom.DisconnectCause) -> onDisconnected
    90:91:void onStateChanged(android.telecom.Connection,int) -> onStateChanged
com.android.services.telephony.Log -> com.android.services.telephony.Log:
    28:32:void <clinit>() -> <clinit>
    49:50:void d(java.lang.Object,java.lang.String,java.lang.Object[]) -> d
    89:90:void e(java.lang.Object,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    114:114:java.lang.String getPrefixFromObject(java.lang.Object) -> getPrefixFromObject
    54:55:void i(java.lang.String,java.lang.String,java.lang.Object[]) -> i
    59:60:void i(java.lang.Object,java.lang.String,java.lang.Object[]) -> i
    37:37:boolean isLoggable(int) -> isLoggable
    64:65:void v(java.lang.String,java.lang.String,java.lang.Object[]) -> v
    69:70:void v(java.lang.Object,java.lang.String,java.lang.Object[]) -> v
    74:75:void w(java.lang.String,java.lang.String,java.lang.Object[]) -> w
    79:80:void w(java.lang.Object,java.lang.String,java.lang.Object[]) -> w
    104:105:void wtf(java.lang.String,java.lang.String,java.lang.Object[]) -> wtf
    109:110:void wtf(java.lang.Object,java.lang.String,java.lang.Object[]) -> wtf
com.android.services.telephony.MmiCodeUtil -> com.android.services.telephony.MmiCodeUtil:
    65:65:void <clinit>() -> <clinit>
    90:93:java.lang.String getMmiServiceCode(java.lang.String) -> getMmiServiceCode
    128:141:java.lang.String getSuppServiceKey(java.lang.String) -> getSuppServiceKey
    123:124:boolean isPinPukCommand(java.lang.String) -> isPinPukCommand
    115:119:boolean isServiceCodeCallBarring(java.lang.String) -> isServiceCodeCallBarring
    107:110:boolean isServiceCodeCallForwarding(java.lang.String) -> isServiceCodeCallForwarding
    100:100:java.lang.String makeEmptyNull(java.lang.String) -> makeEmptyNull
com.android.services.telephony.PstnIncomingCallNotifier -> com.android.services.telephony.PstnIncomingCallNotifier:
    83:114:void <init>(com.android.internal.telephony.Phone) -> <init>
    55:55:void access$000(com.android.services.telephony.PstnIncomingCallNotifier,android.os.AsyncResult) -> access$000
    55:55:void access$100(com.android.services.telephony.PstnIncomingCallNotifier,android.os.AsyncResult) -> access$100
    55:55:void access$200(com.android.services.telephony.PstnIncomingCallNotifier,android.os.AsyncResult) -> access$200
    236:271:void addNewUnknownCall(com.android.internal.telephony.Connection) -> addNewUnknownCall
    387:403:android.telecom.PhoneAccountHandle findCorrectPhoneAccountHandle() -> findCorrectPhoneAccountHandle
    178:201:void handleCdmaCallWaiting(android.os.AsyncResult) -> handleCdmaCallWaiting
    148:172:void handleNewRingingConnection(android.os.AsyncResult) -> handleNewRingingConnection
    209:229:void handleNewUnknownConnection(android.os.AsyncResult) -> handleNewUnknownConnection
    159:161:void lambda$handleNewRingingConnection$0(com.android.internal.telephony.Connection) -> lambda$handleNewRingingConnection$0
    358:359:java.lang.String lambda$sendIncomingCallIntent$1(android.telecom.PhoneAccountHandle) -> lambda$sendIncomingCallIntent$1
    417:425:boolean maybeSwapAnyWithUnknownConnection(com.android.internal.telephony.Connection) -> maybeSwapAnyWithUnknownConnection
    441:470:boolean maybeSwapWithUnknownConnection(com.android.services.telephony.TelephonyConnection,com.android.internal.telephony.Connection) -> maybeSwapWithUnknownConnection
    125:129:void registerForNotifications() -> registerForNotifications
    279:371:void sendIncomingCallIntent(com.android.internal.telephony.Connection) -> sendIncomingCallIntent
    118:118:void teardown() -> teardown
    134:138:void unregisterForNotifications() -> unregisterForNotifications
com.android.services.telephony.PstnIncomingCallNotifier$$ExternalSyntheticLambda0 -> com.android.services.telephony.PstnIncomingCallNotifier$$ExternalSyntheticLambda0:
    com.android.internal.telephony.Connection com.android.services.telephony.PstnIncomingCallNotifier$$InternalSyntheticLambda$0$428a96be2223f00247c4f737d965b179cdc2c135da4092c870049d53f74a3d53$0.f$1 -> f$1
    com.android.services.telephony.PstnIncomingCallNotifier com.android.services.telephony.PstnIncomingCallNotifier$$InternalSyntheticLambda$0$428a96be2223f00247c4f737d965b179cdc2c135da4092c870049d53f74a3d53$0.f$0 -> f$0
    void com.android.services.telephony.PstnIncomingCallNotifier$$InternalSyntheticLambda$0$428a96be2223f00247c4f737d965b179cdc2c135da4092c870049d53f74a3d53$0.<init>(com.android.services.telephony.PstnIncomingCallNotifier,com.android.internal.telephony.Connection) -> <init>
    void com.android.services.telephony.PstnIncomingCallNotifier$$InternalSyntheticLambda$0$428a96be2223f00247c4f737d965b179cdc2c135da4092c870049d53f74a3d53$0.run() -> run
com.android.services.telephony.PstnIncomingCallNotifier$$ExternalSyntheticLambda1 -> com.android.services.telephony.PstnIncomingCallNotifier$$ExternalSyntheticLambda1:
    com.android.services.telephony.PstnIncomingCallNotifier$$InternalSyntheticLambda$0$e48f914babd78ce0a2bc56f2419e2270c5baa0f31a703a3e143193e1dbab9fd1$0 com.android.services.telephony.PstnIncomingCallNotifier$$InternalSyntheticLambda$0$e48f914babd78ce0a2bc56f2419e2270c5baa0f31a703a3e143193e1dbab9fd1$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.PstnIncomingCallNotifier$$InternalSyntheticLambda$0$e48f914babd78ce0a2bc56f2419e2270c5baa0f31a703a3e143193e1dbab9fd1$0.<clinit>() -> <clinit>
    void com.android.services.telephony.PstnIncomingCallNotifier$$InternalSyntheticLambda$0$e48f914babd78ce0a2bc56f2419e2270c5baa0f31a703a3e143193e1dbab9fd1$0.<init>() -> <init>
    java.lang.Object com.android.services.telephony.PstnIncomingCallNotifier$$InternalSyntheticLambda$0$e48f914babd78ce0a2bc56f2419e2270c5baa0f31a703a3e143193e1dbab9fd1$0.apply(java.lang.Object) -> apply
com.android.services.telephony.PstnIncomingCallNotifier$1 -> com.android.services.telephony.PstnIncomingCallNotifier$1:
    83:83:void <init>(com.android.services.telephony.PstnIncomingCallNotifier) -> <init>
    86:94:void handleMessage(android.os.Message) -> handleMessage
com.android.services.telephony.PstnPhoneCapabilitiesNotifier -> com.android.services.telephony.PstnPhoneCapabilitiesNotifier:
    42:64:void <init>(com.android.internal.telephony.Phone,com.android.services.telephony.PstnPhoneCapabilitiesNotifier$Listener) -> <init>
    29:29:void access$000(com.android.services.telephony.PstnPhoneCapabilitiesNotifier,android.os.AsyncResult) -> access$000
    89:93:void handleVideoCapabilitesChanged(android.os.AsyncResult) -> handleVideoCapabilitesChanged
    73:75:void registerForNotifications() -> registerForNotifications
    69:69:void teardown() -> teardown
    81:83:void unregisterForNotifications() -> unregisterForNotifications
com.android.services.telephony.PstnPhoneCapabilitiesNotifier$1 -> com.android.services.telephony.PstnPhoneCapabilitiesNotifier$1:
    42:42:void <init>(com.android.services.telephony.PstnPhoneCapabilitiesNotifier) -> <init>
    45:47:void handleMessage(android.os.Message) -> handleMessage
com.android.services.telephony.RadioOnHelper -> com.android.services.telephony.RadioOnHelper:
    46:48:void <init>(android.content.Context) -> <init>
    150:150:boolean isOkToCall(com.android.internal.telephony.Phone,int) -> isOkToCall
    141:144:void onComplete(com.android.services.telephony.RadioOnStateListener,boolean) -> onComplete
    107:131:void powerOnRadio(boolean,com.android.internal.telephony.Phone,boolean) -> powerOnRadio
    52:63:void setupListeners() -> setupListeners
    82:96:void triggerRadioOnAndListen(com.android.services.telephony.RadioOnStateListener$Callback,boolean,com.android.internal.telephony.Phone,boolean) -> triggerRadioOnAndListen
com.android.services.telephony.RadioOnStateListener -> com.android.services.telephony.RadioOnStateListener:
    33:63:void <init>() -> <init>
    33:33:void access$000(com.android.services.telephony.RadioOnStateListener,com.android.internal.telephony.Phone,com.android.services.telephony.RadioOnStateListener$Callback,boolean,boolean) -> access$000
    33:33:void access$100(com.android.services.telephony.RadioOnStateListener,android.telephony.ServiceState) -> access$100
    33:33:void access$200(com.android.services.telephony.RadioOnStateListener) -> access$200
    33:33:void access$300(com.android.services.telephony.RadioOnStateListener) -> access$300
    33:33:void access$400(com.android.services.telephony.RadioOnStateListener) -> access$400
    297:297:void cancelRetryTimer() -> cancelRetryTimer
    275:288:void cleanup() -> cleanup
    367:377:boolean equals(java.lang.Object) -> equals
    351:351:android.os.Handler getHandler() -> getHandler
    214:214:boolean isOkToCall(int) -> isOkToCall
    342:345:void onComplete(boolean) -> onComplete
    199:207:void onRadioOn() -> onRadioOn
    221:252:void onRetryTimeout() -> onRetryTimeout
    175:194:void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    317:317:void registerForRadioOff() -> registerForRadioOff
    329:330:void registerForRadioOn() -> registerForRadioOn
    304:305:void registerForServiceStateChanged() -> registerForServiceStateChanged
    356:356:void setMaxNumRetries(int) -> setMaxNumRetries
    361:361:void setTimeBetweenRetriesMillis(long) -> setTimeBetweenRetriesMillis
    292:293:void startRetryTimer() -> startRetryTimer
    147:166:void startSequenceInternal(com.android.internal.telephony.Phone,com.android.services.telephony.RadioOnStateListener$Callback,boolean,boolean) -> startSequenceInternal
    322:325:void unregisterForRadioOff() -> unregisterForRadioOff
    335:338:void unregisterForRadioOn() -> unregisterForRadioOn
    310:313:void unregisterForServiceStateChanged() -> unregisterForServiceStateChanged
    125:137:void waitForRadioOn(com.android.internal.telephony.Phone,com.android.services.telephony.RadioOnStateListener$Callback,boolean,boolean) -> waitForRadioOn
com.android.services.telephony.RadioOnStateListener$1 -> com.android.services.telephony.RadioOnStateListener$1:
    63:63:void <init>(com.android.services.telephony.RadioOnStateListener,android.os.Looper) -> <init>
    66:94:void handleMessage(android.os.Message) -> handleMessage
com.android.services.telephony.TelecomAccountRegistry -> com.android.services.telephony.TelecomAccountRegistry:
    1021:1166:void <init>(android.content.Context) -> <init>
    81:81:android.content.Context access$100(com.android.services.telephony.TelecomAccountRegistry) -> access$100
    81:81:int access$1000(com.android.services.telephony.TelecomAccountRegistry) -> access$1000
    81:81:int access$1002(com.android.services.telephony.TelecomAccountRegistry,int) -> access$1002
    81:81:com.android.internal.telephony.ExponentialBackoff access$1100(com.android.services.telephony.TelecomAccountRegistry) -> access$1100
    81:81:android.os.HandlerThread access$1200(com.android.services.telephony.TelecomAccountRegistry) -> access$1200
    81:81:void access$1300(com.android.services.telephony.TelecomAccountRegistry) -> access$1300
    81:81:void access$1400(com.android.services.telephony.TelecomAccountRegistry) -> access$1400
    81:81:void access$1500(com.android.services.telephony.TelecomAccountRegistry,int) -> access$1500
    81:81:int access$1700(com.android.services.telephony.TelecomAccountRegistry) -> access$1700
    81:81:int access$1702(com.android.services.telephony.TelecomAccountRegistry,int) -> access$1702
    81:81:android.telephony.SubscriptionManager$OnSubscriptionsChangedListener access$1800(com.android.services.telephony.TelecomAccountRegistry) -> access$1800
    81:81:android.telecom.TelecomManager access$200(com.android.services.telephony.TelecomAccountRegistry) -> access$200
    81:81:android.telephony.TelephonyManager access$300(com.android.services.telephony.TelecomAccountRegistry) -> access$300
    81:81:android.telephony.SubscriptionManager access$400(com.android.services.telephony.TelecomAccountRegistry) -> access$400
    81:81:int access$500(com.android.services.telephony.TelecomAccountRegistry) -> access$500
    81:81:int access$502(com.android.services.telephony.TelecomAccountRegistry,int) -> access$502
    81:81:boolean access$600(com.android.services.telephony.TelecomAccountRegistry) -> access$600
    81:81:boolean access$602(com.android.services.telephony.TelecomAccountRegistry,boolean) -> access$602
    81:81:android.telephony.ims.ImsManager access$700(com.android.services.telephony.TelecomAccountRegistry) -> access$700
    81:81:java.lang.Object access$800(com.android.services.telephony.TelecomAccountRegistry) -> access$800
    81:81:java.util.List access$900(com.android.services.telephony.TelecomAccountRegistry) -> access$900
    1476:1490:void cleanupPhoneAccounts() -> cleanupPhoneAccounts
    1329:1335:android.net.Uri getAddress(android.telecom.PhoneAccountHandle) -> getAddress
    1174:1177:com.android.services.telephony.TelecomAccountRegistry getInstance(android.content.Context) -> getInstance
    1461:1467:android.telecom.PhoneAccountHandle getPhoneAccountHandleForSubId(int) -> getPhoneAccountHandleForSubId
    1319:1319:android.telephony.SubscriptionManager getSubscriptionManager() -> getSubscriptionManager
    1185:1185:com.android.services.telephony.TelephonyConnectionService getTelephonyConnectionService() -> getTelephonyConnectionService
    1575:1583:void handleCarrierConfigChange(int) -> handleCarrierConfigChange
    1450:1456:boolean hasAccountEntryForPhoneAccount(android.telecom.PhoneAccountHandle) -> hasAccountEntryForPhoneAccount
    1288:1294:boolean isManageImsConferenceCallSupported(android.telecom.PhoneAccountHandle) -> isManageImsConferenceCallSupported
    1214:1220:boolean isMergeCallSupported(android.telecom.PhoneAccountHandle) -> isMergeCallSupported
    1270:1276:boolean isMergeImsCallSupported(android.telecom.PhoneAccountHandle) -> isMergeImsCallSupported
    1250:1259:boolean isMergeOfWifiCallsAllowedWhenVoWifiOff(android.telecom.PhoneAccountHandle) -> isMergeOfWifiCallsAllowedWhenVoWifiOff
    1305:1311:boolean isShowPreciseFailedCause(android.telecom.PhoneAccountHandle) -> isShowPreciseFailedCause
    1362:1368:boolean isUsingSimCallManager(android.telecom.PhoneAccountHandle) -> isUsingSimCallManager
    1232:1238:boolean isVideoConferencingSupported(android.telecom.PhoneAccountHandle) -> isVideoConferencingSupported
    1196:1202:boolean isVideoPauseSupported(android.telecom.PhoneAccountHandle) -> isVideoPauseSupported
    1252:1252:boolean lambda$isMergeOfWifiCallsAllowedWhenVoWifiOff$0(android.telecom.PhoneAccountHandle,com.android.services.telephony.TelecomAccountRegistry$AccountEntry) -> lambda$isMergeOfWifiCallsAllowedWhenVoWifiOff$0
    1340:1351:void refreshAdhocConference(boolean) -> refreshAdhocConference
    1410:1438:void registerContentObservers() -> registerContentObservers
    1181:1181:void setTelephonyConnectionService(com.android.services.telephony.TelephonyConnectionService) -> setTelephonyConnectionService
    1498:1551:void setupAccounts() -> setupAccounts
    1383:1405:void setupOnBoot() -> setupOnBoot
    1555:1560:void tearDownAccounts() -> tearDownAccounts
com.android.services.telephony.TelecomAccountRegistry$$ExternalSyntheticLambda0 -> com.android.services.telephony.TelecomAccountRegistry$$ExternalSyntheticLambda0:
    android.telecom.PhoneAccountHandle com.android.services.telephony.TelecomAccountRegistry$$InternalSyntheticLambda$0$9998300604c19d011bd45ee0769a72aa109be43333c5c5cb818cbc525c59c5dc$0.f$0 -> f$0
    void com.android.services.telephony.TelecomAccountRegistry$$InternalSyntheticLambda$0$9998300604c19d011bd45ee0769a72aa109be43333c5c5cb818cbc525c59c5dc$0.<init>(android.telecom.PhoneAccountHandle) -> <init>
    boolean com.android.services.telephony.TelecomAccountRegistry$$InternalSyntheticLambda$0$9998300604c19d011bd45ee0769a72aa109be43333c5c5cb818cbc525c59c5dc$0.test(java.lang.Object) -> test
com.android.services.telephony.TelecomAccountRegistry$1 -> com.android.services.telephony.TelecomAccountRegistry$1:
    1022:1022:void <init>(com.android.services.telephony.TelecomAccountRegistry) -> <init>
    1040:1055:void onAddListenerFailed() -> onAddListenerFailed
    1025:1034:void onSubscriptionsChanged() -> onSubscriptionsChanged
com.android.services.telephony.TelecomAccountRegistry$2 -> com.android.services.telephony.TelecomAccountRegistry$2:
    1060:1060:void <init>(com.android.services.telephony.TelecomAccountRegistry) -> <init>
    1063:1077:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.services.telephony.TelecomAccountRegistry$3 -> com.android.services.telephony.TelecomAccountRegistry$3:
    1082:1082:void <init>(com.android.services.telephony.TelecomAccountRegistry) -> <init>
    1085:1087:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.services.telephony.TelecomAccountRegistry$4 -> com.android.services.telephony.TelecomAccountRegistry$4:
    1143:1143:void <init>(com.android.services.telephony.TelecomAccountRegistry) -> <init>
    1146:1149:void run() -> run
com.android.services.telephony.TelecomAccountRegistry$5 -> com.android.services.telephony.TelecomAccountRegistry$5:
    1410:1410:void <init>(com.android.services.telephony.TelecomAccountRegistry,android.os.Handler) -> <init>
    1413:1417:void onChange(boolean) -> onChange
com.android.services.telephony.TelecomAccountRegistry$6 -> com.android.services.telephony.TelecomAccountRegistry$6:
    1426:1426:void <init>(com.android.services.telephony.TelecomAccountRegistry,android.os.Handler) -> <init>
    1429:1433:void onChange(boolean) -> onChange
com.android.services.telephony.TelecomAccountRegistry$AccountEntry -> com.android.services.telephony.TelecomAccountRegistry$AccountEntry:
    145:201:void <init>(com.android.services.telephony.TelecomAccountRegistry,com.android.internal.telephony.Phone,boolean,boolean) -> <init>
    119:119:android.telephony.ims.feature.MmTelFeature$MmTelCapabilities access$002(com.android.services.telephony.TelecomAccountRegistry$AccountEntry,android.telephony.ims.feature.MmTelFeature$MmTelCapabilities) -> access$002
    119:119:android.telecom.PhoneAccount access$1900(com.android.services.telephony.TelecomAccountRegistry$AccountEntry) -> access$1900
    119:119:com.android.internal.telephony.Phone access$2000(com.android.services.telephony.TelecomAccountRegistry$AccountEntry) -> access$2000
    287:503:android.telecom.PhoneAccount buildPstnPhoneAccount(boolean,boolean) -> buildPstnPhoneAccount
    769:778:android.os.Bundle getPhoneAccountExtras() -> getPhoneAccountExtras
    509:509:android.telecom.PhoneAccountHandle getPhoneAccountHandle() -> getPhoneAccountHandle
    513:513:int getSubId() -> getSubId
    635:637:boolean isCarrierAdhocConferenceCallSupported() -> isCarrierAdhocConferenceCallSupported
    757:758:boolean isCarrierAllowRttWhenRoaming() -> isCarrierAllowRttWhenRoaming
    671:673:boolean isCarrierEmergencyVideoCallsAllowed() -> isCarrierEmergencyVideoCallsAllowed
    623:625:boolean isCarrierInstantLetteringSupported() -> isCarrierInstantLetteringSupported
    710:711:boolean isCarrierManageImsConferenceCallSupported() -> isCarrierManageImsConferenceCallSupported
    648:650:boolean isCarrierMergeCallSupported() -> isCarrierMergeCallSupported
    660:661:boolean isCarrierMergeImsCallSupported() -> isCarrierMergeImsCallSupported
    697:698:boolean isCarrierMergeOfWifiCallsAllowedWhenVoWifiOff() -> isCarrierMergeOfWifiCallsAllowedWhenVoWifiOff
    736:737:boolean isCarrierShowPreciseFailedCause() -> isCarrierShowPreciseFailedCause
    748:749:boolean isCarrierUseCallRecordingTone() -> isCarrierUseCallRecordingTone
    722:724:boolean isCarrierUsingSimCallManager() -> isCarrierUsingSimCallManager
    683:685:boolean isCarrierVideoConferencingSupported() -> isCarrierVideoConferencingSupported
    577:579:boolean isCarrierVideoPauseSupported() -> isCarrierVideoPauseSupported
    590:599:boolean isCarrierVideoPresenceSupported() -> isCarrierVideoPresenceSupported
    527:563:boolean isEmergencyPreferredAccount(int,int) -> isEmergencyPreferredAccount
    998:1015:boolean isImsVoiceAvailable() -> isImsVoiceAvailable
    975:975:boolean isManageImsConferenceCallSupported() -> isManageImsConferenceCallSupported
    942:942:boolean isMergeCallSupported() -> isMergeCallSupported
    950:950:boolean isMergeImsCallSupported() -> isMergeImsCallSupported
    966:966:boolean isMergeOfWifiCallsAllowedWhenVoWifiOff() -> isMergeOfWifiCallsAllowedWhenVoWifiOff
    878:918:boolean isRttCurrentlySupported() -> isRttCurrentlySupported
    994:994:boolean isShowPreciseFailedCause() -> isShowPreciseFailedCause
    608:611:boolean isUserContactDiscoverySettingEnabled() -> isUserContactDiscoverySettingEnabled
    984:984:boolean isUsingSimCallManager() -> isUsingSimCallManager
    958:958:boolean isVideoConferencingSupported() -> isVideoConferencingSupported
    934:934:boolean isVideoPauseSupported() -> isVideoPauseSupported
    791:801:void onVideoCapabilitiesChanged(boolean) -> onVideoCapabilitiesChanged
    262:269:void reRegisterPstnPhoneAccount() -> reRegisterPstnPhoneAccount
    240:253:void registerImsRegistrationCallback() -> registerImsRegistrationCallback
    219:234:void registerMmTelCapabilityCallback() -> registerMmTelCapabilityCallback
    274:276:android.telecom.PhoneAccount registerPstnPhoneAccount(boolean,boolean) -> registerPstnPhoneAccount
    205:213:void teardown() -> teardown
    805:821:void updateAdhocConfCapability(boolean) -> updateAdhocConfCapability
    852:858:void updateCallComposerCapability(android.telephony.ims.feature.MmTelFeature$MmTelCapabilities) -> updateCallComposerCapability
    863:867:void updateDefaultDataSubId(int) -> updateDefaultDataSubId
    844:847:void updateRttCapability() -> updateRttCapability
    825:840:void updateVideoPresenceCapability() -> updateVideoPresenceCapability
com.android.services.telephony.TelecomAccountRegistry$AccountEntry$1 -> com.android.services.telephony.TelecomAccountRegistry$AccountEntry$1:
    174:174:void <init>(com.android.services.telephony.TelecomAccountRegistry$AccountEntry,com.android.services.telephony.TelecomAccountRegistry) -> <init>
    178:180:void onCapabilitiesStatusChanged(android.telephony.ims.feature.MmTelFeature$MmTelCapabilities) -> onCapabilitiesStatusChanged
com.android.services.telephony.TelecomAccountRegistry$AccountEntry$2 -> com.android.services.telephony.TelecomAccountRegistry$AccountEntry$2:
    185:185:void <init>(com.android.services.telephony.TelecomAccountRegistry$AccountEntry,com.android.services.telephony.TelecomAccountRegistry) -> <init>
    188:188:void onRegistered(int) -> onRegistered
    193:193:void onRegistering(int) -> onRegistering
    198:198:void onUnregistered(android.telephony.ims.ImsReasonInfo) -> onUnregistered
com.android.services.telephony.TelecomAccountRegistry$TelecomAccountTelephonyCallback -> com.android.services.telephony.TelecomAccountRegistry$TelecomAccountTelephonyCallback:
    1093:1093:void <init>(com.android.services.telephony.TelecomAccountRegistry) -> <init>
    1093:1093:void <init>(com.android.services.telephony.TelecomAccountRegistry,com.android.services.telephony.TelecomAccountRegistry$1) -> <init>
    1114:1119:void onActiveDataSubscriptionIdChanged(int) -> onActiveDataSubscriptionIdChanged
    1098:1109:void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
com.android.services.telephony.TelephonyConference -> com.android.services.telephony.TelephonyConference:
    38:45:void <init>(android.telecom.PhoneAccountHandle) -> <init>
    67:74:boolean disconnectCall(android.telecom.Connection) -> disconnectCall
    237:241:com.android.services.telephony.TelephonyConnection getFirstConnection() -> getFirstConnection
    216:219:com.android.internal.telephony.Call getMultipartyCallForConnection(android.telecom.Connection,java.lang.String) -> getMultipartyCallForConnection
    229:230:com.android.internal.telephony.Connection getOriginalConnection(android.telecom.Connection) -> getOriginalConnection
    176:189:android.telecom.Connection getPrimaryConnection() -> getPrimaryConnection
    108:108:void onAddConferenceParticipants(java.util.List) -> onAddConferenceParticipants
    98:98:void onAnswer(int) -> onAnswer
    167:169:void onConnectionAdded(android.telecom.Connection) -> onConnectionAdded
    53:54:void onDisconnect() -> onDisconnect
    129:131:void onHold() -> onHold
    115:120:void onMerge(android.telecom.Connection) -> onMerge
    148:150:void onPlayDtmfTone(char) -> onPlayDtmfTone
    103:103:void onReject() -> onReject
    88:92:void onSeparate(android.telecom.Connection) -> onSeparate
    156:158:void onStopDtmfTone() -> onStopDtmfTone
    140:142:void onUnhold() -> onUnhold
    200:204:void setHoldable(boolean) -> setHoldable
com.android.services.telephony.TelephonyConferenceBase -> com.android.services.telephony.TelephonyConferenceBase:
    65:90:void <init>(android.telecom.PhoneAccountHandle) -> <init>
    222:225:void addCapability(int) -> addCapability
    73:73:void addTelephonyConferenceListener(com.android.services.telephony.TelephonyConferenceBase$TelephonyConferenceListener) -> addTelephonyConferenceListener
    102:103:void addTelephonyConnection(android.telecom.Connection) -> addTelephonyConnection
    131:136:void destroyTelephonyConference() -> destroyTelephonyConference
    234:235:void notifyConferenceMembershipChanged(android.telecom.Connection) -> notifyConferenceMembershipChanged
    243:244:void notifyDestroyed() -> notifyDestroyed
    250:251:void notifyStateChanged(int,int) -> notifyStateChanged
    210:213:void removeCapability(int) -> removeCapability
    115:116:void removeTelephonyConnection(android.telecom.Connection) -> removeTelephonyConnection
    179:184:void setConferenceOnActive() -> setConferenceOnActive
    155:160:void setConferenceOnDialing() -> setConferenceOnDialing
    143:148:void setConferenceOnHold() -> setConferenceOnHold
    167:172:void setConferenceOnRinging() -> setConferenceOnRinging
    191:200:void updateCallRadioTechAfterCreation() -> updateCallRadioTechAfterCreation
com.android.services.telephony.TelephonyConferenceBase$TelephonyConferenceListener -> com.android.services.telephony.TelephonyConferenceBase$TelephonyConferenceListener:
    43:43:void <init>() -> <init>
com.android.services.telephony.TelephonyConferenceController -> com.android.services.telephony.TelephonyConferenceController:
    45:73:void <init>(com.android.services.telephony.TelephonyConnectionServiceProxy) -> <init>
    84:91:void add(com.android.services.telephony.TelephonyConnection) -> add
    112:112:boolean isFullConference(android.telecom.Conference) -> isFullConference
    168:168:boolean lambda$recalculateConferenceable$1(com.android.services.telephony.TelephonyConnection) -> lambda$recalculateConferenceable$1
    116:117:boolean participatesInFullConference(android.telecom.Connection) -> participatesInFullConference
    107:108:void recalculate() -> recalculate
    181:316:void recalculateConference() -> recalculateConference
    124:174:void recalculateConferenceable() -> recalculateConferenceable
    95:103:void remove(com.android.services.telephony.TelephonyConnection) -> remove
    79:80:boolean shouldRecalculate() -> shouldRecalculate
com.android.services.telephony.TelephonyConferenceController$$ExternalSyntheticLambda0 -> com.android.services.telephony.TelephonyConferenceController$$ExternalSyntheticLambda0:
    android.telecom.Connection com.android.services.telephony.TelephonyConferenceController$$InternalSyntheticLambda$0$33dc24f64f9867806a91847ca67f46e5788aaabd493ff7a8f81c98c4a80e34c4$0.f$0 -> f$0
    void com.android.services.telephony.TelephonyConferenceController$$InternalSyntheticLambda$0$33dc24f64f9867806a91847ca67f46e5788aaabd493ff7a8f81c98c4a80e34c4$0.<init>(android.telecom.Connection) -> <init>
    boolean com.android.services.telephony.TelephonyConferenceController$$InternalSyntheticLambda$0$33dc24f64f9867806a91847ca67f46e5788aaabd493ff7a8f81c98c4a80e34c4$0.test(java.lang.Object) -> test
com.android.services.telephony.TelephonyConferenceController$$ExternalSyntheticLambda1 -> com.android.services.telephony.TelephonyConferenceController$$ExternalSyntheticLambda1:
    com.android.services.telephony.TelephonyConferenceController$$InternalSyntheticLambda$0$33dc24f64f9867806a91847ca67f46e5788aaabd493ff7a8f81c98c4a80e34c4$1 com.android.services.telephony.TelephonyConferenceController$$InternalSyntheticLambda$0$33dc24f64f9867806a91847ca67f46e5788aaabd493ff7a8f81c98c4a80e34c4$1.INSTANCE -> INSTANCE
    void com.android.services.telephony.TelephonyConferenceController$$InternalSyntheticLambda$0$33dc24f64f9867806a91847ca67f46e5788aaabd493ff7a8f81c98c4a80e34c4$1.<clinit>() -> <clinit>
    void com.android.services.telephony.TelephonyConferenceController$$InternalSyntheticLambda$0$33dc24f64f9867806a91847ca67f46e5788aaabd493ff7a8f81c98c4a80e34c4$1.<init>() -> <init>
    boolean com.android.services.telephony.TelephonyConferenceController$$InternalSyntheticLambda$0$33dc24f64f9867806a91847ca67f46e5788aaabd493ff7a8f81c98c4a80e34c4$1.test(java.lang.Object) -> test
com.android.services.telephony.TelephonyConferenceController$1 -> com.android.services.telephony.TelephonyConferenceController$1:
    46:46:void <init>(com.android.services.telephony.TelephonyConferenceController) -> <init>
    62:62:void onDestroyed(android.telecom.Connection) -> onDestroyed
    56:56:void onDisconnected(android.telecom.Connection,android.telecom.DisconnectCause) -> onDisconnected
    49:51:void onStateChanged(android.telecom.Connection,int) -> onStateChanged
com.android.services.telephony.TelephonyConnection -> com.android.services.telephony.TelephonyConnection:
    126:126:void <clinit>() -> <clinit>
    151:932:void <init>(com.android.internal.telephony.Connection,java.lang.String,int) -> <init>
    151:937:void <init>() -> <init>
    108:108:com.android.internal.telephony.Connection access$000(com.android.services.telephony.TelephonyConnection) -> access$000
    108:108:void access$100(com.android.services.telephony.TelephonyConnection,boolean) -> access$100
    108:108:android.os.Handler access$1000(com.android.services.telephony.TelephonyConnection) -> access$1000
    108:108:void access$1100(com.android.services.telephony.TelephonyConnection,boolean) -> access$1100
    108:108:void access$1200(com.android.services.telephony.TelephonyConnection) -> access$1200
    108:108:void access$1300(com.android.services.telephony.TelephonyConnection) -> access$1300
    108:108:com.android.internal.telephony.d2d.RtpTransport access$1400(com.android.services.telephony.TelephonyConnection) -> access$1400
    108:108:com.android.internal.telephony.d2d.DtmfTransport access$1500(com.android.services.telephony.TelephonyConnection) -> access$1500
    108:108:boolean access$202(com.android.services.telephony.TelephonyConnection,boolean) -> access$202
    108:108:void access$300(com.android.services.telephony.TelephonyConnection,com.android.internal.telephony.gsm.SuppServiceNotification) -> access$300
    108:108:void access$400(com.android.services.telephony.TelephonyConnection) -> access$400
    108:108:void access$500(com.android.services.telephony.TelephonyConnection) -> access$500
    108:108:void access$600(com.android.services.telephony.TelephonyConnection) -> access$600
    108:108:void access$700(com.android.services.telephony.TelephonyConnection,java.util.List) -> access$700
    108:108:void access$800(com.android.services.telephony.TelephonyConnection,boolean) -> access$800
    108:108:void access$900(com.android.services.telephony.TelephonyConnection) -> access$900
    2951:2955:com.android.services.telephony.TelephonyConnection addTelephonyConnectionListener(com.android.services.telephony.TelephonyConnection$TelephonyConnectionListener) -> addTelephonyConnectionListener
    2008:2012:int applyAddParticipantCapabilities(int) -> applyAddParticipantCapabilities
    2660:2660:int applyConferenceTerminationCapabilities(int) -> applyConferenceTerminationCapabilities
    2695:2707:int applyOriginalConnectionCapabilities(int) -> applyOriginalConnectionCapabilities
    2361:2369:boolean areBundlesEqual(android.os.Bundle,android.os.Bundle) -> areBundlesEqual
    1406:1417:int buildConnectionCapabilities() -> buildConnectionCapabilities
    1451:1452:int buildConnectionProperties() -> buildConnectionProperties
    2061:2072:boolean canConsultativeTransfer() -> canConsultativeTransfer
    2028:2033:boolean canDeflectImsCalls() -> canDeflectImsCalls
    1937:1942:boolean canHoldImsCalls() -> canHoldImsCalls
    2048:2050:boolean canTransfer(com.android.services.telephony.TelephonyConnection) -> canTransfer
    2054:2057:boolean canTransferToNumber() -> canTransferToNumber
    2121:2126:void clearOriginalConnection() -> clearOriginalConnection
    2565:2572:void close() -> close
    3118:3125:java.util.Map createExtrasMap() -> createExtrasMap
    2091:2095:boolean doesDeviceRespectHoldCarrierConfig() -> doesDeviceRespectHoldCarrierConfig
    1667:1679:java.lang.String filterCnapName(java.lang.String) -> filterCnapName
    2993:2994:void fireOnOriginalConnectionConfigured() -> fireOnOriginalConnectionConfigured
    2999:3000:void fireOnOriginalConnectionRetryDial(boolean) -> fireOnOriginalConnectionRetryDial
    3728:3729:java.lang.String formatIncomingNumberForJp(java.lang.String) -> formatIncomingNumberForJp
    1378:1381:java.lang.String[] getAddConferenceParticipants(java.util.List) -> getAddConferenceParticipants
    2909:2909:android.net.Uri getAddressFromNumber(java.lang.String) -> getAddressFromNumber
    2230:2231:com.android.internal.telephony.Call getCall() -> getCall
    3380:3385:int getCallRadioTech() -> getCallRadioTech
    2020:2024:android.os.PersistableBundle getCarrierConfig() -> getCarrierConfig
    3495:3495:com.android.internal.telephony.d2d.Communicator getCommunicator() -> getCommunicator
    2273:2277:java.util.List getConferenceParticipants() -> getConferenceParticipants
    2262:2263:com.android.internal.telephony.Connection getForegroundConnection() -> getForegroundConnection
    2226:2226:com.android.internal.telephony.Connection getOriginalConnection() -> getOriginalConnection
    1907:1907:java.util.List getParticipants() -> getParticipants
    2237:2239:com.android.internal.telephony.Phone getPhone() -> getPhone
    504:506:java.lang.String getResourceString(int) -> getResourceString
    497:499:java.lang.CharSequence getResourceText(int) -> getResourceText
    2779:2779:android.telecom.Connection$RttTextStream getRttTextStream() -> getRttTextStream
    488:489:java.lang.CharSequence getSuppServiceMessage(int,int) -> getSuppServiceMessage
    3733:3733:com.android.services.telephony.TelecomAccountRegistry getTelecomAccountRegistry(android.content.Context) -> getTelecomAccountRegistry
    3820:3820:java.util.List getTelephonyConnectionListeners() -> getTelephonyConnectionListeners
    3193:3193:com.android.services.telephony.TelephonyConnectionService getTelephonyConnectionService() -> getTelephonyConnectionService
    2797:2797:boolean getVideoPauseSupported() -> getVideoPauseSupported
    2518:2518:void handleConferenceMergeFailed() -> handleConferenceMergeFailed
    3008:3008:void handleExitedEcmMode() -> handleExitedEcmMode
    2535:2536:void handleMultipartyStateChange(boolean) -> handleMultipartyStateChange
    3771:3810:void handleOutgoingDeviceToDeviceMessage(android.os.Bundle) -> handleOutgoingDeviceToDeviceMessage
    1261:1266:void handleRttUpgradeResponse(android.telecom.Connection$RttTextStream) -> handleRttUpgradeResponse
    390:396:void handleSuppServiceNotification(com.android.internal.telephony.gsm.SuppServiceNotification) -> handleSuppServiceNotification
    2146:2180:void hangup(int) -> hangup
    1868:1896:boolean hasHighDefAudioProperty() -> hasHighDefAudioProperty
    2246:2254:boolean hasMultipleTopLevelCalls() -> hasMultipleTopLevelCalls
    1966:1993:boolean isAddParticipantCapable() -> isAddParticipantCapable
    1923:1923:boolean isAdhocConferenceCall() -> isAdhocConferenceCall
    2039:2042:boolean isCallTransferSupported() -> isCallTransferSupported
    513:513:boolean isCarrierVideoConferencingSupported() -> isCarrierVideoConferencingSupported
    2981:2981:boolean isChildHoldable() -> isChildHoldable
    1947:1954:boolean isConferenceHosted() -> isConferenceHosted
    2813:2813:boolean isConferenceSupported() -> isConferenceSupported
    2617:2620:boolean isCrossSimCall() -> isCrossSimCall
    2599:2599:boolean isExternalConnection() -> isExternalConnection
    2873:2875:boolean isGsmCdmaConnection() -> isGsmCdmaConnection
    2985:2985:boolean isHoldable() -> isHoldable
    2860:2863:boolean isImsConnection() -> isImsConnection
    2833:2833:boolean isManageImsConferenceCallSupported() -> isManageImsConferenceCallSupported
    3712:3716:boolean isNeededToFormatIncomingNumberForJp() -> isNeededToFormatIncomingNumberForJp
    2738:2738:boolean isNetworkIdentifiedEmergencyCall() -> isNetworkIdentifiedEmergencyCall
    2745:2745:boolean isOutgoingCall() -> isOutgoingCall
    2632:2632:boolean isPullable() -> isPullable
    2607:2610:boolean isRtt() -> isRtt
    3130:3137:boolean isShowingOriginalDialString() -> isShowingOriginalDialString
    2286:2302:boolean isValidRingingCall() -> isValidRingingCall
    2584:2584:boolean isVideoCapable() -> isVideoCapable
    3107:3107:boolean isWfcEnabled(com.android.internal.telephony.Phone) -> isWfcEnabled
    2717:2717:boolean isWifi() -> isWifi
    1676:1676:boolean lambda$filterCnapName$1(java.lang.String,java.lang.String) -> lambda$filterCnapName$1
    3458:3463:void lambda$maybeConfigureDeviceToDeviceCommunication$2(char) -> lambda$maybeConfigureDeviceToDeviceCommunication$2
    1241:1251:void lambda$onCallFilteringCompleted$0(android.util.Pair) -> lambda$onCallFilteringCompleted$0
    3406:3476:void maybeConfigureDeviceToDeviceCommunication() -> maybeConfigureDeviceToDeviceCommunication
    3564:3565:void notifyConferenceStarted() -> notifyConferenceStarted
    3576:3577:void notifyConferenceSupportedChanged(boolean) -> notifyConferenceSupportedChanged
    3586:3587:void notifyConnectionCapabilitiesChanged(int) -> notifyConnectionCapabilitiesChanged
    3596:3597:void notifyConnectionPropertiesChanged(int) -> notifyConnectionPropertiesChanged
    3485:3488:void notifyD2DAvailabilityChanged(boolean) -> notifyD2DAvailabilityChanged
    3605:3606:void notifyDestroyed() -> notifyDestroyed
    3615:3616:void notifyDisconnected(android.telecom.DisconnectCause) -> notifyDisconnected
    3646:3647:void notifyPutExtras(android.os.Bundle) -> notifyPutExtras
    3656:3657:void notifyRemoveExtras(java.util.List) -> notifyRemoveExtras
    3680:3681:void notifyRingbackRequested(boolean) -> notifyRingbackRequested
    3625:3626:void notifyStateChanged(int) -> notifyStateChanged
    3702:3703:void notifyStatusHintsChanged(android.telecom.StatusHints) -> notifyStatusHintsChanged
    3636:3637:void notifyTelephonyConnectionEvent(java.lang.String,android.os.Bundle) -> notifyTelephonyConnectionEvent
    3691:3692:void notifyVideoProviderChanged(android.telecom.Connection$VideoProvider) -> notifyVideoProviderChanged
    3670:3671:void notifyVideoStateChanged(int) -> notifyVideoStateChanged
    1016:1017:void onAbort() -> onAbort
    1011:1011:void onAddConferenceParticipants(java.util.List) -> onAddConferenceParticipants
    1032:1032:void onAnswer(int) -> onAnswer
    963:964:void onCallAudioStateChanged(android.telecom.CallAudioState) -> onCallAudioStateChanged
    943:946:void onCallEvent(java.lang.String,android.os.Bundle) -> onCallEvent
    1206:1238:void onCallFilteringCompleted(android.telecom.Connection$CallFilteringCompletionInfo) -> onCallFilteringCompleted
    3556:3556:void onD2DAvailabilitychanged(boolean) -> onD2DAvailabilitychanged
    1037:1069:void onDeflect(android.net.Uri) -> onDeflect
    976:977:void onDisconnect() -> onDisconnect
    988:994:void onDisconnectConferenceParticipant(android.net.Uri) -> onDisconnectConferenceParticipant
    1022:1022:void onHold() -> onHold
    3505:3546:void onMessagesReceived(java.util.Set) -> onMessagesReceived
    346:380:void onOriginalConnectionRedialed(com.android.internal.telephony.Connection) -> onOriginalConnectionRedialed
    1147:1152:void onPostDialContinue(boolean) -> onPostDialContinue
    1162:1169:void onPullExternalCall() -> onPullExternalCall
    1076:1076:void onReject() -> onReject
    1081:1081:void onReject(int) -> onReject
    999:1004:void onSeparate() -> onSeparate
    1175:1183:void onStartRtt(android.telecom.Connection$RttTextStream) -> onStartRtt
    970:971:void onStateChanged(int) -> onStateChanged
    1189:1197:void onStopRtt() -> onStopRtt
    1095:1127:void onTransfer(android.net.Uri,boolean) -> onTransfer
    1134:1140:void onTransfer(android.telecom.Connection) -> onTransfer
    1027:1027:void onUnhold() -> onUnhold
    1388:1395:void performAddConferenceParticipants(java.util.List) -> performAddConferenceParticipants
    1270:1277:void performAnswer(int) -> performAnswer
    1362:1372:void performConference(android.telecom.Connection) -> performConference
    1283:1318:void performHold() -> performHold
    1085:1090:void performReject(int) -> performReject
    1323:1357:void performUnhold() -> performUnhold
    3288:3289:void putTelephonyExtras(android.os.Bundle) -> putTelephonyExtras
    1727:1778:void refreshCodec() -> refreshCodec
    3021:3101:void refreshConferenceSupported() -> refreshConferenceSupported
    1713:1721:void refreshDisableAddCall() -> refreshDisableAddCall
    1701:1708:void refreshHoldSupported() -> refreshHoldSupported
    1541:1557:void registerForCallEvents(com.android.internal.telephony.Phone) -> registerForCallEvents
    2186:2220:void reject(int) -> reject
    2968:2968:com.android.services.telephony.TelephonyConnection removeTelephonyConnectionListener(com.android.services.telephony.TelephonyConnection$TelephonyConnectionListener) -> removeTelephonyConnectionListener
    3299:3300:void removeTelephonyExtras(java.util.List) -> removeTelephonyExtras
    2761:2762:void resetStateForConference() -> resetStateForConference
    2386:2387:void resetStateOverride() -> resetStateOverride
    407:412:void sendSuppServiceNotificationEvent(int,int) -> sendSuppServiceNotificationEvent
    3277:3278:void sendTelephonyConnectionEvent(java.lang.String,android.os.Bundle) -> sendTelephonyConnectionEvent
    2540:2561:void setActiveInternal() -> setActiveInternal
    2755:2757:void setAudioQuality(int) -> setAudioQuality
    3350:3366:void setCallRadioTech(int) -> setCallRadioTech
    2642:2644:void setCdmaVoicePrivacy(boolean) -> setCdmaVoicePrivacy
    2806:2806:void setConferenceSupported(boolean) -> setConferenceSupported
    2975:2976:void setHoldable(boolean) -> setHoldable
    2767:2768:boolean setHoldingForConference() -> setHoldingForConference
    1932:1933:void setIsAdhocConferenceCall(boolean) -> setIsAdhocConferenceCall
    2726:2730:void setIsNetworkIdentifiedEmergencyCall(boolean) -> setIsNetworkIdentifiedEmergencyCall
    2900:2901:void setIsUsingAssistedDialing(java.lang.Boolean) -> setIsUsingAssistedDialing
    2825:2825:void setManageImsConferenceCallSupported(boolean) -> setManageImsConferenceCallSupported
    1561:1656:void setOriginalConnection(com.android.internal.telephony.Connection) -> setOriginalConnection
    2675:2677:void setOriginalConnectionCapabilities(int) -> setOriginalConnectionCapabilities
    1916:1916:void setParticipants(java.util.List) -> setParticipants
    2775:2775:void setRttTextStream(android.telecom.Connection$RttTextStream) -> setRttTextStream
    2114:2114:void setShouldTreatAsEmergencyCall(boolean) -> setShouldTreatAsEmergencyCall
    2842:2842:void setShowPreciseFailedCause(boolean) -> setShowPreciseFailedCause
    2378:2382:void setStateOverride(com.android.internal.telephony.Call$State) -> setStateOverride
    1690:1696:void setTechnologyTypeExtra() -> setTechnologyTypeExtra
    3202:3203:void setTelephonyConnectionActive() -> setTelephonyConnectionActive
    3233:3234:void setTelephonyConnectionDialing() -> setTelephonyConnectionDialing
    3265:3267:void setTelephonyConnectionDisconnected(android.telecom.DisconnectCause) -> setTelephonyConnectionDisconnected
    3223:3224:void setTelephonyConnectionInitializing() -> setTelephonyConnectionInitializing
    3253:3254:void setTelephonyConnectionOnHold() -> setTelephonyConnectionOnHold
    1488:1489:void setTelephonyConnectionProperties(int) -> setTelephonyConnectionProperties
    3243:3244:void setTelephonyConnectionPulling() -> setTelephonyConnectionPulling
    3212:3213:void setTelephonyConnectionRinging() -> setTelephonyConnectionRinging
    3189:3189:void setTelephonyConnectionService(com.android.services.telephony.TelephonyConnectionService) -> setTelephonyConnectionService
    3337:3338:void setTelephonyStatusHints(android.telecom.StatusHints) -> setTelephonyStatusHints
    3326:3327:void setTelephonyVideoProvider(android.telecom.Connection$VideoProvider) -> setTelephonyVideoProvider
    3315:3316:void setTelephonyVideoState(int) -> setTelephonyVideoState
    2850:2851:void setTtyEnabled(boolean) -> setTtyEnabled
    2789:2789:void setVideoPauseSupported(boolean) -> setVideoPauseSupported
    1832:1861:boolean shouldSetDisableAddCallExtra() -> shouldSetDisableAddCallExtra
    2105:2105:boolean shouldTreatAsEmergencyCall() -> shouldTreatAsEmergencyCall
    3750:3751:boolean supportsD2DUsingDtmf() -> supportsD2DUsingDtmf
    3741:3742:boolean supportsD2DUsingRtp() -> supportsD2DUsingRtp
    3760:3761:boolean supportsSdpNegotiationOfRtpHeaderExtensions() -> supportsSdpNegotiationOfRtpHeaderExtensions
    3151:3185:java.lang.String toString() -> toString
    2131:2141:void unregisterForCallEvents() -> unregisterForCallEvents
    1493:1532:void updateAddress() -> updateAddress
    3396:3397:void updateConferenceParticipants(java.util.List) -> updateConferenceParticipants
    1423:1442:void updateConnectionCapabilities() -> updateConnectionCapabilities
    1463:1483:void updateConnectionProperties() -> updateConnectionProperties
    2310:2351:void updateExtras(android.os.Bundle) -> updateExtras
    2499:2507:void updateMultiparty() -> updateMultiparty
    2481:2492:void updateState() -> updateState
    2391:2475:void updateStateInternal() -> updateStateInternal
    2929:2941:void updateStatusHints() -> updateStatusHints
    2892:2892:boolean wasImsConnection() -> wasImsConnection
com.android.services.telephony.TelephonyConnection$$ExternalSyntheticLambda0 -> com.android.services.telephony.TelephonyConnection$$ExternalSyntheticLambda0:
    com.android.services.telephony.TelephonyConnection com.android.services.telephony.TelephonyConnection$$InternalSyntheticLambda$0$c1a52f906fe6edee30bdac0d473f6c63b6b0e9574c7d22c31855715edd93e790$0.f$0 -> f$0
    void com.android.services.telephony.TelephonyConnection$$InternalSyntheticLambda$0$c1a52f906fe6edee30bdac0d473f6c63b6b0e9574c7d22c31855715edd93e790$0.<init>(com.android.services.telephony.TelephonyConnection) -> <init>
    void com.android.services.telephony.TelephonyConnection$$InternalSyntheticLambda$0$c1a52f906fe6edee30bdac0d473f6c63b6b0e9574c7d22c31855715edd93e790$0.sendDtmf(char) -> sendDtmf
com.android.services.telephony.TelephonyConnection$$ExternalSyntheticLambda1 -> com.android.services.telephony.TelephonyConnection$$ExternalSyntheticLambda1:
    com.android.services.telephony.TelephonyConnection com.android.services.telephony.TelephonyConnection$$InternalSyntheticLambda$0$90a86e6463efd88578924bc8f6264a2c8434af7b99e7cc515c0a6b318ff51eb0$0.f$0 -> f$0
    void com.android.services.telephony.TelephonyConnection$$InternalSyntheticLambda$0$90a86e6463efd88578924bc8f6264a2c8434af7b99e7cc515c0a6b318ff51eb0$0.<init>(com.android.services.telephony.TelephonyConnection) -> <init>
    void com.android.services.telephony.TelephonyConnection$$InternalSyntheticLambda$0$90a86e6463efd88578924bc8f6264a2c8434af7b99e7cc515c0a6b318ff51eb0$0.accept(java.lang.Object) -> accept
com.android.services.telephony.TelephonyConnection$$ExternalSyntheticLambda2 -> com.android.services.telephony.TelephonyConnection$$ExternalSyntheticLambda2:
    java.lang.String com.android.services.telephony.TelephonyConnection$$InternalSyntheticLambda$0$7f46aa4e32d1fb3b857a9bf94e9056525ec3f324c80b811761295d7039035452$0.f$0 -> f$0
    void com.android.services.telephony.TelephonyConnection$$InternalSyntheticLambda$0$7f46aa4e32d1fb3b857a9bf94e9056525ec3f324c80b811761295d7039035452$0.<init>(java.lang.String) -> <init>
    boolean com.android.services.telephony.TelephonyConnection$$InternalSyntheticLambda$0$7f46aa4e32d1fb3b857a9bf94e9056525ec3f324c80b811761295d7039035452$0.test(java.lang.Object) -> test
com.android.services.telephony.TelephonyConnection$1 -> com.android.services.telephony.TelephonyConnection$1:
    151:151:void <init>(com.android.services.telephony.TelephonyConnection,android.os.Looper) -> <init>
    154:329:void handleMessage(android.os.Message) -> handleMessage
com.android.services.telephony.TelephonyConnection$2 -> com.android.services.telephony.TelephonyConnection$2:
    558:558:void <init>(com.android.services.telephony.TelephonyConnection) -> <init>
    569:571:void onPostDialChar(char) -> onPostDialChar
    561:563:void onPostDialWait() -> onPostDialWait
com.android.services.telephony.TelephonyConnection$3 -> com.android.services.telephony.TelephonyConnection$3:
    580:580:void <init>(com.android.services.telephony.TelephonyConnection) -> <init>
    627:627:void onAudioQualityChanged(int) -> onAudioQualityChanged
    690:702:void onCallPullFailed(com.android.internal.telephony.Connection) -> onCallPullFailed
    616:616:void onCallRadioTechChanged(int) -> onCallRadioTechChanged
    662:662:void onConferenceMergedFailed() -> onConferenceMergedFailed
    643:643:void onConferenceParticipantsChanged(java.util.List) -> onConferenceParticipantsChanged
    593:594:void onConnectionCapabilitiesChanged(int) -> onConnectionCapabilitiesChanged
    721:724:void onConnectionEvent(java.lang.String,android.os.Bundle) -> onConnectionEvent
    745:747:void onDisconnect(int) -> onDisconnect
    676:676:void onExitedEcmMode() -> onExitedEcmMode
    667:667:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    710:710:void onHandoverToWifiFailed() -> onHandoverToWifiFailed
    778:778:void onIsNetworkEmergencyCallChanged(boolean) -> onIsNetworkEmergencyCallChanged
    632:632:void onMediaAttributesChanged() -> onMediaAttributesChanged
    654:654:void onMultipartyStateChanged(boolean) -> onMultipartyStateChanged
    771:773:void onOriginalConnectionReplaced(com.android.internal.telephony.Connection) -> onOriginalConnectionReplaced
    797:801:void onReceivedDtmfDigit(char) -> onReceivedDtmfDigit
    787:792:void onReceivedRtpHeaderExtensions(java.util.Set) -> onReceivedRtpHeaderExtensions
    752:758:void onRttInitiated() -> onRttInitiated
    729:729:void onRttModifyRequestReceived() -> onRttModifyRequestReceived
    734:739:void onRttModifyResponseReceived(int) -> onRttModifyResponseReceived
    763:765:void onRttTerminated() -> onRttTerminated
    605:605:void onVideoProviderChanged(android.telecom.Connection$VideoProvider) -> onVideoProviderChanged
    583:583:void onVideoStateChanged(int) -> onVideoStateChanged
com.android.services.telephony.TelephonyConnection$4 -> com.android.services.telephony.TelephonyConnection$4:
    1238:1238:void <init>(com.android.services.telephony.TelephonyConnection) -> <init>
com.android.services.telephony.TelephonyConnection$5 -> com.android.services.telephony.TelephonyConnection$5:
    3431:3431:void <init>(com.android.services.telephony.TelephonyConnection) -> <init>
    3434:3436:java.util.Set getAcceptedRtpHeaderExtensions() -> getAcceptedRtpHeaderExtensions
    3444:3444:java.lang.String lambda$sendRtpHeaderExtensions$0(android.telephony.ims.RtpHeaderExtension) -> lambda$sendRtpHeaderExtensions$0
    3442:3448:void sendRtpHeaderExtensions(java.util.Set) -> sendRtpHeaderExtensions
com.android.services.telephony.TelephonyConnection$5$$ExternalSyntheticLambda0 -> com.android.services.telephony.TelephonyConnection$5$$ExternalSyntheticLambda0:
    com.android.services.telephony.TelephonyConnection$5$$InternalSyntheticLambda$1$e907fa80d8f894fb285ef4ad1c46a5ffebdbd2ef90bc642116eae090fc7aec38$0 com.android.services.telephony.TelephonyConnection$5$$InternalSyntheticLambda$1$e907fa80d8f894fb285ef4ad1c46a5ffebdbd2ef90bc642116eae090fc7aec38$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.TelephonyConnection$5$$InternalSyntheticLambda$1$e907fa80d8f894fb285ef4ad1c46a5ffebdbd2ef90bc642116eae090fc7aec38$0.<clinit>() -> <clinit>
    void com.android.services.telephony.TelephonyConnection$5$$InternalSyntheticLambda$1$e907fa80d8f894fb285ef4ad1c46a5ffebdbd2ef90bc642116eae090fc7aec38$0.<init>() -> <init>
    java.lang.Object com.android.services.telephony.TelephonyConnection$5$$InternalSyntheticLambda$1$e907fa80d8f894fb285ef4ad1c46a5ffebdbd2ef90bc642116eae090fc7aec38$0.apply(java.lang.Object) -> apply
com.android.services.telephony.TelephonyConnection$6 -> com.android.services.telephony.TelephonyConnection$6:
    2408:2408:void <clinit>() -> <clinit>
com.android.services.telephony.TelephonyConnection$D2DCallStateAdapter -> com.android.services.telephony.TelephonyConnection$D2DCallStateAdapter:
    548:549:void <init>(com.android.internal.telephony.d2d.Communicator) -> <init>
    554:554:void onStateChanged(android.telecom.Connection,int) -> onStateChanged
com.android.services.telephony.TelephonyConnection$TelephonyConnectionListener -> com.android.services.telephony.TelephonyConnection$TelephonyConnectionListener:
    521:521:void <init>() -> <init>
com.android.services.telephony.TelephonyConnectionService -> com.android.services.telephony.TelephonyConnectionService:
    96:103:void <clinit>() -> <clinit>
    95:475:void <init>() -> <init>
    95:95:boolean access$000(com.android.services.telephony.TelephonyConnectionService) -> access$000
    95:95:void access$100(com.android.services.telephony.TelephonyConnectionService,boolean) -> access$100
    95:95:com.android.services.telephony.HoldTracker access$200(com.android.services.telephony.TelephonyConnectionService) -> access$200
    95:95:void access$300(com.android.services.telephony.TelephonyConnectionService,boolean,boolean,android.telecom.Connection,android.telecom.ConnectionRequest,java.lang.String,android.net.Uri,int,com.android.internal.telephony.Phone) -> access$300
    2315:2337:void addConnectionToConferenceController(com.android.services.telephony.TelephonyConnection) -> addConnectionToConferenceController
    2501:2502:void addTelephonyConference(com.android.services.telephony.TelephonyConferenceBase) -> addTelephonyConference
    2556:2562:android.telecom.PhoneAccountHandle adjustAccountHandle(com.android.internal.telephony.Phone,android.telecom.PhoneAccountHandle) -> adjustAccountHandle
    948:972:void adjustAndPlaceOutgoingConnection(com.android.internal.telephony.Phone,android.telecom.Connection,android.telecom.ConnectionRequest,java.lang.String,android.net.Uri,int,boolean) -> adjustAndPlaceOutgoingConnection
    2289:2290:boolean allowsMute(com.android.internal.telephony.Phone) -> allowsMute
    1530:1550:boolean blockCallForwardingNumberWhileRoaming(com.android.internal.telephony.Phone,java.lang.String) -> blockCallForwardingNumberWhileRoaming
    981:984:boolean canAddCall() -> canAddCall
    2350:2364:android.telecom.Connection checkAdditionalOutgoingCallLimits(com.android.internal.telephony.Phone) -> checkAdditionalOutgoingCallLimits
    2412:2419:void closeOrDestroyConnection(android.telecom.Connection,android.telecom.DisconnectCause) -> closeOrDestroyConnection
    1849:1849:com.android.services.telephony.TelephonyConnection createConnectionFor(com.android.internal.telephony.Phone,com.android.internal.telephony.Connection,boolean,android.telecom.PhoneAccountHandle,java.lang.String) -> createConnectionFor
    1861:1885:com.android.services.telephony.TelephonyConnection createConnectionFor(com.android.internal.telephony.Phone,com.android.internal.telephony.Connection,boolean,android.telecom.PhoneAccountHandle,java.lang.String,boolean) -> createConnectionFor
    1949:1965:void delayDialForDdsSwitch(com.android.internal.telephony.Phone,java.util.function.Consumer) -> delayDialForDdsSwitch
    1897:1900:com.android.services.telephony.TelephonyConnection getConnectionForOriginalConnection(com.android.internal.telephony.Connection) -> getConnectionForOriginalConnection
    2112:2112:com.android.internal.telephony.Phone getFirstPhoneForEmergencyCall() -> getFirstPhoneForEmergencyCall
    2131:2264:com.android.internal.telephony.Phone getFirstPhoneForEmergencyCall(java.util.List) -> getFirstPhoneForEmergencyCall
    634:637:java.lang.String[] getParticipantsToDial(java.util.List) -> getParticipantsToDial
    1920:1933:com.android.internal.telephony.Phone getPhoneForAccount(android.telecom.PhoneAccountHandle,boolean,java.lang.String) -> getPhoneForAccount
    2082:2107:com.android.internal.telephony.Phone getPhoneForEmergencyCall(java.lang.String) -> getPhoneForEmergencyCall
    995:1141:android.telecom.Connection getTelephonyConnection(android.telecom.ConnectionRequest,java.lang.String,boolean,android.net.Uri,com.android.internal.telephony.Phone) -> getTelephonyConnection
    2299:2299:com.android.services.telephony.TelephonyConnection$TelephonyConnectionListener getTelephonyConnectionListener() -> getTelephonyConnectionListener
    1814:1840:void handleCallStateException(com.android.internal.telephony.CallStateException,com.android.services.telephony.TelephonyConnection,com.android.internal.telephony.Phone) -> handleCallStateException
    1232:1258:void handleIncomingRtt(android.telecom.ConnectionRequest,com.android.internal.telephony.Connection) -> handleIncomingRtt
    907:939:void handleOnComplete(boolean,boolean,android.telecom.Connection,android.telecom.ConnectionRequest,java.lang.String,android.net.Uri,int,com.android.internal.telephony.Phone) -> handleOnComplete
    2401:2406:void handleTtyModeChange(boolean) -> handleTtyModeChange
    2276:2277:boolean isAvailableForEmergencyCalls(com.android.internal.telephony.Phone) -> isAvailableForEmergencyCalls
    2597:2603:boolean isCallPresentOnOtherSub(android.telecom.PhoneAccountHandle) -> isCallPresentOnOtherSub
    888:888:boolean isEmergencyCallPending() -> isEmergencyCallPending
    865:874:boolean isEmergencyNumberTestNumber(java.lang.String) -> isEmergencyNumberTestNumber
    1525:1525:boolean isExternalConnection(android.telecom.Connection) -> isExternalConnection
    1892:1892:boolean isOriginalConnectionKnown(com.android.internal.telephony.Connection) -> isOriginalConnectionKnown
    1568:1569:boolean isRadioOn() -> isRadioOn
    895:897:boolean isRadioPowerDownOnBluetooth() -> isRadioPowerDownOnBluetooth
    1789:1795:boolean isVideoCallHoldAllowed(com.android.internal.telephony.Phone) -> isVideoCallHoldAllowed
    1959:1959:void lambda$delayDialForDdsSwitch$6(java.util.concurrent.CompletableFuture) -> lambda$delayDialForDdsSwitch$6
    2212:2253:int lambda$getFirstPhoneForEmergencyCall$7(com.android.internal.telephony.Phone,int,com.android.services.telephony.TelephonyConnectionService$SlotStatus,com.android.services.telephony.TelephonyConnectionService$SlotStatus) -> lambda$getFirstPhoneForEmergencyCall$7
    926:930:void lambda$handleOnComplete$3(com.android.internal.telephony.Phone,android.telecom.Connection,android.telecom.ConnectionRequest,java.lang.String,android.net.Uri,int,java.lang.Boolean) -> lambda$handleOnComplete$3
    2600:2602:boolean lambda$isCallPresentOnOtherSub$12(android.telecom.PhoneAccountHandle,android.telecom.Connection) -> lambda$isCallPresentOnOtherSub$12
    2630:2632:boolean lambda$maybeDisconnectCallsOnOtherSubs$13(android.telecom.PhoneAccountHandle,android.telecom.Connection) -> lambda$maybeDisconnectCallsOnOtherSubs$13
    2634:2642:void lambda$maybeDisconnectCallsOnOtherSubs$14(android.telecom.Connection) -> lambda$maybeDisconnectCallsOnOtherSubs$14
    842:843:void lambda$onCreateOutgoingConnection$2(android.telecom.ConnectionRequest,android.telecom.Connection,com.android.internal.telephony.Phone,java.lang.Boolean) -> lambda$onCreateOutgoingConnection$2
    1680:1684:void lambda$placeOutgoingConnection$4(com.android.services.telephony.TelephonyConnection,android.net.Uri) -> lambda$placeOutgoingConnection$4
    1777:1778:void lambda$placeOutgoingConnection$5(com.android.services.telephony.TelephonyConnection,com.android.internal.telephony.Connection) -> lambda$placeOutgoingConnection$5
    2514:2514:boolean lambda$sendTestDeviceToDeviceMessage$8(android.telecom.Connection) -> lambda$sendTestDeviceToDeviceMessage$8
    2516:2527:void lambda$sendTestDeviceToDeviceMessage$9(int,int,android.telecom.Connection) -> lambda$sendTestDeviceToDeviceMessage$9
    2540:2540:boolean lambda$setActiveDeviceToDeviceTransport$10(android.telecom.Connection) -> lambda$setActiveDeviceToDeviceTransport$10
    2542:2550:void lambda$setActiveDeviceToDeviceTransport$11(java.lang.String,android.telecom.Connection) -> lambda$setActiveDeviceToDeviceTransport$11
    1576:1577:android.util.Pair makeCachedConnectionPhonePair(com.android.services.telephony.TelephonyConnection) -> makeCachedConnectionPhonePair
    2613:2614:void maybeDisconnectCallsOnOtherSubs(android.telecom.PhoneAccountHandle) -> maybeDisconnectCallsOnOtherSubs
    2627:2633:void maybeDisconnectCallsOnOtherSubs(java.util.Collection,android.telecom.PhoneAccountHandle) -> maybeDisconnectCallsOnOtherSubs
    2583:2588:void maybeIndicateAnsweringWillDisconnect(com.android.services.telephony.TelephonyConnection,android.telecom.PhoneAccountHandle) -> maybeIndicateAnsweringWillDisconnect
    2380:2394:void maybeSendInternationalCallEvent(com.android.services.telephony.TelephonyConnection) -> maybeSendInternationalCallEvent
    1485:1490:void onConference(android.telecom.Connection,android.telecom.Connection) -> onConference
    1512:1513:void onConferenceAdded(android.telecom.Conference) -> onConferenceAdded
    1519:1520:void onConferenceRemoved(android.telecom.Conference) -> onConferenceRemoved
    1497:1499:void onConnectionAdded(android.telecom.Connection) -> onConnectionAdded
    1505:1506:void onConnectionRemoved(android.telecom.Connection) -> onConnectionRemoved
    485:501:void onCreate() -> onCreate
    1340:1344:void onCreateConferenceComplete(android.telecom.Conference) -> onCreateConferenceComplete
    1270:1272:void onCreateConnectionComplete(android.telecom.Connection) -> onCreateConnectionComplete
    581:602:android.telecom.Conference onCreateIncomingConference(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest) -> onCreateIncomingConference
    1350:1351:void onCreateIncomingConferenceFailed(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest) -> onCreateIncomingConferenceFailed
    1149:1224:android.telecom.Connection onCreateIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest) -> onCreateIncomingConnection
    1279:1328:void onCreateIncomingConnectionFailed(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest) -> onCreateIncomingConnectionFailed
    609:630:android.telecom.Conference onCreateOutgoingConference(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest) -> onCreateOutgoingConference
    647:841:android.telecom.Connection onCreateOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest) -> onCreateOutgoingConnection
    1364:1459:android.telecom.Connection onCreateUnknownConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest) -> onCreateUnknownConnection
    507:508:boolean onUnbind(android.content.Intent) -> onUnbind
    513:514:android.telecom.Conference placeOutgoingConference(android.telecom.ConnectionRequest,android.telecom.Connection,com.android.internal.telephony.Phone) -> placeOutgoingConference
    521:548:android.telecom.Conference placeOutgoingConference(com.android.services.telephony.TelephonyConnection,com.android.internal.telephony.Phone,android.telecom.ConnectionRequest) -> placeOutgoingConference
    854:859:android.telecom.Connection placeOutgoingConnection(android.telecom.ConnectionRequest,android.telecom.Connection,com.android.internal.telephony.Phone) -> placeOutgoingConnection
    1658:1658:void placeOutgoingConnection(com.android.services.telephony.TelephonyConnection,com.android.internal.telephony.Phone,android.telecom.ConnectionRequest) -> placeOutgoingConnection
    1664:1782:void placeOutgoingConnection(com.android.services.telephony.TelephonyConnection,com.android.internal.telephony.Phone,int,android.os.Bundle) -> placeOutgoingConnection
    1984:2064:java.util.concurrent.CompletableFuture possiblyOverrideDefaultDataForEmergencyCall(com.android.internal.telephony.Phone) -> possiblyOverrideDefaultDataForEmergencyCall
    552:573:android.telecom.Conference prepareConference(android.telecom.Connection,android.telecom.PhoneAccountHandle) -> prepareConference
    1628:1643:void retryOutgoingOriginalConnection(com.android.services.telephony.TelephonyConnection,boolean) -> retryOutgoingOriginalConnection
    2513:2515:void sendTestDeviceToDeviceMessage(int,int) -> sendTestDeviceToDeviceMessage
    2539:2541:void setActiveDeviceToDeviceTransport(java.lang.String) -> setActiveDeviceToDeviceTransport
    416:416:void setDeviceState(com.android.services.telephony.DeviceState) -> setDeviceState
    456:456:void setDisconnectCauseFactory(com.android.services.telephony.TelephonyConnectionService$DisconnectCauseFactory) -> setDisconnectCauseFactory
    408:408:void setPhoneFactoryProxy(com.android.services.telephony.TelephonyConnectionService$PhoneFactoryProxy) -> setPhoneFactoryProxy
    440:440:void setPhoneNumberUtilsProxy(com.android.services.telephony.TelephonyConnectionService$PhoneNumberUtilsProxy) -> setPhoneNumberUtilsProxy
    432:432:void setPhoneSwitcherProxy(com.android.services.telephony.TelephonyConnectionService$PhoneSwitcherProxy) -> setPhoneSwitcherProxy
    448:448:void setPhoneUtilsProxy(com.android.services.telephony.TelephonyConnectionService$PhoneUtilsProxy) -> setPhoneUtilsProxy
    424:424:void setRadioOnHelper(com.android.services.telephony.RadioOnHelper) -> setRadioOnHelper
    392:392:void setSubscriptionManagerProxy(com.android.services.telephony.TelephonyConnectionService$SubscriptionManagerProxy) -> setSubscriptionManagerProxy
    400:400:void setTelephonyManagerProxy(com.android.services.telephony.TelephonyConnectionService$TelephonyManagerProxy) -> setTelephonyManagerProxy
    1801:1807:boolean shouldHoldForEmergencyCall(com.android.internal.telephony.Phone) -> shouldHoldForEmergencyCall
    2425:2487:boolean showDataDialog(com.android.internal.telephony.Phone,java.lang.String) -> showDataDialog
    1356:1357:void triggerConferenceRecalculate() -> triggerConferenceRecalculate
    1586:1611:void updateCachedConnectionPhonePair(com.android.services.telephony.TelephonyConnection,boolean) -> updateCachedConnectionPhonePair
    1648:1653:void updatePhoneAccount(com.android.services.telephony.TelephonyConnection,com.android.internal.telephony.Phone) -> updatePhoneAccount
    1559:1563:boolean useImsForAudioOnlyCall(com.android.internal.telephony.Phone) -> useImsForAudioOnlyCall
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda0 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda0:
    com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$13dbfd66be1eec59cf3dc902a982937048faf621938de414a336ceff4cbe3e27$0 com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$13dbfd66be1eec59cf3dc902a982937048faf621938de414a336ceff4cbe3e27$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$13dbfd66be1eec59cf3dc902a982937048faf621938de414a336ceff4cbe3e27$0.<clinit>() -> <clinit>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$13dbfd66be1eec59cf3dc902a982937048faf621938de414a336ceff4cbe3e27$0.<init>() -> <init>
    boolean com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$13dbfd66be1eec59cf3dc902a982937048faf621938de414a336ceff4cbe3e27$0.isUsingSinglePartyCallEmulation() -> isUsingSinglePartyCallEmulation
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda1 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda1:
    com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$de93698f3964184ff6ce261d0f34050b4ee647f184aa15ac2580702e87ed70ae$0 com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$de93698f3964184ff6ce261d0f34050b4ee647f184aa15ac2580702e87ed70ae$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$de93698f3964184ff6ce261d0f34050b4ee647f184aa15ac2580702e87ed70ae$0.<clinit>() -> <clinit>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$de93698f3964184ff6ce261d0f34050b4ee647f184aa15ac2580702e87ed70ae$0.<init>() -> <init>
    boolean com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$de93698f3964184ff6ce261d0f34050b4ee647f184aa15ac2580702e87ed70ae$0.isUsingSinglePartyCallEmulation() -> isUsingSinglePartyCallEmulation
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda10 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda10:
    com.android.services.telephony.TelephonyConnectionService com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$bd891aade89f96b7f531a3bb6d68ab97a6d36f1712798a7ee6ad09deda169992$1.f$0 -> f$0
    java.lang.String com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$bd891aade89f96b7f531a3bb6d68ab97a6d36f1712798a7ee6ad09deda169992$1.f$1 -> f$1
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$bd891aade89f96b7f531a3bb6d68ab97a6d36f1712798a7ee6ad09deda169992$1.<init>(com.android.services.telephony.TelephonyConnectionService,java.lang.String) -> <init>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$bd891aade89f96b7f531a3bb6d68ab97a6d36f1712798a7ee6ad09deda169992$1.accept(java.lang.Object) -> accept
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda11 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda11:
    com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$fd55790516dfe47ac9b135e2969adcba79b3dffe2478651c339400e7097b35a3$1 com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$fd55790516dfe47ac9b135e2969adcba79b3dffe2478651c339400e7097b35a3$1.INSTANCE -> INSTANCE
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$fd55790516dfe47ac9b135e2969adcba79b3dffe2478651c339400e7097b35a3$1.<clinit>() -> <clinit>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$fd55790516dfe47ac9b135e2969adcba79b3dffe2478651c339400e7097b35a3$1.<init>() -> <init>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$fd55790516dfe47ac9b135e2969adcba79b3dffe2478651c339400e7097b35a3$1.accept(java.lang.Object) -> accept
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda12 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda12:
    android.telecom.PhoneAccountHandle com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$34da811df2ea111c2335c6e64d75889c726466fa7a159405d75958bd6a23b6a0$0.f$0 -> f$0
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$34da811df2ea111c2335c6e64d75889c726466fa7a159405d75958bd6a23b6a0$0.<init>(android.telecom.PhoneAccountHandle) -> <init>
    boolean com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$34da811df2ea111c2335c6e64d75889c726466fa7a159405d75958bd6a23b6a0$0.test(java.lang.Object) -> test
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda13 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda13:
    android.telecom.PhoneAccountHandle com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$fd55790516dfe47ac9b135e2969adcba79b3dffe2478651c339400e7097b35a3$0.f$0 -> f$0
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$fd55790516dfe47ac9b135e2969adcba79b3dffe2478651c339400e7097b35a3$0.<init>(android.telecom.PhoneAccountHandle) -> <init>
    boolean com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$fd55790516dfe47ac9b135e2969adcba79b3dffe2478651c339400e7097b35a3$0.test(java.lang.Object) -> test
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda14 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda14:
    com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$0 com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$0.<clinit>() -> <clinit>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$0.<init>() -> <init>
    boolean com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$0.test(java.lang.Object) -> test
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda15 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda15:
    com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$bd891aade89f96b7f531a3bb6d68ab97a6d36f1712798a7ee6ad09deda169992$0 com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$bd891aade89f96b7f531a3bb6d68ab97a6d36f1712798a7ee6ad09deda169992$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$bd891aade89f96b7f531a3bb6d68ab97a6d36f1712798a7ee6ad09deda169992$0.<clinit>() -> <clinit>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$bd891aade89f96b7f531a3bb6d68ab97a6d36f1712798a7ee6ad09deda169992$0.<init>() -> <init>
    boolean com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$bd891aade89f96b7f531a3bb6d68ab97a6d36f1712798a7ee6ad09deda169992$0.test(java.lang.Object) -> test
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda2 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda2:
    com.android.internal.telephony.Connection com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$2.f$1 -> f$1
    com.android.services.telephony.TelephonyConnection com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$2.f$0 -> f$0
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$2.<init>(com.android.services.telephony.TelephonyConnection,com.android.internal.telephony.Connection) -> <init>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$2.run() -> run
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda3 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda3:
    java.util.concurrent.CompletableFuture com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$4ceb7e09d5392be651a6eb9a3ff6b07acd03c6d0cd257b41d36e899c51883ece$0.f$0 -> f$0
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$4ceb7e09d5392be651a6eb9a3ff6b07acd03c6d0cd257b41d36e899c51883ece$0.<init>(java.util.concurrent.CompletableFuture) -> <init>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$4ceb7e09d5392be651a6eb9a3ff6b07acd03c6d0cd257b41d36e899c51883ece$0.run() -> run
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda4 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda4:
    com.android.internal.telephony.Phone com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$7b0d2b461f806141b8914899fd618251359ff5c669e876623d92083edec539f0$0.f$0 -> f$0
    int com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$7b0d2b461f806141b8914899fd618251359ff5c669e876623d92083edec539f0$0.f$1 -> f$1
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$7b0d2b461f806141b8914899fd618251359ff5c669e876623d92083edec539f0$0.<init>(com.android.internal.telephony.Phone,int) -> <init>
    int com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$7b0d2b461f806141b8914899fd618251359ff5c669e876623d92083edec539f0$0.compare(java.lang.Object,java.lang.Object) -> compare
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda5 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda5:
    com.android.services.telephony.TelephonyConnection com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$1.f$0 -> f$0
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$1.<init>(com.android.services.telephony.TelephonyConnection) -> <init>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$1.accept(java.lang.Object) -> accept
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda6 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda6:
    com.android.services.telephony.TelephonyConnectionService com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$1.f$0 -> f$0
    int com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$1.f$2 -> f$2
    int com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$1.f$1 -> f$1
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$1.<init>(com.android.services.telephony.TelephonyConnectionService,int,int) -> <init>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$a38b7e2ae6cfb95195d6d8efd46a35b3423cc4ed025fcf3df444d98f8db39fc9$1.accept(java.lang.Object) -> accept
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda7 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda7:
    com.android.services.telephony.TelephonyConnectionService com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$8dc0d1e548cd5043fa16a1fad8ae142541bb79e8e72cefc44535fb0cc70e21f3$0.f$0 -> f$0
    android.telecom.ConnectionRequest com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$8dc0d1e548cd5043fa16a1fad8ae142541bb79e8e72cefc44535fb0cc70e21f3$0.f$1 -> f$1
    android.telecom.Connection com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$8dc0d1e548cd5043fa16a1fad8ae142541bb79e8e72cefc44535fb0cc70e21f3$0.f$2 -> f$2
    com.android.internal.telephony.Phone com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$8dc0d1e548cd5043fa16a1fad8ae142541bb79e8e72cefc44535fb0cc70e21f3$0.f$3 -> f$3
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$8dc0d1e548cd5043fa16a1fad8ae142541bb79e8e72cefc44535fb0cc70e21f3$0.<init>(com.android.services.telephony.TelephonyConnectionService,android.telecom.ConnectionRequest,android.telecom.Connection,com.android.internal.telephony.Phone) -> <init>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$8dc0d1e548cd5043fa16a1fad8ae142541bb79e8e72cefc44535fb0cc70e21f3$0.accept(java.lang.Object) -> accept
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda8 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda8:
    com.android.services.telephony.TelephonyConnectionService com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$2f92ca6533ac7729c6d3e51918d38c620bc6161b28f36ad78895e01656bbaf78$0.f$0 -> f$0
    java.lang.String com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$2f92ca6533ac7729c6d3e51918d38c620bc6161b28f36ad78895e01656bbaf78$0.f$4 -> f$4
    android.net.Uri com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$2f92ca6533ac7729c6d3e51918d38c620bc6161b28f36ad78895e01656bbaf78$0.f$5 -> f$5
    com.android.internal.telephony.Phone com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$2f92ca6533ac7729c6d3e51918d38c620bc6161b28f36ad78895e01656bbaf78$0.f$1 -> f$1
    int com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$2f92ca6533ac7729c6d3e51918d38c620bc6161b28f36ad78895e01656bbaf78$0.f$6 -> f$6
    android.telecom.Connection com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$2f92ca6533ac7729c6d3e51918d38c620bc6161b28f36ad78895e01656bbaf78$0.f$2 -> f$2
    android.telecom.ConnectionRequest com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$2f92ca6533ac7729c6d3e51918d38c620bc6161b28f36ad78895e01656bbaf78$0.f$3 -> f$3
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$2f92ca6533ac7729c6d3e51918d38c620bc6161b28f36ad78895e01656bbaf78$0.<init>(com.android.services.telephony.TelephonyConnectionService,com.android.internal.telephony.Phone,android.telecom.Connection,android.telecom.ConnectionRequest,java.lang.String,android.net.Uri,int) -> <init>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$1$2f92ca6533ac7729c6d3e51918d38c620bc6161b28f36ad78895e01656bbaf78$0.accept(java.lang.Object) -> accept
com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda9 -> com.android.services.telephony.TelephonyConnectionService$$ExternalSyntheticLambda9:
    com.android.services.telephony.TelephonyConnectionService com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$0.f$0 -> f$0
    com.android.services.telephony.TelephonyConnection com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$0.f$1 -> f$1
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$0.<init>(com.android.services.telephony.TelephonyConnectionService,com.android.services.telephony.TelephonyConnection) -> <init>
    void com.android.services.telephony.TelephonyConnectionService$$InternalSyntheticLambda$0$ea8b2f7095026dc8ab74fb5078f40a43a380ef84490531fc37b60475ac171617$0.accept(java.lang.Object) -> accept
com.android.services.telephony.TelephonyConnectionService$1 -> com.android.services.telephony.TelephonyConnectionService$1:
    106:106:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    113:113:void addConference(com.android.services.telephony.TelephonyConference) -> addConference
    117:117:void addConference(com.android.services.telephony.ImsConference) -> addConference
    133:133:void addConnectionToConferenceController(com.android.services.telephony.TelephonyConnection) -> addConnectionToConferenceController
    122:123:void addExistingConnection(android.telecom.PhoneAccountHandle,android.telecom.Connection) -> addExistingConnection
    128:129:void addExistingConnection(android.telecom.PhoneAccountHandle,android.telecom.Connection,android.telecom.Conference) -> addExistingConnection
    109:109:java.util.Collection getAllConnections() -> getAllConnections
com.android.services.telephony.TelephonyConnectionService$10 -> com.android.services.telephony.TelephonyConnectionService$10:
    476:476:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    479:479:void onConferenceMembershipChanged(android.telecom.Connection) -> onConferenceMembershipChanged
com.android.services.telephony.TelephonyConnectionService$11 -> com.android.services.telephony.TelephonyConnectionService$11:
    777:777:void <init>(com.android.services.telephony.TelephonyConnectionService,boolean,android.telecom.Connection,android.telecom.ConnectionRequest,java.lang.String,android.net.Uri,int,com.android.internal.telephony.Phone,boolean) -> <init>
    789:806:boolean isOkToCall(com.android.internal.telephony.Phone,int) -> isOkToCall
    780:780:void onComplete(com.android.services.telephony.RadioOnStateListener,boolean) -> onComplete
com.android.services.telephony.TelephonyConnectionService$12 -> com.android.services.telephony.TelephonyConnectionService$12:
    2465:2465:void <init>(com.android.services.telephony.TelephonyConnectionService,android.content.Context) -> <init>
    2468:2476:void onClick(android.content.DialogInterface,int) -> onClick
com.android.services.telephony.TelephonyConnectionService$13 -> com.android.services.telephony.TelephonyConnectionService$13:
    2527:2528:void <init>(com.android.services.telephony.TelephonyConnectionService,int,int) -> <init>
com.android.services.telephony.TelephonyConnectionService$2 -> com.android.services.telephony.TelephonyConnectionService$2:
    137:137:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    140:148:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.services.telephony.TelephonyConnectionService$3 -> com.android.services.telephony.TelephonyConnectionService$3:
    208:208:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    211:211:int getDefaultVoicePhoneId() -> getDefaultVoicePhoneId
    221:221:int getPhoneId(int) -> getPhoneId
    216:216:int getSimStateForSlotIdx(int) -> getSimStateForSlotIdx
com.android.services.telephony.TelephonyConnectionService$4 -> com.android.services.telephony.TelephonyConnectionService$4:
    285:285:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    293:293:com.android.internal.telephony.Phone getDefaultPhone() -> getDefaultPhone
    288:288:com.android.internal.telephony.Phone getPhone(int) -> getPhone
    298:298:com.android.internal.telephony.Phone[] getPhones() -> getPhones
com.android.services.telephony.TelephonyConnectionService$5 -> com.android.services.telephony.TelephonyConnectionService$5:
    313:313:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    316:316:int getSubIdForPhoneAccountHandle(android.telecom.PhoneAccountHandle) -> getSubIdForPhoneAccountHandle
    321:321:android.telecom.PhoneAccountHandle makePstnPhoneAccountHandle(com.android.internal.telephony.Phone) -> makePstnPhoneAccountHandle
    327:327:android.telecom.PhoneAccountHandle makePstnPhoneAccountHandleWithPrefix(com.android.internal.telephony.Phone,java.lang.String,boolean) -> makePstnPhoneAccountHandleWithPrefix
com.android.services.telephony.TelephonyConnectionService$6 -> com.android.services.telephony.TelephonyConnectionService$6:
    339:339:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    342:342:java.lang.String convertToEmergencyNumber(android.content.Context,java.lang.String) -> convertToEmergencyNumber
com.android.services.telephony.TelephonyConnectionService$7 -> com.android.services.telephony.TelephonyConnectionService$7:
    354:354:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    357:357:com.android.internal.telephony.PhoneSwitcher getPhoneSwitcher() -> getPhoneSwitcher
com.android.services.telephony.TelephonyConnectionService$8 -> com.android.services.telephony.TelephonyConnectionService$8:
    372:372:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    376:376:android.telecom.DisconnectCause toTelecomDisconnectCause(int,java.lang.String) -> toTelecomDisconnectCause
    382:382:android.telecom.DisconnectCause toTelecomDisconnectCause(int,java.lang.String,int) -> toTelecomDisconnectCause
com.android.services.telephony.TelephonyConnectionService$9 -> com.android.services.telephony.TelephonyConnectionService$9:
    463:463:void <init>(com.android.services.telephony.TelephonyConnectionService) -> <init>
    466:466:void onOriginalConnectionConfigured(com.android.services.telephony.TelephonyConnection) -> onOriginalConnectionConfigured
    471:471:void onOriginalConnectionRetry(com.android.services.telephony.TelephonyConnection,boolean) -> onOriginalConnectionRetry
com.android.services.telephony.TelephonyConnectionService$SlotStatus -> com.android.services.telephony.TelephonyConnectionService$SlotStatus:
    186:194:void <init>(int,int) -> <init>
com.android.services.telephony.TelephonyConnectionService$TelephonyManagerProxyImpl -> com.android.services.telephony.TelephonyConnectionService$TelephonyManagerProxyImpl:
    242:243:void <init>(com.android.services.telephony.TelephonyConnectionService,android.content.Context) -> <init>
    268:270:java.util.Map getCurrentEmergencyNumberList() -> getCurrentEmergencyNumberList
    248:248:int getPhoneCount() -> getPhoneCount
    253:253:boolean hasIccCard(int) -> hasIccCard
    259:259:boolean isCurrentEmergencyNumber(java.lang.String) -> isCurrentEmergencyNumber
com.android.services.telephony.rcs.DelegateStateTracker -> com.android.services.telephony.rcs.DelegateStateTracker:
    49:64:void <init>(int,android.telephony.ims.aidl.ISipDelegateConnectionStateCallback,android.telephony.ims.aidl.ISipDelegate,com.android.internal.telephony.metrics.RcsStats) -> <init>
    197:201:void dump(java.io.PrintWriter) -> dump
    233:234:void logi(java.lang.String) -> logi
    237:238:void logw(java.lang.String) -> logw
    226:228:void notifySipDelegateCreated() -> notifySipDelegateCreated
    187:191:void onConfigurationChanged(android.telephony.ims.SipDelegateConfiguration) -> onConfigurationChanged
    173:177:void onImsConfigurationChanged(android.telephony.ims.SipDelegateImsConfiguration) -> onImsConfigurationChanged
    143:163:void onRegistrationStateChanged(android.telephony.ims.DelegateRegistrationState) -> onRegistrationStateChanged
    206:221:android.telephony.ims.DelegateRegistrationState overrideRegistrationForDelegateChange(int,android.telephony.ims.DelegateRegistrationState) -> overrideRegistrationForDelegateChange
    105:111:void sipDelegateChanging(int) -> sipDelegateChanging
    80:91:void sipDelegateConnected(java.util.Set,java.util.Set) -> sipDelegateConnected
    126:132:void sipDelegateDestroyed(int) -> sipDelegateDestroyed
com.android.services.telephony.rcs.MessageTransportWrapper -> com.android.services.telephony.rcs.MessageTransportWrapper:
    62:285:void <init>(int,java.util.concurrent.ScheduledExecutorService,android.telephony.ims.aidl.ISipDelegateMessageCallback) -> <init>
    62:301:void <init>(int,java.util.concurrent.ScheduledExecutorService,android.telephony.ims.aidl.ISipDelegateMessageCallback,com.android.services.telephony.rcs.TransportSipMessageValidator) -> <init>
    58:58:java.util.concurrent.Executor access$000(com.android.services.telephony.rcs.MessageTransportWrapper) -> access$000
    58:58:void access$100(com.android.services.telephony.rcs.MessageTransportWrapper,java.lang.String) -> access$100
    58:58:com.android.services.telephony.rcs.TransportSipMessageValidator access$200(com.android.services.telephony.rcs.MessageTransportWrapper) -> access$200
    58:58:com.android.services.telephony.rcs.validator.ValidationResult access$300(com.android.services.telephony.rcs.MessageTransportWrapper,com.android.services.telephony.rcs.validator.ValidationResult) -> access$300
    58:58:void access$400(com.android.services.telephony.rcs.MessageTransportWrapper,java.lang.String,android.telephony.ims.SipMessage,int) -> access$400
    58:58:android.telephony.ims.aidl.ISipDelegate access$500(com.android.services.telephony.rcs.MessageTransportWrapper) -> access$500
    58:58:void access$600(com.android.services.telephony.rcs.MessageTransportWrapper,java.lang.String) -> access$600
    58:58:android.telephony.ims.aidl.ISipDelegateMessageCallback access$700(com.android.services.telephony.rcs.MessageTransportWrapper) -> access$700
    58:58:void access$800(com.android.services.telephony.rcs.MessageTransportWrapper,java.lang.String,android.telephony.ims.SipMessage,int) -> access$800
    431:443:void cleanupSessionInternal(java.lang.String) -> cleanupSessionInternal
    417:419:void close(int) -> close
    399:401:void closeGracefully(int,int,java.util.function.Consumer) -> closeGracefully
    424:427:void closeTransport(java.util.Set) -> closeTransport
    341:348:void dump(java.io.PrintWriter) -> dump
    362:362:android.telephony.ims.aidl.ISipDelegateMessageCallback getAppMessageCallback() -> getAppMessageCallback
    355:355:android.telephony.ims.aidl.ISipDelegate getDelegateConnection() -> getDelegateConnection
    369:369:android.telephony.ims.aidl.ISipDelegateMessageCallback getMessageCallback() -> getMessageCallback
    402:406:void lambda$closeGracefully$3(java.util.function.Consumer,java.util.Set) -> lambda$closeGracefully$3
    285:286:java.lang.Boolean lambda$new$0() -> lambda$new$0
    307:308:void lambda$onRegistrationStateChanged$2(java.util.Set) -> lambda$onRegistrationStateChanged$2
    485:486:void logi(java.lang.String) -> logi
    490:491:void logw(java.lang.String) -> logw
    447:456:com.android.services.telephony.rcs.validator.ValidationResult maybeOverrideValidationForTesting(com.android.services.telephony.rcs.validator.ValidationResult) -> maybeOverrideValidationForTesting
    474:480:void notifyAppReceiveError(java.lang.String,android.telephony.ims.SipMessage,int) -> notifyAppReceiveError
    463:469:void notifyDelegateSendError(java.lang.String,android.telephony.ims.SipMessage,int) -> notifyDelegateSendError
    320:320:void onConfigurationChanged(android.telephony.ims.SipDelegateConfiguration) -> onConfigurationChanged
    315:315:void onImsConfigurationChanged(android.telephony.ims.SipDelegateImsConfiguration) -> onImsConfigurationChanged
    306:306:void onRegistrationStateChanged(android.telephony.ims.DelegateRegistrationState) -> onRegistrationStateChanged
    333:336:void openTransport(android.telephony.ims.aidl.ISipDelegate,java.util.Set,java.util.Set) -> openTransport
com.android.services.telephony.rcs.MessageTransportWrapper$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.MessageTransportWrapper$$ExternalSyntheticLambda0:
    com.android.services.telephony.rcs.MessageTransportWrapper com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$2$322bbb5f855f49bb663bc2a21acdff04ee335f708d73d7e5ec458b1e0fd1481e$0.f$0 -> f$0
    void com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$2$322bbb5f855f49bb663bc2a21acdff04ee335f708d73d7e5ec458b1e0fd1481e$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper) -> <init>
    java.lang.Boolean com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$2$322bbb5f855f49bb663bc2a21acdff04ee335f708d73d7e5ec458b1e0fd1481e$0.getValidatorOverrideState() -> getValidatorOverrideState
com.android.services.telephony.rcs.MessageTransportWrapper$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.MessageTransportWrapper$$ExternalSyntheticLambda1:
    com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$0$f79fe5727710e0aaef607849381a35c693441fad4000e32f6ed91b0b0d22c9ba$0 com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$0$f79fe5727710e0aaef607849381a35c693441fad4000e32f6ed91b0b0d22c9ba$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$0$f79fe5727710e0aaef607849381a35c693441fad4000e32f6ed91b0b0d22c9ba$0.<clinit>() -> <clinit>
    void com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$0$f79fe5727710e0aaef607849381a35c693441fad4000e32f6ed91b0b0d22c9ba$0.<init>() -> <init>
    java.lang.Boolean com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$0$f79fe5727710e0aaef607849381a35c693441fad4000e32f6ed91b0b0d22c9ba$0.getValidatorOverrideState() -> getValidatorOverrideState
com.android.services.telephony.rcs.MessageTransportWrapper$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.MessageTransportWrapper$$ExternalSyntheticLambda2:
    com.android.services.telephony.rcs.MessageTransportWrapper com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$6$6c45c4d481a126c0ddfc50c1c1ae26a200de0818041bfe93f57421943e7defe8$0.f$0 -> f$0
    void com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$6$6c45c4d481a126c0ddfc50c1c1ae26a200de0818041bfe93f57421943e7defe8$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper) -> <init>
    void com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$6$6c45c4d481a126c0ddfc50c1c1ae26a200de0818041bfe93f57421943e7defe8$0.accept(java.lang.Object) -> accept
com.android.services.telephony.rcs.MessageTransportWrapper$$ExternalSyntheticLambda3 -> com.android.services.telephony.rcs.MessageTransportWrapper$$ExternalSyntheticLambda3:
    java.util.function.Consumer com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$5$ed99a9d99a677a779c77dc758b4fc7374ca9e3f659a0877cc33c197ba72e5469$0.f$1 -> f$1
    com.android.services.telephony.rcs.MessageTransportWrapper com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$5$ed99a9d99a677a779c77dc758b4fc7374ca9e3f659a0877cc33c197ba72e5469$0.f$0 -> f$0
    void com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$5$ed99a9d99a677a779c77dc758b4fc7374ca9e3f659a0877cc33c197ba72e5469$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper,java.util.function.Consumer) -> <init>
    void com.android.services.telephony.rcs.MessageTransportWrapper$$InternalSyntheticLambda$5$ed99a9d99a677a779c77dc758b4fc7374ca9e3f659a0877cc33c197ba72e5469$0.accept(java.lang.Object) -> accept
com.android.services.telephony.rcs.MessageTransportWrapper$1 -> com.android.services.telephony.rcs.MessageTransportWrapper$1:
    62:62:void <init>(com.android.services.telephony.rcs.MessageTransportWrapper) -> <init>
    162:167:void cleanupSession(java.lang.String) -> cleanupSession
    164:164:void lambda$cleanupSession$3(java.lang.String) -> lambda$cleanupSession$3
    101:110:void lambda$notifyMessageReceiveError$1(java.lang.String,int) -> lambda$notifyMessageReceiveError$1
    73:82:void lambda$notifyMessageReceived$0(java.lang.String) -> lambda$notifyMessageReceived$0
    128:147:void lambda$sendMessage$2(android.telephony.ims.SipMessage,long) -> lambda$sendMessage$2
    98:116:void notifyMessageReceiveError(java.lang.String,int) -> notifyMessageReceiveError
    70:88:void notifyMessageReceived(java.lang.String) -> notifyMessageReceived
    125:153:void sendMessage(android.telephony.ims.SipMessage,long) -> sendMessage
com.android.services.telephony.rcs.MessageTransportWrapper$1$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.MessageTransportWrapper$1$$ExternalSyntheticLambda0:
    com.android.services.telephony.rcs.MessageTransportWrapper$1 com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$9bd90a204820618991f57b231a67dbe20021c316d52aaf605bd380e8d422b652$0.f$0 -> f$0
    long com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$9bd90a204820618991f57b231a67dbe20021c316d52aaf605bd380e8d422b652$0.f$2 -> f$2
    android.telephony.ims.SipMessage com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$9bd90a204820618991f57b231a67dbe20021c316d52aaf605bd380e8d422b652$0.f$1 -> f$1
    void com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$9bd90a204820618991f57b231a67dbe20021c316d52aaf605bd380e8d422b652$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper$1,android.telephony.ims.SipMessage,long) -> <init>
    void com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$9bd90a204820618991f57b231a67dbe20021c316d52aaf605bd380e8d422b652$0.run() -> run
com.android.services.telephony.rcs.MessageTransportWrapper$1$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.MessageTransportWrapper$1$$ExternalSyntheticLambda1:
    com.android.services.telephony.rcs.MessageTransportWrapper$1 com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$d7063e2d865546a4714c990200ab7dcc90376bfe8428c65e6fb1e593b1b96fc1$0.f$0 -> f$0
    java.lang.String com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$d7063e2d865546a4714c990200ab7dcc90376bfe8428c65e6fb1e593b1b96fc1$0.f$1 -> f$1
    void com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$d7063e2d865546a4714c990200ab7dcc90376bfe8428c65e6fb1e593b1b96fc1$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper$1,java.lang.String) -> <init>
    void com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$d7063e2d865546a4714c990200ab7dcc90376bfe8428c65e6fb1e593b1b96fc1$0.run() -> run
com.android.services.telephony.rcs.MessageTransportWrapper$1$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.MessageTransportWrapper$1$$ExternalSyntheticLambda2:
    com.android.services.telephony.rcs.MessageTransportWrapper$1 com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$77cb169ae76c4305a638156921ab1950faee36caa1b7fc6ebb1378b755ecadbd$0.f$0 -> f$0
    java.lang.String com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$77cb169ae76c4305a638156921ab1950faee36caa1b7fc6ebb1378b755ecadbd$0.f$1 -> f$1
    void com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$77cb169ae76c4305a638156921ab1950faee36caa1b7fc6ebb1378b755ecadbd$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper$1,java.lang.String) -> <init>
    void com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$77cb169ae76c4305a638156921ab1950faee36caa1b7fc6ebb1378b755ecadbd$0.run() -> run
com.android.services.telephony.rcs.MessageTransportWrapper$1$$ExternalSyntheticLambda3 -> com.android.services.telephony.rcs.MessageTransportWrapper$1$$ExternalSyntheticLambda3:
    com.android.services.telephony.rcs.MessageTransportWrapper$1 com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$343eae89af94a1ca359bac10cd9c534f65d419e7a91015ecb4e10f98a0756184$0.f$0 -> f$0
    int com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$343eae89af94a1ca359bac10cd9c534f65d419e7a91015ecb4e10f98a0756184$0.f$2 -> f$2
    java.lang.String com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$343eae89af94a1ca359bac10cd9c534f65d419e7a91015ecb4e10f98a0756184$0.f$1 -> f$1
    void com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$343eae89af94a1ca359bac10cd9c534f65d419e7a91015ecb4e10f98a0756184$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper$1,java.lang.String,int) -> <init>
    void com.android.services.telephony.rcs.MessageTransportWrapper$1$$InternalSyntheticLambda$1$343eae89af94a1ca359bac10cd9c534f65d419e7a91015ecb4e10f98a0756184$0.run() -> run
com.android.services.telephony.rcs.MessageTransportWrapper$2 -> com.android.services.telephony.rcs.MessageTransportWrapper$2:
    173:173:void <init>(com.android.services.telephony.rcs.MessageTransportWrapper) -> <init>
    186:195:void lambda$onMessageReceived$0(android.telephony.ims.SipMessage) -> lambda$onMessageReceived$0
    239:247:void lambda$onMessageSendFailure$2(java.lang.String,int) -> lambda$onMessageSendFailure$2
    213:221:void lambda$onMessageSent$1(java.lang.String) -> lambda$onMessageSent$1
    183:201:void onMessageReceived(android.telephony.ims.SipMessage) -> onMessageReceived
    236:253:void onMessageSendFailure(java.lang.String,int) -> onMessageSendFailure
    210:227:void onMessageSent(java.lang.String) -> onMessageSent
com.android.services.telephony.rcs.MessageTransportWrapper$2$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.MessageTransportWrapper$2$$ExternalSyntheticLambda0:
    com.android.services.telephony.rcs.MessageTransportWrapper$2 com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$a83599178c264ba8bbc7a0d20da3a3e04d1dc0581fe73e159ad16d5e60c30fa4$0.f$0 -> f$0
    android.telephony.ims.SipMessage com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$a83599178c264ba8bbc7a0d20da3a3e04d1dc0581fe73e159ad16d5e60c30fa4$0.f$1 -> f$1
    void com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$a83599178c264ba8bbc7a0d20da3a3e04d1dc0581fe73e159ad16d5e60c30fa4$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper$2,android.telephony.ims.SipMessage) -> <init>
    void com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$a83599178c264ba8bbc7a0d20da3a3e04d1dc0581fe73e159ad16d5e60c30fa4$0.run() -> run
com.android.services.telephony.rcs.MessageTransportWrapper$2$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.MessageTransportWrapper$2$$ExternalSyntheticLambda1:
    com.android.services.telephony.rcs.MessageTransportWrapper$2 com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$f75b230cf71bf250098c2e5607d2e82e955b8ecb12fdfc65224aa0fe59a5691a$0.f$0 -> f$0
    java.lang.String com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$f75b230cf71bf250098c2e5607d2e82e955b8ecb12fdfc65224aa0fe59a5691a$0.f$1 -> f$1
    void com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$f75b230cf71bf250098c2e5607d2e82e955b8ecb12fdfc65224aa0fe59a5691a$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper$2,java.lang.String) -> <init>
    void com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$f75b230cf71bf250098c2e5607d2e82e955b8ecb12fdfc65224aa0fe59a5691a$0.run() -> run
com.android.services.telephony.rcs.MessageTransportWrapper$2$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.MessageTransportWrapper$2$$ExternalSyntheticLambda2:
    com.android.services.telephony.rcs.MessageTransportWrapper$2 com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$e6c7d00a3821201d9c922ba8cbbbb88924fe26c261ed9801ee2398541f32dbd5$0.f$0 -> f$0
    int com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$e6c7d00a3821201d9c922ba8cbbbb88924fe26c261ed9801ee2398541f32dbd5$0.f$2 -> f$2
    java.lang.String com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$e6c7d00a3821201d9c922ba8cbbbb88924fe26c261ed9801ee2398541f32dbd5$0.f$1 -> f$1
    void com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$e6c7d00a3821201d9c922ba8cbbbb88924fe26c261ed9801ee2398541f32dbd5$0.<init>(com.android.services.telephony.rcs.MessageTransportWrapper$2,java.lang.String,int) -> <init>
    void com.android.services.telephony.rcs.MessageTransportWrapper$2$$InternalSyntheticLambda$1$e6c7d00a3821201d9c922ba8cbbbb88924fe26c261ed9801ee2398541f32dbd5$0.run() -> run
com.android.services.telephony.rcs.RcsFeatureController -> com.android.services.telephony.rcs.RcsFeatureController:
    113:186:void <init>(android.content.Context,int,int) -> <init>
    113:200:void <init>(android.content.Context,int,int,com.android.services.telephony.rcs.RcsFeatureController$RegistrationHelperFactory) -> <init>
    47:47:void access$000(com.android.services.telephony.rcs.RcsFeatureController,java.lang.String) -> access$000
    47:47:void access$100(com.android.services.telephony.rcs.RcsFeatureController,java.lang.String) -> access$100
    47:47:void access$200(com.android.services.telephony.rcs.RcsFeatureController,com.android.ims.RcsFeatureManager) -> access$200
    47:47:void access$300(com.android.services.telephony.rcs.RcsFeatureController,com.android.ims.RcsFeatureManager) -> access$300
    47:47:void access$400(com.android.services.telephony.rcs.RcsFeatureController,java.lang.String) -> access$400
    47:47:void access$500(com.android.services.telephony.rcs.RcsFeatureController) -> access$500
    220:227:void addFeature(com.android.services.telephony.rcs.RcsFeatureController$Feature,java.lang.Class) -> addFeature
    208:213:void connect() -> connect
    291:301:void destroy() -> destroy
    458:474:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    236:238:java.lang.Object getFeature(java.lang.Class) -> getFeature
    449:451:com.android.ims.RcsFeatureManager getFeatureManager() -> getFeatureManager
    490:492:java.lang.StringBuilder getLogPrefix() -> getLogPrefix
    399:399:void getRegistrationState(java.util.function.Consumer) -> getRegistrationState
    388:392:void getRegistrationTech(java.util.function.Consumer) -> getRegistrationTech
    255:257:boolean hasActiveFeatures() -> hasActiveFeatures
    376:381:boolean isAvailable(int,int) -> isAvailable
    363:368:boolean isCapable(int,int) -> isCapable
    478:478:void logd(java.lang.String) -> logd
    486:486:void loge(java.lang.String) -> loge
    482:482:void logw(java.lang.String) -> logw
    279:284:void onCarrierConfigChangedForSubscription() -> onCarrierConfigChangedForSubscription
    315:320:void registerImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback) -> registerImsRegistrationCallback
    340:345:void registerRcsAvailabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback) -> registerRcsAvailabilityCallback
    422:430:void removeConnectionToService() -> removeConnectionToService
    245:248:void removeFeature(java.lang.Class) -> removeFeature
    306:306:void setFeatureConnectorFactory(com.android.services.telephony.rcs.RcsFeatureController$FeatureConnectorFactory) -> setFeatureConnectorFactory
    414:418:void setupConnectionToService(com.android.ims.RcsFeatureManager) -> setupConnectionToService
    328:330:void unregisterImsRegistrationCallback(int,android.telephony.ims.aidl.IImsRegistrationCallback) -> unregisterImsRegistrationCallback
    352:354:void unregisterRcsAvailabilityCallback(int,android.telephony.ims.aidl.IImsCapabilityCallback) -> unregisterRcsAvailabilityCallback
    265:271:void updateAssociatedSubscription(int) -> updateAssociatedSubscription
    403:408:void updateCapabilities() -> updateCapabilities
    434:445:void updateConnectionStatus(com.android.ims.RcsFeatureManager) -> updateConnectionStatus
com.android.services.telephony.rcs.RcsFeatureController$1 -> com.android.services.telephony.rcs.RcsFeatureController$1:
    128:128:void <init>(com.android.services.telephony.rcs.RcsFeatureController) -> <init>
    128:128:void connectionReady(com.android.ims.FeatureUpdates) -> connectionReady
    133:145:void connectionReady(com.android.ims.RcsFeatureManager) -> connectionReady
    153:158:void connectionUnavailable(int) -> connectionUnavailable
com.android.services.telephony.rcs.RcsFeatureController$2 -> com.android.services.telephony.rcs.RcsFeatureController$2:
    163:163:void <init>(com.android.services.telephony.rcs.RcsFeatureController) -> <init>
com.android.services.telephony.rcs.SipDelegateBinderConnection -> com.android.services.telephony.rcs.SipDelegateBinderConnection:
    61:172:void <init>(int,android.telephony.ims.aidl.ISipTransport,android.telephony.ims.aidl.IImsRegistration,android.telephony.ims.DelegateRequest,java.util.Set,java.util.concurrent.Executor,java.util.List) -> <init>
    52:52:void access$000(com.android.services.telephony.rcs.SipDelegateBinderConnection,int) -> access$000
    52:52:void access$100(com.android.services.telephony.rcs.SipDelegateBinderConnection,android.telephony.ims.aidl.ISipDelegate,java.util.List) -> access$100
    261:261:void binderDied() -> binderDied
    179:186:boolean create(android.telephony.ims.aidl.ISipDelegateMessageCallback,java.util.function.BiConsumer) -> create
    192:207:void destroy(int,java.util.function.Consumer) -> destroy
    262:266:void lambda$binderDied$2() -> lambda$binderDied$2
    197:197:void lambda$destroy$0(int) -> lambda$destroy$0
    202:202:void lambda$destroy$1(int) -> lambda$destroy$1
    250:251:void logi(java.lang.String) -> logi
    255:256:void logw(java.lang.String) -> logw
    222:233:void notifySipDelegateCreated(android.telephony.ims.aidl.ISipDelegate,java.util.List) -> notifySipDelegateCreated
    237:241:void notifySipDelegateDestroyed(int) -> notifySipDelegateDestroyed
    214:216:void triggerFullNetworkRegistration(int,java.lang.String) -> triggerFullNetworkRegistration
com.android.services.telephony.rcs.SipDelegateBinderConnection$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.SipDelegateBinderConnection$$ExternalSyntheticLambda0:
    com.android.services.telephony.rcs.SipDelegateBinderConnection com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$5$047ebbbe41404cf0718222dbe8fa9080b71b8447beab459a3bc92fe9be384dd7$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$5$047ebbbe41404cf0718222dbe8fa9080b71b8447beab459a3bc92fe9be384dd7$0.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnection) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$5$047ebbbe41404cf0718222dbe8fa9080b71b8447beab459a3bc92fe9be384dd7$0.run() -> run
com.android.services.telephony.rcs.SipDelegateBinderConnection$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.SipDelegateBinderConnection$$ExternalSyntheticLambda1:
    com.android.services.telephony.rcs.SipDelegateBinderConnection com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$6$6ac148fcbf80ad0927719bbf4029901997ef52496a3fd1110de44cc635028a2c$0.f$0 -> f$0
    int com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$6$6ac148fcbf80ad0927719bbf4029901997ef52496a3fd1110de44cc635028a2c$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$6$6ac148fcbf80ad0927719bbf4029901997ef52496a3fd1110de44cc635028a2c$0.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnection,int) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$6$6ac148fcbf80ad0927719bbf4029901997ef52496a3fd1110de44cc635028a2c$0.run() -> run
com.android.services.telephony.rcs.SipDelegateBinderConnection$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.SipDelegateBinderConnection$$ExternalSyntheticLambda2:
    com.android.services.telephony.rcs.SipDelegateBinderConnection com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$6$6ac148fcbf80ad0927719bbf4029901997ef52496a3fd1110de44cc635028a2c$1.f$0 -> f$0
    int com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$6$6ac148fcbf80ad0927719bbf4029901997ef52496a3fd1110de44cc635028a2c$1.f$1 -> f$1
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$6$6ac148fcbf80ad0927719bbf4029901997ef52496a3fd1110de44cc635028a2c$1.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnection,int) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$$InternalSyntheticLambda$6$6ac148fcbf80ad0927719bbf4029901997ef52496a3fd1110de44cc635028a2c$1.run() -> run
com.android.services.telephony.rcs.SipDelegateBinderConnection$1 -> com.android.services.telephony.rcs.SipDelegateBinderConnection$1:
    66:66:void <init>(com.android.services.telephony.rcs.SipDelegateBinderConnection) -> <init>
    118:120:void lambda$onConfigurationChanged$3(android.telephony.ims.SipDelegateConfiguration) -> lambda$onConfigurationChanged$3
    73:73:void lambda$onCreated$0(android.telephony.ims.aidl.ISipDelegate,java.util.List) -> lambda$onCreated$0
    132:132:void lambda$onDestroyed$4(int) -> lambda$onDestroyed$4
    85:87:void lambda$onFeatureTagRegistrationChanged$1(android.telephony.ims.DelegateRegistrationState) -> lambda$onFeatureTagRegistrationChanged$1
    101:104:void lambda$onImsConfigurationChanged$2(android.telephony.ims.SipDelegateImsConfiguration) -> lambda$onImsConfigurationChanged$2
    115:125:void onConfigurationChanged(android.telephony.ims.SipDelegateConfiguration) -> onConfigurationChanged
    70:76:void onCreated(android.telephony.ims.aidl.ISipDelegate,java.util.List) -> onCreated
    130:135:void onDestroyed(int) -> onDestroyed
    82:92:void onFeatureTagRegistrationChanged(android.telephony.ims.DelegateRegistrationState) -> onFeatureTagRegistrationChanged
    98:109:void onImsConfigurationChanged(android.telephony.ims.SipDelegateImsConfiguration) -> onImsConfigurationChanged
com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda0:
    com.android.services.telephony.rcs.SipDelegateBinderConnection$1 com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$c87cc44d61af0529797015a67a9d2351a8e2428bf5e755d594fe71b2bb5bcd19$0.f$0 -> f$0
    int com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$c87cc44d61af0529797015a67a9d2351a8e2428bf5e755d594fe71b2bb5bcd19$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$c87cc44d61af0529797015a67a9d2351a8e2428bf5e755d594fe71b2bb5bcd19$0.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnection$1,int) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$c87cc44d61af0529797015a67a9d2351a8e2428bf5e755d594fe71b2bb5bcd19$0.run() -> run
com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda1:
    android.telephony.ims.DelegateRegistrationState com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$691631b07b68481f35929e6b7ca4b79ea11686ebdf6f952987d35028987494d0$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipDelegateBinderConnection$1 com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$691631b07b68481f35929e6b7ca4b79ea11686ebdf6f952987d35028987494d0$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$691631b07b68481f35929e6b7ca4b79ea11686ebdf6f952987d35028987494d0$0.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnection$1,android.telephony.ims.DelegateRegistrationState) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$691631b07b68481f35929e6b7ca4b79ea11686ebdf6f952987d35028987494d0$0.run() -> run
com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda2:
    com.android.services.telephony.rcs.SipDelegateBinderConnection$1 com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$787a4d9c1f84583b579445f449ec27e6461d54667cf0167ec81cb453579ed869$0.f$0 -> f$0
    android.telephony.ims.SipDelegateConfiguration com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$787a4d9c1f84583b579445f449ec27e6461d54667cf0167ec81cb453579ed869$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$787a4d9c1f84583b579445f449ec27e6461d54667cf0167ec81cb453579ed869$0.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnection$1,android.telephony.ims.SipDelegateConfiguration) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$787a4d9c1f84583b579445f449ec27e6461d54667cf0167ec81cb453579ed869$0.run() -> run
com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda3 -> com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda3:
    android.telephony.ims.SipDelegateImsConfiguration com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$cc659bf7ea09a41a0cedabb29a067e00bc66c02abf1fac052f59d3f85c0a8f36$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipDelegateBinderConnection$1 com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$cc659bf7ea09a41a0cedabb29a067e00bc66c02abf1fac052f59d3f85c0a8f36$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$cc659bf7ea09a41a0cedabb29a067e00bc66c02abf1fac052f59d3f85c0a8f36$0.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnection$1,android.telephony.ims.SipDelegateImsConfiguration) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$cc659bf7ea09a41a0cedabb29a067e00bc66c02abf1fac052f59d3f85c0a8f36$0.run() -> run
com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda4 -> com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$ExternalSyntheticLambda4:
    java.util.List com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$c7635a6e4dffcaa8fe8d6d8bfdca8b63c464eb443e1a98304e61b3c249407ef7$0.f$2 -> f$2
    android.telephony.ims.aidl.ISipDelegate com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$c7635a6e4dffcaa8fe8d6d8bfdca8b63c464eb443e1a98304e61b3c249407ef7$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipDelegateBinderConnection$1 com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$c7635a6e4dffcaa8fe8d6d8bfdca8b63c464eb443e1a98304e61b3c249407ef7$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$c7635a6e4dffcaa8fe8d6d8bfdca8b63c464eb443e1a98304e61b3c249407ef7$0.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnection$1,android.telephony.ims.aidl.ISipDelegate,java.util.List) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnection$1$$InternalSyntheticLambda$5$c7635a6e4dffcaa8fe8d6d8bfdca8b63c464eb443e1a98304e61b3c249407ef7$0.run() -> run
com.android.services.telephony.rcs.SipDelegateBinderConnectionStub -> com.android.services.telephony.rcs.SipDelegateBinderConnectionStub:
    55:58:void <init>(java.util.Set,java.util.concurrent.Executor,java.util.List) -> <init>
    64:64:boolean create(android.telephony.ims.aidl.ISipDelegateMessageCallback,java.util.function.BiConsumer) -> create
    75:75:void destroy(int,java.util.function.Consumer) -> destroy
    65:67:void lambda$create$0(java.util.function.BiConsumer) -> lambda$create$0
    76:77:void lambda$destroy$1(java.util.function.Consumer,int) -> lambda$destroy$1
com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$ExternalSyntheticLambda0:
    java.util.function.BiConsumer com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$InternalSyntheticLambda$6$9e1b758e0ae64e0b8087109408b05d398bf6742d9f4c76c6298d1dfd374b2327$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipDelegateBinderConnectionStub com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$InternalSyntheticLambda$6$9e1b758e0ae64e0b8087109408b05d398bf6742d9f4c76c6298d1dfd374b2327$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$InternalSyntheticLambda$6$9e1b758e0ae64e0b8087109408b05d398bf6742d9f4c76c6298d1dfd374b2327$0.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnectionStub,java.util.function.BiConsumer) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$InternalSyntheticLambda$6$9e1b758e0ae64e0b8087109408b05d398bf6742d9f4c76c6298d1dfd374b2327$0.run() -> run
com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$ExternalSyntheticLambda1:
    java.util.function.Consumer com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$InternalSyntheticLambda$6$e6122b46bad4d8aa7f3343d6b9e1ef4991c1220ee838e48c976abd6671112d8a$0.f$1 -> f$1
    int com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$InternalSyntheticLambda$6$e6122b46bad4d8aa7f3343d6b9e1ef4991c1220ee838e48c976abd6671112d8a$0.f$2 -> f$2
    com.android.services.telephony.rcs.SipDelegateBinderConnectionStub com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$InternalSyntheticLambda$6$e6122b46bad4d8aa7f3343d6b9e1ef4991c1220ee838e48c976abd6671112d8a$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$InternalSyntheticLambda$6$e6122b46bad4d8aa7f3343d6b9e1ef4991c1220ee838e48c976abd6671112d8a$0.<init>(com.android.services.telephony.rcs.SipDelegateBinderConnectionStub,java.util.function.Consumer,int) -> <init>
    void com.android.services.telephony.rcs.SipDelegateBinderConnectionStub$$InternalSyntheticLambda$6$e6122b46bad4d8aa7f3343d6b9e1ef4991c1220ee838e48c976abd6671112d8a$0.run() -> run
com.android.services.telephony.rcs.SipDelegateController -> com.android.services.telephony.rcs.SipDelegateController:
    87:106:void <init>(int,android.telephony.ims.DelegateRequest,java.lang.String,android.telephony.ims.aidl.ISipTransport,android.telephony.ims.aidl.IImsRegistration,java.util.concurrent.ScheduledExecutorService,android.telephony.ims.aidl.ISipDelegateConnectionStateCallback,android.telephony.ims.aidl.ISipDelegateMessageCallback) -> <init>
    87:124:void <init>(int,android.telephony.ims.DelegateRequest,java.lang.String,java.util.concurrent.ScheduledExecutorService,com.android.services.telephony.rcs.MessageTransportWrapper,com.android.services.telephony.rcs.DelegateStateTracker,com.android.services.telephony.rcs.DelegateBinderStateManager$Factory) -> <init>
    53:53:int access$000(com.android.services.telephony.rcs.SipDelegateController) -> access$000
    53:53:java.util.concurrent.ScheduledExecutorService access$100(com.android.services.telephony.rcs.SipDelegateController) -> access$100
    227:243:java.util.concurrent.CompletableFuture changeSupportedFeatureTags(java.util.Set,java.util.Set) -> changeSupportedFeatureTags
    169:182:java.util.concurrent.CompletableFuture create(java.util.Set,java.util.Set) -> create
    381:385:com.android.services.telephony.rcs.DelegateBinderStateManager createBinderConnection(java.util.Set,java.util.Set) -> createBinderConnection
    365:373:java.util.concurrent.CompletableFuture createSipDelegate(com.android.services.telephony.rcs.DelegateBinderStateManager) -> createSipDelegate
    265:272:java.util.concurrent.CompletableFuture destroy(boolean,int) -> destroy
    326:350:java.util.concurrent.CompletableFuture destroySipDelegate(boolean,int,int,int,int) -> destroySipDelegate
    394:414:void dump(java.io.PrintWriter) -> dump
    153:153:android.telephony.ims.aidl.ISipDelegateMessageCallback getAppMessageCallback() -> getAppMessageCallback
    132:132:android.telephony.ims.DelegateRequest getInitialRequest() -> getInitialRequest
    139:139:java.lang.String getPackageName() -> getPackageName
    146:146:android.telephony.ims.aidl.ISipDelegate getSipDelegateInterface() -> getSipDelegateInterface
    244:246:java.util.concurrent.CompletionStage lambda$changeSupportedFeatureTags$1(java.util.Set,java.util.Set,java.lang.Integer) -> lambda$changeSupportedFeatureTags$1
    184:196:java.lang.Boolean lambda$create$0(com.android.services.telephony.rcs.DelegateBinderStateManager,java.util.Set,android.util.Pair) -> lambda$create$0
    369:369:void lambda$createSipDelegate$4(java.util.concurrent.CompletableFuture,android.telephony.ims.aidl.ISipDelegate,java.util.Set) -> lambda$createSipDelegate$4
    273:274:java.lang.Integer lambda$destroy$2(java.lang.Integer) -> lambda$destroy$2
    351:353:java.util.concurrent.CompletionStage lambda$destroySipDelegate$3(int,java.lang.Boolean) -> lambda$destroySipDelegate$3
    418:419:void logi(java.lang.String) -> logi
    423:424:void logw(java.lang.String) -> logw
    286:290:void triggerFullNetworkRegistration(int,java.lang.String) -> triggerFullNetworkRegistration
com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda0:
    java.util.concurrent.CompletableFuture com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$5$ca79986d17e2197aec59c2d3a85b7b674651c8db705c6ecc71e3c269b369a36c$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$5$ca79986d17e2197aec59c2d3a85b7b674651c8db705c6ecc71e3c269b369a36c$0.<init>(java.util.concurrent.CompletableFuture) -> <init>
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$5$ca79986d17e2197aec59c2d3a85b7b674651c8db705c6ecc71e3c269b369a36c$0.accept(java.lang.Object,java.lang.Object) -> accept
com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda1:
    java.util.concurrent.CompletableFuture com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$fa4c01233d693d8b1a868fe8c39189f9761eb8976dce552a74f88f0a45e9ddaf$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$fa4c01233d693d8b1a868fe8c39189f9761eb8976dce552a74f88f0a45e9ddaf$0.<init>(java.util.concurrent.CompletableFuture) -> <init>
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$fa4c01233d693d8b1a868fe8c39189f9761eb8976dce552a74f88f0a45e9ddaf$0.accept(java.lang.Object) -> accept
com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda2:
    java.util.concurrent.CompletableFuture com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$5$f601179cd8a01d7d267b56b305b7623d5143a967e58aa5ffbf98c1e79999adf6$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$5$f601179cd8a01d7d267b56b305b7623d5143a967e58aa5ffbf98c1e79999adf6$0.<init>(java.util.concurrent.CompletableFuture) -> <init>
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$5$f601179cd8a01d7d267b56b305b7623d5143a967e58aa5ffbf98c1e79999adf6$0.accept(java.lang.Object) -> accept
com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda3 -> com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda3:
    com.android.services.telephony.rcs.SipDelegateController com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$3$26eb407939cb8900f4b79e1bedeac7fcebfe00d0d3bb97a81842508b1fc4e63f$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$3$26eb407939cb8900f4b79e1bedeac7fcebfe00d0d3bb97a81842508b1fc4e63f$0.<init>(com.android.services.telephony.rcs.SipDelegateController) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$3$26eb407939cb8900f4b79e1bedeac7fcebfe00d0d3bb97a81842508b1fc4e63f$0.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda4 -> com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda4:
    com.android.services.telephony.rcs.SipDelegateController com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$fa4c01233d693d8b1a868fe8c39189f9761eb8976dce552a74f88f0a45e9ddaf$1.f$0 -> f$0
    int com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$fa4c01233d693d8b1a868fe8c39189f9761eb8976dce552a74f88f0a45e9ddaf$1.f$1 -> f$1
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$fa4c01233d693d8b1a868fe8c39189f9761eb8976dce552a74f88f0a45e9ddaf$1.<init>(com.android.services.telephony.rcs.SipDelegateController,int) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$fa4c01233d693d8b1a868fe8c39189f9761eb8976dce552a74f88f0a45e9ddaf$1.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda5 -> com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda5:
    com.android.services.telephony.rcs.SipDelegateController com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$f9927bc596c335a0e312fe07cbe12f6632fb28e69063eebe7cfcffe2fa3df7e3$0.f$0 -> f$0
    java.util.Set com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$f9927bc596c335a0e312fe07cbe12f6632fb28e69063eebe7cfcffe2fa3df7e3$0.f$2 -> f$2
    com.android.services.telephony.rcs.DelegateBinderStateManager com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$f9927bc596c335a0e312fe07cbe12f6632fb28e69063eebe7cfcffe2fa3df7e3$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$f9927bc596c335a0e312fe07cbe12f6632fb28e69063eebe7cfcffe2fa3df7e3$0.<init>(com.android.services.telephony.rcs.SipDelegateController,com.android.services.telephony.rcs.DelegateBinderStateManager,java.util.Set) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$4$f9927bc596c335a0e312fe07cbe12f6632fb28e69063eebe7cfcffe2fa3df7e3$0.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda6 -> com.android.services.telephony.rcs.SipDelegateController$$ExternalSyntheticLambda6:
    com.android.services.telephony.rcs.SipDelegateController com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$3$84809fb2bbfbf8824df2128505ffdcf5f54cafbc44efb9b64d9e1abbd58db6b1$0.f$0 -> f$0
    java.util.Set com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$3$84809fb2bbfbf8824df2128505ffdcf5f54cafbc44efb9b64d9e1abbd58db6b1$0.f$2 -> f$2
    java.util.Set com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$3$84809fb2bbfbf8824df2128505ffdcf5f54cafbc44efb9b64d9e1abbd58db6b1$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$3$84809fb2bbfbf8824df2128505ffdcf5f54cafbc44efb9b64d9e1abbd58db6b1$0.<init>(com.android.services.telephony.rcs.SipDelegateController,java.util.Set,java.util.Set) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipDelegateController$$InternalSyntheticLambda$3$84809fb2bbfbf8824df2128505ffdcf5f54cafbc44efb9b64d9e1abbd58db6b1$0.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipDelegateController$BinderConnectionFactory -> com.android.services.telephony.rcs.SipDelegateController$BinderConnectionFactory:
    61:63:void <init>(com.android.services.telephony.rcs.SipDelegateController,android.telephony.ims.aidl.ISipTransport,android.telephony.ims.aidl.IImsRegistration) -> <init>
    71:76:com.android.services.telephony.rcs.DelegateBinderStateManager create(int,android.telephony.ims.DelegateRequest,java.util.Set,java.util.concurrent.Executor,java.util.List) -> create
com.android.services.telephony.rcs.SipDialog -> com.android.services.telephony.rcs.SipDialog:
    67:95:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Set) -> <init>
    173:174:void close() -> close
    157:165:void confirm(java.lang.String) -> confirm
    141:148:void earlyResponse(java.lang.String) -> earlyResponse
    238:245:boolean equals(java.lang.Object) -> equals
    132:132:com.android.services.telephony.rcs.SipDialog forkDialog() -> forkDialog
    74:78:com.android.services.telephony.rcs.SipDialog fromSipMessage(android.telephony.ims.SipMessage) -> fromSipMessage
    125:125:java.util.Set getAcceptContactFeatureTags() -> getAcceptContactFeatureTags
    102:102:java.lang.String getCallId() -> getCallId
    110:110:int getState() -> getState
    118:118:java.lang.String getToTag() -> getToTag
    252:252:int hashCode() -> hashCode
    194:203:boolean isRequestAssociatedWithDialog(android.telephony.ims.SipMessage) -> isRequestAssociatedWithDialog
    183:186:boolean isResponseAssociatedWithDialog(android.telephony.ims.SipMessage) -> isResponseAssociatedWithDialog
    208:232:java.lang.String toString() -> toString
com.android.services.telephony.rcs.SipSessionTracker -> com.android.services.telephony.rcs.SipSessionTracker:
    55:55:void <clinit>() -> <clinit>
    63:75:void <init>(int,com.android.internal.telephony.metrics.RcsStats) -> <init>
    122:125:void acknowledgePendingMessage(java.lang.String) -> acknowledgePendingMessage
    143:154:void cleanupSession(java.lang.String) -> cleanupSession
    211:215:void clearAllSessions() -> clearAllSessions
    268:276:boolean closesDialog(android.telephony.ims.SipMessage) -> closesDialog
    222:243:void dump(java.io.PrintWriter) -> dump
    87:109:void filterSipMessage(int,android.telephony.ims.SipMessage) -> filterSipMessage
    161:167:java.util.Set getCallIdsAssociatedWithFeatureTag(java.util.Set) -> getCallIdsAssociatedWithFeatureTag
    300:300:java.lang.Runnable getCloseDialogRunnable(android.telephony.ims.SipMessage) -> getCloseDialogRunnable
    195:196:java.util.Set getClosedDialogs() -> getClosedDialogs
    185:186:java.util.Set getConfirmedDialogs() -> getConfirmedDialogs
    280:280:java.lang.Runnable getCreateDialogRunnable(int,android.telephony.ims.SipMessage) -> getCreateDialogRunnable
    315:315:java.lang.Runnable getDialogStateChangeRunnable(android.telephony.ims.SipMessage) -> getDialogStateChangeRunnable
    177:178:java.util.Set getEarlyDialogs() -> getEarlyDialogs
    204:204:java.util.Set getTrackedDialogs() -> getTrackedDialogs
    144:144:boolean lambda$cleanupSession$1(java.lang.String,com.android.services.telephony.rcs.SipDialog) -> lambda$cleanupSession$1
    104:105:void lambda$filterSipMessage$0(java.lang.Runnable,java.lang.Runnable) -> lambda$filterSipMessage$0
    166:166:boolean lambda$getCallIdsAssociatedWithFeatureTag$2(java.lang.String,java.lang.String) -> lambda$getCallIdsAssociatedWithFeatureTag$2
    301:309:void lambda$getCloseDialogRunnable$10(android.telephony.ims.SipMessage) -> lambda$getCloseDialogRunnable$10
    302:302:boolean lambda$getCloseDialogRunnable$9(android.telephony.ims.SipMessage,com.android.services.telephony.rcs.SipDialog) -> lambda$getCloseDialogRunnable$9
    195:195:boolean lambda$getClosedDialogs$5(com.android.services.telephony.rcs.SipDialog) -> lambda$getClosedDialogs$5
    185:185:boolean lambda$getConfirmedDialogs$4(com.android.services.telephony.rcs.SipDialog) -> lambda$getConfirmedDialogs$4
    282:282:boolean lambda$getCreateDialogRunnable$7(android.telephony.ims.SipMessage,com.android.services.telephony.rcs.SipDialog) -> lambda$getCreateDialogRunnable$7
    281:295:void lambda$getCreateDialogRunnable$8(android.telephony.ims.SipMessage,int) -> lambda$getCreateDialogRunnable$8
    318:318:boolean lambda$getDialogStateChangeRunnable$11(android.telephony.ims.SipMessage,com.android.services.telephony.rcs.SipDialog) -> lambda$getDialogStateChangeRunnable$11
    325:325:boolean lambda$getDialogStateChangeRunnable$12(java.lang.String,com.android.services.telephony.rcs.SipDialog) -> lambda$getDialogStateChangeRunnable$12
    317:340:void lambda$getDialogStateChangeRunnable$13(android.telephony.ims.SipMessage) -> lambda$getDialogStateChangeRunnable$13
    177:177:boolean lambda$getEarlyDialogs$3(com.android.services.telephony.rcs.SipDialog) -> lambda$getEarlyDialogs$3
    260:260:boolean lambda$startsEarlyDialog$6(java.lang.String[],java.lang.String) -> lambda$startsEarlyDialog$6
    381:382:void logi(java.lang.String) -> logi
    386:387:void logw(java.lang.String) -> logw
    134:134:void pendingMessageFailed(java.lang.String) -> pendingMessageFailed
    251:260:boolean startsEarlyDialog(android.telephony.ims.SipMessage) -> startsEarlyDialog
    346:377:void updateSipDialogState(com.android.services.telephony.rcs.SipDialog,android.telephony.ims.SipMessage) -> updateSipDialogState
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda0:
    android.telephony.ims.SipMessage com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$1290242d0772973c323091a5e49d016ba1dd81cb86dfc3cc0f86776afbd002f7$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipSessionTracker com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$1290242d0772973c323091a5e49d016ba1dd81cb86dfc3cc0f86776afbd002f7$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$1290242d0772973c323091a5e49d016ba1dd81cb86dfc3cc0f86776afbd002f7$0.<init>(com.android.services.telephony.rcs.SipSessionTracker,android.telephony.ims.SipMessage) -> <init>
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$1290242d0772973c323091a5e49d016ba1dd81cb86dfc3cc0f86776afbd002f7$0.run() -> run
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda1:
    android.telephony.ims.SipMessage com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$49aa99aeb8204ca6d8b6decef5da0d75d2af6e7b8bdc8d04e884b3ecec9d1723$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipSessionTracker com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$49aa99aeb8204ca6d8b6decef5da0d75d2af6e7b8bdc8d04e884b3ecec9d1723$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$49aa99aeb8204ca6d8b6decef5da0d75d2af6e7b8bdc8d04e884b3ecec9d1723$0.<init>(com.android.services.telephony.rcs.SipSessionTracker,android.telephony.ims.SipMessage) -> <init>
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$49aa99aeb8204ca6d8b6decef5da0d75d2af6e7b8bdc8d04e884b3ecec9d1723$0.run() -> run
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda10 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda10:
    java.lang.String com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$5f00fd896339e3d3862f7ee66ac1ea9913552e3e4967d1232c3e38681e972a4e$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$5f00fd896339e3d3862f7ee66ac1ea9913552e3e4967d1232c3e38681e972a4e$0.<init>(java.lang.String) -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$5f00fd896339e3d3862f7ee66ac1ea9913552e3e4967d1232c3e38681e972a4e$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda11 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda11:
    java.lang.String[] com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$c7c67fdd7d1bb762e80c8634ebf4afcc03d537189b3095d6e533f4e7c8e4f864$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$c7c67fdd7d1bb762e80c8634ebf4afcc03d537189b3095d6e533f4e7c8e4f864$0.<init>(java.lang.String[]) -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$c7c67fdd7d1bb762e80c8634ebf4afcc03d537189b3095d6e533f4e7c8e4f864$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda12 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda12:
    com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$0$670ff094241bc1a9b8199d1a92536138cb2744bf3beb2486d7e752edcaa4c44e$0 com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$0$670ff094241bc1a9b8199d1a92536138cb2744bf3beb2486d7e752edcaa4c44e$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$0$670ff094241bc1a9b8199d1a92536138cb2744bf3beb2486d7e752edcaa4c44e$0.<clinit>() -> <clinit>
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$0$670ff094241bc1a9b8199d1a92536138cb2744bf3beb2486d7e752edcaa4c44e$0.<init>() -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$0$670ff094241bc1a9b8199d1a92536138cb2744bf3beb2486d7e752edcaa4c44e$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda13 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda13:
    com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$cce50a641e9249ee5de792d392e3b78ad660f41524de817126fbdf851612fbc1$0 com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$cce50a641e9249ee5de792d392e3b78ad660f41524de817126fbdf851612fbc1$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$cce50a641e9249ee5de792d392e3b78ad660f41524de817126fbdf851612fbc1$0.<clinit>() -> <clinit>
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$cce50a641e9249ee5de792d392e3b78ad660f41524de817126fbdf851612fbc1$0.<init>() -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$cce50a641e9249ee5de792d392e3b78ad660f41524de817126fbdf851612fbc1$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda14 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda14:
    com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$3140b3b8657b58a7922487124e728d31fd99bdfcd1e033a79c59dc3f492f6913$0 com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$3140b3b8657b58a7922487124e728d31fd99bdfcd1e033a79c59dc3f492f6913$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$3140b3b8657b58a7922487124e728d31fd99bdfcd1e033a79c59dc3f492f6913$0.<clinit>() -> <clinit>
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$3140b3b8657b58a7922487124e728d31fd99bdfcd1e033a79c59dc3f492f6913$0.<init>() -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$1$3140b3b8657b58a7922487124e728d31fd99bdfcd1e033a79c59dc3f492f6913$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda2:
    android.telephony.ims.SipMessage com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$f6083f3e63e2bc40d28dc7431984bcc923e30a60d62afd4408609f46e19525f4$0.f$1 -> f$1
    int com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$f6083f3e63e2bc40d28dc7431984bcc923e30a60d62afd4408609f46e19525f4$0.f$2 -> f$2
    com.android.services.telephony.rcs.SipSessionTracker com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$f6083f3e63e2bc40d28dc7431984bcc923e30a60d62afd4408609f46e19525f4$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$f6083f3e63e2bc40d28dc7431984bcc923e30a60d62afd4408609f46e19525f4$0.<init>(com.android.services.telephony.rcs.SipSessionTracker,android.telephony.ims.SipMessage,int) -> <init>
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$3$f6083f3e63e2bc40d28dc7431984bcc923e30a60d62afd4408609f46e19525f4$0.run() -> run
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda3 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda3:
    java.lang.Runnable com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$9f6d0fad2b75da4c47d3aad1d8a0de72b382cbc392c4d7bdda8d81598eaab43a$0.f$0 -> f$0
    java.lang.Runnable com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$9f6d0fad2b75da4c47d3aad1d8a0de72b382cbc392c4d7bdda8d81598eaab43a$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$9f6d0fad2b75da4c47d3aad1d8a0de72b382cbc392c4d7bdda8d81598eaab43a$0.<init>(java.lang.Runnable,java.lang.Runnable) -> <init>
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$9f6d0fad2b75da4c47d3aad1d8a0de72b382cbc392c4d7bdda8d81598eaab43a$0.run() -> run
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda5 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda5:
    android.telephony.ims.SipMessage com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$a27809d3abd7f74912ff1fb1ac44eb59a2a0f0019035baa90c3a7fdd990c0e9d$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$a27809d3abd7f74912ff1fb1ac44eb59a2a0f0019035baa90c3a7fdd990c0e9d$0.<init>(android.telephony.ims.SipMessage) -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$a27809d3abd7f74912ff1fb1ac44eb59a2a0f0019035baa90c3a7fdd990c0e9d$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda6 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda6:
    android.telephony.ims.SipMessage com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$28045d0f1886039f663e034146778e24a7913f2c673c2a06ee68e832f807bcec$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$28045d0f1886039f663e034146778e24a7913f2c673c2a06ee68e832f807bcec$0.<init>(android.telephony.ims.SipMessage) -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$28045d0f1886039f663e034146778e24a7913f2c673c2a06ee68e832f807bcec$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda7 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda7:
    android.telephony.ims.SipMessage com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$70b3bf6375946987bf759acca893bdf6060134ccc303392514488f7c7143a3e7$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$70b3bf6375946987bf759acca893bdf6060134ccc303392514488f7c7143a3e7$0.<init>(android.telephony.ims.SipMessage) -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$70b3bf6375946987bf759acca893bdf6060134ccc303392514488f7c7143a3e7$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda8 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda8:
    java.lang.String com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$28045d0f1886039f663e034146778e24a7913f2c673c2a06ee68e832f807bcec$1.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$28045d0f1886039f663e034146778e24a7913f2c673c2a06ee68e832f807bcec$1.<init>(java.lang.String) -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$4$28045d0f1886039f663e034146778e24a7913f2c673c2a06ee68e832f807bcec$1.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda9 -> com.android.services.telephony.rcs.SipSessionTracker$$ExternalSyntheticLambda9:
    java.lang.String com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$3f984e83afe7e6b0ac963c98c198f8adfbbf2c917d719e6b8e207bc616683c8e$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$3f984e83afe7e6b0ac963c98c198f8adfbbf2c917d719e6b8e207bc616683c8e$0.<init>(java.lang.String) -> <init>
    boolean com.android.services.telephony.rcs.SipSessionTracker$$InternalSyntheticLambda$2$3f984e83afe7e6b0ac963c98c198f8adfbbf2c917d719e6b8e207bc616683c8e$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.SipTransportController -> com.android.services.telephony.rcs.SipTransportController:
    253:306:void <init>(android.content.Context,int,int) -> <init>
    253:324:void <init>(android.content.Context,int,int,com.android.services.telephony.rcs.SipTransportController$SipDelegateControllerFactory,com.android.services.telephony.rcs.SipTransportController$RoleManagerAdapter,com.android.services.telephony.rcs.SipTransportController$TimerAdapter,java.util.concurrent.ScheduledExecutorService) -> <init>
    86:86:java.util.concurrent.ScheduledExecutorService access$000(com.android.services.telephony.rcs.SipTransportController) -> access$000
    86:86:void access$100(com.android.services.telephony.rcs.SipTransportController,java.lang.String) -> access$100
    86:86:boolean access$200(com.android.services.telephony.rcs.SipTransportController,com.android.services.telephony.rcs.SipDelegateController,int) -> access$200
    86:86:void access$300(com.android.services.telephony.rcs.SipTransportController,java.util.concurrent.CompletableFuture) -> access$300
    86:86:void access$400(com.android.services.telephony.rcs.SipTransportController,java.lang.String) -> access$400
    617:618:void addPendingCreateAndEvaluate(com.android.services.telephony.rcs.SipDelegateController) -> addPendingCreateAndEvaluate
    595:597:boolean addPendingDestroy(com.android.services.telephony.rcs.SipDelegateController,int) -> addPendingDestroy
    607:608:void addPendingDestroyAndEvaluate(com.android.services.telephony.rcs.SipDelegateController,int) -> addPendingDestroyAndEvaluate
    555:561:void cancelPendingUpdateRegistration() -> cancelPendingUpdateRegistration
    853:885:java.util.concurrent.CompletableFuture changeSupportedFeatureTags(com.android.services.telephony.rcs.SipDelegateController,java.lang.String,java.util.Set) -> changeSupportedFeatureTags
    967:973:void checkStateOfController(int) -> checkStateOfController
    375:388:void createSipDelegate(int,android.telephony.ims.DelegateRequest,java.lang.String,android.telephony.ims.aidl.ISipDelegateConnectionStateCallback,android.telephony.ims.aidl.ISipDelegateMessageCallback) -> createSipDelegate
    435:457:void createSipDelegateInternal(int,android.telephony.ims.DelegateRequest,java.lang.String,android.telephony.ims.aidl.ISipDelegateConnectionStateCallback,android.telephony.ims.aidl.ISipDelegateMessageCallback,java.util.function.Consumer) -> createSipDelegateInternal
    399:399:void destroySipDelegate(int,android.telephony.ims.aidl.ISipDelegate,int) -> destroySipDelegate
    461:484:void destroySipDelegateInternal(int,android.telephony.ims.aidl.ISipDelegate,int) -> destroySipDelegateInternal
    1059:1076:void dump(java.io.PrintWriter) -> dump
    646:649:boolean isEvaluatePendingAndNotInProgress() -> isEvaluatePendingAndNotInProgress
    769:780:boolean isForcedFromReason(int) -> isForcedFromReason
    418:423:boolean isSupported(int) -> isSupported
    590:591:boolean isSupportedInternal(int) -> isSupportedInternal
    867:868:java.util.Set lambda$changeSupportedFeatureTags$16(java.util.Set,java.lang.Boolean) -> lambda$changeSupportedFeatureTags$16
    886:887:java.util.Set lambda$changeSupportedFeatureTags$17(android.util.ArraySet,java.lang.Boolean) -> lambda$changeSupportedFeatureTags$17
    377:380:void lambda$createSipDelegate$4(int,android.telephony.ims.DelegateRequest,java.lang.String,android.telephony.ims.aidl.ISipDelegateConnectionStateCallback,android.telephony.ims.aidl.ISipDelegateMessageCallback,java.util.concurrent.CompletableFuture) -> lambda$createSipDelegate$4
    399:399:void lambda$destroySipDelegate$5(int,android.telephony.ims.aidl.ISipDelegate,int) -> lambda$destroySipDelegate$5
    418:418:java.lang.Boolean lambda$isSupported$7(int) -> lambda$isSupported$7
    339:339:void lambda$onAssociatedSubscriptionUpdated$2(int) -> lambda$onAssociatedSubscriptionUpdated$2
    351:355:void lambda$onDestroy$3() -> lambda$onDestroy$3
    329:329:void lambda$onRcsConnected$0(com.android.ims.RcsFeatureManager) -> lambda$onRcsConnected$0
    334:334:void lambda$onRcsDisconnected$1() -> lambda$onRcsDisconnected$1
    708:708:com.android.services.telephony.rcs.SipDelegateController lambda$reevaluateDelegates$10(com.android.services.telephony.rcs.SipTransportController$DestroyRequest) -> lambda$reevaluateDelegates$10
    728:729:java.util.concurrent.CompletionStage lambda$reevaluateDelegates$11(java.lang.Void) -> lambda$reevaluateDelegates$11
    735:741:java.util.concurrent.CompletionStage lambda$reevaluateDelegates$12(com.android.services.telephony.rcs.SipDelegateController,java.lang.String,java.util.Set) -> lambda$reevaluateDelegates$12
    749:749:void lambda$reevaluateDelegates$13(java.util.Set,java.lang.Throwable) -> lambda$reevaluateDelegates$13
    752:754:void lambda$reevaluateDelegates$14(java.util.Set) -> lambda$reevaluateDelegates$14
    704:704:java.util.concurrent.CompletableFuture lambda$reevaluateDelegates$9(com.android.services.telephony.rcs.SipTransportController$DestroyRequest) -> lambda$reevaluateDelegates$9
    667:667:void lambda$scheduleReevaluateNow$8(java.util.concurrent.CompletableFuture) -> lambda$scheduleReevaluateNow$8
    762:762:void lambda$triggerDestroy$15(int,java.lang.Integer) -> lambda$triggerDestroy$15
    408:408:void lambda$triggerFullNetworkRegistration$6(int,android.telephony.ims.aidl.ISipDelegate,int,java.lang.String) -> lambda$triggerFullNetworkRegistration$6
    1080:1081:void logi(java.lang.String) -> logi
    1085:1086:void logw(java.lang.String) -> logw
    339:339:void onAssociatedSubscriptionUpdated(int) -> onAssociatedSubscriptionUpdated
    344:344:void onCarrierConfigChanged() -> onCarrierConfigChanged
    1026:1033:void onCarrierConfigChangedInternal() -> onCarrierConfigChangedInternal
    349:349:void onDestroy() -> onDestroy
    329:329:void onRcsConnected(com.android.ims.RcsFeatureManager) -> onRcsConnected
    334:334:void onRcsDisconnected() -> onRcsDisconnected
    979:989:void onRcsManagerChanged(com.android.ims.RcsFeatureManager) -> onRcsManagerChanged
    792:813:void onRoleHoldersChanged(java.lang.String,android.os.UserHandle) -> onRoleHoldersChanged
    1011:1019:void onSubIdChanged(int) -> onSubIdChanged
    688:756:void reevaluateDelegates() -> reevaluateDelegates
    995:998:void registerListeners() -> registerListeners
    1044:1053:java.util.concurrent.CompletableFuture scheduleDestroyDelegates(int) -> scheduleDestroyDelegates
    658:672:void scheduleReevaluateNow(java.util.concurrent.CompletableFuture) -> scheduleReevaluateNow
    630:636:void scheduleThrottledReevaluate() -> scheduleThrottledReevaluate
    543:548:void scheduleUpdateRegistration() -> scheduleUpdateRegistration
    521:529:void triggerDeregistrationEvent() -> triggerDeregistrationEvent
    760:762:java.util.concurrent.CompletableFuture triggerDestroy(com.android.services.telephony.rcs.SipDelegateController,int) -> triggerDestroy
    408:408:void triggerFullNetworkRegistration(int,android.telephony.ims.aidl.ISipDelegate,int,java.lang.String) -> triggerFullNetworkRegistration
    489:513:void triggerFullNetworkRegistrationInternal(int,android.telephony.ims.aidl.ISipDelegate,int,java.lang.String) -> triggerFullNetworkRegistrationInternal
    570:576:void triggerUpdateRegistrationEvent() -> triggerUpdateRegistrationEvent
    1003:1004:void unregisterListeners() -> unregisterListeners
    825:836:boolean updateRoleCache() -> updateRoleCache
    903:931:java.util.Set updateSupportedTags(java.util.Set,java.util.Set) -> updateSupportedTags
    942:954:java.lang.Object waitForMethodToComplete(java.util.concurrent.Callable) -> waitForMethodToComplete
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda1:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$0.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda10 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda10:
    java.lang.String com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$9d16a35c371fb79bbbd6743deeff1ef5733be3104a1db875f15a804f38bb3a01$0.f$4 -> f$4
    android.telephony.ims.aidl.ISipDelegate com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$9d16a35c371fb79bbbd6743deeff1ef5733be3104a1db875f15a804f38bb3a01$0.f$2 -> f$2
    int com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$9d16a35c371fb79bbbd6743deeff1ef5733be3104a1db875f15a804f38bb3a01$0.f$3 -> f$3
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$9d16a35c371fb79bbbd6743deeff1ef5733be3104a1db875f15a804f38bb3a01$0.f$0 -> f$0
    int com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$9d16a35c371fb79bbbd6743deeff1ef5733be3104a1db875f15a804f38bb3a01$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$9d16a35c371fb79bbbd6743deeff1ef5733be3104a1db875f15a804f38bb3a01$0.<init>(com.android.services.telephony.rcs.SipTransportController,int,android.telephony.ims.aidl.ISipDelegate,int,java.lang.String) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$9d16a35c371fb79bbbd6743deeff1ef5733be3104a1db875f15a804f38bb3a01$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda11 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda11:
    com.android.ims.RcsFeatureManager com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bd825ec6deb04c37b3ee7b54568848720dc8ee8794701ec1318b96cb60e900bc$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bd825ec6deb04c37b3ee7b54568848720dc8ee8794701ec1318b96cb60e900bc$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bd825ec6deb04c37b3ee7b54568848720dc8ee8794701ec1318b96cb60e900bc$0.<init>(com.android.services.telephony.rcs.SipTransportController,com.android.ims.RcsFeatureManager) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bd825ec6deb04c37b3ee7b54568848720dc8ee8794701ec1318b96cb60e900bc$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda12 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda12:
    java.util.concurrent.CompletableFuture com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$aaeae601fda2b28c32c1d9a58d33810a0fb32e8bcd7e704fb04e78c30238cbbe$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$aaeae601fda2b28c32c1d9a58d33810a0fb32e8bcd7e704fb04e78c30238cbbe$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$aaeae601fda2b28c32c1d9a58d33810a0fb32e8bcd7e704fb04e78c30238cbbe$0.<init>(com.android.services.telephony.rcs.SipTransportController,java.util.concurrent.CompletableFuture) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$aaeae601fda2b28c32c1d9a58d33810a0fb32e8bcd7e704fb04e78c30238cbbe$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda13 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda13:
    java.util.concurrent.ScheduledExecutorService com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$773967bf027fc87dee8f85ce897fad01b53a15dabbdb511f7725158002cbeda9$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$773967bf027fc87dee8f85ce897fad01b53a15dabbdb511f7725158002cbeda9$0.<init>(java.util.concurrent.ScheduledExecutorService) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$773967bf027fc87dee8f85ce897fad01b53a15dabbdb511f7725158002cbeda9$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda14 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda14:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$37f661d212e97739a71884b675c74690b96da19e3496d05713025ddbe0f46b82$0.f$0 -> f$0
    int com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$37f661d212e97739a71884b675c74690b96da19e3496d05713025ddbe0f46b82$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$37f661d212e97739a71884b675c74690b96da19e3496d05713025ddbe0f46b82$0.<init>(com.android.services.telephony.rcs.SipTransportController,int) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$37f661d212e97739a71884b675c74690b96da19e3496d05713025ddbe0f46b82$0.call() -> call
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda15 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda15:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$5.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$5.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$5.accept(java.lang.Object,java.lang.Object) -> accept
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda16 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda16:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$6.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$6.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$6.accept(java.lang.Object) -> accept
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda17 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda17:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$33129f34e6e8cf4600bae1cc938567d6eeaa3594db40efdea086780d74499271$0.f$0 -> f$0
    int com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$33129f34e6e8cf4600bae1cc938567d6eeaa3594db40efdea086780d74499271$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$33129f34e6e8cf4600bae1cc938567d6eeaa3594db40efdea086780d74499271$0.<init>(com.android.services.telephony.rcs.SipTransportController,int) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$33129f34e6e8cf4600bae1cc938567d6eeaa3594db40efdea086780d74499271$0.accept(java.lang.Object) -> accept
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda18 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda18:
    java.util.concurrent.CompletableFuture com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$457ad4268cbf12189f7f44527e760bf212e04cd6de1688fcc7bcbad062b62c79$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$457ad4268cbf12189f7f44527e760bf212e04cd6de1688fcc7bcbad062b62c79$0.<init>(java.util.concurrent.CompletableFuture) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$457ad4268cbf12189f7f44527e760bf212e04cd6de1688fcc7bcbad062b62c79$0.accept(java.lang.Object) -> accept
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda19 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda19:
    java.util.concurrent.CompletableFuture com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$aaeae601fda2b28c32c1d9a58d33810a0fb32e8bcd7e704fb04e78c30238cbbe$1.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$aaeae601fda2b28c32c1d9a58d33810a0fb32e8bcd7e704fb04e78c30238cbbe$1.<init>(java.util.concurrent.CompletableFuture) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$aaeae601fda2b28c32c1d9a58d33810a0fb32e8bcd7e704fb04e78c30238cbbe$1.accept(java.lang.Object) -> accept
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda2:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$bc64224b26afaa1ba2004cdbd77d1853ae7d96da9b1a750630f70fc0a1e262bc$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$bc64224b26afaa1ba2004cdbd77d1853ae7d96da9b1a750630f70fc0a1e262bc$0.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$bc64224b26afaa1ba2004cdbd77d1853ae7d96da9b1a750630f70fc0a1e262bc$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda20 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda20:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$1.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$1.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$1.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda21 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda21:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$3.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$3.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$3.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda22 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda22:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$167cccfe5312e34abf13569f78ca4f39724d58b777b2cb6d813affb04a3ddc18$1.f$0 -> f$0
    android.util.ArraySet com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$167cccfe5312e34abf13569f78ca4f39724d58b777b2cb6d813affb04a3ddc18$1.f$1 -> f$1
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$167cccfe5312e34abf13569f78ca4f39724d58b777b2cb6d813affb04a3ddc18$1.<init>(com.android.services.telephony.rcs.SipTransportController,android.util.ArraySet) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$167cccfe5312e34abf13569f78ca4f39724d58b777b2cb6d813affb04a3ddc18$1.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda23 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda23:
    com.android.services.telephony.rcs.SipDelegateController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$4.f$1 -> f$1
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$4.f$0 -> f$0
    java.lang.String com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$4.f$2 -> f$2
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$4.<init>(com.android.services.telephony.rcs.SipTransportController,com.android.services.telephony.rcs.SipDelegateController,java.lang.String) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$4.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda24 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda24:
    java.util.Set com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$167cccfe5312e34abf13569f78ca4f39724d58b777b2cb6d813affb04a3ddc18$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$167cccfe5312e34abf13569f78ca4f39724d58b777b2cb6d813affb04a3ddc18$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$167cccfe5312e34abf13569f78ca4f39724d58b777b2cb6d813affb04a3ddc18$0.<init>(com.android.services.telephony.rcs.SipTransportController,java.util.Set) -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$167cccfe5312e34abf13569f78ca4f39724d58b777b2cb6d813affb04a3ddc18$0.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda25 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda25:
    com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$2 com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$2.INSTANCE -> INSTANCE
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$2.<clinit>() -> <clinit>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$2.<init>() -> <init>
    java.lang.Object com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$0b484b1a4911820d861aa96597654f723a3494b4c63dc2b4ea0c4a58681e3a85$2.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda3 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda3:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bbb964b0c8de4532131d035969c5ca69ec5a56bd1a9182d46ac5b622311d6ee7$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bbb964b0c8de4532131d035969c5ca69ec5a56bd1a9182d46ac5b622311d6ee7$0.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bbb964b0c8de4532131d035969c5ca69ec5a56bd1a9182d46ac5b622311d6ee7$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda4 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda4:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$1abb078c55fe377230640da19e7b8b968be8d1304a7a665ca66b318a194c3a42$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$1abb078c55fe377230640da19e7b8b968be8d1304a7a665ca66b318a194c3a42$0.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$2$1abb078c55fe377230640da19e7b8b968be8d1304a7a665ca66b318a194c3a42$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda5 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda5:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$8e27fa35cbdecdcb00af4f151d1591f2134d118462d8fa305a025639d1cbe730$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$8e27fa35cbdecdcb00af4f151d1591f2134d118462d8fa305a025639d1cbe730$0.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$8e27fa35cbdecdcb00af4f151d1591f2134d118462d8fa305a025639d1cbe730$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda6 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda6:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$644dd75e91c21a7ba6c3933edf75a30ec8f5a473148cb09129c803fe91a86bf8$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$644dd75e91c21a7ba6c3933edf75a30ec8f5a473148cb09129c803fe91a86bf8$0.<init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$644dd75e91c21a7ba6c3933edf75a30ec8f5a473148cb09129c803fe91a86bf8$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda7 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda7:
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$5caa22706156bb0b2b37920999a13ed40fe8e30548ed802832aed7fc8872b2fb$0.f$0 -> f$0
    int com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$5caa22706156bb0b2b37920999a13ed40fe8e30548ed802832aed7fc8872b2fb$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$5caa22706156bb0b2b37920999a13ed40fe8e30548ed802832aed7fc8872b2fb$0.<init>(com.android.services.telephony.rcs.SipTransportController,int) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$1$5caa22706156bb0b2b37920999a13ed40fe8e30548ed802832aed7fc8872b2fb$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda8 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda8:
    android.telephony.ims.aidl.ISipDelegateConnectionStateCallback com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bb396c212d617ec886a5fd1e5a89898421acb1d505fd332b3fd7cdf75c6f54ec$0.f$4 -> f$4
    android.telephony.ims.DelegateRequest com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bb396c212d617ec886a5fd1e5a89898421acb1d505fd332b3fd7cdf75c6f54ec$0.f$2 -> f$2
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bb396c212d617ec886a5fd1e5a89898421acb1d505fd332b3fd7cdf75c6f54ec$0.f$0 -> f$0
    int com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bb396c212d617ec886a5fd1e5a89898421acb1d505fd332b3fd7cdf75c6f54ec$0.f$1 -> f$1
    java.lang.String com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bb396c212d617ec886a5fd1e5a89898421acb1d505fd332b3fd7cdf75c6f54ec$0.f$3 -> f$3
    java.util.concurrent.CompletableFuture com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bb396c212d617ec886a5fd1e5a89898421acb1d505fd332b3fd7cdf75c6f54ec$0.f$6 -> f$6
    android.telephony.ims.aidl.ISipDelegateMessageCallback com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bb396c212d617ec886a5fd1e5a89898421acb1d505fd332b3fd7cdf75c6f54ec$0.f$5 -> f$5
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bb396c212d617ec886a5fd1e5a89898421acb1d505fd332b3fd7cdf75c6f54ec$0.<init>(com.android.services.telephony.rcs.SipTransportController,int,android.telephony.ims.DelegateRequest,java.lang.String,android.telephony.ims.aidl.ISipDelegateConnectionStateCallback,android.telephony.ims.aidl.ISipDelegateMessageCallback,java.util.concurrent.CompletableFuture) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$bb396c212d617ec886a5fd1e5a89898421acb1d505fd332b3fd7cdf75c6f54ec$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda9 -> com.android.services.telephony.rcs.SipTransportController$$ExternalSyntheticLambda9:
    android.telephony.ims.aidl.ISipDelegate com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$1a783a229e678765f2b7419c1b8754c131c05726afd6b809b9699dd67f82696e$0.f$2 -> f$2
    int com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$1a783a229e678765f2b7419c1b8754c131c05726afd6b809b9699dd67f82696e$0.f$3 -> f$3
    com.android.services.telephony.rcs.SipTransportController com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$1a783a229e678765f2b7419c1b8754c131c05726afd6b809b9699dd67f82696e$0.f$0 -> f$0
    int com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$1a783a229e678765f2b7419c1b8754c131c05726afd6b809b9699dd67f82696e$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$1a783a229e678765f2b7419c1b8754c131c05726afd6b809b9699dd67f82696e$0.<init>(com.android.services.telephony.rcs.SipTransportController,int,android.telephony.ims.aidl.ISipDelegate,int) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$$InternalSyntheticLambda$0$1a783a229e678765f2b7419c1b8754c131c05726afd6b809b9699dd67f82696e$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$DestroyRequest -> com.android.services.telephony.rcs.SipTransportController$DestroyRequest:
    211:213:void <init>(com.android.services.telephony.rcs.SipDelegateController,int) -> <init>
    220:224:boolean equals(java.lang.Object) -> equals
    231:231:int hashCode() -> hashCode
    236:236:java.lang.String toString() -> toString
com.android.services.telephony.rcs.SipTransportController$RoleManagerAdapterImpl -> com.android.services.telephony.rcs.SipTransportController$RoleManagerAdapterImpl:
    149:149:void <init>(android.content.Context,com.android.services.telephony.rcs.SipTransportController$1) -> <init>
    153:154:void <init>(android.content.Context) -> <init>
    165:165:void addOnRoleHoldersChangedListenerAsUser(java.util.concurrent.Executor,android.app.role.OnRoleHoldersChangedListener,android.os.UserHandle) -> addOnRoleHoldersChangedListenerAsUser
    159:159:java.util.List getRoleHolders(java.lang.String) -> getRoleHolders
    171:171:void removeOnRoleHoldersChangedListenerAsUser(android.app.role.OnRoleHoldersChangedListener,android.os.UserHandle) -> removeOnRoleHoldersChangedListenerAsUser
com.android.services.telephony.rcs.SipTransportController$TimerAdapterImpl -> com.android.services.telephony.rcs.SipTransportController$TimerAdapterImpl:
    136:136:void <init>() -> <init>
    136:136:void <init>(com.android.services.telephony.rcs.SipTransportController$1) -> <init>
com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders -> com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders:
    179:179:void <init>(com.android.services.telephony.rcs.SipTransportController) -> <init>
    179:179:void <init>(com.android.services.telephony.rcs.SipTransportController,com.android.services.telephony.rcs.SipTransportController$1) -> <init>
    192:193:void lambda$onCallbackDied$0(com.android.services.telephony.rcs.SipDelegateController) -> lambda$onCallbackDied$0
    183:196:void lambda$onCallbackDied$1(java.lang.Object) -> lambda$onCallbackDied$1
    179:179:void onCallbackDied(android.os.IInterface,java.lang.Object) -> onCallbackDied
    182:182:void onCallbackDied(android.telephony.ims.aidl.ISipDelegateMessageCallback,java.lang.Object) -> onCallbackDied
com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$ExternalSyntheticLambda0:
    com.android.services.telephony.rcs.SipDelegateController com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$InternalSyntheticLambda$2$2eb0bb2d9deb84557fb90c4d14a8dd9a79cae9797b5479b76bce251ecd7b284a$0.f$1 -> f$1
    com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$InternalSyntheticLambda$2$2eb0bb2d9deb84557fb90c4d14a8dd9a79cae9797b5479b76bce251ecd7b284a$0.f$0 -> f$0
    void com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$InternalSyntheticLambda$2$2eb0bb2d9deb84557fb90c4d14a8dd9a79cae9797b5479b76bce251ecd7b284a$0.<init>(com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders,com.android.services.telephony.rcs.SipDelegateController) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$InternalSyntheticLambda$2$2eb0bb2d9deb84557fb90c4d14a8dd9a79cae9797b5479b76bce251ecd7b284a$0.run() -> run
com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$ExternalSyntheticLambda1:
    com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$InternalSyntheticLambda$1$d20f54330eac3dc100fb0ecc09a2821e5665bb5a65cc43636a6954f4296e18f0$0.f$0 -> f$0
    java.lang.Object com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$InternalSyntheticLambda$1$d20f54330eac3dc100fb0ecc09a2821e5665bb5a65cc43636a6954f4296e18f0$0.f$1 -> f$1
    void com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$InternalSyntheticLambda$1$d20f54330eac3dc100fb0ecc09a2821e5665bb5a65cc43636a6954f4296e18f0$0.<init>(com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders,java.lang.Object) -> <init>
    void com.android.services.telephony.rcs.SipTransportController$TrackedAppBinders$$InternalSyntheticLambda$1$d20f54330eac3dc100fb0ecc09a2821e5665bb5a65cc43636a6954f4296e18f0$0.run() -> run
com.android.services.telephony.rcs.TelephonyRcsService -> com.android.services.telephony.rcs.TelephonyRcsService:
    103:103:void <clinit>() -> <clinit>
    73:167:void <init>(android.content.Context,int) -> <init>
    73:178:void <init>(android.content.Context,int,com.android.services.telephony.rcs.TelephonyRcsService$ResourceProxy) -> <init>
    47:47:void access$000(com.android.services.telephony.rcs.TelephonyRcsService,int,int) -> access$000
    286:288:com.android.services.telephony.rcs.RcsFeatureController constructFeatureController(int) -> constructFeatureController
    333:339:boolean doesSubscriptionSupportPresence(int) -> doesSubscriptionSupportPresence
    345:349:boolean doesSubscriptionSupportSingleRegistration(int) -> doesSubscriptionSupportSingleRegistration
    370:382:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    185:187:com.android.services.telephony.rcs.RcsFeatureController getFeatureController(int) -> getFeatureController
    354:361:int getSubscriptionFromSlot(int) -> getSubscriptionFromSlot
    195:199:void initialize() -> initialize
    322:322:boolean isDeviceUceEnabled() -> isDeviceUceEnabled
    144:152:boolean lambda$new$1(android.os.Message) -> lambda$new$1
    104:104:boolean lambda$static$0(android.content.Context) -> lambda$static$0
    252:282:void onCarrierConfigChangedForSlot(int,int) -> onCarrierConfigChangedForSlot
    329:329:void setDeviceUceEnabled(boolean) -> setDeviceUceEnabled
    205:205:void setFeatureFactory(com.android.services.telephony.rcs.TelephonyRcsService$FeatureFactory) -> setFeatureFactory
    214:242:void updateFeatureControllerSize(int) -> updateFeatureControllerSize
    293:315:void updateSupportedFeatures(com.android.services.telephony.rcs.RcsFeatureController,int,int) -> updateSupportedFeatures
com.android.services.telephony.rcs.TelephonyRcsService$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.TelephonyRcsService$$ExternalSyntheticLambda1:
    com.android.services.telephony.rcs.TelephonyRcsService$$InternalSyntheticLambda$0$168b3fc35c196d025bbd26a1c47aa2c9301d7fd955603b51946209c2deb4b3a2$0 com.android.services.telephony.rcs.TelephonyRcsService$$InternalSyntheticLambda$0$168b3fc35c196d025bbd26a1c47aa2c9301d7fd955603b51946209c2deb4b3a2$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.rcs.TelephonyRcsService$$InternalSyntheticLambda$0$168b3fc35c196d025bbd26a1c47aa2c9301d7fd955603b51946209c2deb4b3a2$0.<clinit>() -> <clinit>
    void com.android.services.telephony.rcs.TelephonyRcsService$$InternalSyntheticLambda$0$168b3fc35c196d025bbd26a1c47aa2c9301d7fd955603b51946209c2deb4b3a2$0.<init>() -> <init>
    boolean com.android.services.telephony.rcs.TelephonyRcsService$$InternalSyntheticLambda$0$168b3fc35c196d025bbd26a1c47aa2c9301d7fd955603b51946209c2deb4b3a2$0.getDeviceUceEnabled(android.content.Context) -> getDeviceUceEnabled
com.android.services.telephony.rcs.TelephonyRcsService$1 -> com.android.services.telephony.rcs.TelephonyRcsService$1:
    73:73:void <init>(com.android.services.telephony.rcs.TelephonyRcsService) -> <init>
    76:76:com.android.services.telephony.rcs.RcsFeatureController createController(android.content.Context,int,int) -> createController
    88:88:com.android.services.telephony.rcs.SipTransportController createSipTransportController(android.content.Context,int,int) -> createSipTransportController
    82:82:com.android.services.telephony.rcs.UceControllerManager createUceControllerManager(android.content.Context,int,int) -> createUceControllerManager
com.android.services.telephony.rcs.TelephonyRcsService$2 -> com.android.services.telephony.rcs.TelephonyRcsService$2:
    123:123:void <init>(com.android.services.telephony.rcs.TelephonyRcsService) -> <init>
    129:138:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.services.telephony.rcs.TransportSipMessageValidator -> com.android.services.telephony.rcs.TransportSipMessageValidator:
    138:166:void <init>(int,java.util.concurrent.ScheduledExecutorService) -> <init>
    138:181:void <init>(int,java.util.concurrent.ScheduledExecutorService,com.android.services.telephony.rcs.SipSessionTracker,com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator,com.android.services.telephony.rcs.validator.IncomingTransportStateValidator,com.android.internal.telephony.metrics.RcsStats) -> <init>
    68:68:void access$100(com.android.services.telephony.rcs.TransportSipMessageValidator,java.util.Set) -> access$100
    407:409:void acknowledgePendingMessage(java.lang.String) -> acknowledgePendingMessage
    530:537:boolean cancelClosingTimeoutAndSendComplete(java.util.Set) -> cancelClosingTimeoutAndSendComplete
    460:464:void cancelPendingRegCleanupTask() -> cancelPendingRegCleanupTask
    518:520:void cleanupAndNotifyRegistrationAppliedConsumer(java.util.Set) -> cleanupAndNotifyRegistrationAppliedConsumer
    347:356:java.util.Set closeSessions(int) -> closeSessions
    302:334:void closeSessionsGracefully(java.util.function.Consumer,int,int) -> closeSessionsGracefully
    547:550:void closeSessionsInternal(int) -> closeSessionsInternal
    423:434:void dump(java.io.PrintWriter) -> dump
    554:555:java.util.Set getTrackedSipSessionCallIds() -> getTrackedSipSessionCallIds
    312:313:void lambda$closeSessionsGracefully$0(java.util.function.Consumer,java.util.Set) -> lambda$closeSessionsGracefully$0
    581:582:void logi(java.lang.String) -> logi
    586:587:void logw(java.lang.String) -> logw
    417:418:void notifyPendingMessageFailed(java.lang.String) -> notifyPendingMessageFailed
    441:452:void onCallIdsChanged() -> onCallIdsChanged
    248:252:void onConfigurationChanged(android.telephony.ims.SipDelegateConfiguration) -> onConfigurationChanged
    233:237:void onImsConfigurationChanged(android.telephony.ims.SipDelegateImsConfiguration) -> onImsConfigurationChanged
    204:221:void onRegistrationStateChanged(java.util.function.Consumer,android.telephony.ims.DelegateRegistrationState) -> onRegistrationStateChanged
    278:279:void onSipSessionCleanup(java.lang.String) -> onSipSessionCleanup
    265:270:void onTransportOpened(java.util.Set,java.util.Set) -> onTransportOpened
    560:576:void updateForMetrics(int,android.telephony.ims.SipMessage,com.android.services.telephony.rcs.validator.ValidationResult) -> updateForMetrics
    479:511:void updatePendingRegCleanupTask(java.util.Set) -> updatePendingRegCleanupTask
    391:397:com.android.services.telephony.rcs.validator.ValidationResult verifyIncomingMessage(android.telephony.ims.SipMessage) -> verifyIncomingMessage
    368:380:com.android.services.telephony.rcs.validator.ValidationResult verifyOutgoingMessage(android.telephony.ims.SipMessage,long) -> verifyOutgoingMessage
com.android.services.telephony.rcs.TransportSipMessageValidator$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.TransportSipMessageValidator$$ExternalSyntheticLambda0:
    java.util.function.Consumer com.android.services.telephony.rcs.TransportSipMessageValidator$$InternalSyntheticLambda$6$28cd127f95dcf3d96b0fed649b72cd0bca7d7ef1726516f36b91c2aa5d3b1199$0.f$1 -> f$1
    com.android.services.telephony.rcs.TransportSipMessageValidator com.android.services.telephony.rcs.TransportSipMessageValidator$$InternalSyntheticLambda$6$28cd127f95dcf3d96b0fed649b72cd0bca7d7ef1726516f36b91c2aa5d3b1199$0.f$0 -> f$0
    void com.android.services.telephony.rcs.TransportSipMessageValidator$$InternalSyntheticLambda$6$28cd127f95dcf3d96b0fed649b72cd0bca7d7ef1726516f36b91c2aa5d3b1199$0.<init>(com.android.services.telephony.rcs.TransportSipMessageValidator,java.util.function.Consumer) -> <init>
    void com.android.services.telephony.rcs.TransportSipMessageValidator$$InternalSyntheticLambda$6$28cd127f95dcf3d96b0fed649b72cd0bca7d7ef1726516f36b91c2aa5d3b1199$0.accept(java.lang.Object) -> accept
com.android.services.telephony.rcs.TransportSipMessageValidator$1 -> com.android.services.telephony.rcs.TransportSipMessageValidator$1:
    328:328:void <init>(com.android.services.telephony.rcs.TransportSipMessageValidator,int) -> <init>
    331:331:void run() -> run
com.android.services.telephony.rcs.TransportSipMessageValidator$2 -> com.android.services.telephony.rcs.TransportSipMessageValidator$2:
    504:504:void <init>(com.android.services.telephony.rcs.TransportSipMessageValidator,java.util.Set,java.util.Set) -> <init>
    507:507:void run() -> run
com.android.services.telephony.rcs.TransportSipMessageValidator$PendingRegCleanupTask -> com.android.services.telephony.rcs.TransportSipMessageValidator$PendingRegCleanupTask:
    130:132:void <init>(java.util.Set,java.util.Set) -> <init>
com.android.services.telephony.rcs.TransportSipMessageValidator$PendingTask -> com.android.services.telephony.rcs.TransportSipMessageValidator$PendingTask:
    105:105:void <init>() -> <init>
    105:105:void <init>(com.android.services.telephony.rcs.TransportSipMessageValidator$1) -> <init>
    118:119:void cancel() -> cancel
    114:114:boolean isDone() -> isDone
    110:110:void scheduleDelayed(java.util.concurrent.ScheduledExecutorService,int) -> scheduleDelayed
com.android.services.telephony.rcs.UceControllerManager -> com.android.services.telephony.rcs.UceControllerManager:
    60:65:void <init>(android.content.Context,int,int) -> <init>
    73:77:void <init>(android.content.Context,int,java.util.concurrent.ExecutorService,com.android.ims.rcs.uce.UceController) -> <init>
    232:243:android.telephony.ims.RcsContactUceCapability addUceRegistrationOverride(java.util.Set) -> addUceRegistrationOverride
    455:456:boolean checkUceControllerState() -> checkUceControllerState
    275:286:android.telephony.ims.RcsContactUceCapability clearUceRegistrationOverride() -> clearUceRegistrationOverride
    474:482:void dump(java.io.PrintWriter) -> dump
    318:329:java.lang.String getLastPidfXml() -> getLastPidfXml
    296:307:android.telephony.ims.RcsContactUceCapability getLatestRcsContactUceCapability() -> getLatestRcsContactUceCapability
    469:469:com.android.ims.rcs.uce.UceController getUceController() -> getUceController
    210:221:int getUcePublishState() -> getUcePublishState
    436:449:void initUceController(int) -> initUceController
    233:234:android.telephony.ims.RcsContactUceCapability lambda$addUceRegistrationOverride$8(java.util.Set) -> lambda$addUceRegistrationOverride$8
    276:277:android.telephony.ims.RcsContactUceCapability lambda$clearUceRegistrationOverride$10() -> lambda$clearUceRegistrationOverride$10
    319:320:java.lang.String lambda$getLastPidfXml$12() -> lambda$getLastPidfXml$12
    297:298:android.telephony.ims.RcsContactUceCapability lambda$getLatestRcsContactUceCapability$11() -> lambda$getLatestRcsContactUceCapability$11
    211:212:java.lang.Integer lambda$getUcePublishState$7() -> lambda$getUcePublishState$7
    123:132:void lambda$onAssociatedSubscriptionUpdated$3(int) -> lambda$onAssociatedSubscriptionUpdated$3
    144:148:void lambda$onCarrierConfigChanged$4() -> lambda$onCarrierConfigChanged$4
    107:109:void lambda$onDestroy$2() -> lambda$onDestroy$2
    83:87:void lambda$onRcsConnected$0(com.android.ims.RcsFeatureManager) -> lambda$onRcsConnected$0
    95:99:void lambda$onRcsDisconnected$1() -> lambda$onRcsDisconnected$1
    395:397:java.lang.Boolean lambda$registerPublishStateCallback$15(android.telephony.ims.aidl.IRcsUcePublishStateCallback) -> lambda$registerPublishStateCallback$15
    255:256:android.telephony.ims.RcsContactUceCapability lambda$removeUceRegistrationOverride$9(java.util.Set) -> lambda$removeUceRegistrationOverride$9
    341:346:java.lang.Boolean lambda$removeUceRequestDisallowedStatus$13() -> lambda$removeUceRequestDisallowedStatus$13
    163:165:java.lang.Boolean lambda$requestCapabilities$5(java.util.List,android.telephony.ims.aidl.IRcsUceControllerCallback) -> lambda$requestCapabilities$5
    188:190:java.lang.Boolean lambda$requestNetworkAvailability$6(android.net.Uri,android.telephony.ims.aidl.IRcsUceControllerCallback) -> lambda$requestNetworkAvailability$6
    368:373:java.lang.Boolean lambda$setCapabilitiesRequestTimeout$14(long) -> lambda$setCapabilitiesRequestTimeout$14
    416:419:java.lang.Boolean lambda$unregisterPublishStateCallback$16(android.telephony.ims.aidl.IRcsUcePublishStateCallback) -> lambda$unregisterPublishStateCallback$16
    122:122:void onAssociatedSubscriptionUpdated(int) -> onAssociatedSubscriptionUpdated
    143:143:void onCarrierConfigChanged() -> onCarrierConfigChanged
    106:113:void onDestroy() -> onDestroy
    82:82:void onRcsConnected(com.android.ims.RcsFeatureManager) -> onRcsConnected
    94:94:void onRcsDisconnected() -> onRcsDisconnected
    394:406:void registerPublishStateCallback(android.telephony.ims.aidl.IRcsUcePublishStateCallback) -> registerPublishStateCallback
    254:265:android.telephony.ims.RcsContactUceCapability removeUceRegistrationOverride(java.util.Set) -> removeUceRegistrationOverride
    340:355:boolean removeUceRequestDisallowedStatus() -> removeUceRequestDisallowedStatus
    162:174:void requestCapabilities(java.util.List,android.telephony.ims.aidl.IRcsUceControllerCallback) -> requestCapabilities
    187:199:void requestNetworkAvailability(android.net.Uri,android.telephony.ims.aidl.IRcsUceControllerCallback) -> requestNetworkAvailability
    367:382:boolean setCapabilitiesRequestTimeout(long) -> setCapabilitiesRequestTimeout
    415:425:void unregisterPublishStateCallback(android.telephony.ims.aidl.IRcsUcePublishStateCallback) -> unregisterPublishStateCallback
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda0:
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$57f81824b5ea1cf9b624483f9abc49924e87fdd7190086cf93723eded08468c2$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$57f81824b5ea1cf9b624483f9abc49924e87fdd7190086cf93723eded08468c2$0.<init>(com.android.services.telephony.rcs.UceControllerManager) -> <init>
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$57f81824b5ea1cf9b624483f9abc49924e87fdd7190086cf93723eded08468c2$0.run() -> run
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda1:
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$4e68dfa7ef975d29d9b793d6fce1a67dd4bec5aff33f5dbb9958fefaa64b6e1a$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$4e68dfa7ef975d29d9b793d6fce1a67dd4bec5aff33f5dbb9958fefaa64b6e1a$0.<init>(com.android.services.telephony.rcs.UceControllerManager) -> <init>
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$4e68dfa7ef975d29d9b793d6fce1a67dd4bec5aff33f5dbb9958fefaa64b6e1a$0.run() -> run
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda10 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda10:
    long com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$02599117bf8ff5ba22be673b14091ae4db5dc7cef6dc09bcffe7ba04aae43e8a$0.f$1 -> f$1
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$02599117bf8ff5ba22be673b14091ae4db5dc7cef6dc09bcffe7ba04aae43e8a$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$02599117bf8ff5ba22be673b14091ae4db5dc7cef6dc09bcffe7ba04aae43e8a$0.<init>(com.android.services.telephony.rcs.UceControllerManager,long) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$02599117bf8ff5ba22be673b14091ae4db5dc7cef6dc09bcffe7ba04aae43e8a$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda11 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda11:
    android.telephony.ims.aidl.IRcsUceControllerCallback com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$d4755d29cb5671dc5b491cb4229db4a35ba1fc02d61af73d19c3d0e8661d275f$0.f$2 -> f$2
    android.net.Uri com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$d4755d29cb5671dc5b491cb4229db4a35ba1fc02d61af73d19c3d0e8661d275f$0.f$1 -> f$1
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$d4755d29cb5671dc5b491cb4229db4a35ba1fc02d61af73d19c3d0e8661d275f$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$d4755d29cb5671dc5b491cb4229db4a35ba1fc02d61af73d19c3d0e8661d275f$0.<init>(com.android.services.telephony.rcs.UceControllerManager,android.net.Uri,android.telephony.ims.aidl.IRcsUceControllerCallback) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$d4755d29cb5671dc5b491cb4229db4a35ba1fc02d61af73d19c3d0e8661d275f$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda12 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda12:
    android.telephony.ims.aidl.IRcsUcePublishStateCallback com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$235022baa9137665a082e8a8d6430fb1a6aea7a828c91bdbe42d54826da94e0e$0.f$1 -> f$1
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$235022baa9137665a082e8a8d6430fb1a6aea7a828c91bdbe42d54826da94e0e$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$235022baa9137665a082e8a8d6430fb1a6aea7a828c91bdbe42d54826da94e0e$0.<init>(com.android.services.telephony.rcs.UceControllerManager,android.telephony.ims.aidl.IRcsUcePublishStateCallback) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$235022baa9137665a082e8a8d6430fb1a6aea7a828c91bdbe42d54826da94e0e$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda13 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda13:
    android.telephony.ims.aidl.IRcsUcePublishStateCallback com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$688ae152ad5cd43b7977f2f9e81930b3a8c0a89b9be74c6b1b6033515e856eb2$0.f$1 -> f$1
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$688ae152ad5cd43b7977f2f9e81930b3a8c0a89b9be74c6b1b6033515e856eb2$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$688ae152ad5cd43b7977f2f9e81930b3a8c0a89b9be74c6b1b6033515e856eb2$0.<init>(com.android.services.telephony.rcs.UceControllerManager,android.telephony.ims.aidl.IRcsUcePublishStateCallback) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$688ae152ad5cd43b7977f2f9e81930b3a8c0a89b9be74c6b1b6033515e856eb2$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda14 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda14:
    java.util.List com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$fadbc9f4aeeb57ddf12f7bad345918c02b25d4ce7d3c6b65fbd72bd6022a4844$0.f$1 -> f$1
    android.telephony.ims.aidl.IRcsUceControllerCallback com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$fadbc9f4aeeb57ddf12f7bad345918c02b25d4ce7d3c6b65fbd72bd6022a4844$0.f$2 -> f$2
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$fadbc9f4aeeb57ddf12f7bad345918c02b25d4ce7d3c6b65fbd72bd6022a4844$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$fadbc9f4aeeb57ddf12f7bad345918c02b25d4ce7d3c6b65fbd72bd6022a4844$0.<init>(com.android.services.telephony.rcs.UceControllerManager,java.util.List,android.telephony.ims.aidl.IRcsUceControllerCallback) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$fadbc9f4aeeb57ddf12f7bad345918c02b25d4ce7d3c6b65fbd72bd6022a4844$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda15 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda15:
    java.util.Set com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$44978d7ed968690ea7670bf74e623dcade12adfbcf97a9ae3b71c58cac1f98f2$0.f$1 -> f$1
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$44978d7ed968690ea7670bf74e623dcade12adfbcf97a9ae3b71c58cac1f98f2$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$44978d7ed968690ea7670bf74e623dcade12adfbcf97a9ae3b71c58cac1f98f2$0.<init>(com.android.services.telephony.rcs.UceControllerManager,java.util.Set) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$44978d7ed968690ea7670bf74e623dcade12adfbcf97a9ae3b71c58cac1f98f2$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda16 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda16:
    java.util.Set com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$57bca6d4e79540981c43aee7724b12dcd9cf9412e8d3235fb5dbb04e8d5744b7$0.f$1 -> f$1
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$57bca6d4e79540981c43aee7724b12dcd9cf9412e8d3235fb5dbb04e8d5744b7$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$57bca6d4e79540981c43aee7724b12dcd9cf9412e8d3235fb5dbb04e8d5744b7$0.<init>(com.android.services.telephony.rcs.UceControllerManager,java.util.Set) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$57bca6d4e79540981c43aee7724b12dcd9cf9412e8d3235fb5dbb04e8d5744b7$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda2:
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$1$1fcafd2408319d37da9d7c03a17843df080f687cf47ae607536253ab44be7145$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$1$1fcafd2408319d37da9d7c03a17843df080f687cf47ae607536253ab44be7145$0.<init>(com.android.services.telephony.rcs.UceControllerManager) -> <init>
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$1$1fcafd2408319d37da9d7c03a17843df080f687cf47ae607536253ab44be7145$0.run() -> run
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda3 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda3:
    int com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$1$d6803dfa806cc065bf1de20cb1c6c368c6a2e30f896dd53701bc0b6f672eee0c$0.f$1 -> f$1
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$1$d6803dfa806cc065bf1de20cb1c6c368c6a2e30f896dd53701bc0b6f672eee0c$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$1$d6803dfa806cc065bf1de20cb1c6c368c6a2e30f896dd53701bc0b6f672eee0c$0.<init>(com.android.services.telephony.rcs.UceControllerManager,int) -> <init>
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$1$d6803dfa806cc065bf1de20cb1c6c368c6a2e30f896dd53701bc0b6f672eee0c$0.run() -> run
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda4 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda4:
    com.android.ims.RcsFeatureManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$e4fa00ecb5506d787cbdae2ad913271ab4bd2d58194d0b9ace81f78e1a7750e7$0.f$1 -> f$1
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$e4fa00ecb5506d787cbdae2ad913271ab4bd2d58194d0b9ace81f78e1a7750e7$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$e4fa00ecb5506d787cbdae2ad913271ab4bd2d58194d0b9ace81f78e1a7750e7$0.<init>(com.android.services.telephony.rcs.UceControllerManager,com.android.ims.RcsFeatureManager) -> <init>
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$e4fa00ecb5506d787cbdae2ad913271ab4bd2d58194d0b9ace81f78e1a7750e7$0.run() -> run
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda5 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda5:
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$75750d046cba9ba30f2ef866ddd912bdc73d4403d49a53472a8dd4660a7eafdf$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$75750d046cba9ba30f2ef866ddd912bdc73d4403d49a53472a8dd4660a7eafdf$0.<init>(com.android.services.telephony.rcs.UceControllerManager) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$75750d046cba9ba30f2ef866ddd912bdc73d4403d49a53472a8dd4660a7eafdf$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda6 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda6:
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$d628f0e4b0ceb5232077db8884ac35b7619219a73dc3b9365fc1d8784881526d$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$d628f0e4b0ceb5232077db8884ac35b7619219a73dc3b9365fc1d8784881526d$0.<init>(com.android.services.telephony.rcs.UceControllerManager) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$d628f0e4b0ceb5232077db8884ac35b7619219a73dc3b9365fc1d8784881526d$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda7 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda7:
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$e40bcab71e1ead1fd9f43da0e5ccb2704a5be83911ecbc441b682409dd9ea462$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$e40bcab71e1ead1fd9f43da0e5ccb2704a5be83911ecbc441b682409dd9ea462$0.<init>(com.android.services.telephony.rcs.UceControllerManager) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$e40bcab71e1ead1fd9f43da0e5ccb2704a5be83911ecbc441b682409dd9ea462$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda8 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda8:
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$ff9c45985be00dc47281adc8cf98e04df4d2b4b899bb3669ffe46969d183ba71$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$ff9c45985be00dc47281adc8cf98e04df4d2b4b899bb3669ffe46969d183ba71$0.<init>(com.android.services.telephony.rcs.UceControllerManager) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$ff9c45985be00dc47281adc8cf98e04df4d2b4b899bb3669ffe46969d183ba71$0.call() -> call
com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda9 -> com.android.services.telephony.rcs.UceControllerManager$$ExternalSyntheticLambda9:
    com.android.services.telephony.rcs.UceControllerManager com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$a59fb939dcb42dcfc427df02fd27e782a3977cd79229cdde84dba5693e151372$0.f$0 -> f$0
    void com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$a59fb939dcb42dcfc427df02fd27e782a3977cd79229cdde84dba5693e151372$0.<init>(com.android.services.telephony.rcs.UceControllerManager) -> <init>
    java.lang.Object com.android.services.telephony.rcs.UceControllerManager$$InternalSyntheticLambda$0$a59fb939dcb42dcfc427df02fd27e782a3977cd79229cdde84dba5693e151372$0.call() -> call
com.android.services.telephony.rcs.validator.IncomingTransportStateValidator -> com.android.services.telephony.rcs.validator.IncomingTransportStateValidator:
    39:42:void <clinit>() -> <clinit>
    27:46:void <init>() -> <init>
    61:62:void close(int) -> close
    52:53:void open() -> open
    76:79:java.lang.String toString() -> toString
    67:71:com.android.services.telephony.rcs.validator.ValidationResult validate(android.telephony.ims.SipMessage) -> validate
com.android.services.telephony.rcs.validator.MalformedSipMessageValidator -> com.android.services.telephony.rcs.validator.MalformedSipMessageValidator:
    29:29:void <init>() -> <init>
    34:40:com.android.services.telephony.rcs.validator.ValidationResult validate(android.telephony.ims.SipMessage) -> validate
com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator -> com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator:
    57:61:void <clinit>() -> <clinit>
    65:72:void <init>(com.android.services.telephony.rcs.SipSessionTracker) -> <init>
    117:119:void close(int) -> close
    138:140:java.util.Set getAllowedCallIds() -> getAllowedCallIds
    190:190:boolean lambda$validateMessageFeatureTag$1(java.lang.String) -> lambda$validateMessageFeatureTag$1
    192:192:boolean lambda$validateMessageFeatureTag$2(java.lang.String) -> lambda$validateMessageFeatureTag$2
    194:194:boolean lambda$validateMessageFeatureTag$3(java.lang.String) -> lambda$validateMessageFeatureTag$3
    169:169:boolean lambda$verifyOpenMessage$0(java.lang.String[],java.lang.String) -> lambda$verifyOpenMessage$0
    80:87:void open(java.util.Set,java.util.Set) -> open
    108:109:void restrict(int) -> restrict
    98:99:void restrictFeatureTags(java.util.Set) -> restrictFeatureTags
    145:148:java.lang.String toString() -> toString
    124:133:com.android.services.telephony.rcs.validator.ValidationResult validate(android.telephony.ims.SipMessage) -> validate
    184:215:com.android.services.telephony.rcs.validator.ValidationResult validateMessageFeatureTag(android.telephony.ims.SipMessage) -> validateMessageFeatureTag
    154:176:com.android.services.telephony.rcs.validator.ValidationResult verifyOpenMessage(android.telephony.ims.SipMessage) -> verifyOpenMessage
    221:233:com.android.services.telephony.rcs.validator.ValidationResult verifyRestrictedMessage(android.telephony.ims.SipMessage) -> verifyRestrictedMessage
com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$ExternalSyntheticLambda2:
    com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$4$26abc6107f8628eea3982639c65da141640bc6d67fa5f5ba9c32b1a8d76dd51b$3.f$0 -> f$0
    void com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$4$26abc6107f8628eea3982639c65da141640bc6d67fa5f5ba9c32b1a8d76dd51b$3.<init>(com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator) -> <init>
    boolean com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$4$26abc6107f8628eea3982639c65da141640bc6d67fa5f5ba9c32b1a8d76dd51b$3.test(java.lang.Object) -> test
com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$ExternalSyntheticLambda3 -> com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$ExternalSyntheticLambda3:
    com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$4$26abc6107f8628eea3982639c65da141640bc6d67fa5f5ba9c32b1a8d76dd51b$4.f$0 -> f$0
    void com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$4$26abc6107f8628eea3982639c65da141640bc6d67fa5f5ba9c32b1a8d76dd51b$4.<init>(com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator) -> <init>
    boolean com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$4$26abc6107f8628eea3982639c65da141640bc6d67fa5f5ba9c32b1a8d76dd51b$4.test(java.lang.Object) -> test
com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$ExternalSyntheticLambda4 -> com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$ExternalSyntheticLambda4:
    com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$4$26abc6107f8628eea3982639c65da141640bc6d67fa5f5ba9c32b1a8d76dd51b$2.f$0 -> f$0
    void com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$4$26abc6107f8628eea3982639c65da141640bc6d67fa5f5ba9c32b1a8d76dd51b$2.<init>(com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator) -> <init>
    boolean com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$4$26abc6107f8628eea3982639c65da141640bc6d67fa5f5ba9c32b1a8d76dd51b$2.test(java.lang.Object) -> test
com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$ExternalSyntheticLambda5 -> com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$ExternalSyntheticLambda5:
    java.lang.String[] com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$3$7adc463e3f42145bff24860eb08ae38c27912eac93ded93e583f1b8352cd35ee$0.f$0 -> f$0
    void com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$3$7adc463e3f42145bff24860eb08ae38c27912eac93ded93e583f1b8352cd35ee$0.<init>(java.lang.String[]) -> <init>
    boolean com.android.services.telephony.rcs.validator.OutgoingTransportStateValidator$$InternalSyntheticLambda$3$7adc463e3f42145bff24860eb08ae38c27912eac93ded93e583f1b8352cd35ee$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.validator.RestrictedOutgoingSipRequestValidator -> com.android.services.telephony.rcs.validator.RestrictedOutgoingSipRequestValidator:
    36:36:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    50:50:boolean lambda$validate$0(java.lang.String[],java.lang.String) -> lambda$validate$0
    41:56:com.android.services.telephony.rcs.validator.ValidationResult validate(android.telephony.ims.SipMessage) -> validate
com.android.services.telephony.rcs.validator.RestrictedOutgoingSipRequestValidator$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.validator.RestrictedOutgoingSipRequestValidator$$ExternalSyntheticLambda0:
    java.lang.String[] com.android.services.telephony.rcs.validator.RestrictedOutgoingSipRequestValidator$$InternalSyntheticLambda$3$144791e4cc571bda0b23d5b827b22ab15b9e7dbc46b7c6d49993a9550ecf3830$0.f$0 -> f$0
    void com.android.services.telephony.rcs.validator.RestrictedOutgoingSipRequestValidator$$InternalSyntheticLambda$3$144791e4cc571bda0b23d5b827b22ab15b9e7dbc46b7c6d49993a9550ecf3830$0.<init>(java.lang.String[]) -> <init>
    boolean com.android.services.telephony.rcs.validator.RestrictedOutgoingSipRequestValidator$$InternalSyntheticLambda$3$144791e4cc571bda0b23d5b827b22ab15b9e7dbc46b7c6d49993a9550ecf3830$0.test(java.lang.Object) -> test
com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator -> com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator:
    37:37:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    62:62:java.lang.String lambda$validate$0(android.util.Pair) -> lambda$validate$0
    63:63:boolean lambda$validate$1(java.lang.String) -> lambda$validate$1
    67:67:java.lang.String lambda$validate$2(android.util.Pair) -> lambda$validate$2
    42:69:com.android.services.telephony.rcs.validator.ValidationResult validate(android.telephony.ims.SipMessage) -> validate
com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$ExternalSyntheticLambda0:
    com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$0 com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$0.<clinit>() -> <clinit>
    void com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$0.<init>() -> <init>
    java.lang.Object com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$0.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$ExternalSyntheticLambda1 -> com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$ExternalSyntheticLambda1:
    com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$2 com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$2.INSTANCE -> INSTANCE
    void com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$2.<clinit>() -> <clinit>
    void com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$2.<init>() -> <init>
    java.lang.Object com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$2.apply(java.lang.Object) -> apply
com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$ExternalSyntheticLambda2 -> com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$ExternalSyntheticLambda2:
    com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$1 com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$1.INSTANCE -> INSTANCE
    void com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$1.<clinit>() -> <clinit>
    void com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$1.<init>() -> <init>
    boolean com.android.services.telephony.rcs.validator.RestrictedOutgoingSubscribeValidator$$InternalSyntheticLambda$3$774023bd5e20d993c5c57d63573c4d8d85df8b2385311e8f5fd712418e0c829c$1.test(java.lang.Object) -> test
com.android.services.telephony.rcs.validator.SipMessageValidator -> com.android.services.telephony.rcs.validator.SipMessageValidator:
    41:41:com.android.services.telephony.rcs.validator.SipMessageValidator andThen(com.android.services.telephony.rcs.validator.SipMessageValidator) -> andThen
    42:44:com.android.services.telephony.rcs.validator.ValidationResult lambda$andThen$0(com.android.services.telephony.rcs.validator.SipMessageValidator,android.telephony.ims.SipMessage) -> lambda$andThen$0
com.android.services.telephony.rcs.validator.SipMessageValidator$$ExternalSyntheticLambda0 -> com.android.services.telephony.rcs.validator.SipMessageValidator$$ExternalSyntheticLambda0:
    com.android.services.telephony.rcs.validator.SipMessageValidator com.android.services.telephony.rcs.validator.SipMessageValidator$$InternalSyntheticLambda$3$3450b7dbf7d2901d9522af8702b49dc873658f44034ccdb6538b9a5ff969fb6e$0.f$1 -> f$1
    com.android.services.telephony.rcs.validator.SipMessageValidator com.android.services.telephony.rcs.validator.SipMessageValidator$$InternalSyntheticLambda$3$3450b7dbf7d2901d9522af8702b49dc873658f44034ccdb6538b9a5ff969fb6e$0.f$0 -> f$0
    void com.android.services.telephony.rcs.validator.SipMessageValidator$$InternalSyntheticLambda$3$3450b7dbf7d2901d9522af8702b49dc873658f44034ccdb6538b9a5ff969fb6e$0.<init>(com.android.services.telephony.rcs.validator.SipMessageValidator,com.android.services.telephony.rcs.validator.SipMessageValidator) -> <init>
    com.android.services.telephony.rcs.validator.ValidationResult com.android.services.telephony.rcs.validator.SipMessageValidator$$InternalSyntheticLambda$3$3450b7dbf7d2901d9522af8702b49dc873658f44034ccdb6538b9a5ff969fb6e$0.validate(android.telephony.ims.SipMessage) -> validate
com.android.services.telephony.rcs.validator.ValidationResult -> com.android.services.telephony.rcs.validator.ValidationResult:
    27:27:void <clinit>() -> <clinit>
    51:54:void <init>() -> <init>
    63:66:void <init>(int,java.lang.String) -> <init>
    71:82:java.lang.String toString() -> toString
com.android.services.telephony.sip.SipAccountRegistry -> com.android.services.telephony.sip.SipAccountRegistry:
    77:78:void <clinit>() -> <clinit>
    83:88:void <init>() -> <init>
    43:43:void access$000(com.android.services.telephony.sip.SipAccountRegistry,java.lang.String) -> access$000
    43:43:void access$100(com.android.services.telephony.sip.SipAccountRegistry,android.content.Context) -> access$100
    271:272:com.android.services.telephony.sip.SipAccountRegistry$AccountEntry getAccountEntry(java.lang.String) -> getAccountEntry
    91:91:com.android.services.telephony.sip.SipAccountRegistry getInstance() -> getInstance
    234:234:java.lang.String lambda$sendSipAccountsRemovedNotification$0(android.net.sip.SipProfile) -> lambda$sendSipAccountsRemovedNotification$0
    280:280:void log(java.lang.String) -> log
    156:159:void removeSipProfile(java.lang.String) -> removeSipProfile
    234:260:void sendSipAccountsRemovedNotification(android.content.Context,java.util.List) -> sendSipAccountsRemovedNotification
    98:100:void setup(android.content.Context) -> setup
    104:110:void setupNotificationChannel(android.content.Context) -> setupNotificationChannel
    214:229:void startSipProfiles(android.content.Context) -> startSipProfiles
    198:203:void startSipProfilesAsync(android.content.Context) -> startSipProfilesAsync
    145:145:void startSipService(android.content.Context,java.lang.String,boolean) -> startSipService
    175:184:void stopSipService(android.content.Context,java.lang.String) -> stopSipService
    121:131:void verifyAndPurgeInvalidPhoneAccounts(android.content.Context) -> verifyAndPurgeInvalidPhoneAccounts
com.android.services.telephony.sip.SipAccountRegistry$$ExternalSyntheticLambda0 -> com.android.services.telephony.sip.SipAccountRegistry$$ExternalSyntheticLambda0:
    com.android.services.telephony.sip.SipAccountRegistry$$InternalSyntheticLambda$0$ef461437e97960f48c5b38fe6e9893d59dcc7605a8970ee853439b3d34aadeaf$0 com.android.services.telephony.sip.SipAccountRegistry$$InternalSyntheticLambda$0$ef461437e97960f48c5b38fe6e9893d59dcc7605a8970ee853439b3d34aadeaf$0.INSTANCE -> INSTANCE
    void com.android.services.telephony.sip.SipAccountRegistry$$InternalSyntheticLambda$0$ef461437e97960f48c5b38fe6e9893d59dcc7605a8970ee853439b3d34aadeaf$0.<clinit>() -> <clinit>
    void com.android.services.telephony.sip.SipAccountRegistry$$InternalSyntheticLambda$0$ef461437e97960f48c5b38fe6e9893d59dcc7605a8970ee853439b3d34aadeaf$0.<init>() -> <init>
    java.lang.Object com.android.services.telephony.sip.SipAccountRegistry$$InternalSyntheticLambda$0$ef461437e97960f48c5b38fe6e9893d59dcc7605a8970ee853439b3d34aadeaf$0.apply(java.lang.Object) -> apply
com.android.services.telephony.sip.SipAccountRegistry$1 -> com.android.services.telephony.sip.SipAccountRegistry$1:
    198:198:void <init>(com.android.services.telephony.sip.SipAccountRegistry,android.content.Context) -> <init>
    201:201:void run() -> run
com.android.services.telephony.sip.SipAccountRegistry$AccountEntry -> com.android.services.telephony.sip.SipAccountRegistry$AccountEntry:
    52:52:android.net.sip.SipProfile getProfile() -> getProfile
    65:68:boolean stopSipService(android.net.sip.SipManager) -> stopSipService
com.android.services.telephony.sip.SipConnection -> com.android.services.telephony.sip.SipConnection:
    44:60:void <init>() -> <init>
    38:38:void access$000(com.android.services.telephony.sip.SipConnection,boolean) -> access$000
    281:281:int buildCallCapabilities() -> buildCallCapabilities
    355:359:void close() -> close
    351:351:android.net.Uri getAddressFromNumber(java.lang.String) -> getAddressFromNumber
    219:220:com.android.internal.telephony.Call getCall() -> getCall
    226:228:com.android.internal.telephony.sip.SipPhone getPhone() -> getPhone
    65:72:void initialize(com.android.internal.telephony.Connection) -> initialize
    234:236:boolean isValidRingingCall() -> isValidRingingCall
    363:363:void log(java.lang.String) -> log
    133:133:void onAbort() -> onAbort
    296:301:void onAddedToCallService() -> onAddedToCallService
    180:196:void onAnswer(int) -> onAnswer
    78:79:void onAudioStateChanged(android.telecom.AudioState) -> onAudioStateChanged
    108:114:void onDisconnect() -> onDisconnect
    140:152:void onHold() -> onHold
    91:92:void onPlayDtmfTone(char) -> onPlayDtmfTone
    204:208:void onReject() -> onReject
    122:126:void onSeparate() -> onSeparate
    99:100:void onStopDtmfTone() -> onStopDtmfTone
    160:172:void onUnhold() -> onUnhold
    331:336:void setTechnologyTypeExtra() -> setTechnologyTypeExtra
    309:324:void updateAddress() -> updateAddress
    288:290:void updateCallCapabilities(boolean) -> updateCallCapabilities
    240:275:void updateState(boolean) -> updateState
com.android.services.telephony.sip.SipConnection$1 -> com.android.services.telephony.sip.SipConnection$1:
    44:44:void <init>(com.android.services.telephony.sip.SipConnection) -> <init>
    47:49:void handleMessage(android.os.Message) -> handleMessage
com.android.services.telephony.sip.SipConnection$2 -> com.android.services.telephony.sip.SipConnection$2:
    248:248:void <clinit>() -> <clinit>
com.android.services.telephony.sip.SipConnectionService -> com.android.services.telephony.sip.SipConnectionService:
    47:47:void <init>() -> <init>
    47:47:com.android.internal.telephony.Connection access$000(com.android.services.telephony.sip.SipConnectionService,android.net.sip.SipProfile,android.telecom.ConnectionRequest) -> access$000
    47:47:com.android.services.telephony.sip.SipProfileDb access$100(com.android.services.telephony.sip.SipConnectionService) -> access$100
    47:47:android.os.Handler access$200(com.android.services.telephony.sip.SipConnectionService) -> access$200
    193:198:com.android.internal.telephony.Connection createConnectionForProfile(android.net.sip.SipProfile,android.telecom.ConnectionRequest) -> createConnectionForProfile
    252:252:com.android.internal.telephony.sip.SipPhone createPhoneForProfile(android.net.sip.SipProfile) -> createPhoneForProfile
    237:240:com.android.internal.telephony.sip.SipPhone findPhoneForProfile(android.net.sip.SipProfile) -> findPhoneForProfile
    210:232:void findProfile(java.lang.String,com.android.services.telephony.sip.SipConnectionService$IProfileFinderCallback) -> findProfile
    274:279:boolean isNetworkConnected() -> isNetworkConnected
    286:286:void log(java.lang.String) -> log
    60:62:void onCreate() -> onCreate
    146:186:android.telecom.Connection onCreateIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest) -> onCreateIncomingConnection
    71:114:android.telecom.Connection onCreateOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest) -> onCreateOutgoingConnection
    257:267:com.android.internal.telephony.Connection startCallWithPhone(com.android.internal.telephony.sip.SipPhone,android.telecom.ConnectionRequest) -> startCallWithPhone
com.android.services.telephony.sip.SipConnectionService$1 -> com.android.services.telephony.sip.SipConnectionService$1:
    114:114:void <init>(com.android.services.telephony.sip.SipConnectionService,com.android.services.telephony.sip.SipConnection,android.telecom.ConnectionRequest) -> <init>
    118:130:void onFound(android.net.sip.SipProfile) -> onFound
com.android.services.telephony.sip.SipConnectionService$2 -> com.android.services.telephony.sip.SipConnectionService$2:
    210:210:void <init>(com.android.services.telephony.sip.SipConnectionService,java.lang.String,com.android.services.telephony.sip.SipConnectionService$IProfileFinderCallback) -> <init>
    214:225:void run() -> run
com.android.services.telephony.sip.SipConnectionService$2$1 -> com.android.services.telephony.sip.SipConnectionService$2$1:
    225:225:void <init>(com.android.services.telephony.sip.SipConnectionService$2,android.net.sip.SipProfile) -> <init>
    228:228:void run() -> run
com.android.services.telephony.sip.SipEditor -> com.android.services.telephony.sip.SipEditor:
    47:47:void <init>() -> <init>
    47:47:java.lang.String access$000(java.lang.String) -> access$000
    47:47:java.lang.String access$100() -> access$100
    47:47:void access$200(com.android.services.telephony.sip.SipEditor,android.net.sip.SipProfile) -> access$200
    47:47:void access$300(com.android.services.telephony.sip.SipEditor,android.net.sip.SipProfile,boolean) -> access$300
    47:47:void access$400(java.lang.String) -> access$400
    47:47:void access$500(com.android.services.telephony.sip.SipEditor,java.lang.Throwable) -> access$500
    47:47:void access$600(com.android.services.telephony.sip.SipEditor,android.preference.Preference) -> access$600
    542:549:void checkIfDisplayNameSet() -> checkIfDisplayNameSet
    429:442:android.net.sip.SipProfile createSipProfile() -> createSipProfile
    299:300:void deleteAndUnregisterProfile(android.net.sip.SipProfile) -> deleteAndUnregisterProfile
    554:554:java.lang.String getDefaultDisplayName() -> getDefaultDisplayName
    474:477:com.android.services.telephony.sip.SipEditor$PreferenceKey getPreferenceKey(android.preference.Preference) -> getPreferenceKey
    424:425:java.lang.String getProfileName() -> getProfileName
    521:522:boolean isAlwaysSendKeepAlive() -> isAlwaysSendKeepAlive
    329:331:boolean isEditTextEmpty(com.android.services.telephony.sip.SipEditor$PreferenceKey) -> isEditTextEmpty
    484:516:void loadPreferencesFromProfile(android.net.sip.SipProfile) -> loadPreferencesFromProfile
    628:628:void log(java.lang.String) -> log
    187:211:void onCreate(android.os.Bundle) -> onCreate
    226:232:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    271:274:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    246:264:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    217:221:void onPause() -> onPause
    446:469:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    238:241:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    172:180:void onResume() -> onResume
    408:420:void replaceProfile(android.net.sip.SipProfile,android.net.sip.SipProfile) -> replaceProfile
    287:288:void saveAndRegisterProfile(android.net.sip.SipProfile,boolean) -> saveAndRegisterProfile
    558:560:java.lang.String scramble(java.lang.String) -> scramble
    304:308:void setRemovedProfileAndFinish() -> setRemovedProfileAndFinish
    531:535:void setupPreference(android.preference.Preference) -> setupPreference
    313:315:void showAlert(java.lang.Throwable) -> showAlert
    319:325:void showAlert(java.lang.String) -> showAlert
    337:399:void validateAndSetResult() -> validateAndSetResult
com.android.services.telephony.sip.SipEditor$1 -> com.android.services.telephony.sip.SipEditor$1:
    408:408:void <init>(com.android.services.telephony.sip.SipEditor,android.net.sip.SipProfile,android.net.sip.SipProfile) -> <init>
    411:417:void run() -> run
com.android.services.telephony.sip.SipEditor$2 -> com.android.services.telephony.sip.SipEditor$2:
    346:346:void <clinit>() -> <clinit>
com.android.services.telephony.sip.SipEditor$AdvancedSettings -> com.android.services.telephony.sip.SipEditor$AdvancedSettings:
    566:573:void <init>(com.android.services.telephony.sip.SipEditor) -> <init>
    608:612:void hide() -> hide
    577:590:void loadAdvancedPreferences() -> loadAdvancedPreferences
    618:621:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    595:599:void show() -> show
com.android.services.telephony.sip.SipEditor$AlertDialogFragment -> com.android.services.telephony.sip.SipEditor$AlertDialogFragment:
    75:75:void <init>() -> <init>
    85:88:com.android.services.telephony.sip.SipEditor$AlertDialogFragment newInstance(java.lang.String) -> newInstance
    94:101:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
com.android.services.telephony.sip.SipEditor$PreferenceKey -> com.android.services.telephony.sip.SipEditor$PreferenceKey:
    105:115:void <clinit>() -> <clinit>
    128:131:void <init>(java.lang.String,int,int,int,int) -> <init>
    135:140:java.lang.String getValue() -> getValue
    144:165:void setValue(java.lang.String) -> setValue
    105:105:com.android.services.telephony.sip.SipEditor$PreferenceKey valueOf(java.lang.String) -> valueOf
    105:105:com.android.services.telephony.sip.SipEditor$PreferenceKey[] values() -> values
com.android.services.telephony.sip.SipIncomingCallReceiver -> com.android.services.telephony.sip.SipIncomingCallReceiver:
    34:34:void <init>() -> <init>
    87:87:boolean isRunningInSystemUser() -> isRunningInSystemUser
    91:91:void log(java.lang.String) -> log
    40:58:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    68:81:void takeCall(android.content.Context,android.content.Intent) -> takeCall
com.android.services.telephony.sip.SipPreferences -> com.android.services.telephony.sip.SipPreferences:
    38:39:void <init>(android.content.Context) -> <init>
    79:79:void clearSharedPreferences() -> clearSharedPreferences
    67:70:boolean isReceivingCallsEnabled() -> isReceivingCallsEnabled
    85:85:void log(java.lang.String) -> log
com.android.services.telephony.sip.SipProfileDb -> com.android.services.telephony.sip.SipProfileDb:
    50:55:void <init>(android.content.Context) -> <init>
    60:61:void accessDEStorageForMigration() -> accessDEStorageForMigration
    89:94:void cleanupUponMigration() -> cleanupUponMigration
    70:77:void deleteProfile(android.net.sip.SipProfile) -> deleteProfile
    81:84:void deleteProfile(java.io.File) -> deleteProfile
    166:176:android.net.sip.SipProfile deserialize(java.io.File) -> deserialize
    191:193:boolean isChild(java.io.File,java.io.File) -> isChild
    181:181:void log(java.lang.String) -> log
    146:159:android.net.sip.SipProfile retrieveSipProfileFromName(java.lang.String) -> retrieveSipProfileFromName
    124:126:java.util.List retrieveSipProfileList() -> retrieveSipProfileList
    130:141:java.util.List retrieveSipProfileListInternal() -> retrieveSipProfileListInternal
    98:120:void saveProfile(android.net.sip.SipProfile) -> saveProfile
    65:66:void setupDatabase() -> setupDatabase
com.android.services.telephony.sip.SipSettings -> com.android.services.telephony.sip.SipSettings:
    55:74:void <init>() -> <init>
    55:55:java.lang.String access$000(com.android.services.telephony.sip.SipSettings,android.net.sip.SipProfile) -> access$000
    55:55:com.android.services.telephony.sip.SipPreferences access$100(com.android.services.telephony.sip.SipSettings) -> access$100
    55:55:void access$1000(com.android.services.telephony.sip.SipSettings,android.net.sip.SipProfile) -> access$1000
    55:55:android.net.sip.SipManager access$1100(com.android.services.telephony.sip.SipSettings) -> access$1100
    55:55:java.util.Map access$1200(com.android.services.telephony.sip.SipSettings) -> access$1200
    55:55:void access$1300(com.android.services.telephony.sip.SipSettings,java.lang.String,java.lang.String) -> access$1300
    55:55:int access$200(com.android.services.telephony.sip.SipSettings) -> access$200
    55:55:java.lang.String access$300(com.android.services.telephony.sip.SipSettings,int) -> access$300
    55:55:android.net.sip.SipProfile access$400(com.android.services.telephony.sip.SipSettings) -> access$400
    55:55:void access$500(com.android.services.telephony.sip.SipSettings,android.net.sip.SipProfile) -> access$500
    55:55:void access$600(com.android.services.telephony.sip.SipSettings) -> access$600
    55:55:void access$700(java.lang.String) -> access$700
    55:55:void access$800(com.android.services.telephony.sip.SipSettings) -> access$800
    55:55:void access$900(com.android.services.telephony.sip.SipSettings,android.net.sip.SipProfile) -> access$900
    270:274:void addPreferenceFor(android.net.sip.SipProfile) -> addPreferenceFor
    329:335:void addProfile(android.net.sip.SipProfile) -> addProfile
    359:359:android.net.sip.SipRegistrationListener createRegistrationListener() -> createRegistrationListener
    320:323:void deleteProfile(android.net.sip.SipProfile) -> deleteProfile
    116:122:java.lang.String getPackageNameFromUid(int) -> getPackageNameFromUid
    259:260:android.net.sip.SipProfile getProfileFromList(android.net.sip.SipProfile) -> getProfileFromList
    196:198:java.lang.String getProfileName(android.net.sip.SipProfile) -> getProfileName
    285:302:void handleProfileClick(android.net.sip.SipProfile) -> handleProfileClick
    442:442:void log(java.lang.String) -> log
    160:179:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    127:140:void onCreate(android.os.Bundle) -> onCreate
    412:415:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    152:153:void onDestroy() -> onDestroy
    427:438:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    421:422:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    146:147:void onResume() -> onResume
    242:253:void processActiveProfilesFromSipService() -> processActiveProfilesFromSipService
    204:235:void retrieveSipLists() -> retrieveSipLists
    347:347:void showRegistrationMessage(java.lang.String,java.lang.String) -> showRegistrationMessage
    339:342:void startSipEditor(android.net.sip.SipProfile) -> startSipEditor
    307:316:void unregisterProfile(android.net.sip.SipProfile) -> unregisterProfile
    183:192:void updateProfilesStatus() -> updateProfilesStatus
com.android.services.telephony.sip.SipSettings$1 -> com.android.services.telephony.sip.SipSettings$1:
    160:160:void <init>(com.android.services.telephony.sip.SipSettings,android.content.Intent,int) -> <init>
    164:176:void run() -> run
com.android.services.telephony.sip.SipSettings$2 -> com.android.services.telephony.sip.SipSettings$2:
    183:183:void <init>(com.android.services.telephony.sip.SipSettings) -> <init>
    187:189:void run() -> run
com.android.services.telephony.sip.SipSettings$3 -> com.android.services.telephony.sip.SipSettings$3:
    207:207:void <init>(com.android.services.telephony.sip.SipSettings) -> <init>
    207:207:int compare(java.lang.Object,java.lang.Object) -> compare
    210:210:int compare(android.net.sip.SipProfile,android.net.sip.SipProfile) -> compare
com.android.services.telephony.sip.SipSettings$4 -> com.android.services.telephony.sip.SipSettings$4:
    275:275:void <init>(com.android.services.telephony.sip.SipSettings) -> <init>
    278:278:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.android.services.telephony.sip.SipSettings$5 -> com.android.services.telephony.sip.SipSettings$5:
    294:294:void <init>(com.android.services.telephony.sip.SipSettings,android.net.sip.SipProfile) -> <init>
    297:298:void onClick(android.content.DialogInterface,int) -> onClick
com.android.services.telephony.sip.SipSettings$6 -> com.android.services.telephony.sip.SipSettings$6:
    307:307:void <init>(com.android.services.telephony.sip.SipSettings,android.net.sip.SipProfile) -> <init>
    311:313:void run() -> run
com.android.services.telephony.sip.SipSettings$7 -> com.android.services.telephony.sip.SipSettings$7:
    347:347:void <init>(com.android.services.telephony.sip.SipSettings,java.lang.String,java.lang.String) -> <init>
    350:352:void run() -> run
com.android.services.telephony.sip.SipSettings$8 -> com.android.services.telephony.sip.SipSettings$8:
    359:359:void <init>(com.android.services.telephony.sip.SipSettings) -> <init>
    368:368:void onRegistering(java.lang.String) -> onRegistering
    362:362:void onRegistrationDone(java.lang.String,long) -> onRegistrationDone
    377:402:void onRegistrationFailed(java.lang.String,int,java.lang.String) -> onRegistrationFailed
com.android.services.telephony.sip.SipSettings$SipPreference -> com.android.services.telephony.sip.SipSettings$SipPreference:
    78:80:void <init>(com.android.services.telephony.sip.SipSettings,android.content.Context,android.net.sip.SipProfile) -> <init>
    88:92:void setProfile(android.net.sip.SipProfile) -> setProfile
    96:110:void updateSummary(java.lang.String) -> updateSummary
com.android.services.telephony.sip.SipUtil -> com.android.services.telephony.sip.SipUtil:
    84:84:android.telecom.PhoneAccountHandle createAccountHandle(android.content.Context,java.lang.String) -> createAccountHandle
    99:100:java.lang.String getSipProfileNameFromPhoneAccount(android.telecom.PhoneAccountHandle) -> getSipProfileNameFromPhoneAccount
    72:75:boolean isPhoneIdle(android.content.Context) -> isPhoneIdle
    54:58:boolean isVoipSupported(android.content.Context) -> isVoipSupported
    156:184:void possiblyMigrateSipDb(android.content.Context) -> possiblyMigrateSipDb
    191:198:void startSipService() -> startSipService
com.android.services.telephony.sip.components.TelephonySipService -> com.android.services.telephony.sip.components.TelephonySipService:
    29:29:void <init>() -> <init>
    33:34:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
com.google.common.base.Absent -> com.google.common.base.Absent:
    27:27:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    48:48:java.lang.Object or(java.lang.Object) -> or
    96:96:java.lang.Object readResolve() -> readResolve
    31:31:com.google.common.base.Optional withType() -> withType
com.google.common.base.AbstractIterator -> com.google.common.base.AbstractIterator:
    31:33:void <init>() -> <init>
    49:49:java.lang.Object endOfData() -> endOfData
    55:63:boolean hasNext() -> hasNext
    78:83:java.lang.Object next() -> next
    89:89:void remove() -> remove
    67:70:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.base.AbstractIterator$1 -> com.google.common.base.AbstractIterator$1:
    56:56:void <clinit>() -> <clinit>
com.google.common.base.AbstractIterator$State -> com.google.common.base.AbstractIterator$State:
    35:39:void <clinit>() -> <clinit>
    35:35:void <init>(java.lang.String,int) -> <init>
    35:35:com.google.common.base.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    35:35:com.google.common.base.AbstractIterator$State[] values() -> values
com.google.common.base.Ascii -> com.google.common.base.Ascii:
    407:417:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
com.google.common.base.CharMatcher -> com.google.common.base.CharMatcher:
    359:359:void <init>() -> <init>
    64:64:java.lang.String access$100(char) -> access$100
    378:378:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    118:118:com.google.common.base.CharMatcher any() -> any
    312:322:com.google.common.base.CharMatcher anyOf(java.lang.CharSequence) -> anyOf
    165:165:com.google.common.base.CharMatcher ascii() -> ascii
    541:541:int indexIn(java.lang.CharSequence) -> indexIn
    560:563:int indexIn(java.lang.CharSequence,int) -> indexIn
    295:295:com.google.common.base.CharMatcher is(char) -> is
    1693:1693:com.google.common.base.CharMatcher$IsEither isEither(char,char) -> isEither
    304:304:com.google.common.base.CharMatcher isNot(char) -> isNot
    254:254:com.google.common.base.CharMatcher javaIsoControl() -> javaIsoControl
    507:508:boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    527:527:boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    371:371:com.google.common.base.CharMatcher negate() -> negate
    127:127:com.google.common.base.CharMatcher none() -> none
    331:331:com.google.common.base.CharMatcher noneOf(java.lang.CharSequence) -> noneOf
    927:932:java.lang.String showCharacter(char) -> showCharacter
    918:918:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$And -> com.google.common.base.CharMatcher$And:
    1546:1548:void <init>(com.google.common.base.CharMatcher,com.google.common.base.CharMatcher) -> <init>
    1553:1553:boolean matches(char) -> matches
    1569:1569:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$Any -> com.google.common.base.CharMatcher$Any:
    1010:1010:void <clinit>() -> <clinit>
    1013:1013:void <init>() -> <init>
    1089:1089:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    1023:1023:int indexIn(java.lang.CharSequence) -> indexIn
    1028:1029:int indexIn(java.lang.CharSequence,int) -> indexIn
    1040:1040:boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    1046:1046:boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    1100:1100:com.google.common.base.CharMatcher negate() -> negate
com.google.common.base.CharMatcher$AnyOf -> com.google.common.base.CharMatcher$AnyOf:
    1730:1732:void <init>(java.lang.CharSequence) -> <init>
    1737:1737:boolean matches(char) -> matches
    1750:1755:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$Ascii -> com.google.common.base.CharMatcher$Ascii:
    1280:1280:void <clinit>() -> <clinit>
    1283:1283:void <init>() -> <init>
com.google.common.base.CharMatcher$FastMatcher -> com.google.common.base.CharMatcher$FastMatcher:
    938:938:void <init>() -> <init>
    947:947:com.google.common.base.CharMatcher negate() -> negate
com.google.common.base.CharMatcher$Is -> com.google.common.base.CharMatcher$Is:
    1609:1610:void <init>(char) -> <init>
    1625:1625:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    1615:1615:boolean matches(char) -> matches
    1635:1635:com.google.common.base.CharMatcher negate() -> negate
    1646:1646:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$IsEither -> com.google.common.base.CharMatcher$IsEither:
    1702:1704:void <init>(char,char) -> <init>
    1709:1709:boolean matches(char) -> matches
    1721:1721:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$IsNot -> com.google.common.base.CharMatcher$IsNot:
    1655:1656:void <init>(char) -> <init>
    1666:1666:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    1661:1661:boolean matches(char) -> matches
    1683:1683:com.google.common.base.CharMatcher negate() -> negate
    1688:1688:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$JavaIsoControl -> com.google.common.base.CharMatcher$JavaIsoControl:
    1444:1444:void <clinit>() -> <clinit>
    1447:1447:void <init>() -> <init>
com.google.common.base.CharMatcher$NamedFastMatcher -> com.google.common.base.CharMatcher$NamedFastMatcher:
    956:957:void <init>(java.lang.String) -> <init>
    962:962:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$Negated -> com.google.common.base.CharMatcher$Negated:
    1496:1497:void <init>(com.google.common.base.CharMatcher) -> <init>
    1502:1502:boolean matches(char) -> matches
    1507:1507:boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    1512:1512:boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    1531:1531:com.google.common.base.CharMatcher negate() -> negate
    1536:1536:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$NegatedFastMatcher -> com.google.common.base.CharMatcher$NegatedFastMatcher:
    970:970:void <init>(com.google.common.base.CharMatcher) -> <init>
com.google.common.base.CharMatcher$None -> com.google.common.base.CharMatcher$None:
    1107:1107:void <clinit>() -> <clinit>
    1110:1110:void <init>() -> <init>
    1192:1192:com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    1120:1120:int indexIn(java.lang.CharSequence) -> indexIn
    1126:1127:int indexIn(java.lang.CharSequence,int) -> indexIn
    1139:1139:boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    1144:1144:boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    1203:1203:com.google.common.base.CharMatcher negate() -> negate
com.google.common.base.CharMatcher$Whitespace -> com.google.common.base.CharMatcher$Whitespace:
    1221:1223:void <clinit>() -> <clinit>
    1226:1226:void <init>() -> <init>
    1231:1231:boolean matches(char) -> matches
com.google.common.base.Charsets -> com.google.common.base.Charsets:
    45:94:void <clinit>() -> <clinit>
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    43:43:void <init>() -> <init>
    313:313:com.google.common.base.Equivalence equals() -> equals
    69:69:boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    102:102:int hash(java.lang.Object) -> hash
    325:325:com.google.common.base.Equivalence identity() -> identity
com.google.common.base.Equivalence$Equals -> com.google.common.base.Equivalence$Equals:
    330:330:void <clinit>() -> <clinit>
    328:328:void <init>() -> <init>
    334:334:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    339:339:int doHash(java.lang.Object) -> doHash
    343:343:java.lang.Object readResolve() -> readResolve
com.google.common.base.Equivalence$Identity -> com.google.common.base.Equivalence$Identity:
    351:351:void <clinit>() -> <clinit>
    349:349:void <init>() -> <init>
    360:360:int doHash(java.lang.Object) -> doHash
    364:364:java.lang.Object readResolve() -> readResolve
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    79:80:void <init>(java.lang.String) -> <init>
    66:66:java.lang.String access$100(com.google.common.base.Joiner) -> access$100
    104:109:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    139:139:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    152:154:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    188:188:java.lang.String join(java.lang.Iterable) -> join
    198:198:java.lang.String join(java.util.Iterator) -> join
    69:69:com.google.common.base.Joiner on(java.lang.String) -> on
    74:74:com.google.common.base.Joiner on(char) -> on
    456:457:java.lang.CharSequence toString(java.lang.Object) -> toString
    296:296:com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
com.google.common.base.Joiner$MapJoiner -> com.google.common.base.Joiner$MapJoiner:
    317:317:void <init>(com.google.common.base.Joiner,java.lang.String,com.google.common.base.Joiner$1) -> <init>
    321:323:void <init>(com.google.common.base.Joiner,java.lang.String) -> <init>
    368:379:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    395:395:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    409:411:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
com.google.common.base.MoreObjects -> com.google.common.base.MoreObjects:
    64:64:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
    108:108:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
com.google.common.base.MoreObjects$ToStringHelper -> com.google.common.base.MoreObjects$ToStringHelper:
    143:143:void <init>(java.lang.String,com.google.common.base.MoreObjects$1) -> <init>
    145:151:void <init>(java.lang.String) -> <init>
    174:174:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    224:224:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int) -> add
    364:365:com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder() -> addHolder
    370:371:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    376:378:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    245:245:com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object) -> addValue
    337:360:java.lang.String toString() -> toString
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder -> com.google.common.base.MoreObjects$ToStringHelper$ValueHolder:
    382:382:void <init>() -> <init>
    382:382:void <init>(com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.Objects -> com.google.common.base.Objects:
    52:52:boolean equal(java.lang.Object,java.lang.Object) -> equal
    77:77:int hashCode(java.lang.Object[]) -> hashCode
com.google.common.base.Optional -> com.google.common.base.Optional:
    119:119:void <init>() -> <init>
    93:93:com.google.common.base.Optional absent() -> absent
    105:105:com.google.common.base.Optional of(java.lang.Object) -> of
com.google.common.base.Platform -> com.google.common.base.Platform:
    33:34:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    84:84:com.google.common.base.PatternCompiler loadPatternCompiler() -> loadPatternCompiler
    58:58:boolean stringIsNullOrEmpty(java.lang.String) -> stringIsNullOrEmpty
    41:41:long systemNanoTime() -> systemNanoTime
com.google.common.base.Platform$JdkPatternCompiler -> com.google.common.base.Platform$JdkPatternCompiler:
    91:91:void <init>() -> <init>
    91:91:void <init>(com.google.common.base.Platform$1) -> <init>
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    1409:1413:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    1454:1458:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    1483:1489:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    128:128:void checkArgument(boolean) -> checkArgument
    142:142:void checkArgument(boolean,java.lang.Object) -> checkArgument
    177:177:void checkArgument(boolean,java.lang.String,char) -> checkArgument
    190:190:void checkArgument(boolean,java.lang.String,int) -> checkArgument
    203:203:void checkArgument(boolean,java.lang.String,long) -> checkArgument
    217:217:void checkArgument(boolean,java.lang.String,java.lang.Object) -> checkArgument
    301:301:void checkArgument(boolean,java.lang.String,int,int) -> checkArgument
    444:444:void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object) -> checkArgument
    1384:1384:int checkElementIndex(int,int) -> checkElementIndex
    1402:1402:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    890:890:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    910:910:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    1429:1429:int checkPositionIndex(int,int) -> checkPositionIndex
    1447:1447:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    1477:1477:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    495:495:void checkState(boolean) -> checkState
    511:511:void checkState(boolean,java.lang.Object) -> checkState
    563:563:void checkState(boolean,java.lang.String,int) -> checkState
    592:592:void checkState(boolean,java.lang.String,java.lang.Object) -> checkState
com.google.common.base.Present -> com.google.common.base.Present:
    29:30:void <init>(java.lang.Object) -> <init>
    81:83:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    45:46:java.lang.Object or(java.lang.Object) -> or
    95:95:java.lang.String toString() -> toString
com.google.common.base.Splitter -> com.google.common.base.Splitter:
    107:107:void <init>(com.google.common.base.Splitter$Strategy) -> <init>
    110:114:void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int) -> <init>
    100:100:java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence) -> access$000
    100:100:com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter) -> access$200
    100:100:boolean access$300(com.google.common.base.Splitter) -> access$300
    100:100:int access$400(com.google.common.base.Splitter) -> access$400
    319:319:com.google.common.base.Splitter omitEmptyStrings() -> omitEmptyStrings
    125:125:com.google.common.base.Splitter on(char) -> on
    139:141:com.google.common.base.Splitter on(com.google.common.base.CharMatcher) -> on
    169:173:com.google.common.base.Splitter on(java.lang.String) -> on
    381:383:java.lang.Iterable split(java.lang.CharSequence) -> split
    400:400:java.util.Iterator splittingIterator(java.lang.CharSequence) -> splittingIterator
com.google.common.base.Splitter$1 -> com.google.common.base.Splitter$1:
    142:142:void <init>(com.google.common.base.CharMatcher) -> <init>
    142:142:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    145:145:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$1$1 -> com.google.common.base.Splitter$1$1:
    145:145:void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    148:148:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$2 -> com.google.common.base.Splitter$2:
    174:174:void <init>(java.lang.String) -> <init>
    174:174:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    177:177:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$2$1 -> com.google.common.base.Splitter$2$1:
    177:177:void <init>(com.google.common.base.Splitter$2,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    196:196:int separatorEnd(int) -> separatorEnd
    180:185:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$5 -> com.google.common.base.Splitter$5:
    383:383:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    386:386:java.util.Iterator iterator() -> iterator
    391:394:java.lang.String toString() -> toString
com.google.common.base.Splitter$SplittingIterator -> com.google.common.base.Splitter$SplittingIterator:
    540:547:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    523:523:java.lang.Object computeNext() -> computeNext
    557:613:java.lang.String computeNext() -> computeNext
com.google.common.base.StandardSystemProperty -> com.google.common.base.StandardSystemProperty:
    26:111:void <clinit>() -> <clinit>
    115:116:void <init>(java.lang.String,int,java.lang.String) -> <init>
    121:121:java.lang.String key() -> key
    136:136:java.lang.String toString() -> toString
    130:130:java.lang.String value() -> value
    26:26:com.google.common.base.StandardSystemProperty valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.base.StandardSystemProperty[] values() -> values
com.google.common.base.Strings -> com.google.common.base.Strings:
    69:69:boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    261:297:java.lang.String lenientFormat(java.lang.String,java.lang.Object[]) -> lenientFormat
    305:313:java.lang.String lenientToString(java.lang.Object) -> lenientToString
    43:43:java.lang.String nullToEmpty(java.lang.String) -> nullToEmpty
    222:224:boolean validSurrogatePairAt(java.lang.CharSequence,int) -> validSurrogatePairAt
com.google.common.base.Suppliers$ExpiringMemoizingSupplier -> com.google.common.base.Suppliers$ExpiringMemoizingSupplier:
    238:253:java.lang.Object get() -> get
    260:260:java.lang.String toString() -> toString
com.google.common.base.Suppliers$MemoizingSupplier -> com.google.common.base.Suppliers$MemoizingSupplier:
    126:136:java.lang.Object get() -> get
    141:142:java.lang.String toString() -> toString
com.google.common.base.Suppliers$NonSerializableMemoizingSupplier -> com.google.common.base.Suppliers$NonSerializableMemoizingSupplier:
    164:176:java.lang.Object get() -> get
    181:183:java.lang.String toString() -> toString
com.google.common.collect.AbstractIndexedListIterator -> com.google.common.collect.AbstractIndexedListIterator:
    61:64:void <init>(int,int) -> <init>
    69:69:boolean hasNext() -> hasNext
    87:87:boolean hasPrevious() -> hasPrevious
    74:77:java.lang.Object next() -> next
    82:82:int nextIndex() -> nextIndex
    92:95:java.lang.Object previous() -> previous
    100:100:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    65:68:void <init>() -> <init>
    121:121:java.lang.Object endOfData() -> endOfData
    128:136:boolean hasNext() -> hasNext
    152:157:java.lang.Object next() -> next
    140:143:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.collect.AbstractIterator$1 -> com.google.common.collect.AbstractIterator$1:
    129:129:void <clinit>() -> <clinit>
com.google.common.collect.AbstractIterator$State -> com.google.common.collect.AbstractIterator$State:
    70:81:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    70:70:com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    70:70:com.google.common.collect.AbstractIterator$State[] values() -> values
com.google.common.collect.AbstractMapBasedMultimap -> com.google.common.collect.AbstractMapBasedMultimap:
    114:116:void <init>(java.util.Map) -> <init>
    84:84:java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap) -> access$000
    84:84:java.util.Iterator access$100(java.util.Collection) -> access$100
    84:84:int access$208(com.google.common.collect.AbstractMapBasedMultimap) -> access$208
    84:84:int access$210(com.google.common.collect.AbstractMapBasedMultimap) -> access$210
    84:84:int access$212(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$212
    84:84:int access$220(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$220
    84:84:void access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object) -> access$300
    163:163:java.util.Map backingMap() -> backingMap
    268:272:void clear() -> clear
    175:175:boolean containsKey(java.lang.Object) -> containsKey
    1232:1232:java.util.Map createAsMap() -> createAsMap
    159:159:java.util.Collection createCollection(java.lang.Object) -> createCollection
    1205:1208:java.util.Collection createEntries() -> createEntries
    891:891:java.util.Set createKeySet() -> createKeySet
    1236:1241:java.util.Map createMaybeNavigableAsMap() -> createMaybeNavigableAsMap
    895:900:java.util.Set createMaybeNavigableKeySet() -> createMaybeNavigableKeySet
    1200:1200:java.util.Collection entries() -> entries
    1222:1222:java.util.Iterator entryIterator() -> entryIterator
    284:288:java.util.Collection get(java.lang.Object) -> get
    573:575:java.util.Iterator iteratorOrListIterator(java.util.Collection) -> iteratorOrListIterator
    182:193:boolean put(java.lang.Object,java.lang.Object) -> put
    247:258:java.util.Collection removeAll(java.lang.Object) -> removeAll
    1102:1107:void removeValuesForKey(java.lang.Object) -> removeValuesForKey
    121:125:void setMap(java.util.Map) -> setMap
    170:170:int size() -> size
com.google.common.collect.AbstractMapBasedMultimap$2 -> com.google.common.collect.AbstractMapBasedMultimap$2:
    1222:1222:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1222:1222:java.lang.Object output(java.lang.Object,java.lang.Object) -> output
    1225:1225:java.util.Map$Entry output(java.lang.Object,java.lang.Object) -> output
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> com.google.common.collect.AbstractMapBasedMultimap$AsMap:
    1253:1254:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    1321:1324:void clear() -> clear
    1266:1266:boolean containsKey(java.lang.Object) -> containsKey
    1259:1259:java.util.Set createEntrySet() -> createEntrySet
    1306:1306:boolean equals(java.lang.Object) -> equals
    1245:1245:java.lang.Object get(java.lang.Object) -> get
    1271:1277:java.util.Collection get(java.lang.Object) -> get
    1311:1311:int hashCode() -> hashCode
    1282:1282:java.util.Set keySet() -> keySet
    1245:1245:java.lang.Object remove(java.lang.Object) -> remove
    1292:1300:java.util.Collection remove(java.lang.Object) -> remove
    1287:1287:int size() -> size
    1316:1316:java.lang.String toString() -> toString
    1329:1330:java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> wrapEntry
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:
    1334:1334:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1349:1349:boolean contains(java.lang.Object) -> contains
    1342:1342:java.util.Iterator iterator() -> iterator
    1337:1337:java.util.Map map() -> map
    1354:1358:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:
    1364:1365:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1370:1370:boolean hasNext() -> hasNext
    1364:1364:java.lang.Object next() -> next
    1375:1377:java.util.Map$Entry next() -> next
    1382:1386:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$Itr -> com.google.common.collect.AbstractMapBasedMultimap$Itr:
    1117:1121:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1128:1128:boolean hasNext() -> hasNext
    1133:1139:java.lang.Object next() -> next
    1144:1148:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> com.google.common.collect.AbstractMapBasedMultimap$KeySet:
    906:907:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    955:955:void clear() -> clear
    960:960:boolean containsAll(java.util.Collection) -> containsAll
    965:965:boolean equals(java.lang.Object) -> equals
    970:970:int hashCode() -> hashCode
    912:913:java.util.Iterator iterator() -> iterator
    944:948:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> com.google.common.collect.AbstractMapBasedMultimap$KeySet$1:
    913:913:void <init>(com.google.common.collect.AbstractMapBasedMultimap$KeySet,java.util.Iterator) -> <init>
    918:918:boolean hasNext() -> hasNext
    923:924:java.lang.Object next() -> next
    929:934:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap -> com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:
    1449:1450:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1482:1483:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1488:1488:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1447:1447:java.util.SortedSet createKeySet() -> createKeySet
    1547:1547:java.util.NavigableSet createKeySet() -> createKeySet
    1557:1557:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1537:1537:java.util.NavigableMap descendingMap() -> descendingMap
    1504:1505:java.util.Map$Entry firstEntry() -> firstEntry
    1471:1472:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1477:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1447:1447:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1573:1573:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    1578:1578:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1493:1494:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1499:1499:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1447:1447:java.util.Set keySet() -> keySet
    1447:1447:java.util.SortedSet keySet() -> keySet
    1542:1542:java.util.NavigableSet keySet() -> keySet
    1510:1511:java.util.Map$Entry lastEntry() -> lastEntry
    1460:1461:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1466:1466:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1552:1552:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1525:1532:java.util.Map$Entry pollAsMapEntry(java.util.Iterator) -> pollAsMapEntry
    1516:1516:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1521:1521:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1447:1447:java.util.SortedMap sortedMap() -> sortedMap
    1455:1455:java.util.NavigableMap sortedMap() -> sortedMap
    1447:1447:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1562:1562:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1568:1568:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1447:1447:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1583:1583:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    1588:1588:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet -> com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:
    1018:1019:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1039:1039:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1064:1064:java.util.Iterator descendingIterator() -> descendingIterator
    1059:1059:java.util.NavigableSet descendingSet() -> descendingSet
    1034:1034:java.lang.Object floor(java.lang.Object) -> floor
    1016:1016:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1069:1069:java.util.NavigableSet headSet(java.lang.Object) -> headSet
    1074:1074:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1044:1044:java.lang.Object higher(java.lang.Object) -> higher
    1029:1029:java.lang.Object lower(java.lang.Object) -> lower
    1049:1049:java.lang.Object pollFirst() -> pollFirst
    1054:1054:java.lang.Object pollLast() -> pollLast
    1016:1016:java.util.SortedMap sortedMap() -> sortedMap
    1024:1024:java.util.NavigableMap sortedMap() -> sortedMap
    1016:1016:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1079:1079:java.util.NavigableSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1085:1086:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1016:1016:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1091:1091:java.util.NavigableSet tailSet(java.lang.Object) -> tailSet
    1096:1096:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:
    1393:1394:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    1403:1403:java.util.Comparator comparator() -> comparator
    1443:1443:java.util.SortedSet createKeySet() -> createKeySet
    1408:1408:java.lang.Object firstKey() -> firstKey
    1418:1418:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1391:1391:java.util.Set keySet() -> keySet
    1437:1438:java.util.SortedSet keySet() -> keySet
    1413:1413:java.lang.Object lastKey() -> lastKey
    1398:1398:java.util.SortedMap sortedMap() -> sortedMap
    1423:1423:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1428:1428:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:
    977:978:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    987:987:java.util.Comparator comparator() -> comparator
    992:992:java.lang.Object first() -> first
    997:997:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1002:1002:java.lang.Object last() -> last
    982:982:java.util.SortedMap sortedMap() -> sortedMap
    1007:1007:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1012:1012:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:
    329:333:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    474:480:boolean add(java.lang.Object) -> add
    494:503:boolean addAll(java.util.Collection) -> addAll
    380:383:void addToMap() -> addToMap
    523:529:void clear() -> clear
    511:512:boolean contains(java.lang.Object) -> contains
    517:518:boolean containsAll(java.util.Collection) -> containsAll
    398:399:boolean equals(java.lang.Object) -> equals
    487:487:com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor() -> getAncestor
    415:415:java.util.Collection getDelegate() -> getDelegate
    370:370:java.lang.Object getKey() -> getKey
    404:405:int hashCode() -> hashCode
    420:421:java.util.Iterator iterator() -> iterator
    344:352:void refreshIfEmpty() -> refreshIfEmpty
    534:538:boolean remove(java.lang.Object) -> remove
    545:553:boolean removeAll(java.util.Collection) -> removeAll
    362:365:void removeIfEmpty() -> removeIfEmpty
    560:566:boolean retainAll(java.util.Collection) -> retainAll
    389:390:int size() -> size
    410:411:java.lang.String toString() -> toString
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:
    427:430:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    427:434:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection,java.util.Iterator) -> <init>
    449:450:boolean hasNext() -> hasNext
    455:456:java.lang.Object next() -> next
    461:463:void remove() -> remove
    441:443:void validateIterator() -> validateIterator
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:
    665:666:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.NavigableSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    686:686:java.lang.Object ceiling(java.lang.Object) -> ceiling
    715:715:java.util.Iterator descendingIterator() -> descendingIterator
    710:710:java.util.NavigableSet descendingSet() -> descendingSet
    681:681:java.lang.Object floor(java.lang.Object) -> floor
    662:662:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    671:671:java.util.NavigableSet getSortedSetDelegate() -> getSortedSetDelegate
    727:727:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    691:691:java.lang.Object higher(java.lang.Object) -> higher
    676:676:java.lang.Object lower(java.lang.Object) -> lower
    696:696:java.lang.Object pollFirst() -> pollFirst
    701:701:java.lang.Object pollLast() -> pollLast
    721:722:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    732:732:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    705:705:java.util.NavigableSet wrap(java.util.NavigableSet) -> wrap
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSet:
    581:582:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Set) -> <init>
    587:599:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:
    609:610:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    619:619:java.util.Comparator comparator() -> comparator
    624:625:java.lang.Object first() -> first
    614:614:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    636:640:java.util.SortedSet headSet(java.lang.Object) -> headSet
    630:631:java.lang.Object last() -> last
    645:649:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    654:658:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultiset -> com.google.common.collect.AbstractMapBasedMultiset:
    74:87:int add(java.lang.Object,int) -> add
    226:228:void addTo(com.google.common.collect.Multiset) -> addTo
    155:156:void clear() -> clear
    59:59:int count(java.lang.Object) -> count
    234:234:int distinctElements() -> distinctElements
    206:206:java.util.Iterator elementIterator() -> elementIterator
    216:216:java.util.Iterator entryIterator() -> entryIterator
    239:239:java.util.Iterator iterator() -> iterator
    259:262:void readObject(java.io.ObjectInputStream) -> readObject
    95:111:int remove(java.lang.Object,int) -> remove
    126:148:boolean setCount(java.lang.Object,int,int) -> setCount
    244:244:int size() -> size
    253:254:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.AbstractMapBasedMultiset$1 -> com.google.common.collect.AbstractMapBasedMultiset$1:
    206:206:void <init>(com.google.common.collect.AbstractMapBasedMultiset) -> <init>
    209:209:java.lang.Object result(int) -> result
com.google.common.collect.AbstractMapBasedMultiset$2 -> com.google.common.collect.AbstractMapBasedMultiset$2:
    216:216:void <init>(com.google.common.collect.AbstractMapBasedMultiset) -> <init>
    216:216:java.lang.Object result(int) -> result
    219:219:com.google.common.collect.Multiset$Entry result(int) -> result
com.google.common.collect.AbstractMapBasedMultiset$Itr -> com.google.common.collect.AbstractMapBasedMultiset$Itr:
    163:166:void <init>(com.google.common.collect.AbstractMapBasedMultiset) -> <init>
    171:172:void checkForConcurrentModification() -> checkForConcurrentModification
    178:179:boolean hasNext() -> hasNext
    184:189:java.lang.Object next() -> next
    195:200:void remove() -> remove
com.google.common.collect.AbstractMapEntry -> com.google.common.collect.AbstractMapEntry:
    31:31:void <init>() -> <init>
    46:49:boolean equals(java.lang.Object) -> equals
    56:58:int hashCode() -> hashCode
    41:41:java.lang.Object setValue(java.lang.Object) -> setValue
    64:64:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> com.google.common.collect.AbstractMultimap:
    38:38:void <init>() -> <init>
    207:208:java.util.Map asMap() -> asMap
    57:58:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    112:113:java.util.Collection entries() -> entries
    217:217:boolean equals(java.lang.Object) -> equals
    230:230:int hashCode() -> hashCode
    41:41:boolean isEmpty() -> isEmpty
    150:151:java.util.Set keySet() -> keySet
    64:65:boolean remove(java.lang.Object,java.lang.Object) -> remove
    241:241:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap$Entries -> com.google.common.collect.AbstractMultimap$Entries:
    119:119:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    127:127:java.util.Iterator iterator() -> iterator
    122:122:com.google.common.collect.Multimap multimap() -> multimap
com.google.common.collect.AbstractMultimap$EntrySet -> com.google.common.collect.AbstractMultimap$EntrySet:
    132:132:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    140:140:boolean equals(java.lang.Object) -> equals
    135:135:int hashCode() -> hashCode
com.google.common.collect.AbstractMultiset -> com.google.common.collect.AbstractMultiset:
    45:45:void <init>() -> <init>
    62:62:boolean add(java.lang.Object) -> add
    107:107:boolean addAll(java.util.Collection) -> addAll
    55:55:boolean contains(java.lang.Object) -> contains
    143:143:java.util.Set createElementSet() -> createElementSet
    191:191:java.util.Set createEntrySet() -> createEntrySet
    131:133:java.util.Set elementSet() -> elementSet
    165:167:java.util.Set entrySet() -> entrySet
    208:208:boolean equals(java.lang.Object) -> equals
    218:218:int hashCode() -> hashCode
    50:50:boolean isEmpty() -> isEmpty
    75:75:boolean remove(java.lang.Object) -> remove
    113:113:boolean removeAll(java.util.Collection) -> removeAll
    119:119:boolean retainAll(java.util.Collection) -> retainAll
    229:229:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultiset$ElementSet -> com.google.common.collect.AbstractMultiset$ElementSet:
    147:147:void <init>(com.google.common.collect.AbstractMultiset) -> <init>
    155:155:java.util.Iterator iterator() -> iterator
    150:150:com.google.common.collect.Multiset multiset() -> multiset
com.google.common.collect.AbstractMultiset$EntrySet -> com.google.common.collect.AbstractMultiset$EntrySet:
    173:173:void <init>(com.google.common.collect.AbstractMultiset) -> <init>
    181:181:java.util.Iterator iterator() -> iterator
    176:176:com.google.common.collect.Multiset multiset() -> multiset
    186:186:int size() -> size
com.google.common.collect.AbstractNavigableMap -> com.google.common.collect.AbstractNavigableMap:
    35:35:void <init>() -> <init>
    101:101:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    122:122:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    159:159:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    164:164:java.util.NavigableMap descendingMap() -> descendingMap
    45:45:java.util.Map$Entry firstEntry() -> firstEntry
    68:72:java.lang.Object firstKey() -> firstKey
    95:95:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    117:117:java.lang.Object floorKey(java.lang.Object) -> floorKey
    139:139:java.util.SortedMap headMap(java.lang.Object) -> headMap
    107:107:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    127:127:java.lang.Object higherKey(java.lang.Object) -> higherKey
    154:154:java.util.Set keySet() -> keySet
    51:51:java.util.Map$Entry lastEntry() -> lastEntry
    78:82:java.lang.Object lastKey() -> lastKey
    89:89:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    112:112:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    149:149:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    57:57:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    63:63:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    134:134:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    144:144:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractNavigableMap$DescendingMap -> com.google.common.collect.AbstractNavigableMap$DescendingMap:
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap) -> <init>
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap,com.google.common.collect.AbstractNavigableMap$1) -> <init>
    175:175:java.util.Iterator entryIterator() -> entryIterator
    170:170:java.util.NavigableMap forward() -> forward
com.google.common.collect.AbstractSetMultimap -> com.google.common.collect.AbstractSetMultimap:
    44:44:void <init>(java.util.Map) -> <init>
    123:123:java.util.Map asMap() -> asMap
    35:35:java.util.Collection createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    52:52:java.util.Set createUnmodifiableEmptyCollection() -> createUnmodifiableEmptyCollection
    35:35:java.util.Collection entries() -> entries
    86:86:java.util.Set entries() -> entries
    148:148:boolean equals(java.lang.Object) -> equals
    35:35:java.util.Collection get(java.lang.Object) -> get
    75:75:java.util.Set get(java.lang.Object) -> get
    137:137:boolean put(java.lang.Object,java.lang.Object) -> put
    35:35:java.util.Collection removeAll(java.lang.Object) -> removeAll
    98:98:java.util.Set removeAll(java.lang.Object) -> removeAll
    57:57:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    62:62:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
com.google.common.collect.BaseImmutableMultimap -> com.google.common.collect.BaseImmutableMultimap:
    25:25:void <init>() -> <init>
com.google.common.collect.BoundType -> com.google.common.collect.BoundType:
    26:30:void <clinit>() -> <clinit>
    34:35:void <init>(java.lang.String,int,boolean) -> <init>
    40:40:com.google.common.collect.BoundType forBoolean(boolean) -> forBoolean
    26:26:com.google.common.collect.BoundType valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.collect.BoundType[] values() -> values
com.google.common.collect.ByFunctionOrdering -> com.google.common.collect.ByFunctionOrdering:
    36:38:void <init>(com.google.common.base.Function,com.google.common.collect.Ordering) -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    51:53:boolean equals(java.lang.Object) -> equals
    60:60:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
com.google.common.collect.CollectPreconditions -> com.google.common.collect.CollectPreconditions:
    30:32:void checkEntryNotNull(java.lang.Object,java.lang.Object) -> checkEntryNotNull
    39:39:int checkNonnegative(int,java.lang.String) -> checkNonnegative
    54:54:void checkPositive(int,java.lang.String) -> checkPositive
    63:63:void checkRemove(boolean) -> checkRemove
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    328:329:java.lang.StringBuilder newStringBuilderForCollection(int) -> newStringBuilderForCollection
    99:101:boolean safeContains(java.util.Collection,java.lang.Object) -> safeContains
com.google.common.collect.CompactHashMap -> com.google.common.collect.CompactHashMap:
    102:102:void <clinit>() -> <clinit>
    180:181:void <init>() -> <init>
    189:190:void <init>(int) -> <init>
    75:75:int access$000(com.google.common.collect.CompactHashMap) -> access$000
    75:75:java.lang.Object access$100(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$100
    75:75:java.lang.Object access$200() -> access$200
    75:75:int access$400(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$400
    75:75:int access$500(com.google.common.collect.CompactHashMap) -> access$500
    75:75:java.lang.Object access$600(com.google.common.collect.CompactHashMap) -> access$600
    75:75:int access$710(com.google.common.collect.CompactHashMap) -> access$710
    210:219:int allocArrays() -> allocArrays
    890:906:void clear() -> clear
    440:441:boolean containsKey(java.lang.Object) -> containsKey
    807:812:boolean containsValue(java.lang.Object) -> containsValue
    242:250:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    86:86:com.google.common.collect.CompactHashMap create() -> create
    663:663:java.util.Set createEntrySet() -> createEntrySet
    235:235:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    607:607:java.util.Set createKeySet() -> createKeySet
    827:827:java.util.Collection createValues() -> createValues
    99:99:com.google.common.collect.CompactHashMap createWithExpectedSize(int) -> createWithExpectedSize
    228:229:java.util.Map delegateOrNull() -> delegateOrNull
    659:659:java.util.Set entrySet() -> entrySet
    726:730:java.util.Iterator entrySetIterator() -> entrySetIterator
    538:538:int firstEntryIndex() -> firstEntryIndex
    447:456:java.lang.Object get(java.lang.Object) -> get
    542:542:int getSuccessor(int) -> getSuccessor
    263:263:int hashTableMask() -> hashTableMask
    267:267:void incrementModCount() -> incrementModCount
    416:433:int indexOf(java.lang.Object) -> indexOf
    195:198:void init(int) -> init
    350:352:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    802:802:boolean isEmpty() -> isEmpty
    603:603:java.util.Set keySet() -> keySet
    642:646:java.util.Iterator keySetIterator() -> keySetIterator
    498:533:void moveLastEntry(int,int) -> moveLastEntry
    204:204:boolean needsAllocArrays() -> needsAllocArrays
    282:342:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    923:932:void readObject(java.io.ObjectInputStream) -> readObject
    464:469:java.lang.Object remove(java.lang.Object) -> remove
    474:489:java.lang.Object removeHelper(java.lang.Object) -> removeHelper
    373:375:void resizeEntries(int) -> resizeEntries
    357:363:void resizeMeMaybe(int) -> resizeMeMaybe
    380:411:int resizeTable(int,int,int,int) -> resizeTable
    256:258:void setHashTableMask(int) -> setHashTableMask
    796:797:int size() -> size
    823:823:java.util.Collection values() -> values
    849:853:java.util.Iterator valuesIterator() -> valuesIterator
    911:917:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashMap$1 -> com.google.common.collect.CompactHashMap$1:
    646:646:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    650:650:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$2 -> com.google.common.collect.CompactHashMap$2:
    730:730:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    730:730:java.lang.Object getOutput(int) -> getOutput
    733:733:java.util.Map$Entry getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$3 -> com.google.common.collect.CompactHashMap$3:
    853:853:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    857:857:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$EntrySetView -> com.google.common.collect.CompactHashMap$EntrySetView:
    667:667:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    676:676:void clear() -> clear
    686:692:boolean contains(java.lang.Object) -> contains
    681:681:java.util.Iterator iterator() -> iterator
    699:717:boolean remove(java.lang.Object) -> remove
    671:671:int size() -> size
com.google.common.collect.CompactHashMap$Itr -> com.google.common.collect.CompactHashMap$Itr:
    554:557:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    554:554:void <init>(com.google.common.collect.CompactHashMap,com.google.common.collect.CompactHashMap$1) -> <init>
    593:594:void checkForConcurrentModification() -> checkForConcurrentModification
    561:561:boolean hasNext() -> hasNext
    589:589:void incrementExpectedModCount() -> incrementExpectedModCount
    568:574:java.lang.Object next() -> next
    580:585:void remove() -> remove
com.google.common.collect.CompactHashMap$KeySetView -> com.google.common.collect.CompactHashMap$KeySetView:
    611:611:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    637:637:void clear() -> clear
    619:619:boolean contains(java.lang.Object) -> contains
    632:632:java.util.Iterator iterator() -> iterator
    624:627:boolean remove(java.lang.Object) -> remove
    614:614:int size() -> size
com.google.common.collect.CompactHashMap$MapEntry -> com.google.common.collect.CompactHashMap$MapEntry:
    744:746:void <init>(com.google.common.collect.CompactHashMap,int) -> <init>
    752:752:java.lang.Object getKey() -> getKey
    767:772:java.lang.Object getValue() -> getValue
    778:788:java.lang.Object setValue(java.lang.Object) -> setValue
    756:759:void updateLastKnownIndex() -> updateLastKnownIndex
com.google.common.collect.CompactHashMap$ValuesView -> com.google.common.collect.CompactHashMap$ValuesView:
    831:831:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    839:839:void clear() -> clear
    844:844:java.util.Iterator iterator() -> iterator
    834:834:int size() -> size
com.google.common.collect.CompactHashSet -> com.google.common.collect.CompactHashSet:
    191:192:void <init>() -> <init>
    200:201:void <init>(int) -> <init>
    73:73:int access$000(com.google.common.collect.CompactHashSet) -> access$000
    287:340:boolean add(java.lang.Object) -> add
    221:229:int allocArrays() -> allocArrays
    635:650:void clear() -> clear
    413:434:boolean contains(java.lang.Object) -> contains
    252:259:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    245:245:java.util.Set createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    238:239:java.util.Set delegateOrNull() -> delegateOrNull
    505:505:int firstEntryIndex() -> firstEntryIndex
    509:509:int getSuccessor(int) -> getSuccessor
    277:277:int hashTableMask() -> hashTableMask
    281:281:void incrementModCount() -> incrementModCount
    206:209:void init(int) -> init
    348:349:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    580:580:boolean isEmpty() -> isEmpty
    265:265:boolean isUsingHashFloodingResistance() -> isUsingHashFloodingResistance
    523:527:java.util.Iterator iterator() -> iterator
    468:500:void moveLastEntry(int,int) -> moveLastEntry
    215:215:boolean needsAllocArrays() -> needsAllocArrays
    664:672:void readObject(java.io.ObjectInputStream) -> readObject
    442:459:boolean remove(java.lang.Object) -> remove
    370:371:void resizeEntries(int) -> resizeEntries
    354:360:void resizeMeMaybe(int) -> resizeMeMaybe
    376:407:int resizeTable(int,int,int,int) -> resizeTable
    270:272:void setHashTableMask(int) -> setHashTableMask
    574:575:int size() -> size
    585:589:java.lang.Object[] toArray() -> toArray
    595:604:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    655:658:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashSet$1 -> com.google.common.collect.CompactHashSet$1:
    527:530:void <init>(com.google.common.collect.CompactHashSet) -> <init>
    565:566:void checkForConcurrentModification() -> checkForConcurrentModification
    534:534:boolean hasNext() -> hasNext
    561:561:void incrementExpectedModCount() -> incrementExpectedModCount
    540:546:java.lang.Object next() -> next
    552:557:void remove() -> remove
com.google.common.collect.CompactHashing -> com.google.common.collect.CompactHashing:
    77:85:java.lang.Object createTable(int) -> createTable
    153:179:int remove(java.lang.Object,java.lang.Object,int,java.lang.Object,int[],java.lang.Object[],java.lang.Object[]) -> remove
    90:95:void tableClear(java.lang.Object) -> tableClear
    100:105:int tableGet(java.lang.Object,int) -> tableGet
    110:115:void tableSet(java.lang.Object,int,int) -> tableSet
    70:70:int tableSize(int) -> tableSize
com.google.common.collect.CompactLinkedHashMap -> com.google.common.collect.CompactLinkedHashMap:
    91:91:void <init>() -> <init>
    95:95:void <init>(int) -> <init>
    99:100:void <init>(int,boolean) -> <init>
    172:178:void accessEntry(int) -> accessEntry
    208:208:int adjustAfterRemove(int,int) -> adjustAfterRemove
    112:113:int allocArrays() -> allocArrays
    213:221:void clear() -> clear
    125:126:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    53:53:com.google.common.collect.CompactLinkedHashMap create() -> create
    119:119:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    66:66:com.google.common.collect.CompactLinkedHashMap createWithExpectedSize(int) -> createWithExpectedSize
    203:203:int firstEntryIndex() -> firstEntryIndex
    131:131:int getPredecessor(int) -> getPredecessor
    136:136:int getSuccessor(int) -> getSuccessor
    105:107:void init(int) -> init
    165:167:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    184:192:void moveLastEntry(int,int) -> moveLastEntry
    197:198:void resizeEntries(int) -> resizeEntries
    146:146:void setPredecessor(int,int) -> setPredecessor
    151:159:void setSucceeds(int,int) -> setSucceeds
    141:141:void setSuccessor(int,int) -> setSuccessor
com.google.common.collect.CompactLinkedHashSet -> com.google.common.collect.CompactLinkedHashSet:
    121:121:void <init>() -> <init>
    125:125:void <init>(int) -> <init>
    218:218:int adjustAfterRemove(int,int) -> adjustAfterRemove
    137:139:int allocArrays() -> allocArrays
    233:242:void clear() -> clear
    146:148:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    93:93:com.google.common.collect.CompactLinkedHashSet createWithExpectedSize(int) -> createWithExpectedSize
    213:213:int firstEntryIndex() -> firstEntryIndex
    153:153:int getPredecessor(int) -> getPredecessor
    158:158:int getSuccessor(int) -> getSuccessor
    130:132:void init(int) -> init
    185:187:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    192:201:void moveLastEntry(int,int) -> moveLastEntry
    206:208:void resizeEntries(int) -> resizeEntries
    166:166:void setPredecessor(int,int) -> setPredecessor
    171:179:void setSucceeds(int,int) -> setSucceeds
    162:162:void setSuccessor(int,int) -> setSuccessor
    223:223:java.lang.Object[] toArray() -> toArray
    228:228:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ComparatorOrdering -> com.google.common.collect.ComparatorOrdering:
    31:32:void <init>(java.util.Comparator) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    45:47:boolean equals(java.lang.Object) -> equals
    54:54:int hashCode() -> hashCode
    59:59:java.lang.String toString() -> toString
com.google.common.collect.Cut -> com.google.common.collect.Cut:
    38:39:void <init>(java.lang.Comparable) -> <init>
    215:215:com.google.common.collect.Cut aboveAll() -> aboveAll
    383:383:com.google.common.collect.Cut aboveValue(java.lang.Comparable) -> aboveValue
    114:114:com.google.common.collect.Cut belowAll() -> belowAll
    300:300:com.google.common.collect.Cut belowValue(java.lang.Comparable) -> belowValue
    34:34:int compareTo(java.lang.Object) -> compareTo
    71:82:int compareTo(com.google.common.collect.Cut) -> compareTo
    86:86:java.lang.Comparable endpoint() -> endpoint
    92:96:boolean equals(java.lang.Object) -> equals
com.google.common.collect.Cut$AboveAll -> com.google.common.collect.Cut$AboveAll:
    219:219:void <clinit>() -> <clinit>
    222:222:void <init>() -> <init>
    218:218:com.google.common.collect.Cut$AboveAll access$100() -> access$100
    218:218:int compareTo(java.lang.Object) -> compareTo
    259:259:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    264:264:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    227:227:java.lang.Comparable endpoint() -> endpoint
    284:284:int hashCode() -> hashCode
    293:293:java.lang.Object readResolve() -> readResolve
com.google.common.collect.Cut$AboveValue -> com.google.common.collect.Cut$AboveValue:
    388:388:void <init>(java.lang.Comparable) -> <init>
    434:434:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    439:439:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    460:460:int hashCode() -> hashCode
    393:393:boolean isLessThan(java.lang.Comparable) -> isLessThan
    465:465:java.lang.String toString() -> toString
com.google.common.collect.Cut$BelowAll -> com.google.common.collect.Cut$BelowAll:
    120:120:void <clinit>() -> <clinit>
    123:123:void <init>() -> <init>
    119:119:com.google.common.collect.Cut$BelowAll access$000() -> access$000
    119:119:int compareTo(java.lang.Object) -> compareTo
    160:160:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    165:165:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    128:128:java.lang.Comparable endpoint() -> endpoint
    194:194:int hashCode() -> hashCode
    203:203:java.lang.Object readResolve() -> readResolve
com.google.common.collect.Cut$BelowValue -> com.google.common.collect.Cut$BelowValue:
    305:305:void <init>(java.lang.Comparable) -> <init>
    351:351:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    356:356:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    371:371:int hashCode() -> hashCode
    310:310:boolean isLessThan(java.lang.Comparable) -> isLessThan
    376:376:java.lang.String toString() -> toString
com.google.common.collect.EmptyImmutableListMultimap -> com.google.common.collect.EmptyImmutableListMultimap:
    28:28:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    35:35:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    53:53:void <init>() -> <init>
    87:87:boolean add(java.lang.Object) -> add
    104:104:boolean addAll(java.util.Collection) -> addAll
    115:115:void clear() -> clear
    81:81:boolean contains(java.lang.Object) -> contains
    98:98:boolean containsAll(java.util.Collection) -> containsAll
    76:76:boolean isEmpty() -> isEmpty
    60:60:java.util.Iterator iterator() -> iterator
    93:93:boolean remove(java.lang.Object) -> remove
    71:71:boolean removeAll(java.util.Collection) -> removeAll
    110:110:boolean retainAll(java.util.Collection) -> retainAll
    65:65:int size() -> size
    120:120:java.lang.Object[] toArray() -> toArray
    126:126:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ForwardingConcurrentMap -> com.google.common.collect.ForwardingConcurrentMap:
    43:43:void <init>() -> <init>
    51:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    57:57:boolean remove(java.lang.Object,java.lang.Object) -> remove
    63:63:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    69:69:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
com.google.common.collect.ForwardingMap -> com.google.common.collect.ForwardingMap:
    62:62:void <init>() -> <init>
    85:85:void clear() -> clear
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    95:95:boolean containsValue(java.lang.Object) -> containsValue
    126:126:java.util.Set entrySet() -> entrySet
    131:131:boolean equals(java.lang.Object) -> equals
    100:100:java.lang.Object get(java.lang.Object) -> get
    136:136:int hashCode() -> hashCode
    74:74:boolean isEmpty() -> isEmpty
    116:116:java.util.Set keySet() -> keySet
    106:106:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    111:111:void putAll(java.util.Map) -> putAll
    80:80:java.lang.Object remove(java.lang.Object) -> remove
    69:69:int size() -> size
    303:303:java.lang.String standardToString() -> standardToString
    121:121:java.util.Collection values() -> values
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    50:50:void <init>() -> <init>
    63:63:java.lang.String toString() -> toString
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    53:53:void <init>() -> <init>
    60:60:boolean equals(java.lang.Object) -> equals
    65:65:int hashCode() -> hashCode
com.google.common.collect.ForwardingSortedSet -> com.google.common.collect.ForwardingSortedSet:
    58:58:void <init>() -> <init>
    65:65:java.util.Comparator comparator() -> comparator
    70:70:java.lang.Object first() -> first
    75:75:java.util.SortedSet headSet(java.lang.Object) -> headSet
    80:80:java.lang.Object last() -> last
    85:85:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    90:90:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Hashing -> com.google.common.collect.Hashing:
    62:63:int closedTableSize(int,double) -> closedTableSize
    50:50:int smear(int) -> smear
    54:54:int smearedHash(java.lang.Object) -> smearedHash
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
    174:174:void <clinit>() -> <clinit>
    168:168:void <init>() -> <init>
    235:235:boolean add(java.lang.Object) -> add
    261:261:boolean addAll(java.util.Collection) -> addAll
    313:313:com.google.common.collect.ImmutableList asList() -> asList
    299:299:void clear() -> clear
    330:331:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    219:219:int internalArrayEnd() -> internalArrayEnd
    211:211:int internalArrayStart() -> internalArrayStart
    161:161:java.util.Iterator iterator() -> iterator
    248:248:boolean remove(java.lang.Object) -> remove
    274:274:boolean removeAll(java.util.Collection) -> removeAll
    287:287:boolean retainAll(java.util.Collection) -> retainAll
    178:178:java.lang.Object[] toArray() -> toArray
    184:196:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    338:338:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder -> com.google.common.collect.ImmutableCollection$ArrayBasedBuilder:
    449:452:void <init>(int) -> <init>
    474:476:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    483:486:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    461:467:void getReadyToExpandTo(int) -> getReadyToExpandTo
com.google.common.collect.ImmutableCollection$Builder -> com.google.common.collect.ImmutableCollection$Builder:
    366:366:void <init>() -> <init>
    410:411:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    352:357:int expandedCapacity(int,int) -> expandedCapacity
com.google.common.collect.ImmutableEntry -> com.google.common.collect.ImmutableEntry:
    29:31:void <init>(java.lang.Object,java.lang.Object) -> <init>
    37:37:java.lang.Object getKey() -> getKey
    43:43:java.lang.Object getValue() -> getValue
    48:48:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    372:372:void <clinit>() -> <clinit>
    346:346:void <init>() -> <init>
    514:514:void add(int,java.lang.Object) -> add
    489:489:boolean addAll(int,java.util.Collection) -> addAll
    335:335:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> asImmutableList
    341:343:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> asImmutableList
    671:671:com.google.common.collect.ImmutableList$Builder builder() -> builder
    326:326:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    401:401:boolean contains(java.lang.Object) -> contains
    543:545:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    238:243:com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    271:273:com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    623:623:boolean equals(java.lang.Object) -> equals
    629:631:int hashCode() -> hashCode
    391:391:int indexOf(java.lang.Object) -> indexOf
    55:55:java.util.Iterator iterator() -> iterator
    352:352:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    396:396:int lastIndexOf(java.lang.Object) -> lastIndexOf
    55:55:java.util.ListIterator listIterator() -> listIterator
    55:55:java.util.ListIterator listIterator(int) -> listIterator
    357:357:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    363:367:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    67:67:com.google.common.collect.ImmutableList of() -> of
    78:78:com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    658:658:void readObject(java.io.ObjectInputStream) -> readObject
    527:527:java.lang.Object remove(int) -> remove
    558:558:com.google.common.collect.ImmutableList reverse() -> reverse
    502:502:java.lang.Object set(int,java.lang.Object) -> set
    316:321:com.google.common.collect.ImmutableList sortedCopyOf(java.util.Comparator,java.lang.Iterable) -> sortedCopyOf
    55:55:java.util.List subList(int,int) -> subList
    413:420:com.google.common.collect.ImmutableList subList(int,int) -> subList
    429:429:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    663:663:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableList$Builder -> com.google.common.collect.ImmutableList$Builder:
    718:718:void <init>() -> <init>
    722:722:void <init>(int) -> <init>
    712:712:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    735:735:com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    786:787:com.google.common.collect.ImmutableList build() -> build
com.google.common.collect.ImmutableList$Itr -> com.google.common.collect.ImmutableList$Itr:
    379:380:void <init>(com.google.common.collect.ImmutableList,int) -> <init>
    385:385:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableList$ReverseImmutableList -> com.google.common.collect.ImmutableList$ReverseImmutableList:
    564:565:void <init>(com.google.common.collect.ImmutableList) -> <init>
    583:583:boolean contains(java.lang.Object) -> contains
    606:607:java.lang.Object get(int) -> get
    588:589:int indexOf(java.lang.Object) -> indexOf
    617:617:boolean isPartialView() -> isPartialView
    594:595:int lastIndexOf(java.lang.Object) -> lastIndexOf
    578:578:com.google.common.collect.ImmutableList reverse() -> reverse
    569:569:int reverseIndex(int) -> reverseIndex
    573:573:int reversePosition(int) -> reversePosition
    612:612:int size() -> size
    561:561:java.util.List subList(int,int) -> subList
    600:601:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableList$SerializedForm -> com.google.common.collect.ImmutableList$SerializedForm:
    646:647:void <init>(java.lang.Object[]) -> <init>
    651:651:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList$SubList -> com.google.common.collect.ImmutableList$SubList:
    436:438:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    463:464:java.lang.Object get(int) -> get
    448:448:java.lang.Object[] internalArray() -> internalArray
    458:458:int internalArrayEnd() -> internalArrayEnd
    453:453:int internalArrayStart() -> internalArrayStart
    443:443:int size() -> size
    432:432:java.util.List subList(int,int) -> subList
    469:470:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableListMultimap -> com.google.common.collect.ImmutableListMultimap:
    294:294:void <init>(com.google.common.collect.ImmutableMap,int) -> <init>
    110:110:com.google.common.collect.ImmutableListMultimap$Builder builder() -> builder
    270:290:com.google.common.collect.ImmutableListMultimap fromMapEntries(java.util.Collection,java.util.Comparator) -> fromMapEntries
    45:45:com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    45:45:java.util.Collection get(java.lang.Object) -> get
    307:308:com.google.common.collect.ImmutableList get(java.lang.Object) -> get
    53:53:com.google.common.collect.ImmutableListMultimap of() -> of
    58:60:com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object) -> of
    376:407:void readObject(java.io.ObjectInputStream) -> readObject
    45:45:com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    45:45:java.util.Collection removeAll(java.lang.Object) -> removeAll
    348:348:com.google.common.collect.ImmutableList removeAll(java.lang.Object) -> removeAll
    370:371:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.ImmutableListMultimap$Builder -> com.google.common.collect.ImmutableListMultimap$Builder:
    137:137:void <init>() -> <init>
    219:219:com.google.common.collect.ImmutableListMultimap build() -> build
    142:142:com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableMap -> com.google.common.collect.ImmutableMap:
    408:408:void <clinit>() -> <clinit>
    440:440:void <init>() -> <init>
    149:149:com.google.common.collect.ImmutableMap$Builder builder() -> builder
    489:489:void clear() -> clear
    499:499:boolean containsKey(java.lang.Object) -> containsKey
    504:504:boolean containsValue(java.lang.Object) -> containsValue
    378:385:com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    400:405:com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable) -> copyOf
    54:54:java.util.Set entrySet() -> entrySet
    536:537:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    685:685:boolean equals(java.lang.Object) -> equals
    524:524:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    692:692:int hashCode() -> hashCode
    494:494:boolean isEmpty() -> isEmpty
    54:54:java.util.Set keySet() -> keySet
    550:551:com.google.common.collect.ImmutableSet keySet() -> keySet
    66:66:com.google.common.collect.ImmutableMap of() -> of
    452:452:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    477:477:void putAll(java.util.Map) -> putAll
    465:465:java.lang.Object remove(java.lang.Object) -> remove
    701:701:java.lang.String toString() -> toString
    54:54:java.util.Collection values() -> values
    584:585:com.google.common.collect.ImmutableCollection values() -> values
    788:788:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMap$Builder -> com.google.common.collect.ImmutableMap$Builder:
    224:224:void <init>() -> <init>
    228:231:void <init>(int) -> <init>
    339:341:com.google.common.collect.ImmutableMap build() -> build
    235:241:void ensureCapacity(int) -> ensureCapacity
    251:255:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    267:267:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    291:295:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    345:359:void sortEntries() -> sortEntries
com.google.common.collect.ImmutableMap$SerializedForm -> com.google.common.collect.ImmutableMap$SerializedForm:
    720:731:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    761:769:java.lang.Object legacyReadResolve() -> legacyReadResolve
    776:776:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    740:756:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapEntrySet -> com.google.common.collect.ImmutableMapEntrySet:
    68:68:void <init>() -> <init>
    79:82:boolean contains(java.lang.Object) -> contains
    100:100:int hashCode() -> hashCode
    95:95:boolean isHashCodeFast() -> isHashCodeFast
    74:74:int size() -> size
    106:106:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm -> com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm:
    113:114:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    118:118:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultimap -> com.google.common.collect.ImmutableMultimap:
    343:345:void <init>(com.google.common.collect.ImmutableMap,int) -> <init>
    66:66:java.util.Map asMap() -> asMap
    506:506:com.google.common.collect.ImmutableMap asMap() -> asMap
    385:385:void clear() -> clear
    66:66:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    470:470:boolean containsKey(java.lang.Object) -> containsKey
    511:511:java.util.Map createAsMap() -> createAsMap
    66:66:java.util.Collection createEntries() -> createEntries
    522:522:com.google.common.collect.ImmutableCollection createEntries() -> createEntries
    496:496:java.util.Set createKeySet() -> createKeySet
    66:66:java.util.Collection entries() -> entries
    517:517:com.google.common.collect.ImmutableCollection entries() -> entries
    66:66:java.util.Iterator entryIterator() -> entryIterator
    561:561:com.google.common.collect.UnmodifiableIterator entryIterator() -> entryIterator
    66:66:boolean equals(java.lang.Object) -> equals
    66:66:java.util.Collection get(java.lang.Object) -> get
    66:66:int hashCode() -> hashCode
    66:66:boolean isEmpty() -> isEmpty
    66:66:java.util.Set keySet() -> keySet
    491:491:com.google.common.collect.ImmutableSet keySet() -> keySet
    453:453:boolean remove(java.lang.Object,java.lang.Object) -> remove
    66:66:java.util.Collection removeAll(java.lang.Object) -> removeAll
    360:360:com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    480:480:int size() -> size
    66:66:java.lang.String toString() -> toString
com.google.common.collect.ImmutableMultimap$1 -> com.google.common.collect.ImmutableMultimap$1:
    561:565:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    569:569:boolean hasNext() -> hasNext
    561:561:java.lang.Object next() -> next
    574:579:java.util.Map$Entry next() -> next
com.google.common.collect.ImmutableMultimap$Builder -> com.google.common.collect.ImmutableMultimap$Builder:
    149:150:void <init>() -> <init>
    286:290:com.google.common.collect.ImmutableMultimap build() -> build
    154:154:java.util.Collection newMutableValueCollection() -> newMutableValueCollection
    160:165:com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableMultimap$EntryCollection -> com.google.common.collect.ImmutableMultimap$EntryCollection:
    528:529:void <init>(com.google.common.collect.ImmutableMultimap) -> <init>
    549:551:boolean contains(java.lang.Object) -> contains
    525:525:java.util.Iterator iterator() -> iterator
    534:534:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    544:544:int size() -> size
com.google.common.collect.ImmutableMultimap$FieldSettersHolder -> com.google.common.collect.ImmutableMultimap$FieldSettersHolder:
    337:340:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableMultiset -> com.google.common.collect.ImmutableMultiset:
    182:182:void <init>() -> <init>
    232:232:int add(java.lang.Object,int) -> add
    213:214:com.google.common.collect.ImmutableList asList() -> asList
    219:219:boolean contains(java.lang.Object) -> contains
    277:279:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    146:156:com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable) -> copyOf
    312:312:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    48:48:java.util.Set elementSet() -> elementSet
    48:48:java.util.Set entrySet() -> entrySet
    307:308:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    286:286:boolean equals(java.lang.Object) -> equals
    291:291:int hashCode() -> hashCode
    48:48:java.util.Iterator iterator() -> iterator
    186:187:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    55:55:com.google.common.collect.ImmutableMultiset of() -> of
    245:245:int remove(java.lang.Object,int) -> remove
    271:271:boolean setCount(java.lang.Object,int,int) -> setCount
    296:296:java.lang.String toString() -> toString
com.google.common.collect.ImmutableMultiset$1 -> com.google.common.collect.ImmutableMultiset$1:
    187:187:void <init>(com.google.common.collect.ImmutableMultiset,java.util.Iterator) -> <init>
    193:193:boolean hasNext() -> hasNext
    198:204:java.lang.Object next() -> next
com.google.common.collect.ImmutableMultiset$Builder -> com.google.common.collect.ImmutableMultiset$Builder:
    412:429:void <init>(int) -> <init>
    405:405:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    447:447:com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    531:547:com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    480:486:com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    588:599:com.google.common.collect.ImmutableMultiset build() -> build
    573:576:com.google.common.collect.ObjectCountHashMap tryGetMap(java.lang.Iterable) -> tryGetMap
com.google.common.collect.ImmutableMultiset$EntrySet -> com.google.common.collect.ImmutableMultiset$EntrySet:
    318:318:void <init>(com.google.common.collect.ImmutableMultiset) -> <init>
    318:318:void <init>(com.google.common.collect.ImmutableMultiset,com.google.common.collect.ImmutableMultiset$1) -> <init>
    336:342:boolean contains(java.lang.Object) -> contains
    317:317:java.lang.Object get(int) -> get
    326:326:com.google.common.collect.Multiset$Entry get(int) -> get
    349:349:int hashCode() -> hashCode
    321:321:boolean isPartialView() -> isPartialView
    331:331:int size() -> size
    355:355:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm -> com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm:
    365:366:void <init>(com.google.common.collect.ImmutableMultiset) -> <init>
    370:370:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultisetGwtSerializationDependencies -> com.google.common.collect.ImmutableMultisetGwtSerializationDependencies:
    40:40:void <init>() -> <init>
com.google.common.collect.ImmutableSet -> com.google.common.collect.ImmutableSet:
    310:310:void <init>() -> <init>
    48:48:boolean access$000(int,int) -> access$000
    48:48:com.google.common.collect.ImmutableSet access$100(int,java.lang.Object[]) -> access$100
    344:345:com.google.common.collect.ImmutableList asList() -> asList
    383:383:com.google.common.collect.ImmutableSet$Builder builder() -> builder
    210:222:int chooseTableSize(int) -> chooseTableSize
    144:186:com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> construct
    300:306:com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    349:349:com.google.common.collect.ImmutableList createAsList() -> createAsList
    321:327:boolean equals(java.lang.Object) -> equals
    332:332:int hashCode() -> hashCode
    46:46:java.util.Iterator iterator() -> iterator
    55:55:com.google.common.collect.ImmutableSet of() -> of
    64:64:com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    73:73:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object) -> of
    375:375:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSet$Builder -> com.google.common.collect.ImmutableSet$Builder:
    431:431:void <init>() -> <init>
    422:422:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    451:457:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    473:478:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    484:494:void addDeduping(java.lang.Object) -> addDeduping
    546:566:com.google.common.collect.ImmutableSet build() -> build
com.google.common.collect.ImmutableSet$SerializedForm -> com.google.common.collect.ImmutableSet$SerializedForm:
    362:363:void <init>(java.lang.Object[]) -> <init>
    367:367:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMap -> com.google.common.collect.ImmutableSortedMap:
    61:65:void <clinit>() -> <clinit>
    548:548:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList) -> <init>
    554:557:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSortedMap) -> <init>
    54:54:com.google.common.collect.ImmutableSortedMap access$000(java.util.Comparator,java.lang.Object,java.lang.Object) -> access$000
    54:54:com.google.common.collect.RegularImmutableSortedSet access$100(com.google.common.collect.ImmutableSortedMap) -> access$100
    54:54:com.google.common.collect.ImmutableList access$200(com.google.common.collect.ImmutableSortedMap) -> access$200
    798:798:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    803:803:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    651:651:java.util.Comparator comparator() -> comparator
    616:616:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    627:627:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    641:641:com.google.common.collect.ImmutableCollection createValues() -> createValues
    53:53:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    876:876:com.google.common.collect.ImmutableSortedSet descendingKeySet() -> descendingKeySet
    53:53:java.util.NavigableMap descendingMap() -> descendingMap
    856:863:com.google.common.collect.ImmutableSortedMap descendingMap() -> descendingMap
    68:72:com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> emptyMap
    53:53:java.util.Set entrySet() -> entrySet
    579:579:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    818:818:java.util.Map$Entry firstEntry() -> firstEntry
    656:656:java.lang.Object firstKey() -> firstKey
    788:788:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    793:793:java.lang.Object floorKey(java.lang.Object) -> floorKey
    567:568:java.lang.Object get(java.lang.Object) -> get
    665:671:com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> getSubMap
    53:53:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    53:53:java.util.SortedMap headMap(java.lang.Object) -> headMap
    686:686:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    702:702:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    808:808:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    813:813:java.lang.Object higherKey(java.lang.Object) -> higherKey
    573:573:boolean isPartialView() -> isPartialView
    53:53:com.google.common.collect.ImmutableSet keySet() -> keySet
    53:53:java.util.Set keySet() -> keySet
    622:622:com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    823:823:java.util.Map$Entry lastEntry() -> lastEntry
    661:661:java.lang.Object lastKey() -> lastKey
    778:778:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    783:783:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    53:53:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    871:871:com.google.common.collect.ImmutableSortedSet navigableKeySet() -> navigableKeySet
    81:81:com.google.common.collect.ImmutableSortedMap of() -> of
    91:93:com.google.common.collect.ImmutableSortedMap of(java.util.Comparator,java.lang.Object,java.lang.Object) -> of
    836:836:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    849:849:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    562:562:int size() -> size
    53:53:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    717:717:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    736:743:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    757:757:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    773:773:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.Collection values() -> values
    636:636:com.google.common.collect.ImmutableCollection values() -> values
    902:902:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedMap$1EntrySet -> com.google.common.collect.ImmutableSortedMap$1EntrySet:
    584:584:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    592:592:com.google.common.collect.ImmutableList createAsList() -> createAsList
    584:584:java.util.Iterator iterator() -> iterator
    587:587:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    613:613:com.google.common.collect.ImmutableMap map() -> map
com.google.common.collect.ImmutableSortedMap$1EntrySet$1 -> com.google.common.collect.ImmutableSortedMap$1EntrySet$1:
    592:592:void <init>(com.google.common.collect.ImmutableSortedMap$1EntrySet) -> <init>
    592:592:java.lang.Object get(int) -> get
    595:596:java.util.Map$Entry get(int) -> get
    606:606:int size() -> size
com.google.common.collect.ImmutableSortedMap$Builder -> com.google.common.collect.ImmutableSortedMap$Builder:
    411:411:void <init>(java.util.Comparator) -> <init>
    414:417:void <init>(java.util.Comparator,int) -> <init>
    400:400:com.google.common.collect.ImmutableMap build() -> build
    510:538:com.google.common.collect.ImmutableSortedMap build() -> build
    421:424:void ensureCapacity(int) -> ensureCapacity
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    436:440:com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object) -> put
    454:454:com.google.common.collect.ImmutableSortedMap$Builder put(java.util.Map$Entry) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    484:484:com.google.common.collect.ImmutableSortedMap$Builder putAll(java.lang.Iterable) -> putAll
com.google.common.collect.ImmutableSortedMap$SerializedForm -> com.google.common.collect.ImmutableSortedMap$SerializedForm:
    888:889:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    884:884:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    894:894:com.google.common.collect.ImmutableSortedMap$Builder makeBuilder(int) -> makeBuilder
com.google.common.collect.ImmutableSortedMapFauxverideShim -> com.google.common.collect.ImmutableSortedMapFauxverideShim:
    29:29:void <init>() -> <init>
com.google.common.collect.ImmutableSortedSet -> com.google.common.collect.ImmutableSortedSet:
    513:514:void <init>(java.util.Comparator) -> <init>
    627:627:java.lang.Object ceiling(java.lang.Object) -> ceiling
    524:524:java.util.Comparator comparator() -> comparator
    342:361:com.google.common.collect.ImmutableSortedSet construct(java.util.Comparator,int,java.lang.Object[]) -> construct
    57:57:java.util.Iterator descendingIterator() -> descendingIterator
    57:57:java.util.NavigableSet descendingSet() -> descendingSet
    686:689:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    62:65:com.google.common.collect.RegularImmutableSortedSet emptySet(java.util.Comparator) -> emptySet
    639:639:java.lang.Object first() -> first
    621:621:java.lang.Object floor(java.lang.Object) -> floor
    57:57:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    57:57:java.util.SortedSet headSet(java.lang.Object) -> headSet
    542:542:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    548:548:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    634:634:java.lang.Object higher(java.lang.Object) -> higher
    57:57:java.util.Iterator iterator() -> iterator
    644:644:java.lang.Object last() -> last
    615:615:java.lang.Object lower(java.lang.Object) -> lower
    659:659:java.lang.Object pollFirst() -> pollFirst
    674:674:java.lang.Object pollLast() -> pollLast
    732:732:void readObject(java.io.ObjectInputStream) -> readObject
    57:57:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    565:565:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    573:576:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    57:57:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    591:591:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    597:597:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    499:499:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    508:508:int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object) -> unsafeCompare
    737:737:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedSet$Builder -> com.google.common.collect.ImmutableSortedSet$Builder:
    418:419:void <init>(java.util.Comparator) -> <init>
    411:411:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    411:411:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    434:434:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object) -> add
    449:449:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object[]) -> add
    411:411:com.google.common.collect.ImmutableSet build() -> build
    490:493:com.google.common.collect.ImmutableSortedSet build() -> build
com.google.common.collect.ImmutableSortedSet$SerializedForm -> com.google.common.collect.ImmutableSortedSet$SerializedForm:
    718:720:void <init>(java.util.Comparator,java.lang.Object[]) -> <init>
    725:725:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedSetFauxverideShim -> com.google.common.collect.ImmutableSortedSetFauxverideShim:
    39:39:void <init>() -> <init>
com.google.common.collect.IndexedImmutableSet -> com.google.common.collect.IndexedImmutableSet:
    23:23:void <init>() -> <init>
    34:34:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    39:39:com.google.common.collect.ImmutableList createAsList() -> createAsList
    22:22:java.util.Iterator iterator() -> iterator
    28:28:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
com.google.common.collect.IndexedImmutableSet$1 -> com.google.common.collect.IndexedImmutableSet$1:
    39:39:void <init>(com.google.common.collect.IndexedImmutableSet) -> <init>
    42:42:java.lang.Object get(int) -> get
    47:47:boolean isPartialView() -> isPartialView
    52:52:int size() -> size
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    342:344:java.util.Collection castOrCopyToCollection(java.lang.Iterable) -> castOrCopyToCollection
    790:790:java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    333:333:java.lang.Object[] toArray(java.lang.Iterable) -> toArray
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    352:356:boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    1388:1388:java.util.ListIterator cast(java.util.Iterator) -> cast
    989:992:void clear(java.util.Iterator) -> clear
    263:273:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    77:77:com.google.common.collect.UnmodifiableIterator emptyIterator() -> emptyIterator
    88:88:com.google.common.collect.UnmodifiableListIterator emptyListIterator() -> emptyListIterator
    121:121:java.util.Iterator emptyModifiableIterator() -> emptyModifiableIterator
    850:850:java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    1201:1208:com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> peekingIterator
    976:978:java.lang.Object pollNext(java.util.Iterator) -> pollNext
    198:202:boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    1056:1056:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    163:167:int size(java.util.Iterator) -> size
    782:783:java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function) -> transform
    127:133:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
com.google.common.collect.Iterators$1 -> com.google.common.collect.Iterators$1:
    133:133:void <init>(java.util.Iterator) -> <init>
    136:136:boolean hasNext() -> hasNext
    141:141:java.lang.Object next() -> next
com.google.common.collect.Iterators$6 -> com.google.common.collect.Iterators$6:
    783:783:void <init>(java.util.Iterator,com.google.common.base.Function) -> <init>
    786:786:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Iterators$9 -> com.google.common.collect.Iterators$9:
    1056:1056:void <init>(java.lang.Object) -> <init>
    1061:1061:boolean hasNext() -> hasNext
    1066:1070:java.lang.Object next() -> next
com.google.common.collect.Iterators$ArrayItr -> com.google.common.collect.Iterators$ArrayItr:
    1033:1033:void <clinit>() -> <clinit>
    1039:1041:void <init>(java.lang.Object[],int,int,int) -> <init>
    1046:1046:java.lang.Object get(int) -> get
com.google.common.collect.Iterators$EmptyModifiableIterator -> com.google.common.collect.Iterators$EmptyModifiableIterator:
    95:96:void <clinit>() -> <clinit>
    95:95:void <init>(java.lang.String,int) -> <init>
    105:105:java.lang.Object next() -> next
    110:110:void remove() -> remove
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String) -> valueOf
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator[] values() -> values
com.google.common.collect.Iterators$PeekingImpl -> com.google.common.collect.Iterators$PeekingImpl:
    1128:1129:void <init>(java.util.Iterator) -> <init>
    1134:1134:boolean hasNext() -> hasNext
    1139:1144:java.lang.Object next() -> next
    1156:1160:java.lang.Object peek() -> peek
    1150:1151:void remove() -> remove
com.google.common.collect.LinkedHashMultimap -> com.google.common.collect.LinkedHashMultimap:
    77:77:void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$200
    77:77:com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap) -> access$300
    77:77:void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$400
    77:77:void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$500
    77:77:void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$600
    76:76:java.util.Map asMap() -> asMap
    542:543:void clear() -> clear
    76:76:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    76:76:boolean containsKey(java.lang.Object) -> containsKey
    76:76:java.util.Collection createCollection() -> createCollection
    236:236:java.util.Set createCollection() -> createCollection
    250:250:java.util.Collection createCollection(java.lang.Object) -> createCollection
    139:139:void deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> deleteFromMultimap
    135:135:void deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> deleteFromValueSet
    76:76:java.util.Collection entries() -> entries
    279:279:java.util.Set entries() -> entries
    506:506:java.util.Iterator entryIterator() -> entryIterator
    76:76:boolean equals(java.lang.Object) -> equals
    76:76:java.util.Set get(java.lang.Object) -> get
    76:76:int hashCode() -> hashCode
    76:76:boolean isEmpty() -> isEmpty
    294:294:java.util.Set keySet() -> keySet
    76:76:boolean put(java.lang.Object,java.lang.Object) -> put
    566:585:void readObject(java.io.ObjectInputStream) -> readObject
    76:76:boolean remove(java.lang.Object,java.lang.Object) -> remove
    76:76:java.util.Set removeAll(java.lang.Object) -> removeAll
    76:76:int size() -> size
    130:131:void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> succeedsInMultimap
    125:126:void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> succeedsInValueSet
    76:76:java.lang.String toString() -> toString
    552:560:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.LinkedHashMultimap$1 -> com.google.common.collect.LinkedHashMultimap$1:
    506:507:void <init>(com.google.common.collect.LinkedHashMultimap) -> <init>
    512:512:boolean hasNext() -> hasNext
    506:506:java.lang.Object next() -> next
    517:522:java.util.Map$Entry next() -> next
    528:530:void remove() -> remove
com.google.common.collect.LinkedHashMultimap$ValueEntry -> com.google.common.collect.LinkedHashMultimap$ValueEntry:
    165:167:void <init>(java.lang.Object,java.lang.Object,int,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> <init>
    195:195:com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap() -> getPredecessorInMultimap
    176:176:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    199:199:com.google.common.collect.LinkedHashMultimap$ValueEntry getSuccessorInMultimap() -> getSuccessorInMultimap
    181:181:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    171:171:boolean matchesValue(java.lang.Object,int) -> matchesValue
    207:207:void setPredecessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setPredecessorInMultimap
    186:186:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    203:203:void setSuccessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setSuccessorInMultimap
    191:191:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
com.google.common.collect.LinkedHashMultimap$ValueSet -> com.google.common.collect.LinkedHashMultimap$ValueSet:
    319:336:void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,int) -> <init>
    311:311:com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$000
    311:311:int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$100
    425:442:boolean add(java.lang.Object) -> add
    491:500:void clear() -> clear
    412:416:boolean contains(java.lang.Object) -> contains
    345:345:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    350:350:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    365:365:java.util.Iterator iterator() -> iterator
    340:340:int mask() -> mask
    447:458:void rehashIfNecessary() -> rehashIfNecessary
    466:482:boolean remove(java.lang.Object) -> remove
    355:355:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    360:360:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
    407:407:int size() -> size
com.google.common.collect.LinkedHashMultimap$ValueSet$1 -> com.google.common.collect.LinkedHashMultimap$ValueSet$1:
    365:368:void <init>(com.google.common.collect.LinkedHashMultimap$ValueSet) -> <init>
    371:372:void checkForComodification() -> checkForComodification
    378:379:boolean hasNext() -> hasNext
    384:390:java.lang.Object next() -> next
    396:400:void remove() -> remove
com.google.common.collect.LinkedListMultimap -> com.google.common.collect.LinkedListMultimap:
    192:192:void <init>() -> <init>
    195:196:void <init>(int) -> <init>
    97:97:int access$000(com.google.common.collect.LinkedListMultimap) -> access$000
    97:97:com.google.common.collect.LinkedListMultimap$Node access$100(com.google.common.collect.LinkedListMultimap) -> access$100
    97:97:com.google.common.collect.LinkedListMultimap$Node access$200(com.google.common.collect.LinkedListMultimap) -> access$200
    97:97:void access$300(java.lang.Object) -> access$300
    97:97:void access$400(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$Node) -> access$400
    97:97:void access$500(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> access$500
    97:97:java.util.Map access$600(com.google.common.collect.LinkedListMultimap) -> access$600
    97:97:com.google.common.collect.LinkedListMultimap$Node access$700(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> access$700
    97:97:int access$900(com.google.common.collect.LinkedListMultimap) -> access$900
    212:252:com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> addNode
    96:96:java.util.Map asMap() -> asMap
    302:302:void checkElement(java.lang.Object) -> checkElement
    659:663:void clear() -> clear
    96:96:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    579:579:boolean containsKey(java.lang.Object) -> containsKey
    165:165:com.google.common.collect.LinkedListMultimap create() -> create
    811:811:java.util.Map createAsMap() -> createAsMap
    96:96:java.util.Collection createEntries() -> createEntries
    801:801:java.util.List createEntries() -> createEntries
    717:717:java.util.Set createKeySet() -> createKeySet
    96:96:java.util.Collection entries() -> entries
    784:784:java.util.List entries() -> entries
    806:806:java.util.Iterator entryIterator() -> entryIterator
    96:96:boolean equals(java.lang.Object) -> equals
    96:96:java.util.Collection get(java.lang.Object) -> get
    679:679:java.util.List get(java.lang.Object) -> get
    641:641:java.util.List getCopy(java.lang.Object) -> getCopy
    96:96:int hashCode() -> hashCode
    574:574:boolean isEmpty() -> isEmpty
    96:96:java.util.Set keySet() -> keySet
    599:599:boolean put(java.lang.Object,java.lang.Object) -> put
    831:839:void readObject(java.io.ObjectInputStream) -> readObject
    96:96:boolean remove(java.lang.Object,java.lang.Object) -> remove
    96:96:java.util.Collection removeAll(java.lang.Object) -> removeAll
    652:653:java.util.List removeAll(java.lang.Object) -> removeAll
    296:296:void removeAllNodes(java.lang.Object) -> removeAllNodes
    261:291:void removeNode(com.google.common.collect.LinkedListMultimap$Node) -> removeNode
    569:569:int size() -> size
    96:96:java.lang.String toString() -> toString
    821:825:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.LinkedListMultimap$1 -> com.google.common.collect.LinkedListMultimap$1:
    679:679:void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> <init>
    688:688:java.util.ListIterator listIterator(int) -> listIterator
    682:683:int size() -> size
com.google.common.collect.LinkedListMultimap$1EntriesImpl -> com.google.common.collect.LinkedListMultimap$1EntriesImpl:
    790:790:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    798:798:java.util.ListIterator listIterator(int) -> listIterator
    793:793:int size() -> size
com.google.common.collect.LinkedListMultimap$1KeySetImpl -> com.google.common.collect.LinkedListMultimap$1KeySetImpl:
    696:696:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    709:709:boolean contains(java.lang.Object) -> contains
    704:704:java.util.Iterator iterator() -> iterator
    714:714:boolean remove(java.lang.Object) -> remove
    699:699:int size() -> size
com.google.common.collect.LinkedListMultimap$DistinctKeyIterator -> com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:
    414:418:void <init>(com.google.common.collect.LinkedListMultimap) -> <init>
    414:414:void <init>(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$1) -> <init>
    421:422:void checkForConcurrentModification() -> checkForConcurrentModification
    428:429:boolean hasNext() -> hasNext
    434:441:java.lang.Object next() -> next
    446:450:void remove() -> remove
com.google.common.collect.LinkedListMultimap$KeyList -> com.google.common.collect.LinkedListMultimap$KeyList:
    142:147:void <init>(com.google.common.collect.LinkedListMultimap$Node) -> <init>
com.google.common.collect.LinkedListMultimap$Node -> com.google.common.collect.LinkedListMultimap$Node:
    114:116:void <init>(java.lang.Object,java.lang.Object) -> <init>
    121:121:java.lang.Object getKey() -> getKey
    126:126:java.lang.Object getValue() -> getValue
    131:132:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.LinkedListMultimap$NodeIterator -> com.google.common.collect.LinkedListMultimap$NodeIterator:
    312:329:void <init>(com.google.common.collect.LinkedListMultimap,int) -> <init>
    307:307:void add(java.lang.Object) -> add
    404:404:void add(java.util.Map$Entry) -> add
    333:334:void checkForConcurrentModification() -> checkForConcurrentModification
    340:341:boolean hasNext() -> hasNext
    372:373:boolean hasPrevious() -> hasPrevious
    307:307:java.lang.Object next() -> next
    347:351:com.google.common.collect.LinkedListMultimap$Node next() -> next
    389:389:int nextIndex() -> nextIndex
    307:307:java.lang.Object previous() -> previous
    379:383:com.google.common.collect.LinkedListMultimap$Node previous() -> previous
    394:394:int previousIndex() -> previousIndex
    357:367:void remove() -> remove
    307:307:void set(java.lang.Object) -> set
    399:399:void set(java.util.Map$Entry) -> set
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator -> com.google.common.collect.LinkedListMultimap$ValueForKeyIterator:
    463:466:void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> <init>
    477:494:void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object,int) -> <init>
    559:561:void add(java.lang.Object) -> add
    499:499:boolean hasNext() -> hasNext
    514:514:boolean hasPrevious() -> hasPrevious
    505:509:java.lang.Object next() -> next
    529:529:int nextIndex() -> nextIndex
    520:524:java.lang.Object previous() -> previous
    534:534:int previousIndex() -> previousIndex
    539:547:void remove() -> remove
    552:553:void set(java.lang.Object) -> set
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    148:151:int computeArrayListCapacity(int) -> computeArrayListCapacity
    953:973:boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    990:996:int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    1004:1013:int indexOfRandomAccess(java.util.List,java.lang.Object) -> indexOfRandomAccess
    1023:1029:int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
    1038:1045:int lastIndexOfRandomAccess(java.util.List,java.lang.Object) -> lastIndexOfRandomAccess
    82:82:java.util.ArrayList newArrayList() -> newArrayList
    125:129:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    141:142:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    523:525:java.util.List transform(java.util.List,com.google.common.base.Function) -> transform
com.google.common.collect.Lists$TransformingRandomAccessList -> com.google.common.collect.Lists$TransformingRandomAccessList:
    582:584:void <init>(java.util.List,com.google.common.base.Function) -> <init>
    589:589:void clear() -> clear
    594:594:java.lang.Object get(int) -> get
    614:614:boolean isEmpty() -> isEmpty
    599:599:java.util.Iterator iterator() -> iterator
    604:604:java.util.ListIterator listIterator(int) -> listIterator
    619:619:java.lang.Object remove(int) -> remove
    624:624:int size() -> size
com.google.common.collect.Lists$TransformingRandomAccessList$1 -> com.google.common.collect.Lists$TransformingRandomAccessList$1:
    604:604:void <init>(com.google.common.collect.Lists$TransformingRandomAccessList,java.util.ListIterator) -> <init>
    607:607:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.Lists$TransformingSequentialList -> com.google.common.collect.Lists$TransformingSequentialList:
    538:540:void <init>(java.util.List,com.google.common.base.Function) -> <init>
    549:549:void clear() -> clear
    559:559:java.util.ListIterator listIterator(int) -> listIterator
    554:554:int size() -> size
com.google.common.collect.Lists$TransformingSequentialList$1 -> com.google.common.collect.Lists$TransformingSequentialList$1:
    559:559:void <init>(com.google.common.collect.Lists$TransformingSequentialList,java.util.ListIterator) -> <init>
    562:562:java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    98:110:void <init>() -> <init>
    178:183:com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    188:188:int getConcurrencyLevel() -> getConcurrencyLevel
    154:154:int getInitialCapacity() -> getInitialCapacity
    129:129:com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    219:219:com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> getKeyStrength
    265:265:com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> getValueStrength
    144:149:com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    122:124:com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence) -> keyEquivalence
    280:283:java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    209:213:com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setKeyStrength
    255:259:com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setValueStrength
    292:308:java.lang.String toString() -> toString
    205:205:com.google.common.collect.MapMaker weakKeys() -> weakKeys
com.google.common.collect.MapMakerInternalMap -> com.google.common.collect.MapMakerInternalMap:
    1005:1005:void <clinit>() -> <clinit>
    160:192:void <init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper) -> <init>
    69:69:java.util.ArrayList access$900(java.util.Collection) -> access$900
    2473:2474:void clear() -> clear
    2363:2364:boolean containsKey(java.lang.Object) -> containsKey
    2378:2395:boolean containsValue(java.lang.Object) -> containsValue
    1074:1075:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    199:214:com.google.common.collect.MapMakerInternalMap create(com.google.common.collect.MapMaker) -> create
    1115:1115:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> createSegment
    2498:2499:java.util.Set entrySet() -> entrySet
    2342:2343:java.lang.Object get(java.lang.Object) -> get
    1123:1126:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1079:1080:int hash(java.lang.Object) -> hash
    2307:2320:boolean isEmpty() -> isEmpty
    1100:1100:boolean isLiveForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isLiveForTesting
    2482:2483:java.util.Set keySet() -> keySet
    2282:2282:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    1131:1131:com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int) -> newSegmentArray
    2408:2411:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2425:2426:void putAll(java.util.Map) -> putAll
    2417:2420:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    1090:1091:void reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> reclaimKey
    1084:1086:void reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    2436:2437:java.lang.Object remove(java.lang.Object) -> remove
    2446:2447:boolean remove(java.lang.Object,java.lang.Object) -> remove
    2453:2459:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    2465:2468:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1111:1111:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> segmentFor
    2329:2334:int size() -> size
    2825:2826:java.util.ArrayList toArrayList(java.util.Collection) -> toArrayList
    385:385:com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference() -> unsetWeakValueReference
    2292:2292:com.google.common.base.Equivalence valueEquivalence() -> valueEquivalence
    2287:2287:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
    2490:2491:java.util.Collection values() -> values
    2835:2839:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.MapMakerInternalMap$1 -> com.google.common.collect.MapMakerInternalMap$1:
    1006:1006:void <init>() -> <init>
    1006:1006:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1006:1006:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy -> com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:
    2866:2872:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2848:2848:java.lang.Object delegate() -> delegate
    2848:2848:java.util.Map delegate() -> delegate
    2877:2877:java.util.concurrent.ConcurrentMap delegate() -> delegate
    2903:2908:void readEntries(java.io.ObjectInputStream) -> readEntries
    2891:2897:com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) -> readMapMaker
    2881:2886:void writeMapTo(java.io.ObjectOutputStream) -> writeMapTo
com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry:
    344:347:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    357:357:int getHash() -> getHash
    352:352:java.lang.Object getKey() -> getKey
    362:362:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry:
    652:654:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    664:664:int getHash() -> getHash
    659:659:java.lang.Object getKey() -> getKey
    669:669:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$DummyInternalEntry -> com.google.common.collect.MapMakerInternalMap$DummyInternalEntry:
    976:977:void <init>() -> <init>
    987:987:int getHash() -> getHash
    992:992:java.lang.Object getKey() -> getKey
    974:974:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
    982:982:com.google.common.collect.MapMakerInternalMap$DummyInternalEntry getNext() -> getNext
    997:997:java.lang.Object getValue() -> getValue
com.google.common.collect.MapMakerInternalMap$EntryIterator -> com.google.common.collect.MapMakerInternalMap$EntryIterator:
    2675:2675:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2675:2675:java.lang.Object next() -> next
    2679:2679:java.util.Map$Entry next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> com.google.common.collect.MapMakerInternalMap$EntrySet:
    2760:2760:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2804:2804:void clear() -> clear
    2769:2779:boolean contains(java.lang.Object) -> contains
    2799:2799:boolean isEmpty() -> isEmpty
    2764:2764:java.util.Iterator iterator() -> iterator
    2784:2789:boolean remove(java.lang.Object) -> remove
    2794:2794:int size() -> size
com.google.common.collect.MapMakerInternalMap$HashIterator -> com.google.common.collect.MapMakerInternalMap$HashIterator:
    2514:2517:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2524:2539:void advance() -> advance
    2576:2587:boolean advanceTo(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> advanceTo
    2592:2592:boolean hasNext() -> hasNext
    2596:2601:com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> nextEntry
    2548:2550:boolean nextInChain() -> nextInChain
    2560:2562:boolean nextInTable() -> nextInTable
    2606:2608:void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> com.google.common.collect.MapMakerInternalMap$KeyIterator:
    2612:2612:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2616:2616:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> com.google.common.collect.MapMakerInternalMap$KeySet:
    2684:2684:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2713:2713:void clear() -> clear
    2703:2703:boolean contains(java.lang.Object) -> contains
    2698:2698:boolean isEmpty() -> isEmpty
    2688:2688:java.util.Iterator iterator() -> iterator
    2708:2708:boolean remove(java.lang.Object) -> remove
    2693:2693:int size() -> size
com.google.common.collect.MapMakerInternalMap$SafeToArraySet -> com.google.common.collect.MapMakerInternalMap$SafeToArraySet:
    2808:2808:void <init>() -> <init>
    2808:2808:void <init>(com.google.common.collect.MapMakerInternalMap$1) -> <init>
    2814:2814:java.lang.Object[] toArray() -> toArray
    2819:2819:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$Segment -> com.google.common.collect.MapMakerInternalMap$Segment:
    1205:1210:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1773:1787:void clear() -> clear
    1379:1379:void clearReferenceQueue(java.lang.ref.ReferenceQueue) -> clearReferenceQueue
    1436:1444:boolean containsKey(java.lang.Object,int) -> containsKey
    1454:1473:boolean containsValue(java.lang.Object) -> containsValue
    1235:1235:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    1354:1357:void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue) -> drainKeyReferenceQueue
    1368:1371:void drainValueReferenceQueue(java.lang.ref.ReferenceQueue) -> drainValueReferenceQueue
    1536:1599:void expand() -> expand
    1419:1431:java.lang.Object get(java.lang.Object,int) -> get
    1392:1404:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object,int) -> getEntry
    1385:1386:com.google.common.collect.MapMakerInternalMap$InternalEntry getFirst(int) -> getFirst
    1414:1414:com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int) -> getLiveEntry
    1949:1955:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1334:1334:java.lang.Object getLiveValueForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValueForTesting
    1243:1248:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    1940:1940:boolean isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isCollected
    1239:1239:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    1968:1969:void postReadCleanup() -> postReadCleanup
    1979:1979:void preWriteCleanup() -> preWriteCleanup
    1477:1530:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    1822:1843:boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry,int) -> reclaimKey
    1849:1877:boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    1692:1728:java.lang.Object remove(java.lang.Object,int) -> remove
    1732:1769:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    1805:1815:com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> removeFromChain
    1603:1646:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    1650:1687:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    1983:1983:void runCleanup() -> runCleanup
    1987:1993:void runLockedCleanup() -> runLockedCleanup
    1230:1230:void setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    1341:1346:void tryDrainReferenceQueues() -> tryDrainReferenceQueues
com.google.common.collect.MapMakerInternalMap$SerializationProxy -> com.google.common.collect.MapMakerInternalMap$SerializationProxy:
    2927:2927:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2937:2940:void readObject(java.io.ObjectInputStream) -> readObject
    2944:2944:java.lang.Object readResolve() -> readResolve
    2932:2933:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.MapMakerInternalMap$Strength -> com.google.common.collect.MapMakerInternalMap$Strength:
    244:252:void <clinit>() -> <clinit>
    244:244:void <init>(java.lang.String,int) -> <init>
    244:244:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    244:244:com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    244:244:com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
com.google.common.collect.MapMakerInternalMap$Strength$1 -> com.google.common.collect.MapMakerInternalMap$Strength$1:
    245:245:void <init>(java.lang.String,int) -> <init>
    248:248:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$Strength$2 -> com.google.common.collect.MapMakerInternalMap$Strength$2:
    252:252:void <init>(java.lang.String,int) -> <init>
    255:255:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry:
    392:395:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> <init>
    409:411:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    401:401:java.lang.Object getValue() -> getValue
    405:405:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:
    419:419:void <clinit>() -> <clinit>
    416:416:void <init>() -> <init>
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    451:451:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    423:423:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper instance() -> instance
    428:428:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    468:468:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> newEntry
    416:416:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    443:443:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    416:416:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    459:459:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,java.lang.Object) -> setValue
    433:433:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment:
    2007:2007:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1999:1999:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2018:2018:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    1999:1999:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry:
    478:481:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> <init>
    502:503:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    486:486:java.lang.Object getValue() -> getValue
    509:509:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    495:497:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:
    516:516:void <clinit>() -> <clinit>
    513:513:void <init>() -> <init>
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    547:550:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    520:520:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper instance() -> instance
    525:525:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    565:565:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> newEntry
    513:513:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    539:539:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    513:513:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    556:556:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,java.lang.Object) -> setValue
    530:530:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:
    2025:2032:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2023:2023:java.lang.ref.ReferenceQueue access$100(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment) -> access$100
    2023:2023:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2048:2048:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2083:2083:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2078:2078:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2023:2023:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$ValueIterator -> com.google.common.collect.MapMakerInternalMap$ValueIterator:
    2620:2620:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2624:2624:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$Values -> com.google.common.collect.MapMakerInternalMap$Values:
    2718:2718:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2742:2742:void clear() -> clear
    2737:2737:boolean contains(java.lang.Object) -> contains
    2732:2732:boolean isEmpty() -> isEmpty
    2722:2722:java.util.Iterator iterator() -> iterator
    2727:2727:int size() -> size
    2750:2750:java.lang.Object[] toArray() -> toArray
    2755:2755:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry:
    757:764:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> <init>
    779:781:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    770:770:java.lang.Object getValue() -> getValue
    774:774:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:
    789:789:void <clinit>() -> <clinit>
    786:786:void <init>() -> <init>
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    820:824:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    793:793:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper instance() -> instance
    798:798:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    839:839:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> newEntry
    786:786:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    812:812:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    786:786:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    830:830:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,java.lang.Object) -> setValue
    803:803:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment:
    2113:2120:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2111:2111:java.lang.ref.ReferenceQueue access$300(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment) -> access$300
    2111:2111:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2136:2136:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2146:2146:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2141:2141:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2111:2111:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry:
    849:853:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> <init>
    865:867:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    858:858:java.lang.Object getValue() -> getValue
    884:884:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    877:879:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:
    891:891:void <clinit>() -> <clinit>
    888:888:void <init>() -> <init>
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    921:928:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    895:895:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper instance() -> instance
    900:900:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    943:943:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> newEntry
    888:888:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    913:913:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    888:888:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    934:934:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,java.lang.Object) -> setValue
    905:905:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:
    2153:2160:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2151:2151:java.lang.ref.ReferenceQueue access$400(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$400
    2151:2151:java.lang.ref.ReferenceQueue access$500(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$500
    2151:2151:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2181:2181:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2217:2217:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2211:2212:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2151:2151:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl -> com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl:
    1033:1034:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    1044:1044:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1039:1039:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:
    2636:2638:void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object) -> <init>
    2654:2656:boolean equals(java.lang.Object) -> equals
    2643:2643:java.lang.Object getKey() -> getKey
    2648:2648:java.lang.Object getValue() -> getValue
    2664:2664:int hashCode() -> hashCode
    2669:2670:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    1870:1871:com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer) -> asEntryToEntryFunction
    1817:1818:com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function) -> asEntryTransformer
    844:844:java.util.Iterator asMapEntryIterator(java.util.Set,com.google.common.base.Function) -> asMapEntryIterator
    1828:1829:com.google.common.base.Function asValueToValueFunction(com.google.common.collect.Maps$EntryTransformer,java.lang.Object) -> asValueToValueFunction
    225:225:int capacity(int) -> capacity
    3484:3486:boolean equalsImpl(java.util.Map,java.lang.Object) -> equalsImpl
    1252:1252:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    103:103:com.google.common.base.Function keyFunction() -> keyFunction
    112:112:java.util.Iterator keyIterator(java.util.Iterator) -> keyIterator
    3560:3560:java.lang.Object keyOrNull(java.util.Map$Entry) -> keyOrNull
    183:183:java.util.HashMap newHashMap() -> newHashMap
    249:249:java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    3412:3414:boolean safeContainsKey(java.util.Map,java.lang.Object) -> safeContainsKey
    3399:3401:java.lang.Object safeGet(java.util.Map,java.lang.Object) -> safeGet
    3425:3427:java.lang.Object safeRemove(java.util.Map,java.lang.Object) -> safeRemove
    3493:3502:java.lang.String toStringImpl(java.util.Map) -> toStringImpl
    1678:1678:java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1852:1854:java.util.Map$Entry transformEntry(com.google.common.collect.Maps$EntryTransformer,java.util.Map$Entry) -> transformEntry
    1541:1541:java.util.Map transformValues(java.util.Map,com.google.common.base.Function) -> transformValues
    108:108:com.google.common.base.Function valueFunction() -> valueFunction
    121:121:java.util.Iterator valueIterator(java.util.Iterator) -> valueIterator
com.google.common.collect.Maps$1 -> com.google.common.collect.Maps$1:
    112:112:void <init>(java.util.Iterator) -> <init>
    112:112:java.lang.Object transform(java.lang.Object) -> transform
    115:115:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$10 -> com.google.common.collect.Maps$10:
    1829:1829:void <init>(com.google.common.collect.Maps$EntryTransformer,java.lang.Object) -> <init>
    1832:1832:java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$12 -> com.google.common.collect.Maps$12:
    1854:1854:void <init>(java.util.Map$Entry,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1857:1857:java.lang.Object getKey() -> getKey
    1862:1862:java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$13 -> com.google.common.collect.Maps$13:
    1871:1871:void <init>(com.google.common.collect.Maps$EntryTransformer) -> <init>
    1871:1871:java.lang.Object apply(java.lang.Object) -> apply
    1874:1874:java.util.Map$Entry apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$2 -> com.google.common.collect.Maps$2:
    121:121:void <init>(java.util.Iterator) -> <init>
    121:121:java.lang.Object transform(java.lang.Object) -> transform
    124:124:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$3 -> com.google.common.collect.Maps$3:
    844:844:void <init>(java.util.Iterator,com.google.common.base.Function) -> <init>
    844:844:java.lang.Object transform(java.lang.Object) -> transform
    847:847:java.util.Map$Entry transform(java.lang.Object) -> transform
com.google.common.collect.Maps$9 -> com.google.common.collect.Maps$9:
    1818:1818:void <init>(com.google.common.base.Function) -> <init>
    1821:1821:java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$DescendingMap -> com.google.common.collect.Maps$DescendingMap:
    3841:3841:void <init>() -> <init>
    3904:3904:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    3909:3909:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    3856:3862:java.util.Comparator comparator() -> comparator
    3970:3970:java.util.Set createEntrySet() -> createEntrySet
    3840:3840:java.lang.Object delegate() -> delegate
    3848:3848:java.util.Map delegate() -> delegate
    3988:3988:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    3944:3944:java.util.NavigableMap descendingMap() -> descendingMap
    3951:3952:java.util.Set entrySet() -> entrySet
    3924:3924:java.util.Map$Entry firstEntry() -> firstEntry
    3874:3874:java.lang.Object firstKey() -> firstKey
    3894:3894:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    3899:3899:java.lang.Object floorKey(java.lang.Object) -> floorKey
    4004:4004:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    4009:4009:java.util.SortedMap headMap(java.lang.Object) -> headMap
    3914:3914:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    3919:3919:java.lang.Object higherKey(java.lang.Object) -> higherKey
    3975:3975:java.util.Set keySet() -> keySet
    3929:3929:java.util.Map$Entry lastEntry() -> lastEntry
    3879:3879:java.lang.Object lastKey() -> lastKey
    3884:3884:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    3889:3889:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    3982:3983:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3934:3934:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3939:3939:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    3869:3869:com.google.common.collect.Ordering reverse(java.util.Comparator) -> reverse
    3994:3994:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3999:3999:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    4014:4014:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    4019:4019:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    4029:4029:java.lang.String toString() -> toString
    4024:4024:java.util.Collection values() -> values
com.google.common.collect.Maps$DescendingMap$1EntrySetImpl -> com.google.common.collect.Maps$DescendingMap$1EntrySetImpl:
    3959:3959:void <init>(com.google.common.collect.Maps$DescendingMap) -> <init>
    3967:3967:java.util.Iterator iterator() -> iterator
    3962:3962:java.util.Map map() -> map
com.google.common.collect.Maps$EntryFunction -> com.google.common.collect.Maps$EntryFunction:
    84:92:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    84:84:void <init>(java.lang.String,int,com.google.common.collect.Maps$1) -> <init>
    84:84:com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String) -> valueOf
    84:84:com.google.common.collect.Maps$EntryFunction[] values() -> values
com.google.common.collect.Maps$EntryFunction$1 -> com.google.common.collect.Maps$EntryFunction$1:
    85:85:void <init>(java.lang.String,int) -> <init>
    85:85:java.lang.Object apply(java.lang.Object) -> apply
    89:89:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntryFunction$2 -> com.google.common.collect.Maps$EntryFunction$2:
    92:92:void <init>(java.lang.String,int) -> <init>
    92:92:java.lang.Object apply(java.lang.Object) -> apply
    96:96:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntrySet -> com.google.common.collect.Maps$EntrySet:
    3774:3774:void <init>() -> <init>
    3784:3784:void clear() -> clear
    3789:3793:boolean contains(java.lang.Object) -> contains
    3800:3800:boolean isEmpty() -> isEmpty
    3805:3807:boolean remove(java.lang.Object) -> remove
    3815:3818:boolean removeAll(java.util.Collection) -> removeAll
    3825:3835:boolean retainAll(java.util.Collection) -> retainAll
    3779:3779:int size() -> size
com.google.common.collect.Maps$IteratorBasedAbstractMap -> com.google.common.collect.Maps$IteratorBasedAbstractMap:
    3367:3367:void <init>() -> <init>
    3390:3390:void clear() -> clear
    3375:3375:java.util.Set entrySet() -> entrySet
com.google.common.collect.Maps$IteratorBasedAbstractMap$1 -> com.google.common.collect.Maps$IteratorBasedAbstractMap$1:
    3375:3375:void <init>(com.google.common.collect.Maps$IteratorBasedAbstractMap) -> <init>
    3383:3383:java.util.Iterator iterator() -> iterator
    3378:3378:java.util.Map map() -> map
com.google.common.collect.Maps$KeySet -> com.google.common.collect.Maps$KeySet:
    3515:3516:void <init>(java.util.Map) -> <init>
    3554:3554:void clear() -> clear
    3540:3540:boolean contains(java.lang.Object) -> contains
    3535:3535:boolean isEmpty() -> isEmpty
    3525:3525:java.util.Iterator iterator() -> iterator
    3520:3520:java.util.Map map() -> map
    3545:3546:boolean remove(java.lang.Object) -> remove
    3530:3530:int size() -> size
com.google.common.collect.Maps$NavigableKeySet -> com.google.common.collect.Maps$NavigableKeySet:
    3612:3612:void <init>(java.util.NavigableMap) -> <init>
    3632:3632:java.lang.Object ceiling(java.lang.Object) -> ceiling
    3657:3657:java.util.Iterator descendingIterator() -> descendingIterator
    3652:3652:java.util.NavigableSet descendingSet() -> descendingSet
    3627:3627:java.lang.Object floor(java.lang.Object) -> floor
    3673:3673:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    3678:3678:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3637:3637:java.lang.Object higher(java.lang.Object) -> higher
    3622:3622:java.lang.Object lower(java.lang.Object) -> lower
    3609:3609:java.util.Map map() -> map
    3609:3609:java.util.SortedMap map() -> map
    3617:3617:java.util.NavigableMap map() -> map
    3642:3642:java.lang.Object pollFirst() -> pollFirst
    3647:3647:java.lang.Object pollLast() -> pollLast
    3663:3663:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    3668:3668:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3683:3683:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    3688:3688:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Maps$SortedKeySet -> com.google.common.collect.Maps$SortedKeySet:
    3570:3570:void <init>(java.util.SortedMap) -> <init>
    3580:3580:java.util.Comparator comparator() -> comparator
    3600:3600:java.lang.Object first() -> first
    3605:3605:java.lang.Object last() -> last
com.google.common.collect.Maps$TransformedEntriesMap -> com.google.common.collect.Maps$TransformedEntriesMap:
    1884:1886:void <init>(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1920:1920:void clear() -> clear
    1896:1896:boolean containsKey(java.lang.Object) -> containsKey
    1930:1931:java.util.Iterator entryIterator() -> entryIterator
    1903:1905:java.lang.Object get(java.lang.Object) -> get
    1925:1925:java.util.Set keySet() -> keySet
    1913:1914:java.lang.Object remove(java.lang.Object) -> remove
    1891:1891:int size() -> size
    1936:1936:java.util.Collection values() -> values
com.google.common.collect.Maps$Values -> com.google.common.collect.Maps$Values:
    3695:3696:void <init>(java.util.Map) -> <init>
    3770:3770:void clear() -> clear
    3765:3765:boolean contains(java.lang.Object) -> contains
    3760:3760:boolean isEmpty() -> isEmpty
    3705:3705:java.util.Iterator iterator() -> iterator
    3700:3700:java.util.Map map() -> map
    3711:3715:boolean remove(java.lang.Object) -> remove
    3726:3734:boolean removeAll(java.util.Collection) -> removeAll
    3741:3749:boolean retainAll(java.util.Collection) -> retainAll
    3755:3755:int size() -> size
com.google.common.collect.Maps$ViewCachingAbstractMap -> com.google.common.collect.Maps$ViewCachingAbstractMap:
    3327:3327:void <init>() -> <init>
    3363:3363:java.util.Collection createValues() -> createValues
    3338:3339:java.util.Set entrySet() -> entrySet
    3358:3359:java.util.Collection values() -> values
com.google.common.collect.MultimapBuilder -> com.google.common.collect.MultimapBuilder:
    64:64:void <init>(com.google.common.collect.MultimapBuilder$1) -> <init>
    70:70:void <init>() -> <init>
    76:76:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys() -> hashKeys
    86:87:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys(int) -> hashKeys
com.google.common.collect.MultimapBuilder$1 -> com.google.common.collect.MultimapBuilder$1:
    87:87:void <init>(int) -> <init>
    90:90:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier -> com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:
    228:229:void <init>(int) -> <init>
    225:225:java.lang.Object get() -> get
    234:234:java.util.Set get() -> get
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:
    276:276:void <init>() -> <init>
    339:339:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues() -> linkedHashSetValues
    349:350:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues(int) -> linkedHashSetValues
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4:
    350:350:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    353:354:com.google.common.collect.SetMultimap build() -> build
com.google.common.collect.MultimapBuilder$SetMultimapBuilder -> com.google.common.collect.MultimapBuilder$SetMultimapBuilder:
    438:438:void <init>() -> <init>
com.google.common.collect.Multimaps -> com.google.common.collect.Multimaps:
    2070:2072:boolean equalsImpl(com.google.common.collect.Multimap,java.lang.Object) -> equalsImpl
    298:298:com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSetMultimap
    1332:1332:com.google.common.collect.ListMultimap transformEntries(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    1221:1223:com.google.common.collect.ListMultimap transformValues(com.google.common.collect.ListMultimap,com.google.common.base.Function) -> transformValues
com.google.common.collect.Multimaps$AsMap -> com.google.common.collect.Multimaps$AsMap:
    1703:1704:void <init>(com.google.common.collect.Multimap) -> <init>
    1700:1700:com.google.common.collect.Multimap access$200(com.google.common.collect.Multimaps$AsMap) -> access$200
    1779:1779:void clear() -> clear
    1774:1774:boolean containsKey(java.lang.Object) -> containsKey
    1714:1714:java.util.Set createEntrySet() -> createEntrySet
    1700:1700:java.lang.Object get(java.lang.Object) -> get
    1754:1754:java.util.Collection get(java.lang.Object) -> get
    1769:1769:boolean isEmpty() -> isEmpty
    1764:1764:java.util.Set keySet() -> keySet
    1700:1700:java.lang.Object remove(java.lang.Object) -> remove
    1759:1759:java.util.Collection remove(java.lang.Object) -> remove
    1718:1718:void removeValuesForKey(java.lang.Object) -> removeValuesForKey
    1709:1709:int size() -> size
com.google.common.collect.Multimaps$AsMap$EntrySet -> com.google.common.collect.Multimaps$AsMap$EntrySet:
    1722:1722:void <init>(com.google.common.collect.Multimaps$AsMap) -> <init>
    1730:1731:java.util.Iterator iterator() -> iterator
    1725:1725:java.util.Map map() -> map
    1742:1746:boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$AsMap$EntrySet$1 -> com.google.common.collect.Multimaps$AsMap$EntrySet$1:
    1732:1732:void <init>(com.google.common.collect.Multimaps$AsMap$EntrySet) -> <init>
    1732:1732:java.lang.Object apply(java.lang.Object) -> apply
    1735:1735:java.util.Collection apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$CustomSetMultimap -> com.google.common.collect.Multimaps$CustomSetMultimap:
    305:306:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    316:316:java.util.Map createAsMap() -> createAsMap
    301:301:java.util.Collection createCollection() -> createCollection
    321:321:java.util.Set createCollection() -> createCollection
    311:311:java.util.Set createKeySet() -> createKeySet
    357:360:void readObject(java.io.ObjectInputStream) -> readObject
    326:331:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    337:342:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    349:351:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Multimaps$Entries -> com.google.common.collect.Multimaps$Entries:
    1667:1667:void <init>() -> <init>
    1695:1695:void clear() -> clear
    1677:1679:boolean contains(java.lang.Object) -> contains
    1686:1688:boolean remove(java.lang.Object) -> remove
    1672:1672:int size() -> size
com.google.common.collect.Multimaps$TransformedEntriesListMultimap -> com.google.common.collect.Multimaps$TransformedEntriesListMultimap:
    1457:1457:void <init>(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1452:1452:java.util.Collection get(java.lang.Object) -> get
    1467:1467:java.util.List get(java.lang.Object) -> get
    1452:1452:java.util.Collection removeAll(java.lang.Object) -> removeAll
    1473:1473:java.util.List removeAll(java.lang.Object) -> removeAll
    1452:1452:java.util.Collection transform(java.lang.Object,java.util.Collection) -> transform
    1462:1462:java.util.List transform(java.lang.Object,java.util.Collection) -> transform
com.google.common.collect.Multimaps$TransformedEntriesMultimap -> com.google.common.collect.Multimaps$TransformedEntriesMultimap:
    1341:1343:void <init>(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer) -> <init>
    1369:1369:void clear() -> clear
    1374:1374:boolean containsKey(java.lang.Object) -> containsKey
    1357:1358:java.util.Map createAsMap() -> createAsMap
    1379:1379:java.util.Collection createEntries() -> createEntries
    1400:1400:java.util.Set createKeySet() -> createKeySet
    1384:1385:java.util.Iterator entryIterator() -> entryIterator
    1395:1395:boolean isEmpty() -> isEmpty
    1426:1426:boolean remove(java.lang.Object,java.lang.Object) -> remove
    1442:1442:int size() -> size
com.google.common.collect.Multimaps$TransformedEntriesMultimap$1 -> com.google.common.collect.Multimaps$TransformedEntriesMultimap$1:
    1359:1359:void <init>(com.google.common.collect.Multimaps$TransformedEntriesMultimap) -> <init>
    1359:1359:java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
    1362:1362:java.util.Collection transformEntry(java.lang.Object,java.util.Collection) -> transformEntry
com.google.common.collect.Multisets -> com.google.common.collect.Multisets:
    859:866:boolean addAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> addAllImpl
    874:880:boolean addAllImpl(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> addAllImpl
    892:895:boolean addAllImpl(com.google.common.collect.Multiset,com.google.common.collect.AbstractMapBasedMultiset) -> addAllImpl
    1105:1105:com.google.common.collect.Multiset cast(java.lang.Iterable) -> cast
    836:848:boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object) -> equalsImpl
    356:357:int inferDistinctElements(java.lang.Iterable) -> inferDistinctElements
    1041:1041:java.util.Iterator iteratorImpl(com.google.common.collect.Multiset) -> iteratorImpl
    902:906:boolean removeAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> removeAllImpl
    911:917:boolean retainAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> retainAllImpl
com.google.common.collect.Multisets$AbstractEntry -> com.google.common.collect.Multisets$AbstractEntry:
    792:792:void <init>() -> <init>
    799:802:boolean equals(java.lang.Object) -> equals
    813:814:int hashCode() -> hashCode
    825:827:java.lang.String toString() -> toString
com.google.common.collect.Multisets$ElementSet -> com.google.common.collect.Multisets$ElementSet:
    958:958:void <init>() -> <init>
    963:963:void clear() -> clear
    968:968:boolean contains(java.lang.Object) -> contains
    973:973:boolean containsAll(java.util.Collection) -> containsAll
    978:978:boolean isEmpty() -> isEmpty
    986:986:boolean remove(java.lang.Object) -> remove
    991:991:int size() -> size
com.google.common.collect.Multisets$EntrySet -> com.google.common.collect.Multisets$EntrySet:
    995:995:void <init>() -> <init>
    1035:1035:void clear() -> clear
    1000:1010:boolean contains(java.lang.Object) -> contains
    1019:1027:boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multisets$MultisetIteratorImpl -> com.google.common.collect.Multisets$MultisetIteratorImpl:
    1057:1059:void <init>(com.google.common.collect.Multiset,java.util.Iterator) -> <init>
    1064:1064:boolean hasNext() -> hasNext
    1069:1078:java.lang.Object next() -> next
    1083:1090:void remove() -> remove
com.google.common.collect.NaturalOrdering -> com.google.common.collect.NaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    74:74:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    36:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    66:66:java.lang.Object readResolve() -> readResolve
    61:61:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    225:225:java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
    209:209:java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> checkElementsNotNull
    215:215:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> checkElementsNotNull
    194:195:java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> fillArray
    59:59:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    128:134:java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> toArrayImpl
    151:157:java.lang.Object[] toArrayImpl(java.lang.Object[],int,int,java.lang.Object[]) -> toArrayImpl
    174:174:java.lang.Object[] toArrayImpl(java.util.Collection) -> toArrayImpl
com.google.common.collect.ObjectCountHashMap -> com.google.common.collect.ObjectCountHashMap:
    112:113:void <init>() -> <init>
    116:119:void <init>(com.google.common.collect.ObjectCountHashMap) -> <init>
    129:129:void <init>(int) -> <init>
    132:133:void <init>(int,float) -> <init>
    487:492:void clear() -> clear
    46:46:com.google.common.collect.ObjectCountHashMap create() -> create
    59:59:com.google.common.collect.ObjectCountHashMap createWithExpectedSize(int) -> createWithExpectedSize
    264:269:void ensureCapacity(int) -> ensureCapacity
    167:167:int firstIndex() -> firstIndex
    398:399:int get(java.lang.Object) -> get
    199:200:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    184:185:java.lang.Object getKey(int) -> getKey
    189:190:int getValue(int) -> getValue
    163:163:int hashTableMask() -> hashTableMask
    381:388:int indexOf(java.lang.Object) -> indexOf
    137:147:void init(int,float) -> init
    320:322:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    448:482:void moveLastEntry(int) -> moveLastEntry
    157:158:long[] newEntries(int) -> newEntries
    151:152:int[] newTable(int) -> newTable
    171:171:int nextIndex(int) -> nextIndex
    275:312:int put(java.lang.Object,int) -> put
    408:434:int remove(java.lang.Object,int) -> remove
    441:441:int removeEntry(int) -> removeEntry
    344:352:void resizeEntries(int) -> resizeEntries
    327:334:void resizeMeMaybe(int) -> resizeMeMaybe
    356:377:void resizeTable(int) -> resizeTable
    194:195:void setValue(int,int) -> setValue
    179:179:int size() -> size
com.google.common.collect.ObjectCountHashMap$MapEntry -> com.google.common.collect.ObjectCountHashMap$MapEntry:
    209:211:void <init>(com.google.common.collect.ObjectCountHashMap,int) -> <init>
    230:231:int getCount() -> getCount
    216:216:java.lang.Object getElement() -> getElement
    220:223:void updateLastKnownIndex() -> updateLastKnownIndex
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    391:391:void <init>() -> <init>
    182:184:com.google.common.collect.Ordering from(java.util.Comparator) -> from
    863:863:com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    162:162:com.google.common.collect.Ordering natural() -> natural
    453:453:com.google.common.collect.Ordering onKeys() -> onKeys
    449:449:com.google.common.collect.Ordering onResultOf(com.google.common.base.Function) -> onResultOf
    405:405:com.google.common.collect.Ordering reverse() -> reverse
    841:843:java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
com.google.common.collect.Ordering$ArbitraryOrdering -> com.google.common.collect.Ordering$ArbitraryOrdering:
    323:327:void <init>() -> <init>
    353:362:int compare(java.lang.Object,java.lang.Object) -> compare
    330:336:java.lang.Integer getUid(java.lang.Object) -> getUid
    381:381:int identityHashCode(java.lang.Object) -> identityHashCode
com.google.common.collect.Platform -> com.google.common.collect.Platform:
    92:92:java.lang.Object[] copy(java.lang.Object[],int,int,java.lang.Object[]) -> copy
    81:86:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    34:34:java.util.Map newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    42:42:java.util.Map newLinkedHashMapWithExpectedSize(int) -> newLinkedHashMapWithExpectedSize
    55:55:java.util.Set newLinkedHashSetWithExpectedSize(int) -> newLinkedHashSetWithExpectedSize
    63:63:java.util.Map preservesInsertionOrderOnPutsMap() -> preservesInsertionOrderOnPutsMap
    101:101:com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker) -> tryWeakKeys
com.google.common.collect.Range -> com.google.common.collect.Range:
    298:298:void <clinit>() -> <clinit>
    352:358:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut) -> <init>
    307:307:com.google.common.collect.Range all() -> all
    278:278:com.google.common.collect.Range atLeast(java.lang.Comparable) -> atLeast
    243:243:com.google.common.collect.Range atMost(java.lang.Comparable) -> atMost
    712:712:int compareOrThrow(java.lang.Comparable,java.lang.Comparable) -> compareOrThrow
    433:435:boolean contains(java.lang.Comparable) -> contains
    156:156:com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut) -> create
    288:294:com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> downTo
    667:669:boolean equals(java.lang.Object) -> equals
    269:269:com.google.common.collect.Range greaterThan(java.lang.Comparable) -> greaterThan
    364:364:boolean hasLowerBound() -> hasLowerBound
    390:390:boolean hasUpperBound() -> hasUpperBound
    677:677:int hashCode() -> hashCode
    549:558:com.google.common.collect.Range intersection(com.google.common.collect.Range) -> intersection
    528:529:boolean isConnected(com.google.common.collect.Range) -> isConnected
    234:234:com.google.common.collect.Range lessThan(java.lang.Comparable) -> lessThan
    374:374:java.lang.Comparable lowerEndpoint() -> lowerEndpoint
    218:225:com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> range
    703:704:java.lang.Object readResolve() -> readResolve
    686:686:java.lang.String toString() -> toString
    690:694:java.lang.String toString(com.google.common.collect.Cut,com.google.common.collect.Cut) -> toString
    253:259:com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> upTo
    400:400:java.lang.Comparable upperEndpoint() -> upperEndpoint
com.google.common.collect.Range$1 -> com.google.common.collect.Range$1:
    253:253:void <clinit>() -> <clinit>
com.google.common.collect.RangeGwtSerializationDependencies -> com.google.common.collect.RangeGwtSerializationDependencies:
    32:32:void <init>() -> <init>
com.google.common.collect.RegularImmutableList -> com.google.common.collect.RegularImmutableList:
    32:32:void <clinit>() -> <clinit>
    37:39:void <init>(java.lang.Object[],int) -> <init>
    69:70:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    77:78:java.lang.Object get(int) -> get
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    44:44:int size() -> size
com.google.common.collect.RegularImmutableMap -> com.google.common.collect.RegularImmutableMap:
    47:47:void <clinit>() -> <clinit>
    192:195:void <init>(java.lang.Object,java.lang.Object[],int) -> <init>
    74:82:com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[]) -> create
    266:266:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    93:171:java.lang.Object createHashTable(java.lang.Object[],int,int,int) -> createHashTable
    342:344:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    418:418:com.google.common.collect.ImmutableCollection createValues() -> createValues
    181:181:java.lang.IllegalArgumentException duplicateKeyException(java.lang.Object,java.lang.Object,java.lang.Object[],int) -> duplicateKeyException
    207:207:java.lang.Object get(java.lang.Object) -> get
    219:258:java.lang.Object get(java.lang.Object,java.lang.Object[],int,int,java.lang.Object) -> get
    200:200:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet -> com.google.common.collect.RegularImmutableMap$EntrySet:
    275:279:void <init>(com.google.common.collect.ImmutableMap,java.lang.Object[],int,int) -> <init>
    269:269:int access$000(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$000
    269:269:java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$100
    269:269:int access$200(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$200
    319:323:boolean contains(java.lang.Object) -> contains
    289:289:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    294:294:com.google.common.collect.ImmutableList createAsList() -> createAsList
    269:269:java.util.Iterator iterator() -> iterator
    284:284:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    335:335:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet$1 -> com.google.common.collect.RegularImmutableMap$EntrySet$1:
    294:294:void <init>(com.google.common.collect.RegularImmutableMap$EntrySet) -> <init>
    294:294:java.lang.Object get(int) -> get
    297:302:java.util.Map$Entry get(int) -> get
    307:307:int size() -> size
com.google.common.collect.RegularImmutableMap$KeySet -> com.google.common.collect.RegularImmutableMap$KeySet:
    379:381:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList) -> <init>
    396:396:com.google.common.collect.ImmutableList asList() -> asList
    401:401:boolean contains(java.lang.Object) -> contains
    391:391:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    375:375:java.util.Iterator iterator() -> iterator
    386:386:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    411:411:int size() -> size
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList -> com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList:
    352:355:void <init>(java.lang.Object[],int,int) -> <init>
    360:361:java.lang.Object get(int) -> get
    371:371:int size() -> size
com.google.common.collect.RegularImmutableMultiset -> com.google.common.collect.RegularImmutableMultiset:
    35:36:void <clinit>() -> <clinit>
    43:49:void <init>(com.google.common.collect.ObjectCountHashMap) -> <init>
    59:59:int count(java.lang.Object) -> count
    32:32:java.util.Set elementSet() -> elementSet
    69:70:com.google.common.collect.ImmutableSet elementSet() -> elementSet
    99:99:com.google.common.collect.Multiset$Entry getEntry(int) -> getEntry
    64:64:int size() -> size
    134:134:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.RegularImmutableMultiset$ElementSet -> com.google.common.collect.RegularImmutableMultiset$ElementSet:
    74:74:void <init>(com.google.common.collect.RegularImmutableMultiset) -> <init>
    74:74:void <init>(com.google.common.collect.RegularImmutableMultiset,com.google.common.collect.RegularImmutableMultiset$1) -> <init>
    83:83:boolean contains(java.lang.Object) -> contains
    78:78:java.lang.Object get(int) -> get
    93:93:int size() -> size
com.google.common.collect.RegularImmutableMultiset$SerializedForm -> com.google.common.collect.RegularImmutableMultiset$SerializedForm:
    107:114:void <init>(com.google.common.collect.Multiset) -> <init>
    120:125:java.lang.Object readResolve() -> readResolve
com.google.common.collect.RegularImmutableSet -> com.google.common.collect.RegularImmutableSet:
    31:31:void <clinit>() -> <clinit>
    42:47:void <init>(java.lang.Object[],int,java.lang.Object[],int,int) -> <init>
    52:61:boolean contains(java.lang.Object) -> contains
    94:95:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    100:100:com.google.common.collect.ImmutableList createAsList() -> createAsList
    110:110:int hashCode() -> hashCode
    79:79:java.lang.Object[] internalArray() -> internalArray
    89:89:int internalArrayEnd() -> internalArrayEnd
    28:28:java.util.Iterator iterator() -> iterator
    74:74:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    69:69:int size() -> size
com.google.common.collect.RegularImmutableSortedSet -> com.google.common.collect.RegularImmutableSortedSet:
    42:43:void <clinit>() -> <clinit>
    48:49:void <init>(com.google.common.collect.ImmutableList,java.util.Comparator) -> <init>
    304:304:com.google.common.collect.ImmutableList asList() -> asList
    225:226:java.lang.Object ceiling(java.lang.Object) -> ceiling
    86:86:boolean contains(java.lang.Object) -> contains
    98:133:boolean containsAll(java.util.Collection) -> containsAll
    155:155:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    309:312:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    39:39:java.util.Iterator descendingIterator() -> descendingIterator
    75:75:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    163:192:boolean equals(java.lang.Object) -> equals
    197:200:java.lang.Object first() -> first
    219:220:java.lang.Object floor(java.lang.Object) -> floor
    278:284:com.google.common.collect.RegularImmutableSortedSet getSubSet(int,int) -> getSubSet
    241:241:int headIndex(java.lang.Object,boolean) -> headIndex
    237:237:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    231:232:java.lang.Object higher(java.lang.Object) -> higher
    295:295:int indexOf(java.lang.Object) -> indexOf
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    59:59:int internalArrayStart() -> internalArrayStart
    150:150:boolean isPartialView() -> isPartialView
    39:39:java.util.Iterator iterator() -> iterator
    69:69:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    205:208:java.lang.Object last() -> last
    213:214:java.lang.Object lower(java.lang.Object) -> lower
    80:80:int size() -> size
    252:252:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    261:261:int tailIndex(java.lang.Object,boolean) -> tailIndex
    257:257:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    145:145:int unsafeBinarySearch(java.lang.Object) -> unsafeBinarySearch
    274:274:java.util.Comparator unsafeComparator() -> unsafeComparator
com.google.common.collect.ReverseNaturalOrdering -> com.google.common.collect.ReverseNaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    98:98:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    33:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    90:90:java.lang.Object readResolve() -> readResolve
    43:43:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.ReverseOrdering -> com.google.common.collect.ReverseOrdering:
    31:32:void <init>(com.google.common.collect.Ordering) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    98:100:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    43:43:com.google.common.collect.Ordering reverse() -> reverse
    107:107:java.lang.String toString() -> toString
com.google.common.collect.Serialization -> com.google.common.collect.Serialization:
    187:190:com.google.common.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String) -> getFieldSetter
    127:129:void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream,int) -> populateMultiset
    47:47:int readCount(java.io.ObjectInputStream) -> readCount
    143:148:void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream) -> writeMultimap
    99:103:void writeMultiset(com.google.common.collect.Multiset,java.io.ObjectOutputStream) -> writeMultiset
com.google.common.collect.Serialization$FieldSetter -> com.google.common.collect.Serialization$FieldSetter:
    195:195:void <init>(java.lang.reflect.Field,com.google.common.collect.Serialization$1) -> <init>
    198:200:void <init>(java.lang.reflect.Field) -> <init>
    205:207:void set(java.lang.Object,java.lang.Object) -> set
    213:215:void set(java.lang.Object,int) -> set
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    1668:1672:boolean equalsImpl(java.util.Set,java.lang.Object) -> equalsImpl
    1654:1655:int hashCodeImpl(java.util.Set) -> hashCodeImpl
    255:255:java.util.Set newConcurrentHashSet() -> newConcurrentHashSet
    164:164:java.util.HashSet newHashSet() -> newHashSet
    241:241:java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    1835:1836:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> removeAllImpl
    1842:1856:boolean removeAllImpl(java.util.Set,java.util.Collection) -> removeAllImpl
    1694:1697:java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet) -> unmodifiableNavigableSet
com.google.common.collect.Sets$ImprovedAbstractSet -> com.google.common.collect.Sets$ImprovedAbstractSet:
    73:73:void <init>() -> <init>
    76:76:boolean removeAll(java.util.Collection) -> removeAll
    81:81:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Sets$UnmodifiableNavigableSet -> com.google.common.collect.Sets$UnmodifiableNavigableSet:
    1705:1707:void <init>(java.util.NavigableSet) -> <init>
    1727:1727:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1700:1700:java.lang.Object delegate() -> delegate
    1700:1700:java.util.Collection delegate() -> delegate
    1700:1700:java.util.Set delegate() -> delegate
    1712:1712:java.util.SortedSet delegate() -> delegate
    1759:1759:java.util.Iterator descendingIterator() -> descendingIterator
    1749:1752:java.util.NavigableSet descendingSet() -> descendingSet
    1722:1722:java.lang.Object floor(java.lang.Object) -> floor
    1771:1771:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1732:1732:java.lang.Object higher(java.lang.Object) -> higher
    1717:1717:java.lang.Object lower(java.lang.Object) -> lower
    1737:1737:java.lang.Object pollFirst() -> pollFirst
    1742:1742:java.lang.Object pollLast() -> pollLast
    1765:1766:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1776:1776:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.SingletonImmutableSet -> com.google.common.collect.SingletonImmutableSet:
    43:44:void <init>(java.lang.Object) -> <init>
    47:50:void <init>(java.lang.Object,int) -> <init>
    60:60:boolean contains(java.lang.Object) -> contains
    80:80:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    70:70:com.google.common.collect.ImmutableList createAsList() -> createAsList
    87:89:int hashCode() -> hashCode
    96:96:boolean isHashCodeFast() -> isHashCodeFast
    29:29:java.util.Iterator iterator() -> iterator
    65:65:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    101:101:java.lang.String toString() -> toString
com.google.common.collect.SortedIterables -> com.google.common.collect.SortedIterables:
    53:55:java.util.Comparator comparator(java.util.SortedSet) -> comparator
    37:47:boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> hasSameComparator
com.google.common.collect.Synchronized -> com.google.common.collect.Synchronized:
    58:58:java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object) -> access$100
    58:58:java.util.Collection access$500(java.util.Collection,java.lang.Object) -> access$500
    58:58:java.util.Map$Entry access$700(java.util.Map$Entry,java.lang.Object) -> access$700
    101:101:java.util.Collection collection(java.util.Collection,java.lang.Object) -> collection
    960:960:java.util.Map map(java.util.Map,java.lang.Object) -> map
    1404:1404:java.util.NavigableMap navigableMap(java.util.NavigableMap,java.lang.Object) -> navigableMap
    1388:1388:java.util.NavigableSet navigableSet(java.util.NavigableSet,java.lang.Object) -> navigableSet
    1592:1592:java.util.Map$Entry nullableSynchronizedEntry(java.util.Map$Entry,java.lang.Object) -> nullableSynchronizedEntry
    210:210:java.util.Set set(java.util.Set,java.lang.Object) -> set
    1092:1092:java.util.SortedMap sortedMap(java.util.SortedMap,java.lang.Object) -> sortedMap
    245:245:java.util.SortedSet sortedSet(java.util.SortedSet,java.lang.Object) -> sortedSet
com.google.common.collect.Synchronized$SynchronizedBiMap -> com.google.common.collect.Synchronized$SynchronizedBiMap:
    1159:1159:java.util.Map delegate() -> delegate
    1173:1173:com.google.common.collect.BiMap delegate() -> delegate
    1159:1159:java.util.Collection values() -> values
    1178:1183:java.util.Set values() -> values
com.google.common.collect.Synchronized$SynchronizedCollection -> com.google.common.collect.Synchronized$SynchronizedCollection:
    105:105:void <init>(java.util.Collection,java.lang.Object,com.google.common.collect.Synchronized$1) -> <init>
    107:107:void <init>(java.util.Collection,java.lang.Object) -> <init>
    118:120:boolean add(java.lang.Object) -> add
    125:127:boolean addAll(java.util.Collection) -> addAll
    132:134:void clear() -> clear
    139:141:boolean contains(java.lang.Object) -> contains
    146:148:boolean containsAll(java.util.Collection) -> containsAll
    113:113:java.util.Collection delegate() -> delegate
    153:155:boolean isEmpty() -> isEmpty
    160:160:java.util.Iterator iterator() -> iterator
    165:167:boolean remove(java.lang.Object) -> remove
    172:174:boolean removeAll(java.util.Collection) -> removeAll
    179:181:boolean retainAll(java.util.Collection) -> retainAll
    186:188:int size() -> size
    193:195:java.lang.Object[] toArray() -> toArray
    200:202:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Synchronized$SynchronizedEntry -> com.google.common.collect.Synchronized$SynchronizedEntry:
    1599:1599:void <init>(java.util.Map$Entry,java.lang.Object) -> <init>
    1605:1605:java.util.Map$Entry delegate() -> delegate
    1610:1612:boolean equals(java.lang.Object) -> equals
    1624:1626:java.lang.Object getKey() -> getKey
    1631:1633:java.lang.Object getValue() -> getValue
    1617:1619:int hashCode() -> hashCode
    1638:1640:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Synchronized$SynchronizedMap -> com.google.common.collect.Synchronized$SynchronizedMap:
    969:969:void <init>(java.util.Map,java.lang.Object) -> <init>
    980:982:void clear() -> clear
    987:989:boolean containsKey(java.lang.Object) -> containsKey
    994:996:boolean containsValue(java.lang.Object) -> containsValue
    975:975:java.util.Map delegate() -> delegate
    1001:1006:java.util.Set entrySet() -> entrySet
    1076:1078:boolean equals(java.lang.Object) -> equals
    1011:1013:java.lang.Object get(java.lang.Object) -> get
    1083:1085:int hashCode() -> hashCode
    1018:1020:boolean isEmpty() -> isEmpty
    1025:1030:java.util.Set keySet() -> keySet
    1035:1037:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    1042:1044:void putAll(java.util.Map) -> putAll
    1049:1051:java.lang.Object remove(java.lang.Object) -> remove
    1056:1058:int size() -> size
    1063:1068:java.util.Collection values() -> values
com.google.common.collect.Synchronized$SynchronizedNavigableMap -> com.google.common.collect.Synchronized$SynchronizedNavigableMap:
    1413:1413:void <init>(java.util.NavigableMap,java.lang.Object) -> <init>
    1423:1425:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1430:1432:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1407:1407:java.util.Map delegate() -> delegate
    1407:1407:java.util.SortedMap delegate() -> delegate
    1418:1418:java.util.NavigableMap delegate() -> delegate
    1439:1444:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1451:1456:java.util.NavigableMap descendingMap() -> descendingMap
    1461:1463:java.util.Map$Entry firstEntry() -> firstEntry
    1468:1470:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1475:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1482:1484:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1489:1489:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1494:1496:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1501:1503:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1529:1529:java.util.Set keySet() -> keySet
    1508:1510:java.util.Map$Entry lastEntry() -> lastEntry
    1515:1517:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1522:1524:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1536:1541:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1546:1548:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1553:1555:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1561:1563:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1568:1568:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1573:1575:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    1580:1580:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedNavigableSet -> com.google.common.collect.Synchronized$SynchronizedNavigableSet:
    1275:1275:void <init>(java.util.NavigableSet,java.lang.Object) -> <init>
    1285:1287:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1270:1270:java.util.Collection delegate() -> delegate
    1270:1270:java.util.Set delegate() -> delegate
    1270:1270:java.util.SortedSet delegate() -> delegate
    1280:1280:java.util.NavigableSet delegate() -> delegate
    1292:1292:java.util.Iterator descendingIterator() -> descendingIterator
    1299:1306:java.util.NavigableSet descendingSet() -> descendingSet
    1311:1313:java.lang.Object floor(java.lang.Object) -> floor
    1318:1320:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1325:1325:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1330:1332:java.lang.Object higher(java.lang.Object) -> higher
    1337:1339:java.lang.Object lower(java.lang.Object) -> lower
    1344:1346:java.lang.Object pollFirst() -> pollFirst
    1351:1353:java.lang.Object pollLast() -> pollLast
    1359:1362:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1367:1367:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1372:1374:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1379:1379:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Synchronized$SynchronizedObject -> com.google.common.collect.Synchronized$SynchronizedObject:
    65:67:void <init>(java.lang.Object,java.lang.Object) -> <init>
    71:71:java.lang.Object delegate() -> delegate
    78:80:java.lang.String toString() -> toString
    90:92:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Synchronized$SynchronizedSet -> com.google.common.collect.Synchronized$SynchronizedSet:
    216:216:void <init>(java.util.Set,java.lang.Object) -> <init>
    213:213:java.util.Collection delegate() -> delegate
    221:221:java.util.Set delegate() -> delegate
    229:231:boolean equals(java.lang.Object) -> equals
    236:238:int hashCode() -> hashCode
com.google.common.collect.Synchronized$SynchronizedSortedMap -> com.google.common.collect.Synchronized$SynchronizedSortedMap:
    1099:1099:void <init>(java.util.SortedMap,java.lang.Object) -> <init>
    1109:1111:java.util.Comparator comparator() -> comparator
    1095:1095:java.util.Map delegate() -> delegate
    1104:1104:java.util.SortedMap delegate() -> delegate
    1116:1118:java.lang.Object firstKey() -> firstKey
    1123:1125:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1130:1132:java.lang.Object lastKey() -> lastKey
    1137:1139:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1144:1146:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedSortedSet -> com.google.common.collect.Synchronized$SynchronizedSortedSet:
    250:250:void <init>(java.util.SortedSet,java.lang.Object) -> <init>
    260:262:java.util.Comparator comparator() -> comparator
    248:248:java.util.Collection delegate() -> delegate
    248:248:java.util.Set delegate() -> delegate
    255:255:java.util.SortedSet delegate() -> delegate
    288:290:java.lang.Object first() -> first
    274:276:java.util.SortedSet headSet(java.lang.Object) -> headSet
    295:297:java.lang.Object last() -> last
    267:269:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    281:283:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.TransformedIterator -> com.google.common.collect.TransformedIterator:
    34:35:void <init>(java.util.Iterator) -> <init>
    42:42:boolean hasNext() -> hasNext
    47:47:java.lang.Object next() -> next
    52:52:void remove() -> remove
com.google.common.collect.TransformedListIterator -> com.google.common.collect.TransformedListIterator:
    33:33:void <init>(java.util.ListIterator) -> <init>
    67:67:void add(java.lang.Object) -> add
    37:37:java.util.ListIterator backingIterator() -> backingIterator
    42:42:boolean hasPrevious() -> hasPrevious
    52:52:int nextIndex() -> nextIndex
    47:47:java.lang.Object previous() -> previous
    57:57:int previousIndex() -> previousIndex
    62:62:void set(java.lang.Object) -> set
com.google.common.collect.TreeRangeSet$RangesByUpperBound -> com.google.common.collect.TreeRangeSet$RangesByUpperBound:
    297:299:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    281:281:com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound) -> access$000
    331:331:java.util.Comparator comparator() -> comparator
    336:336:boolean containsKey(java.lang.Object) -> containsKey
    402:416:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    366:383:java.util.Iterator entryIterator() -> entryIterator
    280:280:java.lang.Object get(java.lang.Object) -> get
    341:350:com.google.common.collect.Range get(java.lang.Object) -> get
    280:280:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    321:321:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    440:442:boolean isEmpty() -> isEmpty
    432:435:int size() -> size
    280:280:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    303:306:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    313:316:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    280:280:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    326:326:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$1:
    383:383:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,java.util.Iterator) -> <init>
    383:383:java.lang.Object computeNext() -> computeNext
    386:393:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$2:
    416:416:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,com.google.common.collect.PeekingIterator) -> <init>
    416:416:java.lang.Object computeNext() -> computeNext
    419:425:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    35:35:void <init>() -> <init>
    46:46:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    32:32:void <init>() -> <init>
    43:43:void add(java.lang.Object) -> add
    55:55:void set(java.lang.Object) -> set
com.google.common.eventbus.Subscriber -> com.google.common.eventbus.Subscriber:
    112:117:boolean equals(java.lang.Object) -> equals
    107:107:int hashCode() -> hashCode
    87:96:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.eventbus.Subscriber$SynchronizedSubscriber -> com.google.common.eventbus.Subscriber$SynchronizedSubscriber:
    143:145:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.io.BaseEncoding -> com.google.common.io.BaseEncoding:
    320:401:void <clinit>() -> <clinit>
    128:128:void <init>() -> <init>
    417:417:com.google.common.io.BaseEncoding base16() -> base16
    338:338:com.google.common.io.BaseEncoding base64() -> base64
    148:148:java.lang.String encode(byte[]) -> encode
    156:163:java.lang.String encode(byte[],int,int) -> encode
com.google.common.io.BaseEncoding$Alphabet -> com.google.common.io.BaseEncoding$Alphabet:
    431:468:void <init>(java.lang.String,char[]) -> <init>
    420:420:char[] access$000(com.google.common.io.BaseEncoding$Alphabet) -> access$000
    472:472:char encode(int) -> encode
    553:555:boolean equals(java.lang.Object) -> equals
    562:562:int hashCode() -> hashCode
    543:543:boolean matches(char) -> matches
    548:548:java.lang.String toString() -> toString
com.google.common.io.BaseEncoding$Base16Encoding -> com.google.common.io.BaseEncoding$Base16Encoding:
    895:895:void <init>(java.lang.String,java.lang.String) -> <init>
    892:903:void <init>(com.google.common.io.BaseEncoding$Alphabet) -> <init>
    909:914:void encodeTo(java.lang.Appendable,byte[],int,int) -> encodeTo
com.google.common.io.BaseEncoding$Base64Encoding -> com.google.common.io.BaseEncoding$Base64Encoding:
    940:940:void <init>(java.lang.String,java.lang.String,java.lang.Character) -> <init>
    944:945:void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character) -> <init>
    950:961:void encodeTo(java.lang.Appendable,byte[],int,int) -> encodeTo
com.google.common.io.BaseEncoding$StandardBaseEncoding -> com.google.common.io.BaseEncoding$StandardBaseEncoding:
    573:573:void <init>(java.lang.String,java.lang.String,java.lang.Character) -> <init>
    576:582:void <init>(com.google.common.io.BaseEncoding$Alphabet,java.lang.Character) -> <init>
    645:664:void encodeChunkTo(java.lang.Appendable,byte[],int,int) -> encodeChunkTo
    637:640:void encodeTo(java.lang.Appendable,byte[],int,int) -> encodeTo
    877:880:boolean equals(java.lang.Object) -> equals
    887:887:int hashCode() -> hashCode
    587:587:int maxEncodedSize(int) -> maxEncodedSize
    863:872:java.lang.String toString() -> toString
com.google.common.io.Closer$LoggingSuppressor -> com.google.common.io.Closer$LoggingSuppressor:
    244:244:void <clinit>() -> <clinit>
    242:242:void <init>() -> <init>
com.google.common.io.Closer$SuppressingSuppressor -> com.google.common.io.Closer$SuppressingSuppressor:
    261:267:void <clinit>() -> <clinit>
    259:259:void <init>() -> <init>
    271:271:java.lang.reflect.Method addSuppressedMethodOrNull() -> addSuppressedMethodOrNull
com.google.common.math.IntMath -> com.google.common.math.IntMath:
    201:676:void <clinit>() -> <clinit>
    317:367:int divide(int,int,java.math.RoundingMode) -> divide
    119:143:int log2(int,java.math.RoundingMode) -> log2
com.google.common.math.IntMath$1 -> com.google.common.math.IntMath$1:
    120:120:void <clinit>() -> <clinit>
com.google.common.math.MathPreconditions -> com.google.common.math.MathPreconditions:
    33:33:int checkPositive(java.lang.String,int) -> checkPositive
    82:82:void checkRoundingUnnecessary(boolean) -> checkRoundingUnnecessary
com.google.common.net.MediaType -> com.google.common.net.MediaType:
    80:1163:void <clinit>() -> <clinit>
    772:775:void <init>(java.lang.String,java.lang.String,com.google.common.collect.ImmutableListMultimap) -> <init>
    78:78:com.google.common.base.CharMatcher access$000() -> access$000
    78:78:java.lang.String access$100(java.lang.String) -> access$100
    124:124:com.google.common.net.MediaType addKnownType(com.google.common.net.MediaType) -> addKnownType
    814:827:com.google.common.base.Optional charset() -> charset
    1181:1197:java.lang.String computeToString() -> computeToString
    962:977:com.google.common.net.MediaType create(java.lang.String,java.lang.String,com.google.common.collect.Multimap) -> create
    111:113:com.google.common.net.MediaType createConstant(java.lang.String,java.lang.String) -> createConstant
    118:119:com.google.common.net.MediaType createConstantUtf8(java.lang.String,java.lang.String) -> createConstantUtf8
    1141:1146:boolean equals(java.lang.Object) -> equals
    1201:1209:java.lang.String escapeAndQuote(java.lang.String) -> escapeAndQuote
    1155:1158:int hashCode() -> hashCode
    1041:1043:java.lang.String normalizeParameterValue(java.lang.String,java.lang.String) -> normalizeParameterValue
    1035:1037:java.lang.String normalizeToken(java.lang.String) -> normalizeToken
    794:795:java.util.Map parametersAsMap() -> parametersAsMap
    1052:1086:com.google.common.net.MediaType parse(java.lang.String) -> parse
    1172:1175:java.lang.String toString() -> toString
com.google.common.net.MediaType$1 -> com.google.common.net.MediaType$1:
    796:796:void <init>(com.google.common.net.MediaType) -> <init>
    796:796:java.lang.Object apply(java.lang.Object) -> apply
    799:799:com.google.common.collect.ImmutableMultiset apply(java.util.Collection) -> apply
com.google.common.net.MediaType$2 -> com.google.common.net.MediaType$2:
    1187:1187:void <init>(com.google.common.net.MediaType) -> <init>
    1187:1187:java.lang.Object apply(java.lang.Object) -> apply
    1190:1192:java.lang.String apply(java.lang.String) -> apply
com.google.common.net.MediaType$Tokenizer -> com.google.common.net.MediaType$Tokenizer:
    1092:1095:void <init>(java.lang.String) -> <init>
    1113:1116:char consumeCharacter(com.google.common.base.CharMatcher) -> consumeCharacter
    1121:1123:char consumeCharacter(char) -> consumeCharacter
    1106:1108:java.lang.String consumeToken(com.google.common.base.CharMatcher) -> consumeToken
    1099:1102:java.lang.String consumeTokenIfPresent(com.google.common.base.CharMatcher) -> consumeTokenIfPresent
    1133:1133:boolean hasMore() -> hasMore
    1128:1129:char previewChar() -> previewChar
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    271:272:int constrainToRange(int,int,int) -> constrainToRange
com.google.common.primitives.UnsignedBytes -> com.google.common.primitives.UnsignedBytes:
    120:120:int compare(byte,byte) -> compare
    276:276:java.util.Comparator lexicographicalComparatorJavaImpl() -> lexicographicalComparatorJavaImpl
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder:
    288:291:void <clinit>() -> <clinit>
    287:287:void <init>() -> <init>
    438:445:java.util.Comparator getBestComparator() -> getBestComparator
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator:
    411:412:void <clinit>() -> <clinit>
    411:411:void <init>(java.lang.String,int) -> <init>
    411:411:int compare(java.lang.Object,java.lang.Object) -> compare
    416:423:int compare(byte[],byte[]) -> compare
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator valueOf(java.lang.String) -> valueOf
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator:
    293:327:void <clinit>() -> <clinit>
    294:294:void <init>(java.lang.String,int) -> <init>
    293:293:int compare(java.lang.Object,java.lang.Object) -> compare
    367:402:int compare(byte[],byte[]) -> compare
    339:360:sun.misc.Unsafe getUnsafe() -> getUnsafe
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator valueOf(java.lang.String) -> valueOf
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1 -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1:
    345:345:void <init>() -> <init>
    345:345:java.lang.Object run() -> run
    348:356:sun.misc.Unsafe run() -> run
com.google.common.primitives.UnsignedLongs -> com.google.common.primitives.UnsignedLongs:
    79:79:int compare(long,long) -> compare
com.google.common.reflect.ClassPath -> com.google.common.reflect.ClassPath:
    79:91:void <clinit>() -> <clinit>
    78:78:java.util.logging.Logger access$100() -> access$100
    78:78:com.google.common.base.Splitter access$200() -> access$200
    585:586:java.lang.String getClassName(java.lang.String) -> getClassName
    592:596:java.io.File toFile(java.net.URL) -> toFile
com.google.common.reflect.ClassPath$1 -> com.google.common.reflect.ClassPath$1:
    82:82:void <init>() -> <init>
com.google.common.reflect.ClassPath$ClassInfo -> com.google.common.reflect.ClassPath$ClassInfo:
    280:281:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    344:344:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$DefaultScanner -> com.google.common.reflect.ClassPath$DefaultScanner:
    569:571:void <init>() -> <init>
    579:579:void scanResource(com.google.common.reflect.ClassPath$ResourceInfo) -> scanResource
com.google.common.reflect.ClassPath$ResourceInfo -> com.google.common.reflect.ClassPath$ResourceInfo:
    194:197:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    256:258:boolean equals(java.lang.Object) -> equals
    251:251:int hashCode() -> hashCode
    187:190:com.google.common.reflect.ClassPath$ResourceInfo of(java.io.File,java.lang.String,java.lang.ClassLoader) -> of
    266:266:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$Scanner -> com.google.common.reflect.ClassPath$Scanner:
    353:357:void <init>() -> <init>
    470:476:com.google.common.collect.ImmutableList getClassLoaderUrls(java.lang.ClassLoader) -> getClassLoaderUrls
    452:466:com.google.common.collect.ImmutableMap getClassPathEntries(java.lang.ClassLoader) -> getClassPathEntries
    508:508:java.net.URL getClassPathEntry(java.io.File,java.lang.String) -> getClassPathEntry
    427:447:com.google.common.collect.ImmutableSet getClassPathFromManifest(java.io.File,java.util.jar.Manifest) -> getClassPathFromManifest
    485:497:com.google.common.collect.ImmutableList parseJavaClassPath() -> parseJavaClassPath
    367:368:void scan(java.io.File,java.lang.ClassLoader) -> scan
    524:526:void scanDirectory(java.lang.ClassLoader,java.io.File) -> scanDirectory
    544:561:void scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,java.util.Set) -> scanDirectory
    380:391:void scanFrom(java.io.File,java.lang.ClassLoader) -> scanFrom
    398:413:void scanJar(java.io.File,java.lang.ClassLoader) -> scanJar
    513:519:void scanJarFile(java.lang.ClassLoader,java.util.jar.JarFile) -> scanJarFile
com.google.common.util.concurrent.DirectExecutor -> com.google.common.util.concurrent.DirectExecutor:
    24:26:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    30:30:void execute(java.lang.Runnable) -> execute
    24:24:com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String) -> valueOf
    24:24:com.google.common.util.concurrent.DirectExecutor[] values() -> values
com.google.common.util.concurrent.ExecutionError -> com.google.common.util.concurrent.ExecutionError:
    33:33:void <init>() -> <init>
    37:37:void <init>(java.lang.String) -> <init>
    47:47:void <init>(java.lang.Error) -> <init>
com.google.common.util.concurrent.ForwardingCondition -> com.google.common.util.concurrent.ForwardingCondition:
    22:22:void <init>() -> <init>
    27:27:void await() -> await
    32:32:boolean await(long,java.util.concurrent.TimeUnit) -> await
    42:42:long awaitNanos(long) -> awaitNanos
    37:37:void awaitUninterruptibly() -> awaitUninterruptibly
    47:47:boolean awaitUntil(java.util.Date) -> awaitUntil
    52:52:void signal() -> signal
    57:57:void signalAll() -> signalAll
com.google.common.util.concurrent.ForwardingLock -> com.google.common.util.concurrent.ForwardingLock:
    22:22:void <init>() -> <init>
    27:27:void lock() -> lock
    32:32:void lockInterruptibly() -> lockInterruptibly
    37:37:boolean tryLock() -> tryLock
    42:42:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    47:47:void unlock() -> unlock
com.google.common.util.concurrent.FuturesGetChecked -> com.google.common.util.concurrent.FuturesGetChecked:
    249:257:void <clinit>() -> <clinit>
    290:295:void checkExceptionClassValidity(java.lang.Class) -> checkExceptionClassValidity
    101:101:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator classValueValidator() -> classValueValidator
    53:61:java.lang.Object getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator,java.util.concurrent.Future,java.lang.Class) -> getChecked
    216:216:boolean hasConstructorUsableByGetChecked(java.lang.Class) -> hasConstructorUsableByGetChecked
    285:285:boolean isCheckedException(java.lang.Class) -> isCheckedException
    261:274:java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable) -> newFromConstructor
    226:236:java.lang.Exception newWithCause(java.lang.Class,java.lang.Throwable) -> newWithCause
    245:245:java.util.List preferringStrings(java.util.List) -> preferringStrings
    95:95:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator weakSetValidator() -> weakSetValidator
    199:205:void wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class) -> wrapAndThrowExceptionOrError
com.google.common.util.concurrent.FuturesGetChecked$1 -> com.google.common.util.concurrent.FuturesGetChecked$1:
    251:251:void <init>() -> <init>
    251:251:java.lang.Object apply(java.lang.Object) -> apply
    254:254:java.lang.Boolean apply(java.lang.reflect.Constructor) -> apply
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder:
    112:115:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    188:191:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator getBestValidator() -> getBestValidator
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator:
    117:126:void <clinit>() -> <clinit>
    119:119:void <init>(java.lang.String,int) -> <init>
    137:137:void validateClass(java.lang.Class) -> validateClass
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator valueOf(java.lang.String) -> valueOf
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator[] values() -> values
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1 -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1:
    127:127:void <init>() -> <init>
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator:
    141:152:void <clinit>() -> <clinit>
    141:141:void <init>(java.lang.String,int) -> <init>
    157:178:void validateClass(java.lang.Class) -> validateClass
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator valueOf(java.lang.String) -> valueOf
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator[] values() -> values
com.google.common.util.concurrent.MoreExecutors -> com.google.common.util.concurrent.MoreExecutors:
    418:418:java.util.concurrent.Executor directExecutor() -> directExecutor
com.google.common.util.concurrent.MoreExecutors$Application -> com.google.common.util.concurrent.MoreExecutors$Application:
    170:170:void <init>() -> <init>
    224:224:void addShutdownHook(java.lang.Thread) -> addShutdownHook
com.google.common.util.concurrent.Striped -> com.google.common.util.concurrent.Striped:
    300:308:void <clinit>() -> <clinit>
    93:93:void <init>() -> <init>
com.google.common.util.concurrent.Striped$5 -> com.google.common.util.concurrent.Striped$5:
    301:301:void <init>() -> <init>
    301:301:java.lang.Object get() -> get
    304:304:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$6 -> com.google.common.util.concurrent.Striped$6:
    309:309:void <init>() -> <init>
    309:309:java.lang.Object get() -> get
    312:312:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$WeakSafeCondition -> com.google.common.util.concurrent.Striped$WeakSafeCondition:
    369:371:void <init>(java.util.concurrent.locks.Condition,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    376:376:java.util.concurrent.locks.Condition delegate() -> delegate
com.google.common.util.concurrent.Striped$WeakSafeLock -> com.google.common.util.concurrent.Striped$WeakSafeLock:
    346:348:void <init>(java.util.concurrent.locks.Lock,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    353:353:java.util.concurrent.locks.Lock delegate() -> delegate
    358:358:java.util.concurrent.locks.Condition newCondition() -> newCondition
com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock -> com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock:
    324:325:void <init>() -> <init>
    330:330:java.util.concurrent.locks.Lock readLock() -> readLock
    335:335:java.util.concurrent.locks.Lock writeLock() -> writeLock
com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter -> com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter:
    57:57:void <clinit>() -> <clinit>
    68:77:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.common.util.concurrent.UncheckedExecutionException -> com.google.common.util.concurrent.UncheckedExecutionException:
    38:38:void <init>() -> <init>
    42:42:void <init>(java.lang.String) -> <init>
    52:52:void <init>(java.lang.Throwable) -> <init>
gov.nist.core.Debug -> gov.nist.core.Debug:
    57:58:void logError(java.lang.String,java.lang.Exception) -> logError
    51:52:void printStackTrace(java.lang.Exception) -> printStackTrace
    47:48:void println(java.lang.String) -> println
gov.nist.core.DuplicateNameValueList -> gov.nist.core.DuplicateNameValueList:
    46:54:void <init>() -> <init>
    189:193:java.lang.Object clone() -> clone
    70:70:java.lang.String encode() -> encode
    74:86:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    126:142:boolean equals(java.lang.Object) -> equals
    164:164:java.util.Collection getNameValue(java.lang.String) -> getNameValue
    258:258:int hashCode() -> hashCode
    238:238:boolean isEmpty() -> isEmpty
    104:104:void set(gov.nist.core.NameValue) -> set
    60:60:void setSeparator(java.lang.String) -> setSeparator
    96:96:java.lang.String toString() -> toString
gov.nist.core.GenericObject -> gov.nist.core.GenericObject:
    73:89:void <clinit>() -> <clinit>
    292:294:void <init>() -> <init>
    201:203:java.lang.Object clone() -> clone
    394:394:void dbgPrint() -> dbgPrint
    401:401:void dbgPrint(java.lang.String) -> dbgPrint
    594:686:java.lang.String debugDump() -> debugDump
    693:695:java.lang.String debugDump(int) -> debugDump
    710:710:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    411:477:boolean equals(java.lang.Object) -> equals
    127:129:java.lang.Class getClassFromName(java.lang.String) -> getClassFromName
    298:300:java.lang.String getIndentation() -> getIndentation
    122:122:gov.nist.core.Match getMatcher() -> getMatcher
    136:136:boolean isMySubclass(java.lang.Class) -> isMySubclass
    149:188:java.lang.Object makeClone(java.lang.Object) -> makeClone
    496:573:boolean match(java.lang.Object) -> match
    222:287:void merge(java.lang.Object) -> merge
    114:115:void setMatcher(gov.nist.core.Match) -> setMatcher
    309:320:void sprint(java.lang.String) -> sprint
    330:330:void sprint(java.lang.Object) -> sprint
    338:338:void sprint(int) -> sprint
    345:345:void sprint(short) -> sprint
    353:353:void sprint(char) -> sprint
    362:362:void sprint(long) -> sprint
    370:370:void sprint(boolean) -> sprint
    378:378:void sprint(double) -> sprint
    386:386:void sprint(float) -> sprint
gov.nist.core.GenericObjectList -> gov.nist.core.GenericObjectList:
    144:147:void <init>() -> <init>
    47:47:void addFirst(java.lang.Object) -> addFirst
    306:309:void addFirst(gov.nist.core.GenericObject) -> addFirst
    128:132:java.lang.Object clone() -> clone
    275:289:java.lang.String debugDump() -> debugDump
    298:301:java.lang.String debugDump(int) -> debugDump
    348:367:java.lang.String encode() -> encode
    402:428:boolean equals(java.lang.Object) -> equals
    196:198:gov.nist.core.GenericObject first() -> first
    107:109:java.lang.String getIndentation() -> getIndentation
    120:120:boolean isMySubclass(java.lang.Class) -> isMySubclass
    448:468:boolean match(java.lang.Object) -> match
    208:214:gov.nist.core.GenericObject next() -> next
    254:266:void sprint(java.lang.String) -> sprint
    374:374:java.lang.String toString() -> toString
gov.nist.core.Host -> gov.nist.core.Host:
    65:89:void <init>() -> <init>
    65:101:void <init>(java.lang.String) -> <init>
    120:120:java.lang.String encode() -> encode
    124:127:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    141:145:boolean equals(java.lang.Object) -> equals
    153:153:java.lang.String getHostname() -> getHostname
    297:297:int hashCode() -> hashCode
    283:283:boolean isIPv6Address(java.lang.String) -> isIPv6Address
    291:292:boolean isIPv6Reference(java.lang.String) -> isIPv6Reference
    210:232:void setHost(java.lang.String,int) -> setHost
gov.nist.core.HostNameParser -> gov.nist.core.HostNameParser:
    83:83:void <clinit>() -> <clinit>
    63:80:void <init>(gov.nist.core.LexerCore) -> <init>
    86:93:void consumeDomainLabel() -> consumeDomainLabel
    172:208:gov.nist.core.Host host() -> host
    262:316:gov.nist.core.HostPort hostPort(boolean) -> hostPort
    97:168:java.lang.String ipv6Reference() -> ipv6Reference
    225:247:boolean isIPv6Address(java.lang.String) -> isIPv6Address
gov.nist.core.HostPort -> gov.nist.core.HostPort:
    59:62:void <init>() -> <init>
    157:159:java.lang.Object clone() -> clone
    72:72:java.lang.String encode() -> encode
    76:78:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    88:92:boolean equals(java.lang.Object) -> equals
    99:99:gov.nist.core.Host getHost() -> getHost
    106:106:int getPort() -> getPort
    169:169:int hashCode() -> hashCode
    151:153:void merge(java.lang.Object) -> merge
    128:128:void setHost(gov.nist.core.Host) -> setHost
    136:136:void setPort(int) -> setPort
    164:164:java.lang.String toString() -> toString
gov.nist.core.InternalErrorHandler -> gov.nist.core.InternalErrorHandler:
    43:45:void handleException(java.lang.Exception) -> handleException
    64:67:void handleException(java.lang.String) -> handleException
gov.nist.core.LexerCore -> gov.nist.core.LexerCore:
    92:93:void <clinit>() -> <clinit>
    137:138:void <init>(java.lang.String,java.lang.String) -> <init>
    279:282:void SPorHT() -> SPorHT
    99:102:void addKeyword(java.lang.String,int) -> addKeyword
    115:120:java.util.Hashtable addLexer(java.lang.String) -> addLexer
    582:597:java.lang.String byteStringNoSemicolon() -> byteStringNoSemicolon
    606:621:java.lang.String byteStringNoSlash() -> byteStringNoSlash
    646:646:java.lang.String charAsString(char) -> charAsString
    653:653:java.lang.String charAsString(int) -> charAsString
    551:575:java.lang.String comment() -> comment
    485:510:void consumeValidChars(char[]) -> consumeValidChars
    753:753:java.lang.String getBuffer() -> getBuffer
    155:155:java.lang.String getNextId() -> getNextId
    160:160:gov.nist.core.Token getNextToken() -> getNextToken
    747:747:int getPtr() -> getPtr
    701:704:java.lang.String getRest() -> getRest
    712:741:java.lang.String getString(char) -> getString
    300:300:boolean isTokenChar(char) -> isTokenChar
    687:687:int markInputPosition() -> markInputPosition
    205:274:gov.nist.core.Token match(int) -> match
    662:679:java.lang.String number() -> number
    167:167:gov.nist.core.Token peekNextToken() -> peekNextToken
    171:197:gov.nist.core.Token[] peekNextToken(int) -> peekNextToken
    526:543:java.lang.String quotedString() -> quotedString
    694:694:void rewindInputPosition(int) -> rewindInputPosition
    322:323:boolean startsId() -> startsId
    331:332:boolean startsSafeToken() -> startsSafeToken
    373:383:java.lang.String ttoken() -> ttoken
    431:475:java.lang.String ttokenSafe() -> ttokenSafe
gov.nist.core.MultiValueMapImpl -> gov.nist.core.MultiValueMapImpl:
    35:40:void <init>() -> <init>
    72:79:void clear() -> clear
    100:101:java.lang.Object clone() -> clone
    110:110:boolean containsKey(java.lang.Object) -> containsKey
    56:65:boolean containsValue(java.lang.Object) -> containsValue
    114:114:java.util.Set entrySet() -> entrySet
    34:34:java.lang.Object get(java.lang.Object) -> get
    136:136:java.util.List get(java.lang.Object) -> get
    118:118:boolean isEmpty() -> isEmpty
    122:122:java.util.Set keySet() -> keySet
    34:34:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    45:51:java.util.List put(java.lang.String,java.lang.Object) -> put
    140:140:java.util.List put(java.lang.String,java.util.List) -> put
    148:151:void putAll(java.util.Map) -> putAll
    34:34:java.lang.Object remove(java.lang.Object) -> remove
    144:144:java.util.List remove(java.lang.Object) -> remove
    106:106:int size() -> size
    83:93:java.util.Collection values() -> values
gov.nist.core.NameValue -> gov.nist.core.NameValue:
    63:68:void <init>() -> <init>
    78:86:void <init>(java.lang.String,java.lang.Object,boolean) -> <init>
    96:96:void <init>(java.lang.String,java.lang.Object) -> <init>
    213:215:java.lang.Object clone() -> clone
    159:159:java.lang.String encode() -> encode
    163:205:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    224:248:boolean equals(java.lang.Object) -> equals
    47:47:java.lang.Object getKey() -> getKey
    257:257:java.lang.String getKey() -> getKey
    123:123:java.lang.String getName() -> getName
    47:47:java.lang.Object getValue() -> getValue
    266:266:java.lang.String getValue() -> getValue
    127:127:java.lang.Object getValueAsObject() -> getValueAsObject
    282:282:int hashCode() -> hashCode
    111:112:void setQuotedValue() -> setQuotedValue
    47:47:java.lang.Object setValue(java.lang.Object) -> setValue
    274:275:java.lang.String setValue(java.lang.String) -> setValue
    142:142:void setValueAsObject(java.lang.Object) -> setValueAsObject
gov.nist.core.NameValueList -> gov.nist.core.NameValueList:
    66:68:void <init>() -> <init>
    71:76:void <init>(boolean) -> <init>
    279:279:void clear() -> clear
    216:220:java.lang.Object clone() -> clone
    287:287:boolean containsKey(java.lang.Object) -> containsKey
    295:295:boolean containsValue(java.lang.Object) -> containsValue
    205:207:boolean delete(java.lang.String) -> delete
    90:90:java.lang.String encode() -> encode
    94:106:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    303:303:java.util.Set entrySet() -> entrySet
    147:163:boolean equals(java.lang.Object) -> equals
    54:54:java.lang.Object get(java.lang.Object) -> get
    311:311:gov.nist.core.NameValue get(java.lang.Object) -> get
    186:186:gov.nist.core.NameValue getNameValue(java.lang.String) -> getNameValue
    254:254:java.util.Iterator getNames() -> getNames
    264:270:java.lang.String getParameter(java.lang.String) -> getParameter
    173:175:java.lang.Object getValue(java.lang.String) -> getValue
    352:352:int hashCode() -> hashCode
    236:236:boolean isEmpty() -> isEmpty
    319:319:java.util.Set keySet() -> keySet
    54:54:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    327:327:gov.nist.core.NameValue put(java.lang.String,gov.nist.core.NameValue) -> put
    331:331:void putAll(java.util.Map) -> putAll
    54:54:java.lang.Object remove(java.lang.Object) -> remove
    339:339:gov.nist.core.NameValue remove(java.lang.Object) -> remove
    124:124:void set(gov.nist.core.NameValue) -> set
    131:132:void set(java.lang.String,java.lang.Object) -> set
    80:80:void setSeparator(java.lang.String) -> setSeparator
    229:229:int size() -> size
    116:116:java.lang.String toString() -> toString
    347:347:java.util.Collection values() -> values
gov.nist.core.ParserCore -> gov.nist.core.ParserCore:
    41:41:void <clinit>() -> <clinit>
    40:40:void <init>() -> <init>
    101:111:void dbg_enter(java.lang.String) -> dbg_enter
    115:126:void dbg_leave(java.lang.String) -> dbg_leave
    49:95:gov.nist.core.NameValue nameValue(char) -> nameValue
    130:130:gov.nist.core.NameValue nameValue() -> nameValue
gov.nist.core.StringTokenizer -> gov.nist.core.StringTokenizer:
    51:54:void <init>(java.lang.String) -> <init>
    154:154:void consume() -> consume
    158:158:void consume(int) -> consume
    113:120:java.lang.String getLine() -> getLine
    145:150:char getNextChar() -> getNextChar
    175:184:java.lang.String getNextToken(char) -> getNextToken
    72:72:boolean hasMoreChars() -> hasMoreChars
    86:86:boolean isAlpha(char) -> isAlpha
    106:108:boolean isAlphaDigit(char) -> isAlphaDigit
    95:95:boolean isDigit(char) -> isDigit
    78:78:boolean isHexDigit(char) -> isHexDigit
    131:131:char lookAhead() -> lookAhead
    137:137:char lookAhead(int) -> lookAhead
gov.nist.core.Token -> gov.nist.core.Token:
    37:37:void <init>() -> <init>
    44:44:int getTokenType() -> getTokenType
    41:41:java.lang.String getTokenValue() -> getTokenValue
    47:47:java.lang.String toString() -> toString
gov.nist.javax.sip.address.AddressImpl -> gov.nist.javax.sip.address.AddressImpl:
    189:190:void <init>() -> <init>
    340:342:java.lang.Object clone() -> clone
    164:164:java.lang.String encode() -> encode
    168:183:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    263:267:boolean equals(java.lang.Object) -> equals
    198:198:int getAddressType() -> getAddressType
    104:107:gov.nist.core.HostPort getHostPort() -> getHostPort
    301:301:javax.sip.address.URI getURI() -> getURI
    248:248:int hashCode() -> hashCode
    83:95:boolean match(java.lang.Object) -> match
    209:209:void setAddressType(int) -> setAddressType
    229:230:void setDisplayName(java.lang.String) -> setDisplayName
    319:319:void setURI(javax.sip.address.URI) -> setURI
    334:336:void setWildCardFlag() -> setWildCardFlag
gov.nist.javax.sip.address.Authority -> gov.nist.javax.sip.address.Authority:
    42:42:void <init>() -> <init>
    223:227:java.lang.Object clone() -> clone
    59:59:java.lang.String encode() -> encode
    63:68:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    80:88:boolean equals(java.lang.Object) -> equals
    135:138:gov.nist.core.Host getHost() -> getHost
    100:100:gov.nist.core.HostPort getHostPort() -> getHostPort
    116:119:java.lang.String getPassword() -> getPassword
    127:127:java.lang.String getUser() -> getUser
    233:234:int hashCode() -> hashCode
    204:204:void setHostPort(gov.nist.core.HostPort) -> setHostPort
    164:166:void setPassword(java.lang.String) -> setPassword
    174:176:void setUser(java.lang.String) -> setUser
gov.nist.javax.sip.address.GenericURI -> gov.nist.javax.sip.address.GenericURI:
    64:64:void <init>() -> <init>
    71:77:void <init>(java.lang.String) -> <init>
    85:85:java.lang.String encode() -> encode
    89:89:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    121:126:boolean equals(java.lang.Object) -> equals
    106:106:java.lang.String getScheme() -> getScheme
    132:132:int hashCode() -> hashCode
    115:115:boolean isSipURI() -> isSipURI
    96:96:java.lang.String toString() -> toString
gov.nist.javax.sip.address.NetObject -> gov.nist.javax.sip.address.NetObject:
    76:76:void <init>() -> <init>
    284:374:java.lang.String debugDump() -> debugDump
    386:389:java.lang.String debugDump(int) -> debugDump
    84:148:boolean equals(java.lang.Object) -> equals
    170:270:boolean match(java.lang.Object) -> match
    398:398:java.lang.String toString() -> toString
gov.nist.javax.sip.address.RFC2396UrlDecoder -> gov.nist.javax.sip.address.RFC2396UrlDecoder:
    52:89:java.lang.String decode(java.lang.String) -> decode
gov.nist.javax.sip.address.SipUri -> gov.nist.javax.sip.address.SipUri:
    81:85:void <init>() -> <init>
    713:721:java.lang.Object clone() -> clone
    238:238:java.lang.String encode() -> encode
    242:251:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    157:221:boolean equals(java.lang.Object) -> equals
    735:736:java.lang.String getHeader(java.lang.String) -> getHeader
    748:748:java.util.Iterator getHeaderNames() -> getHeaderNames
    424:426:java.lang.String getHost() -> getHost
    402:405:gov.nist.core.HostPort getHostPort() -> getHostPort
    768:771:java.lang.String getMAddrParam() -> getMAddrParam
    782:782:java.lang.String getMethodParam() -> getMethodParam
    793:799:java.lang.String getParameter(java.lang.String) -> getParameter
    813:813:java.util.Iterator getParameterNames() -> getParameterNames
    414:417:int getPort() -> getPort
    101:101:java.lang.String getScheme() -> getScheme
    822:824:int getTTLParam() -> getTTLParam
    835:836:java.lang.String getTransportParam() -> getTransportParam
    849:849:java.lang.String getUser() -> getUser
    1012:1012:java.lang.String getUserParam() -> getUserParam
    367:369:java.lang.String getUserPassword() -> getUserPassword
    859:859:boolean isSecure() -> isSecure
    704:707:void setHostPort(gov.nist.core.HostPort) -> setHostPort
    675:675:void setQHeader(gov.nist.core.NameValue) -> setQHeader
    92:95:void setScheme(java.lang.String) -> setScheme
    682:682:void setUriParameter(gov.nist.core.NameValue) -> setUriParameter
    532:536:void setUser(java.lang.String) -> setUser
    376:378:void setUserPassword(java.lang.String) -> setUserPassword
    262:262:java.lang.String toString() -> toString
gov.nist.javax.sip.address.TelURLImpl -> gov.nist.javax.sip.address.TelURLImpl:
    51:52:void <init>() -> <init>
    176:178:java.lang.Object clone() -> clone
    162:162:java.lang.String encode() -> encode
    166:167:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    183:183:java.lang.String getParameter(java.lang.String) -> getParameter
    191:191:java.util.Iterator getParameterNames() -> getParameterNames
    87:87:java.lang.String getScheme() -> getScheme
    60:60:void setTelephoneNumber(gov.nist.javax.sip.address.TelephoneNumber) -> setTelephoneNumber
    158:158:java.lang.String toString() -> toString
gov.nist.javax.sip.address.TelephoneNumber -> gov.nist.javax.sip.address.TelephoneNumber:
    60:61:void <init>() -> <init>
    239:241:java.lang.Object clone() -> clone
    185:185:java.lang.String encode() -> encode
    189:194:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    209:215:java.lang.String getParameter(java.lang.String) -> getParameter
    226:226:java.util.Iterator getParameterNames() -> getParameterNames
    149:149:void setGlobal(boolean) -> setGlobal
    142:142:void setParameters(gov.nist.core.NameValueList) -> setParameters
    181:181:void setPhoneNumber(java.lang.String) -> setPhoneNumber
gov.nist.javax.sip.address.UserInfo -> gov.nist.javax.sip.address.UserInfo:
    70:70:void <init>() -> <init>
    106:106:java.lang.String encode() -> encode
    110:113:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    79:98:boolean equals(java.lang.Object) -> equals
    169:169:void setPassword(java.lang.String) -> setPassword
    151:160:void setUser(java.lang.String) -> setUser
    179:181:void setUserType(int) -> setUserType
gov.nist.javax.sip.header.Accept -> gov.nist.javax.sip.header.Accept:
    62:62:void <init>() -> <init>
    195:197:java.lang.Object clone() -> clone
    92:92:java.lang.String encodeBody() -> encodeBody
    96:100:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    160:162:void setContentSubType(java.lang.String) -> setContentSubType
    169:171:void setContentType(java.lang.String) -> setContentType
gov.nist.javax.sip.header.AcceptEncoding -> gov.nist.javax.sip.header.AcceptEncoding:
    85:85:void <init>() -> <init>
    94:94:java.lang.String encodeBody() -> encodeBody
    98:102:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    149:150:void setEncoding(java.lang.String) -> setEncoding
    133:134:void setQValue(float) -> setQValue
gov.nist.javax.sip.header.AcceptEncodingList -> gov.nist.javax.sip.header.AcceptEncodingList:
    53:53:void <init>() -> <init>
    45:46:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.AcceptLanguage -> gov.nist.javax.sip.header.AcceptLanguage:
    68:68:void <init>() -> <init>
    75:82:java.lang.String encodeBody() -> encodeBody
    127:127:void setLanguageRange(java.lang.String) -> setLanguageRange
    151:155:void setQValue(float) -> setQValue
gov.nist.javax.sip.header.AcceptLanguageList -> gov.nist.javax.sip.header.AcceptLanguageList:
    53:53:void <init>() -> <init>
    47:48:java.lang.Object clone() -> clone
    40:40:javax.sip.header.Header getFirst() -> getFirst
    57:61:gov.nist.javax.sip.header.AcceptLanguage getFirst() -> getFirst
gov.nist.javax.sip.header.AcceptList -> gov.nist.javax.sip.header.AcceptList:
    58:58:void <init>() -> <init>
    50:51:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.AddressParametersHeader -> gov.nist.javax.sip.header.AddressParametersHeader:
    67:67:void <init>(java.lang.String) -> <init>
    78:78:void <init>(java.lang.String,boolean) -> <init>
    85:87:java.lang.Object clone() -> clone
    99:101:boolean equals(java.lang.Object) -> equals
    53:53:javax.sip.address.Address getAddress() -> getAddress
    60:60:void setAddress(javax.sip.address.Address) -> setAddress
gov.nist.javax.sip.header.AlertInfo -> gov.nist.javax.sip.header.AlertInfo:
    63:63:void <init>() -> <init>
    120:124:java.lang.Object clone() -> clone
    71:80:java.lang.String encodeBody() -> encodeBody
    88:88:void setAlertInfo(javax.sip.address.URI) -> setAlertInfo
    96:96:void setAlertInfo(java.lang.String) -> setAlertInfo
gov.nist.javax.sip.header.AlertInfoList -> gov.nist.javax.sip.header.AlertInfoList:
    55:55:void <init>() -> <init>
    46:47:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.Allow -> gov.nist.javax.sip.header.Allow:
    54:54:void <init>() -> <init>
    88:88:java.lang.String encodeBody() -> encodeBody
    78:81:void setMethod(java.lang.String) -> setMethod
gov.nist.javax.sip.header.AllowEvents -> gov.nist.javax.sip.header.AllowEvents:
    58:58:void <init>() -> <init>
    98:98:java.lang.String encodeBody() -> encodeBody
    79:82:void setEventType(java.lang.String) -> setEventType
gov.nist.javax.sip.header.AllowEventsList -> gov.nist.javax.sip.header.AllowEventsList:
    62:62:void <init>() -> <init>
    53:54:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.AllowList -> gov.nist.javax.sip.header.AllowList:
    62:62:void <init>() -> <init>
    53:54:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.AuthenticationHeader -> gov.nist.javax.sip.header.AuthenticationHeader:
    87:89:void <init>(java.lang.String) -> <init>
    93:94:void <init>() -> <init>
    157:158:java.lang.String encodeBody() -> encodeBody
    307:307:java.lang.String getAlgorithm() -> getAlgorithm
    243:243:java.lang.String getNonce() -> getNonce
    363:363:java.lang.String getOpaque() -> getOpaque
    335:335:java.lang.String getQop() -> getQop
    213:213:java.lang.String getRealm() -> getRealm
    180:180:java.lang.String getScheme() -> getScheme
    295:296:void setAlgorithm(java.lang.String) -> setAlgorithm
    424:424:void setCNonce(java.lang.String) -> setCNonce
    229:232:void setNonce(java.lang.String) -> setNonce
    447:453:void setNonceCount(int) -> setNonceCount
    351:352:void setOpaque(java.lang.String) -> setOpaque
    106:136:void setParameter(java.lang.String,java.lang.String) -> setParameter
    323:324:void setQop(java.lang.String) -> setQop
    198:201:void setRealm(java.lang.String) -> setRealm
    474:476:void setResponse(java.lang.String) -> setResponse
    170:170:void setScheme(java.lang.String) -> setScheme
    259:263:void setURI(javax.sip.address.URI) -> setURI
    509:509:void setUsername(java.lang.String) -> setUsername
gov.nist.javax.sip.header.AuthenticationInfo -> gov.nist.javax.sip.header.AuthenticationInfo:
    50:51:void <init>() -> <init>
    62:62:java.lang.String encodeBody() -> encodeBody
    209:233:void setParameter(java.lang.String,java.lang.String) -> setParameter
gov.nist.javax.sip.header.Authorization -> gov.nist.javax.sip.header.Authorization:
    57:57:void <init>() -> <init>
gov.nist.javax.sip.header.AuthorizationList -> gov.nist.javax.sip.header.AuthorizationList:
    60:60:void <init>() -> <init>
    52:53:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.CSeq -> gov.nist.javax.sip.header.CSeq:
    67:67:void <init>() -> <init>
    103:103:java.lang.String encode() -> encode
    112:112:java.lang.String encodeBody() -> encodeBody
    116:116:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    90:93:boolean equals(java.lang.Object) -> equals
    124:124:java.lang.String getMethod() -> getMethod
    179:179:long getSeqNumber() -> getSeqNumber
    158:161:void setMethod(java.lang.String) -> setMethod
    134:142:void setSeqNumber(long) -> setSeqNumber
gov.nist.javax.sip.header.CallID -> gov.nist.javax.sip.header.CallID:
    57:57:void <init>() -> <init>
    142:144:java.lang.Object clone() -> clone
    82:82:java.lang.String encodeBody() -> encodeBody
    86:87:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    69:71:boolean equals(java.lang.Object) -> equals
    98:98:java.lang.String getCallId() -> getCallId
    118:120:void setCallId(java.lang.String) -> setCallId
gov.nist.javax.sip.header.CallIdentifier -> gov.nist.javax.sip.header.CallIdentifier:
    60:60:void <init>() -> <init>
    79:80:void <init>(java.lang.String) -> <init>
    88:88:java.lang.String encode() -> encode
    92:94:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    107:119:boolean equals(java.lang.Object) -> equals
    127:130:int hashCode() -> hashCode
    162:171:void setCallID(java.lang.String) -> setCallID
gov.nist.javax.sip.header.CallInfo -> gov.nist.javax.sip.header.CallInfo:
    56:56:void <init>() -> <init>
    118:120:java.lang.Object clone() -> clone
    64:64:java.lang.String encodeBody() -> encodeBody
    68:74:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    114:114:void setInfo(javax.sip.address.URI) -> setInfo
gov.nist.javax.sip.header.CallInfoList -> gov.nist.javax.sip.header.CallInfoList:
    57:57:void <init>() -> <init>
    49:50:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.Contact -> gov.nist.javax.sip.header.Contact:
    78:78:void <init>() -> <init>
    221:223:java.lang.Object clone() -> clone
    100:100:java.lang.String encodeBody() -> encodeBody
    104:119:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    244:244:boolean equals(java.lang.Object) -> equals
    145:145:javax.sip.address.Address getAddress() -> getAddress
    203:205:void setAddress(javax.sip.address.Address) -> setAddress
    84:91:void setParameter(java.lang.String,java.lang.String) -> setParameter
    190:192:void setWildCardFlag(boolean) -> setWildCardFlag
gov.nist.javax.sip.header.ContactList -> gov.nist.javax.sip.header.ContactList:
    55:55:void <init>() -> <init>
    47:48:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ContentDisposition -> gov.nist.javax.sip.header.ContentDisposition:
    58:58:void <init>() -> <init>
    67:71:java.lang.String encodeBody() -> encodeBody
    81:84:void setDispositionType(java.lang.String) -> setDispositionType
gov.nist.javax.sip.header.ContentEncoding -> gov.nist.javax.sip.header.ContentEncoding:
    97:97:void <init>() -> <init>
    114:114:java.lang.String encodeBody() -> encodeBody
    131:133:void setEncoding(java.lang.String) -> setEncoding
gov.nist.javax.sip.header.ContentEncodingList -> gov.nist.javax.sip.header.ContentEncodingList:
    52:52:void <init>() -> <init>
    43:44:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ContentLanguage -> gov.nist.javax.sip.header.ContentLanguage:
    95:95:void <init>() -> <init>
    103:104:void <init>(java.lang.String) -> <init>
    165:167:java.lang.Object clone() -> clone
    112:112:java.lang.String encodeBody() -> encodeBody
    120:123:java.lang.String getLanguageTag() -> getLanguageTag
    132:136:void setLanguageTag(java.lang.String) -> setLanguageTag
gov.nist.javax.sip.header.ContentLanguageList -> gov.nist.javax.sip.header.ContentLanguageList:
    50:50:void <init>() -> <init>
    43:44:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ContentLength -> gov.nist.javax.sip.header.ContentLength:
    92:92:void <init>() -> <init>
    99:100:void <init>(int) -> <init>
    129:129:java.lang.String encodeBody() -> encodeBody
    133:136:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    151:153:boolean equals(java.lang.Object) -> equals
    108:108:int getContentLength() -> getContentLength
    144:144:boolean match(java.lang.Object) -> match
    118:121:void setContentLength(int) -> setContentLength
gov.nist.javax.sip.header.ContentType -> gov.nist.javax.sip.header.ContentType:
    79:79:void <init>() -> <init>
    206:208:java.lang.Object clone() -> clone
    106:106:java.lang.String encodeBody() -> encodeBody
    110:113:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    213:217:boolean equals(java.lang.Object) -> equals
    157:157:java.lang.String getCharset() -> getCharset
    143:143:java.lang.String getContentSubType() -> getContentSubType
    151:151:java.lang.String getContentType() -> getContentType
    199:202:void setContentSubType(java.lang.String) -> setContentSubType
    187:190:void setContentType(java.lang.String) -> setContentType
gov.nist.javax.sip.header.ErrorInfo -> gov.nist.javax.sip.header.ErrorInfo:
    61:61:void <init>() -> <init>
    134:136:java.lang.Object clone() -> clone
    78:84:java.lang.String encodeBody() -> encodeBody
    94:94:void setErrorInfo(javax.sip.address.URI) -> setErrorInfo
gov.nist.javax.sip.header.ErrorInfoList -> gov.nist.javax.sip.header.ErrorInfoList:
    71:71:void <init>() -> <init>
    63:64:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.Event -> gov.nist.javax.sip.header.Event:
    58:58:void <init>() -> <init>
    111:111:java.lang.String encodeBody() -> encodeBody
    115:120:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    71:72:void setEventType(java.lang.String) -> setEventType
gov.nist.javax.sip.header.Expires -> gov.nist.javax.sip.header.Expires:
    59:59:void <init>() -> <init>
    67:67:java.lang.String encodeBody() -> encodeBody
    71:71:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    102:103:void setExpires(int) -> setExpires
gov.nist.javax.sip.header.ExtensionHeaderImpl -> gov.nist.javax.sip.header.ExtensionHeaderImpl:
    56:56:void <init>() -> <init>
    60:60:void <init>(java.lang.String) -> <init>
    108:113:java.lang.String encode() -> encode
    121:121:java.lang.String encodeBody() -> encodeBody
    84:99:java.lang.String getHeaderValue() -> getHeaderValue
    76:76:void setValue(java.lang.String) -> setValue
gov.nist.javax.sip.header.ExtensionHeaderList -> gov.nist.javax.sip.header.ExtensionHeaderList:
    54:54:void <init>(java.lang.String) -> <init>
    58:58:void <init>() -> <init>
    49:50:java.lang.Object clone() -> clone
    63:69:java.lang.String encode() -> encode
gov.nist.javax.sip.header.From -> gov.nist.javax.sip.header.From:
    60:60:void <init>() -> <init>
    77:77:java.lang.String encodeBody() -> encodeBody
    81:90:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    161:161:boolean equals(java.lang.Object) -> equals
    141:141:void setAddress(javax.sip.address.Address) -> setAddress
gov.nist.javax.sip.header.HeaderFactoryImpl -> gov.nist.javax.sip.header.HeaderFactoryImpl:
    66:1699:void <init>() -> <init>
    1166:1186:javax.sip.header.Header createHeader(java.lang.String) -> createHeader
    1206:1213:javax.sip.header.Header createHeader(java.lang.String,java.lang.String) -> createHeader
gov.nist.javax.sip.header.InReplyTo -> gov.nist.javax.sip.header.InReplyTo:
    56:56:void <init>() -> <init>
    104:106:java.lang.Object clone() -> clone
    100:100:java.lang.String encodeBody() -> encodeBody
    90:92:java.lang.String getCallId() -> getCallId
    77:79:void setCallId(java.lang.String) -> setCallId
gov.nist.javax.sip.header.InReplyToList -> gov.nist.javax.sip.header.InReplyToList:
    57:57:void <init>() -> <init>
    49:50:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.Indentation -> gov.nist.javax.sip.header.Indentation:
    54:55:void <init>(int) -> <init>
    97:99:java.lang.String getIndentation() -> getIndentation
gov.nist.javax.sip.header.MaxForwards -> gov.nist.javax.sip.header.MaxForwards:
    55:55:void <init>() -> <init>
    88:88:java.lang.String encodeBody() -> encodeBody
    92:92:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    112:114:boolean equals(java.lang.Object) -> equals
    67:67:int getMaxForwards() -> getMaxForwards
    77:79:void setMaxForwards(int) -> setMaxForwards
gov.nist.javax.sip.header.MediaRange -> gov.nist.javax.sip.header.MediaRange:
    71:71:void <init>() -> <init>
    109:109:java.lang.String encode() -> encode
    113:115:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    85:85:java.lang.String getSubtype() -> getSubtype
    78:78:java.lang.String getType() -> getType
    101:101:void setSubtype(java.lang.String) -> setSubtype
    93:93:void setType(java.lang.String) -> setType
gov.nist.javax.sip.header.MimeVersion -> gov.nist.javax.sip.header.MimeVersion:
    66:66:void <init>() -> <init>
    124:126:java.lang.String encodeBody() -> encodeBody
    113:116:void setMajorVersion(int) -> setMajorVersion
    97:100:void setMinorVersion(int) -> setMinorVersion
gov.nist.javax.sip.header.MinExpires -> gov.nist.javax.sip.header.MinExpires:
    59:59:void <init>() -> <init>
    67:67:java.lang.String encodeBody() -> encodeBody
    95:96:void setExpires(int) -> setExpires
gov.nist.javax.sip.header.Organization -> gov.nist.javax.sip.header.Organization:
    70:70:void <init>() -> <init>
    63:63:java.lang.String encodeBody() -> encodeBody
    87:90:void setOrganization(java.lang.String) -> setOrganization
gov.nist.javax.sip.header.ParametersHeader -> gov.nist.javax.sip.header.ParametersHeader:
    58:60:void <init>() -> <init>
    64:66:void <init>(java.lang.String) -> <init>
    70:72:void <init>(java.lang.String,boolean) -> <init>
    464:466:java.lang.Object clone() -> clone
    579:606:boolean equalParameters(javax.sip.header.Parameters) -> equalParameters
    459:459:gov.nist.core.NameValue getNameValue(java.lang.String) -> getNameValue
    84:84:java.lang.String getParameter(java.lang.String) -> getParameter
    106:106:java.util.Iterator getParameterNames() -> getParameterNames
    115:115:boolean hasParameters() -> hasParameters
    127:127:void removeParameter(java.lang.String) -> removeParameter
    292:292:void removeParameters() -> removeParameters
    494:494:void setMultiParameter(gov.nist.core.NameValue) -> setMultiParameter
    149:154:void setParameter(java.lang.String,java.lang.String) -> setParameter
    205:206:void setParameter(java.lang.String,int) -> setParameter
    245:251:void setParameter(java.lang.String,float) -> setParameter
    308:308:void setParameter(gov.nist.core.NameValue) -> setParameter
gov.nist.javax.sip.header.Priority -> gov.nist.javax.sip.header.Priority:
    72:72:void <init>() -> <init>
    80:80:java.lang.String encodeBody() -> encodeBody
    97:100:void setPriority(java.lang.String) -> setPriority
gov.nist.javax.sip.header.Protocol -> gov.nist.javax.sip.header.Protocol:
    146:149:void <init>() -> <init>
    67:67:java.lang.String encode() -> encode
    71:75:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    101:101:java.lang.String getProtocol() -> getProtocol
    116:116:java.lang.String getTransport() -> getTransport
    124:124:void setProtocolName(java.lang.String) -> setProtocolName
    132:132:void setProtocolVersion(java.lang.String) -> setProtocolVersion
    140:140:void setTransport(java.lang.String) -> setTransport
gov.nist.javax.sip.header.ProxyAuthenticate -> gov.nist.javax.sip.header.ProxyAuthenticate:
    57:57:void <init>() -> <init>
gov.nist.javax.sip.header.ProxyAuthenticateList -> gov.nist.javax.sip.header.ProxyAuthenticateList:
    59:59:void <init>() -> <init>
    51:52:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ProxyAuthorization -> gov.nist.javax.sip.header.ProxyAuthorization:
    56:56:void <init>() -> <init>
gov.nist.javax.sip.header.ProxyAuthorizationList -> gov.nist.javax.sip.header.ProxyAuthorizationList:
    58:58:void <init>() -> <init>
    50:51:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ProxyRequire -> gov.nist.javax.sip.header.ProxyRequire:
    60:60:void <init>() -> <init>
    76:76:java.lang.String encodeBody() -> encodeBody
    89:90:void setOptionTag(java.lang.String) -> setOptionTag
gov.nist.javax.sip.header.ProxyRequireList -> gov.nist.javax.sip.header.ProxyRequireList:
    58:58:void <init>() -> <init>
    50:51:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.RAck -> gov.nist.javax.sip.header.RAck:
    58:58:void <init>() -> <init>
    69:70:java.lang.String encodeBody() -> encodeBody
    136:137:void setCSequenceNumber(long) -> setCSequenceNumber
    121:121:void setMethod(java.lang.String) -> setMethod
    152:154:void setRSequenceNumber(long) -> setRSequenceNumber
gov.nist.javax.sip.header.RSeq -> gov.nist.javax.sip.header.RSeq:
    47:47:void <init>() -> <init>
    63:63:java.lang.String encodeBody() -> encodeBody
    73:75:void setSeqNumber(long) -> setSeqNumber
gov.nist.javax.sip.header.Reason -> gov.nist.javax.sip.header.Reason:
    62:125:void <init>() -> <init>
    143:147:java.lang.String encodeBody() -> encodeBody
    89:89:void setProtocol(java.lang.String) -> setProtocol
gov.nist.javax.sip.header.ReasonList -> gov.nist.javax.sip.header.ReasonList:
    56:56:void <init>() -> <init>
    48:49:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.RecordRoute -> gov.nist.javax.sip.header.RecordRoute:
    66:66:void <init>() -> <init>
    74:74:java.lang.String encodeBody() -> encodeBody
    78:88:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
gov.nist.javax.sip.header.RecordRouteList -> gov.nist.javax.sip.header.RecordRouteList:
    53:53:void <init>() -> <init>
    46:47:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ReferTo -> gov.nist.javax.sip.header.ReferTo:
    58:58:void <init>() -> <init>
    66:78:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.ReplyTo -> gov.nist.javax.sip.header.ReplyTo:
    58:58:void <init>() -> <init>
    76:76:java.lang.String encode() -> encode
    85:93:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.RequestLine -> gov.nist.javax.sip.header.RequestLine:
    63:64:void <init>() -> <init>
    208:210:java.lang.Object clone() -> clone
    73:73:java.lang.String encode() -> encode
    77:86:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    192:200:boolean equals(java.lang.Object) -> equals
    109:109:java.lang.String getMethod() -> getMethod
    130:130:void setMethod(java.lang.String) -> setMethod
gov.nist.javax.sip.header.Require -> gov.nist.javax.sip.header.Require:
    58:58:void <init>() -> <init>
    74:74:java.lang.String encodeBody() -> encodeBody
    87:90:void setOptionTag(java.lang.String) -> setOptionTag
gov.nist.javax.sip.header.RequireList -> gov.nist.javax.sip.header.RequireList:
    59:59:void <init>() -> <init>
    51:52:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.RetryAfter -> gov.nist.javax.sip.header.RetryAfter:
    59:68:void <init>() -> <init>
    75:87:java.lang.String encodeBody() -> encodeBody
    159:160:void setComment(java.lang.String) -> setComment
    174:175:void setDuration(int) -> setDuration
    121:123:void setRetryAfter(int) -> setRetryAfter
gov.nist.javax.sip.header.Route -> gov.nist.javax.sip.header.Route:
    56:56:void <init>() -> <init>
    87:87:java.lang.String encodeBody() -> encodeBody
    91:101:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    107:107:boolean equals(java.lang.Object) -> equals
    76:76:int hashCode() -> hashCode
gov.nist.javax.sip.header.RouteList -> gov.nist.javax.sip.header.RouteList:
    52:52:void <init>() -> <init>
    57:58:java.lang.Object clone() -> clone
    63:64:java.lang.String encode() -> encode
    72:82:boolean equals(java.lang.Object) -> equals
gov.nist.javax.sip.header.SIPDate -> gov.nist.javax.sip.header.SIPDate:
    151:159:void <init>() -> <init>
    166:248:void <init>(long) -> <init>
    520:525:java.lang.Object clone() -> clone
    258:291:java.lang.String encode() -> encode
    137:139:boolean equals(java.lang.Object) -> equals
gov.nist.javax.sip.header.SIPDateHeader -> gov.nist.javax.sip.header.SIPDateHeader:
    57:57:void <init>() -> <init>
    99:101:java.lang.Object clone() -> clone
    64:64:java.lang.String encodeBody() -> encodeBody
    83:83:void setDate(java.util.Calendar) -> setDate
gov.nist.javax.sip.header.SIPETag -> gov.nist.javax.sip.header.SIPETag:
    54:54:void <init>() -> <init>
    68:68:java.lang.String encodeBody() -> encodeBody
    85:88:void setETag(java.lang.String) -> setETag
gov.nist.javax.sip.header.SIPHeader -> gov.nist.javax.sip.header.SIPHeader:
    53:54:void <init>(java.lang.String) -> <init>
    59:59:void <init>() -> <init>
    118:118:java.lang.String encode() -> encode
    122:124:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    137:137:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    67:67:java.lang.String getHeaderName() -> getHeaderName
    76:76:java.lang.String getName() -> getName
    151:151:int hashCode() -> hashCode
    84:84:void setHeaderName(java.lang.String) -> setHeaderName
    155:155:java.lang.String toString() -> toString
gov.nist.javax.sip.header.SIPHeaderList -> gov.nist.javax.sip.header.SIPHeaderList:
    64:65:void <init>() -> <init>
    77:79:void <init>(java.lang.Class,java.lang.String) -> <init>
    49:49:void add(int,java.lang.Object) -> add
    49:49:boolean add(java.lang.Object) -> add
    89:89:boolean add(gov.nist.javax.sip.header.SIPHeader) -> add
    381:381:void add(int,gov.nist.javax.sip.header.SIPHeader) -> add
    520:520:boolean addAll(java.util.Collection) -> addAll
    524:524:boolean addAll(int,java.util.Collection) -> addAll
    536:536:void clear() -> clear
    450:458:java.lang.Object clone() -> clone
    464:466:gov.nist.javax.sip.header.SIPHeaderList clonehlist(java.util.List) -> clonehlist
    134:137:void concatenate(gov.nist.javax.sip.header.SIPHeaderList,boolean) -> concatenate
    540:540:boolean contains(java.lang.Object) -> contains
    529:529:boolean containsAll(java.util.Collection) -> containsAll
    327:339:java.lang.String debugDump(int) -> debugDump
    348:348:java.lang.String debugDump() -> debugDump
    151:151:java.lang.String encode() -> encode
    155:178:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    496:496:java.lang.String encodeBody() -> encodeBody
    500:510:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    399:405:boolean equals(java.lang.Object) -> equals
    49:49:java.lang.Object get(int) -> get
    552:552:gov.nist.javax.sip.header.SIPHeader get(int) -> get
    212:215:javax.sip.header.Header getFirst() -> getFirst
    263:263:java.util.List getHeaderList() -> getHeaderList
    235:235:java.lang.Class getMyClass() -> getMyClass
    60:60:java.lang.String getName() -> getName
    644:644:int hashCode() -> hashCode
    562:562:int indexOf(java.lang.Object) -> indexOf
    244:244:boolean isEmpty() -> isEmpty
    573:573:java.util.Iterator iterator() -> iterator
    584:584:int lastIndexOf(java.lang.Object) -> lastIndexOf
    254:254:java.util.ListIterator listIterator() -> listIterator
    274:274:java.util.ListIterator listIterator(int) -> listIterator
    49:49:java.lang.Object remove(int) -> remove
    597:597:boolean remove(java.lang.Object) -> remove
    608:608:gov.nist.javax.sip.header.SIPHeader remove(int) -> remove
    616:616:boolean removeAll(java.util.Collection) -> removeAll
    625:625:boolean retainAll(java.util.Collection) -> retainAll
    49:49:java.lang.Object set(int,java.lang.Object) -> set
    654:654:gov.nist.javax.sip.header.SIPHeader set(int,gov.nist.javax.sip.header.SIPHeader) -> set
    476:476:int size() -> size
    634:634:java.util.List subList(int,int) -> subList
    357:357:java.lang.Object[] toArray() -> toArray
    665:665:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
gov.nist.javax.sip.header.SIPHeaderNamesCache -> gov.nist.javax.sip.header.SIPHeaderNamesCache:
    12:23:void <clinit>() -> <clinit>
    31:33:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
gov.nist.javax.sip.header.SIPIfMatch -> gov.nist.javax.sip.header.SIPIfMatch:
    54:54:void <init>() -> <init>
    67:67:java.lang.String encodeBody() -> encodeBody
    84:87:void setETag(java.lang.String) -> setETag
gov.nist.javax.sip.header.SIPObject -> gov.nist.javax.sip.header.SIPObject:
    55:55:void <init>() -> <init>
    63:63:void dbgPrint() -> dbgPrint
    291:381:java.lang.String debugDump() -> debugDump
    390:393:java.lang.String debugDump(int) -> debugDump
    75:75:java.lang.StringBuffer encode(java.lang.StringBuffer) -> encode
    83:153:boolean equals(java.lang.Object) -> equals
    176:277:boolean match(java.lang.Object) -> match
    399:399:java.lang.String toString() -> toString
gov.nist.javax.sip.header.Server -> gov.nist.javax.sip.header.Server:
    86:87:void <init>() -> <init>
    79:79:void addProductToken(java.lang.String) -> addProductToken
    94:94:java.lang.String encodeBody() -> encodeBody
    62:72:java.lang.String encodeProduct() -> encodeProduct
gov.nist.javax.sip.header.Subject -> gov.nist.javax.sip.header.Subject:
    61:61:void <init>() -> <init>
    69:69:java.lang.String encodeBody() -> encodeBody
    86:89:void setSubject(java.lang.String) -> setSubject
gov.nist.javax.sip.header.SubscriptionState -> gov.nist.javax.sip.header.SubscriptionState:
    59:61:void <init>() -> <init>
    167:167:java.lang.String encodeBody() -> encodeBody
    171:182:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    73:76:void setExpires(int) -> setExpires
    133:136:void setReasonCode(java.lang.String) -> setReasonCode
    98:101:void setRetryAfter(int) -> setRetryAfter
    157:160:void setState(java.lang.String) -> setState
gov.nist.javax.sip.header.Supported -> gov.nist.javax.sip.header.Supported:
    59:60:void <init>() -> <init>
    77:80:java.lang.String encode() -> encode
    89:89:java.lang.String encodeBody() -> encodeBody
    102:105:void setOptionTag(java.lang.String) -> setOptionTag
gov.nist.javax.sip.header.SupportedList -> gov.nist.javax.sip.header.SupportedList:
    53:53:void <init>() -> <init>
    45:46:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.TimeStamp -> gov.nist.javax.sip.header.TimeStamp:
    56:72:void <init>() -> <init>
    99:108:java.lang.String encodeBody() -> encodeBody
    85:90:java.lang.String getDelayAsString() -> getDelayAsString
    76:81:java.lang.String getTimeStampAsString() -> getTimeStampAsString
    164:168:void setDelay(float) -> setDelay
    182:184:void setTime(long) -> setTime
    132:136:void setTimeStamp(float) -> setTimeStamp
gov.nist.javax.sip.header.To -> gov.nist.javax.sip.header.To:
    62:62:void <init>() -> <init>
    81:81:java.lang.String encode() -> encode
    90:90:java.lang.String encodeBody() -> encodeBody
    94:105:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    189:189:boolean equals(java.lang.Object) -> equals
gov.nist.javax.sip.header.Unsupported -> gov.nist.javax.sip.header.Unsupported:
    57:57:void <init>() -> <init>
    73:73:java.lang.String encodeBody() -> encodeBody
    89:92:void setOptionTag(java.lang.String) -> setOptionTag
gov.nist.javax.sip.header.UnsupportedList -> gov.nist.javax.sip.header.UnsupportedList:
    48:48:void <init>() -> <init>
    53:54:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.UserAgent -> gov.nist.javax.sip.header.UserAgent:
    81:82:void <init>() -> <init>
    74:74:void addProductToken(java.lang.String) -> addProductToken
    121:123:java.lang.Object clone() -> clone
    89:89:java.lang.String encodeBody() -> encodeBody
    60:67:java.lang.String encodeProduct() -> encodeProduct
gov.nist.javax.sip.header.Via -> gov.nist.javax.sip.header.Via:
    99:105:void <init>() -> <init>
    534:540:java.lang.Object clone() -> clone
    256:256:java.lang.String encodeBody() -> encodeBody
    260:270:java.lang.StringBuffer encodeBody(java.lang.StringBuffer) -> encodeBody
    112:118:boolean equals(java.lang.Object) -> equals
    298:305:java.lang.String getHost() -> getHost
    339:341:int getPort() -> getPort
    396:398:java.lang.String getProtocol() -> getProtocol
    351:353:int getRPort() -> getRPort
    365:367:java.lang.String getTransport() -> getTransport
    249:249:void setComment(java.lang.String) -> setComment
    240:240:void setSentBy(gov.nist.core.HostPort) -> setSentBy
    232:232:void setSentProtocol(gov.nist.javax.sip.header.Protocol) -> setSentProtocol
gov.nist.javax.sip.header.ViaList -> gov.nist.javax.sip.header.ViaList:
    57:57:void <init>() -> <init>
    50:51:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.WWWAuthenticate -> gov.nist.javax.sip.header.WWWAuthenticate:
    59:59:void <init>() -> <init>
gov.nist.javax.sip.header.WWWAuthenticateList -> gov.nist.javax.sip.header.WWWAuthenticateList:
    56:56:void <init>() -> <init>
    49:50:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.Warning -> gov.nist.javax.sip.header.Warning:
    69:69:void <init>() -> <init>
    76:84:java.lang.String encodeBody() -> encodeBody
    132:134:void setAgent(java.lang.String) -> setAgent
    118:120:void setCode(int) -> setCode
    145:149:void setText(java.lang.String) -> setText
gov.nist.javax.sip.header.WarningList -> gov.nist.javax.sip.header.WarningList:
    58:58:void <init>() -> <init>
    51:52:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.extensions.Join -> gov.nist.javax.sip.header.extensions.Join:
    43:43:void <init>() -> <init>
    60:65:java.lang.String encodeBody() -> encodeBody
    96:96:void setCallId(java.lang.String) -> setCallId
gov.nist.javax.sip.header.extensions.MinSE -> gov.nist.javax.sip.header.extensions.MinSE:
    43:43:void <init>() -> <init>
    51:54:java.lang.String encodeBody() -> encodeBody
    95:96:void setExpires(int) -> setExpires
gov.nist.javax.sip.header.extensions.References -> gov.nist.javax.sip.header.extensions.References:
    18:18:void <init>() -> <init>
    75:78:java.lang.String encodeBody() -> encodeBody
    50:50:java.lang.String getParameter(java.lang.String) -> getParameter
    55:55:java.util.Iterator getParameterNames() -> getParameterNames
    38:38:void setCallId(java.lang.String) -> setCallId
    65:65:void setParameter(java.lang.String,java.lang.String) -> setParameter
gov.nist.javax.sip.header.extensions.ReferredBy -> gov.nist.javax.sip.header.extensions.ReferredBy:
    39:39:void <init>() -> <init>
    53:65:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.extensions.Replaces -> gov.nist.javax.sip.header.extensions.Replaces:
    43:43:void <init>() -> <init>
    60:65:java.lang.String encodeBody() -> encodeBody
    96:96:void setCallId(java.lang.String) -> setCallId
gov.nist.javax.sip.header.extensions.SessionExpires -> gov.nist.javax.sip.header.extensions.SessionExpires:
    38:38:void <init>() -> <init>
    86:89:java.lang.String encodeBody() -> encodeBody
    70:71:void setExpires(int) -> setExpires
gov.nist.javax.sip.header.ims.PAccessNetworkInfo -> gov.nist.javax.sip.header.ims.PAccessNetworkInfo:
    60:61:void <init>() -> <init>
    283:283:java.lang.Object clone() -> clone
    250:265:java.lang.String encodeBody() -> encodeBody
    276:276:boolean equals(java.lang.Object) -> equals
    91:91:java.lang.String getAccessType() -> getAccessType
    245:245:java.lang.Object getExtensionAccessInfo() -> getExtensionAccessInfo
    80:84:void setAccessType(java.lang.String) -> setAccessType
gov.nist.javax.sip.header.ims.PAssertedIdentity -> gov.nist.javax.sip.header.ims.PAssertedIdentity:
    69:69:void <init>() -> <init>
    93:93:java.lang.Object clone() -> clone
    76:88:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.ims.PAssertedIdentityList -> gov.nist.javax.sip.header.ims.PAssertedIdentityList:
    58:58:void <init>() -> <init>
    63:64:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ims.PAssociatedURI -> gov.nist.javax.sip.header.ims.PAssociatedURI:
    76:76:void <init>() -> <init>
    148:150:java.lang.Object clone() -> clone
    109:121:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.ims.PAssociatedURIList -> gov.nist.javax.sip.header.ims.PAssociatedURIList:
    57:57:void <init>() -> <init>
    62:63:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ims.PCalledPartyID -> gov.nist.javax.sip.header.ims.PCalledPartyID:
    63:63:void <init>() -> <init>
    71:82:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.ims.PChargingFunctionAddresses -> gov.nist.javax.sip.header.ims.PChargingFunctionAddresses:
    83:83:void <init>() -> <init>
    91:99:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.ims.PChargingVector -> gov.nist.javax.sip.header.ims.PChargingVector:
    53:53:void <init>() -> <init>
    63:91:java.lang.String encodeBody() -> encodeBody
    135:135:java.lang.String getICIDGeneratedAt() -> getICIDGeneratedAt
    168:168:java.lang.String getOriginatingIOI() -> getOriginatingIOI
    199:199:java.lang.String getTerminatingIOI() -> getTerminatingIOI
gov.nist.javax.sip.header.ims.PMediaAuthorization -> gov.nist.javax.sip.header.ims.PMediaAuthorization:
    80:80:void <init>() -> <init>
    138:140:java.lang.Object clone() -> clone
    115:115:java.lang.String encodeBody() -> encodeBody
    127:130:boolean equals(java.lang.Object) -> equals
    91:91:java.lang.String getToken() -> getToken
    103:106:void setMediaAuthorizationToken(java.lang.String) -> setMediaAuthorizationToken
gov.nist.javax.sip.header.ims.PMediaAuthorizationList -> gov.nist.javax.sip.header.ims.PMediaAuthorizationList:
    47:47:void <init>() -> <init>
    52:53:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ims.PPreferredIdentity -> gov.nist.javax.sip.header.ims.PPreferredIdentity:
    68:68:void <init>() -> <init>
    75:85:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.ims.PVisitedNetworkID -> gov.nist.javax.sip.header.ims.PVisitedNetworkID:
    63:63:void <init>() -> <init>
    156:159:java.lang.Object clone() -> clone
    83:97:java.lang.String encodeBody() -> encodeBody
    145:149:boolean equals(java.lang.Object) -> equals
    133:133:java.lang.String getVisitedNetworkID() -> getVisitedNetworkID
    107:112:void setVisitedNetworkID(java.lang.String) -> setVisitedNetworkID
    121:126:void setVisitedNetworkID(gov.nist.core.Token) -> setVisitedNetworkID
gov.nist.javax.sip.header.ims.PVisitedNetworkIDList -> gov.nist.javax.sip.header.ims.PVisitedNetworkIDList:
    48:48:void <init>() -> <init>
    52:53:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ims.Path -> gov.nist.javax.sip.header.ims.Path:
    62:62:void <init>() -> <init>
    70:81:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.ims.PathList -> gov.nist.javax.sip.header.ims.PathList:
    42:42:void <init>() -> <init>
    47:48:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ims.Privacy -> gov.nist.javax.sip.header.ims.Privacy:
    65:65:void <init>() -> <init>
    141:143:java.lang.Object clone() -> clone
    86:86:java.lang.String encodeBody() -> encodeBody
    130:133:boolean equals(java.lang.Object) -> equals
    97:97:java.lang.String getPrivacy() -> getPrivacy
    111:114:void setPrivacy(java.lang.String) -> setPrivacy
gov.nist.javax.sip.header.ims.PrivacyList -> gov.nist.javax.sip.header.ims.PrivacyList:
    52:52:void <init>() -> <init>
    57:58:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ims.SecurityAgree -> gov.nist.javax.sip.header.ims.SecurityAgree:
    77:78:void <init>(java.lang.String) -> <init>
    86:87:void <init>() -> <init>
    360:362:java.lang.Object clone() -> clone
    122:122:java.lang.String encodeBody() -> encodeBody
    348:352:boolean equals(java.lang.Object) -> equals
    270:270:java.lang.String getSecurityMechanism() -> getSecurityMechanism
    94:115:void setParameter(java.lang.String,java.lang.String) -> setParameter
    134:137:void setSecurityMechanism(java.lang.String) -> setSecurityMechanism
gov.nist.javax.sip.header.ims.SecurityClient -> gov.nist.javax.sip.header.ims.SecurityClient:
    61:61:void <init>() -> <init>
gov.nist.javax.sip.header.ims.SecurityClientList -> gov.nist.javax.sip.header.ims.SecurityClientList:
    57:57:void <init>() -> <init>
    62:63:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ims.SecurityServer -> gov.nist.javax.sip.header.ims.SecurityServer:
    60:60:void <init>() -> <init>
gov.nist.javax.sip.header.ims.SecurityServerList -> gov.nist.javax.sip.header.ims.SecurityServerList:
    57:57:void <init>() -> <init>
    61:62:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ims.SecurityVerify -> gov.nist.javax.sip.header.ims.SecurityVerify:
    61:61:void <init>() -> <init>
gov.nist.javax.sip.header.ims.SecurityVerifyList -> gov.nist.javax.sip.header.ims.SecurityVerifyList:
    59:59:void <init>() -> <init>
    63:64:java.lang.Object clone() -> clone
gov.nist.javax.sip.header.ims.ServiceRoute -> gov.nist.javax.sip.header.ims.ServiceRoute:
    64:64:void <init>() -> <init>
    71:82:java.lang.String encodeBody() -> encodeBody
gov.nist.javax.sip.header.ims.ServiceRouteList -> gov.nist.javax.sip.header.ims.ServiceRouteList:
    45:45:void <init>() -> <init>
    49:50:java.lang.Object clone() -> clone
gov.nist.javax.sip.message.ListMap -> gov.nist.javax.sip.message.ListMap:
    52:52:void <clinit>() -> <clinit>
    170:181:gov.nist.javax.sip.header.SIPHeaderList getList(gov.nist.javax.sip.header.SIPHeader) -> getList
    139:143:boolean hasList(gov.nist.javax.sip.header.SIPHeader) -> hasList
    60:131:void initializeListMap() -> initializeListMap
gov.nist.javax.sip.message.MessageFactoryImpl -> gov.nist.javax.sip.message.MessageFactoryImpl:
    827:827:java.lang.String getDefaultContentEncodingCharset() -> getDefaultContentEncodingCharset
gov.nist.javax.sip.message.MessageObject -> gov.nist.javax.sip.message.MessageObject:
    157:157:void <init>() -> <init>
    50:50:void dbgPrint() -> dbgPrint
    60:152:java.lang.String debugDump() -> debugDump
gov.nist.javax.sip.message.SIPDuplicateHeaderException -> gov.nist.javax.sip.message.SIPDuplicateHeaderException:
    51:51:void <init>(java.lang.String) -> <init>
gov.nist.javax.sip.message.SIPMessage -> gov.nist.javax.sip.message.SIPMessage:
    937:1668:void <clinit>() -> <clinit>
    130:547:void <init>() -> <init>
    559:567:void attachHeader(gov.nist.javax.sip.header.SIPHeader) -> attachHeader
    623:623:void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean) -> attachHeader
    642:711:void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean,boolean) -> attachHeader
    473:493:java.lang.Object clone() -> clone
    504:534:java.lang.String debugDump() -> debugDump
    361:397:java.lang.String encode() -> encode
    1599:1615:boolean equals(java.lang.Object) -> equals
    1048:1048:javax.sip.header.CSeqHeader getCSeq() -> getCSeq
    1864:1868:java.lang.String getCharset() -> getCharset
    1258:1262:java.lang.Object getContent() -> getContent
    933:933:gov.nist.javax.sip.header.ContentType getContentTypeHeader() -> getContentTypeHeader
    913:913:javax.sip.header.Header getHeader(java.lang.String) -> getHeader
    1429:1437:java.util.List getHeaderList(java.lang.String) -> getHeaderList
    918:921:javax.sip.header.Header getHeaderLowerCase(java.lang.String) -> getHeaderLowerCase
    904:904:java.util.Iterator getHeaders() -> getHeaders
    884:888:int hashCode() -> hashCode
    1877:1877:boolean isNullRequest() -> isNullRequest
    274:311:boolean match(java.lang.Object) -> match
    331:345:void merge(java.lang.Object) -> merge
gov.nist.javax.sip.message.SIPRequest -> gov.nist.javax.sip.message.SIPRequest:
    97:130:void <clinit>() -> <clinit>
    187:187:void <init>() -> <init>
    481:486:java.lang.Object clone() -> clone
    199:207:java.lang.String debugDump() -> debugDump
    439:445:java.lang.String encode() -> encode
    497:501:boolean equals(java.lang.Object) -> equals
    157:158:java.lang.String getCannonicalName(java.lang.String) -> getCannonicalName
    531:541:boolean match(java.lang.Object) -> match
    106:106:void putName(java.lang.String) -> putName
    348:353:void setRequestLineDefaults() -> setRequestLineDefaults
    470:470:java.lang.String toString() -> toString
gov.nist.javax.sip.parser.AcceptEncodingParser -> gov.nist.javax.sip.parser.AcceptEncodingParser:
    87:139:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.AcceptLanguageParser -> gov.nist.javax.sip.parser.AcceptLanguageParser:
    84:132:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.AcceptParser -> gov.nist.javax.sip.parser.AcceptParser:
    67:112:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.AddressParametersParser -> gov.nist.javax.sip.parser.AddressParametersParser:
    52:73:void parse(gov.nist.javax.sip.header.AddressParametersHeader) -> parse
gov.nist.javax.sip.parser.AddressParser -> gov.nist.javax.sip.parser.AddressParser:
    40:42:void <init>(gov.nist.javax.sip.parser.Lexer) -> <init>
    93:126:gov.nist.javax.sip.address.AddressImpl address(boolean) -> address
    50:89:gov.nist.javax.sip.address.AddressImpl nameAddr() -> nameAddr
gov.nist.javax.sip.parser.AlertInfoParser -> gov.nist.javax.sip.parser.AlertInfoParser:
    70:113:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.AllowEventsParser -> gov.nist.javax.sip.parser.AllowEventsParser:
    67:103:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.AllowParser -> gov.nist.javax.sip.parser.AllowParser:
    66:102:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.AuthenticationInfoParser -> gov.nist.javax.sip.parser.AuthenticationInfoParser:
    66:96:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.AuthorizationParser -> gov.nist.javax.sip.parser.AuthorizationParser:
    65:73:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.CSeqParser -> gov.nist.javax.sip.parser.CSeqParser:
    57:79:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.CallIDParser -> gov.nist.javax.sip.parser.CallIDParser:
    63:80:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.CallInfoParser -> gov.nist.javax.sip.parser.CallInfoParser:
    66:110:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ChallengeParser -> gov.nist.javax.sip.parser.ChallengeParser:
    50:50:void <init>(java.lang.String) -> <init>
    88:106:void parse(gov.nist.javax.sip.header.AuthenticationHeader) -> parse
    68:76:void parseParameter(gov.nist.javax.sip.header.AuthenticationHeader) -> parseParameter
gov.nist.javax.sip.parser.ContactParser -> gov.nist.javax.sip.parser.ContactParser:
    56:80:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ContentDispositionParser -> gov.nist.javax.sip.parser.ContentDispositionParser:
    67:93:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ContentEncodingParser -> gov.nist.javax.sip.parser.ContentEncodingParser:
    69:108:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ContentLanguageParser -> gov.nist.javax.sip.parser.ContentLanguageParser:
    67:101:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ContentLengthParser -> gov.nist.javax.sip.parser.ContentLengthParser:
    53:70:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ContentTypeParser -> gov.nist.javax.sip.parser.ContentTypeParser:
    58:82:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.DateParser -> gov.nist.javax.sip.parser.DateParser:
    57:79:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ErrorInfoParser -> gov.nist.javax.sip.parser.ErrorInfoParser:
    67:100:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.EventParser -> gov.nist.javax.sip.parser.EventParser:
    67:92:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ExpiresParser -> gov.nist.javax.sip.parser.ExpiresParser:
    64:86:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.FromParser -> gov.nist.javax.sip.parser.FromParser:
    53:60:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.HeaderParser -> gov.nist.javax.sip.parser.HeaderParser:
    155:156:void <init>(java.lang.String) -> <init>
    83:123:java.util.Calendar date() -> date
    185:188:void headerName(int) -> headerName
    170:176:gov.nist.javax.sip.header.SIPHeader parse() -> parse
    133:145:void time(java.util.Calendar) -> time
    50:73:int wkday() -> wkday
gov.nist.javax.sip.parser.InReplyToParser -> gov.nist.javax.sip.parser.InReplyToParser:
    67:122:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.Lexer -> gov.nist.javax.sip.parser.Lexer:
    69:70:void <init>(java.lang.String,java.lang.String) -> <init>
    58:61:java.lang.String getHeaderName(java.lang.String) -> getHeaderName
    83:84:java.lang.String getHeaderValue(java.lang.String) -> getHeaderValue
    92:322:void selectLexer(java.lang.String) -> selectLexer
gov.nist.javax.sip.parser.MaxForwardsParser -> gov.nist.javax.sip.parser.MaxForwardsParser:
    52:69:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.MimeVersionParser -> gov.nist.javax.sip.parser.MimeVersionParser:
    67:93:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.MinExpiresParser -> gov.nist.javax.sip.parser.MinExpiresParser:
    68:90:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.OrganizationParser -> gov.nist.javax.sip.parser.OrganizationParser:
    65:82:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ParametersParser -> gov.nist.javax.sip.parser.ParametersParser:
    53:61:void parse(gov.nist.javax.sip.header.ParametersHeader) -> parse
    69:77:void parseNameValueList(gov.nist.javax.sip.header.ParametersHeader) -> parseNameValueList
gov.nist.javax.sip.parser.Parser -> gov.nist.javax.sip.parser.Parser:
    42:42:void <init>() -> <init>
    45:47:java.text.ParseException createParseException(java.lang.String) -> createParseException
    51:51:gov.nist.javax.sip.parser.Lexer getLexer() -> getLexer
    78:101:java.lang.String method() -> method
gov.nist.javax.sip.parser.ParserFactory -> gov.nist.javax.sip.parser.ParserFactory:
    56:278:void <clinit>() -> <clinit>
    286:312:gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String) -> createParser
gov.nist.javax.sip.parser.PriorityParser -> gov.nist.javax.sip.parser.PriorityParser:
    69:94:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ProxyAuthenticateParser -> gov.nist.javax.sip.parser.ProxyAuthenticateParser:
    64:66:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ProxyAuthorizationParser -> gov.nist.javax.sip.parser.ProxyAuthorizationParser:
    65:67:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ProxyRequireParser -> gov.nist.javax.sip.parser.ProxyRequireParser:
    65:103:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.RAckParser -> gov.nist.javax.sip.parser.RAckParser:
    70:99:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.RSeqParser -> gov.nist.javax.sip.parser.RSeqParser:
    67:89:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ReasonParser -> gov.nist.javax.sip.parser.ReasonParser:
    66:92:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.RecordRouteParser -> gov.nist.javax.sip.parser.RecordRouteParser:
    63:91:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ReferToParser -> gov.nist.javax.sip.parser.ReferToParser:
    56:59:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ReplyToParser -> gov.nist.javax.sip.parser.ReplyToParser:
    64:79:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.RequireParser -> gov.nist.javax.sip.parser.RequireParser:
    68:106:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.RetryAfterParser -> gov.nist.javax.sip.parser.RetryAfterParser:
    69:126:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.RouteParser -> gov.nist.javax.sip.parser.RouteParser:
    60:87:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.SIPETagParser -> gov.nist.javax.sip.parser.SIPETagParser:
    68:88:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.SIPIfMatchParser -> gov.nist.javax.sip.parser.SIPIfMatchParser:
    68:88:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ServerParser -> gov.nist.javax.sip.parser.ServerParser:
    66:102:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.StringMsgParser -> gov.nist.javax.sip.parser.StringMsgParser:
    86:87:void <init>() -> <init>
    530:578:gov.nist.javax.sip.header.SIPHeader parseSIPHeader(java.lang.String) -> parseSIPHeader
gov.nist.javax.sip.parser.SubjectParser -> gov.nist.javax.sip.parser.SubjectParser:
    65:80:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.SubscriptionStateParser -> gov.nist.javax.sip.parser.SubscriptionStateParser:
    67:135:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.SupportedParser -> gov.nist.javax.sip.parser.SupportedParser:
    68:107:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.TimeStampParser -> gov.nist.javax.sip.parser.TimeStampParser:
    67:128:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ToParser -> gov.nist.javax.sip.parser.ToParser:
    57:60:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.URLParser -> gov.nist.javax.sip.parser.URLParser:
    54:56:void <init>(gov.nist.javax.sip.parser.Lexer) -> <init>
    374:399:java.lang.String base_phone_number() -> base_phone_number
    214:234:java.lang.String escaped() -> escaped
    474:495:gov.nist.javax.sip.address.TelephoneNumber global_phone_number(boolean) -> global_phone_number
    700:732:java.lang.String hvalue() -> hvalue
    205:207:boolean isEscaped() -> isEscaped
    76:76:boolean isUnreserved(char) -> isUnreserved
    407:434:java.lang.String local_number() -> local_number
    499:529:gov.nist.javax.sip.address.TelephoneNumber local_phone_number(boolean) -> local_phone_number
    128:149:java.lang.String paramNameOrValue() -> paramNameOrValue
    447:469:gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(boolean) -> parseTelephoneNumber
    783:804:java.lang.String password() -> password
    570:583:gov.nist.core.NameValue phone_context() -> phone_context
    692:695:gov.nist.core.NameValue qheader() -> qheader
    606:676:gov.nist.javax.sip.address.SipUri sipURL(boolean) -> sipURL
    591:595:gov.nist.javax.sip.address.TelURLImpl telURL(boolean) -> telURL
    534:557:gov.nist.core.NameValueList tel_parameters() -> tel_parameters
    153:173:gov.nist.core.NameValue uriParam() -> uriParam
    336:366:gov.nist.javax.sip.address.GenericURI uriReference(boolean) -> uriReference
    254:277:java.lang.String uric() -> uric
    309:326:java.lang.String uricString() -> uricString
    761:778:java.lang.String user() -> user
gov.nist.javax.sip.parser.UnsupportedParser -> gov.nist.javax.sip.parser.UnsupportedParser:
    66:105:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.UserAgentParser -> gov.nist.javax.sip.parser.UserAgentParser:
    73:129:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ViaParser -> gov.nist.javax.sip.parser.ViaParser:
    145:193:gov.nist.core.NameValue nameValue() -> nameValue
    198:225:gov.nist.javax.sip.header.SIPHeader parse() -> parse
    56:135:void parseVia(gov.nist.javax.sip.header.Via) -> parseVia
gov.nist.javax.sip.parser.WWWAuthenticateParser -> gov.nist.javax.sip.parser.WWWAuthenticateParser:
    47:47:void <init>(java.lang.String) -> <init>
    64:74:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.WarningParser -> gov.nist.javax.sip.parser.WarningParser:
    75:171:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.extensions.JoinParser -> gov.nist.javax.sip.parser.extensions.JoinParser:
    43:58:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.extensions.MinSEParser -> gov.nist.javax.sip.parser.extensions.MinSEParser:
    41:63:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.extensions.ReferencesParser -> gov.nist.javax.sip.parser.extensions.ReferencesParser:
    38:54:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.extensions.ReferredByParser -> gov.nist.javax.sip.parser.extensions.ReferredByParser:
    33:36:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.extensions.ReplacesParser -> gov.nist.javax.sip.parser.extensions.ReplacesParser:
    45:60:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.extensions.SessionExpiresParser -> gov.nist.javax.sip.parser.extensions.SessionExpiresParser:
    37:61:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser -> gov.nist.javax.sip.parser.ims.PAccessNetworkInfoParser:
    90:119:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.PAssertedIdentityParser -> gov.nist.javax.sip.parser.ims.PAssertedIdentityParser:
    69:106:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.PAssociatedURIParser -> gov.nist.javax.sip.parser.ims.PAssociatedURIParser:
    81:119:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.PCalledPartyIDParser -> gov.nist.javax.sip.parser.ims.PCalledPartyIDParser:
    69:86:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.PChargingFunctionAddressesParser -> gov.nist.javax.sip.parser.ims.PChargingFunctionAddressesParser:
    89:117:gov.nist.javax.sip.header.SIPHeader parse() -> parse
    122:134:void parseParameter(gov.nist.javax.sip.header.ims.PChargingFunctionAddresses) -> parseParameter
gov.nist.javax.sip.parser.ims.PChargingVectorParser -> gov.nist.javax.sip.parser.ims.PChargingVectorParser:
    68:97:gov.nist.javax.sip.header.SIPHeader parse() -> parse
    102:110:void parseParameter(gov.nist.javax.sip.header.ims.PChargingVector) -> parseParameter
gov.nist.javax.sip.parser.ims.PMediaAuthorizationParser -> gov.nist.javax.sip.parser.ims.PMediaAuthorizationParser:
    75:115:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.PPreferredIdentityParser -> gov.nist.javax.sip.parser.ims.PPreferredIdentityParser:
    65:80:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser -> gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser:
    81:117:gov.nist.javax.sip.header.SIPHeader parse() -> parse
    123:158:void parseQuotedString(gov.nist.javax.sip.header.ims.PVisitedNetworkID) -> parseQuotedString
    166:170:void parseToken(gov.nist.javax.sip.header.ims.PVisitedNetworkID) -> parseToken
gov.nist.javax.sip.parser.ims.PathParser -> gov.nist.javax.sip.parser.ims.PathParser:
    72:100:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.PrivacyParser -> gov.nist.javax.sip.parser.ims.PrivacyParser:
    77:119:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.SecurityAgreeParser -> gov.nist.javax.sip.parser.ims.SecurityAgreeParser:
    86:156:gov.nist.javax.sip.header.SIPHeaderList parse(gov.nist.javax.sip.header.ims.SecurityAgree) -> parse
    69:77:void parseParameter(gov.nist.javax.sip.header.ims.SecurityAgree) -> parseParameter
gov.nist.javax.sip.parser.ims.SecurityClientParser -> gov.nist.javax.sip.parser.ims.SecurityClientParser:
    65:77:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.SecurityServerParser -> gov.nist.javax.sip.parser.ims.SecurityServerParser:
    65:76:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.SecurityVerifyParser -> gov.nist.javax.sip.parser.ims.SecurityVerifyParser:
    64:75:gov.nist.javax.sip.header.SIPHeader parse() -> parse
gov.nist.javax.sip.parser.ims.ServiceRouteParser -> gov.nist.javax.sip.parser.ims.ServiceRouteParser:
    72:99:gov.nist.javax.sip.header.SIPHeader parse() -> parse
javax.sip.InvalidArgumentException -> javax.sip.InvalidArgumentException:
    4:4:void <init>() -> <init>
    8:8:void <init>(java.lang.String) -> <init>
javax.sip.PeerUnavailableException -> javax.sip.PeerUnavailableException:
    4:4:void <init>() -> <init>
    8:8:void <init>(java.lang.String) -> <init>
    12:12:void <init>(java.lang.String,java.lang.Throwable) -> <init>
javax.sip.SipException -> javax.sip.SipException:
    4:4:void <init>() -> <init>
    8:8:void <init>(java.lang.String) -> <init>
    12:12:void <init>(java.lang.String,java.lang.Throwable) -> <init>
javax.sip.SipFactory -> javax.sip.SipFactory:
    23:26:void <init>() -> <init>
    80:85:javax.sip.header.HeaderFactory createHeaderFactory() -> createHeaderFactory
    18:19:javax.sip.SipFactory getInstance() -> getInstance
