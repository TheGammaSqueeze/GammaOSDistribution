/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package me.phh.treble.overlay.xiaomi.pocof4;

public final class R {
  public static final class array {
    public static final int config_ambientBrighteningThresholds=0x7f010000;
    public static final int config_ambientDarkeningThresholds=0x7f010001;
    public static final int config_ambientThresholdLevels=0x7f010002;
    public static final int config_autoBrightnessDisplayValuesNits=0x7f010003;
    public static final int config_autoBrightnessLcdBacklightValues=0x7f010004;
    public static final int config_autoBrightnessLevels=0x7f010005;
    public static final int config_biometric_sensors=0x7f010006;
    public static final int config_screenBrighteningThresholds=0x7f010007;
    /**
     * Array of hysteresis constraint values for darkening, represented as tenths of a
     * percent. The length of this array is assumed to be one greater than
     * config_screenThresholdLevels. The darkening threshold is calculated as
     * screenBrightness * (1.0f - CONSTRAINT_VALUE). When the new screen brightness is lower than
     * this threshold, it is applied. See the config_screenThresholdLevels description for how
     * the constraint value is chosen.
     */
    public static final int config_screenBrightnessBacklight=0x7f010008;
    /**
     * An array of floats describing the screen brightness in nits corresponding to the backlight
     * values in the config_screenBrightnessBacklight array.  On OLED displays these  values
     * should be measured with an all white image while the display is in the fully on state.
     * Note that this value should *not* reflect the maximum brightness value for any high
     * brightness modes but only the maximum brightness value obtainable in a sustainable manner.
     * This array should be equal in size to config_screenBrightnessBacklight
     */
    public static final int config_screenBrightnessNits=0x7f010009;
    public static final int config_screenDarkeningThresholds=0x7f01000a;
    public static final int networkAttributes=0x7f01000b;
    public static final int radioAttributes=0x7f01000c;
  }
  public static final class bool {
    public static final int config_automatic_brightness_available=0x7f020000;
    public static final int config_dozeAlwaysOnDisplayAvailable=0x7f020001;
    public static final int config_enableBurnInProtection=0x7f020002;
    public static final int config_fillMainBuiltInDisplayCutout=0x7f020003;
    public static final int config_showNavigationBar=0x7f020004;
    public static final int config_useDevInputEventForAudioJack=0x7f020005;
  }
  public static final class dimen {
    public static final int rounded_corner_radius=0x7f030000;
    public static final int status_bar_height=0x7f030001;
    public static final int status_bar_height_default=0x7f030002;
    public static final int status_bar_height_landscape=0x7f030003;
    public static final int status_bar_height_portrait=0x7f030004;
  }
  public static final class integer {
    public static final int config_defaultPeakRefreshRate=0x7f040000;
  }
  public static final class string {
    public static final int config_mainBuiltInDisplayCutout=0x7f050000;
    /**
     * Like config_mainBuiltInDisplayCutout, but this path is used to report the
     * one single bounding rect per device edge to the app via
     * {@link DisplayCutout#getBoundingRect}. Note that this path should try to match the visual
     * appearance of the cutout as much as possible, and may be smaller than
     * config_mainBuiltInDisplayCutout
     */
    public static final int config_mainBuiltInDisplayCutoutRectApproximation=0x7f050001;
  }
  public static final class xml {
    public static final int power_profile=0x7f060000;
  }
}