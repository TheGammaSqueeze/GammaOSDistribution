# compiler: R8
# compiler_version: 3.0.41-sc04
# min_api: 32
# pg_map_id: 74417fa
# common_typos_disable
com.android.common.content.ProjectionMap -> com.android.common.content.ProjectionMap:
    26:26:void <init>() -> <init>
    26:26:void access$000(com.android.common.content.ProjectionMap,java.lang.String,java.lang.String) -> access$000
    26:26:java.lang.String[] access$102(com.android.common.content.ProjectionMap,java.lang.String[]) -> access$102
    69:69:com.android.common.content.ProjectionMap$Builder builder() -> builder
    76:76:java.lang.String[] getColumnNames() -> getColumnNames
    26:26:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    85:85:java.lang.String put(java.lang.String,java.lang.String) -> put
    90:90:void putAll(java.util.Map) -> putAll
    80:80:void putColumn(java.lang.String,java.lang.String) -> putColumn
com.android.common.content.ProjectionMap$Builder -> com.android.common.content.ProjectionMap$Builder:
    28:30:void <init>() -> <init>
    33:33:com.android.common.content.ProjectionMap$Builder add(java.lang.String) -> add
    38:38:com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String) -> add
    50:51:com.android.common.content.ProjectionMap$Builder addAll(com.android.common.content.ProjectionMap) -> addAll
    57:61:com.android.common.content.ProjectionMap build() -> build
com.android.common.content.SyncStateContentProviderHelper -> com.android.common.content.SyncStateContentProviderHelper:
    43:43:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    137:141:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    55:69:void createDatabase(android.database.sqlite.SQLiteDatabase) -> createDatabase
    92:92:int delete(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[]) -> delete
    88:88:long insert(android.database.sqlite.SQLiteDatabase,android.content.ContentValues) -> insert
    114:127:void onAccountsChanged(android.database.sqlite.SQLiteDatabase,android.accounts.Account[]) -> onAccountsChanged
    73:77:void onDatabaseOpened(android.database.sqlite.SQLiteDatabase) -> onDatabaseOpened
    83:83:android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    97:97:int update(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    101:105:int update(android.database.sqlite.SQLiteDatabase,long,java.lang.Object) -> update
com.android.common.io.MoreCloseables -> com.android.common.io.MoreCloseables:
    30:30:void closeQuietly(android.database.Cursor) -> closeQuietly
com.android.ex.editstyledtext.EditStyledText$SavedStyledTextState -> com.android.ex.editstyledtext.EditStyledText$SavedStyledTextState:
    2008:2009:java.lang.String toString() -> toString
    2002:2003:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.android.ex.editstyledtext.EditStyledText$SoftKeyReceiver -> com.android.ex.editstyledtext.EditStyledText$SoftKeyReceiver:
    1988:1988:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.android.providers.contacts.AbstractContactsProvider -> com.android.providers.contacts.AbstractContactsProvider:
    57:57:void <clinit>() -> <clinit>
    52:119:void <init>() -> <init>
    251:295:android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    219:245:int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    177:193:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    554:559:double doubleForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String) -> doubleForQuery
    422:503:void dump(java.io.PrintWriter,java.lang.String) -> dump
    537:545:void dumpDoubleColumn(java.io.PrintWriter,android.database.Cursor,java.lang.String) -> dumpDoubleColumn
    524:532:void dumpLongColumn(java.io.PrintWriter,android.database.Cursor,java.lang.String) -> dumpLongColumn
    508:519:void dumpStringColumn(java.io.PrintWriter,android.database.Cursor,java.lang.String) -> dumpStringColumn
    331:345:void endTransaction(boolean) -> endTransaction
    146:146:com.android.providers.contacts.ContactsTransaction getCurrentTransaction() -> getCurrentTransaction
    130:130:com.android.providers.contacts.ContactsDatabaseHelper getDatabaseHelper() -> getDatabaseHelper
    156:172:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    150:151:boolean isInBatch() -> isInBatch
    550:550:long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String) -> longForQuery
    123:125:boolean onCreate() -> onCreate
    140:142:void setDbHelperToSerializeOn(android.database.sqlite.SQLiteOpenHelper,java.lang.String,android.database.sqlite.SQLiteTransactionListener) -> setDbHelperToSerializeOn
    309:316:com.android.providers.contacts.ContactsTransaction startTransaction(boolean) -> startTransaction
    198:214:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.android.providers.contacts.AccountWithDataSet -> com.android.providers.contacts.AccountWithDataSet:
    32:32:void <clinit>() -> <clinit>
    38:41:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    45:45:java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    74:78:boolean equals(java.lang.Object) -> equals
    49:49:com.android.providers.contacts.AccountWithDataSet get(java.lang.String,java.lang.String,java.lang.String) -> get
    57:57:java.lang.String getAccountName() -> getAccountName
    61:61:java.lang.String getAccountType() -> getAccountType
    65:65:java.lang.String getDataSet() -> getDataSet
    85:87:int hashCode() -> hashCode
    123:125:boolean inSimAccounts(java.util.List) -> inSimAccounts
    104:106:boolean inSystemAccounts(android.accounts.Account[]) -> inSystemAccounts
    69:69:boolean isLocalAccount() -> isLocalAccount
    93:93:java.lang.String toString() -> toString
com.android.providers.contacts.CallComposerLocationProvider -> com.android.providers.contacts.CallComposerLocationProvider:
    47:79:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    142:154:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    175:191:void enforceAccessRestrictions() -> enforceAccessRestrictions
    120:120:java.lang.String getType(android.net.Uri) -> getType
    134:136:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    86:86:boolean onCreate() -> onCreate
    168:170:long parseLocationIdFromUri(android.net.Uri) -> parseLocationIdFromUri
    94:113:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    161:162:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.android.providers.contacts.CallComposerLocationProvider$OpenHelper -> com.android.providers.contacts.CallComposerLocationProvider$OpenHelper:
    58:58:void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int) -> <init>
    63:63:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
com.android.providers.contacts.CallLogDatabaseHelper -> com.android.providers.contacts.CallLogDatabaseHelper:
    240:242:void <init>(android.content.Context,java.lang.String) -> <init>
    39:39:void access$000(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$000
    39:39:void access$100(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$100
    39:39:void access$200(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$200
    39:39:void access$300(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$300
    39:39:void access$400(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$400
    39:39:void access$500(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$500
    39:39:void access$600(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$600
    39:39:void access$700(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$700
    39:39:void access$800(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$800
    39:39:void access$900(com.android.providers.contacts.CallLogDatabaseHelper,android.database.sqlite.SQLiteDatabase) -> access$900
    596:596:void closeForTest() -> closeForTest
    567:567:android.database.sqlite.SQLiteDatabase getContactsWritableDatabaseForMigration() -> getContactsWritableDatabaseForMigration
    246:249:com.android.providers.contacts.CallLogDatabaseHelper getInstance(android.content.Context) -> getInstance
    253:258:com.android.providers.contacts.CallLogDatabaseHelper getInstanceForShadow(android.content.Context) -> getInstanceForShadow
    270:270:java.lang.String getProperty(java.lang.String,java.lang.String) -> getProperty
    262:262:android.database.sqlite.SQLiteDatabase getReadableDatabase() -> getReadableDatabase
    266:266:android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    481:554:void migrateFromLegacyTables(android.database.sqlite.SQLiteDatabase) -> migrateFromLegacyTables
    571:591:android.util.ArraySet selectDistinctColumn(java.lang.String,java.lang.String) -> selectDistinctColumn
    274:274:void setProperty(java.lang.String,java.lang.String) -> setProperty
    559:559:boolean tableExists(android.database.sqlite.SQLiteDatabase,java.lang.String) -> tableExists
    471:474:void upgradeToVersion10(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion10
    281:281:void upgradeToVersion2(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion2
    289:289:void upgradeToVersion3(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion3
    298:301:void upgradeToVersion4(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion4
    308:308:void upgradeToVersion5(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion5
    317:319:void upgradeToVersion6(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion6
    328:333:void upgradeToVersion7(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion7
    467:467:void upgradeToVersion9(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion9
    341:463:void upgradetoVersion8(android.database.sqlite.SQLiteDatabase) -> upgradetoVersion8
com.android.providers.contacts.CallLogDatabaseHelper$OpenHelper -> com.android.providers.contacts.CallLogDatabaseHelper$OpenHelper:
    90:93:void <init>(com.android.providers.contacts.CallLogDatabaseHelper,android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int) -> <init>
    102:192:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    202:234:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.android.providers.contacts.CallLogProvider -> com.android.providers.contacts.CallLogProvider:
    98:946:void <clinit>() -> <clinit>
    95:277:void <init>() -> <init>
    95:95:void access$000(com.android.providers.contacts.CallLogProvider,int,java.lang.Object) -> access$000
    926:926:void adjustForNewPhoneAccount(android.telecom.PhoneAccountHandle) -> adjustForNewPhoneAccount
    1147:1176:void adjustForNewPhoneAccountInternal(android.telecom.PhoneAccountHandle) -> adjustForNewPhoneAccountInternal
    813:813:android.net.Uri allocateNewCallComposerPicture(android.content.ContentValues,boolean) -> allocateNewCallComposerPicture
    819:841:android.net.Uri allocateNewCallComposerPicture(android.content.ContentValues,boolean,java.lang.String) -> allocateNewCallComposerPicture
    353:363:android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    346:347:boolean applyingBatch() -> applyingBatch
    368:378:int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    728:778:android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle) -> call
    985:987:void checkIsAllowVoicemailRequest(android.net.Uri) -> checkIsAllowVoicemailRequest
    959:966:void checkVoicemailPermissionAndAddRestriction(android.net.Uri,com.android.providers.contacts.util.SelectionBuilder,boolean) -> checkVoicemailPermissionAndAddRestriction
    489:492:java.lang.String[] copyArrayAndAppendElement(java.lang.String[],java.lang.String) -> copyArrayAndAppendElement
    1187:1232:long copyEntriesFromCursor(android.database.Cursor,long,boolean) -> copyEntriesFromCursor
    328:328:com.android.providers.contacts.CallLogInsertionHelper createCallLogInsertionHelper(android.content.Context) -> createCallLogInsertionHelper
    934:935:com.android.providers.contacts.DatabaseModifier createDatabaseModifier(android.database.sqlite.SQLiteDatabase,boolean) -> createDatabaseModifier
    943:943:com.android.providers.contacts.DatabaseModifier createDatabaseModifier(android.database.DatabaseUtils$InsertHelper) -> createDatabaseModifier
    625:632:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    846:852:int deleteCallComposerPicture(android.net.Uri) -> deleteCallComposerPicture
    897:921:int deleteInternal(android.net.Uri,java.lang.String,java.lang.String[]) -> deleteInternal
    1290:1290:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    519:523:void enforceStrictPhoneNumber(java.lang.String) -> enforceStrictPhoneNumber
    1300:1303:void enforceValidCallLogPath(java.nio.file.Path,java.nio.file.Path,java.lang.String) -> enforceValidCallLogPath
    505:513:void examineEmptyCursorCause(android.database.Cursor,java.lang.String) -> examineEmptyCursorCause
    803:806:java.nio.file.Path getCallComposerAllUsersPictureDirectory(android.content.Context,boolean) -> getCallComposerAllUsersPictureDirectory
    785:786:java.nio.file.Path getCallComposerPictureDirectory(android.content.Context,android.net.Uri) -> getCallComposerPictureDirectory
    792:796:java.nio.file.Path getCallComposerPictureDirectory(android.content.Context,boolean) -> getCallComposerPictureDirectory
    342:342:com.android.providers.contacts.CallLogDatabaseHelper getDatabaseHelper(android.content.Context) -> getDatabaseHelper
    562:572:int getIntParam(android.net.Uri,java.lang.String,int) -> getIntParam
    1245:1245:long getLastSyncTime(boolean) -> getLastSyncTime
    338:338:int getMinMatchForTest() -> getMinMatchForTest
    284:284:java.lang.String getProviderName() -> getProviderName
    548:548:java.lang.Long getTimeForTestMillis() -> getTimeForTestMillis
    578:592:java.lang.String getType(android.net.Uri) -> getType
    948:948:boolean hasVoicemailValue(android.content.ContentValues) -> hasVoicemailValue
    599:606:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    636:685:android.net.Uri insertInternal(android.net.Uri,android.content.ContentValues) -> insertInternal
    975:975:boolean isAllowVoicemailRequest(android.net.Uri) -> isAllowVoicemailRequest
    756:761:boolean lambda$call$0(long,java.nio.file.Path) -> lambda$call$0
    766:771:android.net.Uri lambda$call$1(boolean,java.nio.file.Path) -> lambda$call$1
    289:321:boolean onCreate() -> onCreate
    693:722:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    1000:1002:long parseCallIdFromUri(android.net.Uri) -> parseCallIdFromUri
    1273:1279:void performBackgroundTask(int,java.lang.Object) -> performBackgroundTask
    385:392:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    528:541:void queryForTesting(android.net.Uri) -> queryForTesting
    397:472:android.database.Cursor queryInternal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> queryInternal
    1252:1252:void setLastTimeSynced(long,boolean) -> setLastTimeSynced
    333:333:void setMinMatchForTest(int) -> setMinMatchForTest
    1285:1285:void shutdown() -> shutdown
    1093:1134:void syncCallComposerPics(int,boolean,boolean,long) -> syncCallComposerPics
    1010:1034:void syncEntries() -> syncEntries
    1042:1087:void syncEntriesFrom(int,boolean,boolean) -> syncEntriesFrom
    612:619:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    859:893:int updateInternal(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateInternal
    1262:1265:void waitForAccess(java.util.concurrent.CountDownLatch) -> waitForAccess
com.android.providers.contacts.CallLogProvider$$ExternalSyntheticLambda0 -> com.android.providers.contacts.CallLogProvider$$ExternalSyntheticLambda0:
    long com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$15295af23a12ffcffd838e95d71664c75343a8b24671e01b344f0fb6606836a0$0.f$0 -> f$0
    void com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$15295af23a12ffcffd838e95d71664c75343a8b24671e01b344f0fb6606836a0$0.<init>(long) -> <init>
    boolean com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$15295af23a12ffcffd838e95d71664c75343a8b24671e01b344f0fb6606836a0$0.accept(java.lang.Object) -> accept
com.android.providers.contacts.CallLogProvider$$ExternalSyntheticLambda1 -> com.android.providers.contacts.CallLogProvider$$ExternalSyntheticLambda1:
    com.android.providers.contacts.CallLogProvider com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$f4c9dd381210a04739cecf5648d0536f4a3c9669d786f0f84628f3894e78dbf0$0.f$0 -> f$0
    void com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$f4c9dd381210a04739cecf5648d0536f4a3c9669d786f0f84628f3894e78dbf0$0.<init>(com.android.providers.contacts.CallLogProvider) -> <init>
    void com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$f4c9dd381210a04739cecf5648d0536f4a3c9669d786f0f84628f3894e78dbf0$0.accept(java.lang.Object) -> accept
com.android.providers.contacts.CallLogProvider$$ExternalSyntheticLambda2 -> com.android.providers.contacts.CallLogProvider$$ExternalSyntheticLambda2:
    java.util.List com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$15295af23a12ffcffd838e95d71664c75343a8b24671e01b344f0fb6606836a0$1.f$0 -> f$0
    void com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$15295af23a12ffcffd838e95d71664c75343a8b24671e01b344f0fb6606836a0$1.<init>(java.util.List) -> <init>
    void com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$15295af23a12ffcffd838e95d71664c75343a8b24671e01b344f0fb6606836a0$1.accept(java.lang.Object) -> accept
com.android.providers.contacts.CallLogProvider$$ExternalSyntheticLambda3 -> com.android.providers.contacts.CallLogProvider$$ExternalSyntheticLambda3:
    boolean com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$15295af23a12ffcffd838e95d71664c75343a8b24671e01b344f0fb6606836a0$2.f$0 -> f$0
    void com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$15295af23a12ffcffd838e95d71664c75343a8b24671e01b344f0fb6606836a0$2.<init>(boolean) -> <init>
    java.lang.Object com.android.providers.contacts.CallLogProvider$$InternalSyntheticLambda$0$15295af23a12ffcffd838e95d71664c75343a8b24671e01b344f0fb6606836a0$2.apply(java.lang.Object) -> apply
com.android.providers.contacts.CallLogProvider$1 -> com.android.providers.contacts.CallLogProvider$1:
    311:311:void <init>(com.android.providers.contacts.CallLogProvider,java.lang.String) -> <init>
    314:314:void onPerformTask(int,java.lang.Object) -> onPerformTask
com.android.providers.contacts.ContactDirectoryManager -> com.android.providers.contacts.ContactDirectoryManager:
    57:57:void <clinit>() -> <clinit>
    107:112:void <init>(com.android.providers.contacts.ContactsProvider2) -> <init>
    130:158:boolean areTypeResourceIdsValid() -> areTypeResourceIdsValid
    116:116:com.android.providers.contacts.ContactsDatabaseHelper getDbHelper() -> getDbHelper
    271:271:java.util.List getDirectoryProviderInfos(android.content.pm.PackageManager) -> getDirectoryProviderInfos
    280:290:java.util.Set getDirectoryProviderPackages(android.content.pm.PackageManager) -> getDirectoryProviderPackages
    169:170:java.lang.String getResourceNameById(java.lang.String,int) -> getResourceNameById
    184:189:boolean haveKnownDirectoryProvidersChanged(java.util.Set) -> haveKnownDirectoryProvidersChanged
    365:375:void insertDefaultDirectory(android.database.sqlite.SQLiteDatabase) -> insertDefaultDirectory
    379:389:void insertLocalInvisibleDirectory(android.database.sqlite.SQLiteDatabase) -> insertLocalInvisibleDirectory
    262:266:boolean isDirectoryProvider(android.content.pm.ProviderInfo) -> isDirectoryProvider
    197:210:boolean isRescanNeeded() -> isRescanNeeded
    401:413:void onPackageChanged(java.lang.String) -> onPackageChanged
    595:595:java.lang.String providerDescription(android.content.pm.ProviderInfo) -> providerDescription
    477:545:void queryDirectoriesForAuthority(java.util.ArrayList,android.content.pm.ProviderInfo) -> queryDirectoriesForAuthority
    179:180:void saveKnownDirectoryProviders(java.util.Set) -> saveKnownDirectoryProviders
    220:228:int scanAllPackages(boolean) -> scanAllPackages
    297:359:int scanAllPackages() -> scanAllPackages
    232:253:int scanAllPackagesIfNeeded() -> scanAllPackagesIfNeeded
    120:120:void setDirectoriesForceUpdated(boolean) -> setDirectoriesForceUpdated
    555:590:void updateDirectories(android.database.sqlite.SQLiteDatabase,java.util.ArrayList) -> updateDirectories
    423:467:java.util.List updateDirectoriesForPackage(android.content.pm.PackageInfo,boolean) -> updateDirectoriesForPackage
com.android.providers.contacts.ContactDirectoryManager$DirectoryInfo -> com.android.providers.contacts.ContactDirectoryManager$DirectoryInfo:
    61:71:void <init>() -> <init>
    74:74:java.lang.String toString() -> toString
com.android.providers.contacts.ContactDirectoryManager$DirectoryQuery -> com.android.providers.contacts.ContactDirectoryManager$DirectoryQuery:
    84:84:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactLocaleUtils -> com.android.providers.contacts.ContactLocaleUtils:
    51:73:void <clinit>() -> <clinit>
    513:527:void <init>(com.android.providers.contacts.LocaleSet) -> <init>
    46:46:java.util.Locale[] access$000() -> access$000
    87:94:void dumpIndex(android.icu.text.AlphabeticIndex$ImmutableIndex) -> dumpIndex
    565:565:int getBucketIndex(java.lang.String) -> getBucketIndex
    577:577:java.lang.String getBucketLabel(int) -> getBucketLabel
    535:538:com.android.providers.contacts.ContactLocaleUtils getInstance() -> getInstance
    585:585:java.util.ArrayList getLabels() -> getLabels
    601:613:java.util.Iterator getNameLookupKeys(java.lang.String,int) -> getNameLookupKeys
    569:569:int getNumberBucketIndex() -> getNumberBucketIndex
    531:531:boolean isLocale(com.android.providers.contacts.LocaleSet) -> isLocale
    543:543:com.android.providers.contacts.ContactLocaleUtils newInstanceForTest(java.util.Locale[]) -> newInstanceForTest
    548:549:void setLocaleForTest(java.util.Locale[]) -> setLocaleForTest
    552:558:void setLocales(com.android.providers.contacts.LocaleSet) -> setLocales
com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase -> com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase:
    115:133:void <init>(com.android.providers.contacts.LocaleSet) -> <init>
    253:253:int getBucketCount() -> getBucketCount
    207:242:int getBucketIndex(java.lang.String) -> getBucketIndex
    262:269:java.lang.String getBucketLabel(int) -> getBucketLabel
    278:281:java.util.ArrayList getLabels() -> getLabels
    150:183:java.util.List getLocalesForBuckets(com.android.providers.contacts.LocaleSet) -> getLocalesForBuckets
    193:193:int getNumberBucketIndex() -> getNumberBucketIndex
com.android.providers.contacts.ContactLocaleUtils$JapaneseContactUtils -> com.android.providers.contacts.ContactLocaleUtils$JapaneseContactUtils:
    316:330:void <clinit>() -> <clinit>
    302:307:void <init>(com.android.providers.contacts.LocaleSet) -> <init>
    365:365:int getBucketCount() -> getBucketCount
    350:352:int getBucketIndex(java.lang.String) -> getBucketIndex
    376:381:java.lang.String getBucketLabel(int) -> getBucketLabel
    397:411:android.icu.text.Transliterator getJapaneseTransliterator() -> getJapaneseTransliterator
    388:388:java.util.Iterator getNameLookupKeys(java.lang.String,int) -> getNameLookupKeys
    435:436:int getNumberBucketIndex() -> getNumberBucketIndex
    415:426:java.util.Iterator getRomajiNameLookupKeys(java.lang.String) -> getRomajiNameLookupKeys
    341:341:boolean isChineseOrJapanese(int) -> isChineseOrJapanese
com.android.providers.contacts.ContactLocaleUtils$SimplifiedChineseContactUtils -> com.android.providers.contacts.ContactLocaleUtils$SimplifiedChineseContactUtils:
    457:457:void <init>(com.android.providers.contacts.LocaleSet) -> <init>
    464:464:java.util.Iterator getNameLookupKeys(java.lang.String,int) -> getNameLookupKeys
    471:504:java.util.Iterator getPinyinNameLookupKeys(java.lang.String) -> getPinyinNameLookupKeys
com.android.providers.contacts.ContactLookupKey -> com.android.providers.contacts.ContactLookupKey:
    25:25:void <init>() -> <init>
    93:101:boolean appendEscapedSourceId(java.lang.StringBuilder,java.lang.String) -> appendEscapedSourceId
    72:84:void appendToLookupKey(java.lang.StringBuilder,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String) -> appendToLookupKey
    62:62:int getAccountHashCode(java.lang.String,java.lang.String) -> getAccountHashCode
    108:252:java.util.ArrayList parse(java.lang.String) -> parse
com.android.providers.contacts.ContactLookupKey$LookupKeySegment -> com.android.providers.contacts.ContactLookupKey$LookupKeySegment:
    35:35:void <init>() -> <init>
    35:35:int compareTo(java.lang.Object) -> compareTo
    43:43:int compareTo(com.android.providers.contacts.ContactLookupKey$LookupKeySegment) -> compareTo
com.android.providers.contacts.ContactsDatabaseHelper -> com.android.providers.contacts.ContactsDatabaseHelper:
    912:912:void <clinit>() -> <clinit>
    908:1007:void <init>(android.content.Context,java.lang.String,boolean,boolean) -> <init>
    123:123:void access$000(com.android.providers.contacts.ContactsDatabaseHelper,android.database.sqlite.SQLiteStatement,long,long,int,java.lang.String) -> access$000
    123:123:com.android.providers.contacts.sqlite.SqlChecker access$100(com.android.providers.contacts.ContactsDatabaseHelper) -> access$100
    4317:4358:void appendPhoneLookupSelection(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendPhoneLookupSelection
    4304:4313:void appendPhoneLookupTables(java.lang.StringBuilder,java.lang.String,boolean) -> appendPhoneLookupTables
    3507:3509:void bindLong(android.database.sqlite.SQLiteStatement,int,java.lang.Number) -> bindLong
    3499:3501:void bindString(android.database.sqlite.SQLiteStatement,int,java.lang.String) -> bindString
    2202:2202:java.lang.String buildDisplayPhotoUriAlias(java.lang.String,java.lang.String) -> buildDisplayPhotoUriAlias
    4247:4270:void buildFallbackPhoneLookupAndContactQuery(android.database.sqlite.SQLiteQueryBuilder,java.lang.String) -> buildFallbackPhoneLookupAndContactQuery
    4230:4237:void buildPhoneLookupAndContactQuery(android.database.sqlite.SQLiteQueryBuilder,java.lang.String,java.lang.String) -> buildPhoneLookupAndContactQuery
    4291:4298:java.lang.String buildPhoneLookupAsNestedQuery(java.lang.String) -> buildPhoneLookupAsNestedQuery
    4280:4285:java.lang.String[] buildSipContactQuery(java.lang.StringBuilder,java.lang.String) -> buildSipContactQuery
    2214:2214:java.lang.String buildThumbnailPhotoUriAlias(java.lang.String,java.lang.String) -> buildThumbnailPhotoUriAlias
    4860:4867:void clearSuperPrimary(long,long) -> clearSuperPrimary
    4417:4427:void copyLongValue(android.content.ContentValues,java.lang.String,android.content.ContentValues,java.lang.String) -> copyLongValue
    4409:4410:void copyStringValue(android.content.ContentValues,java.lang.String,android.content.ContentValues,java.lang.String) -> copyStringValue
    1828:1847:void createContactsIndexes(android.database.sqlite.SQLiteDatabase,boolean) -> createContactsIndexes
    1697:1817:void createContactsTriggers(android.database.sqlite.SQLiteDatabase) -> createContactsTriggers
    1852:2198:void createContactsViews(android.database.sqlite.SQLiteDatabase) -> createContactsViews
    1653:1671:void createDirectoriesTable(android.database.sqlite.SQLiteDatabase) -> createDirectoriesTable
    2234:2274:void createGroupsView(android.database.sqlite.SQLiteDatabase) -> createGroupsView
    3725:3725:com.android.providers.contacts.NameSplitter createNameSplitter() -> createNameSplitter
    3729:3733:com.android.providers.contacts.NameSplitter createNameSplitter(java.util.Locale) -> createNameSplitter
    1129:1202:void createPresenceTables(android.database.sqlite.SQLiteDatabase) -> createPresenceTables
    1675:1691:void createSearchIndexTable(android.database.sqlite.SQLiteDatabase,boolean) -> createSearchIndexTable
    4021:4053:long createSimAccountIdInTransaction(com.android.providers.contacts.AccountWithDataSet,int,int) -> createSimAccountIdInTransaction
    4920:4924:void deleteNameLookup(long) -> deleteNameLookup
    4534:4538:void deleteStatusUpdate(long) -> deleteStatusUpdate
    5124:5139:void dump(java.io.PrintWriter) -> dump
    4495:4495:java.lang.String exceptionMessage(android.net.Uri) -> exceptionMessage
    4503:4530:java.lang.String exceptionMessage(java.lang.String,android.net.Uri) -> exceptionMessage
    3445:3449:java.lang.String extractAddressFromEmailAddress(java.lang.String) -> extractAddressFromEmailAddress
    3431:3439:java.lang.String extractHandleFromEmailAddress(java.lang.String) -> extractHandleFromEmailAddress
    4450:4450:void forceDirectoryRescan() -> forceDirectoryRescan
    3406:3414:java.lang.String generateHashId(java.lang.String,java.lang.String) -> generateHashId
    3424:3427:java.lang.String generateHashIdForData(byte[]) -> generateHashIdForData
    3948:3971:java.lang.Long getAccountIdOrNull(com.android.providers.contacts.AccountWithDataSet) -> getAccountIdOrNull
    4215:4221:int getAggregationMode(long) -> getAggregationMode
    3897:3908:java.util.Set getAllAccountsWithDataSets() -> getAllAccountsWithDataSets
    3916:3939:java.util.List getAllSimAccounts() -> getAllSimAccounts
    1056:1058:boolean getConfig(java.lang.String,int) -> getConfig
    4202:4208:long getContactId(long) -> getContactId
    4975:4975:java.lang.String getCurrentCountryIso() -> getCurrentCountryIso
    3879:3886:java.lang.String getDataMimeType(long) -> getDataMimeType
    1062:1062:android.database.sqlite.SQLiteDatabase getDatabase(boolean) -> getDatabase
    5022:5022:long getDatabaseCreationTime() -> getDatabaseCreationTime
    2687:2687:java.lang.String getDeviceIcuVersion() -> getDeviceIcuVersion
    3857:3869:int getDisplayNameSourceForMimeTypeId(int) -> getDisplayNameSourceForMimeTypeId
    971:975:com.android.providers.contacts.ContactsDatabaseHelper getInstance(android.content.Context) -> getInstance
    3813:3816:long getMimeTypeId(java.lang.String) -> getMimeTypeId
    3838:3838:long getMimeTypeIdForEmail() -> getMimeTypeIdForEmail
    3834:3834:long getMimeTypeIdForIm() -> getMimeTypeIdForIm
    3830:3830:long getMimeTypeIdForOrganization() -> getMimeTypeIdForOrganization
    3842:3842:long getMimeTypeIdForPhone() -> getMimeTypeIdForPhone
    3846:3846:long getMimeTypeIdForSip() -> getMimeTypeIdForSip
    3822:3822:long getMimeTypeIdForStructuredName() -> getMimeTypeIdForStructuredName
    3826:3826:long getMimeTypeIdForStructuredPostal() -> getMimeTypeIdForStructuredPostal
    4995:4995:int getMinMatchForTest() -> getMinMatchForTest
    4367:4367:java.lang.String getMinMatchParameter() -> getMinMatchParameter
    983:983:com.android.providers.contacts.ContactsDatabaseHelper getNewInstanceForTest(android.content.Context,java.lang.String) -> getNewInstanceForTest
    3982:4002:long getOrCreateAccountIdInTransaction(com.android.providers.contacts.AccountWithDataSet) -> getOrCreateAccountIdInTransaction
    3795:3805:long getPackageId(java.lang.String) -> getPackageId
    3312:3312:java.lang.String getPhotoHashId() -> getPhotoHashId
    4439:4439:java.lang.String getProperty(java.lang.String,java.lang.String) -> getProperty
    5030:5048:com.android.providers.contacts.sqlite.SqlChecker getSqlChecker() -> getSqlChecker
    4432:4432:com.android.common.content.SyncStateContentProviderHelper getSyncState() -> getSyncState
    4985:4985:boolean getUseStrictPhoneNumberComparisonForTest() -> getUseStrictPhoneNumberComparisonForTest
    4363:4363:java.lang.String getUseStrictPhoneNumberComparisonParameter() -> getUseStrictPhoneNumberComparisonParameter
    2807:2822:void insertEmailLookup(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteStatement) -> insertEmailLookup
    3465:3469:long insertMimeType(android.database.sqlite.SQLiteDatabase,java.lang.String) -> insertMimeType
    2759:2775:void insertNameLookup(android.database.sqlite.SQLiteDatabase) -> insertNameLookup
    2851:2860:void insertNameLookup(android.database.sqlite.SQLiteStatement,long,long,int,java.lang.String) -> insertNameLookup
    4898:4913:void insertNameLookup(long,long,int,java.lang.String) -> insertNameLookup
    4928:4938:java.lang.String insertNameLookupForEmail(long,long,java.lang.String) -> insertNameLookupForEmail
    4946:4948:void insertNameLookupForNickname(long,long,java.lang.String) -> insertNameLookupForNickname
    2829:2843:void insertNicknameLookup(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteStatement) -> insertNicknameLookup
    2865:2869:void insertNormalizedNameLookup(android.database.sqlite.SQLiteStatement,long,long,int,java.lang.String) -> insertNormalizedNameLookup
    4563:4605:void insertStatusUpdate(java.lang.Long,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer) -> insertStatusUpdate
    2782:2800:void insertStructuredNameLookup(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteStatement) -> insertStructuredNameLookup
    3767:3777:long insertWithOneArgAndReturnId(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> insertWithOneArgAndReturnId
    4155:4160:boolean isContactInDefaultDirectory(android.database.sqlite.SQLiteDatabase,long) -> isContactInDefaultDirectory
    4460:4461:boolean isInProjection(java.lang.String[],java.lang.String) -> isInProjection
    4477:4482:boolean isInProjection(java.lang.String[],java.lang.String[]) -> isInProjection
    1014:1014:void lambda$startListeningToDeviceConfigUpdates$0(android.provider.DeviceConfig$Properties) -> lambda$startListeningToDeviceConfigUpdates$0
    3388:3398:java.lang.String legacyGenerateHashId(java.lang.String,java.lang.String,byte[]) -> legacyGenerateHashId
    1106:1124:void loadDatabaseCreationTime(android.database.sqlite.SQLiteDatabase) -> loadDatabaseCreationTime
    4374:4403:void loadNicknameLookupTable(android.database.sqlite.SQLiteDatabase) -> loadNicknameLookupTable
    3482:3494:long lookupMimeTypeId(android.database.sqlite.SQLiteDatabase,java.lang.String) -> lookupMimeTypeId
    2671:2679:boolean needsToUpdateLocaleData(com.android.providers.contacts.LocaleSet) -> needsToUpdateLocaleData
    5017:5017:void notifyProviderStatusChange(android.content.Context) -> notifyProviderStatusChange
    1079:1079:void onBeforeDelete(android.database.sqlite.SQLiteDatabase) -> onBeforeDelete
    1211:1629:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    1018:1018:void onDeviceConfigUpdated() -> onDeviceConfigUpdated
    2279:2284:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    1085:1093:void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    2289:2642:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    1635:1645:void postOnCreate() -> postOnCreate
    1071:1073:void prepopulateCommonMimeTypes(android.database.sqlite.SQLiteDatabase) -> prepopulateCommonMimeTypes
    3752:3762:long queryIdWithOneArg(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> queryIdWithOneArg
    5000:5004:java.lang.String querySearchIndexContentForTest(long) -> querySearchIndexContentForTest
    5009:5013:java.lang.String querySearchIndexTokensForTest(long) -> querySearchIndexTokensForTest
    4957:4968:boolean rawContactHasSuperPrimary(long,long) -> rawContactHasSuperPrimary
    2700:2713:void rebuildLocaleData(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.LocaleSet,boolean) -> rebuildLocaleData
    2652:2654:void rebuildNameLookup(android.database.sqlite.SQLiteDatabase,boolean) -> rebuildNameLookup
    2658:2658:void rebuildSearchIndex() -> rebuildSearchIndex
    2662:2663:void rebuildSearchIndex(android.database.sqlite.SQLiteDatabase,boolean) -> rebuildSearchIndex
    2746:2755:void rebuildSortKeys(android.database.sqlite.SQLiteDatabase) -> rebuildSortKeys
    4063:4065:int removeSimAccounts(int) -> removeSimAccounts
    4543:4558:void replaceStatusUpdate(java.lang.Long,long,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer) -> replaceStatusUpdate
    5107:5108:void reportInvalidSql(java.lang.String,com.android.providers.contacts.sqlite.SqlChecker$InvalidSqlException) -> reportInvalidSql
    5100:5102:void runSqlValidation(java.lang.String,java.lang.Runnable) -> runSqlValidation
    1098:1099:void setDatabaseCreationTime(android.database.sqlite.SQLiteDatabase) -> setDatabaseCreationTime
    4844:4852:void setIsPrimary(long,long,long) -> setIsPrimary
    4877:4891:void setIsSuperPrimary(long,long,long) -> setIsSuperPrimary
    2722:2739:void setLocale(com.android.providers.contacts.LocaleSet) -> setLocale
    4990:4990:void setMinMatchForTest(int) -> setMinMatchForTest
    4446:4446:void setProperty(java.lang.String,java.lang.String) -> setProperty
    4980:4980:void setUseStrictPhoneNumberComparisonForTest(boolean) -> setUseStrictPhoneNumberComparisonForTest
    1013:1013:void startListeningToDeviceConfigUpdates() -> startListeningToDeviceConfigUpdates
    4072:4072:void updateAllVisible() -> updateAllVisible
    4087:4087:void updateContactVisible(com.android.providers.contacts.TransactionContext,long) -> updateContactVisible
    4092:4147:boolean updateContactVisible(com.android.providers.contacts.TransactionContext,long,boolean) -> updateContactVisible
    4079:4079:boolean updateContactVisibleOnlyIfChanged(com.android.providers.contacts.TransactionContext,long) -> updateContactVisibleOnlyIfChanged
    4170:4187:void updateCustomContactVisibility(android.database.sqlite.SQLiteDatabase,long) -> updateCustomContactVisibility
    3684:3690:void updateIndexStats(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String) -> updateIndexStats
    4614:4833:void updateRawContactDisplayName(android.database.sqlite.SQLiteDatabase,long) -> updateRawContactDisplayName
    3520:3671:void updateSqliteStats(android.database.sqlite.SQLiteDatabase) -> updateSqliteStats
    1024:1051:void updateUseStrictPhoneNumberComparison() -> updateUseStrictPhoneNumberComparison
    2691:2696:void upgradeLocaleData(android.database.sqlite.SQLiteDatabase,boolean) -> upgradeLocaleData
    3136:3140:void upgradeToVersion1000(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1000
    3145:3146:void upgradeToVersion1002(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1002
    3153:3176:void upgradeToVersion1003(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1003
    3187:3187:void upgradeToVersion1004(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1004
    3191:3191:void upgradeToVersion1005(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1005
    3202:3211:void upgradeToVersion1007(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1007
    3218:3218:void upgradeToVersion1009(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1009
    3224:3224:void upgradeToVersion1100(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1100
    3232:3255:void upgradeToVersion1101(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1101
    3263:3263:void upgradeToVersion1104(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1104
    3271:3271:void upgradeToVersion1105(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1105
    3275:3275:void upgradeToVersion1106(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1106
    3280:3280:void upgradeToVersion1107(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1107
    3289:3289:void upgradeToVersion1108(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1108
    3294:3296:void upgradeToVersion1109(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1109
    3304:3308:void upgradeToVersion1110(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1110
    3319:3329:void upgradeToVersion1111(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1111
    3333:3354:void upgradeToVersion1201(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1201
    3363:3365:void upgradeToVersion1300(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1300
    3372:3373:void upgradeToVersion1501(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion1501
    2873:2879:void upgradeToVersion701(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion701
    2894:2954:void upgradeToVersion702(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion702
    2960:2963:void upgradeToVersion707(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion707
    2969:2985:void upgradeToVersion710(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion710
    2991:2999:void upgradeToVersion800(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion800
    3003:3005:void upgradeToVersion802(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion802
    3011:3012:void upgradeToVersion902(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion902
    3023:3065:void upgradeToVersion903(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion903
    3073:3074:void upgradeToVersion904(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion904
    3081:3081:void upgradeToVersion905(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion905
    3092:3099:void upgradeToVersion906(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion906
    3104:3105:void upgradeToVersion908(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion908
    3110:3115:void upgradeToVersion909(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion909
    3124:3128:void upgradeToVersion910(android.database.sqlite.SQLiteDatabase) -> upgradeToVersion910
    5071:5071:void validateContentValues(java.lang.String,android.content.ContentValues) -> validateContentValues
    5087:5087:void validateProjection(java.lang.String,java.lang.String[]) -> validateProjection
    5058:5058:void validateSql(java.lang.String,java.lang.String) -> validateSql
    3698:3720:void wipeData() -> wipeData
com.android.providers.contacts.ContactsDatabaseHelper$$ExternalSyntheticLambda0 -> com.android.providers.contacts.ContactsDatabaseHelper$$ExternalSyntheticLambda0:
    com.android.providers.contacts.ContactsDatabaseHelper com.android.providers.contacts.ContactsDatabaseHelper$$InternalSyntheticLambda$1$70714f39f1ca6303cf76ad8f123f25fa1f07b87cd709835790d68808bbcc8260$0.f$0 -> f$0
    void com.android.providers.contacts.ContactsDatabaseHelper$$InternalSyntheticLambda$1$70714f39f1ca6303cf76ad8f123f25fa1f07b87cd709835790d68808bbcc8260$0.<init>(com.android.providers.contacts.ContactsDatabaseHelper) -> <init>
    void com.android.providers.contacts.ContactsDatabaseHelper$$InternalSyntheticLambda$1$70714f39f1ca6303cf76ad8f123f25fa1f07b87cd709835790d68808bbcc8260$0.onPropertiesChanged(android.provider.DeviceConfig$Properties) -> onPropertiesChanged
com.android.providers.contacts.ContactsDatabaseHelper$$ExternalSyntheticLambda1 -> com.android.providers.contacts.ContactsDatabaseHelper$$ExternalSyntheticLambda1:
    com.android.providers.contacts.ContactsDatabaseHelper com.android.providers.contacts.ContactsDatabaseHelper$$InternalSyntheticLambda$0$ab499bc7df67f6b7a1b4fb53e8d8f1e00d76c3bf6bab978086ecbf1455028507$0.f$0 -> f$0
    void com.android.providers.contacts.ContactsDatabaseHelper$$InternalSyntheticLambda$0$ab499bc7df67f6b7a1b4fb53e8d8f1e00d76c3bf6bab978086ecbf1455028507$0.<init>(com.android.providers.contacts.ContactsDatabaseHelper) -> <init>
    void com.android.providers.contacts.ContactsDatabaseHelper$$InternalSyntheticLambda$0$ab499bc7df67f6b7a1b4fb53e8d8f1e00d76c3bf6bab978086ecbf1455028507$0.run() -> run
com.android.providers.contacts.ContactsDatabaseHelper$1 -> com.android.providers.contacts.ContactsDatabaseHelper$1:
    5058:5058:void <init>(com.android.providers.contacts.ContactsDatabaseHelper,java.lang.String) -> <init>
    5061:5061:void run() -> run
com.android.providers.contacts.ContactsDatabaseHelper$2 -> com.android.providers.contacts.ContactsDatabaseHelper$2:
    5071:5071:void <init>(com.android.providers.contacts.ContactsDatabaseHelper,android.content.ContentValues) -> <init>
    5074:5075:void run() -> run
com.android.providers.contacts.ContactsDatabaseHelper$3 -> com.android.providers.contacts.ContactsDatabaseHelper$3:
    5087:5087:void <init>(com.android.providers.contacts.ContactsDatabaseHelper,java.lang.String[]) -> <init>
    5090:5091:void run() -> run
com.android.providers.contacts.ContactsDatabaseHelper$EmailQuery -> com.android.providers.contacts.ContactsDatabaseHelper$EmailQuery:
    770:770:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsDatabaseHelper$NicknameQuery -> com.android.providers.contacts.ContactsDatabaseHelper$NicknameQuery:
    803:803:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsDatabaseHelper$Projections -> com.android.providers.contacts.ContactsDatabaseHelper$Projections:
    352:353:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsDatabaseHelper$StructuredNameLookupBuilder -> com.android.providers.contacts.ContactsDatabaseHelper$StructuredNameLookupBuilder:
    878:882:void <init>(com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.NameSplitter,com.android.providers.contacts.aggregation.util.CommonNicknameCache,android.database.sqlite.SQLiteStatement) -> <init>
    897:897:java.lang.String[] getCommonNicknameClusters(java.lang.String) -> getCommonNicknameClusters
    889:890:void insertNameLookup(long,long,int,java.lang.String) -> insertNameLookup
com.android.providers.contacts.ContactsDatabaseHelper$StructuredNameQuery -> com.android.providers.contacts.ContactsDatabaseHelper$StructuredNameQuery:
    786:786:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsDatabaseHelper$Tables -> com.android.providers.contacts.ContactsDatabaseHelper$Tables:
    195:195:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsPackageMonitor -> com.android.providers.contacts.ContactsPackageMonitor:
    42:42:void <clinit>() -> <clinit>
    63:67:void <init>(android.content.Context) -> <init>
    39:39:void access$000(com.android.providers.contacts.ContactsPackageMonitor,com.android.providers.contacts.ContactsPackageMonitor$PackageEventArg) -> access$000
    39:39:com.android.providers.contacts.ContactsTaskScheduler access$200(com.android.providers.contacts.ContactsPackageMonitor) -> access$200
    144:152:void cleanupVoicemail(android.content.Context,java.lang.String) -> cleanupVoicemail
    157:162:android.content.ContentProvider getProvider(android.content.Context,java.lang.String) -> getProvider
    121:139:void onPackageChanged(com.android.providers.contacts.ContactsPackageMonitor$PackageEventArg) -> onPackageChanged
    96:104:void registerReceiver() -> registerReceiver
    80:85:void start() -> start
    89:93:void start(android.content.Context) -> start
com.android.providers.contacts.ContactsPackageMonitor$1 -> com.android.providers.contacts.ContactsPackageMonitor$1:
    67:67:void <init>(com.android.providers.contacts.ContactsPackageMonitor,java.lang.String) -> <init>
    72:72:void onPerformTask(int,java.lang.Object) -> onPerformTask
com.android.providers.contacts.ContactsPackageMonitor$2 -> com.android.providers.contacts.ContactsPackageMonitor$2:
    104:104:void <init>(com.android.providers.contacts.ContactsPackageMonitor) -> <init>
    107:113:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.providers.contacts.ContactsPackageMonitor$PackageEventArg -> com.android.providers.contacts.ContactsPackageMonitor$PackageEventArg:
    53:53:void <init>(java.lang.String,android.content.BroadcastReceiver$PendingResult,com.android.providers.contacts.ContactsPackageMonitor$1) -> <init>
    57:59:void <init>(java.lang.String,android.content.BroadcastReceiver$PendingResult) -> <init>
com.android.providers.contacts.ContactsProvider2 -> com.android.providers.contacts.ContactsProvider2:
    296:7285:void <clinit>() -> <clinit>
    217:2594:void <init>() -> <init>
    217:217:java.util.concurrent.CountDownLatch access$200(com.android.providers.contacts.ContactsProvider2) -> access$200
    217:217:void access$300(com.android.providers.contacts.ContactsProvider2,java.util.concurrent.CountDownLatch) -> access$300
    217:217:com.android.providers.contacts.PhotoStore access$400(com.android.providers.contacts.ContactsProvider2) -> access$400
    217:217:com.android.providers.contacts.PhotoStore access$500(com.android.providers.contacts.ContactsProvider2) -> access$500
    217:217:java.lang.ThreadLocal access$600(com.android.providers.contacts.ContactsProvider2) -> access$600
    217:217:com.android.providers.contacts.aggregation.util.CommonNicknameCache access$700(com.android.providers.contacts.ContactsProvider2) -> access$700
    5043:5052:java.lang.String accountsToString(java.util.Set) -> accountsToString
    2925:2927:void addAutoAddMembership(long) -> addAutoAddMembership
    7185:7193:java.lang.String[] addContactIdColumnIfNotPresent(java.lang.String[],java.lang.String[]) -> addContactIdColumnIfNotPresent
    5681:5688:android.database.Cursor addDeferredSnippetingExtra(android.database.Cursor) -> addDeferredSnippetingExtra
    7339:7343:android.net.Uri$Builder addQueryParametersFromUri(android.net.Uri$Builder,android.net.Uri,java.util.Set) -> addQueryParametersFromUri
    5660:5675:android.database.Cursor addSnippetExtrasToCursor(android.net.Uri,android.database.Cursor) -> addSnippetExtrasToCursor
    8391:8410:void appendAccountFromParameter(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri) -> appendAccountFromParameter
    8415:8430:void appendAccountIdFromParameter(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri) -> appendAccountIdFromParameter
    8476:8502:java.lang.String appendAccountIdToSelection(android.net.Uri,java.lang.String) -> appendAccountIdToSelection
    8449:8470:java.lang.String appendAccountToSelection(android.net.Uri,java.lang.String) -> appendAccountToSelection
    9349:9357:void appendContactFilterAsNestedQuery(java.lang.StringBuilder,java.lang.String) -> appendContactFilterAsNestedQuery
    8338:8341:void appendContactPresenceJoin(java.lang.StringBuilder,java.lang.String[],java.lang.String) -> appendContactPresenceJoin
    8290:8296:void appendContactStatusUpdateJoin(java.lang.StringBuilder,java.lang.String[],java.lang.String) -> appendContactStatusUpdateJoin
    8350:8352:void appendDataPresenceJoin(java.lang.StringBuilder,java.lang.String[],java.lang.String) -> appendDataPresenceJoin
    8306:8312:void appendDataStatusUpdateJoin(java.lang.StringBuilder,java.lang.String[],java.lang.String) -> appendDataStatusUpdateJoin
    8319:8332:void appendDataUsageStatJoin(java.lang.StringBuilder,int,java.lang.String) -> appendDataUsageStatJoin
    2580:2584:void appendIds(java.lang.StringBuilder,java.util.Set) -> appendIds
    8360:8387:void appendLocalDirectoryAndAccountSelectionIfNeeded(android.database.sqlite.SQLiteQueryBuilder,long,android.net.Uri) -> appendLocalDirectoryAndAccountSelectionIfNeeded
    7973:7993:void appendSearchIndexJoin(java.lang.StringBuilder,android.net.Uri,java.lang.String[],java.lang.String,boolean) -> appendSearchIndexJoin
    8007:8148:void appendSearchIndexJoin(java.lang.StringBuilder,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,int,boolean) -> appendSearchIndexJoin
    9460:9463:java.lang.String[] appendSelectionArg(java.lang.String[],java.lang.String) -> appendSelectionArg
    8157:8167:void appendSnippetFunction(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.String,int) -> appendSnippetFunction
    2439:2440:android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    9077:9098:android.content.res.AssetFileDescriptor buildAssetFileDescriptor(java.io.ByteArrayOutputStream) -> buildAssetFileDescriptor
    9804:9824:android.database.Cursor buildSingleRowResult(java.lang.String[],java.lang.String[],java.lang.Object[]) -> buildSingleRowResult
    2445:2446:int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    7497:7541:void bundleFastScrollingIndexExtras(android.database.Cursor,android.net.Uri,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,android.os.CancellationSignal) -> bundleFastScrollingIndexExtras
    2276:2353:android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle) -> call
    1869:1882:void changeLocaleInBackground() -> changeLocaleInBackground
    3144:3167:long cleanUpOldStreamItems(long,long) -> cleanUpOldStreamItems
    1919:1997:void cleanupPhotoStore() -> cleanupPhotoStore
    9399:9426:android.database.Cursor completeName(android.net.Uri,java.lang.String[]) -> completeName
    7317:7334:android.net.Uri convertToLocalUri(android.net.Uri,android.net.Uri) -> convertToLocalUri
    9431:9434:void copyQueryParamsToContentValues(android.content.ContentValues,android.net.Uri,java.lang.String[]) -> copyQueryParamsToContentValues
    9375:9378:int countPhoneNumberDigits(java.lang.String) -> countPhoneNumberDigits
    5526:5530:android.database.Cursor createEmptyCursor(android.net.Uri,java.lang.String[]) -> createEmptyCursor
    1668:1668:com.android.providers.contacts.PhotoPriorityResolver createPhotoPriorityResolver(android.content.Context) -> createPhotoPriorityResolver
    9732:9733:boolean deferredSnippetingRequested(android.net.Uri) -> deferredSnippetingRequested
    2245:2271:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    3852:3883:int deleteContact(long,boolean) -> deleteContact
    3177:3197:int deleteData(java.lang.String,java.lang.String[],boolean) -> deleteData
    3207:3237:int deleteData(long,java.lang.String[]) -> deleteData
    2974:2980:void deleteDataGroupMembership(long,long) -> deleteDataGroupMembership
    4044:4052:int deleteDataUsage(android.database.sqlite.SQLiteDatabase) -> deleteDataUsage
    3822:3841:int deleteGroup(android.net.Uri,long,boolean) -> deleteGroup
    3595:3816:int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[]) -> deleteInTransaction
    3888:3923:int deleteRawContact(long,long,boolean) -> deleteRawContact
    3933:3958:int deleteRawContactsImmediately(android.database.sqlite.SQLiteDatabase,java.util.List) -> deleteRawContactsImmediately
    3845:3847:int deleteSettings(java.lang.String,java.lang.String[]) -> deleteSettings
    3984:3991:int deleteStatusUpdates(java.lang.String,java.lang.String[]) -> deleteStatusUpdates
    4011:4013:int deleteStreamItem(android.database.sqlite.SQLiteDatabase,long) -> deleteStreamItem
    4017:4018:int deleteStreamItemPhotos(java.lang.String,java.lang.String[]) -> deleteStreamItemPhotos
    4022:4026:int deleteStreamItemPhotos(long) -> deleteStreamItemPhotos
    3995:4006:int deleteStreamItems(java.lang.String,java.lang.String[]) -> deleteStreamItems
    7078:7085:android.database.Cursor doQuery(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal) -> doQuery
    5486:5488:boolean doesCallerHoldInteractAcrossUserPermission() -> doesCallerHoldInteractAcrossUserPermission
    9840:9864:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2932:2944:java.lang.Long findGroupByRawContactId(java.lang.String,long) -> findGroupByRawContactId
    4557:4569:android.content.ContentValues fixUpUsageColumnsForEdit(android.content.ContentValues) -> fixUpUsageColumnsForEdit
    2097:2097:boolean flagExists(android.content.ContentValues,java.lang.String) -> flagExists
    2105:2105:boolean flagIsClear(android.content.ContentValues,java.lang.String) -> flagIsClear
    2101:2101:boolean flagIsSet(android.content.ContentValues,java.lang.String) -> flagIsSet
    2532:2572:void flushTransactionalChanges() -> flushTransactionalChanges
    9707:9721:java.lang.String getAccountPromotionSortOrder(android.net.Uri) -> getAccountPromotionSortOrder
    8435:8445:com.android.providers.contacts.AccountWithDataSet getAccountWithDataSetFromUri(android.net.Uri) -> getAccountWithDataSetFromUri
    2042:2042:com.android.providers.contacts.ContactDirectoryManager getContactDirectoryManagerForTest() -> getContactDirectoryManagerForTest
    7437:7446:int[] getContactIdColumnIndices(android.database.Cursor,java.lang.String[]) -> getContactIdColumnIndices
    9921:9921:com.android.providers.contacts.ContactsDatabaseHelper getContactsDatabaseHelperForTest() -> getContactsDatabaseHelperForTest
    2637:2644:com.android.providers.contacts.DataRowHandler getDataRowHandler(java.lang.String) -> getDataRowHandler
    2650:2654:com.android.providers.contacts.DataRowHandler getDataRowHandlerForProfile(java.lang.String) -> getDataRowHandlerForProfile
    9872:9884:int getDataUsageFeedbackType(java.lang.String,java.lang.Integer) -> getDataUsageFeedbackType
    9468:9475:android.accounts.Account getDefaultAccount() -> getDefaultAccount
    9256:9324:java.lang.String[] getDefaultProjection(android.net.Uri) -> getDefaultProjection
    5711:5733:com.android.providers.contacts.ContactsProvider2$DirectoryInfo getDirectoryAuthority(java.lang.String) -> getDirectoryAuthority
    7579:7640:android.os.Bundle getFastScrollingIndexExtras(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,android.os.CancellationSignal) -> getFastScrollingIndexExtras
    2092:2093:int getIntValue(android.content.ContentValues,java.lang.String,int) -> getIntValue
    8515:8529:java.lang.String getLimit(android.net.Uri) -> getLimit
    2047:2047:java.util.Locale getLocale() -> getLocale
    7057:7068:java.lang.String getLocalizedSortOrder(java.lang.String) -> getLocalizedSortOrder
    2037:2037:int getMaxDisplayPhotoDim() -> getMaxDisplayPhotoDim
    2029:2029:int getMaxThumbnailDim() -> getMaxThumbnailDim
    7885:7887:long getMostReferencedContactId(java.util.ArrayList) -> getMostReferencedContactId
    2017:2017:com.android.providers.contacts.PhotoStore getPhotoStore() -> getPhotoStore
    2022:2022:com.android.providers.contacts.PhotoStore getProfilePhotoStore() -> getProfilePhotoStore
    9926:9926:com.android.providers.contacts.ProfileProvider getProfileProviderForTest() -> getProfileProviderForTest
    9547:9593:java.lang.String getQueryParameter(android.net.Uri,java.lang.String) -> getQueryParameter
    5535:5546:java.lang.String getRealCallerPackageName(android.net.Uri) -> getRealCallerPackageName
    3574:3582:java.lang.String getResourceName(android.content.res.Resources,java.lang.String,java.lang.Integer) -> getResourceName
    4403:4407:android.content.ContentValues getSettableColumnsForPresenceTable(android.content.ContentValues) -> getSettableColumnsForPresenceTable
    4381:4395:android.content.ContentValues getSettableColumnsForStatusUpdatesTable(android.content.ContentValues) -> getSettableColumnsForStatusUpdatesTable
    9835:9835:com.android.providers.contacts.ContactsDatabaseHelper getThreadActiveDatabaseHelperForTest() -> getThreadActiveDatabaseHelperForTest
    2008:2008:java.lang.ThreadLocal getTransactionHolder() -> getTransactionHolder
    9162:9251:java.lang.String getType(android.net.Uri) -> getType
    4373:4377:java.lang.String getWhereClauseForStatusUpdatesTable(java.lang.String) -> getWhereClauseForStatusUpdatesTable
    5080:5091:boolean haveAccountsChanged(android.accounts.Account[]) -> haveAccountsChanged
    2052:2053:boolean inProfileMode() -> inProfileMode
    1637:1662:void initDataRowHandlers(java.util.Map,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator,com.android.providers.contacts.PhotoStore) -> initDataRowHandlers
    1591:1631:void initForDefaultLocale() -> initForDefaultLocale
    1523:1570:boolean initialize() -> initialize
    2180:2208:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    2867:2867:long insertContact(android.content.ContentValues) -> insertContact
    2990:3019:long insertData(android.content.ContentValues,boolean) -> insertData
    2960:2970:void insertDataGroupMembership(long,long) -> insertDataGroupMembership
    3251:3287:long insertGroup(android.net.Uri,android.content.ContentValues,boolean) -> insertGroup
    2661:2771:android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues) -> insertInTransaction
    2882:2919:long insertRawContact(android.net.Uri,android.content.ContentValues,boolean) -> insertRawContact
    9448:9451:java.lang.String[] insertSelectionArg(java.lang.String[],java.lang.String) -> insertSelectionArg
    3296:3337:long insertSettings(android.content.ContentValues) -> insertSettings
    3347:3564:long insertStatusUpdate(android.content.ContentValues) -> insertStatusUpdate
    3036:3059:long insertStreamItem(android.net.Uri,android.content.ContentValues) -> insertStreamItem
    3072:3092:long insertStreamItemPhoto(android.net.Uri,android.content.ContentValues) -> insertStreamItemPhoto
    7484:7484:void invalidateFastScrollingIndexCache() -> invalidateFastScrollingIndexCache
    9597:9603:boolean isAggregationUpgradeNeeded() -> isAggregationUpgradeNeeded
    5480:5482:boolean isCallerAnotherSelf() -> isCallerAnotherSelf
    5470:5470:boolean isCallerFromSameUser() -> isCallerFromSameUser
    5331:5335:boolean isContactsAccount(android.accounts.Account) -> isContactsAccount
    5511:5519:boolean isDirectoryParamValid(android.net.Uri) -> isDirectoryParamValid
    9678:9682:boolean isPhone() -> isPhone
    9362:9366:boolean isPhoneNumber(java.lang.String) -> isPhoneNumber
    9743:9746:boolean isSingleWordQuery(java.lang.String) -> isSingleWordQuery
    2391:2413:boolean isValidPreAuthorizedUri(android.net.Uri) -> isValidPreAuthorizedUri
    9686:9687:boolean isVoiceCapable() -> isVoiceCapable
    9488:9512:boolean isWritableAccountWithDataSet(java.lang.String) -> isWritableAccountWithDataSet
    2595:2597:void lambda$new$0() -> lambda$new$0
    7825:7862:long lookupContactIdByDisplayNames(android.database.sqlite.SQLiteDatabase,java.util.ArrayList) -> lookupContactIdByDisplayNames
    7650:7677:long lookupContactIdByLookupKey(android.database.sqlite.SQLiteDatabase,java.lang.String) -> lookupContactIdByLookupKey
    7770:7804:long lookupContactIdByRawContactIds(android.database.sqlite.SQLiteDatabase,java.util.ArrayList) -> lookupContactIdByRawContactIds
    7714:7749:long lookupContactIdBySourceIds(android.database.sqlite.SQLiteDatabase,java.util.ArrayList) -> lookupContactIdBySourceIds
    7866:7867:boolean lookupKeyContainsType(java.util.ArrayList,int) -> lookupKeyContainsType
    7684:7693:long lookupSingleContactId(android.database.sqlite.SQLiteDatabase) -> lookupSingleContactId
    9104:9104:android.content.res.AssetFileDescriptor makeAssetFileDescriptor(android.os.ParcelFileDescriptor) -> makeAssetFileDescriptor
    9108:9108:android.content.res.AssetFileDescriptor makeAssetFileDescriptor(android.os.ParcelFileDescriptor,long) -> makeAssetFileDescriptor
    2119:2119:boolean mapsToProfileDb(android.net.Uri) -> mapsToProfileDb
    2134:2141:boolean mapsToProfileDbWithInsertedValues(android.net.Uri,android.content.ContentValues) -> mapsToProfileDbWithInsertedValues
    4032:4040:int markRawContactAsDeleted(android.database.sqlite.SQLiteDatabase,long,boolean) -> markRawContactAsDeleted
    9538:9540:boolean matchQueryParameter(java.lang.String,int,java.lang.String,boolean) -> matchQueryParameter
    4742:4744:void maybeTrimLongPhoneNumber(android.content.ContentValues) -> maybeTrimLongPhoneNumber
    1789:1800:boolean needsToUpdateLocaleData(android.content.SharedPreferences,com.android.providers.contacts.LocaleSet,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.ProfileDatabaseHelper) -> needsToUpdateLocaleData
    2003:2003:com.android.providers.contacts.ContactsDatabaseHelper newDatabaseHelper(android.content.Context) -> newDatabaseHelper
    2012:2012:com.android.providers.contacts.ProfileProvider newProfileProvider() -> newProfileProvider
    2589:2590:void notifyChange() -> notifyChange
    2604:2624:void notifyChange(boolean) -> notifyChange
    4928:4928:void onAccountsUpdated(android.accounts.Account[]) -> onAccountsUpdated
    2451:2451:void onBegin() -> onBegin
    2460:2466:void onBeginTransactionInternal(boolean) -> onBeginTransactionInternal
    2472:2472:void onCommit() -> onCommit
    2481:2501:void onCommitTransactionInternal(boolean) -> onCommitTransactionInternal
    1483:1515:boolean onCreate() -> onCreate
    1778:1783:void onLocaleChanged() -> onLocaleChanged
    5342:5342:void onPackageChanged(java.lang.String) -> onPackageChanged
    2507:2507:void onRollback() -> onRollback
    2516:2518:void onRollbackTransactionInternal(boolean) -> onRollbackTransactionInternal
    8538:8562:android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String) -> openAssetFile
    8585:8828:android.content.res.AssetFileDescriptor openAssetFileInner(android.net.Uri,java.lang.String) -> openAssetFileInner
    8574:8579:android.content.res.AssetFileDescriptor openAssetFileLocal(android.net.Uri,java.lang.String) -> openAssetFileLocal
    8901:8920:android.content.res.AssetFileDescriptor openCorpContactPicture(long,android.net.Uri,java.lang.String,boolean) -> openCorpContactPicture
    8835:8892:android.content.res.AssetFileDescriptor openDirectoryFileEnterprise(android.net.Uri,java.lang.String) -> openDirectoryFileEnterprise
    8950:8963:android.content.res.AssetFileDescriptor openDisplayPhotoForRead(long) -> openDisplayPhotoForRead
    8986:8991:android.content.res.AssetFileDescriptor openDisplayPhotoForWrite(long,long,android.net.Uri,java.lang.String) -> openDisplayPhotoForWrite
    8926:8937:android.content.res.AssetFileDescriptor openPhotoAssetFile(android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String,java.lang.String,java.lang.String[]) -> openPhotoAssetFile
    9119:9157:void outputRawContactsAsVCard(android.net.Uri,java.io.OutputStream,java.lang.String,java.lang.String[]) -> outputRawContactsAsVCard
    1681:1771:void performBackgroundTask(int,java.lang.Object) -> performBackgroundTask
    2367:2377:android.net.Uri preAuthorizeUri(android.net.Uri) -> preAuthorizeUri
    3107:3127:boolean processStreamItemPhoto(android.content.ContentValues,boolean) -> processStreamItemPhoto
    5377:5377:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    5383:5401:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> query
    5450:5464:boolean queryAllowedByEnterprisePolicy(android.net.Uri) -> queryAllowedByEnterprisePolicy
    7206:7218:android.database.Cursor queryCorpContacts(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.Long,android.os.CancellationSignal) -> queryCorpContacts
    5635:5652:android.database.Cursor queryCorpContactsProvider(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> queryCorpContactsProvider
    7236:7279:android.database.Cursor queryCorpLookupIfNecessary(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],android.os.CancellationSignal) -> queryCorpLookupIfNecessary
    5553:5625:android.database.Cursor queryDirectoryAuthority(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,android.os.CancellationSignal) -> queryDirectoryAuthority
    5493:5505:android.database.Cursor queryDirectoryIfNecessary(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> queryDirectoryIfNecessary
    7369:7369:android.database.Cursor queryEmailsLookupEnterprise(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> queryEmailsLookupEnterprise
    7297:7309:android.database.Cursor queryFilterEnterprise(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal,android.net.Uri,java.lang.String) -> queryFilterEnterprise
    5406:5446:android.database.Cursor queryInternal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> queryInternal
    5746:7042:android.database.Cursor queryLocal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,long,android.os.CancellationSignal) -> queryLocal
    7377:7391:android.database.Cursor queryLookupEnterprise(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal,android.net.Uri,java.lang.String[]) -> queryLookupEnterprise
    7128:7176:android.database.Cursor queryMergedDataPhones(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> queryMergedDataPhones
    7095:7120:android.database.Cursor queryMergedDirectories(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> queryMergedDirectories
    7358:7362:android.database.Cursor queryPhoneLookupEnterprise(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> queryPhoneLookupEnterprise
    7466:7478:android.database.Cursor queryWithContactIdAndLookupKey(android.database.sqlite.SQLiteQueryBuilder,android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,android.os.CancellationSignal) -> queryWithContactIdAndLookupKey
    3969:3978:boolean rawContactIsLocal(long) -> rawContactIsLocal
    9519:9532:boolean readBooleanQueryParameter(android.net.Uri,java.lang.String,boolean) -> readBooleanQueryParameter
    7223:7224:java.lang.String[] removeLastColumn(java.lang.String[]) -> removeLastColumn
    5347:5371:void removeStaleAccountRows(java.lang.String,java.lang.String,java.lang.String,android.accounts.Account[]) -> removeStaleAccountRows
    9784:9792:long replaceAccountInfoByAccountId(android.net.Uri,android.content.ContentValues) -> replaceAccountInfoByAccountId
    9768:9772:void replacePackageNameByPackageId(android.content.ContentValues) -> replacePackageNameByPackageId
    5737:5739:void resetDirectoryCache() -> resetDirectoryCache
    2790:2836:android.accounts.Account resolveAccount(android.net.Uri,android.content.ContentValues) -> resolveAccount
    2846:2855:com.android.providers.contacts.AccountWithDataSet resolveAccountWithDataSet(android.net.Uri,android.content.ContentValues) -> resolveAccountWithDataSet
    7400:7427:android.database.Cursor rewriteCorpDirectories(android.database.Cursor) -> rewriteCorpDirectories
    9868:9868:long safeDiv(long,long) -> safeDiv
    8152:8152:java.lang.String sanitizeMatch(java.lang.String) -> sanitizeMatch
    5096:5098:void saveAccounts(android.accounts.Account[]) -> saveAccounts
    4302:4306:void scanPackagesByUid(int) -> scanPackagesByUid
    1672:1672:void scheduleBackgroundTask(int) -> scheduleBackgroundTask
    1676:1676:void scheduleBackgroundTask(int,java.lang.Object) -> scheduleBackgroundTask
    4932:4932:void scheduleRescanDirectories() -> scheduleRescanDirectories
    1578:1583:void setNewAggregatorForTest(boolean) -> setNewAggregatorForTest
    2630:2632:void setProviderStatus(int) -> setProviderStatus
    8239:8246:void setTableAndProjectionMapForStatusUpdates(android.database.sqlite.SQLiteQueryBuilder,java.lang.String[]) -> setTableAndProjectionMapForStatusUpdates
    7908:7908:void setTablesAndProjectionMapForContacts(android.database.sqlite.SQLiteQueryBuilder,java.lang.String[]) -> setTablesAndProjectionMapForContacts
    7918:7941:void setTablesAndProjectionMapForContacts(android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],boolean) -> setTablesAndProjectionMapForContacts
    7951:7966:void setTablesAndProjectionMapForContactsWithSnippet(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri,java.lang.String[],java.lang.String,long,boolean) -> setTablesAndProjectionMapForContactsWithSnippet
    8187:8187:void setTablesAndProjectionMapForData(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri,java.lang.String[],boolean) -> setTablesAndProjectionMapForData
    8192:8192:void setTablesAndProjectionMapForData(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri,java.lang.String[],boolean,boolean) -> setTablesAndProjectionMapForData
    8201:8201:void setTablesAndProjectionMapForData(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri,java.lang.String[],boolean,java.lang.Integer) -> setTablesAndProjectionMapForData
    8206:8233:void setTablesAndProjectionMapForData(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri,java.lang.String[],boolean,boolean,java.lang.Integer) -> setTablesAndProjectionMapForData
    8271:8284:void setTablesAndProjectionMapForEntities(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri,java.lang.String[]) -> setTablesAndProjectionMapForEntities
    8171:8175:void setTablesAndProjectionMapForRawContacts(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri) -> setTablesAndProjectionMapForRawContacts
    8179:8181:void setTablesAndProjectionMapForRawEntities(android.database.sqlite.SQLiteQueryBuilder,android.net.Uri) -> setTablesAndProjectionMapForRawEntities
    8255:8265:void setTablesAndProjectionMapForStreamItemPhotos(android.database.sqlite.SQLiteQueryBuilder) -> setTablesAndProjectionMapForStreamItemPhotos
    8250:8251:void setTablesAndProjectionMapForStreamItems(android.database.sqlite.SQLiteQueryBuilder) -> setTablesAndProjectionMapForStreamItems
    9916:9916:void shutdown() -> shutdown
    9758:9758:boolean snippetNeeded(java.lang.String[]) -> snippetNeeded
    3569:3569:java.lang.String statusUpdateToHtml(java.lang.String) -> statusUpdateToHtml
    5061:5070:java.util.Set stringToAccounts(java.lang.String) -> stringToAccounts
    2171:2175:void switchToContactMode() -> switchToContactMode
    2156:2160:void switchToProfileMode() -> switchToProfileMode
    9911:9911:void switchToProfileModeForTest() -> switchToProfileModeForTest
    9692:9694:void undemoteContact(android.database.sqlite.SQLiteDatabase,long) -> undemoteContact
    2213:2240:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    5102:5315:boolean updateAccountsInBackground(android.accounts.Account[]) -> updateAccountsInBackground
    9672:9673:void updateAggregationAlgorithmVersion() -> updateAggregationAlgorithmVersion
    4882:4919:int updateAggregationException(android.database.sqlite.SQLiteDatabase,android.content.ContentValues) -> updateAggregationException
    4773:4786:int updateContactOptions(android.content.ContentValues,java.lang.String,java.lang.String[],boolean) -> updateContactOptions
    4794:4875:int updateContactOptions(android.database.sqlite.SQLiteDatabase,long,android.content.ContentValues,boolean) -> updateContactOptions
    5321:5326:void updateContactsAccountCount(android.accounts.Account[]) -> updateContactsAccountCount
    4708:4736:int updateData(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean) -> updateData
    4749:4765:int updateData(android.content.ContentValues,android.database.Cursor,boolean) -> updateData
    1890:1890:void updateDirectoriesInBackground(boolean) -> updateDirectoriesInBackground
    2949:2954:void updateFavoritesMembership(long,boolean) -> updateFavoritesMembership
    4429:4507:int updateGroups(android.content.ContentValues,java.lang.String,java.lang.String[],boolean) -> updateGroups
    4060:4290:int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateInTransaction
    1816:1837:void updateLocaleInBackground() -> updateLocaleInBackground
    1849:1858:void updateLocaleOffline(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.ProfileDatabaseHelper) -> updateLocaleOffline
    1894:1913:void updateProviderStatus() -> updateProviderStatus
    4577:4700:int updateRawContact(android.database.sqlite.SQLiteDatabase,long,android.content.ContentValues,boolean) -> updateRawContact
    4524:4547:int updateRawContacts(android.content.ContentValues,java.lang.String,java.lang.String[],boolean) -> updateRawContacts
    1886:1886:void updateSearchIndexInBackground() -> updateSearchIndexInBackground
    2523:2527:void updateSearchIndexInTransaction() -> updateSearchIndexInTransaction
    4514:4517:int updateSettings(android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateSettings
    4312:4327:int updateStatusUpdate(android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateStatusUpdate
    4352:4364:int updateStreamItemPhotos(android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateStreamItemPhotos
    4336:4345:int updateStreamItems(android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateStreamItems
    9607:9668:void upgradeAggregationAlgorithmInBackground() -> upgradeAggregationAlgorithmInBackground
    2083:2086:void waitForAccess(java.util.concurrent.CountDownLatch) -> waitForAccess
    2061:2067:void wipeData() -> wipeData
    2425:2433:boolean yield(com.android.providers.contacts.ContactsTransaction) -> yield
com.android.providers.contacts.ContactsProvider2$$ExternalSyntheticLambda0 -> com.android.providers.contacts.ContactsProvider2$$ExternalSyntheticLambda0:
    com.android.providers.contacts.ContactsProvider2 com.android.providers.contacts.ContactsProvider2$$InternalSyntheticLambda$0$a9e22f3a9a4281b3eccf754ccf26dba70464bff2f12e01cc44f2e20a271ca595$0.f$0 -> f$0
    void com.android.providers.contacts.ContactsProvider2$$InternalSyntheticLambda$0$a9e22f3a9a4281b3eccf754ccf26dba70464bff2f12e01cc44f2e20a271ca595$0.<init>(com.android.providers.contacts.ContactsProvider2) -> <init>
    void com.android.providers.contacts.ContactsProvider2$$InternalSyntheticLambda$0$a9e22f3a9a4281b3eccf754ccf26dba70464bff2f12e01cc44f2e20a271ca595$0.run() -> run
com.android.providers.contacts.ContactsProvider2$1 -> com.android.providers.contacts.ContactsProvider2$1:
    1541:1541:void <init>(com.android.providers.contacts.ContactsProvider2,java.lang.String) -> <init>
    1544:1544:void onPerformTask(int,java.lang.Object) -> onPerformTask
com.android.providers.contacts.ContactsProvider2$2 -> com.android.providers.contacts.ContactsProvider2$2:
    9082:9082:void <init>(com.android.providers.contacts.ContactsProvider2,java.io.FileDescriptor,java.io.ByteArrayOutputStream) -> <init>
    9085:9090:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.android.providers.contacts.ContactsProvider2$AddressBookIndexQuery -> com.android.providers.contacts.ContactsProvider2$AddressBookIndexQuery:
    7550:7550:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsProvider2$DataContactsQuery -> com.android.providers.contacts.ContactsProvider2$DataContactsQuery:
    487:487:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsProvider2$DirectoryInfo -> com.android.providers.contacts.ContactsProvider2$DirectoryInfo:
    1344:1344:void <init>() -> <init>
    1344:1344:void <init>(com.android.providers.contacts.ContactsProvider2$1) -> <init>
com.android.providers.contacts.ContactsProvider2$DirectoryQuery -> com.android.providers.contacts.ContactsProvider2$DirectoryQuery:
    5694:5694:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsProvider2$GroupAccountQuery -> com.android.providers.contacts.ContactsProvider2$GroupAccountQuery:
    4415:4415:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsProvider2$GroupIdCacheEntry -> com.android.providers.contacts.ContactsProvider2$GroupIdCacheEntry:
    1355:1355:void <init>() -> <init>
com.android.providers.contacts.ContactsProvider2$LookupByDisplayNameQuery -> com.android.providers.contacts.ContactsProvider2$LookupByDisplayNameQuery:
    7809:7809:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsProvider2$LookupByRawContactIdQuery -> com.android.providers.contacts.ContactsProvider2$LookupByRawContactIdQuery:
    7755:7755:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsProvider2$LookupBySourceIdQuery -> com.android.providers.contacts.ContactsProvider2$LookupBySourceIdQuery:
    7698:7698:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsProvider2$PipeMonitor -> com.android.providers.contacts.ContactsProvider2$PipeMonitor:
    9001:9001:void <init>(com.android.providers.contacts.ContactsProvider2,long,long,android.os.ParcelFileDescriptor,com.android.providers.contacts.ContactsProvider2$1) -> <init>
    9005:9008:void <init>(com.android.providers.contacts.ContactsProvider2,long,long,android.os.ParcelFileDescriptor) -> <init>
    9013:9066:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.android.providers.contacts.ContactsProvider2$RawContactsQuery -> com.android.providers.contacts.ContactsProvider2$RawContactsQuery:
    507:507:void <clinit>() -> <clinit>
com.android.providers.contacts.ContactsProvider2$StructuredNameLookupBuilder -> com.android.providers.contacts.ContactsProvider2$StructuredNameLookupBuilder:
    9332:9333:void <init>(com.android.providers.contacts.ContactsProvider2,com.android.providers.contacts.NameSplitter) -> <init>
    9344:9344:java.lang.String[] getCommonNicknameClusters(java.lang.String) -> getCommonNicknameClusters
    9339:9339:void insertNameLookup(long,long,int,java.lang.String) -> insertNameLookup
com.android.providers.contacts.ContactsTaskScheduler -> com.android.providers.contacts.ContactsTaskScheduler:
    36:36:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String) -> <init>
    40:81:void <init>(java.lang.String,int) -> <init>
    33:33:java.lang.String access$000(com.android.providers.contacts.ContactsTaskScheduler) -> access$000
    33:33:android.os.HandlerThread access$100(com.android.providers.contacts.ContactsTaskScheduler) -> access$100
    152:152:int getThreadSequenceNumber() -> getThreadSequenceNumber
    88:90:boolean isRunning() -> isRunning
    157:157:boolean isRunningForTest() -> isRunningForTest
    82:84:void lambda$new$0() -> lambda$new$0
    96:96:void scheduleTask(int) -> scheduleTask
    102:121:void scheduleTask(int,java.lang.Object) -> scheduleTask
    128:128:void shutdownForTest() -> shutdownForTest
    132:147:void stopThread(boolean) -> stopThread
com.android.providers.contacts.ContactsTaskScheduler$$ExternalSyntheticLambda0 -> com.android.providers.contacts.ContactsTaskScheduler$$ExternalSyntheticLambda0:
    com.android.providers.contacts.ContactsTaskScheduler com.android.providers.contacts.ContactsTaskScheduler$$InternalSyntheticLambda$0$6c07951409e022f2ec07131d93268ddd60384e48c8323252cbd3f76c38241fe3$0.f$0 -> f$0
    void com.android.providers.contacts.ContactsTaskScheduler$$InternalSyntheticLambda$0$6c07951409e022f2ec07131d93268ddd60384e48c8323252cbd3f76c38241fe3$0.<init>(com.android.providers.contacts.ContactsTaskScheduler) -> <init>
    void com.android.providers.contacts.ContactsTaskScheduler$$InternalSyntheticLambda$0$6c07951409e022f2ec07131d93268ddd60384e48c8323252cbd3f76c38241fe3$0.run() -> run
com.android.providers.contacts.ContactsTaskScheduler$MyHandler -> com.android.providers.contacts.ContactsTaskScheduler$MyHandler:
    68:69:void <init>(com.android.providers.contacts.ContactsTaskScheduler,android.os.Looper) -> <init>
    74:77:void handleMessage(android.os.Message) -> handleMessage
com.android.providers.contacts.ContactsTransaction -> com.android.providers.contacts.ContactsTransaction:
    71:75:void <init>(boolean) -> <init>
    190:208:void finish(boolean) -> finish
    137:137:android.database.sqlite.SQLiteDatabase getDbForTag(java.lang.String) -> getDbForTag
    127:127:boolean hasDbInTransaction(java.lang.String) -> hasDbInTransaction
    79:79:boolean isBatch() -> isBatch
    83:83:boolean isDirty() -> isDirty
    87:87:void markDirty() -> markDirty
    161:163:void markSuccessful(boolean) -> markSuccessful
    91:91:void markYieldFailed() -> markYieldFailed
    149:151:android.database.sqlite.SQLiteDatabase removeDbForTag(java.lang.String) -> removeDbForTag
    110:118:void startTransactionForDb(android.database.sqlite.SQLiteDatabase,java.lang.String,android.database.sqlite.SQLiteTransactionListener) -> startTransactionForDb
com.android.providers.contacts.ContactsUpgradeReceiver -> com.android.providers.contacts.ContactsUpgradeReceiver:
    40:40:void <init>() -> <init>
    110:110:java.lang.String getOsVersionString() -> getOsVersionString
    52:103:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.providers.contacts.CountryMonitor -> com.android.providers.contacts.CountryMonitor:
    45:45:void <init>(android.content.Context) -> <init>
    48:50:void <init>(android.content.Context,java.lang.Runnable) -> <init>
    35:35:java.lang.String access$002(com.android.providers.contacts.CountryMonitor,java.lang.String) -> access$002
    35:35:java.lang.Runnable access$100(com.android.providers.contacts.CountryMonitor) -> access$100
    59:80:java.lang.String getCountryIso() -> getCountryIso
com.android.providers.contacts.CountryMonitor$1 -> com.android.providers.contacts.CountryMonitor$1:
    71:71:void <init>(com.android.providers.contacts.CountryMonitor) -> <init>
    73:75:void onCountryDetected(android.location.Country) -> onCountryDetected
com.android.providers.contacts.DataRowHandler -> com.android.providers.contacts.DataRowHandler:
    41:41:void <clinit>() -> <clinit>
    81:91:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator,java.lang.String) -> <init>
    423:424:boolean areAllEmpty(android.content.ContentValues,java.lang.String[]) -> areAllEmpty
    435:436:boolean areAnySpecified(android.content.ContentValues,java.lang.String[]) -> areAnySpecified
    314:326:int delete(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.database.Cursor) -> delete
    333:355:void fixPrimary(android.database.sqlite.SQLiteDatabase,long) -> fixPrimary
    369:371:void fixRawContactDisplayName(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long) -> fixRawContactDisplayName
    387:411:android.content.ContentValues getAugmentedValues(android.database.sqlite.SQLiteDatabase,long,android.content.ContentValues) -> getAugmentedValues
    103:106:long getMimeTypeId() -> getMimeTypeId
    195:210:void handleHashIdForInsert(android.content.ContentValues) -> handleHashIdForInsert
    221:241:void handleHashIdForUpdate(android.content.ContentValues,long) -> handleHashIdForUpdate
    252:310:void handlePrimaryAndSuperPrimary(com.android.providers.contacts.TransactionContext,android.content.ContentValues,long,long) -> handlePrimaryAndSuperPrimary
    116:143:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    376:376:boolean isNewRawContact(com.android.providers.contacts.TransactionContext,long) -> isNewRawContact
    416:416:void triggerAggregation(com.android.providers.contacts.TransactionContext,long) -> triggerAggregation
    157:172:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
com.android.providers.contacts.DataRowHandler$DataDeleteQuery -> com.android.providers.contacts.DataRowHandler$DataDeleteQuery:
    47:55:void <clinit>() -> <clinit>
com.android.providers.contacts.DataRowHandler$DataUpdateQuery -> com.android.providers.contacts.DataRowHandler$DataUpdateQuery:
    71:71:void <clinit>() -> <clinit>
com.android.providers.contacts.DataRowHandlerForCommonDataKind -> com.android.providers.contacts.DataRowHandlerForCommonDataKind:
    38:40:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator,java.lang.String,java.lang.String,java.lang.String) -> <init>
    68:73:void enforceTypeAndLabel(android.content.ContentValues) -> enforceTypeAndLabel
    46:47:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    53:59:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
com.android.providers.contacts.DataRowHandlerForCustomMimetype -> com.android.providers.contacts.DataRowHandlerForCustomMimetype:
    25:25:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator,java.lang.String) -> <init>
com.android.providers.contacts.DataRowHandlerForEmail -> com.android.providers.contacts.DataRowHandlerForEmail:
    33:33:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator) -> <init>
    103:103:void appendSearchableData(com.android.providers.contacts.SearchIndexManager$IndexBuilder) -> appendSearchableData
    98:98:boolean containsSearchableColumns(android.content.ContentValues) -> containsSearchableColumns
    74:81:int delete(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.database.Cursor) -> delete
    39:46:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    54:66:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
com.android.providers.contacts.DataRowHandlerForGroupMembership -> com.android.providers.contacts.DataRowHandlerForGroupMembership:
    71:72:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator,java.util.Map) -> <init>
    125:132:int delete(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.database.Cursor) -> delete
    193:253:long getOrMakeGroup(android.database.sqlite.SQLiteDatabase,long,java.lang.String,java.lang.Long) -> getOrMakeGroup
    115:119:boolean hasFavoritesGroupMembership(android.database.sqlite.SQLiteDatabase,long) -> hasFavoritesGroupMembership
    78:83:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    149:172:void resolveGroupSourceIdInValues(com.android.providers.contacts.TransactionContext,long,android.database.sqlite.SQLiteDatabase,android.content.ContentValues,boolean) -> resolveGroupSourceIdInValues
    90:100:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
    105:109:void updateRawContactsStar(android.database.sqlite.SQLiteDatabase,long,boolean) -> updateRawContactsStar
    137:143:void updateVisibility(com.android.providers.contacts.TransactionContext,long) -> updateVisibility
com.android.providers.contacts.DataRowHandlerForGroupMembership$RawContactsQuery -> com.android.providers.contacts.DataRowHandlerForGroupMembership$RawContactsQuery:
    47:47:void <clinit>() -> <clinit>
com.android.providers.contacts.DataRowHandlerForIdentity -> com.android.providers.contacts.DataRowHandlerForIdentity:
    31:31:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator) -> <init>
    64:68:int delete(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.database.Cursor) -> delete
    37:41:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    51:56:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
com.android.providers.contacts.DataRowHandlerForIm -> com.android.providers.contacts.DataRowHandlerForIm:
    31:31:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator) -> <init>
    41:45:void appendSearchableData(com.android.providers.contacts.SearchIndexManager$IndexBuilder) -> appendSearchableData
    36:36:boolean containsSearchableColumns(android.content.ContentValues) -> containsSearchableColumns
com.android.providers.contacts.DataRowHandlerForNickname -> com.android.providers.contacts.DataRowHandlerForNickname:
    34:34:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator) -> <init>
    94:95:void appendSearchableData(com.android.providers.contacts.SearchIndexManager$IndexBuilder) -> appendSearchableData
    89:89:boolean containsSearchableColumns(android.content.ContentValues) -> containsSearchableColumns
    76:83:int delete(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.database.Cursor) -> delete
    41:48:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    56:68:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
com.android.providers.contacts.DataRowHandlerForNote -> com.android.providers.contacts.DataRowHandlerForNote:
    31:31:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator) -> <init>
    46:46:void appendSearchableData(com.android.providers.contacts.SearchIndexManager$IndexBuilder) -> appendSearchableData
    41:41:boolean containsSearchableColumns(android.content.ContentValues) -> containsSearchableColumns
com.android.providers.contacts.DataRowHandlerForOrganization -> com.android.providers.contacts.DataRowHandlerForOrganization:
    36:36:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator) -> <init>
    128:137:void appendSearchableData(com.android.providers.contacts.SearchIndexManager$IndexBuilder) -> appendSearchableData
    117:123:boolean containsSearchableColumns(android.content.ContentValues) -> containsSearchableColumns
    96:101:int delete(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.database.Cursor) -> delete
    43:48:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    55:89:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
com.android.providers.contacts.DataRowHandlerForPhoneNumber -> com.android.providers.contacts.DataRowHandlerForPhoneNumber:
    38:38:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator) -> <init>
    161:176:void appendSearchableData(com.android.providers.contacts.SearchIndexManager$IndexBuilder) -> appendSearchableData
    156:156:boolean containsSearchableColumns(android.content.ContentValues) -> containsSearchableColumns
    102:110:int delete(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.database.Cursor) -> delete
    85:96:void fillNormalizedNumber(android.content.ContentValues) -> fillNormalizedNumber
    44:54:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    62:77:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
    116:133:void updatePhoneLookup(android.database.sqlite.SQLiteDatabase,long,long,java.lang.String,java.lang.String) -> updatePhoneLookup
com.android.providers.contacts.DataRowHandlerForPhoto -> com.android.providers.contacts.DataRowHandlerForPhoto:
    51:54:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator,com.android.providers.contacts.PhotoStore,int,int) -> <init>
    132:134:int delete(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.database.Cursor) -> delete
    126:127:boolean hasNonNullPhoto(android.content.ContentValues) -> hasNonNullPhoto
    61:72:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    108:119:boolean preProcessPhoto(android.content.ContentValues) -> preProcessPhoto
    146:160:boolean processPhoto(android.content.ContentValues) -> processPhoto
    80:96:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
com.android.providers.contacts.DataRowHandlerForStructuredName -> com.android.providers.contacts.DataRowHandlerForStructuredName:
    36:109:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator,com.android.providers.contacts.NameSplitter,com.android.providers.contacts.NameLookupBuilder) -> <init>
    183:216:void appendSearchableData(com.android.providers.contacts.SearchIndexManager$IndexBuilder) -> appendSearchableData
    171:178:boolean containsSearchableColumns(android.content.ContentValues) -> containsSearchableColumns
    95:102:int delete(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.database.Cursor) -> delete
    121:159:void fixStructuredNameComponents(android.content.ContentValues,android.content.ContentValues) -> fixStructuredNameComponents
    49:60:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    67:89:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
com.android.providers.contacts.DataRowHandlerForStructuredPostal -> com.android.providers.contacts.DataRowHandlerForStructuredPostal:
    36:51:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.aggregation.AbstractContactAggregator,com.android.providers.contacts.PostalSplitter) -> <init>
    113:113:void appendSearchableData(com.android.providers.contacts.SearchIndexManager$IndexBuilder) -> appendSearchableData
    108:108:boolean containsSearchableColumns(android.content.ContentValues) -> containsSearchableColumns
    82:96:void fixStructuredPostalComponents(android.content.ContentValues,android.content.ContentValues) -> fixStructuredPostalComponents
    57:58:long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues) -> insert
    64:71:boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean) -> update
com.android.providers.contacts.DbModifierWithNotification -> com.android.providers.contacts.DbModifierWithNotification:
    59:59:void <clinit>() -> <clinit>
    81:81:void <init>(java.lang.String,android.database.sqlite.SQLiteDatabase,android.content.Context) -> <init>
    86:86:void <init>(java.lang.String,android.database.DatabaseUtils$InsertHelper,android.content.Context) -> <init>
    91:91:void <init>(java.lang.String,android.database.sqlite.SQLiteDatabase,android.database.DatabaseUtils$InsertHelper,android.content.Context) -> <init>
    76:105:void <init>(java.lang.String,android.database.sqlite.SQLiteDatabase,android.database.DatabaseUtils$InsertHelper,boolean,android.content.Context) -> <init>
    277:312:int delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
    330:333:void finishBulkOperation() -> finishBulkOperation
    404:413:java.lang.Boolean getAsBoolean(android.content.ContentValues,java.lang.String) -> getAsBoolean
    390:394:java.util.Collection getCallingPackages() -> getCallingPackages
    343:350:java.util.Set getModifiedPackages(java.lang.String,java.lang.String[]) -> getModifiedPackages
    361:363:java.util.Set getModifiedPackages(android.content.ContentValues) -> getModifiedPackages
    417:420:long getTimeMillis() -> getTimeMillis
    110:120:long insert(java.lang.String,java.lang.String,android.content.ContentValues) -> insert
    127:137:long insert(android.content.ContentValues) -> insert
    374:382:boolean isSelfModifyingOrInternal(java.util.Set) -> isSelfModifyingOrInternal
    258:259:boolean isUpdatingVoicemailColumns(android.content.ContentValues) -> isUpdatingVoicemailColumns
    143:150:void notifyCallLogChange(android.content.Context) -> notifyCallLogChange
    164:168:void notifyVoicemailChange(android.net.Uri,java.util.Set) -> notifyVoicemailChange
    156:159:void notifyVoicemailChangeOnInsert(android.net.Uri,java.util.Set) -> notifyVoicemailChangeOnInsert
    425:425:void setVoicemailNotifierForTest(com.android.providers.contacts.VoicemailNotifier) -> setVoicemailNotifierForTest
    319:320:void startBulkOperation() -> startBulkOperation
    175:227:int update(android.net.Uri,java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    240:253:boolean updateDirtyFlag(android.content.ContentValues,java.util.Set) -> updateDirtyFlag
    267:271:void updateLastModified(java.lang.String,java.lang.String,java.lang.String[]) -> updateLastModified
    325:325:void yieldBulkOperation() -> yieldBulkOperation
com.android.providers.contacts.DefaultCallLogInsertionHelper -> com.android.providers.contacts.DefaultCallLogInsertionHelper:
    46:46:void <clinit>() -> <clinit>
    60:62:void <init>(android.content.Context) -> <init>
    68:85:void addComputedValues(android.content.ContentValues) -> addComputedValues
    91:91:java.lang.String getCurrentCountryIso() -> getCurrentCountryIso
    118:120:java.lang.String getGeocodedLocationFor(java.lang.String,java.lang.String) -> getGeocodedLocationFor
    54:57:com.android.providers.contacts.DefaultCallLogInsertionHelper getInstance(android.content.Context) -> getInstance
    110:113:com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder getPhoneNumberOfflineGeocoder() -> getPhoneNumberOfflineGeocoder
    95:98:com.android.i18n.phonenumbers.PhoneNumberUtil getPhoneNumberUtil() -> getPhoneNumberUtil
    103:103:com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parsePhoneNumber(java.lang.String,java.lang.String) -> parsePhoneNumber
com.android.providers.contacts.EventLogTags -> com.android.providers.contacts.EventLogTags:
    17:17:void writeContactsUpgradeReceiver(long) -> writeContactsUpgradeReceiver
com.android.providers.contacts.FastScrollingIndexCache -> com.android.providers.contacts.FastScrollingIndexCache:
    62:68:void <clinit>() -> <clinit>
    87:112:void <init>(android.content.SharedPreferences) -> <init>
    123:123:void appendIfNotNull(java.lang.StringBuilder,java.lang.Object) -> appendIfNotNull
    129:145:java.lang.String buildCacheKey(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String,java.lang.String) -> buildCacheKey
    150:161:java.lang.String buildCacheValue(java.lang.String[],int[]) -> buildCacheValue
    168:170:android.os.Bundle buildExtraBundle(java.lang.String[],int[]) -> buildExtraBundle
    177:199:android.os.Bundle buildExtraBundleFromValue(java.lang.String) -> buildExtraBundleFromValue
    284:324:void ensureLoaded() -> ensureLoaded
    206:229:android.os.Bundle get(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String,java.lang.String) -> get
    92:101:com.android.providers.contacts.FastScrollingIndexCache getInstance(android.content.Context) -> getInstance
    107:108:com.android.providers.contacts.FastScrollingIndexCache getInstanceForTest(android.content.SharedPreferences) -> getInstanceForTest
    254:262:void invalidate() -> invalidate
    238:250:void put(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,android.os.Bundle) -> put
    271:280:void save() -> save
com.android.providers.contacts.GlobalSearchSupport -> com.android.providers.contacts.GlobalSearchSupport:
    48:48:void <clinit>() -> <clinit>
    168:172:void <init>(com.android.providers.contacts.ContactsProvider2) -> <init>
    227:273:android.database.Cursor addSearchSuggestionsBasedOnFilter(android.database.MatrixCursor,android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal) -> addSearchSuggestionsBasedOnFilter
    213:219:android.database.Cursor handleSearchShortcutRefresh(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String,android.os.CancellationSignal) -> handleSearchShortcutRefresh
    184:192:android.database.Cursor handleSearchSuggestionsQuery(android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> handleSearchSuggestionsQuery
    283:308:java.lang.String shortenSnippet(java.lang.String) -> shortenSnippet
com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion -> com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion:
    71:75:void <init>() -> <init>
    71:71:void <init>(com.android.providers.contacts.GlobalSearchSupport$1) -> <init>
    120:141:void addColumnValue(java.util.ArrayList,java.lang.String) -> addColumnValue
    87:113:java.util.ArrayList asList(java.lang.String[]) -> asList
    146:146:java.lang.String buildUri() -> buildUri
    150:161:void reset() -> reset
com.android.providers.contacts.HanziToPinyin -> com.android.providers.contacts.HanziToPinyin:
    74:80:void <init>() -> <init>
    184:186:void addToken(java.lang.StringBuilder,java.util.ArrayList,int) -> addToken
    90:95:com.android.providers.contacts.HanziToPinyin getInstance() -> getInstance
    138:177:java.util.ArrayList getTokens(java.lang.String) -> getTokens
    86:86:boolean hasChineseTransliterator() -> hasChineseTransliterator
    99:121:void tokenize(char,com.android.providers.contacts.HanziToPinyin$Token) -> tokenize
    126:129:java.lang.String transliterate(java.lang.String) -> transliterate
com.android.providers.contacts.HanziToPinyin$Token -> com.android.providers.contacts.HanziToPinyin$Token:
    50:50:void <init>() -> <init>
    53:56:void <init>(int,java.lang.String,java.lang.String) -> <init>
com.android.providers.contacts.LegacyApiSupport -> com.android.providers.contacts.LegacyApiSupport:
    76:464:void <clinit>() -> <clinit>
    184:512:void <init>(android.content.Context,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.ContactsProvider2,com.android.providers.contacts.GlobalSearchSupport) -> <init>
    1874:1880:void appendGroupAccount(java.lang.StringBuilder) -> appendGroupAccount
    1856:1862:void appendRawContactsAccount(java.lang.StringBuilder) -> appendRawContactsAccount
    1868:1870:void applyGroupAccount(android.database.sqlite.SQLiteQueryBuilder) -> applyGroupAccount
    1850:1852:void applyRawContactsAccount(android.database.sqlite.SQLiteQueryBuilder) -> applyRawContactsAccount
    1894:1902:java.lang.String buildGroupNameMatchWhereClause(java.lang.String) -> buildGroupNameMatchWhereClause
    1913:1921:java.lang.String buildGroupSystemIdMatchWhereClause(java.lang.String) -> buildGroupSystemIdMatchWhereClause
    1412:1417:void copyCommonFields(android.content.ContentValues,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> copyCommonFields
    1270:1287:void copySettingsToLegacySettings() -> copySettingsToLegacySettings
    523:525:void createDatabase(android.database.sqlite.SQLiteDatabase) -> createDatabase
    740:741:void createSettingsTable(android.database.sqlite.SQLiteDatabase) -> createSettingsTable
    567:714:void createViews(android.database.sqlite.SQLiteDatabase) -> createViews
    1466:1484:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    1494:1539:int delete(android.net.Uri,int,long) -> delete
    516:518:void ensureDefaultAccount() -> ensureDefaultAccount
    1450:1460:long findFirstDataId(long,java.lang.String) -> findFirstDataId
    1440:1445:android.net.Uri findFirstDataRow(long,java.lang.String) -> findFirstDataRow
    2012:2033:java.lang.String getContactMethodType(android.net.Uri) -> getContactMethodType
    1925:1947:java.lang.String getRawContactsByFilterAsNestedQuery(java.lang.String) -> getRawContactsByFilterAsNestedQuery
    822:827:long getRequiredValue(android.content.ContentValues,java.lang.String) -> getRequiredValue
    1960:2005:java.lang.String getType(android.net.Uri) -> getType
    751:817:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    868:877:long insertContactMethod(long,android.content.ContentValues) -> insertContactMethod
    881:889:long insertExtension(long,android.content.ContentValues) -> insertExtension
    893:901:long insertGroup(android.content.ContentValues) -> insertGroup
    905:912:long insertGroupMembership(long,long) -> insertGroupMembership
    849:855:long insertOrganization(android.content.ContentValues) -> insertOrganization
    831:842:long insertPeople(android.content.ContentValues) -> insertPeople
    859:864:long insertPhone(long,android.content.ContentValues) -> insertPhone
    1956:1956:void onChange(android.net.Uri) -> onChange
    1373:1403:void parseContactMethodValues(int,android.content.ContentValues) -> parseContactMethodValues
    1433:1435:void parseExtensionValues(android.content.ContentValues) -> parseExtensionValues
    1422:1428:void parseGroupValues(android.content.ContentValues) -> parseGroupValues
    1333:1349:void parseOrganizationValues(android.content.ContentValues) -> parseOrganizationValues
    1291:1328:void parsePeopleValues(android.content.ContentValues) -> parsePeopleValues
    1354:1368:void parsePhoneValues(android.content.ContentValues) -> parsePhoneValues
    1547:1843:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String) -> query
    916:947:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    978:1014:int update(int,long,android.content.ContentValues) -> update
    955:968:int updateAll(android.net.Uri,int,android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateAll
    1071:1094:int updateContactMethods(long,android.content.ContentValues) -> updateContactMethods
    1099:1101:int updateExtensions(long,android.content.ContentValues) -> updateExtensions
    1106:1108:int updateGroups(long,android.content.ContentValues) -> updateGroups
    1166:1184:void updateLegacyPhotoData(long,long,android.content.ContentValues) -> updateLegacyPhotoData
    1055:1057:int updateOrganizations(long,android.content.ContentValues) -> updateOrganizations
    1022:1047:int updatePeople(long,android.content.ContentValues) -> updatePeople
    1062:1064:int updatePhones(long,android.content.ContentValues) -> updatePhones
    1118:1135:int updatePhoto(long,android.content.ContentValues) -> updatePhoto
    1142:1160:int updatePhotoByDataId(long,android.content.ContentValues) -> updatePhotoByDataId
    1229:1239:void updateSetting(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,android.content.ContentValues) -> updateSetting
    1189:1221:int updateSettings(android.content.ContentValues) -> updateSettings
com.android.providers.contacts.LegacyApiSupport$IdQuery -> com.android.providers.contacts.LegacyApiSupport$IdQuery:
    227:227:void <clinit>() -> <clinit>
com.android.providers.contacts.LocaleChangeReceiver -> com.android.providers.contacts.LocaleChangeReceiver:
    30:30:void <init>() -> <init>
    35:38:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.providers.contacts.LocaleSet -> com.android.providers.contacts.LocaleSet:
    36:38:void <init>(android.os.LocaleList,java.util.Locale) -> <init>
    171:173:boolean equals(java.lang.Object) -> equals
    111:111:android.os.LocaleList getAllLocales() -> getAllLocales
    74:78:java.lang.String getLikelyScript(java.util.Locale) -> getLikelyScript
    104:107:java.util.Locale getPrimaryLocale() -> getPrimaryLocale
    87:87:java.lang.String getScriptIfChinese(java.util.Locale) -> getScriptIfChinese
    163:163:boolean isCurrent() -> isCurrent
    53:53:boolean isLanguageChinese(java.util.Locale) -> isLanguageChinese
    58:58:boolean isLanguageJapanese(java.util.Locale) -> isLanguageJapanese
    63:63:boolean isLanguageKorean(java.util.Locale) -> isLanguageKorean
    68:70:boolean isLocaleCJK(java.util.Locale) -> isLocaleCJK
    91:91:boolean isLocaleSimplifiedChinese(java.util.Locale) -> isLocaleSimplifiedChinese
    96:96:boolean isLocaleTraditionalChinese(java.util.Locale) -> isLocaleTraditionalChinese
    115:115:boolean isPrimaryLocaleCJK() -> isPrimaryLocaleCJK
    42:42:com.android.providers.contacts.LocaleSet newDefault() -> newDefault
    48:48:com.android.providers.contacts.LocaleSet newForTest(java.util.Locale[]) -> newForTest
    122:130:boolean shouldPreferJapanese() -> shouldPreferJapanese
    141:152:boolean shouldPreferSimplifiedChinese() -> shouldPreferSimplifiedChinese
    180:180:java.lang.String toString() -> toString
com.android.providers.contacts.MemoryCursor -> com.android.providers.contacts.MemoryCursor:
    30:32:void <init>(java.lang.String,java.lang.String[]) -> <init>
    36:36:void fillFromCursor(android.database.Cursor) -> fillFromCursor
    46:46:java.lang.String[] getColumnNames() -> getColumnNames
    41:41:int getCount() -> getCount
com.android.providers.contacts.NameLookupBuilder -> com.android.providers.contacts.NameLookupBuilder:
    40:40:void <clinit>() -> <clinit>
    36:76:void <init>(com.android.providers.contacts.NameSplitter) -> <init>
    180:221:void appendKoreanNameConsonantsLookup(com.android.providers.contacts.SearchIndexManager$IndexBuilder,java.lang.String) -> appendKoreanNameConsonantsLookup
    162:168:void appendNameLookupForLocaleBasedName(com.android.providers.contacts.SearchIndexManager$IndexBuilder,java.lang.String,int) -> appendNameLookupForLocaleBasedName
    329:332:void appendNameShorthandLookup(com.android.providers.contacts.SearchIndexManager$IndexBuilder,java.lang.String,int) -> appendNameShorthandLookup
    143:153:void appendToSearchIndex(com.android.providers.contacts.SearchIndexManager$IndexBuilder,java.lang.String,int) -> appendToSearchIndex
    288:295:void insertCollationKey(long,long,int) -> insertCollationKey
    100:139:void insertNameLookup(long,long,java.lang.String,int) -> insertNameLookup
    268:280:void insertNameVariant(long,long,int,int,boolean) -> insertNameVariant
    242:259:void insertNameVariants(long,long,int,int,boolean,boolean) -> insertNameVariants
    305:317:void insertNicknamePermutations(long,long,int,int) -> insertNicknamePermutations
    226:226:java.lang.String normalizeName(java.lang.String) -> normalizeName
com.android.providers.contacts.NameLookupBuilder$1 -> com.android.providers.contacts.NameLookupBuilder$1:
    114:114:void <init>(com.android.providers.contacts.NameLookupBuilder) -> <init>
    114:114:int compare(java.lang.Object,java.lang.Object) -> compare
    117:117:int compare(java.lang.String,java.lang.String) -> compare
com.android.providers.contacts.NameNormalizer -> com.android.providers.contacts.NameNormalizer:
    32:32:void <clinit>() -> <clinit>
    87:100:int compareComplexity(java.lang.String,java.lang.String) -> compareComplexity
    43:54:void ensureCollators() -> ensureCollators
    67:70:java.text.RuleBasedCollator getComplexityCollator() -> getComplexityCollator
    59:62:java.text.RuleBasedCollator getCompressingCollator() -> getCompressingCollator
    111:121:java.lang.String lettersAndDigitsOnly(java.lang.String) -> lettersAndDigitsOnly
    78:79:java.lang.String normalize(java.lang.String) -> normalize
com.android.providers.contacts.NameSplitter -> com.android.providers.contacts.NameSplitter:
    50:68:void <clinit>() -> <clinit>
    284:300:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Locale) -> <init>
    308:312:android.util.ArraySet convertToSet(java.lang.String) -> convertToSet
    691:703:int getAdjustedFullNameStyle(int) -> getAdjustedFullNameStyle
    988:1000:int guessCJKNameStyle(java.lang.String,int) -> guessCJKNameStyle
    926:948:void guessFullNameStyle(com.android.providers.contacts.NameSplitter$Name) -> guessFullNameStyle
    957:982:int guessFullNameStyle(java.lang.String) -> guessFullNameStyle
    894:896:void guessNameStyle(com.android.providers.contacts.NameSplitter$Name) -> guessNameStyle
    1007:1029:void guessPhoneticNameStyle(com.android.providers.contacts.NameSplitter$Name) -> guessPhoneticNameStyle
    1042:1058:int guessPhoneticNameStyle(java.lang.String) -> guessPhoneticNameStyle
    1073:1073:boolean isCJKUnicodeBlock(java.lang.Character$UnicodeBlock) -> isCJKUnicodeBlock
    840:843:boolean isFamilyNamePrefix(java.lang.String) -> isFamilyNamePrefix
    1091:1091:boolean isJapanesePhoneticUnicodeBlock(java.lang.Character$UnicodeBlock) -> isJapanesePhoneticUnicodeBlock
    1085:1085:boolean isKoreanUnicodeBlock(java.lang.Character$UnicodeBlock) -> isKoreanUnicodeBlock
    1065:1065:boolean isLatinUnicodeBlock(java.lang.Character$UnicodeBlock) -> isLatinUnicodeBlock
    524:541:java.lang.String join(com.android.providers.contacts.NameSplitter$Name,boolean,boolean) -> join
    561:662:java.lang.String join(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) -> join
    552:552:java.lang.String joinPhoneticName(com.android.providers.contacts.NameSplitter$Name) -> joinPhoneticName
    670:676:java.lang.String normalizedSuffix(java.lang.String) -> normalizedSuffix
    866:883:void parseGivenNames(com.android.providers.contacts.NameSplitter$Name,com.android.providers.contacts.NameSplitter$NameTokenizer) -> parseGivenNames
    793:831:void parseLastName(com.android.providers.contacts.NameSplitter$Name,com.android.providers.contacts.NameSplitter$NameTokenizer) -> parseLastName
    848:860:void parseMiddleName(com.android.providers.contacts.NameSplitter$Name,com.android.providers.contacts.NameSplitter$NameTokenizer) -> parseMiddleName
    716:726:void parsePrefix(com.android.providers.contacts.NameSplitter$Name,com.android.providers.contacts.NameSplitter$NameTokenizer) -> parsePrefix
    734:788:void parseSuffix(com.android.providers.contacts.NameSplitter$Name,com.android.providers.contacts.NameSplitter$NameTokenizer) -> parseSuffix
    350:355:void split(com.android.providers.contacts.NameSplitter$Name,java.lang.String) -> split
    367:383:void split(com.android.providers.contacts.NameSplitter$Name,java.lang.String,int) -> split
    420:450:void splitChineseName(com.android.providers.contacts.NameSplitter$Name,java.lang.String) -> splitChineseName
    463:472:void splitJapaneseName(com.android.providers.contacts.NameSplitter$Name,java.lang.String) -> splitJapaneseName
    484:513:void splitKoreanName(com.android.providers.contacts.NameSplitter$Name,java.lang.String) -> splitKoreanName
    395:409:void splitWesternName(com.android.providers.contacts.NameSplitter$Name,java.lang.String) -> splitWesternName
    326:335:int tokenize(java.lang.String[],java.lang.String) -> tokenize
com.android.providers.contacts.NameSplitter$Name -> com.android.providers.contacts.NameSplitter$Name:
    99:99:void <init>() -> <init>
    191:200:void clear() -> clear
    154:168:void fromValues(android.content.ContentValues) -> fromValues
    125:125:java.lang.String getFamilyName() -> getFamilyName
    117:117:java.lang.String getGivenNames() -> getGivenNames
    121:121:java.lang.String getMiddleName() -> getMiddleName
    113:113:java.lang.String getPrefix() -> getPrefix
    130:130:java.lang.String getSuffix() -> getSuffix
    204:210:boolean isEmpty() -> isEmpty
    186:186:void putValueIfPresent(android.content.ContentValues,java.lang.String,java.lang.String) -> putValueIfPresent
    215:215:java.lang.String toString() -> toString
    172:181:void toValues(android.content.ContentValues) -> toValues
com.android.providers.contacts.NameSplitter$NameTokenizer -> com.android.providers.contacts.NameSplitter$NameTokenizer:
    230:251:void <init>(java.lang.String) -> <init>
    222:222:int access$000(com.android.providers.contacts.NameSplitter$NameTokenizer) -> access$000
    222:222:int access$008(com.android.providers.contacts.NameSplitter$NameTokenizer) -> access$008
    222:222:int access$012(com.android.providers.contacts.NameSplitter$NameTokenizer,int) -> access$012
    222:222:int access$100(com.android.providers.contacts.NameSplitter$NameTokenizer) -> access$100
    222:222:int access$102(com.android.providers.contacts.NameSplitter$NameTokenizer,int) -> access$102
    222:222:int access$110(com.android.providers.contacts.NameSplitter$NameTokenizer) -> access$110
    222:222:java.lang.String[] access$200(com.android.providers.contacts.NameSplitter$NameTokenizer) -> access$200
    267:267:boolean hasComma(int) -> hasComma
    260:260:boolean hasDot(int) -> hasDot
com.android.providers.contacts.PhoneAccountRegistrationReceiver -> com.android.providers.contacts.PhoneAccountRegistrationReceiver:
    36:36:void <init>() -> <init>
    43:52:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.providers.contacts.PhoneLookupWithStarPrefix -> com.android.providers.contacts.PhoneLookupWithStarPrefix:
    136:148:java.lang.Object cursorValue(android.database.Cursor,int) -> cursorValue
    124:128:boolean matchingNumberStartsWithStar(android.database.Cursor) -> matchingNumberStartsWithStar
    106:117:java.lang.String normalizeNumberWithStar(java.lang.String) -> normalizeNumberWithStar
    168:177:android.database.Cursor removeNoMatchPhoneNumber(java.lang.String,android.database.Cursor,java.lang.String) -> removeNoMatchPhoneNumber
    56:101:android.database.Cursor removeNonStarMatchesFromCursor(java.lang.String,android.database.Cursor) -> removeNonStarMatchesFromCursor
com.android.providers.contacts.PhotoPriorityResolver -> com.android.providers.contacts.PhotoPriorityResolver:
    58:58:void <clinit>() -> <clinit>
    76:79:void <init>(android.content.Context) -> <init>
    88:96:int getPhotoPriority(java.lang.String) -> getPhotoPriority
    146:175:int loadPhotoPriorityFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser) -> loadPhotoPriorityFromXml
    103:107:int resolvePhotoPriority(java.lang.String) -> resolvePhotoPriority
    119:134:int resolvePhotoPriorityFromMetaData(java.lang.String) -> resolvePhotoPriorityFromMetaData
com.android.providers.contacts.PhotoProcessor -> com.android.providers.contacts.PhotoProcessor:
    51:68:void <clinit>() -> <clinit>
    115:115:void <init>(android.graphics.Bitmap,int,int) -> <init>
    127:127:void <init>(byte[],int,int) -> <init>
    143:148:void <init>(android.graphics.Bitmap,int,int,boolean) -> <init>
    164:164:void <init>(byte[],int,int,boolean) -> <init>
    246:253:byte[] getCompressedBytes(android.graphics.Bitmap,int) -> getCompressedBytes
    262:262:android.graphics.Bitmap getDisplayPhoto() -> getDisplayPhoto
    276:276:byte[] getDisplayPhotoBytes() -> getDisplayPhotoBytes
    319:319:int getMaxDisplayPhotoSize() -> getMaxDisplayPhotoSize
    303:303:int getMaxThumbnailPhotoDim() -> getMaxThumbnailPhotoDim
    311:311:int getMaxThumbnailSize() -> getMaxThumbnailSize
    197:235:android.graphics.Bitmap getNormalizedBitmap(android.graphics.Bitmap,int,boolean) -> getNormalizedBitmap
    285:288:byte[] getThumbnailPhotoBytes() -> getThumbnailPhotoBytes
    173:177:void process() -> process
com.android.providers.contacts.PhotoStore -> com.android.providers.contacts.PhotoStore:
    43:43:void <clinit>() -> <clinit>
    45:82:void <init>(java.io.File,com.android.providers.contacts.ContactsDatabaseHelper) -> <init>
    150:162:java.util.Set cleanup(java.util.Set) -> cleanup
    232:234:void cleanupFile(java.io.File) -> cleanupFile
    89:100:void clear() -> clear
    112:112:com.android.providers.contacts.PhotoStore$Entry get(long) -> get
    250:250:java.io.File getFileForPhotoFileId(long) -> getFileForPhotoFileId
    105:105:long getTotalSize() -> getTotalSize
    120:135:void initialize() -> initialize
    174:174:long insert(com.android.providers.contacts.PhotoProcessor) -> insert
    188:225:long insert(com.android.providers.contacts.PhotoProcessor,boolean) -> insert
    259:265:void putEntry(long,com.android.providers.contacts.PhotoStore$Entry) -> putEntry
    242:243:void remove(long) -> remove
    273:279:void removeEntry(long) -> removeEntry
com.android.providers.contacts.PhotoStore$Entry -> com.android.providers.contacts.PhotoStore$Entry:
    292:295:void <init>(java.io.File) -> <init>
com.android.providers.contacts.PostalSplitter -> com.android.providers.contacts.PostalSplitter:
    28:28:void <clinit>() -> <clinit>
    62:63:void <init>(java.util.Locale) -> <init>
    235:239:boolean arePrintableAsciiOnly(java.lang.String[]) -> arePrintableAsciiOnly
    85:95:java.lang.String join(com.android.providers.contacts.PostalSplitter$Postal) -> join
    166:225:java.lang.String joinEnUs(com.android.providers.contacts.PostalSplitter$Postal) -> joinEnUs
    100:159:java.lang.String joinJaJp(com.android.providers.contacts.PostalSplitter$Postal) -> joinJaJp
    71:72:void split(com.android.providers.contacts.PostalSplitter$Postal,java.lang.String) -> split
com.android.providers.contacts.PostalSplitter$Postal -> com.android.providers.contacts.PostalSplitter$Postal:
    32:32:void <init>() -> <init>
    42:48:void fromValues(android.content.ContentValues) -> fromValues
    52:58:void toValues(android.content.ContentValues) -> toValues
com.android.providers.contacts.ProfileAwareUriMatcher -> com.android.providers.contacts.ProfileAwareUriMatcher:
    35:53:void <clinit>() -> <clinit>
    61:61:void <init>(int) -> <init>
    66:96:void addURI(java.lang.String,java.lang.String,int) -> addURI
    115:130:boolean mapsToProfile(android.net.Uri) -> mapsToProfile
com.android.providers.contacts.ProfileDatabaseHelper -> com.android.providers.contacts.ProfileDatabaseHelper:
    52:52:void <init>(android.content.Context,java.lang.String,boolean,boolean) -> <init>
    56:60:com.android.providers.contacts.ProfileDatabaseHelper getInstance(android.content.Context) -> getInstance
    46:46:com.android.providers.contacts.ProfileDatabaseHelper getNewInstanceForTest(android.content.Context,java.lang.String) -> getNewInstanceForTest
    70:74:void initializeAutoIncrementSequences(android.database.sqlite.SQLiteDatabase) -> initializeAutoIncrementSequences
com.android.providers.contacts.ProfileProvider -> com.android.providers.contacts.ProfileProvider:
    47:48:void <init>(com.android.providers.contacts.ContactsProvider2) -> <init>
    99:100:int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[]) -> deleteInTransaction
    169:169:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    57:57:com.android.providers.contacts.ProfileDatabaseHelper getDatabaseHelper() -> getDatabaseHelper
    62:62:java.lang.ThreadLocal getTransactionHolder() -> getTransactionHolder
    150:150:java.lang.String getType(android.net.Uri) -> getType
    86:87:android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues) -> insertInTransaction
    40:40:com.android.providers.contacts.ContactsDatabaseHelper newDatabaseHelper(android.content.Context) -> newDatabaseHelper
    53:53:com.android.providers.contacts.ProfileDatabaseHelper newDatabaseHelper(android.content.Context) -> newDatabaseHelper
    116:116:void notifyChange() -> notifyChange
    129:129:void onBegin() -> onBegin
    134:135:void onCommit() -> onCommit
    140:140:void onRollback() -> onRollback
    105:105:android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String) -> openAssetFile
    68:68:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    74:81:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal) -> query
    160:164:void sendProfileChangedBroadcast() -> sendProfileChangedBroadcast
    93:94:int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateInTransaction
    109:111:void useProfileDbForTransaction() -> useProfileDbForTransaction
    145:145:boolean yield(com.android.providers.contacts.ContactsTransaction) -> yield
com.android.providers.contacts.ReorderingCursorWrapper -> com.android.providers.contacts.ReorderingCursorWrapper:
    36:42:void <init>(android.database.Cursor,int[]) -> <init>
    47:48:void close() -> close
    58:58:java.lang.String[] getColumnNames() -> getColumnNames
    63:63:int getCount() -> getCount
    68:68:double getDouble(int) -> getDouble
    73:73:float getFloat(int) -> getFloat
    78:78:int getInt(int) -> getInt
    83:83:long getLong(int) -> getLong
    88:88:short getShort(int) -> getShort
    93:93:java.lang.String getString(int) -> getString
    98:98:int getType(int) -> getType
    103:103:boolean isNull(int) -> isNull
    53:53:boolean onMove(int,int) -> onMove
com.android.providers.contacts.SearchIndexManager -> com.android.providers.contacts.SearchIndexManager:
    53:422:void <clinit>() -> <clinit>
    245:252:void <init>(com.android.providers.contacts.ContactsProvider2) -> <init>
    347:394:int buildAndInsertIndex(android.database.sqlite.SQLiteDatabase,java.lang.String) -> buildAndInsertIndex
    446:450:java.lang.String getFtsMatchQuery(java.lang.String,com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder) -> getFtsMatchQuery
    408:408:int getSearchIndexVersion() -> getSearchIndexVersion
    399:405:void insertIndexRow(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.SearchIndexManager$IndexBuilder) -> insertIndexRow
    279:291:void rebuildIndex(android.database.sqlite.SQLiteDatabase) -> rebuildIndex
    412:412:void setSearchIndexVersion(int) -> setSearchIndexVersion
    429:432:java.util.List splitIntoFtsTokens(java.lang.String) -> splitIntoFtsTokens
    257:275:void updateIndex(boolean) -> updateIndex
    295:342:void updateIndexForRawContacts(java.util.Set,java.util.Set) -> updateIndexForRawContacts
com.android.providers.contacts.SearchIndexManager$ContactIndexQuery -> com.android.providers.contacts.SearchIndexManager$ContactIndexQuery:
    62:62:void <clinit>() -> <clinit>
com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder -> com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder:
    457:463:void <clinit>() -> <clinit>
    453:453:void <init>() -> <init>
    474:474:com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder getDigitsQueryBuilder(java.lang.String) -> getDigitsQueryBuilder
com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder$1 -> com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder$1:
    474:474:void <init>(java.lang.String) -> <init>
    477:490:void addToken(java.lang.StringBuilder,java.lang.String) -> addToken
com.android.providers.contacts.SearchIndexManager$IndexBuilder -> com.android.providers.contacts.SearchIndexManager$IndexBuilder:
    73:84:void <init>() -> <init>
    147:147:void appendContent(java.lang.String) -> appendContent
    151:178:void appendContent(java.lang.String,int) -> appendContent
    139:139:void appendContentFromColumn(java.lang.String) -> appendContentFromColumn
    143:143:void appendContentFromColumn(java.lang.String,int) -> appendContentFromColumn
    199:226:void appendName(java.lang.String) -> appendName
    195:195:void appendNameFromColumn(java.lang.String) -> appendNameFromColumn
    236:239:void appendNameInternal(java.lang.String) -> appendNameInternal
    184:191:void appendToken(java.lang.String) -> appendToken
    125:134:void commit() -> commit
    100:100:java.lang.String getContent() -> getContent
    116:116:int getInt(java.lang.String) -> getInt
    104:104:java.lang.String getName() -> getName
    112:112:java.lang.String getString(java.lang.String) -> getString
    108:108:java.lang.String getTokens() -> getTokens
    92:96:void reset() -> reset
    88:88:void setCursor(android.database.Cursor) -> setCursor
    121:121:java.lang.String toString() -> toString
com.android.providers.contacts.SearchIndexManager$ScopedNameNormalizingBuilder -> com.android.providers.contacts.SearchIndexManager$ScopedNameNormalizingBuilder:
    508:508:void <init>() -> <init>
    508:508:void <init>(com.android.providers.contacts.SearchIndexManager$1) -> <init>
    511:526:void addToken(java.lang.StringBuilder,java.lang.String) -> addToken
com.android.providers.contacts.SearchIndexManager$UnscopedNormalizingBuilder -> com.android.providers.contacts.SearchIndexManager$UnscopedNormalizingBuilder:
    496:496:void <init>() -> <init>
    496:496:void <init>(com.android.providers.contacts.SearchIndexManager$1) -> <init>
    499:504:void addToken(java.lang.StringBuilder,java.lang.String) -> addToken
com.android.providers.contacts.ShadowCallLogProvider -> com.android.providers.contacts.ShadowCallLogProvider:
    21:21:void <init>() -> <init>
    23:23:com.android.providers.contacts.CallLogDatabaseHelper getDatabaseHelper(android.content.Context) -> getDatabaseHelper
com.android.providers.contacts.TransactionContext -> com.android.providers.contacts.TransactionContext:
    49:50:void <init>(boolean) -> <init>
    162:163:void clearAll() -> clearAll
    148:153:void clearExceptSearchIndexUpdates() -> clearExceptSearchIndexUpdates
    157:158:void clearSearchIndexUpdates() -> clearSearchIndexUpdates
    138:139:java.lang.Long getAccountIdOrNullForRawContact(long) -> getAccountIdOrNullForRawContact
    118:119:java.util.Set getChangedRawContactIds() -> getChangedRawContactIds
    113:114:java.util.Set getDirtyRawContactIds() -> getDirtyRawContactIds
    103:104:java.util.Set getInsertedRawContactIds() -> getInsertedRawContactIds
    128:129:java.util.Set getStaleSearchIndexContactIds() -> getStaleSearchIndexContactIds
    123:124:java.util.Set getStaleSearchIndexRawContactIds() -> getStaleSearchIndexRawContactIds
    108:109:java.util.Set getUpdatedRawContactIds() -> getUpdatedRawContactIds
    133:134:java.util.Set getUpdatedSyncStates() -> getUpdatedSyncStates
    98:99:void invalidateSearchIndexForContact(long) -> invalidateSearchIndexForContact
    93:94:void invalidateSearchIndexForRawContact(long) -> invalidateSearchIndexForRawContact
    143:144:boolean isNewRawContact(long) -> isNewRawContact
    81:84:void markRawContactChangedOrDeletedOrInserted(long) -> markRawContactChangedOrDeletedOrInserted
    71:77:void markRawContactDirtyAndChanged(long,boolean) -> markRawContactDirtyAndChanged
    58:61:void rawContactInserted(long,long) -> rawContactInserted
    65:66:void rawContactUpdated(long) -> rawContactUpdated
    88:89:void syncStateUpdated(long,java.lang.Object) -> syncStateUpdated
com.android.providers.contacts.VoicemailContentProvider -> com.android.providers.contacts.VoicemailContentProvider:
    67:67:void <clinit>() -> <clinit>
    63:63:void <init>() -> <init>
    192:193:int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    368:378:void checkAndAddSourcePackageIntoValues(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues) -> checkAndAddSourcePackageIntoValues
    473:483:void checkPackagePermission(com.android.providers.contacts.VoicemailContentProvider$UriData) -> checkPackagePermission
    455:460:void checkPackagesMatch(java.lang.String,java.lang.String,android.net.Uri) -> checkPackagesMatch
    428:431:com.android.providers.contacts.VoicemailContentProvider$UriData checkPermissionsAndCreateUriData(android.net.Uri,boolean) -> checkPermissionsAndCreateUriData
    411:420:com.android.providers.contacts.VoicemailContentProvider$UriData checkPermissionsAndCreateUriDataForRead(android.net.Uri) -> checkPermissionsAndCreateUriDataForRead
    442:444:com.android.providers.contacts.VoicemailContentProvider$UriData checkPermissionsAndCreateUriDataForWrite(android.net.Uri,android.content.ContentValues[]) -> checkPermissionsAndCreateUriDataForWrite
    387:392:void checkSourcePackageSameIfSet(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues) -> checkSourcePackageSameIfSet
    164:164:android.content.Context context() -> context
    154:154:com.android.providers.contacts.CallLogInsertionHelper createCallLogInsertionHelper(android.content.Context) -> createCallLogInsertionHelper
    231:241:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    126:129:int enforceReadPermissionInner(android.net.Uri,android.content.AttributionSource) -> enforceReadPermissionInner
    136:139:int enforceWritePermissionInner(android.net.Uri,android.content.AttributionSource) -> enforceWritePermissionInner
    159:159:com.android.providers.contacts.CallLogDatabaseHelper getDatabaseHelper(android.content.Context) -> getDatabaseHelper
    489:489:java.lang.String getInjectedCallingPackage() -> getInjectedCallingPackage
    497:500:java.lang.String getPackageRestrictionClause(boolean) -> getPackageRestrictionClause
    270:280:com.android.providers.contacts.VoicemailTable$Delegate getTableDelegate(com.android.providers.contacts.VoicemailContentProvider$UriData) -> getTableDelegate
    171:176:java.lang.String getType(android.net.Uri) -> getType
    513:514:boolean hasReadWritePermission(boolean) -> hasReadWritePermission
    181:187:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    79:117:boolean onCreate() -> onCreate
    401:401:android.os.ParcelFileDescriptor openDataFile(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String) -> openDataFile
    249:265:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    527:527:void performBackgroundTask(int,java.lang.Object) -> performBackgroundTask
    199:209:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    519:520:void removeBySourcePackage(java.lang.String) -> removeBySourcePackage
    536:559:void removeStalePackages() -> removeStalePackages
    144:144:void scheduleScanStalePackages() -> scheduleScanStalePackages
    149:149:void scheduleTask(int,java.lang.Object) -> scheduleTask
    215:225:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.android.providers.contacts.VoicemailContentProvider$1 -> com.android.providers.contacts.VoicemailContentProvider$1:
    105:105:void <init>(com.android.providers.contacts.VoicemailContentProvider,java.lang.String) -> <init>
    108:108:void onPerformTask(int,java.lang.Object) -> onPerformTask
com.android.providers.contacts.VoicemailContentProvider$2 -> com.android.providers.contacts.VoicemailContentProvider$2:
    270:270:void <clinit>() -> <clinit>
com.android.providers.contacts.VoicemailContentProvider$UriData -> com.android.providers.contacts.VoicemailContentProvider$UriData:
    293:297:void <init>(android.net.Uri,com.android.providers.contacts.VoicemailUriType,java.lang.String,java.lang.String) -> <init>
    340:354:com.android.providers.contacts.VoicemailContentProvider$UriData createUriData(android.net.Uri) -> createUriData
    359:360:com.android.providers.contacts.util.TypedUriMatcherImpl createUriMatcher() -> createUriMatcher
    312:312:java.lang.String getId() -> getId
    322:322:java.lang.String getSourcePackage() -> getSourcePackage
    302:302:android.net.Uri getUri() -> getUri
    327:327:com.android.providers.contacts.VoicemailUriType getUriType() -> getUriType
    332:335:java.lang.String getWhereClause() -> getWhereClause
    307:307:boolean hasId() -> hasId
    317:317:boolean hasSourcePackage() -> hasSourcePackage
com.android.providers.contacts.VoicemailContentTable -> com.android.providers.contacts.VoicemailContentTable:
    59:86:void <clinit>() -> <clinit>
    98:130:void <init>(java.lang.String,android.content.Context,com.android.providers.contacts.CallLogDatabaseHelper,com.android.providers.contacts.VoicemailTable$DelegateHelper,com.android.providers.contacts.CallLogInsertionHelper) -> <init>
    153:165:int bulkInsert(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues[]) -> bulkInsert
    203:206:void checkInsertSupported(com.android.providers.contacts.VoicemailContentProvider$UriData) -> checkInsertSupported
    299:301:void checkUpdateSupported(com.android.providers.contacts.VoicemailContentProvider$UriData) -> checkUpdateSupported
    331:331:com.android.providers.contacts.DatabaseModifier createDatabaseModifier(android.database.sqlite.SQLiteDatabase) -> createDatabaseModifier
    140:141:java.lang.String createDisplayName(android.content.Context) -> createDisplayName
    232:260:int delete(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String,java.lang.String[]) -> delete
    213:218:java.lang.String generateDataFile() -> generateDataFile
    327:327:java.lang.String getCallTypeClause() -> getCallTypeClause
    322:322:android.util.ArraySet getSourcePackages() -> getSourcePackages
    307:307:java.lang.String getType(com.android.providers.contacts.VoicemailContentProvider$UriData) -> getType
    146:147:android.net.Uri insert(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues) -> insert
    170:196:android.net.Uri insertRow(com.android.providers.contacts.DatabaseModifier,com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues) -> insertRow
    317:317:android.os.ParcelFileDescriptor openFile(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String) -> openFile
    267:277:android.database.Cursor query(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    286:294:int update(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    222:227:void updateVoicemailUri(android.database.sqlite.SQLiteDatabase,android.net.Uri) -> updateVoicemailUri
com.android.providers.contacts.VoicemailNotifier -> com.android.providers.contacts.VoicemailNotifier:
    29:49:void <init>(android.content.Context,android.net.Uri) -> <init>
    53:53:void addIntentActions(java.lang.String) -> addIntentActions
    57:57:void addModifiedPackages(java.util.Collection) -> addModifiedPackages
    61:61:void addUri(android.net.Uri) -> addUri
    135:141:java.util.List getBroadcastReceiverComponents(java.lang.String,android.net.Uri) -> getBroadcastReceiverComponents
    124:128:java.util.Collection getCallingPackages() -> getCallingPackages
    65:116:void sendNotification() -> sendNotification
com.android.providers.contacts.VoicemailPermissions -> com.android.providers.contacts.VoicemailPermissions:
    35:36:void <init>(android.content.Context) -> <init>
    135:139:boolean callerHasCarrierPrivileges() -> callerHasCarrierPrivileges
    41:42:boolean callerHasOwnVoicemailAccess() -> callerHasOwnVoicemailAccess
    130:130:boolean callerHasPermission(java.lang.String) -> callerHasPermission
    58:61:boolean callerHasReadAccess(java.lang.String) -> callerHasReadAccess
    67:70:boolean callerHasWriteAccess(java.lang.String) -> callerHasWriteAccess
    79:80:void checkCallerHasOwnVoicemailAccess() -> checkCallerHasOwnVoicemailAccess
    91:92:void checkCallerHasReadAccess(java.lang.String) -> checkCallerHasReadAccess
    99:100:void checkCallerHasWriteAccess(java.lang.String) -> checkCallerHasWriteAccess
    48:53:boolean isDefaultOrSystemDialer(java.lang.String) -> isDefaultOrSystemDialer
    148:150:boolean packageHasCarrierPrivileges(java.lang.String) -> packageHasCarrierPrivileges
    154:160:boolean packageHasCarrierPrivileges(android.telephony.TelephonyManager,java.lang.String) -> packageHasCarrierPrivileges
    108:110:boolean packageHasOwnVoicemailAccess(java.lang.String) -> packageHasOwnVoicemailAccess
    125:125:boolean packageHasPermission(java.lang.String,java.lang.String) -> packageHasPermission
    115:115:boolean packageHasReadAccess(java.lang.String) -> packageHasReadAccess
com.android.providers.contacts.VoicemailStatusTable -> com.android.providers.contacts.VoicemailStatusTable:
    43:58:void <clinit>() -> <clinit>
    66:70:void <init>(java.lang.String,android.content.Context,com.android.providers.contacts.CallLogDatabaseHelper,com.android.providers.contacts.VoicemailTable$DelegateHelper) -> <init>
    103:104:int bulkInsert(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues[]) -> bulkInsert
    168:168:com.android.providers.contacts.DatabaseModifier createDatabaseModifier(android.database.sqlite.SQLiteDatabase) -> createDatabaseModifier
    114:119:int delete(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String,java.lang.String[]) -> delete
    173:173:android.util.ArraySet getSourcePackages() -> getSourcePackages
    155:155:java.lang.String getType(com.android.providers.contacts.VoicemailContentProvider$UriData) -> getType
    75:97:android.net.Uri insert(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues) -> insert
    164:164:android.os.ParcelFileDescriptor openFile(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String) -> openFile
    125:139:android.database.Cursor query(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    145:150:int update(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.android.providers.contacts.VoicemailUriType -> com.android.providers.contacts.VoicemailUriType:
    23:28:void <clinit>() -> <clinit>
    32:33:void <init>(java.lang.String,int,java.lang.String) -> <init>
    38:38:java.lang.String path() -> path
    23:23:com.android.providers.contacts.VoicemailUriType valueOf(java.lang.String) -> valueOf
    23:23:com.android.providers.contacts.VoicemailUriType[] values() -> values
com.android.providers.contacts.aggregation.AbstractContactAggregator -> com.android.providers.contacts.aggregation.AbstractContactAggregator:
    90:133:void <clinit>() -> <clinit>
    151:955:void <init>(com.android.providers.contacts.ContactsProvider2,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.PhotoPriorityResolver,com.android.providers.contacts.NameSplitter,com.android.providers.contacts.aggregation.util.CommonNicknameCache) -> <init>
    674:695:void aggregateContact(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long) -> aggregateContact
    429:497:void aggregateInTransaction(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase) -> aggregateInTransaction
    1560:1560:void appendLookupKey(java.lang.StringBuilder,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String) -> appendLookupKey
    767:777:java.lang.String buildEmailMatchingSql(java.lang.String,java.lang.String,boolean) -> buildEmailMatchingSql
    806:806:java.lang.String buildExceptionMatchingSql(java.lang.String,java.lang.String) -> buildExceptionMatchingSql
    749:762:java.lang.String buildIdentityMatchingSql(java.lang.String,java.lang.String,boolean,boolean) -> buildIdentityMatchingSql
    784:801:java.lang.String buildPhoneMatchingSql(java.lang.String,java.lang.String,boolean) -> buildPhoneMatchingSql
    536:536:void clearPendingAggregations() -> clearPendingAggregations
    1380:1381:void computeAggregateData(android.database.sqlite.SQLiteDatabase,long,android.database.sqlite.SQLiteStatement) -> computeAggregateData
    1413:1551:void computeAggregateData(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],android.database.sqlite.SQLiteStatement) -> computeAggregateData
    1897:1913:java.lang.String computeLookupKeyForContact(android.database.sqlite.SQLiteDatabase,long) -> computeLookupKeyForContact
    870:886:void createContactForRawContacts(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,java.util.Set,java.lang.Long) -> createContactForRawContacts
    827:838:java.util.Set findConnectedRawContacts(android.database.sqlite.SQLiteDatabase,java.util.Set) -> findConnectedRawContacts
    848:861:void findIdPairs(android.database.sqlite.SQLiteDatabase,java.lang.String,com.google.common.collect.Multimap) -> findIdPairs
    1730:1746:com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoEntry getPhotoMetadata(android.database.sqlite.SQLiteDatabase,long) -> getPhotoMetadata
    1390:1390:boolean hasHigherPhotoPriority(com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoEntry,int,com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoEntry,int) -> hasHigherPhotoPriority
    652:654:long insertContact(android.database.sqlite.SQLiteDatabase,long) -> insertContact
    959:959:void invalidateAggregationExceptionCache() -> invalidateAggregationExceptionCache
    408:408:boolean isEnabled() -> isEnabled
    817:817:boolean isFirstColumnGreaterThanZero(android.database.sqlite.SQLiteDatabase,java.lang.String) -> isFirstColumnGreaterThanZero
    1006:1021:void loadNameMatchCandidates(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,boolean) -> loadNameMatchCandidates
    912:915:void markAggregated(android.database.sqlite.SQLiteDatabase,java.lang.String) -> markAggregated
    605:633:int markAllVisibleForAggregation(android.database.sqlite.SQLiteDatabase) -> markAllVisibleForAggregation
    577:594:void markContactForAggregation(android.database.sqlite.SQLiteDatabase,long) -> markContactForAggregation
    545:559:void markForAggregation(long,int,boolean) -> markForAggregation
    540:540:void markNewForAggregation(long,int) -> markNewForAggregation
    645:647:long onRawContactInsert(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long) -> onRawContactInsert
    969:985:void prefetchAggregationExceptionIds(android.database.sqlite.SQLiteDatabase) -> prefetchAggregationExceptionIds
    1573:1603:void processDisplayNameCandidate(long,java.lang.String,int,boolean,boolean) -> processDisplayNameCandidate
    1963:1980:android.database.Cursor queryAggregationSuggestions(android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],long,int,java.lang.String,java.util.ArrayList) -> queryAggregationSuggestions
    1997:2074:android.database.Cursor queryMatchingContacts(android.database.sqlite.SQLiteQueryBuilder,android.database.sqlite.SQLiteDatabase,java.lang.String[],java.util.List,int,java.lang.String) -> queryMatchingContacts
    901:903:void setContactId(long,long) -> setContactId
    924:928:void setContactIdAndMarkAggregated(long,long) -> setContactIdAndMarkAggregated
    404:404:void setEnabled(boolean) -> setEnabled
    932:934:void setPresenceContactId(long,long) -> setPresenceContactId
    503:527:void triggerAggregation(com.android.providers.contacts.TransactionContext,long) -> triggerAggregation
    700:710:void updateAggregateData(com.android.providers.contacts.TransactionContext,long) -> updateAggregateData
    714:717:void updateAggregatedStatusUpdate(long) -> updateAggregatedStatusUpdate
    1789:1821:void updateDisplayNameForContact(android.database.sqlite.SQLiteDatabase,long) -> updateDisplayNameForContact
    1778:1783:void updateDisplayNameForRawContact(android.database.sqlite.SQLiteDatabase,long) -> updateDisplayNameForRawContact
    1832:1853:void updateHasPhoneNumber(android.database.sqlite.SQLiteDatabase,long) -> updateHasPhoneNumber
    724:725:void updateLastStatusUpdateId(long) -> updateLastStatusUpdateId
    1883:1892:void updateLookupKeyForContact(android.database.sqlite.SQLiteDatabase,long) -> updateLookupKeyForContact
    1874:1879:void updateLookupKeyForRawContact(android.database.sqlite.SQLiteDatabase,long) -> updateLookupKeyForRawContact
    1126:1151:void updateMatchScoresBasedOnNameMatches(android.database.sqlite.SQLiteDatabase,java.lang.String,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.ContactMatcher) -> updateMatchScoresBasedOnNameMatches
    1623:1686:void updatePhotoId(android.database.sqlite.SQLiteDatabase,long) -> updatePhotoId
    1949:1954:void updatePinned(long) -> updatePinned
    1935:1941:void updateSendToVoicemail(long) -> updateSendToVoicemail
    1921:1927:void updateStarred(long) -> updateStarred
com.android.providers.contacts.aggregation.AbstractContactAggregator$AggregateExceptionPrefetchQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$AggregateExceptionPrefetchQuery:
    945:945:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$AggregateExceptionQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$AggregateExceptionQuery:
    1031:1031:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$AggregationSuggestionParameter -> com.android.providers.contacts.aggregation.AbstractContactAggregator$AggregationSuggestionParameter:
    196:198:void <init>(java.lang.String,java.lang.String) -> <init>
com.android.providers.contacts.aggregation.AbstractContactAggregator$ContactIdQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$ContactIdQuery:
    1984:1984:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$DisplayNameCandidate -> com.android.providers.contacts.aggregation.AbstractContactAggregator$DisplayNameCandidate:
    259:260:void <init>() -> <init>
    264:268:void clear() -> clear
com.android.providers.contacts.aggregation.AbstractContactAggregator$EmailLookupQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$EmailLookupQuery:
    1169:1169:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$LookupKeyQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$LookupKeyQuery:
    1858:1858:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList -> com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList:
    221:222:void <init>() -> <init>
    229:236:void add(java.lang.String,int) -> add
    240:240:void clear() -> clear
    244:244:boolean isEmpty() -> isEmpty
com.android.providers.contacts.aggregation.AbstractContactAggregator$NameLookupMatchQueryWithParameter -> com.android.providers.contacts.aggregation.AbstractContactAggregator$NameLookupMatchQueryWithParameter:
    1060:1060:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$NameLookupQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$NameLookupQuery:
    995:995:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$NameLookupSelectionBuilder -> com.android.providers.contacts.aggregation.AbstractContactAggregator$NameLookupSelectionBuilder:
    1079:1085:void <init>(com.android.providers.contacts.aggregation.AbstractContactAggregator,com.android.providers.contacts.NameSplitter,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList) -> <init>
    1090:1090:java.lang.String[] getCommonNicknameClusters(java.lang.String) -> getCommonNicknameClusters
    1112:1117:int getLookupType(java.lang.String) -> getLookupType
    1106:1108:java.lang.String getSelection() -> getSelection
    1096:1098:void insertNameLookup(long,long,int,java.lang.String) -> insertNameLookup
    1102:1102:boolean isEmpty() -> isEmpty
com.android.providers.contacts.aggregation.AbstractContactAggregator$NameMatchCandidate -> com.android.providers.contacts.aggregation.AbstractContactAggregator$NameMatchCandidate:
    211:213:void <init>(java.lang.String,int) -> <init>
com.android.providers.contacts.aggregation.AbstractContactAggregator$PhoneLookupQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$PhoneLookupQuery:
    1205:1205:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoEntry -> com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoEntry:
    1701:1701:void <init>(com.android.providers.contacts.aggregation.AbstractContactAggregator,int,int,com.android.providers.contacts.aggregation.AbstractContactAggregator$1) -> <init>
    1708:1710:void <init>(com.android.providers.contacts.aggregation.AbstractContactAggregator,int,int) -> <init>
    1701:1701:int compareTo(java.lang.Object) -> compareTo
    1718:1719:int compareTo(com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoEntry) -> compareTo
com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoFileQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoFileQuery:
    1690:1690:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoIdQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$PhotoIdQuery:
    1608:1608:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$RawContactIdAndAccountQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$RawContactIdAndAccountQuery:
    660:660:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$RawContactIdAndAggregationModeQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$RawContactIdAndAggregationModeQuery:
    565:565:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.AbstractContactAggregator$RawContactIdQuery -> com.android.providers.contacts.aggregation.AbstractContactAggregator$RawContactIdQuery:
    891:891:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator -> com.android.providers.contacts.aggregation.ContactAggregator:
    62:71:void <init>(com.android.providers.contacts.ContactsProvider2,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.PhotoPriorityResolver,com.android.providers.contacts.NameSplitter,com.android.providers.contacts.aggregation.util.CommonNicknameCache) -> <init>
    83:242:void aggregateContact(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long,long,long,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList) -> aggregateContact
    318:359:int canJoinIntoContact(android.database.sqlite.SQLiteDatabase,long,java.util.Set,java.util.Set) -> canJoinIntoContact
    249:296:void clearSuperPrimarySetting(android.database.sqlite.SQLiteDatabase,long,long) -> clearSuperPrimarySetting
    911:934:java.util.List findMatchingContacts(android.database.sqlite.SQLiteDatabase,long,java.util.ArrayList) -> findMatchingContacts
    372:399:boolean isDataMaching(android.database.sqlite.SQLiteDatabase,java.util.Set,java.util.Set) -> isDataMaching
    838:854:void lookupApproximateNameMatches(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.ContactMatcher) -> lookupApproximateNameMatches
    880:900:void matchAllCandidates(android.database.sqlite.SQLiteDatabase,java.lang.String,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.ContactMatcher,int,java.lang.String) -> matchAllCandidates
    617:623:long pickBestMatchBasedOnData(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.ContactMatcher) -> pickBestMatchBasedOnData
    552:596:long pickBestMatchBasedOnExceptions(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.ContactMatcher) -> pickBestMatchBasedOnExceptions
    640:664:long pickBestMatchBasedOnSecondaryData(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.ContactMatcher) -> pickBestMatchBasedOnSecondaryData
    422:452:void reAggregateRawContacts(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long,long,long,java.util.Set) -> reAggregateRawContacts
    517:519:void setContactIdAndMarkAggregated(long,long) -> setContactIdAndMarkAggregated
    475:509:void updateAggregationAfterVisibilityChange(long) -> updateAggregationAfterVisibilityChange
    673:681:long updateMatchScoresBasedOnDataMatches(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.ContactMatcher) -> updateMatchScoresBasedOnDataMatches
    786:798:void updateMatchScoresBasedOnEmailMatches(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.ContactMatcher) -> updateMatchScoresBasedOnEmailMatches
    715:727:void updateMatchScoresBasedOnIdentityMatch(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.ContactMatcher) -> updateMatchScoresBasedOnIdentityMatch
    762:781:void updateMatchScoresBasedOnNameMatches(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.ContactMatcher) -> updateMatchScoresBasedOnNameMatches
    804:829:void updateMatchScoresBasedOnPhoneMatches(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.ContactMatcher) -> updateMatchScoresBasedOnPhoneMatches
    943:948:void updateMatchScoresForSuggestionsBasedOnDataMatches(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.ContactMatcher) -> updateMatchScoresForSuggestionsBasedOnDataMatches
    954:956:void updateMatchScoresForSuggestionsBasedOnDataMatches(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.ContactMatcher,java.util.ArrayList) -> updateMatchScoresForSuggestionsBasedOnDataMatches
com.android.providers.contacts.aggregation.ContactAggregator$AggregateExceptionQuery -> com.android.providers.contacts.aggregation.ContactAggregator$AggregateExceptionQuery:
    529:529:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator$ContactNameLookupQuery -> com.android.providers.contacts.aggregation.ContactAggregator$ContactNameLookupQuery:
    863:863:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator$IdentityLookupMatchQuery -> com.android.providers.contacts.aggregation.ContactAggregator$IdentityLookupMatchQuery:
    703:703:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator$NameLookupMatchQuery -> com.android.providers.contacts.aggregation.ContactAggregator$NameLookupMatchQuery:
    744:744:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator2 -> com.android.providers.contacts.aggregation.ContactAggregator2:
    74:83:void <init>(com.android.providers.contacts.ContactsProvider2,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.PhotoPriorityResolver,com.android.providers.contacts.NameSplitter,com.android.providers.contacts.aggregation.util.CommonNicknameCache) -> <init>
    95:189:void aggregateContact(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long,long,long,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList) -> aggregateContact
    425:438:void breakComponentsByExceptions(android.database.sqlite.SQLiteDatabase,java.util.Set) -> breakComponentsByExceptions
    293:300:java.lang.String buildExceptionMatchingSql(java.lang.String,java.lang.String,int,boolean) -> buildExceptionMatchingSql
    404:415:boolean canBeReused(android.database.sqlite.SQLiteDatabase,java.lang.Long,java.util.Set) -> canBeReused
    248:286:void clearSuperPrimarySetting(android.database.sqlite.SQLiteDatabase,java.lang.String) -> clearSuperPrimarySetting
    824:847:java.util.List findMatchingContacts(android.database.sqlite.SQLiteDatabase,long,java.util.ArrayList) -> findMatchingContacts
    212:237:com.android.providers.contacts.aggregation.util.RawContactMatchingCandidates findRawContactMatchingCandidates(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> findRawContactMatchingCandidates
    708:724:void lookupApproximateNameMatches(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> lookupApproximateNameMatches
    754:776:void matchAllCandidates(android.database.sqlite.SQLiteDatabase,java.lang.String,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.RawContactMatcher,int,java.lang.String) -> matchAllCandidates
    196:203:boolean needAggregate(android.database.sqlite.SQLiteDatabase,long) -> needAggregate
    900:910:boolean rawContactWithoutName(android.database.sqlite.SQLiteDatabase,long) -> rawContactWithoutName
    318:388:void reAggregateRawContacts(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long,long,long,long,com.android.providers.contacts.aggregation.util.RawContactMatchingCandidates) -> reAggregateRawContacts
    460:494:void updateAggregationAfterVisibilityChange(long) -> updateAggregationAfterVisibilityChange
    872:882:void updateMatchScores(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> updateMatchScores
    611:628:void updateMatchScoresBasedOnEmailMatches(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> updateMatchScoresBasedOnEmailMatches
    503:549:void updateMatchScoresBasedOnExceptions(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> updateMatchScoresBasedOnExceptions
    557:574:void updateMatchScoresBasedOnIdentityMatch(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> updateMatchScoresBasedOnIdentityMatch
    582:606:void updateMatchScoresBasedOnNameMatches(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> updateMatchScoresBasedOnNameMatches
    636:663:void updateMatchScoresBasedOnNameMatches(android.database.sqlite.SQLiteDatabase,java.lang.String,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> updateMatchScoresBasedOnNameMatches
    669:699:void updateMatchScoresBasedOnPhoneMatches(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> updateMatchScoresBasedOnPhoneMatches
    858:863:void updateMatchScoresForSuggestionsBasedOnDataMatches(android.database.sqlite.SQLiteDatabase,long,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> updateMatchScoresForSuggestionsBasedOnDataMatches
    890:892:void updateMatchScoresForSuggestionsBasedOnDataMatches(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.aggregation.AbstractContactAggregator$MatchCandidateList,com.android.providers.contacts.aggregation.util.RawContactMatcher,java.util.ArrayList) -> updateMatchScoresForSuggestionsBasedOnDataMatches
    920:945:void updateScoreForCandidatesWithoutName(android.database.sqlite.SQLiteDatabase,java.util.List,com.android.providers.contacts.aggregation.util.RawContactMatcher) -> updateScoreForCandidatesWithoutName
com.android.providers.contacts.aggregation.ContactAggregator2$ContactNameLookupQuery -> com.android.providers.contacts.aggregation.ContactAggregator2$ContactNameLookupQuery:
    733:733:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator2$EmailLookupQuery -> com.android.providers.contacts.aggregation.ContactAggregator2$EmailLookupQuery:
    1017:1017:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator2$IdentityLookupMatchQuery -> com.android.providers.contacts.aggregation.ContactAggregator2$IdentityLookupMatchQuery:
    964:964:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator2$NameLookupMatchQuery -> com.android.providers.contacts.aggregation.ContactAggregator2$NameLookupMatchQuery:
    986:986:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator2$NullNameRawContactsIdsQuery -> com.android.providers.contacts.aggregation.ContactAggregator2$NullNameRawContactsIdsQuery:
    1067:1067:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ContactAggregator2$PhoneLookupQuery -> com.android.providers.contacts.aggregation.ContactAggregator2$PhoneLookupQuery:
    1051:1051:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.ProfileAggregator -> com.android.providers.contacts.aggregation.ProfileAggregator:
    43:43:void <init>(com.android.providers.contacts.ContactsProvider2,com.android.providers.contacts.ContactsDatabaseHelper,com.android.providers.contacts.PhotoPriorityResolver,com.android.providers.contacts.NameSplitter,com.android.providers.contacts.aggregation.util.CommonNicknameCache) -> <init>
    79:93:void aggregateContact(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long) -> aggregateContact
    57:58:void appendLookupKey(java.lang.StringBuilder,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String) -> appendLookupKey
    64:65:long onRawContactInsert(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long) -> onRawContactInsert
com.android.providers.contacts.aggregation.util.CommonNicknameCache -> com.android.providers.contacts.aggregation.util.CommonNicknameCache:
    39:45:void <init>(android.database.sqlite.SQLiteDatabase) -> <init>
    92:121:java.lang.String[] getCommonNicknameClusters(java.lang.String) -> getCommonNicknameClusters
    138:152:java.lang.String[] loadNicknameClusters(java.lang.String) -> loadNicknameClusters
    71:85:void preloadNicknameBloomFilter() -> preloadNicknameBloomFilter
com.android.providers.contacts.aggregation.util.CommonNicknameCache$NicknameLookupPreloadQuery -> com.android.providers.contacts.aggregation.util.CommonNicknameCache$NicknameLookupPreloadQuery:
    51:51:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.util.CommonNicknameCache$NicknameLookupQuery -> com.android.providers.contacts.aggregation.util.CommonNicknameCache$NicknameLookupQuery:
    129:129:void <clinit>() -> <clinit>
com.android.providers.contacts.aggregation.util.ContactAggregatorHelper -> com.android.providers.contacts.aggregation.util.ContactAggregatorHelper:
    111:115:void findConnectedComponentForRawContact(com.google.common.collect.Multimap,java.util.Set,java.lang.Long,java.util.Set) -> findConnectedComponentForRawContact
    97:103:java.util.Set findConnectedComponents(java.util.Set,com.google.common.collect.Multimap) -> findConnectedComponents
    44:87:void mergeComponentsWithDisjointAccounts(java.util.Set,java.util.Map) -> mergeComponentsWithDisjointAccounts
com.android.providers.contacts.aggregation.util.ContactMatcher -> com.android.providers.contacts.aggregation.util.ContactMatcher:
    87:124:void <clinit>() -> <clinit>
    31:161:void <init>() -> <init>
    273:274:void clear() -> clear
    164:174:com.android.providers.contacts.aggregation.util.MatchScore getMatchingScore(long) -> getMatchingScore
    153:153:int getMaxScore(int,int) -> getMaxScore
    144:144:int getMinScore(int,int) -> getMinScore
    265:265:void keepIn(long) -> keepIn
    269:269:void keepOut(long) -> keepOut
    183:183:void matchIdentity(long) -> matchIdentity
    195:241:void matchName(long,int,java.lang.String,int,java.lang.String,int) -> matchName
    314:336:long pickBestMatch(int,boolean) -> pickBestMatch
    349:361:java.util.List pickBestMatches(int) -> pickBestMatches
    287:300:java.util.List prepareSecondaryMatchCandidates(int) -> prepareSecondaryMatchCandidates
    134:135:void setScoreRange(int,int,int,int) -> setScoreRange
    366:366:java.lang.String toString() -> toString
    257:257:void updatePrimaryScore(long,int) -> updatePrimaryScore
    249:249:void updateScoreWithEmailMatch(long) -> updateScoreWithEmailMatch
    253:253:void updateScoreWithNicknameMatch(long) -> updateScoreWithNicknameMatch
    245:245:void updateScoreWithPhoneNumberMatch(long) -> updateScoreWithPhoneNumberMatch
    261:261:void updateSecondaryScore(long,int) -> updateSecondaryScore
com.android.providers.contacts.aggregation.util.MatchScore -> com.android.providers.contacts.aggregation.util.MatchScore:
    38:41:void <init>(long,long,long) -> <init>
    44:47:void <init>(long) -> <init>
    21:21:int compareTo(java.lang.Object) -> compareTo
    141:141:int compareTo(com.android.providers.contacts.aggregation.util.MatchScore) -> compareTo
    75:75:long getAccountId() -> getAccountId
    71:71:long getContactId() -> getContactId
    125:125:int getPrimaryScore() -> getPrimaryScore
    67:67:long getRawContactId() -> getRawContactId
    101:113:int getScore() -> getScore
    129:129:int getSecondaryScore() -> getSecondaryScore
    117:117:boolean isKeepIn() -> isKeepIn
    121:121:boolean isKeepOut() -> isKeepOut
    93:93:void keepIn() -> keepIn
    97:97:void keepOut() -> keepOut
    51:58:void reset(long,long,long) -> reset
    62:62:void reset(long) -> reset
    133:133:void setPrimaryScore(int) -> setPrimaryScore
    146:146:java.lang.String toString() -> toString
    79:82:void updatePrimaryScore(int) -> updatePrimaryScore
    86:89:void updateSecondaryScore(int) -> updateSecondaryScore
com.android.providers.contacts.aggregation.util.NameDistance -> com.android.providers.contacts.aggregation.util.NameDistance:
    45:49:void <init>(int) -> <init>
    55:58:void <init>() -> <init>
    67:167:float getDistance(byte[],byte[]) -> getDistance
com.android.providers.contacts.aggregation.util.RawContactMatcher -> com.android.providers.contacts.aggregation.util.RawContactMatcher:
    91:128:void <clinit>() -> <clinit>
    30:166:void <init>() -> <init>
    276:277:void clear() -> clear
    169:179:com.android.providers.contacts.aggregation.util.MatchScore getMatchingScore(long,long,long) -> getMatchingScore
    158:158:int getMaxScore(int,int) -> getMaxScore
    149:149:int getMinScore(int,int) -> getMinScore
    268:268:void keepIn(long,long,long) -> keepIn
    272:272:void keepOut(long,long,long) -> keepOut
    243:243:void matchIdentity(long,long,long) -> matchIdentity
    193:239:void matchName(long,long,long,int,java.lang.String,int,java.lang.String,int) -> matchName
    357:357:void matchNoName(java.lang.Long,java.lang.Long,java.lang.Long) -> matchNoName
    310:325:java.util.List pickBestMatches() -> pickBestMatches
    336:348:java.util.List pickBestMatches(int) -> pickBestMatches
    289:301:java.util.List prepareSecondaryMatchCandidates() -> prepareSecondaryMatchCandidates
    139:140:void setScoreRange(int,int,int,int) -> setScoreRange
    353:353:java.lang.String toString() -> toString
    259:259:void updatePrimaryScore(long,long,long,int) -> updatePrimaryScore
    251:251:void updateScoreWithEmailMatch(long,long,long) -> updateScoreWithEmailMatch
    255:255:void updateScoreWithNicknameMatch(long,long,long) -> updateScoreWithNicknameMatch
    247:247:void updateScoreWithPhoneNumberMatch(long,long,long) -> updateScoreWithPhoneNumberMatch
    264:264:void updateSecondaryScore(long,long,long,int) -> updateSecondaryScore
com.android.providers.contacts.aggregation.util.RawContactMatchingCandidates -> com.android.providers.contacts.aggregation.util.RawContactMatchingCandidates:
    34:40:void <init>(java.util.List) -> <init>
    34:44:void <init>() -> <init>
    52:60:void add(com.android.providers.contacts.aggregation.util.MatchScore) -> add
    109:111:void createRawContactIdSet() -> createRawContactIdSet
    101:104:void createRawContactToAccountMap() -> createRawContactToAccountMap
    93:96:void createRawContactToContactMap() -> createRawContactToContactMap
    79:82:java.lang.Long getContactId(java.lang.Long) -> getContactId
    48:48:int getCount() -> getCount
    65:68:java.util.Set getRawContactIdSet() -> getRawContactIdSet
    72:75:java.util.Map getRawContactToAccount() -> getRawContactToAccount
com.android.providers.contacts.database.ContactsTableUtil -> com.android.providers.contacts.database.ContactsTableUtil:
    93:100:java.lang.String buildUpdateLastUpdateSql(java.util.Set) -> buildUpdateLastUpdateSql
    46:54:void createIndexes(android.database.sqlite.SQLiteDatabase) -> createIndexes
    113:114:int deleteContact(android.database.sqlite.SQLiteDatabase,long) -> deleteContact
    131:144:int deleteContactIfSingleton(android.database.sqlite.SQLiteDatabase,long) -> deleteContactIfSingleton
    59:63:void updateContactLastUpdateByContactId(android.database.sqlite.SQLiteDatabase,long) -> updateContactLastUpdateByContactId
    74:78:void updateContactLastUpdateByRawContactId(android.database.sqlite.SQLiteDatabase,java.util.Set) -> updateContactLastUpdateByRawContactId
com.android.providers.contacts.database.DeletedContactsTableUtil -> com.android.providers.contacts.database.DeletedContactsTableUtil:
    38:44:void create(android.database.sqlite.SQLiteDatabase) -> create
    73:78:int deleteOldLogs(android.database.sqlite.SQLiteDatabase) -> deleteOldLogs
    57:62:long insertDeletedContact(android.database.sqlite.SQLiteDatabase,long) -> insertDeletedContact
com.android.providers.contacts.database.MoreDatabaseUtils -> com.android.providers.contacts.database.MoreDatabaseUtils:
    74:80:java.lang.String buildBindArgString(int) -> buildBindArgString
    37:37:java.lang.String buildCreateIndexSql(java.lang.String,java.lang.String) -> buildCreateIndexSql
    50:50:java.lang.String buildDropIndexSql(java.lang.String,java.lang.String) -> buildDropIndexSql
    59:59:java.lang.String buildIndexName(java.lang.String,java.lang.String) -> buildIndexName
    85:108:void dumpCursor(java.lang.String,java.lang.String,android.database.Cursor) -> dumpCursor
com.android.providers.contacts.debug.ContactsDumpActivity -> com.android.providers.contacts.debug.ContactsDumpActivity:
    40:40:void <init>() -> <init>
    40:40:java.lang.String access$100() -> access$100
    40:40:void access$200(com.android.providers.contacts.debug.ContactsDumpActivity,android.net.Uri) -> access$200
    94:94:void cleanup() -> cleanup
    125:132:void emailFile(android.net.Uri) -> emailFile
    137:139:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    77:88:void onClick(android.view.View) -> onClick
    49:61:void onCreate(android.os.Bundle) -> onCreate
    70:71:void onStart() -> onStart
    65:65:void updateDeleteButton() -> updateDeleteButton
com.android.providers.contacts.debug.ContactsDumpActivity$DumpDbTask -> com.android.providers.contacts.debug.ContactsDumpActivity$DumpDbTask:
    97:97:void <init>(com.android.providers.contacts.debug.ContactsDumpActivity) -> <init>
    97:97:void <init>(com.android.providers.contacts.debug.ContactsDumpActivity,com.android.providers.contacts.debug.ContactsDumpActivity$1) -> <init>
    97:97:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    109:111:android.net.Uri doInBackground(java.lang.Void[]) -> doInBackground
    97:97:void onPostExecute(java.lang.Object) -> onPostExecute
    119:119:void onPostExecute(android.net.Uri) -> onPostExecute
    103:103:void onPreExecute() -> onPreExecute
com.android.providers.contacts.debug.DataExporter -> com.android.providers.contacts.debug.DataExporter:
    142:157:void addDirectory(android.content.Context,java.util.zip.ZipOutputStream,java.io.File,java.lang.String) -> addDirectory
    170:185:void addFile(java.util.zip.ZipOutputStream,java.io.File,java.lang.String) -> addFile
    112:112:boolean dumpFileExists(android.content.Context) -> dumpFileExists
    101:103:void ensureOutputDirectory(android.content.Context) -> ensureOutputDirectory
    85:91:void ensureValidFileName(java.lang.String) -> ensureValidFileName
    55:70:android.net.Uri exportData(android.content.Context) -> exportData
    75:79:java.lang.String generateRandomName() -> generateRandomName
    97:97:java.io.File getOutputDirectory(android.content.Context) -> getOutputDirectory
    108:108:java.io.File getOutputFile(android.content.Context,java.lang.String) -> getOutputFile
    116:116:void removeDumpFiles(android.content.Context) -> removeDumpFiles
    120:133:void removeFileOrDirectory(java.io.File) -> removeFileOrDirectory
com.android.providers.contacts.debug.DumpFileProvider -> com.android.providers.contacts.debug.DumpFileProvider:
    37:37:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    53:53:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    69:70:java.lang.String extractFileName(android.net.Uri) -> extractFileName
    47:47:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    76:83:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    93:120:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    59:59:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.android.providers.contacts.enterprise.EnterpriseContactsCursorWrapper -> com.android.providers.contacts.enterprise.EnterpriseContactsCursorWrapper:
    44:46:void <clinit>() -> <clinit>
    60:65:void <init>(android.database.Cursor,java.lang.String[],int[],java.lang.Long) -> <init>
    70:70:int getColumnCount() -> getColumnCount
    75:75:java.lang.String[] getColumnNames() -> getColumnNames
    195:210:java.lang.String getCorpDisplayPhotoUri(long,android.database.Cursor) -> getCorpDisplayPhotoUri
    169:181:java.lang.String getCorpThumbnailUri(long,android.database.Cursor) -> getCorpThumbnailUri
    123:123:int getInt(int) -> getInt
    128:133:long getLong(int) -> getLong
    150:155:java.lang.String getRemoteDirectoryFileUri(java.lang.String) -> getRemoteDirectoryFileUri
    80:114:java.lang.String getString(int) -> getString
com.android.providers.contacts.enterprise.EnterprisePolicyGuard -> com.android.providers.contacts.enterprise.EnterprisePolicyGuard:
    40:43:void <clinit>() -> <clinit>
    48:50:void <init>(android.content.Context) -> <init>
    207:208:boolean isContactRemoteSearchUserSettingEnabled() -> isContactRemoteSearchUserSettingEnabled
    60:101:boolean isCrossProfileAllowed(android.net.Uri) -> isCrossProfileAllowed
    123:124:boolean isCrossProfileDirectorySupported(android.net.Uri) -> isCrossProfileDirectorySupported
    128:129:boolean isValidEnterpriseUri(android.net.Uri) -> isValidEnterpriseUri
com.android.providers.contacts.sqlite.DatabaseAnalyzer -> com.android.providers.contacts.sqlite.DatabaseAnalyzer:
    37:37:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    60:71:java.util.List findColumns(android.database.sqlite.SQLiteDatabase,java.lang.String) -> findColumns
    82:97:java.util.List findTableViewsAllowingColumns(android.database.sqlite.SQLiteDatabase) -> findTableViewsAllowingColumns
    46:52:java.util.List findTablesAndViews(android.database.sqlite.SQLiteDatabase) -> findTablesAndViews
com.android.providers.contacts.sqlite.SqlChecker -> com.android.providers.contacts.sqlite.SqlChecker:
    38:38:void <clinit>() -> <clinit>
    45:52:void <init>(java.util.List) -> <init>
    97:97:void ensureNoInvalidTokens(java.lang.String) -> ensureNoInvalidTokens
    105:115:void ensureSingleTokenOnly(java.lang.String) -> ensureSingleTokenOnly
    145:250:void findTokens(java.lang.String,int,java.util.function.Consumer) -> findTokens
    83:83:com.android.providers.contacts.sqlite.SqlChecker$InvalidSqlException genException(java.lang.String,java.lang.String) -> genException
    65:65:boolean isAlNum(char) -> isAlNum
    69:69:boolean isAnyOf(char,java.lang.String) -> isAnyOf
    97:97:void lambda$ensureNoInvalidTokens$0(java.lang.String,java.lang.String) -> lambda$ensureNoInvalidTokens$0
    108:112:void lambda$ensureSingleTokenOnly$1(java.util.concurrent.atomic.AtomicBoolean,java.lang.String,java.lang.String) -> lambda$ensureSingleTokenOnly$1
    126:126:char peek(java.lang.String,int) -> peek
    87:89:void throwIfContainsToken(java.lang.String,java.lang.String) -> throwIfContainsToken
com.android.providers.contacts.sqlite.SqlChecker$$ExternalSyntheticLambda0 -> com.android.providers.contacts.sqlite.SqlChecker$$ExternalSyntheticLambda0:
    com.android.providers.contacts.sqlite.SqlChecker com.android.providers.contacts.sqlite.SqlChecker$$InternalSyntheticLambda$0$6fdb005d4ee19956a99e736a7c268f8482fa0e1a320b87c7cf8d36738bc15672$0.f$0 -> f$0
    java.lang.String com.android.providers.contacts.sqlite.SqlChecker$$InternalSyntheticLambda$0$6fdb005d4ee19956a99e736a7c268f8482fa0e1a320b87c7cf8d36738bc15672$0.f$1 -> f$1
    void com.android.providers.contacts.sqlite.SqlChecker$$InternalSyntheticLambda$0$6fdb005d4ee19956a99e736a7c268f8482fa0e1a320b87c7cf8d36738bc15672$0.<init>(com.android.providers.contacts.sqlite.SqlChecker,java.lang.String) -> <init>
    void com.android.providers.contacts.sqlite.SqlChecker$$InternalSyntheticLambda$0$6fdb005d4ee19956a99e736a7c268f8482fa0e1a320b87c7cf8d36738bc15672$0.accept(java.lang.Object) -> accept
com.android.providers.contacts.sqlite.SqlChecker$$ExternalSyntheticLambda1 -> com.android.providers.contacts.sqlite.SqlChecker$$ExternalSyntheticLambda1:
    java.util.concurrent.atomic.AtomicBoolean com.android.providers.contacts.sqlite.SqlChecker$$InternalSyntheticLambda$0$1ff395c6792a21670928fd30bd9386260b6dd5556f0f331e3e5fb5f06253f182$0.f$1 -> f$1
    java.lang.String com.android.providers.contacts.sqlite.SqlChecker$$InternalSyntheticLambda$0$1ff395c6792a21670928fd30bd9386260b6dd5556f0f331e3e5fb5f06253f182$0.f$2 -> f$2
    com.android.providers.contacts.sqlite.SqlChecker com.android.providers.contacts.sqlite.SqlChecker$$InternalSyntheticLambda$0$1ff395c6792a21670928fd30bd9386260b6dd5556f0f331e3e5fb5f06253f182$0.f$0 -> f$0
    void com.android.providers.contacts.sqlite.SqlChecker$$InternalSyntheticLambda$0$1ff395c6792a21670928fd30bd9386260b6dd5556f0f331e3e5fb5f06253f182$0.<init>(com.android.providers.contacts.sqlite.SqlChecker,java.util.concurrent.atomic.AtomicBoolean,java.lang.String) -> <init>
    void com.android.providers.contacts.sqlite.SqlChecker$$InternalSyntheticLambda$0$1ff395c6792a21670928fd30bd9386260b6dd5556f0f331e3e5fb5f06253f182$0.accept(java.lang.Object) -> accept
com.android.providers.contacts.sqlite.SqlChecker$InvalidSqlException -> com.android.providers.contacts.sqlite.SqlChecker$InvalidSqlException:
    78:78:void <init>(java.lang.String) -> <init>
com.android.providers.contacts.util.CappedStringBuilder -> com.android.providers.contacts.util.CappedStringBuilder:
    25:28:void <init>(int) -> <init>
    46:47:com.android.providers.contacts.util.CappedStringBuilder append(char) -> append
    53:54:com.android.providers.contacts.util.CappedStringBuilder append(java.lang.String) -> append
    60:64:boolean canAppend(int) -> canAppend
    32:33:void clear() -> clear
    37:37:int length() -> length
    42:42:java.lang.String toString() -> toString
com.android.providers.contacts.util.Clock -> com.android.providers.contacts.util.Clock:
    20:22:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    39:39:long currentTimeMillis() -> currentTimeMillis
    25:25:com.android.providers.contacts.util.Clock getInstance() -> getInstance
    30:30:void injectInstance(com.android.providers.contacts.util.Clock) -> injectInstance
    35:35:void resetInstance() -> resetInstance
com.android.providers.contacts.util.CloseUtils -> com.android.providers.contacts.util.CloseUtils:
    30:30:void closeQuietly(android.database.Cursor) -> closeQuietly
com.android.providers.contacts.util.ContactsPermissions -> com.android.providers.contacts.util.ContactsPermissions:
    58:60:void enforceCallingOrSelfPermission(android.content.Context,java.lang.String) -> enforceCallingOrSelfPermission
    41:44:boolean hasCallerOrSelfPermission(android.content.Context,java.lang.String) -> hasCallerOrSelfPermission
    85:88:boolean hasCallerUriPermission(android.content.Context,android.net.Uri,int) -> hasCallerUriPermission
    67:70:boolean hasPackagePermission(android.content.Context,java.lang.String,java.lang.String) -> hasPackagePermission
com.android.providers.contacts.util.DbQueryUtils -> com.android.providers.contacts.util.DbQueryUtils:
    93:93:void checkForSupportedColumns(java.util.Map,android.content.ContentValues) -> checkForSupportedColumns
    101:103:void checkForSupportedColumns(java.util.Set,android.content.ContentValues,java.lang.String) -> checkForSupportedColumns
    70:81:java.lang.String concatenateClauses(java.lang.String[]) -> concatenateClauses
    126:131:void escapeLikeValue(java.lang.StringBuilder,java.lang.String,char) -> escapeLikeValue
    49:55:java.lang.String getClauseWithOperator(java.lang.String,java.lang.String,java.lang.String) -> getClauseWithOperator
    59:65:java.lang.String getClauseWithOperator(java.lang.String,java.lang.String,long) -> getClauseWithOperator
    35:35:java.lang.String getEqualityClause(java.lang.String,java.lang.String) -> getEqualityClause
    40:40:java.lang.String getEqualityClause(java.lang.String,long) -> getEqualityClause
    45:45:java.lang.String getInequalityClause(java.lang.String,long) -> getInequalityClause
com.android.providers.contacts.util.FileUtilities -> com.android.providers.contacts.util.FileUtilities:
    36:46:boolean isSameOrSubDirectory(java.io.File,java.io.File) -> isSameOrSubDirectory
com.android.providers.contacts.util.Hex -> com.android.providers.contacts.util.Hex:
    25:49:void <clinit>() -> <clinit>
    83:120:byte[] decodeHex(java.lang.String) -> decodeHex
    59:72:java.lang.String encodeHex(byte[],boolean) -> encodeHex
com.android.providers.contacts.util.LogFields -> com.android.providers.contacts.util.LogFields:
    37:41:void <init>(int,int,boolean,long) -> <init>
    21:21:int access$002(com.android.providers.contacts.util.LogFields,int) -> access$002
    21:21:java.lang.Exception access$102(com.android.providers.contacts.util.LogFields,java.lang.Exception) -> access$102
    21:21:android.net.Uri access$202(com.android.providers.contacts.util.LogFields,android.net.Uri) -> access$202
    45:45:int getApiType() -> getApiType
    61:61:java.lang.Exception getException() -> getException
    69:69:int getResultCount() -> getResultCount
    57:57:long getStartNanos() -> getStartNanos
    49:49:int getUriType() -> getUriType
    53:53:boolean isCallerIsSyncAdapter() -> isCallerIsSyncAdapter
com.android.providers.contacts.util.LogFields$Builder -> com.android.providers.contacts.util.LogFields$Builder:
    81:81:void <init>() -> <init>
    85:85:com.android.providers.contacts.util.LogFields$Builder aLogFields() -> aLogFields
    124:127:com.android.providers.contacts.util.LogFields build() -> build
    89:89:com.android.providers.contacts.util.LogFields$Builder setApiType(int) -> setApiType
    99:99:com.android.providers.contacts.util.LogFields$Builder setCallerIsSyncAdapter(boolean) -> setCallerIsSyncAdapter
    109:109:com.android.providers.contacts.util.LogFields$Builder setException(java.lang.Exception) -> setException
    119:119:com.android.providers.contacts.util.LogFields$Builder setResultCount(int) -> setResultCount
    114:114:com.android.providers.contacts.util.LogFields$Builder setResultUri(android.net.Uri) -> setResultUri
    104:104:com.android.providers.contacts.util.LogFields$Builder setStartNanos(long) -> setStartNanos
    94:94:com.android.providers.contacts.util.LogFields$Builder setUriType(int) -> setUriType
com.android.providers.contacts.util.LogUtils -> com.android.providers.contacts.util.LogUtils:
    82:82:long getLatencyMicros(long) -> getLatencyMicros
    72:74:int getResultType(java.lang.Exception) -> getResultType
    52:61:void log(com.android.providers.contacts.util.LogFields) -> log
com.android.providers.contacts.util.MemoryUtils -> com.android.providers.contacts.util.MemoryUtils:
    34:41:long getTotalMemorySize() -> getTotalMemorySize
com.android.providers.contacts.util.PackageUtils -> com.android.providers.contacts.util.PackageUtils:
    35:39:boolean isPackageInstalled(android.content.Context,java.lang.String) -> isPackageInstalled
com.android.providers.contacts.util.PropertyUtils -> com.android.providers.contacts.util.PropertyUtils:
    43:43:void createPropertiesTable(android.database.sqlite.SQLiteDatabase) -> createPropertiesTable
    54:65:java.lang.String getProperty(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> getProperty
    74:77:void setProperty(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> setProperty
com.android.providers.contacts.util.SelectionBuilder -> com.android.providers.contacts.util.SelectionBuilder:
    28:28:void <clinit>() -> <clinit>
    36:38:void <init>(java.lang.String) -> <init>
    46:47:com.android.providers.contacts.util.SelectionBuilder addClause(java.lang.String) -> addClause
    58:61:java.lang.String build() -> build
com.android.providers.contacts.util.TypedUriMatcherImpl -> com.android.providers.contacts.util.TypedUriMatcherImpl:
    32:45:void <init>(java.lang.String,com.android.providers.contacts.util.UriType[]) -> <init>
    49:49:void addUriType(java.lang.String,com.android.providers.contacts.util.UriType) -> addUriType
    54:58:com.android.providers.contacts.util.UriType match(android.net.Uri) -> match
com.android.providers.contacts.util.UserUtils -> com.android.providers.contacts.util.UserUtils:
    30:30:void <clinit>() -> <clinit>
    79:80:int getCorpUserId(android.content.Context) -> getCorpUserId
    54:67:android.content.pm.UserInfo getCorpUserInfo(android.content.Context) -> getCorpUserInfo
    44:44:int getCurrentUserHandle(android.content.Context) -> getCurrentUserHandle
    36:36:android.os.UserManager getUserManager(android.content.Context) -> getUserManager
com.android.vcard.JapaneseUtils -> com.android.vcard.JapaneseUtils:
    26:364:void <clinit>() -> <clinit>
    373:374:java.lang.String tryGetHalfWidthText(char) -> tryGetHalfWidthText
com.android.vcard.VCardBuilder -> com.android.vcard.VCardBuilder:
    75:991:void <clinit>() -> <clinit>
    134:186:void <init>(int,java.lang.String) -> <init>
    1826:1869:void appendAndroidSpecificProperty(java.lang.String,android.content.ContentValues) -> appendAndroidSpecificProperty
    1527:1568:void appendEmailLine(int,java.lang.String,java.lang.String,boolean) -> appendEmailLine
    933:958:com.android.vcard.VCardBuilder appendEmails(java.util.List) -> appendEmails
    1377:1423:com.android.vcard.VCardBuilder appendEvents(java.util.List) -> appendEvents
    1180:1232:com.android.vcard.VCardBuilder appendIms(java.util.List) -> appendIms
    1909:1909:void appendLine(java.lang.String,java.lang.String) -> appendLine
    1919:1919:void appendLine(java.lang.String,java.lang.String,boolean,boolean) -> appendLine
    1930:1953:void appendLine(java.lang.String,java.util.List,java.lang.String,boolean,boolean) -> appendLine
    1874:1874:void appendLineWithCharsetAndQPDetection(java.lang.String,java.lang.String) -> appendLineWithCharsetAndQPDetection
    1885:1889:void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List,java.lang.String) -> appendLineWithCharsetAndQPDetection
    377:524:com.android.vcard.VCardBuilder appendNameProperties(java.util.List) -> appendNameProperties
    272:367:com.android.vcard.VCardBuilder appendNamePropertiesV40(java.util.List) -> appendNamePropertiesV40
    762:779:com.android.vcard.VCardBuilder appendNickNames(java.util.List) -> appendNickNames
    1326:1362:com.android.vcard.VCardBuilder appendNotes(java.util.List) -> appendNotes
    1258:1292:com.android.vcard.VCardBuilder appendOrganizations(java.util.List) -> appendOrganizations
    790:879:com.android.vcard.VCardBuilder appendPhones(java.util.List,com.android.vcard.VCardPhoneNumberTranslationCallback) -> appendPhones
    562:755:void appendPhoneticNameFields(android.content.ContentValues) -> appendPhoneticNameFields
    1735:1768:void appendPhotoLine(java.lang.String,java.lang.String) -> appendPhotoLine
    1301:1317:com.android.vcard.VCardBuilder appendPhotos(java.util.List) -> appendPhotos
    1451:1519:void appendPostalLine(int,java.lang.String,android.content.ContentValues,boolean,boolean) -> appendPostalLine
    965:977:com.android.vcard.VCardBuilder appendPostals(java.util.List) -> appendPostals
    1002:1026:void appendPostalsForDoCoMo(java.util.List) -> appendPostalsForDoCoMo
    1030:1042:void appendPostalsForGeneric(java.util.List) -> appendPostalsForGeneric
    1430:1435:com.android.vcard.VCardBuilder appendRelation(java.util.List) -> appendRelation
    1780:1817:com.android.vcard.VCardBuilder appendSipAddresses(java.util.List) -> appendSipAddresses
    1574:1709:void appendTelLine(java.lang.Integer,java.lang.String,java.lang.String,boolean) -> appendTelLine
    2042:2042:void appendTypeParameter(java.lang.String) -> appendTypeParameter
    2050:2054:void appendTypeParameter(java.lang.StringBuilder,java.lang.String) -> appendTypeParameter
    2009:2033:void appendTypeParameters(java.util.List) -> appendTypeParameters
    1716:1725:void appendUncommonPhoneType(java.lang.StringBuilder,java.lang.Integer) -> appendUncommonPhoneType
    1240:1249:com.android.vcard.VCardBuilder appendWebsites(java.util.List) -> appendWebsites
    529:550:void buildSinglePartNameField(java.lang.String,java.lang.String) -> buildSinglePartNameField
    190:201:void clear() -> clear
    206:222:boolean containsNonEmptyName(android.content.ContentValues) -> containsNonEmptyName
    2083:2117:java.lang.String encodeQuotedPrintable(java.lang.String) -> encodeQuotedPrintable
    2128:2192:java.lang.String escapeCharacters(java.lang.String) -> escapeCharacters
    229:260:android.content.ContentValues getPrimaryContentValueWithStructuredName(java.util.List) -> getPrimaryContentValueWithStructuredName
    2071:2075:boolean shouldAppendCharsetParam(java.lang.String[]) -> shouldAppendCharsetParam
    911:925:java.util.List splitPhoneNumbers(java.lang.String) -> splitPhoneNumbers
    2197:2207:java.lang.String toString() -> toString
    1065:1174:com.android.vcard.VCardBuilder$PostalStruct tryConstructPostalStruct(android.content.ContentValues) -> tryConstructPostalStruct
com.android.vcard.VCardBuilder$PostalStruct -> com.android.vcard.VCardBuilder$PostalStruct:
    1051:1054:void <init>(boolean,boolean,java.lang.String) -> <init>
com.android.vcard.VCardComposer -> com.android.vcard.VCardComposer:
    121:159:void <clinit>() -> <clinit>
    183:183:void <init>(android.content.Context,int,boolean) -> <init>
    196:196:void <init>(android.content.Context,int,java.lang.String,boolean) -> <init>
    149:238:void <init>(android.content.Context,android.content.ContentResolver,int,java.lang.String,boolean) -> <init>
    598:618:java.lang.String buildVCard(java.util.Map) -> buildVCard
    628:634:void closeCursorIfAppropriate() -> closeCursorIfAppropriate
    452:452:java.lang.String createOneEntry() -> createOneEntry
    459:471:java.lang.String createOneEntry(java.lang.reflect.Method) -> createOneEntry
    503:571:java.lang.String createOneEntryInternal(long,java.lang.reflect.Method) -> createOneEntryInternal
    641:646:void finalize() -> finalize
    655:659:int getCount() -> getCount
    251:251:boolean init() -> init
    281:281:boolean init(java.lang.String,java.lang.String[]) -> init
    309:309:boolean init(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String,android.net.Uri) -> init
    353:369:boolean init(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.net.Uri) -> init
    415:420:boolean initInterCursorCreationPart(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> initInterCursorCreationPart
    404:406:boolean initInterFirstPart(android.net.Uri) -> initInterFirstPart
    443:444:boolean initInterLastPart() -> initInterLastPart
    427:439:boolean initInterMainPart() -> initInterMainPart
    667:671:boolean isAfterLast() -> isAfterLast
    623:624:void terminate() -> terminate
com.android.vcard.VCardConfig -> com.android.vcard.VCardConfig:
    391:405:void <clinit>() -> <clinit>
    458:458:boolean appendTypeParamName(int) -> appendTypeParamName
    469:469:boolean isJapaneseDevice(int) -> isJapaneseDevice
    453:453:boolean shouldRefrainQPToNameProperties(int) -> shouldRefrainQPToNameProperties
    433:433:boolean shouldUseQuotedPrintable(int) -> shouldUseQuotedPrintable
com.android.vcard.VCardUtils -> com.android.vcard.VCardUtils:
    129:578:void <clinit>() -> <clinit>
    689:690:boolean areAllEmpty(java.lang.String[]) -> areAllEmpty
    336:336:java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String) -> constructNameFromElements
    343:366:java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> constructNameFromElements
    491:491:boolean containsOnlyAlphaDigitHyphen(java.lang.String[]) -> containsOnlyAlphaDigitHyphen
    505:511:boolean containsOnlyAlphaDigitHyphen(java.util.Collection) -> containsOnlyAlphaDigitHyphen
    448:448:boolean containsOnlyNonCrLfPrintableAscii(java.lang.String[]) -> containsOnlyNonCrLfPrintableAscii
    457:463:boolean containsOnlyNonCrLfPrintableAscii(java.util.Collection) -> containsOnlyNonCrLfPrintableAscii
    417:417:boolean containsOnlyPrintableAscii(java.lang.String[]) -> containsOnlyPrintableAscii
    424:428:boolean containsOnlyPrintableAscii(java.util.Collection) -> containsOnlyPrintableAscii
    527:527:boolean containsOnlyWhiteSpaces(java.lang.String[]) -> containsOnlyWhiteSpaces
    534:540:boolean containsOnlyWhiteSpaces(java.util.Collection) -> containsOnlyWhiteSpaces
    327:327:int getPhoneNumberFormat(int) -> getPhoneNumberFormat
    184:184:java.lang.String getPhoneTypeString(java.lang.Integer) -> getPhoneTypeString
    289:289:java.lang.String getPropertyNameForIm(int) -> getPropertyNameForIm
    665:673:java.lang.String guessImageType(byte[]) -> guessImageType
    281:281:boolean isMobilePhoneLabel(java.lang.String) -> isMobilePhoneLabel
    558:567:boolean isV21Word(java.lang.String) -> isV21Word
    285:285:boolean isValidInV21ButUnknownToContactsPhoteType(java.lang.String) -> isValidInV21ButUnknownToContactsPhoteType
    295:299:java.lang.String[] sortNameElements(int,java.lang.String,java.lang.String,java.lang.String) -> sortNameElements
    635:651:java.lang.String toHalfWidthString(java.lang.String) -> toHalfWidthString
    604:630:java.lang.String toStringAsParamValue(java.lang.String,int[]) -> toStringAsParamValue
    596:596:java.lang.String toStringAsV30ParamValue(java.lang.String) -> toStringAsV30ParamValue
    600:600:java.lang.String toStringAsV40ParamValue(java.lang.String) -> toStringAsV40ParamValue
com.android.vcard.VCardUtils$PhoneNumberUtilsPort -> com.android.vcard.VCardUtils$PhoneNumberUtilsPort:
    92:94:java.lang.String formatNumber(java.lang.String,int) -> formatNumber
com.android.vcard.VCardUtils$TextUtilsPort -> com.android.vcard.VCardUtils$TextUtilsPort:
    109:111:boolean isPrintableAsciiOnly(java.lang.CharSequence) -> isPrintableAsciiOnly
com.google.common.base.AbstractIterator -> com.google.common.base.AbstractIterator:
    31:33:void <init>() -> <init>
    49:49:java.lang.Object endOfData() -> endOfData
    55:63:boolean hasNext() -> hasNext
    78:83:java.lang.Object next() -> next
    89:89:void remove() -> remove
    67:70:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.base.AbstractIterator$1 -> com.google.common.base.AbstractIterator$1:
    56:56:void <clinit>() -> <clinit>
com.google.common.base.AbstractIterator$State -> com.google.common.base.AbstractIterator$State:
    35:39:void <clinit>() -> <clinit>
    35:35:void <init>(java.lang.String,int) -> <init>
    35:35:com.google.common.base.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    35:35:com.google.common.base.AbstractIterator$State[] values() -> values
com.google.common.base.Ascii -> com.google.common.base.Ascii:
    407:417:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
com.google.common.base.CharMatcher -> com.google.common.base.CharMatcher:
    359:359:void <init>() -> <init>
    64:64:java.lang.String access$100(char) -> access$100
    560:563:int indexIn(java.lang.CharSequence,int) -> indexIn
    295:295:com.google.common.base.CharMatcher is(char) -> is
    127:127:com.google.common.base.CharMatcher none() -> none
    927:932:java.lang.String showCharacter(char) -> showCharacter
com.google.common.base.CharMatcher$FastMatcher -> com.google.common.base.CharMatcher$FastMatcher:
    938:938:void <init>() -> <init>
com.google.common.base.CharMatcher$Is -> com.google.common.base.CharMatcher$Is:
    1609:1610:void <init>(char) -> <init>
    1615:1615:boolean matches(char) -> matches
    1646:1646:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$NamedFastMatcher -> com.google.common.base.CharMatcher$NamedFastMatcher:
    956:957:void <init>(java.lang.String) -> <init>
    962:962:java.lang.String toString() -> toString
com.google.common.base.CharMatcher$None -> com.google.common.base.CharMatcher$None:
    1107:1107:void <clinit>() -> <clinit>
    1110:1110:void <init>() -> <init>
    1126:1127:int indexIn(java.lang.CharSequence,int) -> indexIn
com.google.common.base.CharMatcher$Whitespace -> com.google.common.base.CharMatcher$Whitespace:
    1221:1223:void <clinit>() -> <clinit>
    1226:1226:void <init>() -> <init>
    1231:1231:boolean matches(char) -> matches
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    43:43:void <init>() -> <init>
    313:313:com.google.common.base.Equivalence equals() -> equals
    69:69:boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    102:102:int hash(java.lang.Object) -> hash
    325:325:com.google.common.base.Equivalence identity() -> identity
com.google.common.base.Equivalence$Equals -> com.google.common.base.Equivalence$Equals:
    330:330:void <clinit>() -> <clinit>
    328:328:void <init>() -> <init>
    334:334:boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    339:339:int doHash(java.lang.Object) -> doHash
    343:343:java.lang.Object readResolve() -> readResolve
com.google.common.base.Equivalence$Identity -> com.google.common.base.Equivalence$Identity:
    351:351:void <clinit>() -> <clinit>
    349:349:void <init>() -> <init>
    360:360:int doHash(java.lang.Object) -> doHash
    364:364:java.lang.Object readResolve() -> readResolve
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    79:80:void <init>(java.lang.String) -> <init>
    104:109:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    139:139:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    152:154:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    69:69:com.google.common.base.Joiner on(java.lang.String) -> on
    456:457:java.lang.CharSequence toString(java.lang.Object) -> toString
com.google.common.base.MoreObjects -> com.google.common.base.MoreObjects:
    64:64:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
    108:108:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
com.google.common.base.MoreObjects$ToStringHelper -> com.google.common.base.MoreObjects$ToStringHelper:
    143:143:void <init>(java.lang.String,com.google.common.base.MoreObjects$1) -> <init>
    145:151:void <init>(java.lang.String) -> <init>
    174:174:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    224:224:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int) -> add
    364:365:com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder() -> addHolder
    370:371:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    376:378:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    245:245:com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object) -> addValue
    337:360:java.lang.String toString() -> toString
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder -> com.google.common.base.MoreObjects$ToStringHelper$ValueHolder:
    382:382:void <init>() -> <init>
    382:382:void <init>(com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.Objects -> com.google.common.base.Objects:
    52:52:boolean equal(java.lang.Object,java.lang.Object) -> equal
    77:77:int hashCode(java.lang.Object[]) -> hashCode
com.google.common.base.Platform -> com.google.common.base.Platform:
    33:34:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    84:84:com.google.common.base.PatternCompiler loadPatternCompiler() -> loadPatternCompiler
    41:41:long systemNanoTime() -> systemNanoTime
com.google.common.base.Platform$JdkPatternCompiler -> com.google.common.base.Platform$JdkPatternCompiler:
    91:91:void <init>() -> <init>
    91:91:void <init>(com.google.common.base.Platform$1) -> <init>
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    1409:1413:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    1454:1458:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    1483:1489:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    128:128:void checkArgument(boolean) -> checkArgument
    142:142:void checkArgument(boolean,java.lang.Object) -> checkArgument
    217:217:void checkArgument(boolean,java.lang.String,java.lang.Object) -> checkArgument
    301:301:void checkArgument(boolean,java.lang.String,int,int) -> checkArgument
    444:444:void checkArgument(boolean,java.lang.String,java.lang.Object,java.lang.Object) -> checkArgument
    1384:1384:int checkElementIndex(int,int) -> checkElementIndex
    1402:1402:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    890:890:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    1429:1429:int checkPositionIndex(int,int) -> checkPositionIndex
    1447:1447:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    1477:1477:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    495:495:void checkState(boolean) -> checkState
    511:511:void checkState(boolean,java.lang.Object) -> checkState
    563:563:void checkState(boolean,java.lang.String,int) -> checkState
    592:592:void checkState(boolean,java.lang.String,java.lang.Object) -> checkState
com.google.common.base.Splitter -> com.google.common.base.Splitter:
    107:107:void <init>(com.google.common.base.Splitter$Strategy) -> <init>
    110:114:void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int) -> <init>
    100:100:java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence) -> access$000
    100:100:com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter) -> access$200
    100:100:boolean access$300(com.google.common.base.Splitter) -> access$300
    100:100:int access$400(com.google.common.base.Splitter) -> access$400
    319:319:com.google.common.base.Splitter omitEmptyStrings() -> omitEmptyStrings
    125:125:com.google.common.base.Splitter on(char) -> on
    139:141:com.google.common.base.Splitter on(com.google.common.base.CharMatcher) -> on
    169:173:com.google.common.base.Splitter on(java.lang.String) -> on
    381:383:java.lang.Iterable split(java.lang.CharSequence) -> split
    400:400:java.util.Iterator splittingIterator(java.lang.CharSequence) -> splittingIterator
com.google.common.base.Splitter$1 -> com.google.common.base.Splitter$1:
    142:142:void <init>(com.google.common.base.CharMatcher) -> <init>
    142:142:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    145:145:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$1$1 -> com.google.common.base.Splitter$1$1:
    145:145:void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    148:148:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$2 -> com.google.common.base.Splitter$2:
    174:174:void <init>(java.lang.String) -> <init>
    174:174:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    177:177:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$2$1 -> com.google.common.base.Splitter$2$1:
    177:177:void <init>(com.google.common.base.Splitter$2,com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    196:196:int separatorEnd(int) -> separatorEnd
    180:185:int separatorStart(int) -> separatorStart
com.google.common.base.Splitter$5 -> com.google.common.base.Splitter$5:
    383:383:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    386:386:java.util.Iterator iterator() -> iterator
    391:394:java.lang.String toString() -> toString
com.google.common.base.Splitter$SplittingIterator -> com.google.common.base.Splitter$SplittingIterator:
    540:547:void <init>(com.google.common.base.Splitter,java.lang.CharSequence) -> <init>
    523:523:java.lang.Object computeNext() -> computeNext
    557:613:java.lang.String computeNext() -> computeNext
com.google.common.base.StandardSystemProperty -> com.google.common.base.StandardSystemProperty:
    26:111:void <clinit>() -> <clinit>
    115:116:void <init>(java.lang.String,int,java.lang.String) -> <init>
    121:121:java.lang.String key() -> key
    136:136:java.lang.String toString() -> toString
    130:130:java.lang.String value() -> value
    26:26:com.google.common.base.StandardSystemProperty valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.base.StandardSystemProperty[] values() -> values
com.google.common.base.Strings -> com.google.common.base.Strings:
    261:297:java.lang.String lenientFormat(java.lang.String,java.lang.Object[]) -> lenientFormat
    305:313:java.lang.String lenientToString(java.lang.Object) -> lenientToString
    222:224:boolean validSurrogatePairAt(java.lang.CharSequence,int) -> validSurrogatePairAt
com.google.common.base.Suppliers$ExpiringMemoizingSupplier -> com.google.common.base.Suppliers$ExpiringMemoizingSupplier:
    238:253:java.lang.Object get() -> get
    260:260:java.lang.String toString() -> toString
com.google.common.base.Suppliers$MemoizingSupplier -> com.google.common.base.Suppliers$MemoizingSupplier:
    126:136:java.lang.Object get() -> get
    141:142:java.lang.String toString() -> toString
com.google.common.base.Suppliers$NonSerializableMemoizingSupplier -> com.google.common.base.Suppliers$NonSerializableMemoizingSupplier:
    164:176:java.lang.Object get() -> get
    181:183:java.lang.String toString() -> toString
com.google.common.collect.AbstractIndexedListIterator -> com.google.common.collect.AbstractIndexedListIterator:
    61:64:void <init>(int,int) -> <init>
    69:69:boolean hasNext() -> hasNext
    87:87:boolean hasPrevious() -> hasPrevious
    74:77:java.lang.Object next() -> next
    82:82:int nextIndex() -> nextIndex
    92:95:java.lang.Object previous() -> previous
    100:100:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    65:68:void <init>() -> <init>
    121:121:java.lang.Object endOfData() -> endOfData
    128:136:boolean hasNext() -> hasNext
    152:157:java.lang.Object next() -> next
    140:143:boolean tryToComputeNext() -> tryToComputeNext
com.google.common.collect.AbstractIterator$1 -> com.google.common.collect.AbstractIterator$1:
    129:129:void <clinit>() -> <clinit>
com.google.common.collect.AbstractIterator$State -> com.google.common.collect.AbstractIterator$State:
    70:81:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    70:70:com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    70:70:com.google.common.collect.AbstractIterator$State[] values() -> values
com.google.common.collect.AbstractMapBasedMultimap -> com.google.common.collect.AbstractMapBasedMultimap:
    114:116:void <init>(java.util.Map) -> <init>
    84:84:java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap) -> access$000
    84:84:java.util.Iterator access$100(java.util.Collection) -> access$100
    84:84:int access$208(com.google.common.collect.AbstractMapBasedMultimap) -> access$208
    84:84:int access$210(com.google.common.collect.AbstractMapBasedMultimap) -> access$210
    84:84:int access$212(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$212
    84:84:int access$220(com.google.common.collect.AbstractMapBasedMultimap,int) -> access$220
    84:84:void access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object) -> access$300
    163:163:java.util.Map backingMap() -> backingMap
    268:272:void clear() -> clear
    1232:1232:java.util.Map createAsMap() -> createAsMap
    159:159:java.util.Collection createCollection(java.lang.Object) -> createCollection
    1205:1208:java.util.Collection createEntries() -> createEntries
    891:891:java.util.Set createKeySet() -> createKeySet
    1236:1241:java.util.Map createMaybeNavigableAsMap() -> createMaybeNavigableAsMap
    895:900:java.util.Set createMaybeNavigableKeySet() -> createMaybeNavigableKeySet
    1200:1200:java.util.Collection entries() -> entries
    1222:1222:java.util.Iterator entryIterator() -> entryIterator
    284:288:java.util.Collection get(java.lang.Object) -> get
    573:575:java.util.Iterator iteratorOrListIterator(java.util.Collection) -> iteratorOrListIterator
    182:193:boolean put(java.lang.Object,java.lang.Object) -> put
    1102:1107:void removeValuesForKey(java.lang.Object) -> removeValuesForKey
    121:125:void setMap(java.util.Map) -> setMap
    170:170:int size() -> size
com.google.common.collect.AbstractMapBasedMultimap$2 -> com.google.common.collect.AbstractMapBasedMultimap$2:
    1222:1222:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1222:1222:java.lang.Object output(java.lang.Object,java.lang.Object) -> output
    1225:1225:java.util.Map$Entry output(java.lang.Object,java.lang.Object) -> output
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> com.google.common.collect.AbstractMapBasedMultimap$AsMap:
    1253:1254:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    1321:1324:void clear() -> clear
    1266:1266:boolean containsKey(java.lang.Object) -> containsKey
    1259:1259:java.util.Set createEntrySet() -> createEntrySet
    1306:1306:boolean equals(java.lang.Object) -> equals
    1245:1245:java.lang.Object get(java.lang.Object) -> get
    1271:1277:java.util.Collection get(java.lang.Object) -> get
    1311:1311:int hashCode() -> hashCode
    1282:1282:java.util.Set keySet() -> keySet
    1245:1245:java.lang.Object remove(java.lang.Object) -> remove
    1292:1300:java.util.Collection remove(java.lang.Object) -> remove
    1287:1287:int size() -> size
    1316:1316:java.lang.String toString() -> toString
    1329:1330:java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> wrapEntry
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries:
    1334:1334:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1349:1349:boolean contains(java.lang.Object) -> contains
    1342:1342:java.util.Iterator iterator() -> iterator
    1337:1337:java.util.Map map() -> map
    1354:1358:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator:
    1364:1365:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1370:1370:boolean hasNext() -> hasNext
    1364:1364:java.lang.Object next() -> next
    1375:1377:java.util.Map$Entry next() -> next
    1382:1386:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$Itr -> com.google.common.collect.AbstractMapBasedMultimap$Itr:
    1117:1121:void <init>(com.google.common.collect.AbstractMapBasedMultimap) -> <init>
    1128:1128:boolean hasNext() -> hasNext
    1133:1139:java.lang.Object next() -> next
    1144:1148:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> com.google.common.collect.AbstractMapBasedMultimap$KeySet:
    906:907:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    955:955:void clear() -> clear
    960:960:boolean containsAll(java.util.Collection) -> containsAll
    965:965:boolean equals(java.lang.Object) -> equals
    970:970:int hashCode() -> hashCode
    912:913:java.util.Iterator iterator() -> iterator
    944:948:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> com.google.common.collect.AbstractMapBasedMultimap$KeySet$1:
    913:913:void <init>(com.google.common.collect.AbstractMapBasedMultimap$KeySet,java.util.Iterator) -> <init>
    918:918:boolean hasNext() -> hasNext
    923:924:java.lang.Object next() -> next
    929:934:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap -> com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap:
    1449:1450:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1482:1483:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1488:1488:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1447:1447:java.util.SortedSet createKeySet() -> createKeySet
    1547:1547:java.util.NavigableSet createKeySet() -> createKeySet
    1557:1557:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1537:1537:java.util.NavigableMap descendingMap() -> descendingMap
    1504:1505:java.util.Map$Entry firstEntry() -> firstEntry
    1471:1472:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1477:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1447:1447:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1573:1573:java.util.NavigableMap headMap(java.lang.Object) -> headMap
    1578:1578:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1493:1494:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1499:1499:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1447:1447:java.util.Set keySet() -> keySet
    1447:1447:java.util.SortedSet keySet() -> keySet
    1542:1542:java.util.NavigableSet keySet() -> keySet
    1510:1511:java.util.Map$Entry lastEntry() -> lastEntry
    1460:1461:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1466:1466:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1552:1552:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1525:1532:java.util.Map$Entry pollAsMapEntry(java.util.Iterator) -> pollAsMapEntry
    1516:1516:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1521:1521:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1447:1447:java.util.SortedMap sortedMap() -> sortedMap
    1455:1455:java.util.NavigableMap sortedMap() -> sortedMap
    1447:1447:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1562:1562:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1568:1568:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1447:1447:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1583:1583:java.util.NavigableMap tailMap(java.lang.Object) -> tailMap
    1588:1588:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet -> com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet:
    1018:1019:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap) -> <init>
    1039:1039:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1064:1064:java.util.Iterator descendingIterator() -> descendingIterator
    1059:1059:java.util.NavigableSet descendingSet() -> descendingSet
    1034:1034:java.lang.Object floor(java.lang.Object) -> floor
    1016:1016:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1069:1069:java.util.NavigableSet headSet(java.lang.Object) -> headSet
    1074:1074:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1044:1044:java.lang.Object higher(java.lang.Object) -> higher
    1029:1029:java.lang.Object lower(java.lang.Object) -> lower
    1049:1049:java.lang.Object pollFirst() -> pollFirst
    1054:1054:java.lang.Object pollLast() -> pollLast
    1016:1016:java.util.SortedMap sortedMap() -> sortedMap
    1024:1024:java.util.NavigableMap sortedMap() -> sortedMap
    1016:1016:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1079:1079:java.util.NavigableSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1085:1086:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1016:1016:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    1091:1091:java.util.NavigableSet tailSet(java.lang.Object) -> tailSet
    1096:1096:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap:
    1393:1394:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    1403:1403:java.util.Comparator comparator() -> comparator
    1443:1443:java.util.SortedSet createKeySet() -> createKeySet
    1408:1408:java.lang.Object firstKey() -> firstKey
    1418:1418:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1391:1391:java.util.Set keySet() -> keySet
    1437:1438:java.util.SortedSet keySet() -> keySet
    1413:1413:java.lang.Object lastKey() -> lastKey
    1398:1398:java.util.SortedMap sortedMap() -> sortedMap
    1423:1423:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1428:1428:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet:
    977:978:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    987:987:java.util.Comparator comparator() -> comparator
    992:992:java.lang.Object first() -> first
    997:997:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1002:1002:java.lang.Object last() -> last
    982:982:java.util.SortedMap sortedMap() -> sortedMap
    1007:1007:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1012:1012:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection:
    329:333:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    474:480:boolean add(java.lang.Object) -> add
    494:503:boolean addAll(java.util.Collection) -> addAll
    380:383:void addToMap() -> addToMap
    523:529:void clear() -> clear
    511:512:boolean contains(java.lang.Object) -> contains
    517:518:boolean containsAll(java.util.Collection) -> containsAll
    398:399:boolean equals(java.lang.Object) -> equals
    487:487:com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor() -> getAncestor
    415:415:java.util.Collection getDelegate() -> getDelegate
    370:370:java.lang.Object getKey() -> getKey
    404:405:int hashCode() -> hashCode
    420:421:java.util.Iterator iterator() -> iterator
    344:352:void refreshIfEmpty() -> refreshIfEmpty
    534:538:boolean remove(java.lang.Object) -> remove
    545:553:boolean removeAll(java.util.Collection) -> removeAll
    362:365:void removeIfEmpty() -> removeIfEmpty
    560:566:boolean retainAll(java.util.Collection) -> retainAll
    389:390:int size() -> size
    410:411:java.lang.String toString() -> toString
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator:
    427:430:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    427:434:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection,java.util.Iterator) -> <init>
    449:450:boolean hasNext() -> hasNext
    455:456:java.lang.Object next() -> next
    461:463:void remove() -> remove
    441:443:void validateIterator() -> validateIterator
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet:
    665:666:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.NavigableSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    686:686:java.lang.Object ceiling(java.lang.Object) -> ceiling
    715:715:java.util.Iterator descendingIterator() -> descendingIterator
    710:710:java.util.NavigableSet descendingSet() -> descendingSet
    681:681:java.lang.Object floor(java.lang.Object) -> floor
    662:662:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    671:671:java.util.NavigableSet getSortedSetDelegate() -> getSortedSetDelegate
    727:727:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    691:691:java.lang.Object higher(java.lang.Object) -> higher
    676:676:java.lang.Object lower(java.lang.Object) -> lower
    696:696:java.lang.Object pollFirst() -> pollFirst
    701:701:java.lang.Object pollLast() -> pollLast
    721:722:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    732:732:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    705:705:java.util.NavigableSet wrap(java.util.NavigableSet) -> wrap
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSet:
    581:582:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Set) -> <init>
    587:599:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet -> com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet:
    609:610:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    619:619:java.util.Comparator comparator() -> comparator
    624:625:java.lang.Object first() -> first
    614:614:java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    636:640:java.util.SortedSet headSet(java.lang.Object) -> headSet
    630:631:java.lang.Object last() -> last
    645:649:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    654:658:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapEntry -> com.google.common.collect.AbstractMapEntry:
    31:31:void <init>() -> <init>
    46:49:boolean equals(java.lang.Object) -> equals
    56:58:int hashCode() -> hashCode
    64:64:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> com.google.common.collect.AbstractMultimap:
    38:38:void <init>() -> <init>
    207:208:java.util.Map asMap() -> asMap
    57:58:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    112:113:java.util.Collection entries() -> entries
    217:217:boolean equals(java.lang.Object) -> equals
    230:230:int hashCode() -> hashCode
    150:151:java.util.Set keySet() -> keySet
    64:65:boolean remove(java.lang.Object,java.lang.Object) -> remove
    241:241:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap$Entries -> com.google.common.collect.AbstractMultimap$Entries:
    119:119:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    127:127:java.util.Iterator iterator() -> iterator
    122:122:com.google.common.collect.Multimap multimap() -> multimap
com.google.common.collect.AbstractMultimap$EntrySet -> com.google.common.collect.AbstractMultimap$EntrySet:
    132:132:void <init>(com.google.common.collect.AbstractMultimap) -> <init>
    140:140:boolean equals(java.lang.Object) -> equals
    135:135:int hashCode() -> hashCode
com.google.common.collect.AbstractNavigableMap -> com.google.common.collect.AbstractNavigableMap:
    35:35:void <init>() -> <init>
    101:101:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    122:122:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    159:159:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    164:164:java.util.NavigableMap descendingMap() -> descendingMap
    45:45:java.util.Map$Entry firstEntry() -> firstEntry
    68:72:java.lang.Object firstKey() -> firstKey
    95:95:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    117:117:java.lang.Object floorKey(java.lang.Object) -> floorKey
    139:139:java.util.SortedMap headMap(java.lang.Object) -> headMap
    107:107:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    127:127:java.lang.Object higherKey(java.lang.Object) -> higherKey
    154:154:java.util.Set keySet() -> keySet
    51:51:java.util.Map$Entry lastEntry() -> lastEntry
    78:82:java.lang.Object lastKey() -> lastKey
    89:89:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    112:112:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    149:149:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    57:57:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    63:63:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    134:134:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    144:144:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.AbstractNavigableMap$DescendingMap -> com.google.common.collect.AbstractNavigableMap$DescendingMap:
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap) -> <init>
    167:167:void <init>(com.google.common.collect.AbstractNavigableMap,com.google.common.collect.AbstractNavigableMap$1) -> <init>
    175:175:java.util.Iterator entryIterator() -> entryIterator
    170:170:java.util.NavigableMap forward() -> forward
com.google.common.collect.AbstractSetMultimap -> com.google.common.collect.AbstractSetMultimap:
    44:44:void <init>(java.util.Map) -> <init>
    123:123:java.util.Map asMap() -> asMap
    86:86:java.util.Set entries() -> entries
    148:148:boolean equals(java.lang.Object) -> equals
    35:35:java.util.Collection get(java.lang.Object) -> get
    75:75:java.util.Set get(java.lang.Object) -> get
    137:137:boolean put(java.lang.Object,java.lang.Object) -> put
    57:57:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    62:62:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
com.google.common.collect.BoundType -> com.google.common.collect.BoundType:
    26:30:void <clinit>() -> <clinit>
    34:35:void <init>(java.lang.String,int,boolean) -> <init>
    40:40:com.google.common.collect.BoundType forBoolean(boolean) -> forBoolean
    26:26:com.google.common.collect.BoundType valueOf(java.lang.String) -> valueOf
    26:26:com.google.common.collect.BoundType[] values() -> values
com.google.common.collect.ByFunctionOrdering -> com.google.common.collect.ByFunctionOrdering:
    36:38:void <init>(com.google.common.base.Function,com.google.common.collect.Ordering) -> <init>
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
    51:53:boolean equals(java.lang.Object) -> equals
    60:60:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
com.google.common.collect.CollectPreconditions -> com.google.common.collect.CollectPreconditions:
    30:32:void checkEntryNotNull(java.lang.Object,java.lang.Object) -> checkEntryNotNull
    39:39:int checkNonnegative(int,java.lang.String) -> checkNonnegative
    63:63:void checkRemove(boolean) -> checkRemove
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    328:329:java.lang.StringBuilder newStringBuilderForCollection(int) -> newStringBuilderForCollection
    99:101:boolean safeContains(java.util.Collection,java.lang.Object) -> safeContains
com.google.common.collect.CompactHashMap -> com.google.common.collect.CompactHashMap:
    102:102:void <clinit>() -> <clinit>
    180:181:void <init>() -> <init>
    189:190:void <init>(int) -> <init>
    75:75:int access$000(com.google.common.collect.CompactHashMap) -> access$000
    75:75:java.lang.Object access$100(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$100
    75:75:java.lang.Object access$200() -> access$200
    75:75:int access$400(com.google.common.collect.CompactHashMap,java.lang.Object) -> access$400
    75:75:int access$500(com.google.common.collect.CompactHashMap) -> access$500
    75:75:java.lang.Object access$600(com.google.common.collect.CompactHashMap) -> access$600
    75:75:int access$710(com.google.common.collect.CompactHashMap) -> access$710
    210:219:int allocArrays() -> allocArrays
    890:906:void clear() -> clear
    440:441:boolean containsKey(java.lang.Object) -> containsKey
    807:812:boolean containsValue(java.lang.Object) -> containsValue
    242:250:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    663:663:java.util.Set createEntrySet() -> createEntrySet
    235:235:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    607:607:java.util.Set createKeySet() -> createKeySet
    827:827:java.util.Collection createValues() -> createValues
    99:99:com.google.common.collect.CompactHashMap createWithExpectedSize(int) -> createWithExpectedSize
    228:229:java.util.Map delegateOrNull() -> delegateOrNull
    659:659:java.util.Set entrySet() -> entrySet
    726:730:java.util.Iterator entrySetIterator() -> entrySetIterator
    538:538:int firstEntryIndex() -> firstEntryIndex
    447:456:java.lang.Object get(java.lang.Object) -> get
    542:542:int getSuccessor(int) -> getSuccessor
    263:263:int hashTableMask() -> hashTableMask
    267:267:void incrementModCount() -> incrementModCount
    416:433:int indexOf(java.lang.Object) -> indexOf
    195:198:void init(int) -> init
    350:352:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    802:802:boolean isEmpty() -> isEmpty
    603:603:java.util.Set keySet() -> keySet
    642:646:java.util.Iterator keySetIterator() -> keySetIterator
    498:533:void moveLastEntry(int,int) -> moveLastEntry
    204:204:boolean needsAllocArrays() -> needsAllocArrays
    282:342:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    923:932:void readObject(java.io.ObjectInputStream) -> readObject
    464:469:java.lang.Object remove(java.lang.Object) -> remove
    474:489:java.lang.Object removeHelper(java.lang.Object) -> removeHelper
    373:375:void resizeEntries(int) -> resizeEntries
    357:363:void resizeMeMaybe(int) -> resizeMeMaybe
    380:411:int resizeTable(int,int,int,int) -> resizeTable
    256:258:void setHashTableMask(int) -> setHashTableMask
    796:797:int size() -> size
    823:823:java.util.Collection values() -> values
    849:853:java.util.Iterator valuesIterator() -> valuesIterator
    911:917:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashMap$1 -> com.google.common.collect.CompactHashMap$1:
    646:646:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    650:650:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$2 -> com.google.common.collect.CompactHashMap$2:
    730:730:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    730:730:java.lang.Object getOutput(int) -> getOutput
    733:733:java.util.Map$Entry getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$3 -> com.google.common.collect.CompactHashMap$3:
    853:853:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    857:857:java.lang.Object getOutput(int) -> getOutput
com.google.common.collect.CompactHashMap$EntrySetView -> com.google.common.collect.CompactHashMap$EntrySetView:
    667:667:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    676:676:void clear() -> clear
    686:692:boolean contains(java.lang.Object) -> contains
    681:681:java.util.Iterator iterator() -> iterator
    699:717:boolean remove(java.lang.Object) -> remove
    671:671:int size() -> size
com.google.common.collect.CompactHashMap$Itr -> com.google.common.collect.CompactHashMap$Itr:
    554:557:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    554:554:void <init>(com.google.common.collect.CompactHashMap,com.google.common.collect.CompactHashMap$1) -> <init>
    593:594:void checkForConcurrentModification() -> checkForConcurrentModification
    561:561:boolean hasNext() -> hasNext
    589:589:void incrementExpectedModCount() -> incrementExpectedModCount
    568:574:java.lang.Object next() -> next
    580:585:void remove() -> remove
com.google.common.collect.CompactHashMap$KeySetView -> com.google.common.collect.CompactHashMap$KeySetView:
    611:611:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    637:637:void clear() -> clear
    619:619:boolean contains(java.lang.Object) -> contains
    632:632:java.util.Iterator iterator() -> iterator
    624:627:boolean remove(java.lang.Object) -> remove
    614:614:int size() -> size
com.google.common.collect.CompactHashMap$MapEntry -> com.google.common.collect.CompactHashMap$MapEntry:
    744:746:void <init>(com.google.common.collect.CompactHashMap,int) -> <init>
    752:752:java.lang.Object getKey() -> getKey
    767:772:java.lang.Object getValue() -> getValue
    778:788:java.lang.Object setValue(java.lang.Object) -> setValue
    756:759:void updateLastKnownIndex() -> updateLastKnownIndex
com.google.common.collect.CompactHashMap$ValuesView -> com.google.common.collect.CompactHashMap$ValuesView:
    831:831:void <init>(com.google.common.collect.CompactHashMap) -> <init>
    839:839:void clear() -> clear
    844:844:java.util.Iterator iterator() -> iterator
    834:834:int size() -> size
com.google.common.collect.CompactHashSet -> com.google.common.collect.CompactHashSet:
    191:192:void <init>() -> <init>
    200:201:void <init>(int) -> <init>
    73:73:int access$000(com.google.common.collect.CompactHashSet) -> access$000
    287:340:boolean add(java.lang.Object) -> add
    221:229:int allocArrays() -> allocArrays
    635:650:void clear() -> clear
    413:434:boolean contains(java.lang.Object) -> contains
    252:259:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    245:245:java.util.Set createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    118:118:com.google.common.collect.CompactHashSet createWithExpectedSize(int) -> createWithExpectedSize
    238:239:java.util.Set delegateOrNull() -> delegateOrNull
    505:505:int firstEntryIndex() -> firstEntryIndex
    509:509:int getSuccessor(int) -> getSuccessor
    277:277:int hashTableMask() -> hashTableMask
    281:281:void incrementModCount() -> incrementModCount
    206:209:void init(int) -> init
    348:349:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    580:580:boolean isEmpty() -> isEmpty
    265:265:boolean isUsingHashFloodingResistance() -> isUsingHashFloodingResistance
    523:527:java.util.Iterator iterator() -> iterator
    468:500:void moveLastEntry(int,int) -> moveLastEntry
    215:215:boolean needsAllocArrays() -> needsAllocArrays
    664:672:void readObject(java.io.ObjectInputStream) -> readObject
    442:459:boolean remove(java.lang.Object) -> remove
    370:371:void resizeEntries(int) -> resizeEntries
    354:360:void resizeMeMaybe(int) -> resizeMeMaybe
    376:407:int resizeTable(int,int,int,int) -> resizeTable
    270:272:void setHashTableMask(int) -> setHashTableMask
    574:575:int size() -> size
    585:589:java.lang.Object[] toArray() -> toArray
    595:604:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    655:658:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.CompactHashSet$1 -> com.google.common.collect.CompactHashSet$1:
    527:530:void <init>(com.google.common.collect.CompactHashSet) -> <init>
    565:566:void checkForConcurrentModification() -> checkForConcurrentModification
    534:534:boolean hasNext() -> hasNext
    561:561:void incrementExpectedModCount() -> incrementExpectedModCount
    540:546:java.lang.Object next() -> next
    552:557:void remove() -> remove
com.google.common.collect.CompactHashing -> com.google.common.collect.CompactHashing:
    77:85:java.lang.Object createTable(int) -> createTable
    153:179:int remove(java.lang.Object,java.lang.Object,int,java.lang.Object,int[],java.lang.Object[],java.lang.Object[]) -> remove
    90:95:void tableClear(java.lang.Object) -> tableClear
    100:105:int tableGet(java.lang.Object,int) -> tableGet
    110:115:void tableSet(java.lang.Object,int,int) -> tableSet
    70:70:int tableSize(int) -> tableSize
com.google.common.collect.CompactLinkedHashMap -> com.google.common.collect.CompactLinkedHashMap:
    91:91:void <init>() -> <init>
    95:95:void <init>(int) -> <init>
    99:100:void <init>(int,boolean) -> <init>
    172:178:void accessEntry(int) -> accessEntry
    208:208:int adjustAfterRemove(int,int) -> adjustAfterRemove
    112:113:int allocArrays() -> allocArrays
    213:221:void clear() -> clear
    125:126:java.util.Map convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    119:119:java.util.Map createHashFloodingResistantDelegate(int) -> createHashFloodingResistantDelegate
    66:66:com.google.common.collect.CompactLinkedHashMap createWithExpectedSize(int) -> createWithExpectedSize
    203:203:int firstEntryIndex() -> firstEntryIndex
    131:131:int getPredecessor(int) -> getPredecessor
    136:136:int getSuccessor(int) -> getSuccessor
    105:107:void init(int) -> init
    165:167:void insertEntry(int,java.lang.Object,java.lang.Object,int,int) -> insertEntry
    184:192:void moveLastEntry(int,int) -> moveLastEntry
    197:198:void resizeEntries(int) -> resizeEntries
    146:146:void setPredecessor(int,int) -> setPredecessor
    151:159:void setSucceeds(int,int) -> setSucceeds
    141:141:void setSuccessor(int,int) -> setSuccessor
com.google.common.collect.CompactLinkedHashSet -> com.google.common.collect.CompactLinkedHashSet:
    121:121:void <init>() -> <init>
    125:125:void <init>(int) -> <init>
    218:218:int adjustAfterRemove(int,int) -> adjustAfterRemove
    137:139:int allocArrays() -> allocArrays
    233:242:void clear() -> clear
    146:148:java.util.Set convertToHashFloodingResistantImplementation() -> convertToHashFloodingResistantImplementation
    93:93:com.google.common.collect.CompactLinkedHashSet createWithExpectedSize(int) -> createWithExpectedSize
    213:213:int firstEntryIndex() -> firstEntryIndex
    153:153:int getPredecessor(int) -> getPredecessor
    158:158:int getSuccessor(int) -> getSuccessor
    130:132:void init(int) -> init
    185:187:void insertEntry(int,java.lang.Object,int,int) -> insertEntry
    192:201:void moveLastEntry(int,int) -> moveLastEntry
    206:208:void resizeEntries(int) -> resizeEntries
    166:166:void setPredecessor(int,int) -> setPredecessor
    171:179:void setSucceeds(int,int) -> setSucceeds
    162:162:void setSuccessor(int,int) -> setSuccessor
    223:223:java.lang.Object[] toArray() -> toArray
    228:228:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ComparatorOrdering -> com.google.common.collect.ComparatorOrdering:
    31:32:void <init>(java.util.Comparator) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    45:47:boolean equals(java.lang.Object) -> equals
    54:54:int hashCode() -> hashCode
    59:59:java.lang.String toString() -> toString
com.google.common.collect.Cut -> com.google.common.collect.Cut:
    38:39:void <init>(java.lang.Comparable) -> <init>
    215:215:com.google.common.collect.Cut aboveAll() -> aboveAll
    383:383:com.google.common.collect.Cut aboveValue(java.lang.Comparable) -> aboveValue
    114:114:com.google.common.collect.Cut belowAll() -> belowAll
    300:300:com.google.common.collect.Cut belowValue(java.lang.Comparable) -> belowValue
    34:34:int compareTo(java.lang.Object) -> compareTo
    71:82:int compareTo(com.google.common.collect.Cut) -> compareTo
    86:86:java.lang.Comparable endpoint() -> endpoint
    92:96:boolean equals(java.lang.Object) -> equals
com.google.common.collect.Cut$AboveAll -> com.google.common.collect.Cut$AboveAll:
    219:219:void <clinit>() -> <clinit>
    222:222:void <init>() -> <init>
    218:218:com.google.common.collect.Cut$AboveAll access$100() -> access$100
    218:218:int compareTo(java.lang.Object) -> compareTo
    259:259:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    264:264:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    227:227:java.lang.Comparable endpoint() -> endpoint
    284:284:int hashCode() -> hashCode
    293:293:java.lang.Object readResolve() -> readResolve
com.google.common.collect.Cut$AboveValue -> com.google.common.collect.Cut$AboveValue:
    388:388:void <init>(java.lang.Comparable) -> <init>
    434:434:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    439:439:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    460:460:int hashCode() -> hashCode
    393:393:boolean isLessThan(java.lang.Comparable) -> isLessThan
    465:465:java.lang.String toString() -> toString
com.google.common.collect.Cut$BelowAll -> com.google.common.collect.Cut$BelowAll:
    120:120:void <clinit>() -> <clinit>
    123:123:void <init>() -> <init>
    119:119:com.google.common.collect.Cut$BelowAll access$000() -> access$000
    119:119:int compareTo(java.lang.Object) -> compareTo
    160:160:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    165:165:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    128:128:java.lang.Comparable endpoint() -> endpoint
    194:194:int hashCode() -> hashCode
    203:203:java.lang.Object readResolve() -> readResolve
com.google.common.collect.Cut$BelowValue -> com.google.common.collect.Cut$BelowValue:
    305:305:void <init>(java.lang.Comparable) -> <init>
    351:351:void describeAsLowerBound(java.lang.StringBuilder) -> describeAsLowerBound
    356:356:void describeAsUpperBound(java.lang.StringBuilder) -> describeAsUpperBound
    371:371:int hashCode() -> hashCode
    310:310:boolean isLessThan(java.lang.Comparable) -> isLessThan
    376:376:java.lang.String toString() -> toString
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    53:53:void <init>() -> <init>
    87:87:boolean add(java.lang.Object) -> add
    104:104:boolean addAll(java.util.Collection) -> addAll
    115:115:void clear() -> clear
    81:81:boolean contains(java.lang.Object) -> contains
    98:98:boolean containsAll(java.util.Collection) -> containsAll
    76:76:boolean isEmpty() -> isEmpty
    60:60:java.util.Iterator iterator() -> iterator
    93:93:boolean remove(java.lang.Object) -> remove
    71:71:boolean removeAll(java.util.Collection) -> removeAll
    110:110:boolean retainAll(java.util.Collection) -> retainAll
    65:65:int size() -> size
    120:120:java.lang.Object[] toArray() -> toArray
    126:126:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.ForwardingConcurrentMap -> com.google.common.collect.ForwardingConcurrentMap:
    43:43:void <init>() -> <init>
    51:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    57:57:boolean remove(java.lang.Object,java.lang.Object) -> remove
    63:63:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    69:69:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
com.google.common.collect.ForwardingMap -> com.google.common.collect.ForwardingMap:
    62:62:void <init>() -> <init>
    85:85:void clear() -> clear
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    95:95:boolean containsValue(java.lang.Object) -> containsValue
    126:126:java.util.Set entrySet() -> entrySet
    131:131:boolean equals(java.lang.Object) -> equals
    100:100:java.lang.Object get(java.lang.Object) -> get
    136:136:int hashCode() -> hashCode
    74:74:boolean isEmpty() -> isEmpty
    116:116:java.util.Set keySet() -> keySet
    106:106:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    111:111:void putAll(java.util.Map) -> putAll
    80:80:java.lang.Object remove(java.lang.Object) -> remove
    69:69:int size() -> size
    303:303:java.lang.String standardToString() -> standardToString
    121:121:java.util.Collection values() -> values
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    50:50:void <init>() -> <init>
    63:63:java.lang.String toString() -> toString
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    53:53:void <init>() -> <init>
    60:60:boolean equals(java.lang.Object) -> equals
    65:65:int hashCode() -> hashCode
com.google.common.collect.ForwardingSortedSet -> com.google.common.collect.ForwardingSortedSet:
    58:58:void <init>() -> <init>
    65:65:java.util.Comparator comparator() -> comparator
    70:70:java.lang.Object first() -> first
    75:75:java.util.SortedSet headSet(java.lang.Object) -> headSet
    80:80:java.lang.Object last() -> last
    85:85:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    90:90:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.HashMultimap -> com.google.common.collect.HashMultimap:
    94:94:void <init>() -> <init>
    51:100:void <init>(int,int) -> <init>
    47:47:java.util.Map asMap() -> asMap
    47:47:void clear() -> clear
    47:47:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    60:60:com.google.common.collect.HashMultimap create() -> create
    47:47:java.util.Collection createCollection() -> createCollection
    117:117:java.util.Set createCollection() -> createCollection
    47:47:boolean equals(java.lang.Object) -> equals
    47:47:java.util.Set get(java.lang.Object) -> get
    47:47:int hashCode() -> hashCode
    47:47:java.util.Set keySet() -> keySet
    47:47:boolean put(java.lang.Object,java.lang.Object) -> put
    132:137:void readObject(java.io.ObjectInputStream) -> readObject
    47:47:boolean remove(java.lang.Object,java.lang.Object) -> remove
    47:47:int size() -> size
    47:47:java.lang.String toString() -> toString
    126:127:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.HashMultimapGwtSerializationDependencies -> com.google.common.collect.HashMultimapGwtSerializationDependencies:
    35:35:void <init>(java.util.Map) -> <init>
com.google.common.collect.Hashing -> com.google.common.collect.Hashing:
    62:63:int closedTableSize(int,double) -> closedTableSize
    50:50:int smear(int) -> smear
    54:54:int smearedHash(java.lang.Object) -> smearedHash
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
    174:174:void <clinit>() -> <clinit>
    168:168:void <init>() -> <init>
    235:235:boolean add(java.lang.Object) -> add
    261:261:boolean addAll(java.util.Collection) -> addAll
    299:299:void clear() -> clear
    330:331:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    219:219:int internalArrayEnd() -> internalArrayEnd
    211:211:int internalArrayStart() -> internalArrayStart
    161:161:java.util.Iterator iterator() -> iterator
    248:248:boolean remove(java.lang.Object) -> remove
    274:274:boolean removeAll(java.util.Collection) -> removeAll
    287:287:boolean retainAll(java.util.Collection) -> retainAll
    178:178:java.lang.Object[] toArray() -> toArray
    184:196:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    338:338:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder -> com.google.common.collect.ImmutableCollection$ArrayBasedBuilder:
    449:452:void <init>(int) -> <init>
    474:476:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    483:486:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    461:467:void getReadyToExpandTo(int) -> getReadyToExpandTo
com.google.common.collect.ImmutableCollection$Builder -> com.google.common.collect.ImmutableCollection$Builder:
    366:366:void <init>() -> <init>
    352:357:int expandedCapacity(int,int) -> expandedCapacity
com.google.common.collect.ImmutableEntry -> com.google.common.collect.ImmutableEntry:
    29:31:void <init>(java.lang.Object,java.lang.Object) -> <init>
    37:37:java.lang.Object getKey() -> getKey
    43:43:java.lang.Object getValue() -> getValue
    48:48:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    372:372:void <clinit>() -> <clinit>
    346:346:void <init>() -> <init>
    514:514:void add(int,java.lang.Object) -> add
    489:489:boolean addAll(int,java.util.Collection) -> addAll
    335:335:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> asImmutableList
    341:343:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> asImmutableList
    671:671:com.google.common.collect.ImmutableList$Builder builder() -> builder
    326:326:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    401:401:boolean contains(java.lang.Object) -> contains
    543:545:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    271:273:com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    623:623:boolean equals(java.lang.Object) -> equals
    629:631:int hashCode() -> hashCode
    391:391:int indexOf(java.lang.Object) -> indexOf
    55:55:java.util.Iterator iterator() -> iterator
    352:352:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    396:396:int lastIndexOf(java.lang.Object) -> lastIndexOf
    55:55:java.util.ListIterator listIterator() -> listIterator
    55:55:java.util.ListIterator listIterator(int) -> listIterator
    357:357:com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    363:367:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    67:67:com.google.common.collect.ImmutableList of() -> of
    78:78:com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    658:658:void readObject(java.io.ObjectInputStream) -> readObject
    527:527:java.lang.Object remove(int) -> remove
    558:558:com.google.common.collect.ImmutableList reverse() -> reverse
    502:502:java.lang.Object set(int,java.lang.Object) -> set
    55:55:java.util.List subList(int,int) -> subList
    413:420:com.google.common.collect.ImmutableList subList(int,int) -> subList
    429:429:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> subListUnchecked
    663:663:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableList$Builder -> com.google.common.collect.ImmutableList$Builder:
    718:718:void <init>() -> <init>
    722:722:void <init>(int) -> <init>
    735:735:com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    786:787:com.google.common.collect.ImmutableList build() -> build
com.google.common.collect.ImmutableList$Itr -> com.google.common.collect.ImmutableList$Itr:
    379:380:void <init>(com.google.common.collect.ImmutableList,int) -> <init>
    385:385:java.lang.Object get(int) -> get
com.google.common.collect.ImmutableList$ReverseImmutableList -> com.google.common.collect.ImmutableList$ReverseImmutableList:
    564:565:void <init>(com.google.common.collect.ImmutableList) -> <init>
    583:583:boolean contains(java.lang.Object) -> contains
    606:607:java.lang.Object get(int) -> get
    588:589:int indexOf(java.lang.Object) -> indexOf
    617:617:boolean isPartialView() -> isPartialView
    594:595:int lastIndexOf(java.lang.Object) -> lastIndexOf
    578:578:com.google.common.collect.ImmutableList reverse() -> reverse
    569:569:int reverseIndex(int) -> reverseIndex
    573:573:int reversePosition(int) -> reversePosition
    612:612:int size() -> size
    561:561:java.util.List subList(int,int) -> subList
    600:601:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableList$SerializedForm -> com.google.common.collect.ImmutableList$SerializedForm:
    646:647:void <init>(java.lang.Object[]) -> <init>
    651:651:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList$SubList -> com.google.common.collect.ImmutableList$SubList:
    436:438:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    463:464:java.lang.Object get(int) -> get
    448:448:java.lang.Object[] internalArray() -> internalArray
    458:458:int internalArrayEnd() -> internalArrayEnd
    453:453:int internalArrayStart() -> internalArrayStart
    443:443:int size() -> size
    432:432:java.util.List subList(int,int) -> subList
    469:470:com.google.common.collect.ImmutableList subList(int,int) -> subList
com.google.common.collect.ImmutableMap -> com.google.common.collect.ImmutableMap:
    408:408:void <clinit>() -> <clinit>
    440:440:void <init>() -> <init>
    489:489:void clear() -> clear
    499:499:boolean containsKey(java.lang.Object) -> containsKey
    504:504:boolean containsValue(java.lang.Object) -> containsValue
    378:385:com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    400:405:com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable) -> copyOf
    54:54:java.util.Set entrySet() -> entrySet
    536:537:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    685:685:boolean equals(java.lang.Object) -> equals
    524:524:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    692:692:int hashCode() -> hashCode
    494:494:boolean isEmpty() -> isEmpty
    54:54:java.util.Set keySet() -> keySet
    550:551:com.google.common.collect.ImmutableSet keySet() -> keySet
    452:452:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    477:477:void putAll(java.util.Map) -> putAll
    465:465:java.lang.Object remove(java.lang.Object) -> remove
    701:701:java.lang.String toString() -> toString
    54:54:java.util.Collection values() -> values
    584:585:com.google.common.collect.ImmutableCollection values() -> values
    788:788:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMap$Builder -> com.google.common.collect.ImmutableMap$Builder:
    224:224:void <init>() -> <init>
    228:231:void <init>(int) -> <init>
    339:341:com.google.common.collect.ImmutableMap build() -> build
    235:241:void ensureCapacity(int) -> ensureCapacity
    251:255:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    267:267:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    291:295:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    345:359:void sortEntries() -> sortEntries
com.google.common.collect.ImmutableMap$SerializedForm -> com.google.common.collect.ImmutableMap$SerializedForm:
    720:731:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    761:769:java.lang.Object legacyReadResolve() -> legacyReadResolve
    776:776:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    740:756:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapEntrySet -> com.google.common.collect.ImmutableMapEntrySet:
    68:68:void <init>() -> <init>
    79:82:boolean contains(java.lang.Object) -> contains
    100:100:int hashCode() -> hashCode
    95:95:boolean isHashCodeFast() -> isHashCodeFast
    74:74:int size() -> size
    106:106:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm -> com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm:
    113:114:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    118:118:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSet -> com.google.common.collect.ImmutableSet:
    310:310:void <init>() -> <init>
    48:48:boolean access$000(int,int) -> access$000
    48:48:com.google.common.collect.ImmutableSet access$100(int,java.lang.Object[]) -> access$100
    344:345:com.google.common.collect.ImmutableList asList() -> asList
    383:383:com.google.common.collect.ImmutableSet$Builder builder() -> builder
    210:222:int chooseTableSize(int) -> chooseTableSize
    144:186:com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> construct
    300:306:com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    349:349:com.google.common.collect.ImmutableList createAsList() -> createAsList
    321:327:boolean equals(java.lang.Object) -> equals
    332:332:int hashCode() -> hashCode
    46:46:java.util.Iterator iterator() -> iterator
    55:55:com.google.common.collect.ImmutableSet of() -> of
    64:64:com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    375:375:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSet$Builder -> com.google.common.collect.ImmutableSet$Builder:
    431:431:void <init>() -> <init>
    451:457:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    473:478:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    484:494:void addDeduping(java.lang.Object) -> addDeduping
    546:566:com.google.common.collect.ImmutableSet build() -> build
com.google.common.collect.ImmutableSet$SerializedForm -> com.google.common.collect.ImmutableSet$SerializedForm:
    362:363:void <init>(java.lang.Object[]) -> <init>
    367:367:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMap -> com.google.common.collect.ImmutableSortedMap:
    61:65:void <clinit>() -> <clinit>
    548:548:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList) -> <init>
    554:557:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSortedMap) -> <init>
    54:54:com.google.common.collect.ImmutableSortedMap access$000(java.util.Comparator,java.lang.Object,java.lang.Object) -> access$000
    54:54:com.google.common.collect.RegularImmutableSortedSet access$100(com.google.common.collect.ImmutableSortedMap) -> access$100
    54:54:com.google.common.collect.ImmutableList access$200(com.google.common.collect.ImmutableSortedMap) -> access$200
    798:798:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    803:803:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    651:651:java.util.Comparator comparator() -> comparator
    616:616:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    627:627:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    641:641:com.google.common.collect.ImmutableCollection createValues() -> createValues
    53:53:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    876:876:com.google.common.collect.ImmutableSortedSet descendingKeySet() -> descendingKeySet
    53:53:java.util.NavigableMap descendingMap() -> descendingMap
    856:863:com.google.common.collect.ImmutableSortedMap descendingMap() -> descendingMap
    68:72:com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> emptyMap
    53:53:java.util.Set entrySet() -> entrySet
    579:579:com.google.common.collect.ImmutableSet entrySet() -> entrySet
    818:818:java.util.Map$Entry firstEntry() -> firstEntry
    656:656:java.lang.Object firstKey() -> firstKey
    788:788:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    793:793:java.lang.Object floorKey(java.lang.Object) -> floorKey
    567:568:java.lang.Object get(java.lang.Object) -> get
    665:671:com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> getSubMap
    53:53:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    53:53:java.util.SortedMap headMap(java.lang.Object) -> headMap
    686:686:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    702:702:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    808:808:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    813:813:java.lang.Object higherKey(java.lang.Object) -> higherKey
    573:573:boolean isPartialView() -> isPartialView
    53:53:com.google.common.collect.ImmutableSet keySet() -> keySet
    53:53:java.util.Set keySet() -> keySet
    622:622:com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    823:823:java.util.Map$Entry lastEntry() -> lastEntry
    661:661:java.lang.Object lastKey() -> lastKey
    778:778:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    783:783:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    53:53:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    871:871:com.google.common.collect.ImmutableSortedSet navigableKeySet() -> navigableKeySet
    81:81:com.google.common.collect.ImmutableSortedMap of() -> of
    91:93:com.google.common.collect.ImmutableSortedMap of(java.util.Comparator,java.lang.Object,java.lang.Object) -> of
    836:836:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    849:849:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    562:562:int size() -> size
    53:53:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    717:717:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    736:743:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    53:53:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    757:757:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    773:773:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    53:53:java.util.Collection values() -> values
    636:636:com.google.common.collect.ImmutableCollection values() -> values
    902:902:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedMap$1EntrySet -> com.google.common.collect.ImmutableSortedMap$1EntrySet:
    584:584:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    592:592:com.google.common.collect.ImmutableList createAsList() -> createAsList
    584:584:java.util.Iterator iterator() -> iterator
    587:587:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    613:613:com.google.common.collect.ImmutableMap map() -> map
com.google.common.collect.ImmutableSortedMap$1EntrySet$1 -> com.google.common.collect.ImmutableSortedMap$1EntrySet$1:
    592:592:void <init>(com.google.common.collect.ImmutableSortedMap$1EntrySet) -> <init>
    592:592:java.lang.Object get(int) -> get
    595:596:java.util.Map$Entry get(int) -> get
    606:606:int size() -> size
com.google.common.collect.ImmutableSortedMap$Builder -> com.google.common.collect.ImmutableSortedMap$Builder:
    411:411:void <init>(java.util.Comparator) -> <init>
    414:417:void <init>(java.util.Comparator,int) -> <init>
    400:400:com.google.common.collect.ImmutableMap build() -> build
    510:538:com.google.common.collect.ImmutableSortedMap build() -> build
    421:424:void ensureCapacity(int) -> ensureCapacity
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    436:440:com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object) -> put
    454:454:com.google.common.collect.ImmutableSortedMap$Builder put(java.util.Map$Entry) -> put
    400:400:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable) -> putAll
    484:484:com.google.common.collect.ImmutableSortedMap$Builder putAll(java.lang.Iterable) -> putAll
com.google.common.collect.ImmutableSortedMap$SerializedForm -> com.google.common.collect.ImmutableSortedMap$SerializedForm:
    888:889:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    884:884:com.google.common.collect.ImmutableMap$Builder makeBuilder(int) -> makeBuilder
    894:894:com.google.common.collect.ImmutableSortedMap$Builder makeBuilder(int) -> makeBuilder
com.google.common.collect.ImmutableSortedMapFauxverideShim -> com.google.common.collect.ImmutableSortedMapFauxverideShim:
    29:29:void <init>() -> <init>
com.google.common.collect.ImmutableSortedSet -> com.google.common.collect.ImmutableSortedSet:
    513:514:void <init>(java.util.Comparator) -> <init>
    627:627:java.lang.Object ceiling(java.lang.Object) -> ceiling
    524:524:java.util.Comparator comparator() -> comparator
    342:361:com.google.common.collect.ImmutableSortedSet construct(java.util.Comparator,int,java.lang.Object[]) -> construct
    57:57:java.util.Iterator descendingIterator() -> descendingIterator
    57:57:java.util.NavigableSet descendingSet() -> descendingSet
    686:689:com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    62:65:com.google.common.collect.RegularImmutableSortedSet emptySet(java.util.Comparator) -> emptySet
    639:639:java.lang.Object first() -> first
    621:621:java.lang.Object floor(java.lang.Object) -> floor
    57:57:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    57:57:java.util.SortedSet headSet(java.lang.Object) -> headSet
    542:542:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    548:548:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    634:634:java.lang.Object higher(java.lang.Object) -> higher
    57:57:java.util.Iterator iterator() -> iterator
    644:644:java.lang.Object last() -> last
    615:615:java.lang.Object lower(java.lang.Object) -> lower
    659:659:java.lang.Object pollFirst() -> pollFirst
    674:674:java.lang.Object pollLast() -> pollLast
    732:732:void readObject(java.io.ObjectInputStream) -> readObject
    57:57:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    565:565:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    573:576:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    57:57:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    57:57:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    591:591:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    597:597:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    499:499:int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    508:508:int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object) -> unsafeCompare
    737:737:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableSortedSet$Builder -> com.google.common.collect.ImmutableSortedSet$Builder:
    418:419:void <init>(java.util.Comparator) -> <init>
    411:411:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    434:434:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object) -> add
    449:449:com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object[]) -> add
    411:411:com.google.common.collect.ImmutableSet build() -> build
    490:493:com.google.common.collect.ImmutableSortedSet build() -> build
com.google.common.collect.ImmutableSortedSet$SerializedForm -> com.google.common.collect.ImmutableSortedSet$SerializedForm:
    718:720:void <init>(java.util.Comparator,java.lang.Object[]) -> <init>
    725:725:java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedSetFauxverideShim -> com.google.common.collect.ImmutableSortedSetFauxverideShim:
    39:39:void <init>() -> <init>
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    342:344:java.util.Collection castOrCopyToCollection(java.lang.Iterable) -> castOrCopyToCollection
    790:790:java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    292:292:java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    333:333:java.lang.Object[] toArray(java.lang.Iterable) -> toArray
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    352:356:boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    989:992:void clear(java.util.Iterator) -> clear
    263:273:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    121:121:java.util.Iterator emptyModifiableIterator() -> emptyModifiableIterator
    850:850:java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    301:315:java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    1201:1208:com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> peekingIterator
    976:978:java.lang.Object pollNext(java.util.Iterator) -> pollNext
    198:202:boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    1056:1056:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    163:167:int size(java.util.Iterator) -> size
    127:133:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
com.google.common.collect.Iterators$1 -> com.google.common.collect.Iterators$1:
    133:133:void <init>(java.util.Iterator) -> <init>
    136:136:boolean hasNext() -> hasNext
    141:141:java.lang.Object next() -> next
com.google.common.collect.Iterators$9 -> com.google.common.collect.Iterators$9:
    1056:1056:void <init>(java.lang.Object) -> <init>
    1061:1061:boolean hasNext() -> hasNext
    1066:1070:java.lang.Object next() -> next
com.google.common.collect.Iterators$EmptyModifiableIterator -> com.google.common.collect.Iterators$EmptyModifiableIterator:
    95:96:void <clinit>() -> <clinit>
    95:95:void <init>(java.lang.String,int) -> <init>
    105:105:java.lang.Object next() -> next
    110:110:void remove() -> remove
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String) -> valueOf
    95:95:com.google.common.collect.Iterators$EmptyModifiableIterator[] values() -> values
com.google.common.collect.Iterators$PeekingImpl -> com.google.common.collect.Iterators$PeekingImpl:
    1128:1129:void <init>(java.util.Iterator) -> <init>
    1134:1134:boolean hasNext() -> hasNext
    1139:1144:java.lang.Object next() -> next
    1156:1160:java.lang.Object peek() -> peek
    1150:1151:void remove() -> remove
com.google.common.collect.LinkedHashMultimap -> com.google.common.collect.LinkedHashMultimap:
    77:77:void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$200
    77:77:com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap) -> access$300
    77:77:void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$400
    77:77:void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> access$500
    77:77:void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> access$600
    76:76:java.util.Map asMap() -> asMap
    542:543:void clear() -> clear
    76:76:boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    76:76:java.util.Collection createCollection() -> createCollection
    236:236:java.util.Set createCollection() -> createCollection
    250:250:java.util.Collection createCollection(java.lang.Object) -> createCollection
    139:139:void deleteFromMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> deleteFromMultimap
    135:135:void deleteFromValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> deleteFromValueSet
    279:279:java.util.Set entries() -> entries
    506:506:java.util.Iterator entryIterator() -> entryIterator
    76:76:boolean equals(java.lang.Object) -> equals
    76:76:java.util.Set get(java.lang.Object) -> get
    76:76:int hashCode() -> hashCode
    294:294:java.util.Set keySet() -> keySet
    76:76:boolean put(java.lang.Object,java.lang.Object) -> put
    566:585:void readObject(java.io.ObjectInputStream) -> readObject
    76:76:boolean remove(java.lang.Object,java.lang.Object) -> remove
    76:76:int size() -> size
    130:131:void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> succeedsInMultimap
    125:126:void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> succeedsInValueSet
    76:76:java.lang.String toString() -> toString
    552:560:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.LinkedHashMultimap$1 -> com.google.common.collect.LinkedHashMultimap$1:
    506:507:void <init>(com.google.common.collect.LinkedHashMultimap) -> <init>
    512:512:boolean hasNext() -> hasNext
    506:506:java.lang.Object next() -> next
    517:522:java.util.Map$Entry next() -> next
    528:530:void remove() -> remove
com.google.common.collect.LinkedHashMultimap$ValueEntry -> com.google.common.collect.LinkedHashMultimap$ValueEntry:
    165:167:void <init>(java.lang.Object,java.lang.Object,int,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> <init>
    195:195:com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap() -> getPredecessorInMultimap
    176:176:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    199:199:com.google.common.collect.LinkedHashMultimap$ValueEntry getSuccessorInMultimap() -> getSuccessorInMultimap
    181:181:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    171:171:boolean matchesValue(java.lang.Object,int) -> matchesValue
    207:207:void setPredecessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setPredecessorInMultimap
    186:186:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    203:203:void setSuccessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> setSuccessorInMultimap
    191:191:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
com.google.common.collect.LinkedHashMultimap$ValueSet -> com.google.common.collect.LinkedHashMultimap$ValueSet:
    319:336:void <init>(com.google.common.collect.LinkedHashMultimap,java.lang.Object,int) -> <init>
    311:311:com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$000
    311:311:int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet) -> access$100
    425:442:boolean add(java.lang.Object) -> add
    491:500:void clear() -> clear
    412:416:boolean contains(java.lang.Object) -> contains
    345:345:com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> getPredecessorInValueSet
    350:350:com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> getSuccessorInValueSet
    365:365:java.util.Iterator iterator() -> iterator
    340:340:int mask() -> mask
    447:458:void rehashIfNecessary() -> rehashIfNecessary
    466:482:boolean remove(java.lang.Object) -> remove
    355:355:void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setPredecessorInValueSet
    360:360:void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> setSuccessorInValueSet
    407:407:int size() -> size
com.google.common.collect.LinkedHashMultimap$ValueSet$1 -> com.google.common.collect.LinkedHashMultimap$ValueSet$1:
    365:368:void <init>(com.google.common.collect.LinkedHashMultimap$ValueSet) -> <init>
    371:372:void checkForComodification() -> checkForComodification
    378:379:boolean hasNext() -> hasNext
    384:390:java.lang.Object next() -> next
    396:400:void remove() -> remove
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    148:151:int computeArrayListCapacity(int) -> computeArrayListCapacity
    953:973:boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    990:996:int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    1004:1013:int indexOfRandomAccess(java.util.List,java.lang.Object) -> indexOfRandomAccess
    1023:1029:int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
    1038:1045:int lastIndexOfRandomAccess(java.util.List,java.lang.Object) -> lastIndexOfRandomAccess
    82:82:java.util.ArrayList newArrayList() -> newArrayList
    125:129:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    141:142:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    98:110:void <init>() -> <init>
    178:183:com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    188:188:int getConcurrencyLevel() -> getConcurrencyLevel
    154:154:int getInitialCapacity() -> getInitialCapacity
    129:129:com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    219:219:com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> getKeyStrength
    265:265:com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> getValueStrength
    144:149:com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    122:124:com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence) -> keyEquivalence
    280:283:java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    209:213:com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setKeyStrength
    255:259:com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> setValueStrength
    292:308:java.lang.String toString() -> toString
    205:205:com.google.common.collect.MapMaker weakKeys() -> weakKeys
com.google.common.collect.MapMakerInternalMap -> com.google.common.collect.MapMakerInternalMap:
    1005:1005:void <clinit>() -> <clinit>
    160:192:void <init>(com.google.common.collect.MapMaker,com.google.common.collect.MapMakerInternalMap$InternalEntryHelper) -> <init>
    69:69:java.util.ArrayList access$900(java.util.Collection) -> access$900
    2473:2474:void clear() -> clear
    2363:2364:boolean containsKey(java.lang.Object) -> containsKey
    2378:2395:boolean containsValue(java.lang.Object) -> containsValue
    1074:1075:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    199:214:com.google.common.collect.MapMakerInternalMap create(com.google.common.collect.MapMaker) -> create
    1115:1115:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> createSegment
    2498:2499:java.util.Set entrySet() -> entrySet
    2342:2343:java.lang.Object get(java.lang.Object) -> get
    1123:1126:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1079:1080:int hash(java.lang.Object) -> hash
    2307:2320:boolean isEmpty() -> isEmpty
    1100:1100:boolean isLiveForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isLiveForTesting
    2482:2483:java.util.Set keySet() -> keySet
    2282:2282:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    1131:1131:com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int) -> newSegmentArray
    2408:2411:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2425:2426:void putAll(java.util.Map) -> putAll
    2417:2420:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    1090:1091:void reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> reclaimKey
    1084:1086:void reclaimValue(com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    2436:2437:java.lang.Object remove(java.lang.Object) -> remove
    2446:2447:boolean remove(java.lang.Object,java.lang.Object) -> remove
    2453:2459:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    2465:2468:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1111:1111:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> segmentFor
    2329:2334:int size() -> size
    2825:2826:java.util.ArrayList toArrayList(java.util.Collection) -> toArrayList
    385:385:com.google.common.collect.MapMakerInternalMap$WeakValueReference unsetWeakValueReference() -> unsetWeakValueReference
    2292:2292:com.google.common.base.Equivalence valueEquivalence() -> valueEquivalence
    2287:2287:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
    2490:2491:java.util.Collection values() -> values
    2835:2839:java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.MapMakerInternalMap$1 -> com.google.common.collect.MapMakerInternalMap$1:
    1006:1006:void <init>() -> <init>
    1006:1006:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1006:1006:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy -> com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy:
    2866:2872:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2848:2848:java.lang.Object delegate() -> delegate
    2848:2848:java.util.Map delegate() -> delegate
    2877:2877:java.util.concurrent.ConcurrentMap delegate() -> delegate
    2903:2908:void readEntries(java.io.ObjectInputStream) -> readEntries
    2891:2897:com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) -> readMapMaker
    2881:2886:void writeMapTo(java.io.ObjectOutputStream) -> writeMapTo
com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractStrongKeyEntry:
    344:347:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    357:357:int getHash() -> getHash
    352:352:java.lang.Object getKey() -> getKey
    362:362:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry -> com.google.common.collect.MapMakerInternalMap$AbstractWeakKeyEntry:
    652:654:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    664:664:int getHash() -> getHash
    659:659:java.lang.Object getKey() -> getKey
    669:669:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
com.google.common.collect.MapMakerInternalMap$DummyInternalEntry -> com.google.common.collect.MapMakerInternalMap$DummyInternalEntry:
    976:977:void <init>() -> <init>
    987:987:int getHash() -> getHash
    992:992:java.lang.Object getKey() -> getKey
    974:974:com.google.common.collect.MapMakerInternalMap$InternalEntry getNext() -> getNext
    982:982:com.google.common.collect.MapMakerInternalMap$DummyInternalEntry getNext() -> getNext
    997:997:java.lang.Object getValue() -> getValue
com.google.common.collect.MapMakerInternalMap$EntryIterator -> com.google.common.collect.MapMakerInternalMap$EntryIterator:
    2675:2675:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2675:2675:java.lang.Object next() -> next
    2679:2679:java.util.Map$Entry next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> com.google.common.collect.MapMakerInternalMap$EntrySet:
    2760:2760:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2804:2804:void clear() -> clear
    2769:2779:boolean contains(java.lang.Object) -> contains
    2799:2799:boolean isEmpty() -> isEmpty
    2764:2764:java.util.Iterator iterator() -> iterator
    2784:2789:boolean remove(java.lang.Object) -> remove
    2794:2794:int size() -> size
com.google.common.collect.MapMakerInternalMap$HashIterator -> com.google.common.collect.MapMakerInternalMap$HashIterator:
    2514:2517:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2524:2539:void advance() -> advance
    2576:2587:boolean advanceTo(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> advanceTo
    2592:2592:boolean hasNext() -> hasNext
    2596:2601:com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> nextEntry
    2548:2550:boolean nextInChain() -> nextInChain
    2560:2562:boolean nextInTable() -> nextInTable
    2606:2608:void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> com.google.common.collect.MapMakerInternalMap$KeyIterator:
    2612:2612:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2616:2616:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> com.google.common.collect.MapMakerInternalMap$KeySet:
    2684:2684:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2713:2713:void clear() -> clear
    2703:2703:boolean contains(java.lang.Object) -> contains
    2698:2698:boolean isEmpty() -> isEmpty
    2688:2688:java.util.Iterator iterator() -> iterator
    2708:2708:boolean remove(java.lang.Object) -> remove
    2693:2693:int size() -> size
com.google.common.collect.MapMakerInternalMap$SafeToArraySet -> com.google.common.collect.MapMakerInternalMap$SafeToArraySet:
    2808:2808:void <init>() -> <init>
    2808:2808:void <init>(com.google.common.collect.MapMakerInternalMap$1) -> <init>
    2814:2814:java.lang.Object[] toArray() -> toArray
    2819:2819:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$Segment -> com.google.common.collect.MapMakerInternalMap$Segment:
    1205:1210:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1773:1787:void clear() -> clear
    1379:1379:void clearReferenceQueue(java.lang.ref.ReferenceQueue) -> clearReferenceQueue
    1436:1444:boolean containsKey(java.lang.Object,int) -> containsKey
    1454:1473:boolean containsValue(java.lang.Object) -> containsValue
    1235:1235:com.google.common.collect.MapMakerInternalMap$InternalEntry copyEntry(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyEntry
    1354:1357:void drainKeyReferenceQueue(java.lang.ref.ReferenceQueue) -> drainKeyReferenceQueue
    1368:1371:void drainValueReferenceQueue(java.lang.ref.ReferenceQueue) -> drainValueReferenceQueue
    1536:1599:void expand() -> expand
    1419:1431:java.lang.Object get(java.lang.Object,int) -> get
    1392:1404:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry(java.lang.Object,int) -> getEntry
    1385:1386:com.google.common.collect.MapMakerInternalMap$InternalEntry getFirst(int) -> getFirst
    1414:1414:com.google.common.collect.MapMakerInternalMap$InternalEntry getLiveEntry(java.lang.Object,int) -> getLiveEntry
    1949:1955:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValue
    1334:1334:java.lang.Object getLiveValueForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> getLiveValueForTesting
    1243:1248:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    1940:1940:boolean isCollected(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> isCollected
    1239:1239:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    1968:1969:void postReadCleanup() -> postReadCleanup
    1979:1979:void preWriteCleanup() -> preWriteCleanup
    1477:1530:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    1822:1843:boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$InternalEntry,int) -> reclaimKey
    1849:1877:boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakValueReference) -> reclaimValue
    1692:1728:java.lang.Object remove(java.lang.Object,int) -> remove
    1732:1769:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    1805:1815:com.google.common.collect.MapMakerInternalMap$InternalEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> removeFromChain
    1603:1646:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    1650:1687:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    1983:1983:void runCleanup() -> runCleanup
    1987:1993:void runLockedCleanup() -> runLockedCleanup
    1230:1230:void setValue(com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    1341:1346:void tryDrainReferenceQueues() -> tryDrainReferenceQueues
com.google.common.collect.MapMakerInternalMap$SerializationProxy -> com.google.common.collect.MapMakerInternalMap$SerializationProxy:
    2927:2927:void <init>(com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.collect.MapMakerInternalMap$Strength,com.google.common.base.Equivalence,com.google.common.base.Equivalence,int,java.util.concurrent.ConcurrentMap) -> <init>
    2937:2940:void readObject(java.io.ObjectInputStream) -> readObject
    2944:2944:java.lang.Object readResolve() -> readResolve
    2932:2933:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.MapMakerInternalMap$Strength -> com.google.common.collect.MapMakerInternalMap$Strength:
    244:252:void <clinit>() -> <clinit>
    244:244:void <init>(java.lang.String,int) -> <init>
    244:244:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    244:244:com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    244:244:com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
com.google.common.collect.MapMakerInternalMap$Strength$1 -> com.google.common.collect.MapMakerInternalMap$Strength$1:
    245:245:void <init>(java.lang.String,int) -> <init>
    248:248:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$Strength$2 -> com.google.common.collect.MapMakerInternalMap$Strength$2:
    252:252:void <init>(java.lang.String,int) -> <init>
    255:255:com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry:
    392:395:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> <init>
    409:411:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    401:401:java.lang.Object getValue() -> getValue
    405:405:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper:
    419:419:void <clinit>() -> <clinit>
    416:416:void <init>() -> <init>
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    451:451:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> copy
    423:423:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry$Helper instance() -> instance
    428:428:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    416:416:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    468:468:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry) -> newEntry
    416:416:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    443:443:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    416:416:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    459:459:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry,java.lang.Object) -> setValue
    433:433:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueSegment:
    2007:2007:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    1999:1999:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2018:2018:com.google.common.collect.MapMakerInternalMap$StrongKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    1999:1999:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry:
    478:481:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> <init>
    502:503:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    486:486:java.lang.Object getValue() -> getValue
    509:509:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    495:497:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper:
    516:516:void <clinit>() -> <clinit>
    513:513:void <init>() -> <init>
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    547:550:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> copy
    520:520:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry$Helper instance() -> instance
    525:525:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    513:513:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    565:565:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry) -> newEntry
    513:513:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    539:539:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    513:513:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    556:556:void setValue(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry,java.lang.Object) -> setValue
    530:530:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment:
    2025:2032:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2023:2023:java.lang.ref.ReferenceQueue access$100(com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueSegment) -> access$100
    2023:2023:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2048:2048:com.google.common.collect.MapMakerInternalMap$StrongKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2083:2083:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2078:2078:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2023:2023:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$ValueIterator -> com.google.common.collect.MapMakerInternalMap$ValueIterator:
    2620:2620:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2624:2624:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$Values -> com.google.common.collect.MapMakerInternalMap$Values:
    2718:2718:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    2742:2742:void clear() -> clear
    2737:2737:boolean contains(java.lang.Object) -> contains
    2732:2732:boolean isEmpty() -> isEmpty
    2722:2722:java.util.Iterator iterator() -> iterator
    2727:2727:int size() -> size
    2750:2750:java.lang.Object[] toArray() -> toArray
    2755:2755:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry:
    757:764:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> <init>
    779:781:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    770:770:java.lang.Object getValue() -> getValue
    774:774:void setValue(java.lang.Object) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper:
    789:789:void <clinit>() -> <clinit>
    786:786:void <init>() -> <init>
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    820:824:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> copy
    793:793:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry$Helper instance() -> instance
    798:798:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    786:786:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    839:839:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry) -> newEntry
    786:786:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    812:812:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    786:786:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    830:830:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry,java.lang.Object) -> setValue
    803:803:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment:
    2113:2120:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2111:2111:java.lang.ref.ReferenceQueue access$300(com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueSegment) -> access$300
    2111:2111:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2136:2136:com.google.common.collect.MapMakerInternalMap$WeakKeyStrongValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2146:2146:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2141:2141:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2111:2111:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry:
    849:853:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> <init>
    865:867:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(java.lang.ref.ReferenceQueue,java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    858:858:java.lang.Object getValue() -> getValue
    884:884:com.google.common.collect.MapMakerInternalMap$WeakValueReference getValueReference() -> getValueReference
    877:879:void setValue(java.lang.Object,java.lang.ref.ReferenceQueue) -> setValue
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper:
    891:891:void <clinit>() -> <clinit>
    888:888:void <init>() -> <init>
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry copy(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copy
    921:928:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry copy(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> copy
    895:895:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry$Helper instance() -> instance
    900:900:com.google.common.collect.MapMakerInternalMap$Strength keyStrength() -> keyStrength
    888:888:com.google.common.collect.MapMakerInternalMap$InternalEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> newEntry
    943:943:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry newEntry(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry) -> newEntry
    888:888:com.google.common.collect.MapMakerInternalMap$Segment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    913:913:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment newSegment(com.google.common.collect.MapMakerInternalMap,int,int) -> newSegment
    888:888:void setValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$InternalEntry,java.lang.Object) -> setValue
    934:934:void setValue(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment,com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry,java.lang.Object) -> setValue
    905:905:com.google.common.collect.MapMakerInternalMap$Strength valueStrength() -> valueStrength
com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment -> com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment:
    2153:2160:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2151:2151:java.lang.ref.ReferenceQueue access$400(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$400
    2151:2151:java.lang.ref.ReferenceQueue access$500(com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueSegment) -> access$500
    2151:2151:com.google.common.collect.MapMakerInternalMap$InternalEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2181:2181:com.google.common.collect.MapMakerInternalMap$WeakKeyWeakValueEntry castForTesting(com.google.common.collect.MapMakerInternalMap$InternalEntry) -> castForTesting
    2217:2217:void maybeClearReferenceQueues() -> maybeClearReferenceQueues
    2211:2212:void maybeDrainReferenceQueues() -> maybeDrainReferenceQueues
    2151:2151:com.google.common.collect.MapMakerInternalMap$Segment self() -> self
com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl -> com.google.common.collect.MapMakerInternalMap$WeakValueReferenceImpl:
    1033:1034:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> <init>
    1044:1044:com.google.common.collect.MapMakerInternalMap$WeakValueReference copyFor(java.lang.ref.ReferenceQueue,com.google.common.collect.MapMakerInternalMap$InternalEntry) -> copyFor
    1039:1039:com.google.common.collect.MapMakerInternalMap$InternalEntry getEntry() -> getEntry
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> com.google.common.collect.MapMakerInternalMap$WriteThroughEntry:
    2636:2638:void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object) -> <init>
    2654:2656:boolean equals(java.lang.Object) -> equals
    2643:2643:java.lang.Object getKey() -> getKey
    2648:2648:java.lang.Object getValue() -> getValue
    2664:2664:int hashCode() -> hashCode
    2669:2670:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    225:225:int capacity(int) -> capacity
    3484:3486:boolean equalsImpl(java.util.Map,java.lang.Object) -> equalsImpl
    1252:1252:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    112:112:java.util.Iterator keyIterator(java.util.Iterator) -> keyIterator
    3560:3560:java.lang.Object keyOrNull(java.util.Map$Entry) -> keyOrNull
    249:249:java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    3412:3414:boolean safeContainsKey(java.util.Map,java.lang.Object) -> safeContainsKey
    3399:3401:java.lang.Object safeGet(java.util.Map,java.lang.Object) -> safeGet
    3425:3427:java.lang.Object safeRemove(java.util.Map,java.lang.Object) -> safeRemove
    3493:3502:java.lang.String toStringImpl(java.util.Map) -> toStringImpl
    108:108:com.google.common.base.Function valueFunction() -> valueFunction
    121:121:java.util.Iterator valueIterator(java.util.Iterator) -> valueIterator
com.google.common.collect.Maps$1 -> com.google.common.collect.Maps$1:
    112:112:void <init>(java.util.Iterator) -> <init>
    112:112:java.lang.Object transform(java.lang.Object) -> transform
    115:115:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$2 -> com.google.common.collect.Maps$2:
    121:121:void <init>(java.util.Iterator) -> <init>
    121:121:java.lang.Object transform(java.lang.Object) -> transform
    124:124:java.lang.Object transform(java.util.Map$Entry) -> transform
com.google.common.collect.Maps$DescendingMap -> com.google.common.collect.Maps$DescendingMap:
    3841:3841:void <init>() -> <init>
    3904:3904:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    3909:3909:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    3856:3862:java.util.Comparator comparator() -> comparator
    3970:3970:java.util.Set createEntrySet() -> createEntrySet
    3840:3840:java.lang.Object delegate() -> delegate
    3848:3848:java.util.Map delegate() -> delegate
    3988:3988:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    3944:3944:java.util.NavigableMap descendingMap() -> descendingMap
    3951:3952:java.util.Set entrySet() -> entrySet
    3924:3924:java.util.Map$Entry firstEntry() -> firstEntry
    3874:3874:java.lang.Object firstKey() -> firstKey
    3894:3894:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    3899:3899:java.lang.Object floorKey(java.lang.Object) -> floorKey
    4004:4004:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    4009:4009:java.util.SortedMap headMap(java.lang.Object) -> headMap
    3914:3914:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    3919:3919:java.lang.Object higherKey(java.lang.Object) -> higherKey
    3975:3975:java.util.Set keySet() -> keySet
    3929:3929:java.util.Map$Entry lastEntry() -> lastEntry
    3879:3879:java.lang.Object lastKey() -> lastKey
    3884:3884:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    3889:3889:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    3982:3983:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3934:3934:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3939:3939:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    3869:3869:com.google.common.collect.Ordering reverse(java.util.Comparator) -> reverse
    3994:3994:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3999:3999:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    4014:4014:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    4019:4019:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    4029:4029:java.lang.String toString() -> toString
    4024:4024:java.util.Collection values() -> values
com.google.common.collect.Maps$DescendingMap$1EntrySetImpl -> com.google.common.collect.Maps$DescendingMap$1EntrySetImpl:
    3959:3959:void <init>(com.google.common.collect.Maps$DescendingMap) -> <init>
    3967:3967:java.util.Iterator iterator() -> iterator
    3962:3962:java.util.Map map() -> map
com.google.common.collect.Maps$EntryFunction -> com.google.common.collect.Maps$EntryFunction:
    84:92:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    84:84:void <init>(java.lang.String,int,com.google.common.collect.Maps$1) -> <init>
    84:84:com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String) -> valueOf
    84:84:com.google.common.collect.Maps$EntryFunction[] values() -> values
com.google.common.collect.Maps$EntryFunction$1 -> com.google.common.collect.Maps$EntryFunction$1:
    85:85:void <init>(java.lang.String,int) -> <init>
    85:85:java.lang.Object apply(java.lang.Object) -> apply
    89:89:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntryFunction$2 -> com.google.common.collect.Maps$EntryFunction$2:
    92:92:void <init>(java.lang.String,int) -> <init>
    92:92:java.lang.Object apply(java.lang.Object) -> apply
    96:96:java.lang.Object apply(java.util.Map$Entry) -> apply
com.google.common.collect.Maps$EntrySet -> com.google.common.collect.Maps$EntrySet:
    3774:3774:void <init>() -> <init>
    3784:3784:void clear() -> clear
    3789:3793:boolean contains(java.lang.Object) -> contains
    3800:3800:boolean isEmpty() -> isEmpty
    3805:3807:boolean remove(java.lang.Object) -> remove
    3815:3818:boolean removeAll(java.util.Collection) -> removeAll
    3825:3835:boolean retainAll(java.util.Collection) -> retainAll
    3779:3779:int size() -> size
com.google.common.collect.Maps$IteratorBasedAbstractMap -> com.google.common.collect.Maps$IteratorBasedAbstractMap:
    3367:3367:void <init>() -> <init>
    3390:3390:void clear() -> clear
    3375:3375:java.util.Set entrySet() -> entrySet
com.google.common.collect.Maps$IteratorBasedAbstractMap$1 -> com.google.common.collect.Maps$IteratorBasedAbstractMap$1:
    3375:3375:void <init>(com.google.common.collect.Maps$IteratorBasedAbstractMap) -> <init>
    3383:3383:java.util.Iterator iterator() -> iterator
    3378:3378:java.util.Map map() -> map
com.google.common.collect.Maps$KeySet -> com.google.common.collect.Maps$KeySet:
    3515:3516:void <init>(java.util.Map) -> <init>
    3554:3554:void clear() -> clear
    3540:3540:boolean contains(java.lang.Object) -> contains
    3535:3535:boolean isEmpty() -> isEmpty
    3525:3525:java.util.Iterator iterator() -> iterator
    3520:3520:java.util.Map map() -> map
    3545:3546:boolean remove(java.lang.Object) -> remove
    3530:3530:int size() -> size
com.google.common.collect.Maps$NavigableKeySet -> com.google.common.collect.Maps$NavigableKeySet:
    3612:3612:void <init>(java.util.NavigableMap) -> <init>
    3632:3632:java.lang.Object ceiling(java.lang.Object) -> ceiling
    3657:3657:java.util.Iterator descendingIterator() -> descendingIterator
    3652:3652:java.util.NavigableSet descendingSet() -> descendingSet
    3627:3627:java.lang.Object floor(java.lang.Object) -> floor
    3673:3673:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    3678:3678:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3637:3637:java.lang.Object higher(java.lang.Object) -> higher
    3622:3622:java.lang.Object lower(java.lang.Object) -> lower
    3609:3609:java.util.Map map() -> map
    3609:3609:java.util.SortedMap map() -> map
    3617:3617:java.util.NavigableMap map() -> map
    3642:3642:java.lang.Object pollFirst() -> pollFirst
    3647:3647:java.lang.Object pollLast() -> pollLast
    3663:3663:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    3668:3668:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3683:3683:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    3688:3688:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Maps$SortedKeySet -> com.google.common.collect.Maps$SortedKeySet:
    3570:3570:void <init>(java.util.SortedMap) -> <init>
    3580:3580:java.util.Comparator comparator() -> comparator
    3600:3600:java.lang.Object first() -> first
    3605:3605:java.lang.Object last() -> last
com.google.common.collect.Maps$Values -> com.google.common.collect.Maps$Values:
    3695:3696:void <init>(java.util.Map) -> <init>
    3770:3770:void clear() -> clear
    3765:3765:boolean contains(java.lang.Object) -> contains
    3760:3760:boolean isEmpty() -> isEmpty
    3705:3705:java.util.Iterator iterator() -> iterator
    3700:3700:java.util.Map map() -> map
    3711:3715:boolean remove(java.lang.Object) -> remove
    3726:3734:boolean removeAll(java.util.Collection) -> removeAll
    3741:3749:boolean retainAll(java.util.Collection) -> retainAll
    3755:3755:int size() -> size
com.google.common.collect.Maps$ViewCachingAbstractMap -> com.google.common.collect.Maps$ViewCachingAbstractMap:
    3327:3327:void <init>() -> <init>
    3363:3363:java.util.Collection createValues() -> createValues
    3338:3339:java.util.Set entrySet() -> entrySet
    3358:3359:java.util.Collection values() -> values
com.google.common.collect.MultimapBuilder -> com.google.common.collect.MultimapBuilder:
    64:64:void <init>(com.google.common.collect.MultimapBuilder$1) -> <init>
    70:70:void <init>() -> <init>
    76:76:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys() -> hashKeys
    86:87:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys(int) -> hashKeys
com.google.common.collect.MultimapBuilder$1 -> com.google.common.collect.MultimapBuilder$1:
    87:87:void <init>(int) -> <init>
    90:90:java.util.Map createMap() -> createMap
com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier -> com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier:
    228:229:void <init>(int) -> <init>
    225:225:java.lang.Object get() -> get
    234:234:java.util.Set get() -> get
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys:
    276:276:void <init>() -> <init>
    339:339:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues() -> linkedHashSetValues
    349:350:com.google.common.collect.MultimapBuilder$SetMultimapBuilder linkedHashSetValues(int) -> linkedHashSetValues
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4 -> com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$4:
    350:350:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int) -> <init>
    353:354:com.google.common.collect.SetMultimap build() -> build
com.google.common.collect.MultimapBuilder$SetMultimapBuilder -> com.google.common.collect.MultimapBuilder$SetMultimapBuilder:
    438:438:void <init>() -> <init>
com.google.common.collect.Multimaps -> com.google.common.collect.Multimaps:
    2070:2072:boolean equalsImpl(com.google.common.collect.Multimap,java.lang.Object) -> equalsImpl
    298:298:com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSetMultimap
com.google.common.collect.Multimaps$CustomSetMultimap -> com.google.common.collect.Multimaps$CustomSetMultimap:
    305:306:void <init>(java.util.Map,com.google.common.base.Supplier) -> <init>
    316:316:java.util.Map createAsMap() -> createAsMap
    301:301:java.util.Collection createCollection() -> createCollection
    321:321:java.util.Set createCollection() -> createCollection
    311:311:java.util.Set createKeySet() -> createKeySet
    357:360:void readObject(java.io.ObjectInputStream) -> readObject
    326:331:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    337:342:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    349:351:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Multimaps$Entries -> com.google.common.collect.Multimaps$Entries:
    1667:1667:void <init>() -> <init>
    1695:1695:void clear() -> clear
    1677:1679:boolean contains(java.lang.Object) -> contains
    1686:1688:boolean remove(java.lang.Object) -> remove
    1672:1672:int size() -> size
com.google.common.collect.NaturalOrdering -> com.google.common.collect.NaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    74:74:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    36:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    66:66:java.lang.Object readResolve() -> readResolve
    61:61:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    225:225:java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
    209:209:java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> checkElementsNotNull
    215:215:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> checkElementsNotNull
    194:195:java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> fillArray
    59:59:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    128:134:java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> toArrayImpl
    151:157:java.lang.Object[] toArrayImpl(java.lang.Object[],int,int,java.lang.Object[]) -> toArrayImpl
    174:174:java.lang.Object[] toArrayImpl(java.util.Collection) -> toArrayImpl
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    391:391:void <init>() -> <init>
    182:184:com.google.common.collect.Ordering from(java.util.Comparator) -> from
    162:162:com.google.common.collect.Ordering natural() -> natural
    449:449:com.google.common.collect.Ordering onResultOf(com.google.common.base.Function) -> onResultOf
    405:405:com.google.common.collect.Ordering reverse() -> reverse
    841:843:java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
com.google.common.collect.Ordering$ArbitraryOrdering -> com.google.common.collect.Ordering$ArbitraryOrdering:
    323:327:void <init>() -> <init>
    353:362:int compare(java.lang.Object,java.lang.Object) -> compare
    330:336:java.lang.Integer getUid(java.lang.Object) -> getUid
    381:381:int identityHashCode(java.lang.Object) -> identityHashCode
com.google.common.collect.Platform -> com.google.common.collect.Platform:
    92:92:java.lang.Object[] copy(java.lang.Object[],int,int,java.lang.Object[]) -> copy
    81:86:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    34:34:java.util.Map newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    47:47:java.util.Set newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    42:42:java.util.Map newLinkedHashMapWithExpectedSize(int) -> newLinkedHashMapWithExpectedSize
    55:55:java.util.Set newLinkedHashSetWithExpectedSize(int) -> newLinkedHashSetWithExpectedSize
    101:101:com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker) -> tryWeakKeys
com.google.common.collect.Range -> com.google.common.collect.Range:
    298:298:void <clinit>() -> <clinit>
    352:358:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut) -> <init>
    307:307:com.google.common.collect.Range all() -> all
    278:278:com.google.common.collect.Range atLeast(java.lang.Comparable) -> atLeast
    243:243:com.google.common.collect.Range atMost(java.lang.Comparable) -> atMost
    712:712:int compareOrThrow(java.lang.Comparable,java.lang.Comparable) -> compareOrThrow
    433:435:boolean contains(java.lang.Comparable) -> contains
    156:156:com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut) -> create
    288:294:com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> downTo
    667:669:boolean equals(java.lang.Object) -> equals
    269:269:com.google.common.collect.Range greaterThan(java.lang.Comparable) -> greaterThan
    364:364:boolean hasLowerBound() -> hasLowerBound
    390:390:boolean hasUpperBound() -> hasUpperBound
    677:677:int hashCode() -> hashCode
    549:558:com.google.common.collect.Range intersection(com.google.common.collect.Range) -> intersection
    528:529:boolean isConnected(com.google.common.collect.Range) -> isConnected
    234:234:com.google.common.collect.Range lessThan(java.lang.Comparable) -> lessThan
    374:374:java.lang.Comparable lowerEndpoint() -> lowerEndpoint
    218:225:com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> range
    703:704:java.lang.Object readResolve() -> readResolve
    686:686:java.lang.String toString() -> toString
    690:694:java.lang.String toString(com.google.common.collect.Cut,com.google.common.collect.Cut) -> toString
    253:259:com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> upTo
    400:400:java.lang.Comparable upperEndpoint() -> upperEndpoint
com.google.common.collect.Range$1 -> com.google.common.collect.Range$1:
    253:253:void <clinit>() -> <clinit>
com.google.common.collect.RangeGwtSerializationDependencies -> com.google.common.collect.RangeGwtSerializationDependencies:
    32:32:void <init>() -> <init>
com.google.common.collect.RegularImmutableList -> com.google.common.collect.RegularImmutableList:
    32:32:void <clinit>() -> <clinit>
    37:39:void <init>(java.lang.Object[],int) -> <init>
    69:70:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    77:78:java.lang.Object get(int) -> get
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    44:44:int size() -> size
com.google.common.collect.RegularImmutableMap -> com.google.common.collect.RegularImmutableMap:
    47:47:void <clinit>() -> <clinit>
    192:195:void <init>(java.lang.Object,java.lang.Object[],int) -> <init>
    74:82:com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[]) -> create
    266:266:com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    93:171:java.lang.Object createHashTable(java.lang.Object[],int,int,int) -> createHashTable
    342:344:com.google.common.collect.ImmutableSet createKeySet() -> createKeySet
    418:418:com.google.common.collect.ImmutableCollection createValues() -> createValues
    181:181:java.lang.IllegalArgumentException duplicateKeyException(java.lang.Object,java.lang.Object,java.lang.Object[],int) -> duplicateKeyException
    207:207:java.lang.Object get(java.lang.Object) -> get
    219:258:java.lang.Object get(java.lang.Object,java.lang.Object[],int,int,java.lang.Object) -> get
    200:200:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet -> com.google.common.collect.RegularImmutableMap$EntrySet:
    275:279:void <init>(com.google.common.collect.ImmutableMap,java.lang.Object[],int,int) -> <init>
    269:269:int access$000(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$000
    269:269:java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$100
    269:269:int access$200(com.google.common.collect.RegularImmutableMap$EntrySet) -> access$200
    319:323:boolean contains(java.lang.Object) -> contains
    289:289:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    294:294:com.google.common.collect.ImmutableList createAsList() -> createAsList
    269:269:java.util.Iterator iterator() -> iterator
    284:284:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    335:335:int size() -> size
com.google.common.collect.RegularImmutableMap$EntrySet$1 -> com.google.common.collect.RegularImmutableMap$EntrySet$1:
    294:294:void <init>(com.google.common.collect.RegularImmutableMap$EntrySet) -> <init>
    294:294:java.lang.Object get(int) -> get
    297:302:java.util.Map$Entry get(int) -> get
    307:307:int size() -> size
com.google.common.collect.RegularImmutableMap$KeySet -> com.google.common.collect.RegularImmutableMap$KeySet:
    379:381:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList) -> <init>
    396:396:com.google.common.collect.ImmutableList asList() -> asList
    401:401:boolean contains(java.lang.Object) -> contains
    391:391:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    375:375:java.util.Iterator iterator() -> iterator
    386:386:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    411:411:int size() -> size
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList -> com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList:
    352:355:void <init>(java.lang.Object[],int,int) -> <init>
    360:361:java.lang.Object get(int) -> get
    371:371:int size() -> size
com.google.common.collect.RegularImmutableSet -> com.google.common.collect.RegularImmutableSet:
    31:31:void <clinit>() -> <clinit>
    42:47:void <init>(java.lang.Object[],int,java.lang.Object[],int,int) -> <init>
    52:61:boolean contains(java.lang.Object) -> contains
    94:95:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    100:100:com.google.common.collect.ImmutableList createAsList() -> createAsList
    110:110:int hashCode() -> hashCode
    79:79:java.lang.Object[] internalArray() -> internalArray
    89:89:int internalArrayEnd() -> internalArrayEnd
    28:28:java.util.Iterator iterator() -> iterator
    74:74:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    69:69:int size() -> size
com.google.common.collect.RegularImmutableSortedSet -> com.google.common.collect.RegularImmutableSortedSet:
    42:43:void <clinit>() -> <clinit>
    48:49:void <init>(com.google.common.collect.ImmutableList,java.util.Comparator) -> <init>
    304:304:com.google.common.collect.ImmutableList asList() -> asList
    225:226:java.lang.Object ceiling(java.lang.Object) -> ceiling
    86:86:boolean contains(java.lang.Object) -> contains
    98:133:boolean containsAll(java.util.Collection) -> containsAll
    155:155:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    309:312:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> createDescendingSet
    39:39:java.util.Iterator descendingIterator() -> descendingIterator
    75:75:com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    163:192:boolean equals(java.lang.Object) -> equals
    197:200:java.lang.Object first() -> first
    219:220:java.lang.Object floor(java.lang.Object) -> floor
    278:284:com.google.common.collect.RegularImmutableSortedSet getSubSet(int,int) -> getSubSet
    241:241:int headIndex(java.lang.Object,boolean) -> headIndex
    237:237:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> headSetImpl
    231:232:java.lang.Object higher(java.lang.Object) -> higher
    295:295:int indexOf(java.lang.Object) -> indexOf
    54:54:java.lang.Object[] internalArray() -> internalArray
    64:64:int internalArrayEnd() -> internalArrayEnd
    59:59:int internalArrayStart() -> internalArrayStart
    150:150:boolean isPartialView() -> isPartialView
    39:39:java.util.Iterator iterator() -> iterator
    69:69:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    205:208:java.lang.Object last() -> last
    213:214:java.lang.Object lower(java.lang.Object) -> lower
    80:80:int size() -> size
    252:252:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> subSetImpl
    261:261:int tailIndex(java.lang.Object,boolean) -> tailIndex
    257:257:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> tailSetImpl
    145:145:int unsafeBinarySearch(java.lang.Object) -> unsafeBinarySearch
    274:274:java.util.Comparator unsafeComparator() -> unsafeComparator
com.google.common.collect.ReverseNaturalOrdering -> com.google.common.collect.ReverseNaturalOrdering:
    29:29:void <clinit>() -> <clinit>
    98:98:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    33:38:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    90:90:java.lang.Object readResolve() -> readResolve
    43:43:com.google.common.collect.Ordering reverse() -> reverse
com.google.common.collect.ReverseOrdering -> com.google.common.collect.ReverseOrdering:
    31:32:void <init>(com.google.common.collect.Ordering) -> <init>
    37:37:int compare(java.lang.Object,java.lang.Object) -> compare
    98:100:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    43:43:com.google.common.collect.Ordering reverse() -> reverse
    107:107:java.lang.String toString() -> toString
com.google.common.collect.Serialization -> com.google.common.collect.Serialization:
    173:179:void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int) -> populateMultimap
    47:47:int readCount(java.io.ObjectInputStream) -> readCount
    143:148:void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream) -> writeMultimap
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    1668:1672:boolean equalsImpl(java.util.Set,java.lang.Object) -> equalsImpl
    1654:1655:int hashCodeImpl(java.util.Set) -> hashCodeImpl
    255:255:java.util.Set newConcurrentHashSet() -> newConcurrentHashSet
    164:164:java.util.HashSet newHashSet() -> newHashSet
    241:241:java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    1835:1836:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> removeAllImpl
    1842:1856:boolean removeAllImpl(java.util.Set,java.util.Collection) -> removeAllImpl
    1694:1697:java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet) -> unmodifiableNavigableSet
com.google.common.collect.Sets$ImprovedAbstractSet -> com.google.common.collect.Sets$ImprovedAbstractSet:
    73:73:void <init>() -> <init>
    76:76:boolean removeAll(java.util.Collection) -> removeAll
    81:81:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Sets$UnmodifiableNavigableSet -> com.google.common.collect.Sets$UnmodifiableNavigableSet:
    1705:1707:void <init>(java.util.NavigableSet) -> <init>
    1727:1727:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1700:1700:java.lang.Object delegate() -> delegate
    1700:1700:java.util.Collection delegate() -> delegate
    1700:1700:java.util.Set delegate() -> delegate
    1712:1712:java.util.SortedSet delegate() -> delegate
    1759:1759:java.util.Iterator descendingIterator() -> descendingIterator
    1749:1752:java.util.NavigableSet descendingSet() -> descendingSet
    1722:1722:java.lang.Object floor(java.lang.Object) -> floor
    1771:1771:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1732:1732:java.lang.Object higher(java.lang.Object) -> higher
    1717:1717:java.lang.Object lower(java.lang.Object) -> lower
    1737:1737:java.lang.Object pollFirst() -> pollFirst
    1742:1742:java.lang.Object pollLast() -> pollLast
    1765:1766:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1776:1776:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.SingletonImmutableSet -> com.google.common.collect.SingletonImmutableSet:
    43:44:void <init>(java.lang.Object) -> <init>
    47:50:void <init>(java.lang.Object,int) -> <init>
    60:60:boolean contains(java.lang.Object) -> contains
    80:80:int copyIntoArray(java.lang.Object[],int) -> copyIntoArray
    70:70:com.google.common.collect.ImmutableList createAsList() -> createAsList
    87:89:int hashCode() -> hashCode
    96:96:boolean isHashCodeFast() -> isHashCodeFast
    29:29:java.util.Iterator iterator() -> iterator
    65:65:com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    101:101:java.lang.String toString() -> toString
com.google.common.collect.SortedIterables -> com.google.common.collect.SortedIterables:
    53:55:java.util.Comparator comparator(java.util.SortedSet) -> comparator
    37:47:boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> hasSameComparator
com.google.common.collect.Synchronized -> com.google.common.collect.Synchronized:
    58:58:java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object) -> access$100
    58:58:java.util.Collection access$500(java.util.Collection,java.lang.Object) -> access$500
    58:58:java.util.Map$Entry access$700(java.util.Map$Entry,java.lang.Object) -> access$700
    101:101:java.util.Collection collection(java.util.Collection,java.lang.Object) -> collection
    960:960:java.util.Map map(java.util.Map,java.lang.Object) -> map
    1404:1404:java.util.NavigableMap navigableMap(java.util.NavigableMap,java.lang.Object) -> navigableMap
    1388:1388:java.util.NavigableSet navigableSet(java.util.NavigableSet,java.lang.Object) -> navigableSet
    1592:1592:java.util.Map$Entry nullableSynchronizedEntry(java.util.Map$Entry,java.lang.Object) -> nullableSynchronizedEntry
    210:210:java.util.Set set(java.util.Set,java.lang.Object) -> set
    1092:1092:java.util.SortedMap sortedMap(java.util.SortedMap,java.lang.Object) -> sortedMap
    245:245:java.util.SortedSet sortedSet(java.util.SortedSet,java.lang.Object) -> sortedSet
com.google.common.collect.Synchronized$SynchronizedBiMap -> com.google.common.collect.Synchronized$SynchronizedBiMap:
    1159:1159:java.util.Map delegate() -> delegate
    1173:1173:com.google.common.collect.BiMap delegate() -> delegate
    1159:1159:java.util.Collection values() -> values
    1178:1183:java.util.Set values() -> values
com.google.common.collect.Synchronized$SynchronizedCollection -> com.google.common.collect.Synchronized$SynchronizedCollection:
    105:105:void <init>(java.util.Collection,java.lang.Object,com.google.common.collect.Synchronized$1) -> <init>
    107:107:void <init>(java.util.Collection,java.lang.Object) -> <init>
    118:120:boolean add(java.lang.Object) -> add
    125:127:boolean addAll(java.util.Collection) -> addAll
    132:134:void clear() -> clear
    139:141:boolean contains(java.lang.Object) -> contains
    146:148:boolean containsAll(java.util.Collection) -> containsAll
    113:113:java.util.Collection delegate() -> delegate
    153:155:boolean isEmpty() -> isEmpty
    160:160:java.util.Iterator iterator() -> iterator
    165:167:boolean remove(java.lang.Object) -> remove
    172:174:boolean removeAll(java.util.Collection) -> removeAll
    179:181:boolean retainAll(java.util.Collection) -> retainAll
    186:188:int size() -> size
    193:195:java.lang.Object[] toArray() -> toArray
    200:202:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Synchronized$SynchronizedEntry -> com.google.common.collect.Synchronized$SynchronizedEntry:
    1599:1599:void <init>(java.util.Map$Entry,java.lang.Object) -> <init>
    1605:1605:java.util.Map$Entry delegate() -> delegate
    1610:1612:boolean equals(java.lang.Object) -> equals
    1624:1626:java.lang.Object getKey() -> getKey
    1631:1633:java.lang.Object getValue() -> getValue
    1617:1619:int hashCode() -> hashCode
    1638:1640:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Synchronized$SynchronizedMap -> com.google.common.collect.Synchronized$SynchronizedMap:
    969:969:void <init>(java.util.Map,java.lang.Object) -> <init>
    980:982:void clear() -> clear
    987:989:boolean containsKey(java.lang.Object) -> containsKey
    994:996:boolean containsValue(java.lang.Object) -> containsValue
    975:975:java.util.Map delegate() -> delegate
    1001:1006:java.util.Set entrySet() -> entrySet
    1076:1078:boolean equals(java.lang.Object) -> equals
    1011:1013:java.lang.Object get(java.lang.Object) -> get
    1083:1085:int hashCode() -> hashCode
    1018:1020:boolean isEmpty() -> isEmpty
    1025:1030:java.util.Set keySet() -> keySet
    1035:1037:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    1042:1044:void putAll(java.util.Map) -> putAll
    1049:1051:java.lang.Object remove(java.lang.Object) -> remove
    1056:1058:int size() -> size
    1063:1068:java.util.Collection values() -> values
com.google.common.collect.Synchronized$SynchronizedNavigableMap -> com.google.common.collect.Synchronized$SynchronizedNavigableMap:
    1413:1413:void <init>(java.util.NavigableMap,java.lang.Object) -> <init>
    1423:1425:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    1430:1432:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    1407:1407:java.util.Map delegate() -> delegate
    1407:1407:java.util.SortedMap delegate() -> delegate
    1418:1418:java.util.NavigableMap delegate() -> delegate
    1439:1444:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    1451:1456:java.util.NavigableMap descendingMap() -> descendingMap
    1461:1463:java.util.Map$Entry firstEntry() -> firstEntry
    1468:1470:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    1475:1477:java.lang.Object floorKey(java.lang.Object) -> floorKey
    1482:1484:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    1489:1489:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1494:1496:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    1501:1503:java.lang.Object higherKey(java.lang.Object) -> higherKey
    1529:1529:java.util.Set keySet() -> keySet
    1508:1510:java.util.Map$Entry lastEntry() -> lastEntry
    1515:1517:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    1522:1524:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    1536:1541:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    1546:1548:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    1553:1555:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    1561:1563:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    1568:1568:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1573:1575:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    1580:1580:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedNavigableSet -> com.google.common.collect.Synchronized$SynchronizedNavigableSet:
    1275:1275:void <init>(java.util.NavigableSet,java.lang.Object) -> <init>
    1285:1287:java.lang.Object ceiling(java.lang.Object) -> ceiling
    1270:1270:java.util.Collection delegate() -> delegate
    1270:1270:java.util.Set delegate() -> delegate
    1270:1270:java.util.SortedSet delegate() -> delegate
    1280:1280:java.util.NavigableSet delegate() -> delegate
    1292:1292:java.util.Iterator descendingIterator() -> descendingIterator
    1299:1306:java.util.NavigableSet descendingSet() -> descendingSet
    1311:1313:java.lang.Object floor(java.lang.Object) -> floor
    1318:1320:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    1325:1325:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1330:1332:java.lang.Object higher(java.lang.Object) -> higher
    1337:1339:java.lang.Object lower(java.lang.Object) -> lower
    1344:1346:java.lang.Object pollFirst() -> pollFirst
    1351:1353:java.lang.Object pollLast() -> pollLast
    1359:1362:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    1367:1367:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1372:1374:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    1379:1379:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.Synchronized$SynchronizedObject -> com.google.common.collect.Synchronized$SynchronizedObject:
    65:67:void <init>(java.lang.Object,java.lang.Object) -> <init>
    71:71:java.lang.Object delegate() -> delegate
    78:80:java.lang.String toString() -> toString
    90:92:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Synchronized$SynchronizedSet -> com.google.common.collect.Synchronized$SynchronizedSet:
    216:216:void <init>(java.util.Set,java.lang.Object) -> <init>
    213:213:java.util.Collection delegate() -> delegate
    221:221:java.util.Set delegate() -> delegate
    229:231:boolean equals(java.lang.Object) -> equals
    236:238:int hashCode() -> hashCode
com.google.common.collect.Synchronized$SynchronizedSortedMap -> com.google.common.collect.Synchronized$SynchronizedSortedMap:
    1099:1099:void <init>(java.util.SortedMap,java.lang.Object) -> <init>
    1109:1111:java.util.Comparator comparator() -> comparator
    1095:1095:java.util.Map delegate() -> delegate
    1104:1104:java.util.SortedMap delegate() -> delegate
    1116:1118:java.lang.Object firstKey() -> firstKey
    1123:1125:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1130:1132:java.lang.Object lastKey() -> lastKey
    1137:1139:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1144:1146:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Synchronized$SynchronizedSortedSet -> com.google.common.collect.Synchronized$SynchronizedSortedSet:
    250:250:void <init>(java.util.SortedSet,java.lang.Object) -> <init>
    260:262:java.util.Comparator comparator() -> comparator
    248:248:java.util.Collection delegate() -> delegate
    248:248:java.util.Set delegate() -> delegate
    255:255:java.util.SortedSet delegate() -> delegate
    288:290:java.lang.Object first() -> first
    274:276:java.util.SortedSet headSet(java.lang.Object) -> headSet
    295:297:java.lang.Object last() -> last
    267:269:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    281:283:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.TransformedIterator -> com.google.common.collect.TransformedIterator:
    34:35:void <init>(java.util.Iterator) -> <init>
    42:42:boolean hasNext() -> hasNext
    47:47:java.lang.Object next() -> next
    52:52:void remove() -> remove
com.google.common.collect.TreeRangeSet$RangesByUpperBound -> com.google.common.collect.TreeRangeSet$RangesByUpperBound:
    297:299:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    281:281:com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound) -> access$000
    331:331:java.util.Comparator comparator() -> comparator
    336:336:boolean containsKey(java.lang.Object) -> containsKey
    402:416:java.util.Iterator descendingEntryIterator() -> descendingEntryIterator
    366:383:java.util.Iterator entryIterator() -> entryIterator
    280:280:java.lang.Object get(java.lang.Object) -> get
    341:350:com.google.common.collect.Range get(java.lang.Object) -> get
    280:280:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    321:321:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> headMap
    440:442:boolean isEmpty() -> isEmpty
    432:435:int size() -> size
    280:280:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    303:306:java.util.NavigableMap subMap(com.google.common.collect.Range) -> subMap
    313:316:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> subMap
    280:280:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    326:326:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> tailMap
com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$1:
    383:383:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,java.util.Iterator) -> <init>
    383:383:java.lang.Object computeNext() -> computeNext
    386:393:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 -> com.google.common.collect.TreeRangeSet$RangesByUpperBound$2:
    416:416:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,com.google.common.collect.PeekingIterator) -> <init>
    416:416:java.lang.Object computeNext() -> computeNext
    419:425:java.util.Map$Entry computeNext() -> computeNext
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    35:35:void <init>() -> <init>
    46:46:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    32:32:void <init>() -> <init>
    43:43:void add(java.lang.Object) -> add
    55:55:void set(java.lang.Object) -> set
com.google.common.eventbus.Subscriber -> com.google.common.eventbus.Subscriber:
    112:117:boolean equals(java.lang.Object) -> equals
    107:107:int hashCode() -> hashCode
    87:96:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.eventbus.Subscriber$SynchronizedSubscriber -> com.google.common.eventbus.Subscriber$SynchronizedSubscriber:
    143:145:void invokeSubscriberMethod(java.lang.Object) -> invokeSubscriberMethod
com.google.common.io.Closer$LoggingSuppressor -> com.google.common.io.Closer$LoggingSuppressor:
    244:244:void <clinit>() -> <clinit>
    242:242:void <init>() -> <init>
com.google.common.io.Closer$SuppressingSuppressor -> com.google.common.io.Closer$SuppressingSuppressor:
    261:267:void <clinit>() -> <clinit>
    259:259:void <init>() -> <init>
    271:271:java.lang.reflect.Method addSuppressedMethodOrNull() -> addSuppressedMethodOrNull
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    47:47:int access$000(int[],int,int,int) -> access$000
    47:47:int access$100(int[],int,int,int) -> access$100
    271:272:int constrainToRange(int,int,int) -> constrainToRange
    156:156:int indexOf(int[],int,int,int) -> indexOf
    207:207:int lastIndexOf(int[],int,int,int) -> lastIndexOf
    526:535:int[] toArray(java.util.Collection) -> toArray
com.google.common.primitives.Ints$IntArrayAsList -> com.google.common.primitives.Ints$IntArrayAsList:
    573:576:void <init>(int[],int,int) -> <init>
    598:598:boolean contains(java.lang.Object) -> contains
    649:662:boolean equals(java.lang.Object) -> equals
    562:562:java.lang.Object get(int) -> get
    591:592:java.lang.Integer get(int) -> get
    668:669:int hashCode() -> hashCode
    604:607:int indexOf(java.lang.Object) -> indexOf
    616:619:int lastIndexOf(java.lang.Object) -> lastIndexOf
    562:562:java.lang.Object set(int,java.lang.Object) -> set
    627:631:java.lang.Integer set(int,java.lang.Integer) -> set
    581:581:int size() -> size
    636:641:java.util.List subList(int,int) -> subList
    685:685:int[] toIntArray() -> toIntArray
    676:681:java.lang.String toString() -> toString
com.google.common.primitives.UnsignedBytes -> com.google.common.primitives.UnsignedBytes:
    120:120:int compare(byte,byte) -> compare
    276:276:java.util.Comparator lexicographicalComparatorJavaImpl() -> lexicographicalComparatorJavaImpl
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder:
    288:291:void <clinit>() -> <clinit>
    287:287:void <init>() -> <init>
    438:445:java.util.Comparator getBestComparator() -> getBestComparator
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator:
    411:412:void <clinit>() -> <clinit>
    411:411:void <init>(java.lang.String,int) -> <init>
    411:411:int compare(java.lang.Object,java.lang.Object) -> compare
    416:423:int compare(byte[],byte[]) -> compare
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator valueOf(java.lang.String) -> valueOf
    411:411:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator:
    293:327:void <clinit>() -> <clinit>
    294:294:void <init>(java.lang.String,int) -> <init>
    293:293:int compare(java.lang.Object,java.lang.Object) -> compare
    367:402:int compare(byte[],byte[]) -> compare
    339:360:sun.misc.Unsafe getUnsafe() -> getUnsafe
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator valueOf(java.lang.String) -> valueOf
    293:293:com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] values() -> values
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1 -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1:
    345:345:void <init>() -> <init>
    345:345:java.lang.Object run() -> run
    348:356:sun.misc.Unsafe run() -> run
com.google.common.primitives.UnsignedLongs -> com.google.common.primitives.UnsignedLongs:
    79:79:int compare(long,long) -> compare
com.google.common.reflect.ClassPath -> com.google.common.reflect.ClassPath:
    79:91:void <clinit>() -> <clinit>
    78:78:java.util.logging.Logger access$100() -> access$100
    78:78:com.google.common.base.Splitter access$200() -> access$200
    585:586:java.lang.String getClassName(java.lang.String) -> getClassName
    592:596:java.io.File toFile(java.net.URL) -> toFile
com.google.common.reflect.ClassPath$1 -> com.google.common.reflect.ClassPath$1:
    82:82:void <init>() -> <init>
com.google.common.reflect.ClassPath$ClassInfo -> com.google.common.reflect.ClassPath$ClassInfo:
    280:281:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    344:344:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$DefaultScanner -> com.google.common.reflect.ClassPath$DefaultScanner:
    569:571:void <init>() -> <init>
    579:579:void scanResource(com.google.common.reflect.ClassPath$ResourceInfo) -> scanResource
com.google.common.reflect.ClassPath$ResourceInfo -> com.google.common.reflect.ClassPath$ResourceInfo:
    194:197:void <init>(java.io.File,java.lang.String,java.lang.ClassLoader) -> <init>
    256:258:boolean equals(java.lang.Object) -> equals
    251:251:int hashCode() -> hashCode
    187:190:com.google.common.reflect.ClassPath$ResourceInfo of(java.io.File,java.lang.String,java.lang.ClassLoader) -> of
    266:266:java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$Scanner -> com.google.common.reflect.ClassPath$Scanner:
    353:357:void <init>() -> <init>
    470:476:com.google.common.collect.ImmutableList getClassLoaderUrls(java.lang.ClassLoader) -> getClassLoaderUrls
    452:466:com.google.common.collect.ImmutableMap getClassPathEntries(java.lang.ClassLoader) -> getClassPathEntries
    508:508:java.net.URL getClassPathEntry(java.io.File,java.lang.String) -> getClassPathEntry
    427:447:com.google.common.collect.ImmutableSet getClassPathFromManifest(java.io.File,java.util.jar.Manifest) -> getClassPathFromManifest
    485:497:com.google.common.collect.ImmutableList parseJavaClassPath() -> parseJavaClassPath
    367:368:void scan(java.io.File,java.lang.ClassLoader) -> scan
    524:526:void scanDirectory(java.lang.ClassLoader,java.io.File) -> scanDirectory
    544:561:void scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,java.util.Set) -> scanDirectory
    380:391:void scanFrom(java.io.File,java.lang.ClassLoader) -> scanFrom
    398:413:void scanJar(java.io.File,java.lang.ClassLoader) -> scanJar
    513:519:void scanJarFile(java.lang.ClassLoader,java.util.jar.JarFile) -> scanJarFile
com.google.common.util.concurrent.ExecutionError -> com.google.common.util.concurrent.ExecutionError:
    33:33:void <init>() -> <init>
    37:37:void <init>(java.lang.String) -> <init>
    47:47:void <init>(java.lang.Error) -> <init>
com.google.common.util.concurrent.ForwardingCondition -> com.google.common.util.concurrent.ForwardingCondition:
    22:22:void <init>() -> <init>
    27:27:void await() -> await
    32:32:boolean await(long,java.util.concurrent.TimeUnit) -> await
    42:42:long awaitNanos(long) -> awaitNanos
    37:37:void awaitUninterruptibly() -> awaitUninterruptibly
    47:47:boolean awaitUntil(java.util.Date) -> awaitUntil
    52:52:void signal() -> signal
    57:57:void signalAll() -> signalAll
com.google.common.util.concurrent.ForwardingLock -> com.google.common.util.concurrent.ForwardingLock:
    22:22:void <init>() -> <init>
    27:27:void lock() -> lock
    32:32:void lockInterruptibly() -> lockInterruptibly
    37:37:boolean tryLock() -> tryLock
    42:42:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    47:47:void unlock() -> unlock
com.google.common.util.concurrent.FuturesGetChecked -> com.google.common.util.concurrent.FuturesGetChecked:
    249:257:void <clinit>() -> <clinit>
    290:295:void checkExceptionClassValidity(java.lang.Class) -> checkExceptionClassValidity
    101:101:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator classValueValidator() -> classValueValidator
    53:61:java.lang.Object getChecked(com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator,java.util.concurrent.Future,java.lang.Class) -> getChecked
    216:216:boolean hasConstructorUsableByGetChecked(java.lang.Class) -> hasConstructorUsableByGetChecked
    285:285:boolean isCheckedException(java.lang.Class) -> isCheckedException
    261:274:java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable) -> newFromConstructor
    226:236:java.lang.Exception newWithCause(java.lang.Class,java.lang.Throwable) -> newWithCause
    245:245:java.util.List preferringStrings(java.util.List) -> preferringStrings
    95:95:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator weakSetValidator() -> weakSetValidator
    199:205:void wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class) -> wrapAndThrowExceptionOrError
com.google.common.util.concurrent.FuturesGetChecked$1 -> com.google.common.util.concurrent.FuturesGetChecked$1:
    251:251:void <init>() -> <init>
    251:251:java.lang.Object apply(java.lang.Object) -> apply
    254:254:java.lang.Boolean apply(java.lang.reflect.Constructor) -> apply
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder:
    112:115:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    188:191:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidator getBestValidator() -> getBestValidator
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator:
    117:126:void <clinit>() -> <clinit>
    119:119:void <init>(java.lang.String,int) -> <init>
    137:137:void validateClass(java.lang.Class) -> validateClass
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator valueOf(java.lang.String) -> valueOf
    117:117:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator[] values() -> values
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1 -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$ClassValueValidator$1:
    127:127:void <init>() -> <init>
com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator -> com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator:
    141:152:void <clinit>() -> <clinit>
    141:141:void <init>(java.lang.String,int) -> <init>
    157:178:void validateClass(java.lang.Class) -> validateClass
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator valueOf(java.lang.String) -> valueOf
    141:141:com.google.common.util.concurrent.FuturesGetChecked$GetCheckedTypeValidatorHolder$WeakSetValidator[] values() -> values
com.google.common.util.concurrent.MoreExecutors$Application -> com.google.common.util.concurrent.MoreExecutors$Application:
    170:170:void <init>() -> <init>
    224:224:void addShutdownHook(java.lang.Thread) -> addShutdownHook
com.google.common.util.concurrent.Striped -> com.google.common.util.concurrent.Striped:
    300:308:void <clinit>() -> <clinit>
    93:93:void <init>() -> <init>
com.google.common.util.concurrent.Striped$5 -> com.google.common.util.concurrent.Striped$5:
    301:301:void <init>() -> <init>
    301:301:java.lang.Object get() -> get
    304:304:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$6 -> com.google.common.util.concurrent.Striped$6:
    309:309:void <init>() -> <init>
    309:309:java.lang.Object get() -> get
    312:312:java.util.concurrent.locks.ReadWriteLock get() -> get
com.google.common.util.concurrent.Striped$WeakSafeCondition -> com.google.common.util.concurrent.Striped$WeakSafeCondition:
    369:371:void <init>(java.util.concurrent.locks.Condition,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    376:376:java.util.concurrent.locks.Condition delegate() -> delegate
com.google.common.util.concurrent.Striped$WeakSafeLock -> com.google.common.util.concurrent.Striped$WeakSafeLock:
    346:348:void <init>(java.util.concurrent.locks.Lock,com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock) -> <init>
    353:353:java.util.concurrent.locks.Lock delegate() -> delegate
    358:358:java.util.concurrent.locks.Condition newCondition() -> newCondition
com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock -> com.google.common.util.concurrent.Striped$WeakSafeReadWriteLock:
    324:325:void <init>() -> <init>
    330:330:java.util.concurrent.locks.Lock readLock() -> readLock
    335:335:java.util.concurrent.locks.Lock writeLock() -> writeLock
com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter -> com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter:
    57:57:void <clinit>() -> <clinit>
    68:77:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.common.util.concurrent.UncheckedExecutionException -> com.google.common.util.concurrent.UncheckedExecutionException:
    38:38:void <init>() -> <init>
    42:42:void <init>(java.lang.String) -> <init>
    52:52:void <init>(java.lang.Throwable) -> <init>
