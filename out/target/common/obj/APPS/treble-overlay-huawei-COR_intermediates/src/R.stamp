/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package me.phh.treble.overlay.huawei.COR;

public final class R {
  public static final class array {
    /**
     * Array of output values for LCD backlight corresponding to the LUX values
     * in the config_autoBrightnessLevels array.  This array should have size one greater
     * than the size of the config_autoBrightnessLevels array.
     * The brightness values must be between 0 and 255 and be non-decreasing.
     * This must be overridden in platform specific overlays
     */
    public static final int config_autoBrightnessLcdBacklightValues=0x7f010000;
    /**
     * Array of light sensor LUX values to define our levels for auto backlight brightness support.
     * The N entries of this array define N + 1 control points as follows:
     * (1-based arrays)
     * Point 1:            (0, value[1]):             lux <= 0
     * Point 2:     (level[1], value[2]):  0        < lux <= level[1]
     * Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
     * ...
     * Point N+1: (level[N], value[N+1]):  level[N] < lux
     * The control points must be strictly increasing.  Each control point
     * corresponds to an entry in the brightness backlight values arrays.
     * For example, if LUX == level[1] (first element of the levels array)
     * then the brightness will be determined by value[2] (second element
     * of the brightness values array).
     * Spline interpolation is used to determine the auto-brightness
     * backlight values for LUX levels between these control points.
     * Must be overridden in platform specific overlays
     */
    public static final int config_autoBrightnessLevels=0x7f010001;
  }
  public static final class bool {
    public static final int config_automatic_brightness_available=0x7f020000;
    public static final int config_bluetooth_hfp_inband_ringing_support=0x7f020001;
    /**
     * Boolean indicating if current platform supports BLE peripheral mode
     */
    public static final int config_bluetooth_le_peripheral_mode_supported=0x7f020002;
    public static final int config_device_volte_available=0x7f020003;
    public static final int config_device_vt_available=0x7f020004;
    public static final int config_device_wfc_ims_available=0x7f020005;
    public static final int config_dynamic_bind_ims=0x7f020006;
    public static final int config_showNavigationBar=0x7f020007;
    public static final int config_wifi_dual_band_support=0x7f020008;
    public static final int skip_restoring_network_selection=0x7f020009;
  }
  public static final class dimen {
    public static final int navigation_bar_height=0x7f030000;
    public static final int navigation_bar_height_landscape=0x7f030001;
    public static final int navigation_bar_width=0x7f030002;
    public static final int notification_header_padding_bottom=0x7f030003;
    public static final int notification_header_padding_top=0x7f030004;
    public static final int rounded_corner_radius=0x7f030005;
    /**
     * Radius of the software rounded corners at the bottom of the display in its natural
     * orientation. If zero, the value of rounded_corner_radius is used.
     */
    public static final int rounded_corner_radius_bottom=0x7f030006;
    /**
     * Radius of the software rounded corners at the top of the display in its natural
     * orientation. If zero, the value of rounded_corner_radius is used.
     */
    public static final int rounded_corner_radius_top=0x7f030007;
    /**
     * Height of the status bar
     */
    public static final int status_bar_height=0x7f030008;
    /**
     * Height of the status bar in landscape
     */
    public static final int status_bar_height_landscape=0x7f030009;
    /**
     * Height of the status bar in portrait
     */
    public static final int status_bar_height_portrait=0x7f03000a;
  }
  public static final class integer {
    public static final int config_autoBrightnessLightSensorRate=0x7f040000;
    public static final int config_mobile_mtu=0x7f040001;
    public static final int config_screenBrightnessDark=0x7f040002;
    public static final int config_screenBrightnessDim=0x7f040003;
    public static final int config_screenBrightnessDoze=0x7f040004;
    public static final int config_screenBrightnessSettingDefault=0x7f040005;
    public static final int config_screenBrightnessSettingMinimum=0x7f040006;
  }
  public static final class string {
    public static final int config_ims_package=0x7f050000;
    public static final int config_mainBuiltInDisplayCutout=0x7f050001;
  }
  public static final class xml {
    public static final int power_profile=0x7f060000;
  }
}