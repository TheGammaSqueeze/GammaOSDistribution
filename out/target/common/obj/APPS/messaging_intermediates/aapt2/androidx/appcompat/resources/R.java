/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package androidx.appcompat.resources;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int abc_tooltip_enter=0x7f01000a;
    public static final int abc_tooltip_exit=0x7f01000b;
    public static final int btn_checkbox_to_checked_box_inner_merged_animation=0x7f01000c;
    public static final int btn_checkbox_to_checked_box_outer_merged_animation=0x7f01000d;
    public static final int btn_checkbox_to_checked_icon_null_animation=0x7f01000e;
    public static final int btn_checkbox_to_unchecked_box_inner_merged_animation=0x7f01000f;
    public static final int btn_checkbox_to_unchecked_check_path_merged_animation=0x7f010010;
    public static final int btn_checkbox_to_unchecked_icon_null_animation=0x7f010011;
    public static final int btn_radio_to_off_mtrl_dot_group_animation=0x7f010012;
    public static final int btn_radio_to_off_mtrl_ring_outer_animation=0x7f010013;
    public static final int btn_radio_to_off_mtrl_ring_outer_path_animation=0x7f010014;
    public static final int btn_radio_to_on_mtrl_dot_group_animation=0x7f010015;
    public static final int btn_radio_to_on_mtrl_ring_outer_animation=0x7f010016;
    public static final int btn_radio_to_on_mtrl_ring_outer_path_animation=0x7f010017;
    public static final int fragment_fast_out_extra_slow_in=0x7f010018;
  }
  public static final class animator {
    public static final int fab_anim=0x7f020000;
    public static final int fragment_close_enter=0x7f020001;
    public static final int fragment_close_exit=0x7f020002;
    public static final int fragment_fade_enter=0x7f020003;
    public static final int fragment_fade_exit=0x7f020004;
    public static final int fragment_open_enter=0x7f020005;
    public static final int fragment_open_exit=0x7f020006;
  }
  public static final class array {
    /**
     * String to match as no subject and filter out as a subject. For example, if the
     * subject string is "no subject", we won't display that. We'll pretend
     * no subject string was delivered.
     */
    public static final int empty_subject_strings=0x7f030000;
    public static final int letter_tile_colors=0x7f030001;
    /**
     * Choices for quick-reply to message notification. Users with an Android
     * Wear device (e.g. smartwatch) can reply to messages either by speaking their
     * response, or choosing one of these predefined options.
     */
    public static final int notification_reply_choices=0x7f030002;
  }
  public static final class attr {
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f040000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f040001;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f040002;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f040003;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f040004;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f040005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f040006;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f040007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f040008;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f040009;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f04000a;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f04000b;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f04000c;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f04000d;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f04000e;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f04000f;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f040010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f040011;
    /**
     * Content description to use for the close action mode button
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionModeCloseContentDescription=0x7f040012;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f040013;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f040014;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f040015;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f040016;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f040017;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f040018;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f040019;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f04001a;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f04001b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f04001c;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar in action mode. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeTheme=0x7f04001d;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f04001e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f04001f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f040020;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f040021;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f040022;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f040023;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f040024;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f040025;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f040026;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f040027;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowCrop=0x7f040028;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f040029;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f04002a;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f04002b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int apnPreferenceStyle=0x7f04002c;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f04002d;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f04002e;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f04002f;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f040030;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f040031;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f040032;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f040033;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f040034;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int avatarPosition=0x7f040035;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f040036;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f040037;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f040038;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f040039;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f04003a;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f04003b;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f04003c;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f04003d;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f04003e;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f04003f;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f040040;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f040041;
    /**
     * Compat attr to load backported drawable types
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonCompat=0x7f040042;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f040043;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int buttonIconDimen=0x7f040044;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f040045;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f040046;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f040047;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f040048;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f040049;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f04004a;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f04004b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipBackground=0x7f04004c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipDelete=0x7f04004d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipFontSize=0x7f04004e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipHeight=0x7f04004f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int chipPadding=0x7f040050;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f040051;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f040052;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f040053;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f040054;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f040055;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f040056;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f040057;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f040058;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f040059;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f04005a;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f04005b;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f04005c;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f04005d;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f04005e;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f04005f;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f040060;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f040061;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f040062;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f040063;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f040064;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f040065;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f040066;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f040067;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f040068;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f040069;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cornerRadius=0x7f04006a;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f04006b;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f04006c;
    /**
     * Preferred corner radius of dialogs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogCornerRadius=0x7f04006d;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f04006e;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f04006f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableDelete=0x7f040070;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f040071;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f040072;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f040073;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f040074;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f040075;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableBottomCompat=0x7f040076;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableEndCompat=0x7f040077;
    /**
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableLeftCompat=0x7f040078;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableRightCompat=0x7f040079;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f04007a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableStartCompat=0x7f04007b;
    /**
     * Tint to apply to the compound (left, top, etc.) drawables.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int drawableTint=0x7f04007c;
    /**
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int drawableTintMode=0x7f04007d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawableTopCompat=0x7f04007e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f04007f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerLayoutStyle=0x7f040080;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f040081;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f040082;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f040083;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f040084;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f040085;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f040086;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f040087;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fadeIn=0x7f040088;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f040089;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f04008a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f04008b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f04008c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f04008d;
    /**
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int firstBaselineToTopHeight=0x7f04008e;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f04008f;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f040090;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f040091;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f040092;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f040093;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f040094;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f040095;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f040096;
    /**
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderSystemFontFamily=0x7f040097;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f040098;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f040099;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f04009a;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f04009b;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f04009c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f04009d;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f04009e;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f04009f;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f0400a0;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f0400a1;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>large</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>small</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int iconSize=0x7f0400a2;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f0400a3;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f0400a4;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f0400a5;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f0400a6;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>1</td><td></td></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int imageSpanAlignment=0x7f0400a7;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f0400a8;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f0400a9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int invalidChipBackground=0x7f0400aa;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f0400ab;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f0400ac;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f0400ad;
    /**
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lastBaselineToBottomHeight=0x7f0400ae;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f0400af;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f0400b0;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>compact</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>subcompact</td><td>2</td><td></td></tr>
     * </table>
     */
    public static final int layoutMode=0x7f0400b1;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f0400b2;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f0400b3;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f0400b4;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f0400b5;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f0400b6;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f0400b7;
    /**
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int lineHeight=0x7f0400b8;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f0400b9;
    /**
     * Animated Drawable to use for multiple choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorMultipleAnimated=0x7f0400ba;
    /**
     * Animated Drawable to use for single choice indicators.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceIndicatorSingleAnimated=0x7f0400bb;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f0400bc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f0400bd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f0400be;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f0400bf;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f0400c0;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f0400c1;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f0400c2;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f0400c3;
    /**
     * The preferred padding along the end edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingEnd=0x7f0400c4;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f0400c5;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f0400c6;
    /**
     * The preferred padding along the start edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingStart=0x7f0400c7;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f0400c8;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f0400c9;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int loop=0x7f0400ca;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f0400cb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxLevelRadius=0x7f0400cc;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f0400cd;
    /**
     * Menu resource to inflate to be shown in the toolbar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int menu=0x7f0400ce;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minLevelRadius=0x7f0400cf;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>imageThumbnail</td><td>0</td><td></td></tr>
     * <tr><td>playableVideo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int mode=0x7f0400d0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f0400d1;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f0400d2;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f0400d3;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f0400d4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int nestedScrollViewStyle=0x7f0400d5;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f0400d6;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f0400d7;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f0400d8;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f0400d9;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f0400da;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f0400db;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f0400dc;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f0400dd;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f0400de;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int placeholderDrawable=0x7f0400df;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int playOnLoad=0x7f0400e0;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f0400e1;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f0400e2;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f0400e3;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f0400e4;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int primaryColor=0x7f0400e5;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f0400e6;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f0400e7;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f0400e8;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f0400e9;
    /**
     * Resource reference to the string array of query patterns for a custom capability.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryPatterns=0x7f0400ea;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f0400eb;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f0400ec;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f0400ed;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f0400ee;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int recyclerViewStyle=0x7f0400ef;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reveal=0x7f0400f0;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f0400f1;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f0400f2;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f0400f3;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f0400f4;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f0400f5;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f0400f6;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f0400f7;
    /**
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shortcutMatchRequired=0x7f0400f8;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f0400f9;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f0400fa;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f0400fb;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f0400fc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f0400fd;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f0400fe;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f0400ff;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f040100;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f040101;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f040102;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f040103;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f040104;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f040105;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f040106;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f040107;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f040108;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f040109;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f04010a;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f04010b;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f04010c;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f04010d;
    /**
     * Background color for SwipeRefreshLayout progress spinner.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int swipeRefreshLayoutProgressSpinnerBackgroundColor=0x7f04010e;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f04010f;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f040110;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f040111;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f040112;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f040113;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f040114;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f040115;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f040116;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f040117;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f040118;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f040119;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f04011a;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f04011b;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColor=0x7f04011c;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f04011d;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f04011e;
    /**
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int textLocale=0x7f04011f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textSize=0x7f040120;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f040121;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f040122;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f040123;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f040124;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f040125;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f040126;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f040127;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f040128;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f040129;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f04012a;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f04012b;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f04012c;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f04012d;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f04012e;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f04012f;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f040130;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f040131;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f040132;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f040133;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f040134;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f040135;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f040136;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f040137;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f040138;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f040139;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f04013a;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f04013b;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f04013c;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f04013d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int unselectedChipBackgroundColor=0x7f04013e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int unselectedChipTextColor=0x7f04013f;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int viewInflaterClass=0x7f040140;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f040141;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f040142;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f040143;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f040144;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f040145;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f040146;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f040147;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f040148;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f040149;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f04014a;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f04014b;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f050000;
    public static final int abc_config_actionMenuItemAllCaps=0x7f050001;
    public static final int auto_retrieve_mms_pref_default=0x7f050002;
    public static final int auto_retrieve_mms_when_roaming_pref_default=0x7f050003;
    /**
     * Use individual colors for contacts
     */
    public static final int contact_colors=0x7f050004;
    public static final int delivery_reports_pref_default=0x7f050005;
    public static final int dump_mms_pref_default=0x7f050006;
    public static final int dump_sms_pref_default=0x7f050007;
    /**
     * If true, thumbnails will be forcibly set to ScaleType.CENTER
     */
    public static final int force_thumbnail_no_scaling=0x7f050008;
    public static final int group_mms_pref_default=0x7f050009;
    public static final int notification_vibration_pref_default=0x7f05000a;
    public static final int send_sound_pref_default=0x7f05000b;
    /**
     * Application-wide settings
     */
    public static final int show_emoticons_pref_default=0x7f05000c;
    /**
     * This should really go into a config xml, but whoever wrote this app is an idiot, so follow their pattern
     */
    public static final int swipe_right_deletes_conversation_default=0x7f05000d;
    public static final int use_local_apn_pref_default=0x7f05000e;
  }
  public static final class color {
    public static final int abc_background_cache_hint_selector_material_dark=0x7f060000;
    public static final int abc_background_cache_hint_selector_material_light=0x7f060001;
    public static final int abc_btn_colored_borderless_text_material=0x7f060002;
    public static final int abc_btn_colored_text_material=0x7f060003;
    public static final int abc_color_highlight_material=0x7f060004;
    public static final int abc_decor_view_status_guard=0x7f060005;
    public static final int abc_decor_view_status_guard_light=0x7f060006;
    public static final int abc_hint_foreground_material_dark=0x7f060007;
    public static final int abc_hint_foreground_material_light=0x7f060008;
    public static final int abc_primary_text_disable_only_material_dark=0x7f060009;
    public static final int abc_primary_text_disable_only_material_light=0x7f06000a;
    public static final int abc_primary_text_material_dark=0x7f06000b;
    public static final int abc_primary_text_material_light=0x7f06000c;
    public static final int abc_search_url_text=0x7f06000d;
    public static final int abc_search_url_text_normal=0x7f06000e;
    public static final int abc_search_url_text_pressed=0x7f06000f;
    public static final int abc_search_url_text_selected=0x7f060010;
    public static final int abc_secondary_text_material_dark=0x7f060011;
    public static final int abc_secondary_text_material_light=0x7f060012;
    public static final int abc_tint_btn_checkable=0x7f060013;
    public static final int abc_tint_default=0x7f060014;
    public static final int abc_tint_edittext=0x7f060015;
    public static final int abc_tint_seek_thumb=0x7f060016;
    public static final int abc_tint_spinner=0x7f060017;
    public static final int abc_tint_switch_track=0x7f060018;
    public static final int accent_material_dark=0x7f060019;
    public static final int accent_material_light=0x7f06001a;
    public static final int action_bar_background_color=0x7f06001b;
    public static final int action_bar_background_color_dark=0x7f06001c;
    /**
     * Action bar
     */
    public static final int action_bar_title_text_color=0x7f06001d;
    public static final int androidx_core_ripple_material_light=0x7f06001e;
    public static final int androidx_core_secondary_text_default_material_light=0x7f06001f;
    public static final int archived_conversation_action_bar_background_color=0x7f060020;
    public static final int archived_conversation_action_bar_background_color_dark=0x7f060021;
    public static final int attachment_chooser_audio_background=0x7f060022;
    public static final int attachment_chooser_vcard_background=0x7f060023;
    public static final int attachment_preview_more_items_text_background=0x7f060024;
    public static final int audio_attachment_timer_text_color=0x7f060025;
    public static final int audio_picker_hint_text_color=0x7f060026;
    public static final int audio_picker_level_primary_color=0x7f060027;
    public static final int audio_picker_timer_text_color=0x7f060028;
    public static final int audio_progress_bar_color=0x7f060029;
    public static final int audio_record_control_button_stroke=0x7f06002a;
    public static final int autocomplete_bottom_shadow_start=0x7f06002b;
    public static final int autocomplete_divider_color=0x7f06002c;
    public static final int background_floating_material_dark=0x7f06002d;
    public static final int background_floating_material_light=0x7f06002e;
    public static final int background_item_activated=0x7f06002f;
    public static final int background_item_pressed=0x7f060030;
    public static final int background_item_selected=0x7f060031;
    public static final int background_item_transparent=0x7f060032;
    public static final int background_material_dark=0x7f060033;
    public static final int background_material_light=0x7f060034;
    public static final int bright_foreground_disabled_material_dark=0x7f060035;
    public static final int bright_foreground_disabled_material_light=0x7f060036;
    public static final int bright_foreground_inverse_material_dark=0x7f060037;
    public static final int bright_foreground_inverse_material_light=0x7f060038;
    public static final int bright_foreground_material_dark=0x7f060039;
    public static final int bright_foreground_material_light=0x7f06003a;
    public static final int button_bar_action_button_text_color=0x7f06003b;
    public static final int button_bar_cancel_button_text_color=0x7f06003c;
    public static final int button_material_dark=0x7f06003d;
    public static final int button_material_light=0x7f06003e;
    public static final int button_text=0x7f06003f;
    public static final int camera_button_container_background=0x7f060040;
    public static final int chip_background=0x7f060041;
    public static final int chip_background_invalid=0x7f060042;
    public static final int chips_background_color=0x7f060043;
    public static final int chips_dropdown_background_activated=0x7f060044;
    public static final int chips_dropdown_background_pressed=0x7f060045;
    public static final int chips_dropdown_permission_text=0x7f060046;
    public static final int chips_dropdown_text=0x7f060047;
    public static final int chips_dropdown_text_activated=0x7f060048;
    public static final int chips_dropdown_text_default=0x7f060049;
    public static final int chips_dropdown_text_highlighted=0x7f06004a;
    public static final int chips_text_color=0x7f06004b;
    /**
     * Base color used for color filtering.
     */
    public static final int color_filter_base_color=0x7f06004c;
    public static final int compose_contact_divider=0x7f06004d;
    public static final int compose_contact_faint_text=0x7f06004e;
    public static final int compose_contact_text=0x7f06004f;
    public static final int compose_message_send_color=0x7f060050;
    public static final int compose_message_send_color_pressed=0x7f060051;
    public static final int compose_notification_bar_background=0x7f060052;
    public static final int compose_send_text_color=0x7f060053;
    public static final int contact_avatar_default_background=0x7f060054;
    public static final int contact_avatar_pressed_color=0x7f060055;
    public static final int contact_list_alphabet_header=0x7f060056;
    public static final int contact_list_text_primary=0x7f060057;
    public static final int contact_list_text_secondary=0x7f060058;
    public static final int contact_picker_background=0x7f060059;
    public static final int contact_picker_button_text_color=0x7f06005a;
    public static final int contact_picker_hint_text_color=0x7f06005b;
    public static final int contact_picker_tab_pressed=0x7f06005c;
    public static final int contact_picker_tab_underline=0x7f06005d;
    public static final int contextual_action_bar_background_color=0x7f06005e;
    public static final int conversation_background=0x7f06005f;
    public static final int conversation_compose_divider_start=0x7f060060;
    public static final int conversation_edge_effect=0x7f060061;
    public static final int conversation_list_details=0x7f060062;
    public static final int conversation_list_error=0x7f060063;
    /**
     * Conversation list
     */
    public static final int conversation_list_item_read=0x7f060064;
    public static final int conversation_list_item_unread=0x7f060065;
    public static final int conversation_list_name=0x7f060066;
    public static final int dim_foreground_disabled_material_dark=0x7f060067;
    public static final int dim_foreground_disabled_material_light=0x7f060068;
    public static final int dim_foreground_material_dark=0x7f060069;
    public static final int dim_foreground_material_light=0x7f06006a;
    public static final int error_color_material_dark=0x7f06006b;
    public static final int error_color_material_light=0x7f06006c;
    public static final int fab_color=0x7f06006d;
    public static final int fab_pressed_color=0x7f06006e;
    public static final int fab_ripple=0x7f06006f;
    public static final int fastscroll_preview_text_color=0x7f060070;
    public static final int fastscroll_thumb_color=0x7f060071;
    public static final int fastscroll_track_color=0x7f060072;
    public static final int foreground_material_dark=0x7f060073;
    public static final int foreground_material_light=0x7f060074;
    public static final int gallery_image_default_background=0x7f060075;
    public static final int gallery_image_pressed=0x7f060076;
    public static final int generic_video_icon=0x7f060077;
    public static final int google_gray=0x7f060078;
    public static final int group_mms_setting_text_color=0x7f060079;
    public static final int highlighted_text_material_dark=0x7f06007a;
    public static final int highlighted_text_material_light=0x7f06007b;
    public static final int letter_tile_font_color=0x7f06007c;
    public static final int lineage_accent=0x7f06007d;
    public static final int list_empty_text=0x7f06007e;
    public static final int low_storage_action_item_color=0x7f06007f;
    public static final int material_blue_grey_800=0x7f060080;
    public static final int material_blue_grey_900=0x7f060081;
    public static final int material_blue_grey_950=0x7f060082;
    public static final int material_deep_teal_200=0x7f060083;
    public static final int material_deep_teal_500=0x7f060084;
    public static final int material_grey_100=0x7f060085;
    public static final int material_grey_300=0x7f060086;
    public static final int material_grey_50=0x7f060087;
    public static final int material_grey_600=0x7f060088;
    public static final int material_grey_800=0x7f060089;
    public static final int material_grey_850=0x7f06008a;
    public static final int material_grey_900=0x7f06008b;
    public static final int message_action_info_text=0x7f06008c;
    public static final int message_action_status_text=0x7f06008d;
    public static final int message_action_timestamp_text=0x7f06008e;
    public static final int message_audio_button_color_incoming=0x7f06008f;
    public static final int message_body_size_text_color=0x7f060090;
    public static final int message_bubble_color_outgoing=0x7f060091;
    public static final int message_bubble_color_selected=0x7f060092;
    public static final int message_download_failed_status_text=0x7f060093;
    public static final int message_download_failed_timestamp_text=0x7f060094;
    public static final int message_error_bubble_color_incoming=0x7f060095;
    public static final int message_failed_timestamp_text=0x7f060096;
    public static final int message_image_selected_tint=0x7f060097;
    public static final int message_info_text=0x7f060098;
    public static final int message_info_text_incoming_download_failed=0x7f060099;
    public static final int message_text=0x7f06009a;
    public static final int message_text_color_incoming=0x7f06009b;
    public static final int message_text_color_incoming_download_failed=0x7f06009c;
    public static final int message_text_color_outgoing=0x7f06009d;
    public static final int message_title_text=0x7f06009e;
    public static final int mms_indicator_color=0x7f06009f;
    public static final int navigation_bar_bg=0x7f0600a0;
    public static final int navigation_bar_divider=0x7f0600a1;
    public static final int notification_accent_color=0x7f0600a2;
    public static final int notification_action_color_filter=0x7f0600a3;
    public static final int notification_icon_bg_color=0x7f0600a4;
    public static final int notification_material_background_media_default_color=0x7f0600a5;
    public static final int notification_secondary_text=0x7f0600a6;
    public static final int notification_sender_text=0x7f0600a7;
    public static final int notification_subject_color=0x7f0600a8;
    public static final int notification_tertiary_text=0x7f0600a9;
    public static final int notification_warning_color=0x7f0600aa;
    public static final int open_conversation_animation_background_shadow=0x7f0600ab;
    public static final int participant_list_text_primary=0x7f0600ac;
    public static final int people_and_options_header_text=0x7f0600ad;
    public static final int people_and_options_list_divider=0x7f0600ae;
    public static final int permission_check_activity_background=0x7f0600af;
    public static final int photo_crop_dim_color=0x7f0600b0;
    public static final int photo_crop_highlight_color=0x7f0600b1;
    public static final int photo_status_bar_black=0x7f0600b2;
    public static final int primary_color=0x7f0600b3;
    public static final int primary_dark_material_dark=0x7f0600b4;
    public static final int primary_dark_material_light=0x7f0600b5;
    public static final int primary_material_dark=0x7f0600b6;
    public static final int primary_material_light=0x7f0600b7;
    public static final int primary_text_default_material_dark=0x7f0600b8;
    public static final int primary_text_default_material_light=0x7f0600b9;
    public static final int primary_text_disabled_material_dark=0x7f0600ba;
    public static final int primary_text_disabled_material_light=0x7f0600bb;
    public static final int ripple_material_dark=0x7f0600bc;
    public static final int ripple_material_light=0x7f0600bd;
    public static final int search_view_text_cursor=0x7f0600be;
    public static final int secondary_text_default_material_dark=0x7f0600bf;
    public static final int secondary_text_default_material_light=0x7f0600c0;
    public static final int secondary_text_disabled_material_dark=0x7f0600c1;
    public static final int secondary_text_disabled_material_light=0x7f0600c2;
    public static final int settings_item_title_text_primary=0x7f0600c3;
    public static final int settings_list_text_primary=0x7f0600c4;
    public static final int settings_list_text_secondary=0x7f0600c5;
    public static final int sim_indicator_color_dark=0x7f0600c6;
    public static final int sim_indicator_color_light=0x7f0600c7;
    public static final int sim_selector_background_end=0x7f0600c8;
    public static final int sim_selector_background_start=0x7f0600c9;
    public static final int sim_selector_text_primary=0x7f0600ca;
    public static final int sim_selector_text_secondary=0x7f0600cb;
    /**
     * Photo Viewer Colors
     */
    public static final int solid_black=0x7f0600cc;
    public static final int subject_editor_bubble=0x7f0600cd;
    public static final int switch_thumb_disabled_material_dark=0x7f0600ce;
    public static final int switch_thumb_disabled_material_light=0x7f0600cf;
    public static final int switch_thumb_material_dark=0x7f0600d0;
    public static final int switch_thumb_material_light=0x7f0600d1;
    public static final int switch_thumb_normal_material_dark=0x7f0600d2;
    public static final int switch_thumb_normal_material_light=0x7f0600d3;
    public static final int tab_text_color=0x7f0600d4;
    public static final int text_highlight_color=0x7f0600d5;
    public static final int timestamp_text_failed=0x7f0600d6;
    public static final int timestamp_text_incoming=0x7f0600d7;
    public static final int timestamp_text_outgoing=0x7f0600d8;
    public static final int tooltip_background_dark=0x7f0600d9;
    public static final int tooltip_background_light=0x7f0600da;
    public static final int translucent_white=0x7f0600db;
    public static final int unblock_item_text_color=0x7f0600dc;
    public static final int wearable_notification_participants_count=0x7f0600dd;
    public static final int widget_background_color=0x7f0600de;
    public static final int widget_conversation_title_color=0x7f0600df;
    public static final int widget_incoming_text_color=0x7f0600e0;
    public static final int widget_outgoing_text_color=0x7f0600e1;
    public static final int widget_text_color=0x7f0600e2;
  }
  public static final class dimen {
    public static final int abc_action_bar_content_inset_material=0x7f070000;
    public static final int abc_action_bar_content_inset_with_nav=0x7f070001;
    public static final int abc_action_bar_default_height_material=0x7f070002;
    public static final int abc_action_bar_default_padding_end_material=0x7f070003;
    public static final int abc_action_bar_default_padding_start_material=0x7f070004;
    public static final int abc_action_bar_elevation_material=0x7f070005;
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f070006;
    public static final int abc_action_bar_overflow_padding_end_material=0x7f070007;
    public static final int abc_action_bar_overflow_padding_start_material=0x7f070008;
    public static final int abc_action_bar_stacked_max_height=0x7f070009;
    public static final int abc_action_bar_stacked_tab_max_width=0x7f07000a;
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f07000b;
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f07000c;
    public static final int abc_action_button_min_height_material=0x7f07000d;
    public static final int abc_action_button_min_width_material=0x7f07000e;
    public static final int abc_action_button_min_width_overflow_material=0x7f07000f;
    public static final int abc_alert_dialog_button_bar_height=0x7f070010;
    public static final int abc_alert_dialog_button_dimen=0x7f070011;
    public static final int abc_button_inset_horizontal_material=0x7f070012;
    public static final int abc_button_inset_vertical_material=0x7f070013;
    public static final int abc_button_padding_horizontal_material=0x7f070014;
    public static final int abc_button_padding_vertical_material=0x7f070015;
    public static final int abc_cascading_menus_min_smallest_width=0x7f070016;
    public static final int abc_config_prefDialogWidth=0x7f070017;
    public static final int abc_control_corner_material=0x7f070018;
    public static final int abc_control_inset_material=0x7f070019;
    public static final int abc_control_padding_material=0x7f07001a;
    public static final int abc_dialog_corner_radius_material=0x7f07001b;
    public static final int abc_dialog_fixed_height_major=0x7f07001c;
    public static final int abc_dialog_fixed_height_minor=0x7f07001d;
    public static final int abc_dialog_fixed_width_major=0x7f07001e;
    public static final int abc_dialog_fixed_width_minor=0x7f07001f;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f070020;
    public static final int abc_dialog_list_padding_top_no_title=0x7f070021;
    public static final int abc_dialog_min_width_major=0x7f070022;
    public static final int abc_dialog_min_width_minor=0x7f070023;
    public static final int abc_dialog_padding_material=0x7f070024;
    public static final int abc_dialog_padding_top_material=0x7f070025;
    public static final int abc_dialog_title_divider_material=0x7f070026;
    public static final int abc_disabled_alpha_material_dark=0x7f070027;
    public static final int abc_disabled_alpha_material_light=0x7f070028;
    public static final int abc_dropdownitem_icon_width=0x7f070029;
    public static final int abc_dropdownitem_text_padding_left=0x7f07002a;
    public static final int abc_dropdownitem_text_padding_right=0x7f07002b;
    public static final int abc_edit_text_inset_bottom_material=0x7f07002c;
    public static final int abc_edit_text_inset_horizontal_material=0x7f07002d;
    public static final int abc_edit_text_inset_top_material=0x7f07002e;
    public static final int abc_floating_window_z=0x7f07002f;
    public static final int abc_list_item_height_large_material=0x7f070030;
    public static final int abc_list_item_height_material=0x7f070031;
    public static final int abc_list_item_height_small_material=0x7f070032;
    public static final int abc_list_item_padding_horizontal_material=0x7f070033;
    public static final int abc_panel_menu_list_width=0x7f070034;
    public static final int abc_progress_bar_height_material=0x7f070035;
    public static final int abc_search_view_preferred_height=0x7f070036;
    public static final int abc_search_view_preferred_width=0x7f070037;
    public static final int abc_seekbar_track_background_height_material=0x7f070038;
    public static final int abc_seekbar_track_progress_height_material=0x7f070039;
    public static final int abc_select_dialog_padding_start_material=0x7f07003a;
    public static final int abc_star_big=0x7f07003b;
    public static final int abc_star_medium=0x7f07003c;
    public static final int abc_star_small=0x7f07003d;
    public static final int abc_switch_padding=0x7f07003e;
    public static final int abc_text_size_body_1_material=0x7f07003f;
    public static final int abc_text_size_body_2_material=0x7f070040;
    public static final int abc_text_size_button_material=0x7f070041;
    public static final int abc_text_size_caption_material=0x7f070042;
    public static final int abc_text_size_display_1_material=0x7f070043;
    public static final int abc_text_size_display_2_material=0x7f070044;
    public static final int abc_text_size_display_3_material=0x7f070045;
    public static final int abc_text_size_display_4_material=0x7f070046;
    public static final int abc_text_size_headline_material=0x7f070047;
    public static final int abc_text_size_large_material=0x7f070048;
    public static final int abc_text_size_medium_material=0x7f070049;
    public static final int abc_text_size_menu_header_material=0x7f07004a;
    public static final int abc_text_size_menu_material=0x7f07004b;
    public static final int abc_text_size_small_material=0x7f07004c;
    public static final int abc_text_size_subhead_material=0x7f07004d;
    public static final int abc_text_size_subtitle_material_toolbar=0x7f07004e;
    public static final int abc_text_size_title_material=0x7f07004f;
    public static final int abc_text_size_title_material_toolbar=0x7f070050;
    public static final int action_bar_elevation=0x7f070051;
    public static final int action_bar_height=0x7f070052;
    public static final int action_bar_text_size=0x7f070053;
    public static final int attachment_grid_checkbox_area_increase=0x7f070054;
    public static final int attachment_grid_image_cell_size=0x7f070055;
    public static final int attachment_preview_more_items_text_size=0x7f070056;
    public static final int attachment_rounded_corner_radius=0x7f070057;
    public static final int audio_attachment_text_size=0x7f070058;
    public static final int audio_picker_text_size=0x7f070059;
    public static final int audio_progress_bar_height=0x7f07005a;
    public static final int blocked_participant_list_item_view_padding=0x7f07005b;
    public static final int chip_custom_divider_height=0x7f07005c;
    public static final int chip_dropdown_height=0x7f07005d;
    public static final int chip_height=0x7f07005e;
    /**
     * dropdown
     */
    public static final int chip_icon_margin_end=0x7f07005f;
    public static final int chip_icon_padding=0x7f070060;
    /**
     * chip
     */
    public static final int chip_padding=0x7f070061;
    public static final int chip_padding_end=0x7f070062;
    /**
     * override default padding values, -1dp if it's not set to override
     */
    public static final int chip_padding_start=0x7f070063;
    public static final int chip_text_size=0x7f070064;
    public static final int chip_wrapper_bottom_padding=0x7f070065;
    public static final int chip_wrapper_end_padding=0x7f070066;
    /**
     * autocomplete dropdown
     */
    public static final int chip_wrapper_start_padding=0x7f070067;
    public static final int chip_wrapper_top_padding=0x7f070068;
    public static final int color_swatch_large=0x7f070069;
    public static final int color_swatch_margins_large=0x7f07006a;
    public static final int color_swatch_margins_small=0x7f07006b;
    public static final int color_swatch_small=0x7f07006c;
    public static final int compat_button_inset_horizontal_material=0x7f07006d;
    public static final int compat_button_inset_vertical_material=0x7f07006e;
    public static final int compat_button_padding_horizontal_material=0x7f07006f;
    public static final int compat_button_padding_vertical_material=0x7f070070;
    public static final int compat_control_corner_material=0x7f070071;
    public static final int compat_notification_large_icon_max_height=0x7f070072;
    public static final int compat_notification_large_icon_max_width=0x7f070073;
    public static final int compose_message_attachment_padding_sides=0x7f070074;
    public static final int compose_message_attachment_padding_topBottom=0x7f070075;
    public static final int compose_message_chip_height=0x7f070076;
    public static final int compose_message_chip_padding=0x7f070077;
    public static final int compose_message_chips_view_max_height=0x7f070078;
    public static final int compose_message_contacts_container_margin=0x7f070079;
    public static final int compose_message_contacts_height=0x7f07007a;
    public static final int compose_message_fields_horizontal_margin=0x7f07007b;
    public static final int compose_message_font_size=0x7f07007c;
    public static final int compose_message_mms_indicator_padding_top=0x7f07007d;
    public static final int compose_message_send_button_padding_right=0x7f07007e;
    public static final int compose_message_subject_bottom_padding=0x7f07007f;
    public static final int compose_message_subject_cancel_left_margin=0x7f070080;
    public static final int compose_message_subject_cancel_top_offset=0x7f070081;
    public static final int compose_message_subject_left_padding=0x7f070082;
    public static final int compose_message_subject_right_padding=0x7f070083;
    public static final int compose_message_subject_top_padding=0x7f070084;
    public static final int compose_message_text_box_padding_side=0x7f070085;
    public static final int contact_icon_view_large_size=0x7f070086;
    public static final int contact_icon_view_normal_size=0x7f070087;
    public static final int contact_icon_view_small_size=0x7f070088;
    public static final int contact_list_alphabet_header_text_size=0x7f070089;
    public static final int contact_list_detail_text_size=0x7f07008a;
    public static final int contact_list_icon_size=0x7f07008b;
    /**
     * Contact Picker related dimensions.
     */
    public static final int contact_list_text_size=0x7f07008c;
    public static final int contact_picker_text_size=0x7f07008d;
    public static final int conversation_bubble_width_snap=0x7f07008e;
    public static final int conversation_compose_send_text_size=0x7f07008f;
    public static final int conversation_fast_fling_threshold=0x7f070090;
    public static final int conversation_info_text_size=0x7f070091;
    public static final int conversation_list_contact_icon_size=0x7f070092;
    public static final int conversation_list_empty_text_bottom_margin=0x7f070093;
    public static final int conversation_list_first_item_extra_padding=0x7f070094;
    public static final int conversation_list_image_preview_corner_radius=0x7f070095;
    public static final int conversation_list_image_preview_size=0x7f070096;
    public static final int conversation_list_item_view_padding=0x7f070097;
    public static final int conversation_message_contact_icon_size=0x7f070098;
    public static final int conversation_message_photo_min_size=0x7f070099;
    public static final int conversation_message_text_size=0x7f07009a;
    public static final int conversation_status_text_size=0x7f07009b;
    public static final int conversation_title_text_size=0x7f07009c;
    public static final int copy_contact_dialog_left_padding=0x7f07009d;
    public static final int copy_contact_dialog_right_padding=0x7f07009e;
    public static final int copy_contact_dialog_top_padding=0x7f07009f;
    public static final int def_drawer_elevation=0x7f0700a0;
    public static final int directory_header_padding_bottom=0x7f0700a1;
    public static final int directory_header_padding_end=0x7f0700a2;
    public static final int directory_header_padding_start=0x7f0700a3;
    public static final int directory_header_padding_top=0x7f0700a4;
    public static final int directory_header_text_size=0x7f0700a5;
    public static final int disabled_alpha_material_dark=0x7f0700a6;
    public static final int disabled_alpha_material_light=0x7f0700a7;
    public static final int explode_animation_highlight_elevation=0x7f0700a8;
    public static final int fab_bottom_margin=0x7f0700a9;
    public static final int fab_elevation=0x7f0700aa;
    public static final int fab_elevation_pressed=0x7f0700ab;
    public static final int fab_left_right_margin=0x7f0700ac;
    public static final int fab_padding_bottom=0x7f0700ad;
    public static final int fab_size=0x7f0700ae;
    public static final int fastscroll_default_thickness=0x7f0700af;
    public static final int fastscroll_margin=0x7f0700b0;
    public static final int fastscroll_minimum_range=0x7f0700b1;
    public static final int fastscroll_preview_corner_radius=0x7f0700b2;
    public static final int fastscroll_preview_height=0x7f0700b3;
    public static final int fastscroll_preview_margin_left_right=0x7f0700b4;
    public static final int fastscroll_preview_margin_top=0x7f0700b5;
    public static final int fastscroll_preview_min_width=0x7f0700b6;
    public static final int fastscroll_preview_padding=0x7f0700b7;
    public static final int fastscroll_preview_text_size=0x7f0700b8;
    public static final int fastscroll_thumb_height=0x7f0700b9;
    /**
     * Conversation fast-scroller
     */
    public static final int fastscroll_touch_slop=0x7f0700ba;
    public static final int fastscroll_track_width=0x7f0700bb;
    public static final int focus_inner_offset=0x7f0700bc;
    public static final int focus_inner_stroke=0x7f0700bd;
    public static final int focus_outer_stroke=0x7f0700be;
    public static final int focus_radius_offset=0x7f0700bf;
    public static final int gallery_icon_size=0x7f0700c0;
    public static final int gallery_image_cell_size=0x7f0700c1;
    public static final int group_mms_setting_text_size=0x7f0700c2;
    public static final int highlight_alpha_material_colored=0x7f0700c3;
    public static final int highlight_alpha_material_dark=0x7f0700c4;
    public static final int highlight_alpha_material_light=0x7f0700c5;
    public static final int hint_alpha_material_dark=0x7f0700c6;
    public static final int hint_alpha_material_light=0x7f0700c7;
    public static final int hint_pressed_alpha_material_dark=0x7f0700c8;
    public static final int hint_pressed_alpha_material_light=0x7f0700c9;
    public static final int image_attachment_fallback_height=0x7f0700ca;
    public static final int image_attachment_fallback_width=0x7f0700cb;
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f0700cc;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f0700cd;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f0700ce;
    public static final int letter_to_tile_ratio=0x7f0700cf;
    public static final int line_spacing_extra=0x7f0700d0;
    public static final int list_empty_text_left_right_margin=0x7f0700d1;
    public static final int list_empty_text_size=0x7f0700d2;
    public static final int list_empty_text_top_margin=0x7f0700d3;
    public static final int low_storage_action_item_text_size=0x7f0700d4;
    /**
     * Flings faster than this length / sec will go from fullscreen straight to closed
     */
    public static final int mediapicker_big_fling_threshold=0x7f0700d5;
    public static final int mediapicker_default_chooser_height=0x7f0700d6;
    /**
     * Flings slower than this length / sec will be ignored
     */
    public static final int mediapicker_fling_threshold=0x7f0700d7;
    public static final int message_audio_attachment_padding=0x7f0700d8;
    public static final int message_body_size_text_size=0x7f0700d9;
    public static final int message_bubble_arrow_width=0x7f0700da;
    public static final int message_metadata_top_padding=0x7f0700db;
    public static final int message_padding_default=0x7f0700dc;
    public static final int message_padding_same_author=0x7f0700dd;
    public static final int message_text_bottom_padding=0x7f0700de;
    public static final int message_text_left_right_padding=0x7f0700df;
    public static final int message_text_top_padding=0x7f0700e0;
    public static final int mms_indicator_size=0x7f0700e1;
    public static final int multiple_attachment_preview_height=0x7f0700e2;
    public static final int multiple_attachment_preview_padding=0x7f0700e3;
    public static final int multiple_attachment_preview_width=0x7f0700e4;
    public static final int notification_action_icon_size=0x7f0700e5;
    public static final int notification_action_text_size=0x7f0700e6;
    public static final int notification_big_circle_margin=0x7f0700e7;
    public static final int notification_content_margin_start=0x7f0700e8;
    public static final int notification_large_icon_height=0x7f0700e9;
    public static final int notification_large_icon_width=0x7f0700ea;
    public static final int notification_main_column_padding_top=0x7f0700eb;
    public static final int notification_media_narrow_margin=0x7f0700ec;
    public static final int notification_right_icon_size=0x7f0700ed;
    public static final int notification_right_side_padding_top=0x7f0700ee;
    public static final int notification_small_icon_background_padding=0x7f0700ef;
    public static final int notification_small_icon_size_as_large=0x7f0700f0;
    public static final int notification_subtext_size=0x7f0700f1;
    public static final int notification_top_pad=0x7f0700f2;
    public static final int notification_top_pad_large_text=0x7f0700f3;
    /**
     * Notification related dimensions.
     */
    public static final int notification_wearable_image_height=0x7f0700f4;
    public static final int notification_wearable_image_width=0x7f0700f5;
    public static final int pager_tab_header_text_size=0x7f0700f6;
    public static final int pager_tab_underline_selected=0x7f0700f7;
    public static final int participant_list_text_size=0x7f0700f8;
    /**
     * The default size of a pending attachment while its size is unknown
     */
    public static final int pending_attachment_size=0x7f0700f9;
    public static final int people_and_options_header_text_size=0x7f0700fa;
    public static final int photo_crop_stroke_width=0x7f0700fb;
    public static final int photo_crop_width=0x7f0700fc;
    public static final int photo_page_margin=0x7f0700fd;
    public static final int photo_preview_size=0x7f0700fe;
    public static final int pie_radius_increment=0x7f0700ff;
    /**
     * Camera focus indicator values
     */
    public static final int pie_radius_start=0x7f070100;
    public static final int pie_touch_offset=0x7f070101;
    public static final int progress_indicator_default_radius=0x7f070102;
    public static final int progress_indicator_default_stroke_width=0x7f070103;
    public static final int recipient_edit_text_size=0x7f070104;
    public static final int retry_button_size=0x7f070105;
    public static final int settings_list_detail_text_size=0x7f070106;
    public static final int settings_list_item_height=0x7f070107;
    public static final int settings_list_text_size=0x7f070108;
    public static final int sim_identifier_to_tile_ratio=0x7f070109;
    public static final int sim_selector_detail_text_size=0x7f07010a;
    public static final int sim_selector_icon_size=0x7f07010b;
    public static final int sim_selector_text_size=0x7f07010c;
    public static final int single_attachment_max_height=0x7f07010d;
    public static final int single_attachment_min_dimen=0x7f07010e;
    public static final int small_sim_identifier_to_tile_ratio=0x7f07010f;
    public static final int snack_bar_left_right_margin=0x7f070110;
    public static final int snack_bar_top_bottom_margin=0x7f070111;
    public static final int tooltip_corner_radius=0x7f070112;
    public static final int tooltip_horizontal_padding=0x7f070113;
    public static final int tooltip_margin=0x7f070114;
    public static final int tooltip_precise_anchor_extra_offset=0x7f070115;
    public static final int tooltip_precise_anchor_threshold=0x7f070116;
    public static final int tooltip_vertical_padding=0x7f070117;
    public static final int tooltip_y_offset_non_touch=0x7f070118;
    public static final int tooltip_y_offset_touch=0x7f070119;
    public static final int vcard_detail_group_indicator_width=0x7f07011a;
    public static final int version_dialog_bottom_padding=0x7f07011b;
    public static final int version_dialog_copyright_top_margin=0x7f07011c;
    public static final int version_dialog_info_left_padding=0x7f07011d;
    public static final int version_dialog_large_padding=0x7f07011e;
    /**
     * Videos in the message list view should at least be this big in the smallest dimension
     */
    public static final int video_message_min_size=0x7f07011f;
    public static final int widget_avatar_padding=0x7f070120;
    public static final int widget_compose_top_padding=0x7f070121;
    public static final int widget_compose_top_padding_compressed=0x7f070122;
    public static final int widget_conversation_title_size=0x7f070123;
    public static final int widget_header_height=0x7f070124;
    public static final int widget_header_new_conv_button_width=0x7f070125;
    /**
     * Widget
     */
    public static final int widget_margin=0x7f070126;
    public static final int widget_subtitle_margin=0x7f070127;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f080001;
    public static final int abc_action_bar_item_background_material=0x7f080002;
    public static final int abc_btn_borderless_material=0x7f080003;
    public static final int abc_btn_check_material=0x7f080004;
    public static final int abc_btn_check_material_anim=0x7f080005;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f080006;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f080007;
    public static final int abc_btn_colored_material=0x7f080008;
    public static final int abc_btn_default_mtrl_shape=0x7f080009;
    public static final int abc_btn_radio_material=0x7f08000a;
    public static final int abc_btn_radio_material_anim=0x7f08000b;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f08000c;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f08000d;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f08000e;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f08000f;
    public static final int abc_cab_background_internal_bg=0x7f080010;
    public static final int abc_cab_background_top_material=0x7f080011;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f080012;
    public static final int abc_control_background_material=0x7f080013;
    public static final int abc_dialog_material_background=0x7f080014;
    public static final int abc_edit_text_material=0x7f080015;
    public static final int abc_ic_ab_back_material=0x7f080016;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f080017;
    public static final int abc_ic_clear_material=0x7f080018;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f080019;
    public static final int abc_ic_go_search_api_material=0x7f08001a;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f08001b;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f08001c;
    public static final int abc_ic_menu_overflow_material=0x7f08001d;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f08001e;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f08001f;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f080020;
    public static final int abc_ic_search_api_material=0x7f080021;
    public static final int abc_ic_voice_search_api_material=0x7f080022;
    public static final int abc_item_background_holo_dark=0x7f080023;
    public static final int abc_item_background_holo_light=0x7f080024;
    public static final int abc_list_divider_material=0x7f080025;
    public static final int abc_list_divider_mtrl_alpha=0x7f080026;
    public static final int abc_list_focused_holo=0x7f080027;
    public static final int abc_list_longpressed_holo=0x7f080028;
    public static final int abc_list_pressed_holo_dark=0x7f080029;
    public static final int abc_list_pressed_holo_light=0x7f08002a;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f08002b;
    public static final int abc_list_selector_background_transition_holo_light=0x7f08002c;
    public static final int abc_list_selector_disabled_holo_dark=0x7f08002d;
    public static final int abc_list_selector_disabled_holo_light=0x7f08002e;
    public static final int abc_list_selector_holo_dark=0x7f08002f;
    public static final int abc_list_selector_holo_light=0x7f080030;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f080031;
    public static final int abc_popup_background_mtrl_mult=0x7f080032;
    public static final int abc_ratingbar_indicator_material=0x7f080033;
    public static final int abc_ratingbar_material=0x7f080034;
    public static final int abc_ratingbar_small_material=0x7f080035;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f080036;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f080037;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f080038;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f080039;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f08003a;
    public static final int abc_seekbar_thumb_material=0x7f08003b;
    public static final int abc_seekbar_tick_mark_material=0x7f08003c;
    public static final int abc_seekbar_track_material=0x7f08003d;
    public static final int abc_spinner_mtrl_am_alpha=0x7f08003e;
    public static final int abc_spinner_textfield_background_material=0x7f08003f;
    public static final int abc_star_black_48dp=0x7f080040;
    public static final int abc_star_half_black_48dp=0x7f080041;
    public static final int abc_switch_thumb_material=0x7f080042;
    public static final int abc_switch_track_mtrl_alpha=0x7f080043;
    public static final int abc_tab_indicator_material=0x7f080044;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f080045;
    public static final int abc_text_cursor_material=0x7f080046;
    public static final int abc_text_select_handle_left_mtrl=0x7f080047;
    public static final int abc_text_select_handle_middle_mtrl=0x7f080048;
    public static final int abc_text_select_handle_right_mtrl=0x7f080049;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f08004a;
    public static final int abc_textfield_default_mtrl_alpha=0x7f08004b;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f08004c;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f08004d;
    public static final int abc_textfield_search_material=0x7f08004e;
    public static final int abc_vector_test=0x7f08004f;
    public static final int actionbar_translucent=0x7f080050;
    public static final int attachment_audio_preview_background=0x7f080051;
    public static final int attachment_image_placeholder_background=0x7f080052;
    public static final int attachment_more_items_background=0x7f080053;
    public static final int attachment_vcard_preview_background=0x7f080054;
    public static final int audio_progress_bar_background_incoming=0x7f080055;
    public static final int audio_progress_bar_background_outgoing=0x7f080056;
    public static final int audio_progress_bar_progress=0x7f080057;
    public static final int audio_record_control_button_background=0x7f080058;
    public static final int bg_sms=0x7f080059;
    public static final int btn_checkbox_checked_mtrl=0x7f08005a;
    public static final int btn_checkbox_checked_to_unchecked_mtrl_animation=0x7f08005b;
    public static final int btn_checkbox_unchecked_mtrl=0x7f08005c;
    public static final int btn_checkbox_unchecked_to_checked_mtrl_animation=0x7f08005d;
    public static final int btn_keyboard_key_dark_normal_holo=0x7f08005e;
    public static final int btn_keyboard_key_dark_pressed_holo=0x7f08005f;
    public static final int btn_keyboard_key_light_normal_holo=0x7f080060;
    public static final int btn_keyboard_key_light_pressed_holo=0x7f080061;
    public static final int btn_radio_off_mtrl=0x7f080062;
    public static final int btn_radio_off_to_on_mtrl_animation=0x7f080063;
    public static final int btn_radio_on_mtrl=0x7f080064;
    public static final int btn_radio_on_to_off_mtrl_animation=0x7f080065;
    public static final int cab_bg=0x7f080066;
    public static final int chip_autocomplete_divider_background=0x7f080067;
    public static final int chips_dropdown_background=0x7f080068;
    public static final int chips_dropdown_text_color=0x7f080069;
    public static final int chips_ic_close_24dp=0x7f08006a;
    /**
     * Activity background color
     */
    public static final int class_zero_background=0x7f08006b;
    public static final int color_picker_swatch=0x7f08006c;
    public static final int compose_chips_divider_gradient=0x7f08006d;
    public static final int contact_picker_tab_background_selector=0x7f08006e;
    public static final int contact_popup_background=0x7f08006f;
    public static final int contacts_fastscroll_label_left=0x7f080070;
    public static final int contacts_fastscroll_label_right=0x7f080071;
    public static final int conversation_compose_divider_gradient=0x7f080072;
    public static final int default_image=0x7f080073;
    public static final int exit_button_bg=0x7f080074;
    public static final int fab_new_message_bg=0x7f080075;
    public static final int fab_new_message_static_shadow=0x7f080076;
    public static final int fastscroll_preview_left=0x7f080077;
    public static final int fastscroll_preview_right=0x7f080078;
    public static final int fastscroll_thumb=0x7f080079;
    public static final int fastscroll_thumb_pressed=0x7f08007a;
    public static final int fastscroll_track=0x7f08007b;
    public static final int gallery_checkbox_selector=0x7f08007c;
    public static final int gallery_document_picker_item_background=0x7f08007d;
    public static final int gallery_image_background_selector=0x7f08007e;
    public static final int generic_video_icon=0x7f08007f;
    public static final int ic_add_gray=0x7f080080;
    public static final int ic_add_white=0x7f080081;
    public static final int ic_archive_small_dark=0x7f080082;
    public static final int ic_archive_small_light=0x7f080083;
    public static final int ic_archive_undo_small_dark=0x7f080084;
    public static final int ic_archive_undo_small_light=0x7f080085;
    public static final int ic_arrow_back_dark=0x7f080086;
    public static final int ic_arrow_back_light=0x7f080087;
    public static final int ic_attachment_dark=0x7f080088;
    public static final int ic_audio_light=0x7f080089;
    public static final int ic_audio_pause=0x7f08008a;
    public static final int ic_audio_play=0x7f08008b;
    public static final int ic_camera_front_light=0x7f08008c;
    public static final int ic_camera_light=0x7f08008d;
    public static final int ic_camera_rear_light=0x7f08008e;
    public static final int ic_cancel_small_dark=0x7f08008f;
    public static final int ic_cancel_small_light=0x7f080090;
    public static final int ic_cancel_wht_24dp=0x7f080091;
    public static final int ic_checkbox_blank_light=0x7f080092;
    public static final int ic_checkbox_light=0x7f080093;
    public static final int ic_checkbox_outline_light=0x7f080094;
    public static final int ic_checkmark_circle_blue=0x7f080095;
    public static final int ic_checkmark_large=0x7f080096;
    public static final int ic_checkmark_large_light=0x7f080097;
    public static final int ic_checkmark_small_blue=0x7f080098;
    public static final int ic_checkmark_small_light=0x7f080099;
    public static final int ic_color_lens=0x7f08009a;
    public static final int ic_colorpicker_swatch_selected=0x7f08009b;
    public static final int ic_contact_picture=0x7f08009c;
    public static final int ic_content_copy_dark=0x7f08009d;
    public static final int ic_crying_hero=0x7f08009e;
    public static final int ic_delete_small_dark=0x7f08009f;
    public static final int ic_delete_small_light=0x7f0800a0;
    public static final int ic_dnd_on_dark=0x7f0800a1;
    public static final int ic_dnd_on_light=0x7f0800a2;
    public static final int ic_failed_light=0x7f0800a3;
    public static final int ic_failed_status_red=0x7f0800a4;
    public static final int ic_file_download_dark=0x7f0800a5;
    public static final int ic_file_download_light=0x7f0800a6;
    public static final int ic_forward_dark=0x7f0800a7;
    public static final int ic_history_light=0x7f0800a8;
    public static final int ic_image_light=0x7f0800a9;
    public static final int ic_ime_dark=0x7f0800aa;
    public static final int ic_ime_light=0x7f0800ab;
    public static final int ic_info_dark=0x7f0800ac;
    public static final int ic_keyboard_arrow_left_light=0x7f0800ad;
    public static final int ic_keyboard_arrow_right_light=0x7f0800ae;
    public static final int ic_launcher_background=0x7f0800af;
    public static final int ic_launcher_foreground=0x7f0800b0;
    public static final int ic_menu_refresh_holo_dark=0x7f0800b1;
    public static final int ic_mp_audio_mic=0x7f0800b2;
    public static final int ic_mp_camera_large_light=0x7f0800b3;
    public static final int ic_mp_camera_small_light=0x7f0800b4;
    public static final int ic_mp_capture_stop_large_light=0x7f0800b5;
    public static final int ic_mp_full_screen_light=0x7f0800b6;
    public static final int ic_mp_video_large_light=0x7f0800b7;
    public static final int ic_mp_video_small_light=0x7f0800b8;
    public static final int ic_music=0x7f0800b9;
    public static final int ic_numeric_dialpad=0x7f0800ba;
    public static final int ic_oobe_conv_list=0x7f0800bb;
    public static final int ic_oobe_freq_list=0x7f0800bc;
    public static final int ic_open_in_new=0x7f0800bd;
    public static final int ic_people_add_light=0x7f0800be;
    public static final int ic_person_add_blue=0x7f0800bf;
    public static final int ic_person_add_dark=0x7f0800c0;
    public static final int ic_person_add_light=0x7f0800c1;
    public static final int ic_person_light=0x7f0800c2;
    public static final int ic_person_light_large=0x7f0800c3;
    public static final int ic_person_wear=0x7f0800c4;
    public static final int ic_phone_small_light=0x7f0800c5;
    public static final int ic_photo_library_light=0x7f0800c6;
    public static final int ic_preview_pause=0x7f0800c7;
    public static final int ic_preview_play=0x7f0800c8;
    public static final int ic_remove_light=0x7f0800c9;
    public static final int ic_remove_small_light=0x7f0800ca;
    public static final int ic_save_dark=0x7f0800cb;
    public static final int ic_save_light=0x7f0800cc;
    public static final int ic_search_light=0x7f0800cd;
    public static final int ic_send_dark=0x7f0800ce;
    public static final int ic_send_light=0x7f0800cf;
    public static final int ic_share_dark=0x7f0800d0;
    public static final int ic_share_light=0x7f0800d1;
    public static final int ic_sim_card_send=0x7f0800d2;
    public static final int ic_sms_delivery_ok=0x7f0800d3;
    public static final int ic_sms_failed_light=0x7f0800d4;
    public static final int ic_sms_light=0x7f0800d5;
    public static final int ic_sms_multi_light=0x7f0800d6;
    public static final int ic_tooltip_arrow=0x7f0800d7;
    public static final int ic_video_play_light=0x7f0800d8;
    public static final int ic_wear_read=0x7f0800d9;
    public static final int ic_wear_reply=0x7f0800da;
    public static final int ic_widget_avatar_shadow=0x7f0800db;
    public static final int ic_widget_list=0x7f0800dc;
    public static final int ic_work_profile=0x7f0800dd;
    public static final int list_item_font_primary=0x7f0800de;
    public static final int list_item_font_secondary=0x7f0800df;
    public static final int mediapicker_tab_button_background=0x7f0800e0;
    public static final int message_bubble_incoming_no_arrow=0x7f0800e1;
    public static final int message_bubble_outgoing_no_arrow=0x7f0800e2;
    public static final int messenger_widget_conversation_preview=0x7f0800e3;
    public static final int messenger_widget_preview=0x7f0800e4;
    public static final int msg_bubble_error=0x7f0800e5;
    public static final int msg_bubble_incoming=0x7f0800e6;
    public static final int msg_bubble_input=0x7f0800e7;
    public static final int msg_bubble_outgoing=0x7f0800e8;
    public static final int notification_action_background=0x7f0800e9;
    public static final int notification_bg=0x7f0800ea;
    public static final int notification_bg_low=0x7f0800eb;
    public static final int notification_bg_low_normal=0x7f0800ec;
    public static final int notification_bg_low_pressed=0x7f0800ed;
    public static final int notification_bg_normal=0x7f0800ee;
    public static final int notification_bg_normal_pressed=0x7f0800ef;
    public static final int notification_icon_background=0x7f0800f0;
    public static final int notification_template_icon_bg=0x7f0800f1;
    public static final int notification_template_icon_low_bg=0x7f0800f2;
    public static final int notification_tile_bg=0x7f0800f3;
    public static final int notify_panel_notification_icon_bg=0x7f0800f4;
    public static final int permissions=0x7f0800f5;
    public static final int send_arrow_background=0x7f0800f6;
    public static final int sim_selector_background_gradient=0x7f0800f7;
    public static final int stat_notify_chat=0x7f0800f8;
    public static final int subject_editor_bubble=0x7f0800f9;
    public static final int swipe_shadow=0x7f0800fa;
    public static final int swipe_shadow_drag=0x7f0800fb;
    public static final int sym_keyboard_delete_holo=0x7f0800fc;
    public static final int sym_keyboard_delete_holo_dark=0x7f0800fd;
    public static final int tab_btn_bg=0x7f0800fe;
    public static final int tab_btn_bg_normal=0x7f0800ff;
    public static final int tab_btn_bg_pressed=0x7f080100;
    public static final int tab_indicator=0x7f080101;
    public static final int tab_selected=0x7f080102;
    public static final int tab_selected_focused_holo=0x7f080103;
    public static final int tab_selected_pressed_focused_holo=0x7f080104;
    public static final int tab_selected_pressed_holo=0x7f080105;
    public static final int tab_unselected=0x7f080106;
    public static final int tab_unselected_focused_holo=0x7f080107;
    public static final int tab_unselected_pressed_focused_holo=0x7f080108;
    public static final int tab_unselected_pressed_holo=0x7f080109;
    public static final int tooltip_frame_dark=0x7f08010a;
    public static final int tooltip_frame_light=0x7f08010b;
    public static final int transparent_button_background=0x7f08010c;
    public static final int widget_bottom_background=0x7f08010d;
    public static final int widget_hr=0x7f08010e;
    public static final int widget_item_background=0x7f08010f;
    public static final int widget_msg_bubble_incoming=0x7f080110;
    public static final int widget_msg_bubble_outgoing=0x7f080111;
    public static final int widget_top_background=0x7f080112;
  }
  public static final class fraction {
    /**
     * ms
     */
    public static final int camera_shutter_max_alpha=0x7f090000;
  }
  public static final class id {
    public static final int ALT=0x7f0a0000;
    public static final int CTRL=0x7f0a0001;
    public static final int FUNCTION=0x7f0a0002;
    public static final int META=0x7f0a0003;
    public static final int SHIFT=0x7f0a0004;
    public static final int SYM=0x7f0a0005;
    public static final int accessibility_action_clickable_span=0x7f0a0006;
    public static final int accessibility_custom_action_0=0x7f0a0007;
    public static final int accessibility_custom_action_1=0x7f0a0008;
    public static final int accessibility_custom_action_10=0x7f0a0009;
    public static final int accessibility_custom_action_11=0x7f0a000a;
    public static final int accessibility_custom_action_12=0x7f0a000b;
    public static final int accessibility_custom_action_13=0x7f0a000c;
    public static final int accessibility_custom_action_14=0x7f0a000d;
    public static final int accessibility_custom_action_15=0x7f0a000e;
    public static final int accessibility_custom_action_16=0x7f0a000f;
    public static final int accessibility_custom_action_17=0x7f0a0010;
    public static final int accessibility_custom_action_18=0x7f0a0011;
    public static final int accessibility_custom_action_19=0x7f0a0012;
    public static final int accessibility_custom_action_2=0x7f0a0013;
    public static final int accessibility_custom_action_20=0x7f0a0014;
    public static final int accessibility_custom_action_21=0x7f0a0015;
    public static final int accessibility_custom_action_22=0x7f0a0016;
    public static final int accessibility_custom_action_23=0x7f0a0017;
    public static final int accessibility_custom_action_24=0x7f0a0018;
    public static final int accessibility_custom_action_25=0x7f0a0019;
    public static final int accessibility_custom_action_26=0x7f0a001a;
    public static final int accessibility_custom_action_27=0x7f0a001b;
    public static final int accessibility_custom_action_28=0x7f0a001c;
    public static final int accessibility_custom_action_29=0x7f0a001d;
    public static final int accessibility_custom_action_3=0x7f0a001e;
    public static final int accessibility_custom_action_30=0x7f0a001f;
    public static final int accessibility_custom_action_31=0x7f0a0020;
    public static final int accessibility_custom_action_4=0x7f0a0021;
    public static final int accessibility_custom_action_5=0x7f0a0022;
    public static final int accessibility_custom_action_6=0x7f0a0023;
    public static final int accessibility_custom_action_7=0x7f0a0024;
    public static final int accessibility_custom_action_8=0x7f0a0025;
    public static final int accessibility_custom_action_9=0x7f0a0026;
    public static final int action=0x7f0a0027;
    public static final int action0=0x7f0a0028;
    public static final int action_add_contact=0x7f0a0029;
    public static final int action_add_more_participants=0x7f0a002a;
    public static final int action_archive=0x7f0a002b;
    public static final int action_bar=0x7f0a002c;
    public static final int action_bar_activity_content=0x7f0a002d;
    public static final int action_bar_container=0x7f0a002e;
    public static final int action_bar_root=0x7f0a002f;
    public static final int action_bar_spinner=0x7f0a0030;
    public static final int action_bar_subtitle=0x7f0a0031;
    public static final int action_bar_title=0x7f0a0032;
    public static final int action_block=0x7f0a0033;
    public static final int action_call=0x7f0a0034;
    public static final int action_confirm_multiselect=0x7f0a0035;
    public static final int action_confirm_participants=0x7f0a0036;
    public static final int action_confirm_selection=0x7f0a0037;
    public static final int action_container=0x7f0a0038;
    public static final int action_context_bar=0x7f0a0039;
    public static final int action_debug_options=0x7f0a003a;
    public static final int action_delete=0x7f0a003b;
    public static final int action_delete_message=0x7f0a003c;
    public static final int action_delete_text=0x7f0a003d;
    public static final int action_divider=0x7f0a003e;
    public static final int action_download=0x7f0a003f;
    public static final int action_image=0x7f0a0040;
    public static final int action_ime_dialpad_toggle=0x7f0a0041;
    public static final int action_license=0x7f0a0042;
    public static final int action_menu_divider=0x7f0a0043;
    public static final int action_menu_presenter=0x7f0a0044;
    public static final int action_mode_bar=0x7f0a0045;
    public static final int action_mode_bar_stub=0x7f0a0046;
    public static final int action_mode_close_button=0x7f0a0047;
    public static final int action_multiselect=0x7f0a0048;
    public static final int action_people_and_options=0x7f0a0049;
    public static final int action_save=0x7f0a004a;
    public static final int action_send=0x7f0a004b;
    public static final int action_settings=0x7f0a004c;
    public static final int action_share=0x7f0a004d;
    public static final int action_show_archived=0x7f0a004e;
    public static final int action_show_blocked_contacts=0x7f0a004f;
    public static final int action_start_new_conversation=0x7f0a0050;
    public static final int action_text=0x7f0a0051;
    public static final int action_unarchive=0x7f0a0052;
    public static final int actions=0x7f0a0053;
    public static final int activity_chooser_view_content=0x7f0a0054;
    public static final int add=0x7f0a0055;
    public static final int additional_info=0x7f0a0056;
    public static final int alertTitle=0x7f0a0057;
    public static final int all=0x7f0a0058;
    public static final int all_contacts_list=0x7f0a0059;
    public static final int alphabet_header=0x7f0a005a;
    public static final int always=0x7f0a005b;
    public static final int apn_radiobutton=0x7f0a005c;
    public static final int async=0x7f0a005d;
    public static final int attach_media_button=0x7f0a005e;
    public static final int attachment=0x7f0a005f;
    public static final int attachmentFrame=0x7f0a0060;
    public static final int attachment_chooser_fragment=0x7f0a0061;
    public static final int attachment_container=0x7f0a0062;
    public static final int attachment_content=0x7f0a0063;
    public static final int attachment_draft_view=0x7f0a0064;
    public static final int attachment_image_view=0x7f0a0065;
    public static final int attachment_video_thumbnail=0x7f0a0066;
    public static final int attachment_view=0x7f0a0067;
    public static final int audio_attachment_background=0x7f0a0068;
    public static final int audio_attachment_view=0x7f0a0069;
    public static final int avatarFrame=0x7f0a006a;
    public static final int avatarShadow=0x7f0a006b;
    public static final int avatarView=0x7f0a006c;
    public static final int baseline=0x7f0a006d;
    public static final int beginning=0x7f0a006e;
    public static final int blocked_participants_fragment=0x7f0a006f;
    public static final int blocking=0x7f0a0070;
    public static final int bottom=0x7f0a0071;
    public static final int bottom_line=0x7f0a0072;
    public static final int buttonPanel=0x7f0a0073;
    public static final int camera_button_container=0x7f0a0074;
    public static final int camera_cancel_button=0x7f0a0075;
    public static final int camera_capture_button=0x7f0a0076;
    public static final int camera_fullScreen_button=0x7f0a0077;
    public static final int camera_preview=0x7f0a0078;
    public static final int camera_shutter_visual=0x7f0a0079;
    public static final int camera_swapCamera_button=0x7f0a007a;
    public static final int camera_swap_mode_button=0x7f0a007b;
    public static final int camera_video_counter=0x7f0a007c;
    public static final int cancel_action=0x7f0a007d;
    public static final int caption=0x7f0a007e;
    public static final int center=0x7f0a007f;
    public static final int center_horizontal=0x7f0a0080;
    public static final int center_vertical=0x7f0a0081;
    public static final int checkbox=0x7f0a0082;
    public static final int checked=0x7f0a0083;
    public static final int chip_autocomplete_bottom_divider=0x7f0a0084;
    public static final int chip_autocomplete_top_divider=0x7f0a0085;
    public static final int chip_indicator_text=0x7f0a0086;
    public static final int chip_permission_bottom_divider=0x7f0a0087;
    public static final int chip_permission_wrapper=0x7f0a0088;
    public static final int chip_person_wrapper=0x7f0a0089;
    public static final int chronometer=0x7f0a008a;
    public static final int clip_horizontal=0x7f0a008b;
    public static final int clip_vertical=0x7f0a008c;
    public static final int close_button=0x7f0a008d;
    public static final int collapseActionView=0x7f0a008e;
    public static final int color_picker=0x7f0a008f;
    public static final int color_picker_checkmark=0x7f0a0090;
    public static final int color_picker_swatch=0x7f0a0091;
    public static final int compact=0x7f0a0092;
    public static final int compose_contact_divider=0x7f0a0093;
    public static final int compose_message_text=0x7f0a0094;
    public static final int compose_subject_text=0x7f0a0095;
    public static final int contact_checkmark=0x7f0a0096;
    public static final int contact_detail_type=0x7f0a0097;
    public static final int contact_details=0x7f0a0098;
    public static final int contact_icon=0x7f0a0099;
    public static final int contact_name=0x7f0a009a;
    public static final int contact_pager=0x7f0a009b;
    public static final int contact_picker_fragment_container=0x7f0a009c;
    public static final int content=0x7f0a009d;
    public static final int contentPanel=0x7f0a009e;
    public static final int conversation_and_compose_container=0x7f0a009f;
    public static final int conversation_checkmark=0x7f0a00a0;
    public static final int conversation_compose_divider=0x7f0a00a1;
    public static final int conversation_failed_status_icon=0x7f0a00a2;
    public static final int conversation_fragment_container=0x7f0a00a3;
    public static final int conversation_icon=0x7f0a00a4;
    public static final int conversation_image_preview=0x7f0a00a5;
    public static final int conversation_list=0x7f0a00a6;
    public static final int conversation_list_fragment=0x7f0a00a7;
    public static final int conversation_name=0x7f0a00a8;
    public static final int conversation_snippet=0x7f0a00a9;
    public static final int conversation_subject=0x7f0a00aa;
    public static final int conversation_timestamp=0x7f0a00ab;
    public static final int conversation_title=0x7f0a00ac;
    public static final int conversation_title_container=0x7f0a00ad;
    public static final int copy_text=0x7f0a00ae;
    public static final int crossSwipeArchiveIconLeft=0x7f0a00af;
    public static final int crossSwipeArchiveIconRight=0x7f0a00b0;
    public static final int crossSwipeBackground=0x7f0a00b1;
    public static final int custom=0x7f0a00b2;
    public static final int customPanel=0x7f0a00b3;
    public static final int date=0x7f0a00b4;
    public static final int debug_mmsconfig_fragment=0x7f0a00b5;
    public static final int decor_content_parent=0x7f0a00b6;
    public static final int default_activity_button=0x7f0a00b7;
    public static final int delete_subject_button=0x7f0a00b8;
    public static final int details=0x7f0a00b9;
    public static final int details_container=0x7f0a00ba;
    public static final int details_menu=0x7f0a00bb;
    public static final int determinate_progress=0x7f0a00bc;
    public static final int dialog_button=0x7f0a00bd;
    public static final int disableHome=0x7f0a00be;
    public static final int disable_group_mms_button=0x7f0a00bf;
    public static final int divider=0x7f0a00c0;
    public static final int dump_file_list=0x7f0a00c1;
    public static final int edit_query=0x7f0a00c2;
    public static final int empty_image_hint=0x7f0a00c3;
    public static final int empty_text=0x7f0a00c4;
    public static final int empty_text_hint=0x7f0a00c5;
    public static final int empty_view=0x7f0a00c6;
    public static final int enable_group_mms_button=0x7f0a00c7;
    public static final int enable_permission_procedure=0x7f0a00c8;
    public static final int end=0x7f0a00c9;
    public static final int end_padder=0x7f0a00ca;
    public static final int errorBlock=0x7f0a00cb;
    public static final int errorSnippet=0x7f0a00cc;
    public static final int errorText=0x7f0a00cd;
    public static final int exit=0x7f0a00ce;
    public static final int expand_activities_button=0x7f0a00cf;
    public static final int expanded_menu=0x7f0a00d0;
    public static final int explode_view=0x7f0a00d1;
    public static final int file=0x7f0a00d2;
    public static final int file_info=0x7f0a00d3;
    public static final int file_name=0x7f0a00d4;
    public static final int file_type=0x7f0a00d5;
    public static final int fill=0x7f0a00d6;
    public static final int fill_horizontal=0x7f0a00d7;
    public static final int fill_vertical=0x7f0a00d8;
    public static final int focus_visual=0x7f0a00d9;
    public static final int forever=0x7f0a00da;
    public static final int forward_message_menu=0x7f0a00db;
    public static final int fragment_container_view_tag=0x7f0a00dc;
    public static final int free_storage_action_list=0x7f0a00dd;
    public static final int frequent_contacts_list=0x7f0a00de;
    public static final int from=0x7f0a00df;
    public static final int gallery_grid_view=0x7f0a00e0;
    public static final int grid=0x7f0a00e1;
    public static final int group_divider=0x7f0a00e2;
    public static final int header_text=0x7f0a00e3;
    public static final int hint_text=0x7f0a00e4;
    public static final int home=0x7f0a00e5;
    public static final int homeAsUp=0x7f0a00e6;
    public static final int icon=0x7f0a00e7;
    public static final int icon_group=0x7f0a00e8;
    public static final int ifRoom=0x7f0a00e9;
    public static final int image=0x7f0a00ea;
    public static final int imageThumbnail=0x7f0a00eb;
    public static final int indeterminate_progress=0x7f0a00ec;
    public static final int info=0x7f0a00ed;
    public static final int italic=0x7f0a00ee;
    public static final int item_touch_helper_previous_elevation=0x7f0a00ef;
    public static final int large=0x7f0a00f0;
    public static final int launcher_icon=0x7f0a00f1;
    public static final int left=0x7f0a00f2;
    public static final int line1=0x7f0a00f3;
    public static final int line3=0x7f0a00f4;
    public static final int list=0x7f0a00f5;
    public static final int listMode=0x7f0a00f6;
    public static final int list_item=0x7f0a00f7;
    public static final int list_layout_parent=0x7f0a00f8;
    public static final int loading_text=0x7f0a00f9;
    public static final int map_image=0x7f0a00fa;
    public static final int media_actions=0x7f0a00fb;
    public static final int media_controller_compat_view_tag=0x7f0a00fc;
    public static final int mediapicker_container=0x7f0a00fd;
    public static final int mediapicker_enabled=0x7f0a00fe;
    public static final int mediapicker_tabstrip=0x7f0a00ff;
    public static final int mediapicker_view_pager=0x7f0a0100;
    public static final int message=0x7f0a0101;
    public static final int message_attachments=0x7f0a0102;
    public static final int message_body_size=0x7f0a0103;
    public static final int message_compose_view_container=0x7f0a0104;
    public static final int message_content=0x7f0a0105;
    public static final int message_image=0x7f0a0106;
    public static final int message_list=0x7f0a0107;
    public static final int message_metadata=0x7f0a0108;
    public static final int message_sender_name=0x7f0a0109;
    public static final int message_status=0x7f0a010a;
    public static final int message_text=0x7f0a010b;
    public static final int message_text_and_info=0x7f0a010c;
    public static final int message_title=0x7f0a010d;
    public static final int message_title_layout=0x7f0a010e;
    public static final int middle=0x7f0a010f;
    public static final int missing_permission_view=0x7f0a0110;
    public static final int mms_indicator=0x7f0a0111;
    public static final int mms_info=0x7f0a0112;
    public static final int multiple_attachments=0x7f0a0113;
    public static final int multiply=0x7f0a0114;
    public static final int name=0x7f0a0115;
    public static final int never=0x7f0a0116;
    public static final int next=0x7f0a0117;
    public static final int no_conversations_view=0x7f0a0118;
    public static final int none=0x7f0a0119;
    public static final int normal=0x7f0a011a;
    public static final int notification_background=0x7f0a011b;
    public static final int notification_main_column=0x7f0a011c;
    public static final int notification_main_column_container=0x7f0a011d;
    public static final int off=0x7f0a011e;
    public static final int on=0x7f0a011f;
    public static final int osl_web_view=0x7f0a0120;
    public static final int pager=0x7f0a0121;
    public static final int parentPanel=0x7f0a0122;
    public static final int participant_name=0x7f0a0123;
    public static final int pause_button=0x7f0a0124;
    public static final int pending_item_view=0x7f0a0125;
    public static final int people_and_options_fragment=0x7f0a0126;
    public static final int people_and_options_header=0x7f0a0127;
    public static final int photo_activity_background=0x7f0a0128;
    public static final int photo_activity_root_view=0x7f0a0129;
    public static final int photo_activity_temporary_image=0x7f0a012a;
    public static final int photo_preview=0x7f0a012b;
    public static final int photo_preview_image=0x7f0a012c;
    public static final int photo_view=0x7f0a012d;
    public static final int photo_view_pager=0x7f0a012e;
    public static final int place_notes=0x7f0a012f;
    public static final int place_picker_container=0x7f0a0130;
    public static final int place_picker_fragment=0x7f0a0131;
    public static final int place_subtitle=0x7f0a0132;
    public static final int place_title=0x7f0a0133;
    public static final int playButton=0x7f0a0134;
    public static final int play_button=0x7f0a0135;
    public static final int play_pause_button=0x7f0a0136;
    public static final int playableVideo=0x7f0a0137;
    public static final int progress=0x7f0a0138;
    public static final int progress_circular=0x7f0a0139;
    public static final int progress_horizontal=0x7f0a013a;
    public static final int radio=0x7f0a013b;
    public static final int recipient_text_view=0x7f0a013c;
    public static final int record_button=0x7f0a013d;
    public static final int record_button_visual=0x7f0a013e;
    public static final int retry_button=0x7f0a013f;
    public static final int right=0x7f0a0140;
    public static final int right_icon=0x7f0a0141;
    public static final int right_side=0x7f0a0142;
    public static final int save_attachment=0x7f0a0143;
    public static final int screen=0x7f0a0144;
    public static final int scrollIndicatorDown=0x7f0a0145;
    public static final int scrollIndicatorUp=0x7f0a0146;
    public static final int scrollView=0x7f0a0147;
    public static final int search_badge=0x7f0a0148;
    public static final int search_bar=0x7f0a0149;
    public static final int search_button=0x7f0a014a;
    public static final int search_close_btn=0x7f0a014b;
    public static final int search_edit_frame=0x7f0a014c;
    public static final int search_go_btn=0x7f0a014d;
    public static final int search_mag_icon=0x7f0a014e;
    public static final int search_plate=0x7f0a014f;
    public static final int search_src_text=0x7f0a0150;
    public static final int search_voice_btn=0x7f0a0151;
    public static final int select_dialog_listview=0x7f0a0152;
    public static final int self_send_icon=0x7f0a0153;
    public static final int send_message_button=0x7f0a0154;
    public static final int settings=0x7f0a0155;
    public static final int share_intent_fragment=0x7f0a0156;
    public static final int share_message_menu=0x7f0a0157;
    public static final int shortcut=0x7f0a0158;
    public static final int showCustom=0x7f0a0159;
    public static final int showHome=0x7f0a015a;
    public static final int showTitle=0x7f0a015b;
    public static final int sim_icon=0x7f0a015c;
    public static final int sim_list=0x7f0a015d;
    public static final int sim_name=0x7f0a015e;
    public static final int sim_selector=0x7f0a015f;
    public static final int sim_title=0x7f0a0160;
    public static final int small=0x7f0a0161;
    public static final int smsDeliveredBadge=0x7f0a0162;
    public static final int snack_bar=0x7f0a0163;
    public static final int snack_bar_action=0x7f0a0164;
    public static final int snack_bar_message=0x7f0a0165;
    public static final int snack_bar_message_wrapper=0x7f0a0166;
    public static final int snackbarContainer=0x7f0a0167;
    public static final int snippet=0x7f0a0168;
    public static final int sound_levels=0x7f0a0169;
    public static final int spacer=0x7f0a016a;
    public static final int special_effects_controller_view_tag=0x7f0a016b;
    public static final int split_action_bar=0x7f0a016c;
    public static final int src_atop=0x7f0a016d;
    public static final int src_in=0x7f0a016e;
    public static final int src_over=0x7f0a016f;
    public static final int start=0x7f0a0170;
    public static final int start_new_conversation_button=0x7f0a0171;
    public static final int status_bar_latest_event_content=0x7f0a0172;
    public static final int subcompact=0x7f0a0173;
    public static final int subject_container=0x7f0a0174;
    public static final int subject_label=0x7f0a0175;
    public static final int subject_text=0x7f0a0176;
    public static final int subject_view=0x7f0a0177;
    public static final int submenuarrow=0x7f0a0178;
    public static final int submit_area=0x7f0a0179;
    public static final int subtitle=0x7f0a017a;
    public static final int swipeableContainer=0x7f0a017b;
    public static final int swipeableContent=0x7f0a017c;
    public static final int switch_button=0x7f0a017d;
    public static final int tabMode=0x7f0a017e;
    public static final int tab_strip=0x7f0a017f;
    public static final int tag_accessibility_actions=0x7f0a0180;
    public static final int tag_accessibility_clickable_spans=0x7f0a0181;
    public static final int tag_accessibility_heading=0x7f0a0182;
    public static final int tag_accessibility_pane_title=0x7f0a0183;
    public static final int tag_on_apply_window_listener=0x7f0a0184;
    public static final int tag_on_receive_content_listener=0x7f0a0185;
    public static final int tag_on_receive_content_mime_types=0x7f0a0186;
    public static final int tag_screen_reader_focusable=0x7f0a0187;
    public static final int tag_state_description=0x7f0a0188;
    public static final int tag_transition_group=0x7f0a0189;
    public static final int tag_unhandled_key_event_manager=0x7f0a018a;
    public static final int tag_unhandled_key_listeners=0x7f0a018b;
    public static final int tag_window_insets_animation_callback=0x7f0a018c;
    public static final int tap_to_unblock=0x7f0a018d;
    public static final int test_container=0x7f0a018e;
    public static final int test_content=0x7f0a018f;
    public static final int text=0x7f0a0190;
    public static final int text1=0x7f0a0191;
    public static final int text2=0x7f0a0192;
    public static final int textSpacerNoButtons=0x7f0a0193;
    public static final int textSpacerNoTitle=0x7f0a0194;
    public static final int text_layout=0x7f0a0195;
    public static final int text_value=0x7f0a0196;
    public static final int thumbnail=0x7f0a0197;
    public static final int time=0x7f0a0198;
    public static final int timer=0x7f0a0199;
    public static final int timer_text=0x7f0a019a;
    public static final int title=0x7f0a019b;
    public static final int titleDividerNoCustom=0x7f0a019c;
    public static final int title_template=0x7f0a019d;
    public static final int toolbar=0x7f0a019e;
    public static final int top=0x7f0a019f;
    public static final int topPanel=0x7f0a01a0;
    public static final int top_line=0x7f0a01a1;
    public static final int top_margin=0x7f0a01a2;
    public static final int unchecked=0x7f0a01a3;
    public static final int uniform=0x7f0a01a4;
    public static final int up=0x7f0a01a5;
    public static final int useLogo=0x7f0a01a6;
    public static final int vcard_attachment_view=0x7f0a01a7;
    public static final int vcard_detail_fragment=0x7f0a01a8;
    public static final int video_thumbnail_image=0x7f0a01a9;
    public static final int video_thumbnail_play_button=0x7f0a01aa;
    public static final int view_tree_lifecycle_owner=0x7f0a01ab;
    public static final int view_tree_saved_state_registry_owner=0x7f0a01ac;
    public static final int view_tree_view_model_store_owner=0x7f0a01ad;
    public static final int visible_removing_fragment_view_tag=0x7f0a01ae;
    public static final int widget_compose=0x7f0a01af;
    public static final int widget_configuration=0x7f0a01b0;
    public static final int widget_conversation_list_item=0x7f0a01b1;
    public static final int widget_goto_conversation_list=0x7f0a01b2;
    public static final int widget_header=0x7f0a01b3;
    public static final int widget_label=0x7f0a01b4;
    public static final int widget_loading=0x7f0a01b5;
    public static final int widget_message_item_incoming=0x7f0a01b6;
    public static final int widget_message_item_outgoing=0x7f0a01b7;
    public static final int withText=0x7f0a01b8;
    public static final int work_profile_icon=0x7f0a01b9;
    public static final int wrap_content=0x7f0a01ba;
  }
  public static final class integer {
    public static final int abc_config_activityDefaultDur=0x7f0b0000;
    public static final int abc_config_activityShortDur=0x7f0b0001;
    /**
     * The packaged version of APNs and MMS configurations
     */
    public static final int apnsAndMmsConfigsVersion=0x7f0b0002;
    /**
     * ms
     */
    public static final int asyncimage_transition_duration=0x7f0b0003;
    /**
     * ms
     */
    public static final int camera_shutter_duration=0x7f0b0004;
    public static final int cancel_button_image_alpha=0x7f0b0005;
    public static final int chips_max_lines=0x7f0b0006;
    /**
     * ms
     */
    public static final int compose_transition_duration=0x7f0b0007;
    public static final int config_tooltipAnimTime=0x7f0b0008;
    /**
     * Fab animation const
     */
    public static final int fab_animation_duration_ms=0x7f0b0009;
    /**
     * Conversation list -> conversation animation const
     */
    public static final int list_to_conversation_animation_duration_ms=0x7f0b000a;
    public static final int mediapicker_transition_duration=0x7f0b000b;
    public static final int reenter_fullscreen_delay_time_in_millis=0x7f0b000c;
    /**
     * Generic reveal view animation duration
     */
    public static final int reveal_view_animation_duration=0x7f0b000d;
    public static final int snackbar_translation_duration_ms=0x7f0b000e;
    public static final int status_bar_notification_info_maxnum=0x7f0b000f;
    /**
     * Swipe to Archive consts
     */
    public static final int swipe_duration_ms=0x7f0b0010;
    public static final int swipe_max_fling_velocity_px_per_s=0x7f0b0011;
  }
  public static final class interpolator {
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_0=0x7f0c0000;
    public static final int btn_checkbox_checked_mtrl_animation_interpolator_1=0x7f0c0001;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_0=0x7f0c0002;
    public static final int btn_checkbox_unchecked_mtrl_animation_interpolator_1=0x7f0c0003;
    public static final int btn_radio_to_off_mtrl_animation_interpolator_0=0x7f0c0004;
    public static final int btn_radio_to_on_mtrl_animation_interpolator_0=0x7f0c0005;
    public static final int fast_out_slow_in=0x7f0c0006;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0d0000;
    public static final int abc_action_bar_up_container=0x7f0d0001;
    public static final int abc_action_menu_item_layout=0x7f0d0002;
    public static final int abc_action_menu_layout=0x7f0d0003;
    public static final int abc_action_mode_bar=0x7f0d0004;
    public static final int abc_action_mode_close_item_material=0x7f0d0005;
    public static final int abc_activity_chooser_view=0x7f0d0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0d0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0d0008;
    public static final int abc_alert_dialog_material=0x7f0d0009;
    public static final int abc_alert_dialog_title_material=0x7f0d000a;
    public static final int abc_cascading_menu_item_layout=0x7f0d000b;
    public static final int abc_dialog_title_material=0x7f0d000c;
    public static final int abc_expanded_menu_layout=0x7f0d000d;
    public static final int abc_list_menu_item_checkbox=0x7f0d000e;
    public static final int abc_list_menu_item_icon=0x7f0d000f;
    public static final int abc_list_menu_item_layout=0x7f0d0010;
    public static final int abc_list_menu_item_radio=0x7f0d0011;
    public static final int abc_popup_menu_header_item_layout=0x7f0d0012;
    public static final int abc_popup_menu_item_layout=0x7f0d0013;
    public static final int abc_screen_content_include=0x7f0d0014;
    public static final int abc_screen_simple=0x7f0d0015;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0d0016;
    public static final int abc_screen_toolbar=0x7f0d0017;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0d0018;
    public static final int abc_search_view=0x7f0d0019;
    public static final int abc_select_dialog_material=0x7f0d001a;
    public static final int abc_tooltip=0x7f0d001b;
    public static final int action_bar_conversation_name=0x7f0d001c;
    public static final int add_contacts_confirmation_dialog_body=0x7f0d001d;
    public static final int all_contacts_list_view=0x7f0d001e;
    public static final int apn_preference_layout=0x7f0d001f;
    public static final int attachment_chooser_activity=0x7f0d0020;
    public static final int attachment_chooser_audio=0x7f0d0021;
    public static final int attachment_chooser_fragment=0x7f0d0022;
    public static final int attachment_chooser_image=0x7f0d0023;
    public static final int attachment_chooser_vcard=0x7f0d0024;
    public static final int attachment_chooser_video=0x7f0d0025;
    public static final int attachment_grid_item_view=0x7f0d0026;
    public static final int attachment_more_text_view=0x7f0d0027;
    public static final int attachment_multiple_audio=0x7f0d0028;
    public static final int attachment_multiple_image=0x7f0d0029;
    public static final int attachment_multiple_vcard=0x7f0d002a;
    public static final int attachment_multiple_video=0x7f0d002b;
    public static final int attachment_pending_item=0x7f0d002c;
    public static final int attachment_preview=0x7f0d002d;
    public static final int attachment_single_audio=0x7f0d002e;
    public static final int attachment_single_image=0x7f0d002f;
    public static final int attachment_single_vcard=0x7f0d0030;
    public static final int attachment_single_video=0x7f0d0031;
    public static final int audio_attachment_view=0x7f0d0032;
    public static final int blocked_participant_list_item_view=0x7f0d0033;
    public static final int blocked_participants_activity=0x7f0d0034;
    public static final int blocked_participants_fragment=0x7f0d0035;
    public static final int chips_alternates_dropdown_item=0x7f0d0036;
    public static final int chips_autocomplete_recipient_dropdown_item=0x7f0d0037;
    public static final int chips_recipient_dropdown_item=0x7f0d0038;
    public static final int color_picker_dialog=0x7f0d0039;
    public static final int color_picker_swatch=0x7f0d003a;
    public static final int compose_message_view=0x7f0d003b;
    public static final int contact_list_item_view=0x7f0d003c;
    public static final int contact_picker_fragment=0x7f0d003d;
    public static final int conversation_activity=0x7f0d003e;
    public static final int conversation_fragment=0x7f0d003f;
    public static final int conversation_list_activity=0x7f0d0040;
    public static final int conversation_list_fragment=0x7f0d0041;
    public static final int conversation_list_item_view=0x7f0d0042;
    public static final int conversation_message_view=0x7f0d0043;
    public static final int copy_contact_dialog_view=0x7f0d0044;
    public static final int custom_dialog=0x7f0d0045;
    public static final int custom_header_view_pager=0x7f0d0046;
    public static final int debug_mmsconfig_activity=0x7f0d0047;
    public static final int debug_mmsconfig_fragment=0x7f0d0048;
    public static final int debug_mmsconfig_item_view=0x7f0d0049;
    public static final int debug_sms_mms_from_dump_file_dialog=0x7f0d004a;
    public static final int enter_phone_number_view=0x7f0d004b;
    public static final int fastscroll_preview=0x7f0d004c;
    public static final int fastscroll_thumb=0x7f0d004d;
    public static final int fastscroll_track=0x7f0d004e;
    public static final int frequent_contacts_list_view=0x7f0d004f;
    public static final int gallery_grid_item_view=0x7f0d0050;
    public static final int group_mms_setting_dialog=0x7f0d0051;
    public static final int license_activity=0x7f0d0052;
    public static final int list_empty_view=0x7f0d0053;
    public static final int mediapicker_audio_chooser=0x7f0d0054;
    public static final int mediapicker_camera_chooser=0x7f0d0055;
    public static final int mediapicker_contact_chooser=0x7f0d0056;
    public static final int mediapicker_fragment=0x7f0d0057;
    public static final int mediapicker_gallery_chooser=0x7f0d0058;
    public static final int mediapicker_location_chooser=0x7f0d0059;
    public static final int mediapicker_location_container=0x7f0d005a;
    public static final int mediapicker_tab_button=0x7f0d005b;
    public static final int message_audio_attachment=0x7f0d005c;
    public static final int message_vcard_attachment=0x7f0d005d;
    public static final int message_video_attachment=0x7f0d005e;
    public static final int mms_config_debug_fragment=0x7f0d005f;
    public static final int more_item=0x7f0d0060;
    public static final int notification_action=0x7f0d0061;
    public static final int notification_action_tombstone=0x7f0d0062;
    public static final int notification_media_action=0x7f0d0063;
    public static final int notification_media_cancel_action=0x7f0d0064;
    public static final int notification_template_big_media=0x7f0d0065;
    public static final int notification_template_big_media_custom=0x7f0d0066;
    public static final int notification_template_big_media_narrow=0x7f0d0067;
    public static final int notification_template_big_media_narrow_custom=0x7f0d0068;
    public static final int notification_template_custom_big=0x7f0d0069;
    public static final int notification_template_icon_group=0x7f0d006a;
    public static final int notification_template_lines_media=0x7f0d006b;
    public static final int notification_template_media=0x7f0d006c;
    public static final int notification_template_media_custom=0x7f0d006d;
    public static final int notification_template_part_chronometer=0x7f0d006e;
    public static final int notification_template_part_time=0x7f0d006f;
    public static final int open_source_licenses=0x7f0d0070;
    public static final int people_and_options_activity=0x7f0d0071;
    public static final int people_and_options_fragment=0x7f0d0072;
    public static final int people_and_options_section_header=0x7f0d0073;
    public static final int people_list_item_view=0x7f0d0074;
    public static final int people_options_item_view=0x7f0d0075;
    public static final int permission_check_activity=0x7f0d0076;
    public static final int person_item_view=0x7f0d0077;
    public static final int photo_activity_view=0x7f0d0078;
    public static final int photo_fragment_view=0x7f0d0079;
    public static final int photo_retry_button=0x7f0d007a;
    public static final int place_card=0x7f0d007b;
    public static final int select_dialog_item_material=0x7f0d007c;
    public static final int select_dialog_multichoice_material=0x7f0d007d;
    public static final int select_dialog_singlechoice_material=0x7f0d007e;
    public static final int settings_fragment=0x7f0d007f;
    public static final int settings_item_view=0x7f0d0080;
    public static final int share_intent_activity=0x7f0d0081;
    public static final int share_intent_conversation_list_view=0x7f0d0082;
    public static final int sim_selector_item_view=0x7f0d0083;
    public static final int sim_selector_view=0x7f0d0084;
    public static final int sms_free_storage_action_item_view=0x7f0d0085;
    public static final int sms_mms_dump_file_list_item=0x7f0d0086;
    public static final int sms_storage_low_warning_dialog=0x7f0d0087;
    public static final int snack_bar=0x7f0d0088;
    public static final int support_simple_spinner_dropdown_item=0x7f0d0089;
    public static final int test_activity=0x7f0d008a;
    public static final int vcard_detail_activity=0x7f0d008b;
    public static final int vcard_detail_fragment=0x7f0d008c;
    public static final int video_thumbnail_view=0x7f0d008d;
    public static final int viewgroup_vertical_explode_animation_popup=0x7f0d008e;
    public static final int widget_conversation=0x7f0d008f;
    public static final int widget_conversation_list=0x7f0d0090;
    public static final int widget_conversation_list_item=0x7f0d0091;
    public static final int widget_loading=0x7f0d0092;
    public static final int widget_message_item_incoming=0x7f0d0093;
    public static final int widget_message_item_outgoing=0x7f0d0094;
    public static final int widget_missing_permission=0x7f0d0095;
    public static final int work_directory_header=0x7f0d0096;
  }
  public static final class menu {
    public static final int archived_conversation_list_menu=0x7f0e0000;
    public static final int attachment_chooser_menu=0x7f0e0001;
    public static final int compose_menu=0x7f0e0002;
    public static final int conversation_fragment_select_menu=0x7f0e0003;
    public static final int conversation_list_fragment_menu=0x7f0e0004;
    public static final int conversation_list_fragment_select_menu=0x7f0e0005;
    public static final int conversation_menu=0x7f0e0006;
    public static final int gallery_picker_menu=0x7f0e0007;
    public static final int photo_view_menu=0x7f0e0008;
    public static final int settings_menu=0x7f0e0009;
    public static final int vcard_detail_fragment_menu=0x7f0e000a;
  }
  public static final class mipmap {
    public static final int ic_launcher=0x7f0f0000;
  }
  public static final class plurals {
    /**
     * Toast text when creating a conversation with an invalid participant
     */
    public static final int add_invalid_contact_error=0x7f100000;
    /**
     * Announcement after the user adds or removes an attachment
     */
    public static final int attachment_changed_accessibility_announcement=0x7f100001;
    /**
     * Accessibility : Content descriptinon for ImageButtons and ImageViews
     */
    public static final int attachment_preview_close_content_description=0x7f100002;
    public static final int attachment_save_error=0x7f100003;
    public static final int attachments_saved=0x7f100004;
    public static final int attachments_saved_to_album=0x7f100005;
    public static final int attachments_saved_to_downloads=0x7f100006;
    /**
     * The hint text shown in the message compose input box when a single unknown attachment, or multiple different attachments are attached
     */
    public static final int compose_message_view_hint_text_attachments=0x7f100007;
    /**
     * The hint text shown in the message compose input box when audio recording(s) is attached
     */
    public static final int compose_message_view_hint_text_audio=0x7f100008;
    /**
     * The hint text shown in the message compose input box when photo(s) is attached
     */
    public static final int compose_message_view_hint_text_photo=0x7f100009;
    /**
     * The hint text shown in the message compose input box when vcard(s) is attached
     */
    public static final int compose_message_view_hint_text_vcard=0x7f10000a;
    /**
     * The hint text shown in the message compose input box when video(s) is attached
     */
    public static final int compose_message_view_hint_text_video=0x7f10000b;
    /**
     * Alert dialog title to accept or decline deleting conversation(s).
     */
    public static final int delete_conversations_confirmation_dialog_title=0x7f10000c;
    public static final int month_count=0x7f10000d;
    public static final int notification_download_failures=0x7f10000e;
    /**
     * notification line 1 for new message notification on the lock screen
     */
    public static final int notification_new_messages=0x7f10000f;
    public static final int notification_send_failures=0x7f100010;
    /**
     * Abbreviated message to express that something occurred some number of days in the past (e.g., 5 days ago).
     */
    public static final int num_days_ago=0x7f100011;
    /**
     * Abbreviated message to express that something occurred some number of hours in the past (e.g., 5 hours ago).
     */
    public static final int num_hours_ago=0x7f100012;
    /**
     * Abbreviated message to express that something occurred some number of minutes in the past (e.g., 5 minutes ago).
     */
    public static final int num_minutes_ago=0x7f100013;
    public static final int photos_saved_to_album=0x7f100014;
    /**
     * VCard display name for when there's more than one contact, e.g. "2 contact cards"
     */
    public static final int vcard_multiple_display_name=0x7f100015;
    public static final int videos_saved_to_album=0x7f100016;
    /**
     * The bottom line on a wearable notification that shows how many participants in the conversation
     */
    public static final int wearable_participant_count=0x7f100017;
    /**
     * Plurals used for the duration in free sms storage action and confirm strings above
     * Example: "Delete messages older than a week"
     */
    public static final int week_count=0x7f100018;
    public static final int year_count=0x7f100019;
  }
  public static final class raw {
    public static final int audio_end=0x7f110000;
    public static final int audio_initiate=0x7f110001;
    public static final int db_op_debug=0x7f110002;
    public static final int message_failure=0x7f110003;
    public static final int message_inc_thread=0x7f110004;
    public static final int message_sent=0x7f110005;
    public static final int server_request_debug=0x7f110006;
  }
  public static final class string {
    public static final int abc_action_bar_home_description=0x7f120000;
    public static final int abc_action_bar_up_description=0x7f120001;
    public static final int abc_action_menu_overflow_description=0x7f120002;
    public static final int abc_action_mode_done=0x7f120003;
    public static final int abc_activity_chooser_view_see_all=0x7f120004;
    public static final int abc_activitychooserview_choose_application=0x7f120005;
    public static final int abc_capital_off=0x7f120006;
    public static final int abc_capital_on=0x7f120007;
    public static final int abc_menu_alt_shortcut_label=0x7f120008;
    public static final int abc_menu_ctrl_shortcut_label=0x7f120009;
    public static final int abc_menu_delete_shortcut_label=0x7f12000a;
    public static final int abc_menu_enter_shortcut_label=0x7f12000b;
    public static final int abc_menu_function_shortcut_label=0x7f12000c;
    public static final int abc_menu_meta_shortcut_label=0x7f12000d;
    public static final int abc_menu_shift_shortcut_label=0x7f12000e;
    public static final int abc_menu_space_shortcut_label=0x7f12000f;
    public static final int abc_menu_sym_shortcut_label=0x7f120010;
    public static final int abc_prepend_shortcut_label=0x7f120011;
    public static final int abc_search_hint=0x7f120012;
    public static final int abc_searchview_description_clear=0x7f120013;
    public static final int abc_searchview_description_query=0x7f120014;
    public static final int abc_searchview_description_search=0x7f120015;
    public static final int abc_searchview_description_submit=0x7f120016;
    public static final int abc_searchview_description_voice=0x7f120017;
    public static final int abc_shareactionprovider_share_with=0x7f120018;
    public static final int abc_shareactionprovider_share_with_application=0x7f120019;
    public static final int abc_toolbar_collapse_description=0x7f12001a;
    /**
     * Announce that there are no possible recipient entries that the user can select from for accessibility purposes [CHAR LIMIT=200]
     */
    public static final int accessbility_suggestion_dropdown_closed=0x7f12001b;
    /**
     * Announce the number of possible recipient entries that the user can select from for accessibility purposes [CHAR LIMIT=200]
     */
    public static final int accessbility_suggestion_dropdown_opened=0x7f12001c;
    /**
     * Action menu title for adding the contacts for the selected conversations in conversation list
     */
    public static final int action_add_contact=0x7f12001d;
    /**
     * Action menu title for archiving selected conversations in conversation list
     */
    public static final int action_archive=0x7f12001e;
    /**
     * Action menu title for blocking and archiving selected conversations in conversation list
     */
    public static final int action_block=0x7f12001f;
    /**
     * Title for the phone call button in the action bar that lets the user call a participant in an SMS conversation
     */
    public static final int action_call=0x7f120020;
    /**
     * Action title: Close
     */
    public static final int action_close=0x7f120021;
    /**
     * Action menu title for confirming multiple selection in gallery image picker
     */
    public static final int action_confirm_multiselect=0x7f120022;
    /**
     * Action menu title for confirming attachment selection in the attachment chooser
     */
    public static final int action_confirm_selection=0x7f120023;
    /**
     * Option menu item in the conversation list view and conversation view that shows debug menu
     */
    public static final int action_debug_options=0x7f120024;
    /**
     * Action menu title for deleting selected conversations in conversation list
     */
    public static final int action_delete=0x7f120025;
    /**
     * Action menu title for deleting failed message selected in conversation
     */
    public static final int action_delete_message=0x7f120026;
    /**
     * Action menu title for downloading failed message selected in conversation
     */
    public static final int action_download=0x7f120027;
    /**
     * Text displayed in the enter key slot when the recipientedittextview has focus [CHAR LIMIT=12]
     */
    public static final int action_label=0x7f120028;
    /**
     * Action menu title for showing archived conversations
     */
    public static final int action_menu_show_archived=0x7f120029;
    /**
     * Action menu title for multiple selection in gallery image picker
     */
    public static final int action_multiselect=0x7f12002a;
    /**
     * Option menu item in the conversation view that lets user view list of conversation participants and change options
     */
    public static final int action_people_and_options=0x7f12002b;
    /**
     * Action menu title for sending failed message selected in conversation
     */
    public static final int action_send=0x7f12002c;
    public static final int action_settings=0x7f12002d;
    public static final int action_share=0x7f12002e;
    /**
     * Action menu title for unarchiving selected conversations in conversation list
     */
    public static final int action_unarchive=0x7f12002f;
    /**
     * Text for a toast message notifying the user that we can't find an appropriate application to handle their request
     */
    public static final int activity_not_found_message=0x7f120030;
    /**
     * Alert dialog accept adding the given phone number to your contacts button.
     */
    public static final int add_contact_confirmation=0x7f120031;
    /**
     * Alert dialog title to accept or decline adding the given phone number to your contacts.
     */
    public static final int add_contact_confirmation_dialog_title=0x7f120032;
    public static final int add_more_participants_button_content_description=0x7f120033;
    public static final int advanced_category_pref_key=0x7f120034;
    /**
     * Preference category: Advanced
     */
    public static final int advanced_category_pref_title=0x7f120035;
    public static final int advanced_pref_key=0x7f120036;
    /**
     * The title for advanced settings section in the settings activity
     */
    public static final int advanced_settings=0x7f120037;
    /**
     * The title for advanced settings activity
     */
    public static final int advanced_settings_activity_title=0x7f120038;
    /**
     * Edit access point labels: The actual access point name
     */
    public static final int apn_apn=0x7f120039;
    /**
     * Screen title after user selects APNs setting option
     */
    public static final int apn_edit=0x7f12003a;
    public static final int apn_list_pref_key=0x7f12003b;
    /**
     * Edit access point labels:
     */
    public static final int apn_mcc=0x7f12003c;
    /**
     * Edit access point labels: The port on the proxy used for MMS
     */
    public static final int apn_mms_port=0x7f12003d;
    /**
     * Edit access point labels: The proxy to use for MMS (multimedia messages)
     */
    public static final int apn_mms_proxy=0x7f12003e;
    /**
     * Edit access point labels:
     */
    public static final int apn_mmsc=0x7f12003f;
    /**
     * Edit access point labels:
     */
    public static final int apn_mnc=0x7f120040;
    /**
     * Edit access point labels: A label the user can give to the APN to allow him to differentiate it from the others
     */
    public static final int apn_name=0x7f120041;
    /**
     * Edit access point label summary text when no value has been set
     */
    public static final int apn_not_set=0x7f120042;
    /**
     * Title for Access Point Names settings activity
     */
    public static final int apn_settings=0x7f120043;
    /**
     * Error message for users that aren't allowed to modify Access Point Names settings [CHAR LIMIT=none]
     */
    public static final int apn_settings_not_available=0x7f120044;
    /**
     * Edit access point labels: The type of APN
     */
    public static final int apn_type=0x7f120045;
    /**
     * The name of the application as it appears under the main Launcher icon and in various activity titles
     */
    public static final int app_name=0x7f120046;
    /**
     * Title for the archived conversations activity
     */
    public static final int archived_activity_title=0x7f120047;
    /**
     * String to show in the archived conversation list view when there are no messages.
     */
    public static final int archived_conversation_list_empty_text=0x7f120048;
    /**
     * The text of the toast/snack message shown when the selected conversation(s) are archived.
     * Displays the number of converstions archived
     */
    public static final int archived_toast_message=0x7f120049;
    public static final int attachMediaButtonContentDescription=0x7f12004a;
    /**
     * Title for attachment chooser activity
     */
    public static final int attachment_chooser_activity_title=0x7f12004b;
    /**
     * Shows the number of selected attachments in the attachment chooser activity
     */
    public static final int attachment_chooser_selection=0x7f12004c;
    /**
     * Description shown in the download manager for an attachment that the user manually saved
     */
    public static final int attachment_file_description=0x7f12004d;
    /**
     * The dialog message content for when the message is over the attachment limit when composing the message
     */
    public static final int attachment_limit_reached_dialog_message_when_composing=0x7f12004e;
    /**
     * The dialog message content for when the message is over the attachment limit when sending the message
     */
    public static final int attachment_limit_reached_dialog_message_when_sending=0x7f12004f;
    /**
     * The option to send the message anyway when the user is presented with the warning that the attachment size might be over limit
     */
    public static final int attachment_limit_reached_send_anyway=0x7f120050;
    /**
     * The dialog message content for when the message load failed
     */
    public static final int attachment_load_failed_dialog_message=0x7f120051;
    /**
     * Text for showing there are more items in the attachments than is shown (e.g. "+2")
     */
    public static final int attachment_more_items=0x7f120052;
    public static final int audio_attachment_content_description=0x7f120053;
    public static final int audio_pause_content_description=0x7f120054;
    /**
     * Hint text on the audio recorder that instructs user how to start recording
     */
    public static final int audio_picker_hint_text=0x7f120055;
    public static final int audio_play_content_description=0x7f120056;
    /**
     * Content description for the audio record view
     */
    public static final int audio_record_view_content_description=0x7f120057;
    /**
     * Error occurred while recording audio
     */
    public static final int audio_recording_error=0x7f120058;
    /**
     * Failed to replay recorded audio
     */
    public static final int audio_recording_replay_failed=0x7f120059;
    /**
     * Failed to start recording audio
     */
    public static final int audio_recording_start_failed=0x7f12005a;
    public static final int auto_delete_oldest_messages=0x7f12005b;
    public static final int auto_delete_oldest_messages_confirmation=0x7f12005c;
    public static final int auto_retrieve_mms_pref_key=0x7f12005d;
    public static final int auto_retrieve_mms_pref_summary=0x7f12005e;
    public static final int auto_retrieve_mms_pref_title=0x7f12005f;
    public static final int auto_retrieve_mms_when_roaming_pref_key=0x7f120060;
    public static final int auto_retrieve_mms_when_roaming_pref_summary=0x7f120061;
    /**
     * Title for the preference for whether or not to auto-retrieve MMS when roaming
     */
    public static final int auto_retrieve_mms_when_roaming_pref_title=0x7f120062;
    /**
     * Content description text for Back button on the action bar
     */
    public static final int back=0x7f120063;
    /**
     * Text describing what happens when user is blocked via the block actionbar action
     */
    public static final int block_confirmation_message=0x7f120064;
    /**
     * Title of block confirmation dialog
     */
    public static final int block_confirmation_title=0x7f120065;
    /**
     * Label of block contact item in People & Options for 1:1 conversation
     */
    public static final int block_contact_title=0x7f120066;
    /**
     * The title of the list of blocked contacts
     */
    public static final int blocked_contacts_title=0x7f120067;
    public static final int blocked_pref_title=0x7f120068;
    /**
     * The text of the toast/snack message shown when a contact is blocked
     */
    public static final int blocked_toast_message=0x7f120069;
    public static final int camera_cancel_recording=0x7f12006a;
    public static final int camera_error_failure_taking_picture=0x7f12006b;
    public static final int camera_error_opening=0x7f12006c;
    /**
     * Error message when we are unable to write a picture or video file because of an error writing to storage (usually because insufficient space)
     */
    public static final int camera_error_storage_fail=0x7f12006d;
    public static final int camera_error_unknown=0x7f12006e;
    public static final int camera_error_video_init_fail=0x7f12006f;
    /**
     * Error toast message shown when a camera image failed to attach to the message
     */
    public static final int camera_media_failure=0x7f120070;
    public static final int camera_start_recording=0x7f120071;
    public static final int camera_stop_recording=0x7f120072;
    public static final int camera_switch_camera_facing=0x7f120073;
    public static final int camera_switch_full_screen=0x7f120074;
    public static final int camera_switch_to_still_mode=0x7f120075;
    public static final int camera_switch_to_video_mode=0x7f120076;
    public static final int camera_take_picture=0x7f120077;
    /**
     * Shows when the user attempts to send message while some attachment(s) haven't finished loading
     */
    public static final int cant_send_message_while_loading_attachments=0x7f120078;
    /**
     * Shows when the user attempts to send message when there is no active subscription
     */
    public static final int cant_send_message_without_active_subscription=0x7f120079;
    /**
     * Error message which shows the user a carrier specific error code such as "Unable to send message: xxxxx error 97"
     */
    public static final int carrier_send_error=0x7f12007a;
    public static final int carrier_send_error_unknown_carrier=0x7f12007b;
    /**
     * Text displayed as the secondary action for a dialog to cancel. [CHAR LIMIT=25]
     */
    public static final int chips_action_cancel=0x7f12007c;
    /**
     * Text displayed as the primary action for a dialog to copy text. [CHAR LIMIT=25]
     */
    public static final int chips_action_copy=0x7f12007d;
    /**
     * Accessibility : Content description for deleting a recipient chip.
     */
    public static final int chips_delete_content_description=0x7f12007e;
    /**
     * Text displayed on the drop down item that is shown when app doesn't have Contact permission. This item will open dialog to request permission. [CHAR LIMIT=50]
     */
    public static final int chips_permission_text=0x7f12007f;
    public static final int chips_text_delete_button_content_description=0x7f120080;
    /**
     * Title of the class-0 message activity.
     */
    public static final int class_0_message_activity=0x7f120081;
    /**
     * Default title for color picker dialog [CHAR LIMIT=30]
     */
    public static final int color_picker_default_title=0x7f120082;
    /**
     * Content description for a color square.
     */
    public static final int color_swatch_description=0x7f120083;
    /**
     * Content description for a selected color square.
     */
    public static final int color_swatch_description_selected=0x7f120084;
    /**
     * The hint text shown in the message compose input box prompting the user to send a message
     */
    public static final int compose_message_view_hint_text=0x7f120085;
    /**
     * The hint text shown in the message compose input box prompting the user to send a message when there are multiple SIMs.
     */
    public static final int compose_message_view_hint_text_multi_sim=0x7f120086;
    /**
     * The text shown as a label before the message subject input box
     */
    public static final int compose_message_view_subject_hint_text=0x7f120087;
    public static final int confrim_participants_button_content_description=0x7f120088;
    /**
     * Hint text shown on the contact list when there's no contacts
     */
    public static final int contact_list_empty_text=0x7f120089;
    /**
     * The text on the list item in the contact picker that allows a user to send an SMS directly
     * to a number that he/she typed. eg. "Send to 650-555-1234"
     */
    public static final int contact_list_send_to_text=0x7f12008a;
    /**
     * The tab header for all contacts list
     */
    public static final int contact_picker_all_contacts_tab_title=0x7f12008b;
    /**
     * The tab header for the frequently used contacts list
     */
    public static final int contact_picker_frequents_tab_title=0x7f12008c;
    /**
     * Hint text on the contact picker
     */
    public static final int contact_picker_hint_text=0x7f12008d;
    public static final int content_description_for_number_eight=0x7f12008e;
    public static final int content_description_for_number_five=0x7f12008f;
    public static final int content_description_for_number_four=0x7f120090;
    public static final int content_description_for_number_nine=0x7f120091;
    public static final int content_description_for_number_one=0x7f120092;
    public static final int content_description_for_number_seven=0x7f120093;
    public static final int content_description_for_number_six=0x7f120094;
    public static final int content_description_for_number_three=0x7f120095;
    public static final int content_description_for_number_two=0x7f120096;
    /**
     * Accessibility : content description for numbers
     */
    public static final int content_description_for_number_zero=0x7f120097;
    /**
     * Toast message telling the user a conversation with a recipient could not be found or created
     */
    public static final int conversation_creation_failure=0x7f120098;
    /**
     * Toast message telling the user a conversation has been deleted
     */
    public static final int conversation_deleted=0x7f120099;
    /**
     * String to show in the conversation list view when there are no messages.
     */
    public static final int conversation_list_empty_text=0x7f12009a;
    /**
     * String to show in the conversation list view when we haven't synchronized the SMS database yet
     */
    public static final int conversation_list_first_sync_text=0x7f12009b;
    /**
     * A message in conversation list view to indicate that the snipit text and preview is from an unsent draft.
     */
    public static final int conversation_list_item_view_draft_message=0x7f12009c;
    /**
     * A message prefix to indicate the message was sent by another user in a group conversation.
     */
    public static final int conversation_list_item_view_sent_from_other_prefix=0x7f12009d;
    /**
     * A message prefix to indicate the message was sent by the user.
     */
    public static final int conversation_list_item_view_sent_from_you_prefix=0x7f12009e;
    /**
     * Shown in conversation as the snippet when there is no text and an attached audio clip. [CHAR LIMIT=25]
     */
    public static final int conversation_list_snippet_audio_clip=0x7f12009f;
    /**
     * Shown in conversation as the snippet when there is no text and an attached picture. [CHAR LIMIT=25]
     */
    public static final int conversation_list_snippet_picture=0x7f1200a0;
    /**
     * Shown in conversation as the snippet when there is no text and an attached vcard. [CHAR LIMIT=25]
     */
    public static final int conversation_list_snippet_vcard=0x7f1200a1;
    /**
     * Shown in conversation as the snippet when there is no text and an attached video. [CHAR LIMIT=25]
     */
    public static final int conversation_list_snippet_video=0x7f1200a2;
    /**
     * The text shown as a label before the message subject input box
     */
    public static final int conversation_message_view_subject_text=0x7f1200a3;
    /**
     * Text displayed when the user long presses on a chip to copy the recipients email address [CHAR LIMIT=200]
     */
    public static final int copy_email=0x7f1200a4;
    /**
     * Text displayed when the user long presses on a chip to copy the recipient's phone number [CHAR LIMIT=200]
     */
    public static final int copy_number=0x7f1200a5;
    /**
     * Alert dialog accept to copy information displayed in dialog to system clipboard.
     */
    public static final int copy_to_clipboard=0x7f1200a6;
    /**
     * Alert dialog title to copy information displayed in dialog to system clipboard.
     */
    public static final int copy_to_clipboard_dialog_title=0x7f1200a7;
    /**
     * DB version
     */
    public static final int database_version=0x7f1200a8;
    public static final int db_full=0x7f1200a9;
    /**
     * Preference category: Debug
     */
    public static final int debug_category_pref_title=0x7f1200aa;
    /**
     * Debug preferences
     */
    public static final int debug_pref_key=0x7f1200ab;
    public static final int debug_sub_id_spinner_text=0x7f1200ac;
    /**
     * Preference summary: Current default SMS app
     */
    public static final int default_sms_app=0x7f1200ad;
    /**
     * Free SMS storage actions
     */
    public static final int delete_all_media=0x7f1200ae;
    /**
     * Free SMS storage action confirm dialog message
     */
    public static final int delete_all_media_confirmation=0x7f1200af;
    /**
     * Alert dialog accept deleting this conversation button.
     */
    public static final int delete_conversation_confirmation_button=0x7f1200b0;
    /**
     * Alert dialog decline deleting this conversation button.
     */
    public static final int delete_conversation_decline_button=0x7f1200b1;
    public static final int delete_message_confirmation_button=0x7f1200b2;
    public static final int delete_message_confirmation_dialog_text=0x7f1200b3;
    public static final int delete_message_confirmation_dialog_title=0x7f1200b4;
    public static final int delete_oldest_messages=0x7f1200b5;
    public static final int delete_oldest_messages_confirmation=0x7f1200b6;
    /**
     * Accessibility : text read on the small X icon on the subject editor
     */
    public static final int delete_subject_content_description=0x7f1200b7;
    public static final int delivered_status_content_description=0x7f1200b8;
    /**
     * Subscription-specific settings. The values of these pref keys must be prefixed with
     * "buglesub_" to allow for runtime checks
     */
    public static final int delivery_reports_pref_key=0x7f1200b9;
    public static final int delivery_reports_pref_summary=0x7f1200ba;
    /**
     * Title for the preference for whether or not to request/show delivery reports for SMS
     */
    public static final int delivery_reports_pref_title=0x7f1200bb;
    /**
     * The group MMS choices in settings
     */
    public static final int disable_group_mms=0x7f1200bc;
    /**
     * When making a call to emergency numbers, show this toast
     */
    public static final int disallow_emergency_call=0x7f1200bd;
    /**
     * When an error occurs downloading a new message, display this message.
     * An example: Download of message Wanna get pizza from dorkman was unsuccessful.
     */
    public static final int dl_failure_notification=0x7f1200be;
    /**
     * Error toast shown when a message could not be downloaded because of unspecified error.
     */
    public static final int download_message_failure=0x7f1200bf;
    /**
     * Error toast shown when a message could not be downloaded because of airplane mode.
     */
    public static final int download_message_failure_airplane_mode=0x7f1200c0;
    /**
     * Error toast shown when an MMS could not be downloaded because mobile data was disabled.
     */
    public static final int download_message_failure_no_data=0x7f1200c1;
    /**
     * Accessibility toast shown when an MMS is downloaded.
     */
    public static final int download_message_success=0x7f1200c2;
    /**
     * Description for the delete button that removes the selected contact from the recipients [CHAR LIMIT=100]
     */
    public static final int dropdown_delete_button_desc=0x7f1200c3;
    public static final int dump_mms_pref_key=0x7f1200c4;
    public static final int dump_mms_pref_summary=0x7f1200c5;
    public static final int dump_mms_pref_title=0x7f1200c6;
    public static final int dump_sms_pref_key=0x7f1200c7;
    public static final int dump_sms_pref_summary=0x7f1200c8;
    public static final int dump_sms_pref_title=0x7f1200c9;
    public static final int ellipsis=0x7f1200ca;
    public static final int email_sms_mms_dump_file_chooser_title=0x7f1200cb;
    /**
     * Strings for dump sms/mms dialog
     */
    public static final int email_sms_mms_dump_file_subject=0x7f1200cc;
    public static final int email_sms_mms_from_dump_file_dialog_title=0x7f1200cd;
    public static final int enable_group_mms=0x7f1200ce;
    public static final int enable_permission_procedure=0x7f1200cf;
    public static final int enable_permission_procedure_description=0x7f1200d0;
    /**
     * EditText hint for asking the user to enter their phone number
     */
    public static final int enter_phone_number_hint=0x7f1200d1;
    /**
     * Text for asking the user to enter their phone number
     */
    public static final int enter_phone_number_text=0x7f1200d2;
    /**
     * Title for asking the user to enter their phone number
     */
    public static final int enter_phone_number_title=0x7f1200d3;
    /**
     * An enumeration comma for separating multiple names in notifications. [CHAR LIMIT=2]
     */
    public static final int enumeration_comma=0x7f1200d4;
    /**
     * APN error dialog messages:
     */
    public static final int error_apn_empty=0x7f1200d5;
    /**
     * APN error dialog messages:
     */
    public static final int error_apn_name_empty=0x7f1200d6;
    /**
     * APN error dialog messages:
     */
    public static final int error_mcc_not3=0x7f1200d7;
    /**
     * APN error dialog messages:
     */
    public static final int error_mnc_not23=0x7f1200d8;
    public static final int exit=0x7f1200d9;
    /**
     * Notifies the user when an attachment fails to load
     */
    public static final int fail_to_load_attachment=0x7f1200da;
    /**
     * Photo view error message shown below thumbnail if full image could not be shown [CHAR LIMIT=30]
     */
    public static final int failed=0x7f1200db;
    /**
     * Text shown on contact VCard when it failed to load
     */
    public static final int failed_loading_vcard=0x7f1200dc;
    /**
     * Accessibility description for conversation list for failed messages
     */
    public static final int failed_message_content_description=0x7f1200dd;
    /**
     * Title for the message forwarding dialog
     */
    public static final int forward_message_activity_title=0x7f1200de;
    /**
     * Label in "Message details" dialog showing who sent the message.
     */
    public static final int from_label=0x7f1200df;
    /**
     * Content description for the checkbox when selecting an item in the gallery
     */
    public static final int gallery_checkbox_content_description=0x7f1200e0;
    /**
     * The title for general settings section in the settings activity
     */
    public static final int general_settings=0x7f1200e1;
    /**
     * The title for general settings activity
     */
    public static final int general_settings_activity_title=0x7f1200e2;
    /**
     * Title for the general settings section in the "People and options" activity
     */
    public static final int general_settings_title=0x7f1200e3;
    /**
     * Accessibility name for a group conversation
     */
    public static final int group_conversation_description=0x7f1200e4;
    /**
     * Accessibility description for conversation list for group conversations
     */
    public static final int group_incoming_failed_message_prefix=0x7f1200e5;
    public static final int group_incoming_successful_message_prefix=0x7f1200e6;
    public static final int group_mms_pref_key=0x7f1200e7;
    public static final int group_mms_pref_summary=0x7f1200e8;
    public static final int group_mms_pref_title=0x7f1200e9;
    public static final int group_outgoing_draft_message_prefix=0x7f1200ea;
    public static final int group_outgoing_failed_message_prefix=0x7f1200eb;
    public static final int group_outgoing_sending_message_prefix=0x7f1200ec;
    public static final int group_outgoing_successful_message_prefix=0x7f1200ed;
    public static final int help_and_feedback_activity_label=0x7f1200ee;
    /**
     * Sender to be used if the sender address has been hidden
     */
    public static final int hidden_sender_address=0x7f1200ef;
    public static final int ignore=0x7f1200f0;
    public static final int in_conversation_notify_new_message_action=0x7f1200f1;
    /**
     * The notification toast text and action button label shown at bottom of screen, for when a new message comes in while the user
     * is in that conversation, but the message list is not scrolled to the bottom
     */
    public static final int in_conversation_notify_new_message_text=0x7f1200f2;
    /**
     * Accessibility announcement for an incoming message
     */
    public static final int incoming_message_announcement=0x7f1200f3;
    /**
     * Prefix for accessibility to indicate who the sender of text with hyperlinks, an attachment, or yet-to-be-downloaded message is.
     */
    public static final int incoming_sender_content_description=0x7f1200f4;
    /**
     * SIM name incoming message bubbles indicating which SIM the message was delivered to
     */
    public static final int incoming_sim_name_text=0x7f1200f5;
    /**
     * Prefix for accessibility to indicate who the sender of a plain text message is.
     */
    public static final int incoming_text_sender_content_description=0x7f1200f6;
    /**
     * While sending a message, if it has invalid recipient, display this message.
     */
    public static final int invalid_destination=0x7f1200f7;
    /**
     * When converting html to text link urls are inlined.  This specifies how the link should be
     * displayed.  For example, a link "click here" which navigates to "www.google.com" would have
     * text="click here" and url="www.google.com", using the below format to create "click here (www.google.com)"
     */
    public static final int link_display_format=0x7f1200f8;
    public static final int load_sms_mms_from_dump_file_dialog_title=0x7f1200f9;
    /**
     * Shown when loading conversations in the widget
     */
    public static final int loading_conversations=0x7f1200fa;
    /**
     * Shown when loading messages in the widget
     */
    public static final int loading_messages=0x7f1200fb;
    /**
     * Text shown on contact VCard when it's being loaded
     */
    public static final int loading_vcard=0x7f1200fc;
    /**
     * When a database error occurs due to low memory this toast is shown.
     */
    public static final int low_memory=0x7f1200fd;
    public static final int mediapicker_audioChooserDescription=0x7f1200fe;
    public static final int mediapicker_audio_title=0x7f1200ff;
    public static final int mediapicker_cameraChooserDescription=0x7f120100;
    public static final int mediapicker_contactChooserDescription=0x7f120101;
    public static final int mediapicker_contact_title=0x7f120102;
    public static final int mediapicker_galleryChooserDescription=0x7f120103;
    /**
     * example: "image January 17 2015 1 59 pm"
     */
    public static final int mediapicker_gallery_image_item_description=0x7f120104;
    public static final int mediapicker_gallery_image_item_description_no_date=0x7f120105;
    public static final int mediapicker_gallery_item_selected_content_description=0x7f120106;
    public static final int mediapicker_gallery_item_unselected_content_description=0x7f120107;
    public static final int mediapicker_gallery_title=0x7f120108;
    public static final int mediapicker_gallery_title_selection=0x7f120109;
    /**
     * Edit access point screen menu option to delete this APN
     */
    public static final int menu_delete_apn=0x7f12010a;
    /**
     * Edit access point screen menu option to discard the user's changes for this APN
     */
    public static final int menu_discard_apn_change=0x7f12010b;
    /**
     * Action menu title to let users view open source license
     */
    public static final int menu_license=0x7f12010c;
    /**
     * APNs screen menu option to create a brand spanking new APN
     */
    public static final int menu_new=0x7f12010d;
    /**
     * APNs screen menu option to create a brand spanking new APN
     */
    public static final int menu_new_apn=0x7f12010e;
    /**
     * APNs screen menu option to reset default APN settings
     */
    public static final int menu_restore_default_apn=0x7f12010f;
    /**
     * Edit access point screen menu option to save the user's changes for this APN to the persistent storage
     */
    public static final int menu_save_apn=0x7f120110;
    /**
     * Action menu title in the HelpAndFeedbackFragment to let users send feedback
     */
    public static final int menu_send_feedback=0x7f120111;
    /**
     * Action menu title in the HelpAndFeedbackFragment to let users view the version of Bugle
     */
    public static final int menu_version_info=0x7f120112;
    /**
     * Action menu title in the HelpAndFeedbackFragment to let users view the app in the Google Play Store
     */
    public static final int menu_view_in_store=0x7f120113;
    /**
     * Menu item to copy message text
     */
    public static final int message_context_menu_copy_text=0x7f120114;
    /**
     * Title of long press menu for deleting an individual message.
     */
    public static final int message_context_menu_delete_message=0x7f120115;
    /**
     * Title of long press menu for forwarding an individual message.
     */
    public static final int message_context_menu_forward_message=0x7f120116;
    /**
     * Title of long press menu on an individual message.
     */
    public static final int message_context_menu_title=0x7f120117;
    /**
     * Title of long press menu for details about an individual message.
     */
    public static final int message_context_menu_view_details=0x7f120118;
    /**
     * Title of "Message details" dialog
     */
    public static final int message_details_title=0x7f120119;
    /**
     * Text prepended to the subject of a forwarded message
     */
    public static final int message_fwd=0x7f12011a;
    /**
     * Content description for the message images in a conversation or for the image preview in the conversation list if the lastest message in that conversation contains an image
     */
    public static final int message_image_content_description=0x7f12011b;
    /**
     * Label in "Message details" dialog
     */
    public static final int message_size_label=0x7f12011c;
    /**
     * Timestamp line for MMS which failed to download.
     */
    public static final int message_status_download=0x7f12011d;
    /**
     * Timestamp line for MMS which is selected.
     */
    public static final int message_status_download_action=0x7f12011e;
    /**
     * Timestamp line for MMS for expired or invalid message.
     */
    public static final int message_status_download_error=0x7f12011f;
    /**
     * Timestamp line for MMS which failed to download.
     */
    public static final int message_status_download_failed=0x7f120120;
    /**
     * Timestamp line to display while downloading a message.
     */
    public static final int message_status_downloading=0x7f120121;
    /**
     * When showing resend action, display this message.
     */
    public static final int message_status_failed=0x7f120122;
    /**
     * When showing resend action display this message.
     */
    public static final int message_status_resend=0x7f120123;
    /**
     * When sending a message failed display this message.
     */
    public static final int message_status_send_failed=0x7f120124;
    /**
     * When sending a message to an emergency number failed display this message in the conversation.
     */
    public static final int message_status_send_failed_emergency_number=0x7f120125;
    /**
     * When retrying sending for a message.
     */
    public static final int message_status_send_retrying=0x7f120126;
    /**
     * While sending a message display this message.
     */
    public static final int message_status_sending=0x7f120127;
    /**
     * Title line for MMS which failed to download.
     */
    public static final int message_title_download_failed=0x7f120128;
    /**
     * Title line for an MMS auto-downloading.
     */
    public static final int message_title_downloading=0x7f120129;
    /**
     * Title line for an MMS requiring manual download.
     */
    public static final int message_title_manual_download=0x7f12012a;
    /**
     * Label in "Message details" dialog
     */
    public static final int message_type_label=0x7f12012b;
    /**
     * Reached MMS message attachment limit
     */
    public static final int mms_attachment_limit_reached=0x7f12012c;
    /**
     * Message attachment load failed
     */
    public static final int mms_attachment_load_failed=0x7f12012d;
    public static final int mms_failure_outgoing_address=0x7f12012e;
    public static final int mms_failure_outgoing_content=0x7f12012f;
    public static final int mms_failure_outgoing_corrupt=0x7f120130;
    /**
     * Detailed MMS failure strings, may need to be adjusted per carrier for TA
     */
    public static final int mms_failure_outgoing_service=0x7f120131;
    public static final int mms_failure_outgoing_too_large=0x7f120132;
    public static final int mms_failure_outgoing_unsupported=0x7f120133;
    /**
     * Display this info line with an MMS notification
     */
    public static final int mms_info=0x7f120134;
    public static final int mms_messaging_category_pref_key=0x7f120135;
    /**
     * Preference category: MMS messaging
     */
    public static final int mms_messaging_category_pref_title=0x7f120136;
    public static final int mms_phone_number_pref_key=0x7f120137;
    /**
     * Preference title: MMS phone number
     */
    public static final int mms_phone_number_pref_title=0x7f120138;
    /**
     * Indicates that the current message will be sent via MMS
     */
    public static final int mms_text=0x7f120139;
    /**
     * Text displayed when the recipientedittextview is not focused. Displays the total number of recipients since the field is shrunk to just display a portion
     */
    public static final int more_string=0x7f12013a;
    /**
     * "Type" value in "Message details" dialog
     */
    public static final int multimedia_message=0x7f12013b;
    /**
     * format string for creating new files of unknown type. Passed to java.text.SimpleDateFormat.
     */
    public static final int new_file_name_format=0x7f12013c;
    /**
     * format string for creating new image files. Passed to java.text.SimpleDateFormat.
     */
    public static final int new_image_file_name_format=0x7f12013d;
    public static final int next=0x7f12013e;
    public static final int next_with_arrow=0x7f12013f;
    /**
     * Toast message that indicates no preferred SIM was selected for sending the message
     */
    public static final int no_preferred_sim_selected=0x7f120140;
    /**
     * When an error occurs downloading a new message and a subject isn't available, substitute
     * this default subject.
     */
    public static final int no_subject=0x7f120141;
    /**
     * Shown in notifications when there's an audio clip. [CHAR LIMIT=25]
     */
    public static final int notification_audio=0x7f120142;
    /**
     * Notification channel
     */
    public static final int notification_channel_messages_title=0x7f120143;
    /**
     * notification line 1 for multiple downloads failed
     */
    public static final int notification_download_failures_line1_plural=0x7f120144;
    /**
     * notification line 1 for download failed
     */
    public static final int notification_download_failures_line1_singular=0x7f120145;
    /**
     * Notification action label for download MMS when set to manual downloads. [CHAR LIMIT=15]
     */
    public static final int notification_download_mms=0x7f120146;
    /**
     * Notification title when emergency SMS (e.g. to 911) fails to send
     */
    public static final int notification_emergency_send_failure_line1=0x7f120147;
    /**
     * Notification content when emergency SMS fails to send
     */
    public static final int notification_emergency_send_failure_line2=0x7f120148;
    /**
     * Mark message as read
     */
    public static final int notification_mark_as_read=0x7f120149;
    /**
     * The text of the toast/snack message shown when a notifications turned off for selected conversations
     */
    public static final int notification_off_toast_message=0x7f12014a;
    /**
     * The text of the toast/snack message shown when a notifications turned on for selected conversations
     */
    public static final int notification_on_toast_message=0x7f12014b;
    /**
     * Shown in notifications when there's a picture. [CHAR LIMIT=25]
     */
    public static final int notification_picture=0x7f12014c;
    /**
     * Notification voice reply prompt (visible on wearable device only). [CHAR LIMIT=15]
     */
    public static final int notification_reply_prompt=0x7f12014d;
    /**
     * Notification action label for MMS reply (visible on wearable device only). [CHAR LIMIT=15]
     */
    public static final int notification_reply_via_mms=0x7f12014e;
    /**
     * Notification action label for SMS reply (visible on wearable device only). [CHAR LIMIT=15]
     */
    public static final int notification_reply_via_sms=0x7f12014f;
    /**
     * notification line 1 for "there are some failed messages"
     */
    public static final int notification_send_failures_line1_plural=0x7f120150;
    /**
     * notification line 1 for "there are some failed messages"
     */
    public static final int notification_send_failures_line1_singular=0x7f120151;
    /**
     * Separator between parts of a notification in each line of an inboxStyle notification. [CHAR LIMIT=2]
     */
    public static final int notification_separator=0x7f120152;
    public static final int notification_sound_pref_key=0x7f120153;
    /**
     * Separator between title and content in notifications
     */
    public static final int notification_space_separator=0x7f120154;
    /**
     * When there's a subject in an mms, the subject + message are shown in a notification
     */
    public static final int notification_subject=0x7f120155;
    /**
     * Separator between title and content in notification ticker
     */
    public static final int notification_ticker_separator=0x7f120156;
    /**
     * Shown in notifications when there's a vcard. [CHAR LIMIT=25]
     */
    public static final int notification_vcard=0x7f120157;
    public static final int notification_vibration_pref_key=0x7f120158;
    /**
     * Shown in notifications when there's a video. [CHAR LIMIT=25]
     */
    public static final int notification_video=0x7f120159;
    /**
     * Application-wide settings
     */
    public static final int notifications_category_pref_key=0x7f12015a;
    /**
     * Title for the per-conversation preference for whether or to notify the user of new messages
     */
    public static final int notifications_enabled_conversation_pref_title=0x7f12015b;
    /**
     * Notification preferences
     */
    public static final int notifications_group_children_key=0x7f12015c;
    public static final int notifications_pref_key=0x7f12015d;
    /**
     * Title for the preference for whether or to notify the user of new messages
     */
    public static final int notifications_pref_title=0x7f12015e;
    public static final int numeric_text_keyboard_toggle_button_content_description=0x7f12015f;
    /**
     * Accessibility description for conversation list for 1:1 conversations
     */
    public static final int one_on_one_incoming_failed_message_prefix=0x7f120160;
    public static final int one_on_one_incoming_successful_message_prefix=0x7f120161;
    public static final int one_on_one_outgoing_draft_message_prefix=0x7f120162;
    public static final int one_on_one_outgoing_failed_message_prefix=0x7f120163;
    public static final int one_on_one_outgoing_sending_message_prefix=0x7f120164;
    public static final int one_on_one_outgoing_successful_message_prefix=0x7f120165;
    public static final int outgoing_sender_content_description=0x7f120166;
    public static final int outgoing_text_sender_content_description=0x7f120167;
    /**
     * Title for the list of participants in the "People and options" activity
     */
    public static final int participant_list_title=0x7f120168;
    /**
     * Title for the "People and Options" activity
     */
    public static final int people_and_options_activity_title=0x7f120169;
    public static final int photo_view_activity_title=0x7f12016a;
    /**
     * Photo view sub-title for current photo position [CHAR LIMIT=10]
     */
    public static final int photo_view_count=0x7f12016b;
    /**
     * Content description for the button in gallery media picker to pick an image from the document library
     */
    public static final int pick_image_from_document_library_content_description=0x7f12016c;
    /**
     * String to show when eliding the number of participants in a conversation due to length (used when there is more than one extra)
     */
    public static final int plus_n=0x7f12016d;
    /**
     * String to show when eliding the number of participants in a conversation due to length (used when there is one extra)
     */
    public static final int plus_one=0x7f12016e;
    public static final int posted_just_now=0x7f12016f;
    public static final int posted_now=0x7f120170;
    /**
     * Version for shared preferences. This is used for handling prefs migration when old pref
     * keys are moved or renamed. You don't need to bump up the version number if you are just
     * adding/removing preferences
     */
    public static final int pref_version=0x7f120171;
    /**
     * "Priority" value in "Message details" dialog
     */
    public static final int priority_high=0x7f120172;
    /**
     * Label in "Message details" dialog
     */
    public static final int priority_label=0x7f120173;
    /**
     * "Priority" value in "Message details" dialog
     */
    public static final int priority_low=0x7f120174;
    /**
     * "Priority" value in "Message details" dialog
     */
    public static final int priority_normal=0x7f120175;
    /**
     * Label in "Message details" dialog
     */
    public static final int received_label=0x7f120176;
    /**
     * Hint text for the recipient chips text box when it's empty
     */
    public static final int recipient_hint=0x7f120177;
    /**
     * Toast message that indicates uses must set Messaging as their
     * default SMS application in order to receive replies in the app.
     */
    public static final int recommend_set_default_sms_app=0x7f120178;
    /**
     * Title for the message reply dialog
     */
    public static final int reply_activity_title=0x7f120179;
    /**
     * Inform user of the names of permissions that are required to use the app
     */
    public static final int required_permissions_promo=0x7f12017a;
    /**
     * Snackbar message that indicates users must set Messaging as their default SMS application in order to perform the requested action.
     */
    public static final int requires_default_sms_app=0x7f12017b;
    /**
     * Snackbar message that indicates users must set Messaging as their
     * default SMS application in order to send messages
     */
    public static final int requires_default_sms_app_to_send=0x7f12017c;
    /**
     * Snackbar button text to switch default SMS apps shown in snackbar.
     */
    public static final int requires_default_sms_change_button=0x7f12017d;
    /**
     * Dialog button text that closes the application.
     */
    public static final int requires_sms_permissions_close_button=0x7f12017e;
    /**
     * Dialog message that indicates user must be granted permissions from the phone owner to
     * send SMS messages.
     */
    public static final int requires_sms_permissions_message=0x7f12017f;
    /**
     * The message of dialog indicated restoring default APN settings in progress
     */
    public static final int restore_default_apn=0x7f120180;
    /**
     * APNs screen toast message to inform reset default APN settings is completed
     */
    public static final int restore_default_apn_completed=0x7f120181;
    public static final int retry=0x7f120182;
    public static final int save=0x7f120183;
    public static final int search_menu_title=0x7f120184;
    /**
     * Ticker for notification  for incoming sms/mms message for secondary user
     */
    public static final int secondary_user_new_message_ticker=0x7f120185;
    /**
     * Notification title for incoming sms/mms message for secondary user
     */
    public static final int secondary_user_new_message_title=0x7f120186;
    /**
     * The accessibility text read when the sim chooser pops up to read the current selected sim
     */
    public static final int selected_sim_content_message=0x7f120187;
    public static final int sendButtonContentDescription=0x7f120188;
    /**
     * Custom TalkBack description for send button long click event when there's no SIM selector, i.e. edit subject
     */
    public static final int send_button_long_click_description_no_sim_selector=0x7f120189;
    /**
     * Custom TalkBack description for send button long click event when there is SIM selector
     */
    public static final int send_button_long_click_description_with_sim_selector=0x7f12018a;
    /**
     * Error toast shown when a message could not be sent because of unspecified error.
     */
    public static final int send_message_failure=0x7f12018b;
    /**
     * Error toast shown when a message could not be sent because of airplane mode.
     */
    public static final int send_message_failure_airplane_mode=0x7f12018c;
    /**
     * Error toast shown when an MMS could not be sent because mobile data was disabled.
     */
    public static final int send_message_failure_no_data=0x7f12018d;
    /**
     * Accessibility toast shown when a message is sent.
     */
    public static final int send_message_success=0x7f12018e;
    public static final int send_sound_pref_key=0x7f12018f;
    /**
     * Title for the preference for playing a message send sound
     */
    public static final int send_sound_pref_title=0x7f120190;
    /**
     * Accessibility toast shown when a message is sending.
     */
    public static final int sending_message=0x7f120191;
    /**
     * Label in "Message details" dialog
     */
    public static final int sent_label=0x7f120192;
    /**
     * If a message has expired and is no longer available on MMSC, show this toast. [CHAR LIMIT=NONE]
     */
    public static final int service_message_not_found=0x7f120193;
    /**
     * If a message can't be sent because of a MMSC network problem, show this toast. [CHAR LIMIT=NONE]
     */
    public static final int service_network_problem=0x7f120194;
    /**
     * While sending a message, this error is expected to be generated when user does not have
     * MMS enabled on his account. [CHAR LIMIT=NONE]
     */
    public static final int service_not_activated=0x7f120195;
    public static final int settings=0x7f120196;
    /**
     * Title for the preferences/settings activity
     */
    public static final int settings_activity_title=0x7f120197;
    public static final int settings_with_arrow=0x7f120198;
    /**
     * Label for new message button in share intent dialog
     */
    public static final int share_cancel=0x7f120199;
    /**
     * The title when selecting a conversation to share to
     */
    public static final int share_intent_activity_label=0x7f12019a;
    /**
     * The name of the application as it appears in external share intent dialogs
     */
    public static final int share_intent_label=0x7f12019b;
    /**
     * Label for new message button in share intent dialog
     */
    public static final int share_new_message=0x7f12019c;
    public static final int show_emoticons_pref_summary=0x7f12019d;
    /**
     * Show emoticons
     */
    public static final int show_emoticons_pref_title=0x7f12019e;
    /**
     * Title for the notification sound preference
     */
    public static final int silent_ringtone=0x7f12019f;
    /**
     * Label in "Message details" dialog
     */
    public static final int sim_label=0x7f1201a0;
    /**
     * Content description for the SIM selector button in the conversation
     */
    public static final int sim_selector_button_content_description=0x7f1201a1;
    /**
     * Content description for the SIM selector button with selected sim name
     */
    public static final int sim_selector_button_content_description_with_selection=0x7f1201a2;
    /**
     * SIM number shown in the settings when the number is not known
     */
    public static final int sim_settings_unknown_number=0x7f1201a3;
    /**
     * SIM identified using the slot number. e.g. SIM 1
     */
    public static final int sim_slot_identifier=0x7f1201a4;
    /**
     * The title for sim_specific settings
     */
    public static final int sim_specific_settings=0x7f1201a5;
    public static final int skip=0x7f1201a6;
    /**
     * TODO: Several of these are currently unused but are expected to be needed to
     * implement SMS/MMS delivery and basic settings. Once we have the core functionality in place
     * we should do a pass to remove any unused values here.
     */
    public static final int sms_apns_key=0x7f1201a7;
    /**
     * Title for Access Point Names settings
     */
    public static final int sms_apns_title=0x7f1201a8;
    /**
     * Toast error shown when SMS functionality is disabled
     */
    public static final int sms_disabled=0x7f1201a9;
    public static final int sms_disabled_pref_key=0x7f1201aa;
    /**
     * Preference title: SMS disabled (Messaging is not default SMS app)
     */
    public static final int sms_disabled_pref_title=0x7f1201ab;
    public static final int sms_enabled_pref_key=0x7f1201ac;
    /**
     * Preference title: SMS enabled (Messaging is the default SMS app)
     */
    public static final int sms_enabled_pref_title=0x7f1201ad;
    /**
     * Text for SMS storage low text, when auto delete is enabled
     */
    public static final int sms_storage_low_auto_delete_enabled_dialog_text=0x7f1201ae;
    /**
     * Ticker for SMS storage low notification
     */
    public static final int sms_storage_low_notification_ticker=0x7f1201af;
    /**
     * Text for SMS storage low notification and dialog
     */
    public static final int sms_storage_low_text=0x7f1201b0;
    /**
     * Title for SMS storage low notification and dialog. Must match the framework's notification title, i.e. //frameworks/base/core/res/res/values/strings.xml#low_internal_storage_view_title
     */
    public static final int sms_storage_low_title=0x7f1201b1;
    public static final int snack_bar_retry=0x7f1201b2;
    /**
     * The string we display with the snack bar notification (very similar to toast) to undo the action that the notification is about.
     */
    public static final int snack_bar_undo=0x7f1201b3;
    /**
     * Text for starting a new conversation button in the compose UI
     */
    public static final int start_conversation=0x7f1201b4;
    public static final int start_new_conversation=0x7f1201b5;
    public static final int status_bar_notification_info_overflow=0x7f1201b6;
    /**
     * Label in "Message details" dialog
     */
    public static final int subject_label=0x7f1201b7;
    /**
     * The format of the subtitle of the help activity.
     */
    public static final int subtitle_format_for_version_number=0x7f1201b8;
    /**
     * Application-wide settings
     */
    public static final int swipe_right_deletes_conversation_key=0x7f1201b9;
    public static final int swipe_to_delete_conversation_pref_summary=0x7f1201ba;
    /**
     * Swipe to delete conversation
     */
    public static final int swipe_to_delete_conversation_pref_title=0x7f1201bb;
    /**
     * Displayed when user adds a new conversation widget. Tapping on the widget in this
     * mode will bring user to the conversation selection screen
     */
    public static final int tap_to_configure=0x7f1201bc;
    /**
     * The message in a blocked contact item which indicates tapping will unblock
     */
    public static final int tap_to_unblock_message=0x7f1201bd;
    /**
     * "Type" value in "Message details" dialog
     */
    public static final int text_message=0x7f1201be;
    /**
     * Title and subtitle combined into a single string
     */
    public static final int titles=0x7f1201bf;
    /**
     * Label in "Message details" dialog
     */
    public static final int to_address_label=0x7f1201c0;
    /**
     * Toast shown when the user successfully sets Bugle as the default SMS app.
     */
    public static final int toast_after_setting_default_sms_app=0x7f1201c1;
    /**
     * Toast shown when the user tries to send a message, and then sets Bugle as the default SMS app.
     */
    public static final int toast_after_setting_default_sms_app_for_message_send=0x7f1201c2;
    /**
     * Toast text when creating a conversation with more participants than MMS/SMS config permits
     */
    public static final int too_many_participants=0x7f1201c3;
    /**
     * The text of the toast/snack message shown when the selected conversation(s) are unarchived.
     * Displays the number of conversations unarchived
     */
    public static final int unarchived_toast_message=0x7f1201c4;
    /**
     * Label of unblock contact item in People & Options for 1:1 conversation
     */
    public static final int unblock_contact_title=0x7f1201c5;
    /**
     * The text of the toast/snack message shown when a contact is unblocked
     */
    public static final int unblocked_toast_message=0x7f1201c6;
    /**
     * Display text for phone number preference when the number is unknown
     */
    public static final int unknown_phone_number_pref_display_value=0x7f1201c7;
    /**
     * Shown in the Android Wear conversation log as the sender for outgoing messages,
     * when we don't know the user's real name (e.g. no "Me" contact on the phone).
     */
    public static final int unknown_self_participant=0x7f1201c8;
    /**
     * When an error occurs downloading a new message and the sender is unknown, substitute
     * this default text.
     */
    public static final int unknown_sender=0x7f1201c9;
    /**
     * Name to assign to a Network Access Point that was saved without a name
     */
    public static final int untitled_apn=0x7f1201ca;
    /**
     * Toast message telling the user that someone was blocked
     */
    public static final int update_destination_blocked=0x7f1201cb;
    /**
     * Toast message telling the user that someone was unblocked
     */
    public static final int update_destination_unblocked=0x7f1201cc;
    public static final int use_local_apn_pref_key=0x7f1201cd;
    /**
     * Title for the activity that shows details of VCards
     */
    public static final int vcard_detail_activity_title=0x7f1201ce;
    /**
     * VCard label for displaying birthdays
     */
    public static final int vcard_detail_birthday_label=0x7f1201cf;
    /**
     * VCard label for describing the Notes field of a contact.
     */
    public static final int vcard_detail_notes_label=0x7f1201d0;
    /**
     * Text shown on contact VCard promping the user to tap to view the contact
     */
    public static final int vcard_tap_hint=0x7f1201d1;
    /**
     * The dialog message content for when the message is over the attachment limit when sending the message
     */
    public static final int video_attachment_limit_exceeded_when_sending=0x7f1201d2;
    public static final int video_thumbnail_view_play_button_content_description=0x7f1201d3;
    /**
     * Action menu title for viewing the list of blocked contacts
     */
    public static final int view_blocked_contacts_title=0x7f1201d4;
    /**
     * Displayed at the end of the conversation list in the widget. Tapping on this will open bugle home activity. [CHAR LIMIT=35]
     */
    public static final int view_more_conversations=0x7f1201d5;
    /**
     * Displayed at the beginning of the message list in the widget. Tapping on this will open bugle home activity. [CHAR LIMIT=35]
     */
    public static final int view_more_messages=0x7f1201d6;
    public static final int welcome=0x7f1201d7;
    /**
     * Content description for conversation list button in desktop widget
     */
    public static final int widget_conversation_list_content_description=0x7f1201d8;
    /**
     * Displayed name of the desktop widget that shows the list of conversations
     */
    public static final int widget_conversation_list_name=0x7f1201d9;
    /**
     * Displayed name of the desktop widget that shows a single conversation
     */
    public static final int widget_conversation_name=0x7f1201da;
    /**
     * Content description for new conversation button in desktop widget
     */
    public static final int widget_new_conversation_content_description=0x7f1201db;
    /**
     * Content description for new message button in desktop widget
     */
    public static final int widget_new_message_content_description=0x7f1201dc;
    /**
     * Content description for widget title
     */
    public static final int widget_title_content_description=0x7f1201dd;
    public static final int wireless_alerts_key=0x7f1201de;
    public static final int wireless_alerts_title=0x7f1201df;
    public static final int work_directory_display_name=0x7f1201e0;
  }
  public static final class style {
    public static final int AddContactConfirmationTextStyle=0x7f130000;
    public static final int AlertDialog_AppCompat=0x7f130001;
    public static final int AlertDialog_AppCompat_Light=0x7f130002;
    public static final int Animation_AppCompat_Dialog=0x7f130003;
    public static final int Animation_AppCompat_DropDownUp=0x7f130004;
    public static final int Animation_AppCompat_Tooltip=0x7f130005;
    public static final int ApnPreference=0x7f130006;
    public static final int ApnPreferenceLayoutStyle=0x7f130007;
    public static final int AttachmentGridItemViewCheckBoxStyle=0x7f130008;
    public static final int AttachmentPreviewAttachmentStyle=0x7f130009;
    /**
     * Styles to support RTL for pre API 17
     */
    public static final int AttachmentPreviewCloseButtonStyle=0x7f13000a;
    public static final int AttachmentPreviewMoreItemsText=0x7f13000b;
    public static final int AudioAttachmentTimerText=0x7f13000c;
    public static final int AudioAttachmentViewPlayPauseButtonStyle=0x7f13000d;
    public static final int AudioAttachmentViewStyle=0x7f13000e;
    public static final int AudioPickerHintText=0x7f13000f;
    public static final int AudioPickerTimerText=0x7f130010;
    public static final int Base_AlertDialog_AppCompat=0x7f130011;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f130012;
    public static final int Base_Animation_AppCompat_Dialog=0x7f130013;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f130014;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f130015;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f130016;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f130017;
    public static final int Base_TextAppearance_AppCompat=0x7f130018;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f130019;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f13001a;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f13001b;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f13001c;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f13001d;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f13001e;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f13001f;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f130020;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f130021;
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f130022;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f130023;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f130024;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f130025;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f130026;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f130027;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f130028;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f130029;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f13002a;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f13002b;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f13002c;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f13002d;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f13002e;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f13002f;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f130030;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f130031;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f130032;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f130033;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f130034;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f130035;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f130036;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f130037;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f130038;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f130039;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f13003a;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f13003b;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f13003c;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f13003d;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f13003e;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f13003f;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f130040;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f130041;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f130042;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f130043;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f130044;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f130045;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f130046;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f130047;
    public static final int Base_Theme_AppCompat=0x7f130048;
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f130049;
    public static final int Base_Theme_AppCompat_Dialog=0x7f13004a;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f13004b;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f13004c;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f13004d;
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f13004e;
    public static final int Base_Theme_AppCompat_Light=0x7f13004f;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f130050;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f130051;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f130052;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f130053;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f130054;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f130055;
    public static final int Base_ThemeOverlay_AppCompat=0x7f130056;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f130057;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f130058;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f130059;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f13005a;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f13005b;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f13005c;
    public static final int Base_V21_Theme_AppCompat=0x7f13005d;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f13005e;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f13005f;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f130060;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f130061;
    public static final int Base_V22_Theme_AppCompat=0x7f130062;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f130063;
    public static final int Base_V23_Theme_AppCompat=0x7f130064;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f130065;
    public static final int Base_V26_Theme_AppCompat=0x7f130066;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f130067;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f130068;
    public static final int Base_V28_Theme_AppCompat=0x7f130069;
    public static final int Base_V28_Theme_AppCompat_Light=0x7f13006a;
    public static final int Base_V7_Theme_AppCompat=0x7f13006b;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f13006c;
    public static final int Base_V7_Theme_AppCompat_Light=0x7f13006d;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f13006e;
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f13006f;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f130070;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f130071;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f130072;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f130073;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f130074;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f130075;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f130076;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f130077;
    public static final int Base_Widget_AppCompat_ActionButton=0x7f130078;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f130079;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f13007a;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f13007b;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f13007c;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f13007d;
    public static final int Base_Widget_AppCompat_Button=0x7f13007e;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f13007f;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f130080;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f130081;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f130082;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f130083;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f130084;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f130085;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f130086;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f130087;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f130088;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f130089;
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f13008a;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f13008b;
    public static final int Base_Widget_AppCompat_EditText=0x7f13008c;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f13008d;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f13008e;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f13008f;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f130090;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f130091;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f130092;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f130093;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f130094;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f130095;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f130096;
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f130097;
    public static final int Base_Widget_AppCompat_ListView=0x7f130098;
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f130099;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f13009a;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f13009b;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f13009c;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f13009d;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f13009e;
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f13009f;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f1300a0;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f1300a1;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f1300a2;
    public static final int Base_Widget_AppCompat_SearchView=0x7f1300a3;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f1300a4;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f1300a5;
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f1300a6;
    public static final int Base_Widget_AppCompat_Spinner=0x7f1300a7;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f1300a8;
    public static final int Base_Widget_AppCompat_TextView=0x7f1300a9;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f1300aa;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f1300ab;
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1300ac;
    public static final int BugleActionBar=0x7f1300ad;
    public static final int BugleActionBarTitleTextStyle=0x7f1300ae;
    public static final int BugleBaseTheme=0x7f1300af;
    public static final int BuglePhotoViewTheme=0x7f1300b0;
    /**
     * Application theme.
     */
    public static final int BugleTheme=0x7f1300b1;
    public static final int BugleTheme_ArchivedConversationListActivity=0x7f1300b2;
    public static final int BugleTheme_ConversationActivity=0x7f1300b3;
    public static final int BugleTheme_ConversationActivityBase=0x7f1300b4;
    public static final int BugleTheme_ConversationListActivity=0x7f1300b5;
    public static final int BugleTheme_DialogActivity=0x7f1300b6;
    public static final int BugleTheme_SettingsActivity=0x7f1300b7;
    public static final int CameraChooserFrameStyle=0x7f1300b8;
    public static final int ChipAutocompleteDividerStyle=0x7f1300b9;
    public static final int ChipAutocompleteDividerStyle_PermissionItem=0x7f1300ba;
    public static final int ChipAutocompleteWrapperStyle=0x7f1300bb;
    public static final int ChipDeleteIconBaseStyle=0x7f1300bc;
    public static final int ChipDeleteIconStyle=0x7f1300bd;
    public static final int ChipEndIconStyle=0x7f1300be;
    public static final int ChipIconBaseStyle=0x7f1300bf;
    public static final int ChipIconStyle=0x7f1300c0;
    public static final int ChipIndicatorTextStyle=0x7f1300c1;
    public static final int ChipPermissionDismissIconStyle=0x7f1300c2;
    public static final int ChipPermissionStyle=0x7f1300c3;
    public static final int ChipStartIconStyle=0x7f1300c4;
    public static final int ChipSubtitleStyle=0x7f1300c5;
    public static final int ChipTextViewLayoutStyle=0x7f1300c6;
    public static final int ChipTitleStyle=0x7f1300c7;
    public static final int ColorAccentBlueOverrideStyle=0x7f1300c8;
    public static final int ColorAccentGrayOverrideStyle=0x7f1300c9;
    public static final int ComposeMessageViewAttachMediaButtonStyle=0x7f1300ca;
    public static final int ComposeMessageViewDraftViewStyle=0x7f1300cb;
    public static final int ComposeMessageViewFrameLayoutStyle=0x7f1300cc;
    public static final int ComposeMessageViewMessageBodySizeStyle=0x7f1300cd;
    public static final int ContactListAlphabetHeader=0x7f1300ce;
    public static final int ContactListItem=0x7f1300cf;
    public static final int ContactListItemDetail=0x7f1300d0;
    public static final int ContactListItemDetailType=0x7f1300d1;
    public static final int ContactListItemDrawableIndicator=0x7f1300d2;
    public static final int ContactListItemLinearLayoutStyle=0x7f1300d3;
    public static final int ContactListItemViewStyle=0x7f1300d4;
    public static final int ContactPickerHintText=0x7f1300d5;
    public static final int ConversationActionBarTitleTextStyle=0x7f1300d6;
    public static final int ConversationComposeSendText=0x7f1300d7;
    public static final int ConversationComposeSubjectText=0x7f1300d8;
    public static final int ConversationListFragmentStartNewButtonStyle=0x7f1300d9;
    public static final int ConversationListItemViewConversationNameStyle=0x7f1300da;
    public static final int ConversationListItemViewPaddingStyle=0x7f1300db;
    public static final int ConversationListItemViewTextStyle=0x7f1300dc;
    public static final int ConversationMessage=0x7f1300dd;
    public static final int ConversationMessageInfo=0x7f1300de;
    public static final int ConversationMessageStatus=0x7f1300df;
    public static final int ConversationMessageText=0x7f1300e0;
    public static final int ConversationMessageTitle=0x7f1300e1;
    public static final int ConversationMessageViewStyle=0x7f1300e2;
    public static final int CopyContactDialogTextStyle=0x7f1300e3;
    public static final int DebugMmsConfigItemStyle=0x7f1300e4;
    public static final int DirectoryHeaderStyle=0x7f1300e5;
    public static final int DropDownListViewStyle=0x7f1300e6;
    public static final int GalleryGridItemViewCheckBoxStyle=0x7f1300e7;
    public static final int GroupMmsSettingItem=0x7f1300e8;
    public static final int Holo_ActionBar=0x7f1300e9;
    public static final int Invisible=0x7f1300ea;
    public static final int LaunchTheme=0x7f1300eb;
    public static final int ListEmptyText=0x7f1300ec;
    public static final int LowStorageActionItemStyle=0x7f1300ed;
    public static final int MessageSimIndicator=0x7f1300ee;
    public static final int MessageVcardAttachmentStyle=0x7f1300ef;
    public static final int MmsIndicatorStyle=0x7f1300f0;
    public static final int NotificationSecondaryText=0x7f1300f1;
    public static final int NotificationSenderText=0x7f1300f2;
    public static final int NotificationSubjectText=0x7f1300f3;
    public static final int NotificationTertiaryText=0x7f1300f4;
    public static final int PagerTabHeader=0x7f1300f5;
    public static final int ParticipantListItem=0x7f1300f6;
    public static final int PeopleAndOptionsItemStyle=0x7f1300f7;
    public static final int PeopleAndOptionsSectionHeader=0x7f1300f8;
    public static final int PeopleListItemViewStyle=0x7f1300f9;
    public static final int PhotoViewTheme=0x7f1300fa;
    public static final int PhotoViewTheme_NoActionBar=0x7f1300fb;
    public static final int PhotoViewTheme_Translucent=0x7f1300fc;
    public static final int Platform_AppCompat=0x7f1300fd;
    public static final int Platform_AppCompat_Light=0x7f1300fe;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f1300ff;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f130100;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f130101;
    public static final int Platform_V21_AppCompat=0x7f130102;
    public static final int Platform_V21_AppCompat_Light=0x7f130103;
    public static final int Platform_V25_AppCompat=0x7f130104;
    public static final int Platform_V25_AppCompat_Light=0x7f130105;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f130106;
    public static final int PromoScreenButtonStyle=0x7f130107;
    public static final int PromoScreenTextStyle=0x7f130108;
    public static final int PromoScreenTextStyle_CenterAligned=0x7f130109;
    public static final int RecipientEditTextView=0x7f13010a;
    public static final int RecipientEditTextViewBase=0x7f13010b;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f13010c;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f13010d;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f13010e;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f13010f;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f130110;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut=0x7f130111;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow=0x7f130112;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f130113;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title=0x7f130114;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f130115;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f130116;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f130117;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f130118;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f130119;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f13011a;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f13011b;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f13011c;
    public static final int SettingsListItem=0x7f13011d;
    public static final int SettingsListItemDetail=0x7f13011e;
    public static final int SimSelectorItem=0x7f13011f;
    public static final int SimSelectorItemDetail=0x7f130120;
    public static final int SimSelectorItemLinearLayoutStyle=0x7f130121;
    public static final int SmsDeliverdBadge=0x7f130122;
    public static final int SnackBarMessageWrapper=0x7f130123;
    public static final int SnackBarText=0x7f130124;
    public static final int SubjectViewStyle=0x7f130125;
    public static final int TextAppearance_AppCompat=0x7f130126;
    public static final int TextAppearance_AppCompat_Body1=0x7f130127;
    public static final int TextAppearance_AppCompat_Body2=0x7f130128;
    public static final int TextAppearance_AppCompat_Button=0x7f130129;
    public static final int TextAppearance_AppCompat_Caption=0x7f13012a;
    public static final int TextAppearance_AppCompat_Display1=0x7f13012b;
    public static final int TextAppearance_AppCompat_Display2=0x7f13012c;
    public static final int TextAppearance_AppCompat_Display3=0x7f13012d;
    public static final int TextAppearance_AppCompat_Display4=0x7f13012e;
    public static final int TextAppearance_AppCompat_Headline=0x7f13012f;
    public static final int TextAppearance_AppCompat_Inverse=0x7f130130;
    public static final int TextAppearance_AppCompat_Large=0x7f130131;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f130132;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f130133;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f130134;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f130135;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f130136;
    public static final int TextAppearance_AppCompat_Medium=0x7f130137;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f130138;
    public static final int TextAppearance_AppCompat_Menu=0x7f130139;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f13013a;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f13013b;
    public static final int TextAppearance_AppCompat_Small=0x7f13013c;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f13013d;
    public static final int TextAppearance_AppCompat_Subhead=0x7f13013e;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f13013f;
    public static final int TextAppearance_AppCompat_Title=0x7f130140;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f130141;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f130142;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f130143;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f130144;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f130145;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f130146;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f130147;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f130148;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f130149;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f13014a;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f13014b;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f13014c;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f13014d;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f13014e;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f13014f;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f130150;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f130151;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f130152;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f130153;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f130154;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f130155;
    public static final int TextAppearance_Compat_Notification=0x7f130156;
    public static final int TextAppearance_Compat_Notification_Info=0x7f130157;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f130158;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f130159;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f13015a;
    public static final int TextAppearance_Compat_Notification_Media=0x7f13015b;
    public static final int TextAppearance_Compat_Notification_Time=0x7f13015c;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f13015d;
    public static final int TextAppearance_Compat_Notification_Title=0x7f13015e;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f13015f;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f130160;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f130161;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f130162;
    public static final int Theme_AppCompat=0x7f130163;
    public static final int Theme_AppCompat_CompactMenu=0x7f130164;
    public static final int Theme_AppCompat_DayNight=0x7f130165;
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f130166;
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f130167;
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f130168;
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f130169;
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f13016a;
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f13016b;
    public static final int Theme_AppCompat_Dialog=0x7f13016c;
    public static final int Theme_AppCompat_Dialog_Alert=0x7f13016d;
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f13016e;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f13016f;
    public static final int Theme_AppCompat_Empty=0x7f130170;
    public static final int Theme_AppCompat_Light=0x7f130171;
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f130172;
    public static final int Theme_AppCompat_Light_Dialog=0x7f130173;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f130174;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f130175;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f130176;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f130177;
    public static final int Theme_AppCompat_NoActionBar=0x7f130178;
    public static final int ThemeOverlay_AppCompat=0x7f130179;
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f13017a;
    public static final int ThemeOverlay_AppCompat_Dark=0x7f13017b;
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f13017c;
    public static final int ThemeOverlay_AppCompat_DayNight=0x7f13017d;
    public static final int ThemeOverlay_AppCompat_DayNight_ActionBar=0x7f13017e;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f13017f;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f130180;
    public static final int ThemeOverlay_AppCompat_Light=0x7f130181;
    public static final int Translucent=0x7f130182;
    public static final int VcardAttachmentSingleStyle=0x7f130183;
    public static final int Widget_AppCompat_ActionBar=0x7f130184;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f130185;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f130186;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f130187;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f130188;
    public static final int Widget_AppCompat_ActionButton=0x7f130189;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f13018a;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f13018b;
    public static final int Widget_AppCompat_ActionMode=0x7f13018c;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f13018d;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f13018e;
    public static final int Widget_AppCompat_Button=0x7f13018f;
    public static final int Widget_AppCompat_Button_Borderless=0x7f130190;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f130191;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f130192;
    public static final int Widget_AppCompat_Button_Colored=0x7f130193;
    public static final int Widget_AppCompat_Button_Small=0x7f130194;
    public static final int Widget_AppCompat_ButtonBar=0x7f130195;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f130196;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f130197;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f130198;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f130199;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f13019a;
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f13019b;
    public static final int Widget_AppCompat_EditText=0x7f13019c;
    public static final int Widget_AppCompat_ImageButton=0x7f13019d;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f13019e;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f13019f;
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f1301a0;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f1301a1;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f1301a2;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f1301a3;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f1301a4;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f1301a5;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f1301a6;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f1301a7;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f1301a8;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f1301a9;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f1301aa;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f1301ab;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f1301ac;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f1301ad;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f1301ae;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f1301af;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f1301b0;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f1301b1;
    public static final int Widget_AppCompat_Light_SearchView=0x7f1301b2;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f1301b3;
    public static final int Widget_AppCompat_ListMenuView=0x7f1301b4;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f1301b5;
    public static final int Widget_AppCompat_ListView=0x7f1301b6;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f1301b7;
    public static final int Widget_AppCompat_ListView_Menu=0x7f1301b8;
    public static final int Widget_AppCompat_PopupMenu=0x7f1301b9;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f1301ba;
    public static final int Widget_AppCompat_PopupWindow=0x7f1301bb;
    public static final int Widget_AppCompat_ProgressBar=0x7f1301bc;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f1301bd;
    public static final int Widget_AppCompat_RatingBar=0x7f1301be;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f1301bf;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f1301c0;
    public static final int Widget_AppCompat_SearchView=0x7f1301c1;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f1301c2;
    public static final int Widget_AppCompat_SeekBar=0x7f1301c3;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f1301c4;
    public static final int Widget_AppCompat_Spinner=0x7f1301c5;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f1301c6;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f1301c7;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f1301c8;
    public static final int Widget_AppCompat_TextView=0x7f1301c9;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f1301ca;
    public static final int Widget_AppCompat_Toolbar=0x7f1301cb;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f1301cc;
    public static final int Widget_Compat_NotificationActionContainer=0x7f1301cd;
    public static final int Widget_Compat_NotificationActionText=0x7f1301ce;
    public static final int Widget_Support_CoordinatorLayout=0x7f1301cf;
    public static final int WidgetConversationAppIcon=0x7f1301d0;
    public static final int WidgetConversationItemAttachment=0x7f1301d1;
    public static final int WidgetConversationItemAvatarIncoming=0x7f1301d2;
    public static final int WidgetConversationItemAvatarOutgoing=0x7f1301d3;
    public static final int WidgetConversationItemBodyIncoming=0x7f1301d4;
    public static final int WidgetConversationItemBodyOutgoing=0x7f1301d5;
    public static final int WidgetConversationItemDate=0x7f1301d6;
    public static final int WidgetConversationItemFailed=0x7f1301d7;
    public static final int WidgetConversationItemIncoming=0x7f1301d8;
    public static final int WidgetConversationItemIncomingAvatarShadow=0x7f1301d9;
    public static final int WidgetConversationItemOutgoingAvatarShadow=0x7f1301da;
    public static final int WidgetConversationItemWidget=0x7f1301db;
    public static final int WidgetConversationListItemAvatar=0x7f1301dc;
    public static final int WidgetConversationListItemBody=0x7f1301dd;
    public static final int WidgetConversationListItemDate=0x7f1301de;
    public static final int WidgetConversationListItemFrom=0x7f1301df;
    public static final int WidgetConversationListItemStyle=0x7f1301e0;
    public static final int WidgetConversationTitle=0x7f1301e1;
    public static final int WidgetHeaderImage=0x7f1301e2;
    public static final int WidgetLoading=0x7f1301e3;
    public static final int WidgetTitle=0x7f1301e4;
    public static final int appCopyrightStyle=0x7f1301e5;
    public static final int appTitleStyle=0x7f1301e6;
    public static final int appVersionStyle=0x7f1301e7;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActionBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.android.messaging:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.android.messaging:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.android.messaging:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.android.messaging:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.android.messaging:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.android.messaging:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.android.messaging:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.android.messaging:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.android.messaging:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.android.messaging:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.android.messaging:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.android.messaging:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.android.messaging:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height com.android.messaging:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.android.messaging:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.android.messaging:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.android.messaging:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.android.messaging:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.android.messaging:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.android.messaging:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.android.messaging:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.android.messaging:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.android.messaging:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.android.messaging:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.android.messaging:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.android.messaging:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.android.messaging:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.android.messaging:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.android.messaging:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
      0x7f040036, 0x7f040037, 0x7f040038, 0x7f040062, 
      0x7f040063, 0x7f040064, 0x7f040065, 0x7f040066, 
      0x7f040067, 0x7f04006b, 0x7f040071, 0x7f040072, 
      0x7f040086, 0x7f04009d, 0x7f04009e, 0x7f04009f, 
      0x7f0400a0, 0x7f0400a1, 0x7f0400a8, 0x7f0400ac, 
      0x7f0400c8, 0x7f0400d4, 0x7f0400e2, 0x7f0400e6, 
      0x7f0400e7, 0x7f040109, 0x7f04010c, 0x7f04012b, 
      0x7f040134
    };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Attributes that can be used with a ActionBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
      0x010100b3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
      0x0101013f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
    };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.android.messaging:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.android.messaging:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.android.messaging:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.android.messaging:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.android.messaging:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.android.messaging:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
      0x7f040036, 0x7f040037, 0x7f040052, 0x7f04009d, 
      0x7f04010c, 0x7f040134
    };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attributes that can be used with a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.android.messaging:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.android.messaging:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
      0x7f040087, 0x7f0400a9
    };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * Attributes that can be used with a AlertDialog.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonIconDimen com.android.messaging:buttonIconDimen}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.android.messaging:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.android.messaging:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.android.messaging:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.android.messaging:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.android.messaging:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.android.messaging:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonIconDimen
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
      0x010100f2, 0x7f040044, 0x7f040045, 0x7f0400bd, 
      0x7f0400be, 0x7f0400d1, 0x7f0400fc, 0x7f0400fd
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#buttonIconDimen}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:buttonIconDimen
     */
    public static final int AlertDialog_buttonIconDimen=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:listLayout
     */
    public static final int AlertDialog_listLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:showTitle
     */
    public static final int AlertDialog_showTitle=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=7;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableCompat_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableCompat_android_dither
     * @see #AnimatedStateListDrawableCompat_android_visible
     * @see #AnimatedStateListDrawableCompat_android_variablePadding
     * @see #AnimatedStateListDrawableCompat_android_constantSize
     * @see #AnimatedStateListDrawableCompat_android_enterFadeDuration
     * @see #AnimatedStateListDrawableCompat_android_exitFadeDuration
     */
    public static final int[] AnimatedStateListDrawableCompat={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int AnimatedStateListDrawableCompat_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int AnimatedStateListDrawableCompat_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int AnimatedStateListDrawableCompat_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int AnimatedStateListDrawableCompat_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int AnimatedStateListDrawableCompat_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableItem_android_id
     * @see #AnimatedStateListDrawableItem_android_drawable
     */
    public static final int[] AnimatedStateListDrawableItem={
      0x010100d0, 0x01010199
    };
    /**
     * <p>
     * @attr description
     * Keyframe identifier for use in specifying transitions.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int AnimatedStateListDrawableItem_android_id=0;
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the frame.  If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableItem_android_drawable=1;
    /**
     * Attributes that can be used with a AnimatedStateListDrawableTransition.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_drawable android:drawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_toId android:toId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_fromId android:fromId}</code></td><td></td></tr>
     * <tr><td><code>{@link #AnimatedStateListDrawableTransition_android_reversible android:reversible}</code></td><td></td></tr>
     * </table>
     * @see #AnimatedStateListDrawableTransition_android_drawable
     * @see #AnimatedStateListDrawableTransition_android_toId
     * @see #AnimatedStateListDrawableTransition_android_fromId
     * @see #AnimatedStateListDrawableTransition_android_reversible
     */
    public static final int[] AnimatedStateListDrawableTransition={
      0x01010199, 0x01010449, 0x0101044a, 0x0101044b
    };
    /**
     * <p>
     * @attr description
     * Reference to a animation drawable resource to use for the frame.  If not
     * given, the animation drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int AnimatedStateListDrawableTransition_android_drawable=0;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the ending state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:toId
     */
    public static final int AnimatedStateListDrawableTransition_android_toId=1;
    /**
     * <p>
     * @attr description
     * Keyframe identifier for the starting state.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:fromId
     */
    public static final int AnimatedStateListDrawableTransition_android_fromId=2;
    /**
     * <p>
     * @attr description
     * Whether this transition is reversible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:reversible
     */
    public static final int AnimatedStateListDrawableTransition_android_reversible=3;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.android.messaging:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.android.messaging:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.android.messaging:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
      0x01010119, 0x7f040103, 0x7f040129, 0x7f04012a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.android.messaging:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.android.messaging:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.android.messaging:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
      0x01010142, 0x7f040126, 0x7f040127, 0x7f040128
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
      0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
      0x01010170, 0x01010392, 0x01010393
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.android.messaging:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.android.messaging:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.android.messaging:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.android.messaging:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.android.messaging:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableBottomCompat com.android.messaging:drawableBottomCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableEndCompat com.android.messaging:drawableEndCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableLeftCompat com.android.messaging:drawableLeftCompat}</code></td><td>Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableRightCompat com.android.messaging:drawableRightCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableStartCompat com.android.messaging:drawableStartCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTint com.android.messaging:drawableTint}</code></td><td>Tint to apply to the compound (left, top, etc.) drawables.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTintMode com.android.messaging:drawableTintMode}</code></td><td>Blending mode used to apply the compound (left, top, etc.) drawables tint.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_drawableTopCompat com.android.messaging:drawableTopCompat}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_firstBaselineToTopHeight com.android.messaging:firstBaselineToTopHeight}</code></td><td>Distance from the top of the TextView to the first text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.android.messaging:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontVariationSettings com.android.messaging:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lastBaselineToBottomHeight com.android.messaging:lastBaselineToBottomHeight}</code></td><td>Distance from the bottom of the TextView to the last text baseline.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_lineHeight com.android.messaging:lineHeight}</code></td><td>Explicit height between lines of text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.android.messaging:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textLocale com.android.messaging:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_drawableBottomCompat
     * @see #AppCompatTextView_drawableEndCompat
     * @see #AppCompatTextView_drawableLeftCompat
     * @see #AppCompatTextView_drawableRightCompat
     * @see #AppCompatTextView_drawableStartCompat
     * @see #AppCompatTextView_drawableTint
     * @see #AppCompatTextView_drawableTintMode
     * @see #AppCompatTextView_drawableTopCompat
     * @see #AppCompatTextView_firstBaselineToTopHeight
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_fontVariationSettings
     * @see #AppCompatTextView_lastBaselineToBottomHeight
     * @see #AppCompatTextView_lineHeight
     * @see #AppCompatTextView_textAllCaps
     * @see #AppCompatTextView_textLocale
     */
    public static final int[] AppCompatTextView={
      0x01010034, 0x7f040030, 0x7f040031, 0x7f040032, 
      0x7f040033, 0x7f040034, 0x7f040076, 0x7f040077, 
      0x7f040078, 0x7f040079, 0x7f04007b, 0x7f04007c, 
      0x7f04007d, 0x7f04007e, 0x7f04008e, 0x7f040090, 
      0x7f040099, 0x7f0400ae, 0x7f0400b8, 0x7f040113, 
      0x7f04011f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#drawableBottomCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:drawableBottomCompat
     */
    public static final int AppCompatTextView_drawableBottomCompat=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#drawableEndCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:drawableEndCompat
     */
    public static final int AppCompatTextView_drawableEndCompat=7;
    /**
     * <p>
     * @attr description
     * Compound drawables allowing the use of vector drawable when running on older versions
     * of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:drawableLeftCompat
     */
    public static final int AppCompatTextView_drawableLeftCompat=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#drawableRightCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:drawableRightCompat
     */
    public static final int AppCompatTextView_drawableRightCompat=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#drawableStartCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:drawableStartCompat
     */
    public static final int AppCompatTextView_drawableStartCompat=10;
    /**
     * <p>
     * @attr description
     * Tint to apply to the compound (left, top, etc.) drawables.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:drawableTint
     */
    public static final int AppCompatTextView_drawableTint=11;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the compound (left, top, etc.) drawables tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:drawableTintMode
     */
    public static final int AppCompatTextView_drawableTintMode=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#drawableTopCompat}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:drawableTopCompat
     */
    public static final int AppCompatTextView_drawableTopCompat=13;
    /**
     * <p>
     * @attr description
     * Distance from the top of the TextView to the first text baseline. If set, this
     * overrides the value set for paddingTop.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:firstBaselineToTopHeight
     */
    public static final int AppCompatTextView_firstBaselineToTopHeight=14;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=15;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available after api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:fontVariationSettings
     */
    public static final int AppCompatTextView_fontVariationSettings=16;
    /**
     * <p>
     * @attr description
     * Distance from the bottom of the TextView to the last text baseline. If set, this
     * overrides the value set for paddingBottom.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:lastBaselineToBottomHeight
     */
    public static final int AppCompatTextView_lastBaselineToBottomHeight=17;
    /**
     * <p>
     * @attr description
     * Explicit height between lines of text. If set, this will override the values set
     * for lineSpacingExtra and lineSpacingMultiplier.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:lineHeight
     */
    public static final int AppCompatTextView_lineHeight=18;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=19;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:textLocale
     */
    public static final int AppCompatTextView_textLocale=20;
    /**
     * Attributes that can be used with a AppCompatTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.android.messaging:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.android.messaging:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.android.messaging:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.android.messaging:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.android.messaging:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.android.messaging:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.android.messaging:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.android.messaging:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.android.messaging:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.android.messaging:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.android.messaging:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.android.messaging:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.android.messaging:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.android.messaging:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.android.messaging:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.android.messaging:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.android.messaging:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseContentDescription com.android.messaging:actionModeCloseContentDescription}</code></td><td>Content description to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.android.messaging:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.android.messaging:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.android.messaging:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.android.messaging:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.android.messaging:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.android.messaging:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.android.messaging:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.android.messaging:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.android.messaging:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.android.messaging:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeTheme com.android.messaging:actionModeTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar in action mode.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.android.messaging:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.android.messaging:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.android.messaging:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.android.messaging:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.android.messaging:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.android.messaging:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.android.messaging:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.android.messaging:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.android.messaging:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.android.messaging:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.android.messaging:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.android.messaging:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.android.messaging:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.android.messaging:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.android.messaging:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.android.messaging:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.android.messaging:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.android.messaging:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.android.messaging:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.android.messaging:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.android.messaging:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.android.messaging:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.android.messaging:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.android.messaging:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.android.messaging:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.android.messaging:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.android.messaging:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.android.messaging:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.android.messaging:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.android.messaging:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogCornerRadius com.android.messaging:dialogCornerRadius}</code></td><td>Preferred corner radius of dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.android.messaging:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.android.messaging:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.android.messaging:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.android.messaging:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.android.messaging:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.android.messaging:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.android.messaging:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.android.messaging:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.android.messaging:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.android.messaging:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.android.messaging:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.android.messaging:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorMultipleAnimated com.android.messaging:listChoiceIndicatorMultipleAnimated}</code></td><td>Animated Drawable to use for multiple choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceIndicatorSingleAnimated com.android.messaging:listChoiceIndicatorSingleAnimated}</code></td><td>Animated Drawable to use for single choice indicators.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.android.messaging:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.android.messaging:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.android.messaging:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.android.messaging:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.android.messaging:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.android.messaging:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingEnd com.android.messaging:listPreferredItemPaddingEnd}</code></td><td>The preferred padding along the end edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.android.messaging:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.android.messaging:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingStart com.android.messaging:listPreferredItemPaddingStart}</code></td><td>The preferred padding along the start edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.android.messaging:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.android.messaging:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.android.messaging:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.android.messaging:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.android.messaging:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.android.messaging:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.android.messaging:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.android.messaging:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.android.messaging:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.android.messaging:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.android.messaging:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.android.messaging:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.android.messaging:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.android.messaging:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.android.messaging:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.android.messaging:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.android.messaging:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.android.messaging:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.android.messaging:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.android.messaging:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.android.messaging:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.android.messaging:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.android.messaging:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.android.messaging:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.android.messaging:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.android.messaging:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.android.messaging:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.android.messaging:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.android.messaging:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.android.messaging:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_viewInflaterClass com.android.messaging:viewInflaterClass}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.android.messaging:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.android.messaging:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.android.messaging:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.android.messaging:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.android.messaging:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.android.messaging:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.android.messaging:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.android.messaging:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.android.messaging:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.android.messaging:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseContentDescription
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeTheme
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogCornerRadius
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listChoiceIndicatorMultipleAnimated
     * @see #AppCompatTheme_listChoiceIndicatorSingleAnimated
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingEnd
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_listPreferredItemPaddingStart
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_viewInflaterClass
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
      0x01010057, 0x010100ae, 0x7f040000, 0x7f040001, 
      0x7f040002, 0x7f040003, 0x7f040004, 0x7f040005, 
      0x7f040006, 0x7f040007, 0x7f040008, 0x7f040009, 
      0x7f04000a, 0x7f04000b, 0x7f04000c, 0x7f04000e, 
      0x7f04000f, 0x7f040010, 0x7f040011, 0x7f040012, 
      0x7f040013, 0x7f040014, 0x7f040015, 0x7f040016, 
      0x7f040017, 0x7f040018, 0x7f040019, 0x7f04001a, 
      0x7f04001b, 0x7f04001c, 0x7f04001d, 0x7f04001e, 
      0x7f04001f, 0x7f040020, 0x7f040023, 0x7f040024, 
      0x7f040025, 0x7f040026, 0x7f040027, 0x7f04002f, 
      0x7f04003c, 0x7f04003d, 0x7f04003e, 0x7f04003f, 
      0x7f040040, 0x7f040041, 0x7f040046, 0x7f040047, 
      0x7f04004a, 0x7f04004b, 0x7f040056, 0x7f040057, 
      0x7f040058, 0x7f040059, 0x7f04005a, 0x7f04005b, 
      0x7f04005c, 0x7f04005d, 0x7f04005e, 0x7f04005f, 
      0x7f040068, 0x7f04006d, 0x7f04006e, 0x7f04006f, 
      0x7f040073, 0x7f040075, 0x7f040081, 0x7f040082, 
      0x7f040083, 0x7f040084, 0x7f040085, 0x7f04009f, 
      0x7f0400a6, 0x7f0400b9, 0x7f0400ba, 0x7f0400bb, 
      0x7f0400bc, 0x7f0400bf, 0x7f0400c0, 0x7f0400c1, 
      0x7f0400c2, 0x7f0400c3, 0x7f0400c4, 0x7f0400c5, 
      0x7f0400c6, 0x7f0400c7, 0x7f0400dc, 0x7f0400dd, 
      0x7f0400de, 0x7f0400e1, 0x7f0400e3, 0x7f0400eb, 
      0x7f0400ec, 0x7f0400ed, 0x7f0400ee, 0x7f0400f4, 
      0x7f0400f5, 0x7f0400f6, 0x7f0400f7, 0x7f040100, 
      0x7f040101, 0x7f040111, 0x7f040114, 0x7f040115, 
      0x7f040116, 0x7f040117, 0x7f040118, 0x7f040119, 
      0x7f04011a, 0x7f04011b, 0x7f04011d, 0x7f04011e, 
      0x7f040135, 0x7f040136, 0x7f040137, 0x7f040138, 
      0x7f040140, 0x7f040142, 0x7f040143, 0x7f040144, 
      0x7f040145, 0x7f040146, 0x7f040147, 0x7f040148, 
      0x7f040149, 0x7f04014a, 0x7f04014b
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Content description to use for the close action mode button
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:actionModeCloseContentDescription
     */
    public static final int AppCompatTheme_actionModeCloseContentDescription=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=23;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=24;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=26;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=27;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=28;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=29;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar in action mode. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeTheme
     */
    public static final int AppCompatTheme_actionModeTheme=30;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=31;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=33;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=35;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=36;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=37;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=38;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=39;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=43;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=44;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=45;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=46;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=47;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=48;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=49;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=50;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=53;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=54;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=55;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorError
     */
    public static final int AppCompatTheme_colorError=56;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=57;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=58;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=59;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=60;
    /**
     * <p>
     * @attr description
     * Preferred corner radius of dialogs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:dialogCornerRadius
     */
    public static final int AppCompatTheme_dialogCornerRadius=61;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=62;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=63;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=64;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=65;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=66;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=67;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=68;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=69;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=70;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=71;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=72;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=73;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for multiple choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:listChoiceIndicatorMultipleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorMultipleAnimated=74;
    /**
     * <p>
     * @attr description
     * Animated Drawable to use for single choice indicators.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:listChoiceIndicatorSingleAnimated
     */
    public static final int AppCompatTheme_listChoiceIndicatorSingleAnimated=75;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=76;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=77;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=78;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=79;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=80;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=81;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:listPreferredItemPaddingEnd
     */
    public static final int AppCompatTheme_listPreferredItemPaddingEnd=82;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=83;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=84;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:listPreferredItemPaddingStart
     */
    public static final int AppCompatTheme_listPreferredItemPaddingStart=85;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=86;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=87;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=88;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=89;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=90;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=91;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=92;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=93;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=94;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=95;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=96;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=97;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=98;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=99;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=100;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=101;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=102;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=103;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=104;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=105;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=106;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=107;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=108;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=109;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=110;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=111;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=112;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=113;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=114;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=115;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#viewInflaterClass}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:viewInflaterClass
     */
    public static final int AppCompatTheme_viewInflaterClass=116;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=117;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=118;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=119;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.messaging:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=120;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.messaging:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=121;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.messaging:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=122;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.messaging:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=123;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.messaging:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=124;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.messaging:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=125;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=126;
    /**
     * Attributes that can be used with a AsyncImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AsyncImageView_cornerRadius com.android.messaging:cornerRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #AsyncImageView_fadeIn com.android.messaging:fadeIn}</code></td><td></td></tr>
     * <tr><td><code>{@link #AsyncImageView_placeholderDrawable com.android.messaging:placeholderDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #AsyncImageView_reveal com.android.messaging:reveal}</code></td><td></td></tr>
     * </table>
     * @see #AsyncImageView_cornerRadius
     * @see #AsyncImageView_fadeIn
     * @see #AsyncImageView_placeholderDrawable
     * @see #AsyncImageView_reveal
     */
    public static final int[] AsyncImageView={
      0x7f04006a, 0x7f040088, 0x7f0400df, 0x7f0400f0
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#cornerRadius}
     * attribute's value can be found in the {@link #AsyncImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:cornerRadius
     */
    public static final int AsyncImageView_cornerRadius=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#fadeIn}
     * attribute's value can be found in the {@link #AsyncImageView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:fadeIn
     */
    public static final int AsyncImageView_fadeIn=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#placeholderDrawable}
     * attribute's value can be found in the {@link #AsyncImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:placeholderDrawable
     */
    public static final int AsyncImageView_placeholderDrawable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#reveal}
     * attribute's value can be found in the {@link #AsyncImageView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:reveal
     */
    public static final int AsyncImageView_reveal=3;
    /**
     * Attributes that can be used with a AudioAttachmentView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AudioAttachmentView_layoutMode com.android.messaging:layoutMode}</code></td><td></td></tr>
     * </table>
     * @see #AudioAttachmentView_layoutMode
     */
    public static final int[] AudioAttachmentView={
      0x7f0400b1
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#layoutMode}
     * attribute's value can be found in the {@link #AudioAttachmentView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>compact</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>subcompact</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:layoutMode
     */
    public static final int AudioAttachmentView_layoutMode=0;
    /**
     * Attributes that can be used with a ButtonBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.android.messaging:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
      0x7f040029
    };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a Capability.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Capability_queryPatterns com.android.messaging:queryPatterns}</code></td><td>Resource reference to the string array of query patterns for a custom capability.</td></tr>
     * <tr><td><code>{@link #Capability_shortcutMatchRequired com.android.messaging:shortcutMatchRequired}</code></td><td>Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.</td></tr>
     * </table>
     * @see #Capability_queryPatterns
     * @see #Capability_shortcutMatchRequired
     */
    public static final int[] Capability={
      0x7f0400ea, 0x7f0400f8
    };
    /**
     * <p>
     * @attr description
     * Resource reference to the string array of query patterns for a custom capability.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:queryPatterns
     */
    public static final int Capability_queryPatterns=0;
    /**
     * <p>
     * @attr description
     * Indicates whether a parameter in a capability template can only contain a matched
     * shortcut id and not an arbitrary string.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:shortcutMatchRequired
     */
    public static final int Capability_shortcutMatchRequired=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.messaging:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f04002a
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.messaging:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonCompat com.android.messaging:buttonCompat}</code></td><td>Compat attr to load backported drawable types</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.android.messaging:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.android.messaging:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonCompat
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
      0x01010107, 0x7f040042, 0x7f040048, 0x7f040049
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Compat attr to load backported drawable types
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:buttonCompat
     */
    public static final int CompoundButton_buttonCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:buttonTint
     */
    public static final int CompoundButton_buttonTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=3;
    /**
     * Attributes that can be used with a ContactIconView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ContactIconView_iconSize com.android.messaging:iconSize}</code></td><td></td></tr>
     * </table>
     * @see #ContactIconView_iconSize
     */
    public static final int[] ContactIconView={
      0x7f0400a2
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#iconSize}
     * attribute's value can be found in the {@link #ContactIconView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>large</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>small</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:iconSize
     */
    public static final int ContactIconView_iconSize=0;
    /**
     * Attributes that can be used with a ConversationNameView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConversationNameView_textColor com.android.messaging:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationNameView_textSize com.android.messaging:textSize}</code></td><td></td></tr>
     * </table>
     * @see #ConversationNameView_textColor
     * @see #ConversationNameView_textSize
     */
    public static final int[] ConversationNameView={
      0x7f04011c, 0x7f040120
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#textColor}
     * attribute's value can be found in the {@link #ConversationNameView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:textColor
     */
    public static final int ConversationNameView_textColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#textSize}
     * attribute's value can be found in the {@link #ConversationNameView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:textSize
     */
    public static final int ConversationNameView_textSize=1;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.android.messaging:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.android.messaging:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f0400ad, 0x7f040106
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.android.messaging:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.android.messaging:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.android.messaging:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.android.messaging:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.android.messaging:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.android.messaging:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f0400b2, 0x7f0400b3, 0x7f0400b4, 
      0x7f0400b5, 0x7f0400b6, 0x7f0400b7
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.messaging:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.android.messaging:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.android.messaging:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.android.messaging:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.android.messaging:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.android.messaging:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.android.messaging:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.android.messaging:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.android.messaging:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
      0x7f04002d, 0x7f04002e, 0x7f04003b, 0x7f040055, 
      0x7f04007a, 0x7f04009b, 0x7f0400ff, 0x7f040122
    };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a DrawerLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerLayout_elevation com.android.messaging:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * </table>
     * @see #DrawerLayout_elevation
     */
    public static final int[] DrawerLayout={
      0x7f040086
    };
    /**
     * <p>
     * @attr description
     * The height difference between the drawer and the base surface. Only takes effect on API 21 and above
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:elevation
     */
    public static final int DrawerLayout_elevation=0;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.messaging:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.messaging:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.messaging:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.messaging:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.messaging:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.messaging:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderSystemFontFamily com.android.messaging:fontProviderSystemFontFamily}</code></td><td>Provides the system font family name to check before downloading the font.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     * @see #FontFamily_fontProviderSystemFontFamily
     */
    public static final int[] FontFamily={
      0x7f040091, 0x7f040092, 0x7f040093, 0x7f040094, 
      0x7f040095, 0x7f040096, 0x7f040097
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * <p>
     * @attr description
     * Provides the system font family name to check before downloading the font. For
     * example if the fontProviderQuery asked for "Sans Serif", it is possible to define
     * fontProviderSystemFontFamily as "sans-serif" to tell the system to use "sans-serif" font
     * family if it exists on the system.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:fontProviderSystemFontFamily
     */
    public static final int FontFamily_fontProviderSystemFontFamily=6;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.messaging:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.messaging:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.android.messaging:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.messaging:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.android.messaging:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f04008f, 0x7f040098, 0x7f040099, 
      0x7f04009a, 0x7f04013d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.messaging:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.messaging:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a Fragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Fragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #Fragment_android_name
     * @see #Fragment_android_id
     * @see #Fragment_android_tag
     */
    public static final int[] Fragment={
      0x01010003, 0x010100d0, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int Fragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Fragment_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int Fragment_android_tag=2;
    /**
     * Attributes that can be used with a FragmentContainerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #FragmentContainerView_android_name
     * @see #FragmentContainerView_android_tag
     */
    public static final int[] FragmentContainerView={
      0x01010003, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int FragmentContainerView_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int FragmentContainerView_android_tag=1;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.android.messaging:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.android.messaging:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.android.messaging:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.android.messaging:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
      0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
      0x01010128, 0x7f040072, 0x7f040074, 0x7f0400cd, 
      0x7f0400fa
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
      0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
      0x010102ac, 0x010102ad
    };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Attributes that can be used with a MaxHeightScrollView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MaxHeightScrollView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * </table>
     * @see #MaxHeightScrollView_android_maxHeight
     */
    public static final int[] MaxHeightScrollView={
      0x01010120
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #MaxHeightScrollView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int MaxHeightScrollView_android_maxHeight=0;
    /**
     * Attributes that can be used with a MenuGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
      0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
      0x010101df, 0x010101e0
    };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Attributes that can be used with a MenuItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.android.messaging:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.android.messaging:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.android.messaging:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.android.messaging:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.android.messaging:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.android.messaging:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.android.messaging:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.android.messaging:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.android.messaging:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.android.messaging:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
      0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
      0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
      0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
      0x0101026f, 0x7f04000d, 0x7f040021, 0x7f040022, 
      0x7f04002b, 0x7f040061, 0x7f0400a3, 0x7f0400a4, 
      0x7f0400d6, 0x7f0400f9, 0x7f040139
    };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.android.messaging:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.android.messaging:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
      0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
      0x0101012f, 0x01010130, 0x01010131, 0x7f0400e4, 
      0x7f040107
    };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.android.messaging:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
      0x01010176, 0x010102c9, 0x7f0400d7
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.android.messaging:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
      0x7f040105
    };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Attributes that can be used with a RecipientEditTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecipientEditTextView_avatarPosition com.android.messaging:avatarPosition}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_chipBackground com.android.messaging:chipBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_chipDelete com.android.messaging:chipDelete}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_chipFontSize com.android.messaging:chipFontSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_chipHeight com.android.messaging:chipHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_chipPadding com.android.messaging:chipPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_disableDelete com.android.messaging:disableDelete}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_imageSpanAlignment com.android.messaging:imageSpanAlignment}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_invalidChipBackground com.android.messaging:invalidChipBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_unselectedChipBackgroundColor com.android.messaging:unselectedChipBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecipientEditTextView_unselectedChipTextColor com.android.messaging:unselectedChipTextColor}</code></td><td></td></tr>
     * </table>
     * @see #RecipientEditTextView_avatarPosition
     * @see #RecipientEditTextView_chipBackground
     * @see #RecipientEditTextView_chipDelete
     * @see #RecipientEditTextView_chipFontSize
     * @see #RecipientEditTextView_chipHeight
     * @see #RecipientEditTextView_chipPadding
     * @see #RecipientEditTextView_disableDelete
     * @see #RecipientEditTextView_imageSpanAlignment
     * @see #RecipientEditTextView_invalidChipBackground
     * @see #RecipientEditTextView_unselectedChipBackgroundColor
     * @see #RecipientEditTextView_unselectedChipTextColor
     */
    public static final int[] RecipientEditTextView={
      0x7f040035, 0x7f04004c, 0x7f04004d, 0x7f04004e, 
      0x7f04004f, 0x7f040050, 0x7f040070, 0x7f0400a7, 
      0x7f0400aa, 0x7f04013e, 0x7f04013f
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#avatarPosition}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>end</td><td>0</td><td></td></tr>
     * <tr><td>start</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:avatarPosition
     */
    public static final int RecipientEditTextView_avatarPosition=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#chipBackground}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:chipBackground
     */
    public static final int RecipientEditTextView_chipBackground=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#chipDelete}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:chipDelete
     */
    public static final int RecipientEditTextView_chipDelete=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#chipFontSize}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:chipFontSize
     */
    public static final int RecipientEditTextView_chipFontSize=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#chipHeight}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:chipHeight
     */
    public static final int RecipientEditTextView_chipHeight=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#chipPadding}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:chipPadding
     */
    public static final int RecipientEditTextView_chipPadding=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#disableDelete}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:disableDelete
     */
    public static final int RecipientEditTextView_disableDelete=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#imageSpanAlignment}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>baseline</td><td>1</td><td></td></tr>
     * <tr><td>bottom</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:imageSpanAlignment
     */
    public static final int RecipientEditTextView_imageSpanAlignment=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#invalidChipBackground}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:invalidChipBackground
     */
    public static final int RecipientEditTextView_invalidChipBackground=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#unselectedChipBackgroundColor}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:unselectedChipBackgroundColor
     */
    public static final int RecipientEditTextView_unselectedChipBackgroundColor=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#unselectedChipTextColor}
     * attribute's value can be found in the {@link #RecipientEditTextView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:unselectedChipTextColor
     */
    public static final int RecipientEditTextView_unselectedChipTextColor=10;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.android.messaging:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.android.messaging:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
      0x7f0400d8, 0x7f0400db
    };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_clipToPadding android:clipToPadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.android.messaging:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.android.messaging:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.android.messaging:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.android.messaging:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.android.messaging:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.android.messaging:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.android.messaging:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.android.messaging:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.android.messaging:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_clipToPadding
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
      0x010100c4, 0x010100eb, 0x010100f1, 0x7f040089, 
      0x7f04008a, 0x7f04008b, 0x7f04008c, 0x7f04008d, 
      0x7f0400b0, 0x7f0400f1, 0x7f0400fe, 0x7f040104
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#clipToPadding}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:clipToPadding
     */
    public static final int RecyclerView_android_clipToPadding=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=7;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must ext androidx.recyclerview.widget.RecyclerViewView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package naandroidx.appcompat.widgetdget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:layoutManager
     */
    public static final int RecyclerView_layoutManager=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.messaging:spanCount
     */
    public static final int RecyclerView_spanCount=10;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=11;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.android.messaging:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.android.messaging:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.android.messaging:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.android.messaging:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.android.messaging:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.android.messaging:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.android.messaging:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.android.messaging:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.android.messaging:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.android.messaging:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.android.messaging:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.android.messaging:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.android.messaging:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
      0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
      0x7f040051, 0x7f040060, 0x7f04006c, 0x7f04009c, 
      0x7f0400a5, 0x7f0400af, 0x7f0400e8, 0x7f0400e9, 
      0x7f0400f2, 0x7f0400f3, 0x7f040108, 0x7f04010d, 
      0x7f040141
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SoundLevels.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SoundLevels_maxLevelRadius com.android.messaging:maxLevelRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #SoundLevels_minLevelRadius com.android.messaging:minLevelRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #SoundLevels_primaryColor com.android.messaging:primaryColor}</code></td><td></td></tr>
     * </table>
     * @see #SoundLevels_maxLevelRadius
     * @see #SoundLevels_minLevelRadius
     * @see #SoundLevels_primaryColor
     */
    public static final int[] SoundLevels={
      0x7f0400cc, 0x7f0400cf, 0x7f0400e5
    };
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#maxLevelRadius}
     * attribute's value can be found in the {@link #SoundLevels} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:maxLevelRadius
     */
    public static final int SoundLevels_maxLevelRadius=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#minLevelRadius}
     * attribute's value can be found in the {@link #SoundLevels} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:minLevelRadius
     */
    public static final int SoundLevels_minLevelRadius=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#primaryColor}
     * attribute's value can be found in the {@link #SoundLevels} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:primaryColor
     */
    public static final int SoundLevels_primaryColor=2;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.android.messaging:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
      0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
      0x7f0400e2
    };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a StateListDrawable.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawable_android_dither android:dither}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_variablePadding android:variablePadding}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_constantSize android:constantSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_enterFadeDuration android:enterFadeDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #StateListDrawable_android_exitFadeDuration android:exitFadeDuration}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawable_android_dither
     * @see #StateListDrawable_android_visible
     * @see #StateListDrawable_android_variablePadding
     * @see #StateListDrawable_android_constantSize
     * @see #StateListDrawable_android_enterFadeDuration
     * @see #StateListDrawable_android_exitFadeDuration
     */
    public static final int[] StateListDrawable={
      0x0101011c, 0x01010194, 0x01010195, 0x01010196, 
      0x0101030c, 0x0101030d
    };
    /**
     * <p>
     * @attr description
     * Enables or disables dithering of the bitmap if the bitmap does not have the
     * same pixel configuration as the screen (for instance: a ARGB 8888 bitmap with
     * an RGB 565 screen).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:dither
     */
    public static final int StateListDrawable_android_dither=0;
    /**
     * <p>
     * @attr description
     * Indicates whether the drawable should be initially visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int StateListDrawable_android_visible=1;
    /**
     * <p>
     * @attr description
     * If true, allows the drawable's padding to change based on the
     * current state that is selected.  If false, the padding will
     * stay the same (based on the maximum padding of all the states).
     * Enabling this feature requires that the owner of the drawable
     * deal with performing layout when the state changes, which is
     * often not supported.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:variablePadding
     */
    public static final int StateListDrawable_android_variablePadding=2;
    /**
     * <p>
     * @attr description
     * If true, the drawable's reported internal size will remain
     * constant as the state changes; the size is the maximum of all
     * of the states.  If false, the size will vary based on the
     * current state.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:constantSize
     */
    public static final int StateListDrawable_android_constantSize=3;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade in a new state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:enterFadeDuration
     */
    public static final int StateListDrawable_android_enterFadeDuration=4;
    /**
     * <p>
     * @attr description
     * Amount of time (in milliseconds) to fade out an old state drawable.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:exitFadeDuration
     */
    public static final int StateListDrawable_android_exitFadeDuration=5;
    /**
     * Attributes that can be used with a StateListDrawableItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StateListDrawableItem_android_drawable android:drawable}</code></td><td></td></tr>
     * </table>
     * @see #StateListDrawableItem_android_drawable
     */
    public static final int[] StateListDrawableItem={
      0x01010199
    };
    /**
     * <p>
     * @attr description
     * Reference to a drawable resource to use for the state. If not
     * given, the drawable must be defined by the first child tag.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:drawable
     */
    public static final int StateListDrawableItem_android_drawable=0;
    /**
     * Attributes that can be used with a SwipeRefreshLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor com.android.messaging:swipeRefreshLayoutProgressSpinnerBackgroundColor}</code></td><td>Background color for SwipeRefreshLayout progress spinner.</td></tr>
     * </table>
     * @see #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int[] SwipeRefreshLayout={
      0x7f04010e
    };
    /**
     * <p>
     * @attr description
     * Background color for SwipeRefreshLayout progress spinner.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor=0;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.android.messaging:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.android.messaging:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.android.messaging:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.android.messaging:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.android.messaging:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.android.messaging:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.android.messaging:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.android.messaging:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.android.messaging:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.android.messaging:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.android.messaging:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
      0x01010124, 0x01010125, 0x01010142, 0x7f0400fb, 
      0x7f040102, 0x7f04010f, 0x7f040110, 0x7f040112, 
      0x7f040123, 0x7f040124, 0x7f040125, 0x7f04013a, 
      0x7f04013b, 0x7f04013c
    };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textFontWeight android:textFontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.android.messaging:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_fontVariationSettings com.android.messaging:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.android.messaging:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textLocale com.android.messaging:textLocale}</code></td><td>Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN".</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_android_textFontWeight
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_fontVariationSettings
     * @see #TextAppearance_textAllCaps
     * @see #TextAppearance_textLocale
     */
    public static final int[] TextAppearance={
      0x01010095, 0x01010096, 0x01010097, 0x01010098, 
      0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
      0x01010163, 0x01010164, 0x010103ac, 0x01010585, 
      0x7f040090, 0x7f040099, 0x7f040113, 0x7f04011f
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textFontWeight}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:textFontWeight
     */
    public static final int TextAppearance_android_textFontWeight=11;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:fontFamily
     */
    public static final int TextAppearance_fontFamily=12;
    /**
     * <p>
     * @attr description
     * OpenType font variation settings, available aftear api 26.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:fontVariationSettings
     */
    public static final int TextAppearance_fontVariationSettings=13;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=14;
    /**
     * <p>
     * @attr description
     * Set the textLocale by a comma-separated language tag string,
     * for example "ja-JP,zh-CN". This attribute only takes effect on API 21 and above.
     * Before API 24, only the first language tag is used. Starting from API 24,
     * the string will be converted into a {@link android.os.LocaleList} and then used by
     * {@link android.widget.TextView}
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:textLocale
     */
    public static final int TextAppearance_textLocale=15;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.android.messaging:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.android.messaging:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.android.messaging:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.android.messaging:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.android.messaging:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.android.messaging:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.android.messaging:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.android.messaging:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.android.messaging:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.android.messaging:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.android.messaging:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.android.messaging:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_menu com.android.messaging:menu}</code></td><td>Menu resource to inflate to be shown in the toolbar</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.android.messaging:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.android.messaging:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.android.messaging:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.android.messaging:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.android.messaging:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.android.messaging:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.android.messaging:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.android.messaging:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.android.messaging:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.android.messaging:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.android.messaging:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.android.messaging:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.android.messaging:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.android.messaging:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.android.messaging:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_menu
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
      0x010100af, 0x01010140, 0x7f040043, 0x7f040053, 
      0x7f040054, 0x7f040062, 0x7f040063, 0x7f040064, 
      0x7f040065, 0x7f040066, 0x7f040067, 0x7f0400c8, 
      0x7f0400c9, 0x7f0400cb, 0x7f0400ce, 0x7f0400d2, 
      0x7f0400d3, 0x7f0400e2, 0x7f040109, 0x7f04010a, 
      0x7f04010b, 0x7f04012b, 0x7f04012c, 0x7f04012d, 
      0x7f04012e, 0x7f04012f, 0x7f040130, 0x7f040131, 
      0x7f040132, 0x7f040133
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Menu resource to inflate to be shown in the toolbar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:menu
     */
    public static final int Toolbar_menu=14;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=15;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:navigationIcon
     */
    public static final int Toolbar_navigationIcon=16;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:popupTheme
     */
    public static final int Toolbar_popupTheme=17;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:subtitle
     */
    public static final int Toolbar_subtitle=18;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=19;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=20;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.messaging:title
     */
    public static final int Toolbar_title=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:titleMargin
     */
    public static final int Toolbar_titleMargin=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=25;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=26;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=28;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:titleTextColor
     */
    public static final int Toolbar_titleTextColor=29;
    /**
     * Attributes that can be used with a VideoThumbnailView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #VideoThumbnailView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #VideoThumbnailView_allowCrop com.android.messaging:allowCrop}</code></td><td></td></tr>
     * <tr><td><code>{@link #VideoThumbnailView_loop com.android.messaging:loop}</code></td><td></td></tr>
     * <tr><td><code>{@link #VideoThumbnailView_mode com.android.messaging:mode}</code></td><td></td></tr>
     * <tr><td><code>{@link #VideoThumbnailView_playOnLoad com.android.messaging:playOnLoad}</code></td><td></td></tr>
     * </table>
     * @see #VideoThumbnailView_android_maxHeight
     * @see #VideoThumbnailView_allowCrop
     * @see #VideoThumbnailView_loop
     * @see #VideoThumbnailView_mode
     * @see #VideoThumbnailView_playOnLoad
     */
    public static final int[] VideoThumbnailView={
      0x01010120, 0x7f040028, 0x7f0400ca, 0x7f0400d0, 
      0x7f0400e0
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #VideoThumbnailView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int VideoThumbnailView_android_maxHeight=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#allowCrop}
     * attribute's value can be found in the {@link #VideoThumbnailView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:allowCrop
     */
    public static final int VideoThumbnailView_allowCrop=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#loop}
     * attribute's value can be found in the {@link #VideoThumbnailView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:loop
     */
    public static final int VideoThumbnailView_loop=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#mode}
     * attribute's value can be found in the {@link #VideoThumbnailView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>imageThumbnail</td><td>0</td><td></td></tr>
     * <tr><td>playableVideo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.messaging:mode
     */
    public static final int VideoThumbnailView_mode=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.messaging.R.attr#playOnLoad}
     * attribute's value can be found in the {@link #VideoThumbnailView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.messaging:playOnLoad
     */
    public static final int VideoThumbnailView_playOnLoad=4;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.android.messaging:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.android.messaging:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.android.messaging:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
      0x01010000, 0x010100da, 0x7f0400d9, 0x7f0400da, 
      0x7f040121
    };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.messaging:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.messaging:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.android.messaging:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.android.messaging:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
      0x010100d4, 0x7f040039, 0x7f04003a
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.messaging:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.messaging:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
      0x010100d0, 0x010100f2, 0x010100f3
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
  }
  public static final class transition {
    public static final int explode=0x7f150000;
    public static final int fade=0x7f150001;
  }
  public static final class xml {
    public static final int apn_editor=0x7f160000;
    public static final int apn_settings=0x7f160001;
    public static final int apns=0x7f160002;
    public static final int mms_config=0x7f160003;
    public static final int preferences_application=0x7f160004;
    public static final int preferences_per_subscription=0x7f160005;
    public static final int widget_conversation=0x7f160006;
    public static final int widget_conversation_list=0x7f160007;
  }
}