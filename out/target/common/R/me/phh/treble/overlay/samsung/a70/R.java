/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package me.phh.treble.overlay.samsung.a70;

public final class R {
  public static final class array {
    public static final int config_autoBrightnessDisplayValuesNits=0x7f010000;
    public static final int config_autoBrightnessLevels=0x7f010001;
    public static final int config_ephemeralResolverPackage=0x7f010002;
    public static final int config_mobile_tcp_buffers=0x7f010003;
    public static final int config_screenBrightnessBacklight=0x7f010004;
    public static final int config_screenBrightnessNits=0x7f010005;
    public static final int config_tether_bluetooth_regexs=0x7f010006;
    public static final int config_tether_upstream_types=0x7f010007;
    public static final int config_tether_usb_regexs=0x7f010008;
    public static final int config_tether_wifi_regexs=0x7f010009;
    public static final int networkAttributes=0x7f01000a;
    public static final int radioAttributes=0x7f01000b;
  }
  public static final class bool {
    public static final int config_bluetooth_hfp_inband_ringing_support=0x7f020000;
    public static final int config_bluetooth_le_peripheral_mode_supported=0x7f020001;
    public static final int config_carrier_volte_available=0x7f020002;
    public static final int config_device_volte_available=0x7f020003;
    public static final int config_dozeAfterScreenOff=0x7f020004;
    public static final int config_dozeAlwaysOnDisplayAvailable=0x7f020005;
    public static final int config_dozePulsePickup=0x7f020006;
    public static final int config_enableBurnInProtection=0x7f020007;
    public static final int config_hotswapCapable=0x7f020008;
    public static final int config_powerDecoupleInteractiveModeFromDisplay=0x7f020009;
    public static final int config_showNavigationBar=0x7f02000a;
    public static final int config_speed_up_audio_on_mt_calls=0x7f02000b;
    public static final int config_supportAudioSourceUnprocessed=0x7f02000c;
    public static final int config_switch_phone_on_voice_reg_state_change=0x7f02000d;
    public static final int config_useDevInputEventForAudioJack=0x7f02000e;
    public static final int config_wifiDisplaySupportsProtectedBuffers=0x7f02000f;
    public static final int config_wifi_background_scan_support=0x7f020010;
    public static final int config_wifi_batched_scan_supported=0x7f020011;
    public static final int config_wifi_connected_mac_randomization_supported=0x7f020012;
    public static final int config_wifi_dual_band_support=0x7f020013;
    public static final int config_wifi_fast_bss_transition_enabled=0x7f020014;
    public static final int config_wifi_p2p_mac_randomization_supported=0x7f020015;
    public static final int skip_restoring_network_selection=0x7f020016;
  }
  public static final class dimen {
    /**
     * Radius of the software rounded corners at the bottom of the display in its natural
     * orientation. If zero, the value of rounded_corner_radius is used.
     */
    public static final int rounded_corner_radius_bottom=0x7f030000;
    /**
     * Radius of the software rounded corners at the top of the display in its natural
     * orientation. If zero, the value of rounded_corner_radius is used.
     */
    public static final int rounded_corner_radius_top=0x7f030001;
    /**
     * Height of the status bar
     */
    public static final int status_bar_height=0x7f030002;
    /**
     * Height of the status bar in landscape
     */
    public static final int status_bar_height_landscape=0x7f030003;
    /**
     * Height of the status bar in portrait
     */
    public static final int status_bar_height_portrait=0x7f030004;
  }
  public static final class integer {
    public static final int config_lightSensorWarmupTime=0x7f040000;
    /**
     * Screen brightness used to dim the screen when the user activity
     * timeout expires.  May be less than the minimum allowed brightness setting
     * that can be set by the user.
     */
    public static final int config_screenBrightnessDim=0x7f040001;
    public static final int config_screenBrightnessDoze=0x7f040002;
    /**
     * Default screen brightness setting.
     * Must be in the range specified by minimum and maximum.
     */
    public static final int config_screenBrightnessSettingDefault=0x7f040003;
    /**
     * Minimum screen brightness setting allowed by the power manager.
     * The user is forbidden from setting the brightness below this level.
     */
    public static final int config_screenBrightnessSettingMinimum=0x7f040004;
  }
  public static final class string {
    /**
     * Display cutout configuration
     */
    public static final int config_mainBuiltInDisplayCutout=0x7f050000;
  }
  public static final class xml {
    public static final int power_profile=0x7f060000;
  }
}