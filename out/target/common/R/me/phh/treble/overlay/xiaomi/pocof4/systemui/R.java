/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package me.phh.treble.overlay.xiaomi.pocof4.systemui;

public final class R {
  public static final class bool {
    /**
     * Flag to turn on the rendering of the above path or not
     */
    public static final int config_enableDisplayCutoutProtection=0x7f010000;
    /**
     * Doze: check proximity sensor before pulsing?
     */
    public static final int doze_proximity_check_before_pulse=0x7f010001;
  }
  public static final class dimen {
    /**
     * Location on the screen of the center of the fingerprint sensor. For devices with under
     * display fingerprint sensors, this directly corresponds to the fingerprint sensor's location.
     * For devices with sensors on the back of the device, this corresponds to the location on the
     * screen directly in front of the sensor.
     * By default, this is set to @null to use the horizontal center of the screen.
     */
    public static final int physical_fingerprint_sensor_center_screen_location_x=0x7f020000;
    /**
     * Location on the screen of the center of the fingerprint sensor. For devices with under
     * display fingerprint sensors, this directly corresponds to the fingerprint sensor's location.
     * For devices with sensors on the back of the device, this corresponds to the location on the
     * screen directly in front of the sensor.
     */
    public static final int physical_fingerprint_sensor_center_screen_location_y=0x7f020001;
    /**
     * Location on the screen of the center of the physical power button. This is a reasonable
     * default that should be overridden by device-specific overlays.
     */
    public static final int physical_power_button_center_screen_location_y=0x7f020002;
    /**
     * for 20dp of padding at 3.5px/dp at default density
     */
    public static final int rounded_corner_content_padding=0x7f020003;
  }
  public static final class drawable {
    public static final int rounded=0x7f030000;
  }
  public static final class integer {
    /**
     * The battery current divider, some kernel report current value in mA other in µA.
     * Leave 1 if you have mA, put 1000 if you have µA
     */
    public static final int config_battCurrentDivider=0x7f040000;
    /**
     * If not zero, limits the internal screen recorder's framerate to the set value.
     */
    public static final int config_screenRecorderMaxFramerate=0x7f040001;
  }
  public static final class string {
    /**
     * A path similar to frameworks/base/core/res/res/values/config.xml
     * config_mainBuiltInDisplayCutout that describes a path larger than the exact path of a display
     * cutout. If present as well as config_enableDisplayCutoutProtection is set to true, then
     * SystemUI will draw this "protection path" instead of the display cutout path that is normally
     * used for anti-aliasing.
     * This path will only be drawn when the front-facing camera turns on, otherwise the main
     * DisplayCutout path will be rendered
     */
    public static final int config_frontBuiltInDisplayCutoutProtection=0x7f050000;
    /**
     * Default rounded corner curve (a Bezier). Must match (the curved path in) rounded.xml.
     * Note that while rounded.xml includes the entire path (including the horizontal and vertical
     * corner edges), this pulls out just the curve.
     */
    public static final int config_rounded_mask=0x7f050001;
  }
}