# Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
type vendor_rfs_access, domain;
type vendor_rfs_access_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(vendor_rfs_access)

#For tftp server
allow vendor_rfs_access self:capability { chown setgid setpcap setuid net_bind_service };

wakelock_use(vendor_rfs_access)

type_transition vendor_rfs_access mnt_vendor_file:{ dir file } vendor_persist_rfs_file;
type_transition vendor_rfs_access mnt_vendor_file:dir vendor_persist_rfs_shared_hlos_file "hlos_rfs";

r_dir_file(vendor_rfs_access, firmware_file);

allow vendor_rfs_access vendor_firmware_data_file:dir r_dir_perms;
allow vendor_rfs_access vendor_firmware_data_file:file r_file_perms;

allow vendor_rfs_access mnt_vendor_file:dir create_dir_perms;

allow vendor_rfs_access vendor_persist_rfs_file:dir search;
allow vendor_rfs_access vendor_persist_rfs_file:dir create_dir_perms;
allow vendor_rfs_access vendor_persist_rfs_file:file create_file_perms;
allow vendor_rfs_access vendor_persist_rfs_shared_hlos_file:dir create_dir_perms;
allow vendor_rfs_access vendor_persist_rfs_shared_hlos_file:file create_file_perms;

#For QMI sockets and IPCR Sockets
allow vendor_rfs_access self:{ socket qipcrtr_socket } create_socket_perms_no_ioctl;

allow vendor_rfs_access vendor_tombstone_data_file:dir create_dir_perms;
allow vendor_rfs_access vendor_tombstone_data_file:file create_file_perms;

#For access to the kmsg device
allow vendor_rfs_access kmsg_device:chr_file w_file_perms;

#For pddump write and create directory
allow vendor_rfs_access vendor_pddump_data_file:dir create_dir_perms;
allow vendor_rfs_access vendor_pddump_data_file:file create_file_perms;
