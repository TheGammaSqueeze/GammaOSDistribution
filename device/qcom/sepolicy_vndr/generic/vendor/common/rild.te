# Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
binder_call(rild, vendor_per_mgr)
binder_call(rild, vendor_qtidataservices_app)

vndbinder_use(rild)

allow rild vendor_netmgrd_socket:dir search;
unix_socket_connect(rild, vendor_netmgrd, vendor_netmgrd)

allow rild vendor_file:file { execute_no_trans lock ioctl };
allow rild self:tipc_socket { create_socket_perms_no_ioctl };
allow rild vendor_per_mgr_service:service_manager find;

allow rild self:socket ioctl;
allowxperm rild self:socket ioctl msm_sock_ipc_ioctls;
allow rild vendor_time_daemon:unix_stream_socket connectto;

allow rild vendor_radio_vendor_data_file:dir rw_dir_perms;
allow rild vendor_radio_vendor_data_file:file create_file_perms;

userdebug_or_eng(`
  allow rild vendor_diag_device:chr_file rw_file_perms;
  get_prop(rild, vendor_pd_locater_dbg_prop)
')

hal_server_domain(rild, hal_secure_element)
add_hwservice(rild, vendor_hal_iwlan_hwservice)

add_hwservice(rild, vendor_hal_dataconnection_hwservice)
hal_server_domain(rild, vendor_hal_dataconnection_qti)

get_prop(rild, radio_control_prop)
get_prop(rild, vendor_dataqdp_prop)

allow rild vendor_qmuxd_socket:dir w_dir_perms;
allow rild vendor_qmuxd_socket:sock_file create_file_perms;

allow rild vendor_rild_socket:dir w_dir_perms;
allow rild vendor_rild_socket:sock_file create_file_perms;

r_dir_file(rild, vendor_mbn_data_file)
allow rild self:qipcrtr_socket create_socket_perms_no_ioctl;

# Fallback for seccomp
crash_dump_fallback(rild)
