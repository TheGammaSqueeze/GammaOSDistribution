# Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
type vendor_wcnss_service, domain;
type vendor_wcnss_service_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(vendor_wcnss_service)
net_domain(vendor_wcnss_service)

vndbinder_use(vendor_wcnss_service)
binder_call(vendor_wcnss_service, vendor_per_mgr)

allow vendor_wcnss_service vendor_per_mgr_service:service_manager find;

allow vendor_wcnss_service vendor_shell_exec:file rx_file_perms;
allow vendor_wcnss_service vendor_toolbox_exec:file rx_file_perms;

allow vendor_wcnss_service vendor_wifi_vendor_data_file:dir create_dir_perms;
allow vendor_wcnss_service vendor_wifi_vendor_data_file:file create_file_perms;

allow vendor_wcnss_service mnt_vendor_file:dir search;
allow vendor_wcnss_service vendor_persist_wcnss_service_file:dir rw_dir_perms;
allow vendor_wcnss_service vendor_persist_wcnss_service_file:file create_file_perms;

allow vendor_wcnss_service proc_net:file rw_file_perms;

allow vendor_wcnss_service self:{ socket qipcrtr_socket }  create_socket_perms;
allowxperm vendor_wcnss_service self:{ socket qipcrtr_socket }  ioctl msm_sock_ipc_ioctls;
allowxperm vendor_wcnss_service self:udp_socket ioctl { SIOCIWFIRSTPRIV_05 SIOCSIFFLAGS };

allow vendor_wcnss_service self:netlink_generic_socket create_socket_perms_no_ioctl;
allow vendor_wcnss_service self:netlink_socket create_socket_perms_no_ioctl;

allow vendor_wcnss_service firmware_file:dir r_dir_perms;
allow vendor_wcnss_service firmware_file:file r_file_perms;

allow vendor_wcnss_service sysfs_net:dir search;
allow vendor_wcnss_service sysfs_net:file { write getattr open };

allow vendor_wcnss_service wpa_data_file:dir create_dir_perms;
allow vendor_wcnss_service wpa_data_file:file create_file_perms;

allow vendor_wcnss_service proc_net:file getattr;

allow vendor_wcnss_service vendor_sysfs_data:file r_file_perms;
# pkt logging for cnss_diag
userdebug_or_eng(`
  r_dir_file(vendor_wcnss_service, vendor_proc_wifi_dbg)
  r_dir_file(vendor_wcnss_service, vendor_sysfs_diag)
')

userdebug_or_eng(`
allow vendor_wcnss_service vendor_wifi_vendor_log_data_file:dir create_dir_perms;
allow vendor_wcnss_service vendor_wifi_vendor_log_data_file:file create_file_perms;
#This allows system apis call during debug
allow vendor_wcnss_service rootfs:dir read;
# This is needed for ptt_socket_app to write logs file collected to sdcard
r_dir_file(vendor_wcnss_service, storage_file)
r_dir_file(vendor_wcnss_service, mnt_user_file)
')

