# Copyright (c) 2021, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#Changes from Qualcomm Innovation Center are provided under the following license:
#
#Copyright (c) 2022 Qualcomm Innovation Center, Inc. All rights reserved.
#
#Redistribution and use in source and binary forms, with or without
#modification, are permitted (subject to the limitations in the
#disclaimer below) provided that the following conditions are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#
#    * Neither the name of Qualcomm Innovation Center, Inc. nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE
#GRANTED BY THIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
#HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
#WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
#ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
#GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
#IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
#IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE

type vendor_qvrd_vndr, domain, mlstrustedsubject;
type vendor_qvrd_vndr_exec, vendor_file_type, exec_type, file_type;
typeattribute vendor_qvrd_vndr hal_camera_client;

init_daemon_domain(vendor_qvrd_vndr)

hal_server_domain(vendor_qvrd_vndr, vendor_hal_qvrservice_qti)
binder_call(vendor_hal_qvrservice_qti_client, vendor_hal_qvrservice_qti_server)
binder_call(vendor_hal_qvrservice_qti_server, vendor_hal_qvrservice_qti_client)

allow vendor_hal_qvrservice_qti_client vendor_hal_qvrd_service:service_manager find;
add_service(vendor_hal_qvrservice_qti_server, vendor_hal_qvrd_service)

allow vendor_qvrd_vndr vendor_hal_qvrservice_qti_socket_client:unix_stream_socket { getopt read setopt shutdown write };
allow vendor_hal_qvrservice_qti_socket_fd_use_client vendor_qvrd_vndr: fd use;

binder_use(vendor_qvrd_vndr);
allow vendor_qvrd_vndr vendor_hal_qvrservice_qti_socket_fd_use_client:process setsched;

#allow qvrd_vndr to call sensor native service
binder_call(vendor_qvrd_vndr, system_server);

#
# General
#


# Allow interracting with qvrd_vndr directory
allow vendor_qvrd_vndr vendor_qvrd_vndr_data_file:dir create_dir_perms;
allow vendor_qvrd_vndr vendor_qvrd_vndr_data_file:file create_file_perms;

# Allow access to our socket
allow vendor_qvrd_vndr vendor_qvrd_vndr_socket:sock_file rw_file_perms;

#
# Sensors
#

# Allow access to sensor1 API
allow vendor_qvrd_vndr self:socket create_socket_perms_no_ioctl;

# Allow access to ADSP & SLPI
allow vendor_qvrd_vndr { ion_device vendor_qdsp_device }:chr_file r_file_perms;

#
# Display
#

# Allow access to /dev/graphics/fb0 for configuring vsync interrupts
allow vendor_qvrd_vndr graphics_device:dir r_dir_perms;
allow vendor_qvrd_vndr graphics_device:chr_file rw_file_perms;

# Allow access to /sys/devices/virtual/graphics/fb* for lineptr interrupts
allow vendor_qvrd_vndr vendor_sysfs_graphics:file rw_file_perms;

#
# Graphics
#

#Allow hal graphics mapper permissions
hal_client_domain(vendor_qvrd_vndr, hal_graphics_composer);

#Allow hal graphics allocator permissions
hal_client_domain(vendor_qvrd_vndr, hal_graphics_allocator);

#
# Scheduler
#

allow vendor_qvrd_vndr self:capability { sys_nice };
userdebug_or_eng(`
  allow vendor_qvrd_vndr su:process setsched;
')
allow vendor_qvrd_vndr appdomain:process setsched;

userdebug_or_eng(` allow vendor_qvrd_vndr vendor_diag_device:chr_file rw_file_perms');
r_dir_file(vendor_qvrd_vndr, vendor_sysfs_kgsl)

#
# Camera
#


# Allow access to camera HAL and UVC nodes
allow vendor_qvrd_vndr device:dir r_dir_perms;
allow vendor_qvrd_vndr { gpu_device video_device sensors_device }:chr_file r_file_perms;


#
# Perfd
#

hal_client_domain(vendor_qvrd_vndr, vendor_hal_perf)

allow vendor_qvrd_vndr fwk_sensor_hwservice:hwservice_manager find;
hal_client_domain(vendor_qvrd_vndr, hal_sensors)

# Allow access to qvr_external_sensor sysfs nodes for external viewers
allow vendor_qvrd_vndr vendor_sysfs_qvr_external_sensor:dir r_dir_perms;
allow vendor_qvrd_vndr vendor_sysfs_qvr_external_sensor:file rw_file_perms;

# Allow access to qvr_external_sensor device nodes for external viewers
allow vendor_qvrd_vndr vendor_qvr_external_sensor_device:chr_file rw_file_perms;

# qvr properties
get_prop(vendor_qvrd_vndr, vendor_qvr_prop)
get_prop(vendor_qvrd_vndr, vendor_sxr_prop)
get_prop(vendor_qvrd_vndr, vendor_qvrd_prop)
get_prop(vendor_qvrd_vndr, vendor_qvr_persist_prop)
get_prop(vendor_qvrd_vndr, vendor_qvrd_persist_prop)
allow vendor_qvrd_vndr video_device:chr_file w_file_perms;

#allow qvrd_vndr to access hid event
allow vendor_qvrd_vndr vendor_sysfs_usb_node:dir r_dir_perms;
allow vendor_qvrd_vndr vendor_sysfs_usb_node:file rw_file_perms;

#allow qvrd_vndr to access /dev/hidraw*
allow vendor_qvrd_vndr vendor_qvr_hidraw_device:chr_file rw_file_perms;

#allow qvrd to access /dev/bus/usb
allow vendor_qvrd_vndr usb_device:dir r_dir_perms;
allow vendor_qvrd_vndr usb_device:chr_file rw_file_perms;

hal_client_domain(vendor_qvrd_vndr, hal_thermal);

crash_dump_fallback(vendor_qvrd_vndr);
get_prop(vendor_qvrd_vndr, vendor_adsprpc_prop)
get_prop(vendor_qvrd_vndr, vendor_mpctl_prop)
allow vendor_qvrd_vndr proc_uptime:file r_file_perms;
unix_socket_connect(vendor_qvrd_vndr, logdr, logd)

#suppressing the error messages
dontaudit vendor_qvrd_vndr vendor_xdsp_device:chr_file r_file_perms;

# Allow qvrd_vndr to access to battery supply API for DCS
r_dir_file(vendor_qvrd_vndr, vendor_sysfs_battery_supply);
