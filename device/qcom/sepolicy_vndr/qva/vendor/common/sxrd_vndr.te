# Copyright (c) 2021, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type vendor_sxrd_vndr, domain;
typeattribute vendor_sxrd_vndr vendor_sys_sxrauxservice_qti_socket_client;
type vendor_sxrd_vndr_exec, vendor_file_type, exec_type, file_type;

init_daemon_domain(vendor_sxrd_vndr)

hal_server_domain_bypass(vendor_sxrd_vndr, vendor_hal_sxrservice_qti)
binder_call(vendor_hal_sxrservice_qti_client, vendor_hal_sxrservice_qti_server)
binder_call(vendor_hal_sxrservice_qti_server, vendor_hal_sxrservice_qti_client)

allow vendor_hal_sxrservice_qti_client vendor_hal_sxrd_service:service_manager find;
allow vendor_sxrd_vndr vendor_hal_sxrd_service:service_manager find;
add_service(vendor_hal_sxrservice_qti_server, vendor_hal_sxrd_service)

allow vendor_sxrd_vndr vendor_hal_sxrservice_qti_socket_client:unix_stream_socket { getopt read setopt shutdown write };
allow vendor_hal_sxrservice_qti_socket_fd_use_client vendor_sxrd_vndr: fd use;

binder_use(vendor_sxrd_vndr);
# Allow access to our socket
allow vendor_sxrd_vndr vendor_sxrd_vndr_socket:sock_file rw_file_perms;

# Allow interracting with vendor_sxrd_vndr directory
allow vendor_sxrd_vndr vendor_sxrd_vndr_data_file:dir create_dir_perms;
allow vendor_sxrd_vndr vendor_sxrd_vndr_data_file:file create_file_perms;

#video device
allow vendor_sxrd_vndr video_device:chr_file rw_file_perms;

#Access sxr properties
get_prop(vendor_sxrd_vndr, vendor_sxr_prop)

#Allow hal graphics allocator permissions
hal_client_domain(vendor_sxrd_vndr, hal_graphics_allocator);

#access to usb device
allow vendor_sxrd_vndr usb_device:chr_file rw_file_perms;
allow vendor_sxrd_vndr usb_device:dir { open read search watch };
allow vendor_sxrd_vndr device:dir { read watch };

#Allow access to PCM sound card
allow vendor_sxrd_vndr audio_device:chr_file rw_file_perms;
allow vendor_sxrd_vndr audio_device:dir r_dir_perms;

# Add rule to access /proc/asound/pcm file
r_dir_file(vendor_sxrd_vndr, proc_asound);

#Allow access to ion device
allow vendor_sxrd_vndr ion_device:chr_file { open read };

#add sxrd to access tombstoned
userdebug_or_eng(`
crash_dump_fallback(vendor_sxrd_vndr);
')
