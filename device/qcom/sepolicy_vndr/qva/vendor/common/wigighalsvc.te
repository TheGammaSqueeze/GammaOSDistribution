# Copyright (c) 2017,2019, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type vendor_wigighalsvc, domain;
type vendor_wigighalsvc_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(vendor_wigighalsvc)
hal_server_domain(vendor_wigighalsvc, vendor_hal_wigig)

# allows calls between client and server and vice-versa
binder_call(vendor_hal_wigig_client, vendor_hal_wigig_server)
binder_call(vendor_hal_wigig_server, vendor_hal_wigig_client)

# register hal service, allow hal clients to find the service
hal_attribute_hwservice(vendor_hal_wigig, vendor_hal_wigig_hwservice)

# allow start/stop services via ctl.start and ctl.stop
set_prop(vendor_hal_wigig, vendor_ctl_vendor_wigigsvc_prop)

# access wigig properties, for loading wil6210 module via init
set_prop(vendor_hal_wigig, vendor_wigig_prop);

# access wifi vendor data files
r_dir_file(vendor_hal_wigig, vendor_wifi_vendor_data_file)
allow vendor_hal_wigig vendor_wifi_vendor_data_file:dir rw_dir_perms;
allow vendor_hal_wigig vendor_wifi_vendor_data_file:file create_file_perms;

# dynamically create hostapd configuration file
allow vendor_hal_wigig hostapd_data_file:dir rw_dir_perms;
allow vendor_hal_wigig hostapd_data_file:file create_file_perms;

# connect to supplicant by socket
allow vendor_hal_wigig { hal_wifi_supplicant hal_wifi_hostapd_default }:unix_dgram_socket sendto;
allow vendor_hal_wigig vendor_wifi_vendor_wpa_socket:dir rw_dir_perms;
allow vendor_hal_wigig vendor_wifi_vendor_wpa_socket:sock_file create_file_perms;
allow vendor_hal_wigig vendor_wigig_vendor_wpa_socket:sock_file rw_file_perms;

# connect to wigig_hostapd by socket
allow vendor_hal_wigig vendor_wigig_hostapd_socket:dir rw_dir_perms;
allow vendor_hal_wigig vendor_wigig_hostapd_socket:sock_file create_file_perms;

# check if wil6210 module is loaded
allow vendor_hal_wigig proc_modules:file r_file_perms;
