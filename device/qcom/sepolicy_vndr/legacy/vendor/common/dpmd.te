# Copyright (c) 2017, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#Add netutils support to install iptables
use_netutils(vendor_dpmd)

get_prop(vendor_dpmd, vendor_persist_dpm_prop)

allow vendor_dpmd sysfs_wake_lock:file rw_file_perms;

allow vendor_dpmd sysfs_data:dir r_dir_perms;

allow vendor_dpmd sysfs_data:file r_file_perms;


#socket, self
allow vendor_dpmd smem_log_device:chr_file rw_file_perms;

#Allow vendor_dpmd to acquire lock for iptables
allow vendor_dpmd system_file:file lock;

#Allow vendor_dpmd to connect to hal_dpmQMiMgr
allow vendor_dpmd hal_dpmqmi_hwservice:hwservice_manager find;
get_prop(vendor_dpmd, hwservicemanager_prop)
binder_call(vendor_dpmd,hal_dpmQmiMgr)
hwbinder_use(vendor_dpmd)

#diag
userdebug_or_eng(`
    diag_use(vendor_dpmd)
')
