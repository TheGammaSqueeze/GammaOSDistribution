# Copyright (c) 2019, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#must be defined for file_contexts
type qmi_test_service_exec, exec_type, vendor_file_type, file_type;

userdebug_or_eng(`
  type qmi_test_service, domain;
  domain_auto_trans(shell, qmi_test_service_exec, qmi_test_service)
  #domain_auto_trans(adbd, qmi_test_service_exec, qmi_test_service)
  #enable access to loader in 64 bit system
  allow qmi_test_service shell:fd use;
  #test is launched from pseudo terminal so output goes there
  allow qmi_test_service devpts:chr_file {read write getattr ioctl};
  #to access smem log
  allow qmi_test_service smem_log_device:chr_file {read write open ioctl};
  #enable accessing the path where qmuxds named sockets are present
  #to interface with qmuxd through unix sockets
  #to access ipc router socket
  allow qmi_test_service qmi_test_service:socket {create bind read write setopt};
  #enable running test as root user => privileged process
  #enable privileged processes to bypass permission checks
  allow qmi_test_service qmi_test_service:capability {setgid setuid fsetid};
  #QCCI calls qmuxd API.  The API will internally require this
  qmux_socket(qmi_test_service);
  #enable accessing the system health monitor to check the system health,
  #if a request times out
  allow qmi_test_service system_health_monitor_device:chr_file rw_file_perms;
')
