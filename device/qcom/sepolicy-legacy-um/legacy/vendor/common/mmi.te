# Copyright (c) 2019, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

type vendor_mmi, domain;
type vendor_mmi_exec, exec_type, vendor_file_type, file_type;
#started by init
init_daemon_domain(vendor_mmi)

#self capability
allow vendor_mmi self:{ socket udp_socket } create_socket_perms_no_ioctl;
allow vendor_mmi self:capability { fowner fsetid kill };

#For various devices
allow vendor_mmi {
    sysfs_devices_system_cpu
    sysfs_usb_supply
    sysfs_battery_supply
    sysfs_power
    sysfs_graphics
    sysfs_wake_lock
}:file rw_file_perms;

#socket
allow vendor_mmi socket_device:dir w_dir_perms;
allow vendor_mmi vendor_mmi_socket:sock_file create_file_perms;
type_transition vendor_mmi socket_device:sock_file vendor_mmi_socket;

#allow mmi set system prop
set_prop(vendor_mmi, powerctl_prop)
allow vendor_mmi mnt_vendor_file:dir r_dir_perms;

#Allow mmi operate on graphics
hal_client_domain(vendor_mmi, hal_graphics_allocator);

#Allow mmi to use IPC
binder_call(vendor_mmi,surfaceflinger)

#access kmsg device for logging
allow vendor_mmi kmsg_device:chr_file rw_file_perms;

#mmi test case
unix_socket_connect(vendor_mmi, cnd, cnd);
unix_socket_connect(vendor_mmi, netmgrd, netmgrd);
net_domain(vendor_mmi);
allow vendor_mmi vendor_mmi_exec:file execute_no_trans;
allow vendor_mmi proc:file r_file_perms;

#diag
userdebug_or_eng(`
    diag_use(vendor_mmi)
')
