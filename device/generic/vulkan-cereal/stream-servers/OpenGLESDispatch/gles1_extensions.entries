!gles1_extensions
namespaces translator,gles1

# OpenGL functions which are needed ONLY for implementing GLES 1.1 EXTENSIONS
void glCurrentPaletteMatrixARB(GLint index);
void glMatrixIndexuivARB(GLint size, GLuint * indices);
void glMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
void glWeightPointerARB(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
void glTexGenf(GLenum coord, GLenum pname, GLfloat param );
void glTexGeni(GLenum coord, GLenum pname, GLint param );
void glTexGenfv(GLenum coord, GLenum pname, const GLfloat *params );
void glTexGeniv(GLenum coord, GLenum pname, const GLint *params );
void glGetTexGenfv(GLenum coord, GLenum pname, GLfloat *params );
void glGetTexGeniv(GLenum coord, GLenum pname, GLint *params );
void glColorPointerWithDataSize(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer, GLsizei dataSize);
void glNormalPointerWithDataSize(GLenum type, GLsizei stride, const GLvoid *pointer, GLsizei dataSize);
void glTexCoordPointerWithDataSize(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer, GLsizei dataSize);
void glVertexPointerWithDataSize(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer, GLsizei dataSize);
void glPointSizePointerOES(GLenum type, GLsizei stride, const GLvoid *pointer);
void glBlendEquationSeparateOES(GLenum modeRGB, GLenum modeAlpha);
void glBlendFuncSeparateOES(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void glBlendEquationOES(GLenum mode);
void glDrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
void glDrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height);
void glDrawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
void glDrawTexsvOES(const GLshort *coords);
void glDrawTexivOES(const GLint *coords);
void glDrawTexxvOES(const GLfixed *coords);
void glDrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
void glDrawTexfvOES(const GLfloat *coords);
GLboolean glIsRenderbufferOES(GLuint renderbuffer);
void glBindRenderbufferOES(GLenum target, GLuint renderbuffer);
void glDeleteRenderbuffersOES(GLsizei n, const GLuint* renderbuffers);
void glGenRenderbuffersOES(GLsizei n, GLuint* renderbuffers);
void glRenderbufferStorageOES(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void glGetRenderbufferParameterivOES(GLenum target, GLenum pname, GLint* params);
GLboolean glIsFramebufferOES(GLuint framebuffer);
void glBindFramebufferOES(GLenum target, GLuint framebuffer);
void glDeleteFramebuffersOES(GLsizei n, const GLuint* framebuffers);
void glGenFramebuffersOES(GLsizei n, GLuint* framebuffers);
GLenum glCheckFramebufferStatusOES(GLenum target);
void glFramebufferRenderbufferOES(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void glFramebufferTexture2DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glGetFramebufferAttachmentParameterivOES(GLenum target, GLenum attachment, GLenum pname, GLint* params);
void glGenerateMipmapOES(GLenum target);
void glCurrentPaletteMatrixOES(GLuint matrixpaletteindex);
void glLoadPaletteFromModelViewMatrixOES(void);
void glMatrixIndexPointerOES(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void glWeightPointerOES(GLint size, GLenum type, GLsizei stride, const GLvoid * pointer);
void glTexGenfOES(GLenum coord, GLenum pname, GLfloat param);
void glTexGenfvOES(GLenum coord, GLenum pname, const GLfloat *params);
void glTexGeniOES(GLenum coord, GLenum pname, GLint param);
void glTexGenivOES(GLenum coord, GLenum pname, const GLint *params);
void glTexGenxOES(GLenum coord, GLenum pname, GLfixed param);
void glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed *params);
void glGetTexGenfvOES(GLenum coord, GLenum pname, GLfloat *params);
void glGetTexGenivOES(GLenum coord, GLenum pname, GLint *params);
void glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed *params);
