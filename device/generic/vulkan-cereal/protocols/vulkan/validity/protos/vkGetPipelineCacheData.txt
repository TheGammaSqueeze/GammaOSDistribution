// WARNING: DO NOT MODIFY! This file is automatically generated from the vk.xml registry
.Valid Usage (Implicit)
****
* [[VUID-vkGetPipelineCacheData-device-parameter]] pname:device must: be a valid sname:VkDevice handle
* [[VUID-vkGetPipelineCacheData-pipelineCache-parameter]] pname:pipelineCache must: be a valid sname:VkPipelineCache handle
* [[VUID-vkGetPipelineCacheData-pDataSize-parameter]] pname:pDataSize must: be a valid pointer to a basetype:size_t value
* [[VUID-vkGetPipelineCacheData-pData-parameter]] If the value referenced by pname:pDataSize is not `0`, and pname:pData is not `NULL`, pname:pData must: be a valid pointer to an array of pname:pDataSize bytes
* [[VUID-vkGetPipelineCacheData-pipelineCache-parent]] pname:pipelineCache must: have been created, allocated, or retrieved from pname:device
****

.Return Codes
****
ifndef::doctype-manpage[]
<<fundamentals-successcodes,Success>>::
endif::doctype-manpage[]
ifdef::doctype-manpage[]
On success, this command returns::
endif::doctype-manpage[]
* ename:VK_SUCCESS
* ename:VK_INCOMPLETE
ifndef::doctype-manpage[]
<<fundamentals-errorcodes,Failure>>::
endif::doctype-manpage[]
ifdef::doctype-manpage[]
On failure, this command returns::
endif::doctype-manpage[]
* ename:VK_ERROR_OUT_OF_HOST_MEMORY
* ename:VK_ERROR_OUT_OF_DEVICE_MEMORY
****

