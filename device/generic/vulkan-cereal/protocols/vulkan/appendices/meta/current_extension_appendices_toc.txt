// WARNING: DO NOT MODIFY! This file is automatically generated from the vk.xml registry
ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_16bit_storage[]
  * <<VK_KHR_16bit_storage>>
endif::VK_KHR_16bit_storage[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_8bit_storage[]
  * <<VK_KHR_8bit_storage>>
endif::VK_KHR_8bit_storage[]

ifdef::VK_KHR_android_surface[]
  * <<VK_KHR_android_surface>>
endif::VK_KHR_android_surface[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_bind_memory2[]
  * <<VK_KHR_bind_memory2>>
endif::VK_KHR_bind_memory2[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_create_renderpass2[]
  * <<VK_KHR_create_renderpass2>>
endif::VK_KHR_create_renderpass2[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_dedicated_allocation[]
  * <<VK_KHR_dedicated_allocation>>
endif::VK_KHR_dedicated_allocation[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_descriptor_update_template[]
  * <<VK_KHR_descriptor_update_template>>
endif::VK_KHR_descriptor_update_template[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_device_group[]
  * <<VK_KHR_device_group>>
endif::VK_KHR_device_group[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_device_group_creation[]
  * <<VK_KHR_device_group_creation>>
endif::VK_KHR_device_group_creation[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_display[]
  * <<VK_KHR_display>>
endif::VK_KHR_display[]

ifdef::VK_KHR_display_swapchain[]
  * <<VK_KHR_display_swapchain>>
endif::VK_KHR_display_swapchain[]

ifdef::VK_KHR_draw_indirect_count[]
  * <<VK_KHR_draw_indirect_count>>
endif::VK_KHR_draw_indirect_count[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_external_fence[]
  * <<VK_KHR_external_fence>>
endif::VK_KHR_external_fence[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_external_fence_capabilities[]
  * <<VK_KHR_external_fence_capabilities>>
endif::VK_KHR_external_fence_capabilities[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_external_fence_fd[]
  * <<VK_KHR_external_fence_fd>>
endif::VK_KHR_external_fence_fd[]

ifdef::VK_KHR_external_fence_win32[]
  * <<VK_KHR_external_fence_win32>>
endif::VK_KHR_external_fence_win32[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_external_memory[]
  * <<VK_KHR_external_memory>>
endif::VK_KHR_external_memory[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_external_memory_capabilities[]
  * <<VK_KHR_external_memory_capabilities>>
endif::VK_KHR_external_memory_capabilities[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_external_memory_fd[]
  * <<VK_KHR_external_memory_fd>>
endif::VK_KHR_external_memory_fd[]

ifdef::VK_KHR_external_memory_win32[]
  * <<VK_KHR_external_memory_win32>>
endif::VK_KHR_external_memory_win32[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_external_semaphore[]
  * <<VK_KHR_external_semaphore>>
endif::VK_KHR_external_semaphore[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_external_semaphore_capabilities[]
  * <<VK_KHR_external_semaphore_capabilities>>
endif::VK_KHR_external_semaphore_capabilities[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_external_semaphore_fd[]
  * <<VK_KHR_external_semaphore_fd>>
endif::VK_KHR_external_semaphore_fd[]

ifdef::VK_KHR_external_semaphore_win32[]
  * <<VK_KHR_external_semaphore_win32>>
endif::VK_KHR_external_semaphore_win32[]

ifdef::VK_KHR_get_display_properties2[]
  * <<VK_KHR_get_display_properties2>>
endif::VK_KHR_get_display_properties2[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_get_memory_requirements2[]
  * <<VK_KHR_get_memory_requirements2>>
endif::VK_KHR_get_memory_requirements2[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_get_physical_device_properties2[]
  * <<VK_KHR_get_physical_device_properties2>>
endif::VK_KHR_get_physical_device_properties2[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_get_surface_capabilities2[]
  * <<VK_KHR_get_surface_capabilities2>>
endif::VK_KHR_get_surface_capabilities2[]

ifdef::VK_KHR_image_format_list[]
  * <<VK_KHR_image_format_list>>
endif::VK_KHR_image_format_list[]

ifdef::VK_KHR_incremental_present[]
  * <<VK_KHR_incremental_present>>
endif::VK_KHR_incremental_present[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_maintenance1[]
  * <<VK_KHR_maintenance1>>
endif::VK_KHR_maintenance1[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_maintenance2[]
  * <<VK_KHR_maintenance2>>
endif::VK_KHR_maintenance2[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_maintenance3[]
  * <<VK_KHR_maintenance3>>
endif::VK_KHR_maintenance3[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_mir_surface[]
  * <<VK_KHR_mir_surface>>
endif::VK_KHR_mir_surface[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_multiview[]
  * <<VK_KHR_multiview>>
endif::VK_KHR_multiview[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_push_descriptor[]
  * <<VK_KHR_push_descriptor>>
endif::VK_KHR_push_descriptor[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_relaxed_block_layout[]
  * <<VK_KHR_relaxed_block_layout>>
endif::VK_KHR_relaxed_block_layout[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_sampler_mirror_clamp_to_edge[]
  * <<VK_KHR_sampler_mirror_clamp_to_edge>>
endif::VK_KHR_sampler_mirror_clamp_to_edge[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_sampler_ycbcr_conversion[]
  * <<VK_KHR_sampler_ycbcr_conversion>>
endif::VK_KHR_sampler_ycbcr_conversion[]
endif::VK_VERSION_1_1[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_shader_draw_parameters[]
  * <<VK_KHR_shader_draw_parameters>>
endif::VK_KHR_shader_draw_parameters[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_shared_presentable_image[]
  * <<VK_KHR_shared_presentable_image>>
endif::VK_KHR_shared_presentable_image[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_storage_buffer_storage_class[]
  * <<VK_KHR_storage_buffer_storage_class>>
endif::VK_KHR_storage_buffer_storage_class[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_surface[]
  * <<VK_KHR_surface>>
endif::VK_KHR_surface[]

ifdef::VK_KHR_swapchain[]
  * <<VK_KHR_swapchain>>
endif::VK_KHR_swapchain[]

ifndef::VK_VERSION_1_1[]
ifdef::VK_KHR_variable_pointers[]
  * <<VK_KHR_variable_pointers>>
endif::VK_KHR_variable_pointers[]
endif::VK_VERSION_1_1[]

ifdef::VK_KHR_wayland_surface[]
  * <<VK_KHR_wayland_surface>>
endif::VK_KHR_wayland_surface[]

ifdef::VK_KHR_win32_keyed_mutex[]
  * <<VK_KHR_win32_keyed_mutex>>
endif::VK_KHR_win32_keyed_mutex[]

ifdef::VK_KHR_win32_surface[]
  * <<VK_KHR_win32_surface>>
endif::VK_KHR_win32_surface[]

ifdef::VK_KHR_xcb_surface[]
  * <<VK_KHR_xcb_surface>>
endif::VK_KHR_xcb_surface[]

ifdef::VK_KHR_xlib_surface[]
  * <<VK_KHR_xlib_surface>>
endif::VK_KHR_xlib_surface[]

ifdef::VK_EXT_acquire_xlib_display[]
  * <<VK_EXT_acquire_xlib_display>>
endif::VK_EXT_acquire_xlib_display[]

ifdef::VK_EXT_blend_operation_advanced[]
  * <<VK_EXT_blend_operation_advanced>>
endif::VK_EXT_blend_operation_advanced[]

ifdef::VK_EXT_conditional_rendering[]
  * <<VK_EXT_conditional_rendering>>
endif::VK_EXT_conditional_rendering[]

ifdef::VK_EXT_conservative_rasterization[]
  * <<VK_EXT_conservative_rasterization>>
endif::VK_EXT_conservative_rasterization[]

ifndef::VK_EXT_debug_utils[]
ifdef::VK_EXT_debug_marker[]
  * <<VK_EXT_debug_marker>>
endif::VK_EXT_debug_marker[]
endif::VK_EXT_debug_utils[]

ifndef::VK_EXT_debug_utils[]
ifdef::VK_EXT_debug_report[]
  * <<VK_EXT_debug_report>>
endif::VK_EXT_debug_report[]
endif::VK_EXT_debug_utils[]

ifdef::VK_EXT_debug_utils[]
  * <<VK_EXT_debug_utils>>
endif::VK_EXT_debug_utils[]

ifdef::VK_EXT_depth_range_unrestricted[]
  * <<VK_EXT_depth_range_unrestricted>>
endif::VK_EXT_depth_range_unrestricted[]

ifdef::VK_EXT_descriptor_indexing[]
  * <<VK_EXT_descriptor_indexing>>
endif::VK_EXT_descriptor_indexing[]

ifdef::VK_EXT_direct_mode_display[]
  * <<VK_EXT_direct_mode_display>>
endif::VK_EXT_direct_mode_display[]

ifdef::VK_EXT_discard_rectangles[]
  * <<VK_EXT_discard_rectangles>>
endif::VK_EXT_discard_rectangles[]

ifdef::VK_EXT_display_control[]
  * <<VK_EXT_display_control>>
endif::VK_EXT_display_control[]

ifdef::VK_EXT_display_surface_counter[]
  * <<VK_EXT_display_surface_counter>>
endif::VK_EXT_display_surface_counter[]

ifdef::VK_EXT_external_memory_dma_buf[]
  * <<VK_EXT_external_memory_dma_buf>>
endif::VK_EXT_external_memory_dma_buf[]

ifdef::VK_EXT_external_memory_host[]
  * <<VK_EXT_external_memory_host>>
endif::VK_EXT_external_memory_host[]

ifdef::VK_EXT_global_priority[]
  * <<VK_EXT_global_priority>>
endif::VK_EXT_global_priority[]

ifdef::VK_EXT_hdr_metadata[]
  * <<VK_EXT_hdr_metadata>>
endif::VK_EXT_hdr_metadata[]

ifdef::VK_EXT_post_depth_coverage[]
  * <<VK_EXT_post_depth_coverage>>
endif::VK_EXT_post_depth_coverage[]

ifdef::VK_EXT_queue_family_foreign[]
  * <<VK_EXT_queue_family_foreign>>
endif::VK_EXT_queue_family_foreign[]

ifdef::VK_EXT_sample_locations[]
  * <<VK_EXT_sample_locations>>
endif::VK_EXT_sample_locations[]

ifdef::VK_EXT_sampler_filter_minmax[]
  * <<VK_EXT_sampler_filter_minmax>>
endif::VK_EXT_sampler_filter_minmax[]

ifdef::VK_EXT_shader_stencil_export[]
  * <<VK_EXT_shader_stencil_export>>
endif::VK_EXT_shader_stencil_export[]

ifdef::VK_EXT_shader_subgroup_ballot[]
  * <<VK_EXT_shader_subgroup_ballot>>
endif::VK_EXT_shader_subgroup_ballot[]

ifdef::VK_EXT_shader_subgroup_vote[]
  * <<VK_EXT_shader_subgroup_vote>>
endif::VK_EXT_shader_subgroup_vote[]

ifdef::VK_EXT_shader_viewport_index_layer[]
  * <<VK_EXT_shader_viewport_index_layer>>
endif::VK_EXT_shader_viewport_index_layer[]

ifdef::VK_EXT_swapchain_colorspace[]
  * <<VK_EXT_swapchain_colorspace>>
endif::VK_EXT_swapchain_colorspace[]

ifdef::VK_EXT_validation_cache[]
  * <<VK_EXT_validation_cache>>
endif::VK_EXT_validation_cache[]

ifdef::VK_EXT_validation_flags[]
  * <<VK_EXT_validation_flags>>
endif::VK_EXT_validation_flags[]

ifdef::VK_EXT_vertex_attribute_divisor[]
  * <<VK_EXT_vertex_attribute_divisor>>
endif::VK_EXT_vertex_attribute_divisor[]

ifdef::VK_AMD_buffer_marker[]
  * <<VK_AMD_buffer_marker>>
endif::VK_AMD_buffer_marker[]

ifndef::VK_KHR_draw_indirect_count[]
ifdef::VK_AMD_draw_indirect_count[]
  * <<VK_AMD_draw_indirect_count>>
endif::VK_AMD_draw_indirect_count[]
endif::VK_KHR_draw_indirect_count[]

ifdef::VK_AMD_gcn_shader[]
  * <<VK_AMD_gcn_shader>>
endif::VK_AMD_gcn_shader[]

ifdef::VK_AMD_gpu_shader_half_float[]
  * <<VK_AMD_gpu_shader_half_float>>
endif::VK_AMD_gpu_shader_half_float[]

ifdef::VK_AMD_gpu_shader_int16[]
  * <<VK_AMD_gpu_shader_int16>>
endif::VK_AMD_gpu_shader_int16[]

ifdef::VK_AMD_mixed_attachment_samples[]
  * <<VK_AMD_mixed_attachment_samples>>
endif::VK_AMD_mixed_attachment_samples[]

ifndef::VK_KHR_maintenance1[]
ifdef::VK_AMD_negative_viewport_height[]
  * <<VK_AMD_negative_viewport_height>>
endif::VK_AMD_negative_viewport_height[]
endif::VK_KHR_maintenance1[]

ifdef::VK_AMD_rasterization_order[]
  * <<VK_AMD_rasterization_order>>
endif::VK_AMD_rasterization_order[]

ifdef::VK_AMD_shader_ballot[]
  * <<VK_AMD_shader_ballot>>
endif::VK_AMD_shader_ballot[]

ifdef::VK_AMD_shader_core_properties[]
  * <<VK_AMD_shader_core_properties>>
endif::VK_AMD_shader_core_properties[]

ifdef::VK_AMD_shader_explicit_vertex_parameter[]
  * <<VK_AMD_shader_explicit_vertex_parameter>>
endif::VK_AMD_shader_explicit_vertex_parameter[]

ifdef::VK_AMD_shader_fragment_mask[]
  * <<VK_AMD_shader_fragment_mask>>
endif::VK_AMD_shader_fragment_mask[]

ifdef::VK_AMD_shader_image_load_store_lod[]
  * <<VK_AMD_shader_image_load_store_lod>>
endif::VK_AMD_shader_image_load_store_lod[]

ifdef::VK_AMD_shader_info[]
  * <<VK_AMD_shader_info>>
endif::VK_AMD_shader_info[]

ifdef::VK_AMD_shader_trinary_minmax[]
  * <<VK_AMD_shader_trinary_minmax>>
endif::VK_AMD_shader_trinary_minmax[]

ifdef::VK_AMD_texture_gather_bias_lod[]
  * <<VK_AMD_texture_gather_bias_lod>>
endif::VK_AMD_texture_gather_bias_lod[]

ifdef::VK_ANDROID_external_memory_android_hardware_buffer[]
  * <<VK_ANDROID_external_memory_android_hardware_buffer>>
endif::VK_ANDROID_external_memory_android_hardware_buffer[]

ifdef::VK_GOOGLE_display_timing[]
  * <<VK_GOOGLE_display_timing>>
endif::VK_GOOGLE_display_timing[]

ifdef::VK_IMG_filter_cubic[]
  * <<VK_IMG_filter_cubic>>
endif::VK_IMG_filter_cubic[]

ifdef::VK_IMG_format_pvrtc[]
  * <<VK_IMG_format_pvrtc>>
endif::VK_IMG_format_pvrtc[]

ifdef::VK_MVK_ios_surface[]
  * <<VK_MVK_ios_surface>>
endif::VK_MVK_ios_surface[]

ifdef::VK_MVK_macos_surface[]
  * <<VK_MVK_macos_surface>>
endif::VK_MVK_macos_surface[]

ifdef::VK_NN_vi_surface[]
  * <<VK_NN_vi_surface>>
endif::VK_NN_vi_surface[]

ifdef::VK_NVX_device_generated_commands[]
  * <<VK_NVX_device_generated_commands>>
endif::VK_NVX_device_generated_commands[]

ifdef::VK_NVX_multiview_per_view_attributes[]
  * <<VK_NVX_multiview_per_view_attributes>>
endif::VK_NVX_multiview_per_view_attributes[]

ifdef::VK_NV_clip_space_w_scaling[]
  * <<VK_NV_clip_space_w_scaling>>
endif::VK_NV_clip_space_w_scaling[]

ifndef::VK_KHR_dedicated_allocation[]
ifdef::VK_NV_dedicated_allocation[]
  * <<VK_NV_dedicated_allocation>>
endif::VK_NV_dedicated_allocation[]
endif::VK_KHR_dedicated_allocation[]

ifdef::VK_NV_device_diagnostic_checkpoints[]
  * <<VK_NV_device_diagnostic_checkpoints>>
endif::VK_NV_device_diagnostic_checkpoints[]

ifndef::VK_KHR_external_memory[]
ifdef::VK_NV_external_memory[]
  * <<VK_NV_external_memory>>
endif::VK_NV_external_memory[]
endif::VK_KHR_external_memory[]

ifndef::VK_KHR_external_memory_capabilities[]
ifdef::VK_NV_external_memory_capabilities[]
  * <<VK_NV_external_memory_capabilities>>
endif::VK_NV_external_memory_capabilities[]
endif::VK_KHR_external_memory_capabilities[]

ifndef::VK_KHR_external_memory_win32[]
ifdef::VK_NV_external_memory_win32[]
  * <<VK_NV_external_memory_win32>>
endif::VK_NV_external_memory_win32[]
endif::VK_KHR_external_memory_win32[]

ifdef::VK_NV_fill_rectangle[]
  * <<VK_NV_fill_rectangle>>
endif::VK_NV_fill_rectangle[]

ifdef::VK_NV_fragment_coverage_to_color[]
  * <<VK_NV_fragment_coverage_to_color>>
endif::VK_NV_fragment_coverage_to_color[]

ifdef::VK_NV_framebuffer_mixed_samples[]
  * <<VK_NV_framebuffer_mixed_samples>>
endif::VK_NV_framebuffer_mixed_samples[]

ifdef::VK_NV_geometry_shader_passthrough[]
  * <<VK_NV_geometry_shader_passthrough>>
endif::VK_NV_geometry_shader_passthrough[]


ifdef::VK_NV_sample_mask_override_coverage[]
  * <<VK_NV_sample_mask_override_coverage>>
endif::VK_NV_sample_mask_override_coverage[]

ifdef::VK_NV_shader_subgroup_partitioned[]
  * <<VK_NV_shader_subgroup_partitioned>>
endif::VK_NV_shader_subgroup_partitioned[]

ifdef::VK_NV_viewport_array2[]
  * <<VK_NV_viewport_array2>>
endif::VK_NV_viewport_array2[]

ifdef::VK_NV_viewport_swizzle[]
  * <<VK_NV_viewport_swizzle>>
endif::VK_NV_viewport_swizzle[]

ifndef::VK_KHR_win32_keyed_mutex[]
ifdef::VK_NV_win32_keyed_mutex[]
  * <<VK_NV_win32_keyed_mutex>>
endif::VK_NV_win32_keyed_mutex[]
endif::VK_KHR_win32_keyed_mutex[]

