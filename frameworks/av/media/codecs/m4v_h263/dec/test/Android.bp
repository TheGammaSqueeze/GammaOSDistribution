/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "frameworks_av_media_codecs_m4v_h263_dec_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: [
        "frameworks_av_media_codecs_m4v_h263_dec_license",
    ],
}

cc_test {
    name: "Mpeg4H263DecoderTest",
    gtest: true,

    test_suites: [
        "device-tests",
        "mts",
    ],

    // Support multilib variants (using different suffix per sub-architecture), which is needed on
    // build targets with secondary architectures, as the MTS test suite packaging logic flattens
    // all test artifacts into a single `testcases` directory.
    compile_multilib: "both",
    multilib: {
        lib32: {
            suffix: "32",
        },
        lib64: {
            suffix: "64",
        },
    },

    // this unit test also runs within the mainline tests (MTS),
    // so it must be compatible back to Android Q/10 (sdk 29)
    min_sdk_version: "29",

    srcs: [
        "Mpeg4H263DecoderTest.cpp",
    ],

    shared_libs: [
        "liblog",
    ],

    static_libs: [
        "libstagefright_m4vh263dec",
        "libstagefright_foundation",
    ],

    cflags: [
        "-Werror",
        "-Wall",
    ],

    sanitize: {
        misc_undefined: [
            "unsigned-integer-overflow",
            "signed-integer-overflow",
        ],
        cfi: true,
    },
}
