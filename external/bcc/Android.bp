//
// Copyright (C) 2018 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package {
    default_applicable_licenses: ["external_bcc_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
//
// large-scale-change included anything that looked like it might be a license
// text as a license_text. e.g. LICENSE, NOTICE, COPYING etc.
//
// Please consider removing redundant or irrelevant files from 'license_text:'.
// See: http://go/android-license-faq
license {
    name: "external_bcc_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
        "SPDX-license-identifier-BSD",
        "SPDX-license-identifier-BSL-1.0",
        "SPDX-license-identifier-GPL",
        "SPDX-license-identifier-GPL-2.0",
        "SPDX-license-identifier-MIT",
        "SPDX-license-identifier-NCSA",
        "legacy_unencumbered",
    ],
    license_text: [
        "LICENSE",
        "LICENSE.txt",
    ],
}

cc_defaults {
    name: "libbpf_defaults",
    cpp_std: "c++17",
    cflags: [
        "-Wall",
        "-Werror",
        "-Wnullable-to-nonnull-conversion",
        "-Wthread-safety",
        "-Wunused-parameter",
    ],
    tidy: true,
    tidy_checks: [
        "android-*",
        "cert-*",
        "clang-analyzer-security*",
        // Disabling due to many unavoidable warnings from POSIX API usage.
        "-google-runtime-int",
    ],
}

cc_library_headers {
    name: "libbpf_headers",
    vendor_available: false,
    host_supported: false,
    native_bridge_supported: true,
    export_include_dirs: ["src/cc/includes/"],
    target: {
        linux_bionic: {
            enabled: true,
        },
    },
}

cc_library {
    name: "libbpf",
    vendor_available: false,
    host_supported: false,
    native_bridge_supported: true,
    target: {
        android: {
            srcs: [
                "src/cc/libbpf.c",
                "src/cc/perf_reader.c",
            ],
            sanitize: {
                misc_undefined: ["integer"],
            },
        },
    },

    header_libs: [
        "libbpf_headers"
    ],
    export_header_lib_headers: ["libbpf_headers"],
    local_include_dirs: ["src/cc"],

    defaults: ["bpf_defaults"],
    cflags: [
        "-Werror",
        "-Wall",
        "-Wextra",
    ],
}
