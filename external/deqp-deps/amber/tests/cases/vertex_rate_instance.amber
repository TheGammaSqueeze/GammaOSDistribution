#!amber
# Copyright 2020 The Amber Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

SHADER vertex vtex_shader GLSL
#version 430
layout(location = 0) in vec2 position;
layout(location = 1) in vec4 color_in;
layout(location = 0) out vec4 color_out;
void main()
{
    gl_Position = vec4(position.x + float(gl_InstanceIndex) * 0.5, position.y, 0, 1);
    color_out = color_in;
}
END

SHADER fragment frag_shader GLSL
#version 430
layout(location = 0) in vec4 color_in;
layout(location = 0) out vec4 color_out;
void main()
{
    color_out = color_in;
}
END

BUFFER position_buf DATA_TYPE vec2<float> DATA
-1.0  1.0
-1.0 -1.0
-0.5  1.0
-0.5 -1.0
-1.0 -1.0
-0.5  1.0
END

BUFFER color_buf DATA_TYPE R8G8B8A8_UNORM DATA
255   0   0 255
  0 255   0 255
  0   0 255 255
  0 255 255 255
END

BUFFER framebuffer FORMAT B8G8R8A8_UNORM

PIPELINE graphics pipeline
  ATTACH vtex_shader
  ATTACH frag_shader

  VERTEX_DATA position_buf LOCATION 0 RATE vertex
  VERTEX_DATA color_buf LOCATION 1 RATE instance
  FRAMEBUFFER_SIZE 40 40
  BIND BUFFER framebuffer AS color LOCATION 0
END

RUN pipeline DRAW_ARRAY AS TRIANGLE_LIST START_IDX 0 COUNT 6 START_INSTANCE 0 INSTANCE_COUNT 4
EXPECT framebuffer IDX 0  0 SIZE 10 40 EQ_RGBA 255   0   0 255
EXPECT framebuffer IDX 10 0 SIZE 10 40 EQ_RGBA   0 255   0 255
EXPECT framebuffer IDX 20 0 SIZE 10 40 EQ_RGBA   0   0 255 255
EXPECT framebuffer IDX 30 0 SIZE 10 40 EQ_RGBA   0 255 255 255
