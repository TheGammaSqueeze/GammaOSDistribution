<abi-corpus version='2.0' architecture='elf-amd-x86_64'>
  <elf-needed>
    <dependency name='libstdc++.so.6'/>
    <dependency name='libm.so.6'/>
    <dependency name='libgcc_s.so.1'/>
    <dependency name='libc.so.6'/>
  </elf-needed>
  <elf-function-symbols>
    <!-- cpp_assert(cpp_reader*, char const*) -->
    <elf-symbol name='_Z10cpp_assertP10cpp_readerPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_define(cpp_reader*, char const*) -->
    <elf-symbol name='_Z10cpp_defineP10cpp_readerPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_finish(cpp_reader*, _IO_FILE*) -->
    <elf-symbol name='_Z10cpp_finishP10cpp_readerP8_IO_FILE' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_lookup(cpp_reader*, unsigned char const*, unsigned int) -->
    <elf-symbol name='_Z10cpp_lookupP10cpp_readerPKhj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_write(deps const*, _IO_FILE*, unsigned int) -->
    <elf-symbol name='_Z10deps_writePK4depsP8_IO_FILEj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- get_spaces(char const*) -->
    <elf-symbol name='_Z10get_spacesPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ht_destroy(ht*) -->
    <elf-symbol name='_Z10ht_destroyP2ht' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- seen_error() -->
    <elf-symbol name='_Z10seen_errorv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- warning_at(unsigned int, int, char const*, ...) -->
    <elf-symbol name='_Z10warning_atjiPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_defined(cpp_reader*, unsigned char const*, int) -->
    <elf-symbol name='_Z11cpp_definedP10cpp_readerPKhi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_destroy(cpp_reader*) -->
    <elf-symbol name='_Z11cpp_destroyP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_dir(_cpp_file*) -->
    <elf-symbol name='_Z11cpp_get_dirP9_cpp_file' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_warning(cpp_reader*, int, char const*, ...) -->
    <elf-symbol name='_Z11cpp_warningP10cpp_readeriPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fancy_abort(char const*, int, char const*) -->
    <elf-symbol name='_Z11fancy_abortPKciS0_' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fatal_error(char const*, ...) -->
    <elf-symbol name='_Z11fatal_errorPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- file_exists(char const*) -->
    <elf-symbol name='_Z11file_existsPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_add(line_maps*, lc_reason, unsigned int, char const*, unsigned int) -->
    <elf-symbol name='_Z11linemap_addP9line_maps9lc_reasonjPKcj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_verbatim(pretty_print_info*, char const*, ...) -->
    <elf-symbol name='_Z11pp_verbatimP17pretty_print_infoPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- collect_wait(char const*, pex_obj*) -->
    <elf-symbol name='_Z12collect_waitPKcP7pex_obj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_deps(cpp_reader*) -->
    <elf-symbol name='_Z12cpp_get_depsP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_file(cpp_buffer*) -->
    <elf-symbol name='_Z12cpp_get_fileP10cpp_buffer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_path(_cpp_file*) -->
    <elf-symbol name='_Z12cpp_get_pathP9_cpp_file' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_prev(cpp_buffer*) -->
    <elf-symbol name='_Z12cpp_get_prevP10cpp_buffer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_included(cpp_reader*, char const*) -->
    <elf-symbol name='_Z12cpp_includedP10cpp_readerPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_set_lang(cpp_reader*, c_lang) -->
    <elf-symbol name='_Z12cpp_set_langP10cpp_reader6c_lang' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_unassert(cpp_reader*, char const*) -->
    <elf-symbol name='_Z12cpp_unassertP10cpp_readerPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_add_dep(deps*, char const*) -->
    <elf-symbol name='_Z12deps_add_depP4depsPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_restore(deps*, _IO_FILE*, char const*) -->
    <elf-symbol name='_Z12deps_restoreP4depsP8_IO_FILEPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_dump(_IO_FILE*, line_maps*, unsigned int, bool) -->
    <elf-symbol name='_Z12linemap_dumpP8_IO_FILEP9line_mapsjb' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_init(line_maps*) -->
    <elf-symbol name='_Z12linemap_initP9line_maps' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_construct(pretty_print_info*, char const*, int) -->
    <elf-symbol name='_Z12pp_constructP17pretty_print_infoPKci' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_token(cpp_reader*) -->
    <elf-symbol name='_Z13cpp_get_tokenP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_token_len(cpp_token const*) -->
    <elf-symbol name='_Z13cpp_token_lenPK9cpp_token' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_type2name(cpp_ttype, unsigned char) -->
    <elf-symbol name='_Z13cpp_type2name9cpp_ttypeh' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_undef_all(cpp_reader*) -->
    <elf-symbol name='_Z13cpp_undef_allP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_flush(pretty_print_info*) -->
    <elf-symbol name='_Z13pp_base_flushP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- trim_filename(char const*) -->
    <elf-symbol name='_Z13trim_filenamePKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_buffer(cpp_reader*) -->
    <elf-symbol name='_Z14cpp_get_bufferP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_init_iconv(cpp_reader*) -->
    <elf-symbol name='_Z14cpp_init_iconvP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_pedwarning(cpp_reader*, int, char const*, ...) -->
    <elf-symbol name='_Z14cpp_pedwarningP10cpp_readeriPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_peek_token(cpp_reader*, int) -->
    <elf-symbol name='_Z14cpp_peek_tokenP10cpp_readeri' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_add_vpath(deps*, char const*) -->
    <elf-symbol name='_Z14deps_add_vpathP4depsPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- internal_error(char const*, ...) -->
    <elf-symbol name='_Z14internal_errorPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_lookup(line_maps*, unsigned int) -->
    <elf-symbol name='_Z14linemap_lookupP9line_mapsj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_format(pretty_print_info*, text_info*) -->
    <elf-symbol name='_Z14pp_base_formatP17pretty_print_infoP9text_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_indent(pretty_print_info*) -->
    <elf-symbol name='_Z14pp_base_indentP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_string(pretty_print_info*, char const*) -->
    <elf-symbol name='_Z14pp_base_stringP17pretty_print_infoPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_stack_free(void*) -->
    <elf-symbol name='_Z14vec_stack_freePv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- collect_execute(char const*, char**, char const*, char const*, int) -->
    <elf-symbol name='_Z15collect_executePKcPPcS0_S0_i' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_avoid_paste(cpp_reader*, cpp_token const*, cpp_token const*) -->
    <elf-symbol name='_Z15cpp_avoid_pasteP10cpp_readerPK9cpp_tokenS3_' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_change_file(cpp_reader*, lc_reason, char const*) -->
    <elf-symbol name='_Z15cpp_change_fileP10cpp_reader9lc_reasonPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_options(cpp_reader*) -->
    <elf-symbol name='_Z15cpp_get_optionsP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_output_line(cpp_reader*, _IO_FILE*) -->
    <elf-symbol name='_Z15cpp_output_lineP10cpp_readerP8_IO_FILE' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_push_buffer(cpp_reader*, unsigned char const*, unsigned long, int) -->
    <elf-symbol name='_Z15cpp_push_bufferP10cpp_readerPKhmi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_spell_token(cpp_reader*, cpp_token const*, unsigned char*, bool) -->
    <elf-symbol name='_Z15cpp_spell_tokenP10cpp_readerPK9cpp_tokenPhb' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_sys_macro_p(cpp_reader*) -->
    <elf-symbol name='_Z15cpp_sys_macro_pP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_add_target(deps*, char const*, int) -->
    <elf-symbol name='_Z15deps_add_targetP4depsPKci' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- emit_diagnostic(diagnostic_t, unsigned int, int, char const*, ...) -->
    <elf-symbol name='_Z15emit_diagnostic12diagnostic_tjiPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- expand_location(unsigned int) -->
    <elf-symbol name='_Z15expand_locationj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- line_table_dump(_IO_FILE*, line_maps*, unsigned int, unsigned int) -->
    <elf-symbol name='_Z15line_table_dumpP8_IO_FILEP9line_mapsjj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_newline(pretty_print_info*) -->
    <elf-symbol name='_Z15pp_base_newlineP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_comments(cpp_reader*) -->
    <elf-symbol name='_Z16cpp_get_commentsP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_output_token(cpp_token const*, _IO_FILE*) -->
    <elf-symbol name='_Z16cpp_output_tokenPK9cpp_tokenP8_IO_FILE' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_post_options(cpp_reader*) -->
    <elf-symbol name='_Z16cpp_post_optionsP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_push_include(cpp_reader*, char const*) -->
    <elf-symbol name='_Z16cpp_push_includeP10cpp_readerPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_quote_string(unsigned char*, unsigned char const*, unsigned int) -->
    <elf-symbol name='_Z16cpp_quote_stringPhPKhj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_set_line_map(cpp_reader*, line_maps*) -->
    <elf-symbol name='_Z16cpp_set_line_mapP10cpp_readerP9line_maps' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gcc_init_libintl() -->
    <elf-symbol name='_Z16gcc_init_libintlv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ggc_realloc_stat(void*, unsigned long) -->
    <elf-symbol name='_Z16ggc_realloc_statPvm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_gc_o_reserve(void*, int, unsigned long, unsigned long) -->
    <elf-symbol name='_Z16vec_gc_o_reservePvimm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_gc_p_reserve(void*, int) -->
    <elf-symbol name='_Z16vec_gc_p_reservePvi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_create_reader(c_lang, ht*, line_maps*) -->
    <elf-symbol name='_Z17cpp_create_reader6c_langP2htP9line_maps' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_callbacks(cpp_reader*) -->
    <elf-symbol name='_Z17cpp_get_callbacksP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_init_builtins(cpp_reader*, int) -->
    <elf-symbol name='_Z17cpp_init_builtinsP10cpp_readeri' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_scan_nooutput(cpp_reader*) -->
    <elf-symbol name='_Z17cpp_scan_nooutputP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_set_callbacks(cpp_reader*, cpp_callbacks*) -->
    <elf-symbol name='_Z17cpp_set_callbacksP10cpp_readerP13cpp_callbacks' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_token_as_text(cpp_reader*, cpp_token const*) -->
    <elf-symbol name='_Z17cpp_token_as_textP10cpp_readerPK9cpp_token' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_finish(diagnostic_context*) -->
    <elf-symbol name='_Z17diagnostic_finishP18diagnostic_context' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- gcc_gettext_width(char const*) -->
    <elf-symbol name='_Z17gcc_gettext_widthPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- notice_translated(char const*, ...) -->
    <elf-symbol name='_Z17notice_translatedPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_character(pretty_print_info*, int) -->
    <elf-symbol name='_Z17pp_base_characterP17pretty_print_infoi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_backup_tokens(cpp_reader*, unsigned int) -->
    <elf-symbol name='_Z18_cpp_backup_tokensP10cpp_readerj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_read_main_file(cpp_reader*, char const*) -->
    <elf-symbol name='_Z18cpp_read_main_fileP10cpp_readerPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_userdef_char_p(cpp_ttype) -->
    <elf-symbol name='_Z18cpp_userdef_char_p9cpp_ttype' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_warning_syshdr(cpp_reader*, int, char const*, ...) -->
    <elf-symbol name='_Z18cpp_warning_syshdrP10cpp_readeriPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_phony_targets(deps const*, _IO_FILE*) -->
    <elf-symbol name='_Z18deps_phony_targetsPK4depsP8_IO_FILE' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ht_dump_statistics(ht*) -->
    <elf-symbol name='_Z18ht_dump_statisticsP2ht' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_line_start(line_maps*, unsigned int, unsigned int) -->
    <elf-symbol name='_Z18linemap_line_startP9line_mapsjj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_set_prefix(pretty_print_info*, char const*) -->
    <elf-symbol name='_Z18pp_base_set_prefixP17pretty_print_infoPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_heap_o_reserve(void*, int, unsigned long, unsigned long) -->
    <elf-symbol name='_Z18vec_heap_o_reservePvimm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_heap_p_reserve(void*, int) -->
    <elf-symbol name='_Z18vec_heap_p_reservePvi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_classify_number(cpp_reader*, cpp_token const*, char const**) -->
    <elf-symbol name='_Z19cpp_classify_numberP10cpp_readerPK9cpp_tokenPPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_error_with_line(cpp_reader*, int, unsigned int, unsigned int, char const*, ...) -->
    <elf-symbol name='_Z19cpp_error_with_lineP10cpp_readerijjPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_included_before(cpp_reader*, char const*, unsigned int) -->
    <elf-symbol name='_Z19cpp_included_beforeP10cpp_readerPKcj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_num_sign_extend(cpp_num, unsigned long) -->
    <elf-symbol name='_Z19cpp_num_sign_extend7cpp_numm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_register_pragma(cpp_reader*, char const*, char const*, void (*)(cpp_reader*), bool) -->
    <elf-symbol name='_Z19cpp_register_pragmaP10cpp_readerPKcS2_PFvS0_Eb' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_token_val_index(cpp_token*) -->
    <elf-symbol name='_Z19cpp_token_val_indexP9cpp_token' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_set_info(diagnostic_info*, char const*, __va_list_tag (*) [1], unsigned int, diagnostic_t) -->
    <elf-symbol name='_Z19diagnostic_set_infoP15diagnostic_infoPKcPA1_13__va_list_tagj12diagnostic_t' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- file_name_as_prefix(char const*) -->
    <elf-symbol name='_Z19file_name_as_prefixPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ht_lookup_with_hash(ht*, unsigned char const*, unsigned long, unsigned int, ht_lookup_option) -->
    <elf-symbol name='_Z19ht_lookup_with_hashP2htPKhmj16ht_lookup_option' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_append_text(pretty_print_info*, char const*, char const*) -->
    <elf-symbol name='_Z19pp_base_append_textP17pretty_print_infoPKcS2_' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_emit_prefix(pretty_print_info*) -->
    <elf-symbol name='_Z19pp_base_emit_prefixP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_maybe_space(pretty_print_info*) -->
    <elf-symbol name='_Z19pp_base_maybe_spaceP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_stack_o_reserve(void*, int, unsigned long, unsigned long) -->
    <elf-symbol name='_Z19vec_stack_o_reservePvimm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_stack_p_reserve(void*, int) -->
    <elf-symbol name='_Z19vec_stack_p_reservePvi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_clear_file_cache(cpp_reader*) -->
    <elf-symbol name='_Z20cpp_clear_file_cacheP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_define_formatted(cpp_reader*, char const*, ...) -->
    <elf-symbol name='_Z20cpp_define_formattedP10cpp_readerPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_interpret_string(cpp_reader*, cpp_string const*, unsigned long, cpp_string*, cpp_ttype) -->
    <elf-symbol name='_Z20cpp_interpret_stringP10cpp_readerPK10cpp_stringmPS1_9cpp_ttype' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_macro_definition(cpp_reader*, cpp_hashnode*) -->
    <elf-symbol name='_Z20cpp_macro_definitionP10cpp_readerP12cpp_hashnode' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_userdef_string_p(cpp_ttype) -->
    <elf-symbol name='_Z20cpp_userdef_string_p9cpp_ttype' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ggc_alloc_typed_stat(gt_types_enum, unsigned long) -->
    <elf-symbol name='_Z20ggc_alloc_typed_stat13gt_types_enumm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ggc_round_alloc_size(unsigned long) -->
    <elf-symbol name='_Z20ggc_round_alloc_sizem' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- identifier_to_locale(char const*) -->
    <elf-symbol name='_Z20identifier_to_localePKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_interpret_integer(cpp_reader*, cpp_token const*, unsigned int) -->
    <elf-symbol name='_Z21cpp_interpret_integerP10cpp_readerPK9cpp_tokenj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_warning_with_line(cpp_reader*, int, unsigned int, unsigned int, char const*, ...) -->
    <elf-symbol name='_Z21cpp_warning_with_lineP10cpp_readerijjPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_initialize(diagnostic_context*, int) -->
    <elf-symbol name='_Z21diagnostic_initializeP18diagnostic_contexti' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_dump_location(line_maps*, unsigned int, _IO_FILE*) -->
    <elf-symbol name='_Z21linemap_dump_locationP9line_mapsjP8_IO_FILE' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_forall_identifiers(cpp_reader*, int (*)(cpp_reader*, cpp_hashnode*, void*), void*) -->
    <elf-symbol name='_Z22cpp_forall_identifiersP10cpp_readerPFiS0_P12cpp_hashnodePvES3_' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_userdef_suffix(cpp_token const*) -->
    <elf-symbol name='_Z22cpp_get_userdef_suffixPK9cpp_token' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_make_system_header(cpp_reader*, int, int) -->
    <elf-symbol name='_Z22cpp_make_system_headerP10cpp_readerii' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_set_include_chains(cpp_reader*, cpp_dir*, cpp_dir*, int) -->
    <elf-symbol name='_Z22cpp_set_include_chainsP10cpp_readerP7cpp_dirS2_i' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_get_statistics(line_maps*, linemap_stats*) -->
    <elf-symbol name='_Z22linemap_get_statisticsP9line_mapsP13linemap_stats' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_destroy_prefix(pretty_print_info*) -->
    <elf-symbol name='_Z22pp_base_destroy_prefixP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_formatted_text(pretty_print_info*) -->
    <elf-symbol name='_Z22pp_base_formatted_textP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_gc_o_reserve_exact(void*, int, unsigned long, unsigned long) -->
    <elf-symbol name='_Z22vec_gc_o_reserve_exactPvimm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_gc_p_reserve_exact(void*, int) -->
    <elf-symbol name='_Z22vec_gc_p_reserve_exactPvi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_interpret_charconst(cpp_reader*, cpp_token const*, unsigned int*, int*) -->
    <elf-symbol name='_Z23cpp_interpret_charconstP10cpp_readerPK9cpp_tokenPjPi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_add_default_target(deps*, char const*) -->
    <elf-symbol name='_Z23deps_add_default_targetP4depsPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_build_prefix(diagnostic_context*, diagnostic_info*) -->
    <elf-symbol name='_Z23diagnostic_build_prefixP18diagnostic_contextP15diagnostic_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dump_vec_loc_statistics() -->
    <elf-symbol name='_Z23dump_vec_loc_statisticsv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ggc_internal_alloc_stat(unsigned long) -->
    <elf-symbol name='_Z23ggc_internal_alloc_statm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_expand_location(line_maps*, line_map const*, unsigned int) -->
    <elf-symbol name='_Z23linemap_expand_locationP9line_mapsPK8line_mapj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_format_verbatim(pretty_print_info*, text_info*) -->
    <elf-symbol name='_Z23pp_base_format_verbatimP17pretty_print_infoP9text_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_write_text_to_stream(pretty_print_info*) -->
    <elf-symbol name='_Z23pp_write_text_to_streamP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_host_to_exec_charset(cpp_reader*, unsigned int) -->
    <elf-symbol name='_Z24cpp_host_to_exec_charsetP10cpp_readerj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_interpret_int_suffix(char const*, unsigned long) -->
    <elf-symbol name='_Z24cpp_interpret_int_suffixPKcm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_pedwarning_with_line(cpp_reader*, int, unsigned int, unsigned int, char const*, ...) -->
    <elf-symbol name='_Z24cpp_pedwarning_with_lineP10cpp_readerijjPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_resolve_location(line_maps*, unsigned int, location_resolution_kind, line_map const**) -->
    <elf-symbol name='_Z24linemap_resolve_locationP9line_mapsj24location_resolution_kindPPK8line_map' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_heap_o_reserve_exact(void*, int, unsigned long, unsigned long) -->
    <elf-symbol name='_Z24vec_heap_o_reserve_exactPvimm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_heap_p_reserve_exact(void*, int) -->
    <elf-symbol name='_Z24vec_heap_p_reserve_exactPvi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_force_token_locations(cpp_reader*, unsigned int*) -->
    <elf-symbol name='_Z25cpp_force_token_locationsP10cpp_readerPj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_init_special_builtins(cpp_reader*) -->
    <elf-symbol name='_Z25cpp_init_special_builtinsP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_output_line_to_string(cpp_reader*, unsigned char const*) -->
    <elf-symbol name='_Z25cpp_output_line_to_stringP10cpp_readerPKh' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_userdef_char_add_type(cpp_ttype) -->
    <elf-symbol name='_Z25cpp_userdef_char_add_type9cpp_ttype' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_compare_locations(line_maps*, unsigned int, unsigned int) -->
    <elf-symbol name='_Z25linemap_compare_locationsP9line_mapsjj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_clear_output_area(pretty_print_info*) -->
    <elf-symbol name='_Z25pp_base_clear_output_areaP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_stack_o_reserve_exact(void*, int, unsigned long, unsigned long) -->
    <elf-symbol name='_Z25vec_stack_o_reserve_exactPvimm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_stack_p_reserve_exact(void*, int) -->
    <elf-symbol name='_Z25vec_stack_p_reserve_exactPvi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_interpret_float_suffix(char const*, unsigned long) -->
    <elf-symbol name='_Z26cpp_interpret_float_suffixPKcm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- default_diagnostic_starter(diagnostic_context*, diagnostic_info*) -->
    <elf-symbol name='_Z26default_diagnostic_starterP18diagnostic_contextP15diagnostic_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_pop_diagnostics(diagnostic_context*, unsigned int) -->
    <elf-symbol name='_Z26diagnostic_pop_diagnosticsP18diagnostic_contextj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dump_line_table_statistics() -->
    <elf-symbol name='_Z26dump_line_table_statisticsv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_check_files_exited(line_maps*) -->
    <elf-symbol name='_Z26linemap_check_files_exitedP9line_maps' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_map_get_macro_name(line_map const*) -->
    <elf-symbol name='_Z26linemap_map_get_macro_namePK8line_map' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_get_token_with_location(cpp_reader*, unsigned int*) -->
    <elf-symbol name='_Z27cpp_get_token_with_locationP10cpp_readerPj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_userdef_string_add_type(cpp_ttype) -->
    <elf-symbol name='_Z27cpp_userdef_string_add_type9cpp_ttype' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_push_diagnostics(diagnostic_context*, unsigned int) -->
    <elf-symbol name='_Z27diagnostic_push_diagnosticsP18diagnostic_contextj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_position_for_column(line_maps*, unsigned int) -->
    <elf-symbol name='_Z27linemap_position_for_columnP9line_mapsj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vec_stack_p_reserve_exact_1(int, void*) -->
    <elf-symbol name='_Z27vec_stack_p_reserve_exact_1iPv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_register_deferred_pragma(cpp_reader*, char const*, char const*, unsigned int, bool, bool) -->
    <elf-symbol name='_Z28cpp_register_deferred_pragmaP10cpp_readerPKcS2_jbb' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_userdef_char_remove_type(cpp_ttype) -->
    <elf-symbol name='_Z28cpp_userdef_char_remove_type9cpp_ttype' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_warning_with_line_syshdr(cpp_reader*, int, unsigned int, unsigned int, char const*, ...) -->
    <elf-symbol name='_Z28cpp_warning_with_line_syshdrP10cpp_readerijjPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- default_diagnostic_finalizer(diagnostic_context*, diagnostic_info*) -->
    <elf-symbol name='_Z28default_diagnostic_finalizerP18diagnostic_contextP15diagnostic_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_report_diagnostic(diagnostic_context*, diagnostic_info*) -->
    <elf-symbol name='_Z28diagnostic_report_diagnosticP18diagnostic_contextP15diagnostic_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_macro_expansion_map_p(line_map const*) -->
    <elf-symbol name='_Z29linemap_macro_expansion_map_pPK8line_map' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_last_position_in_text(pretty_print_info const*) -->
    <elf-symbol name='_Z29pp_base_last_position_in_textPK17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_output_formatted_text(pretty_print_info*) -->
    <elf-symbol name='_Z29pp_base_output_formatted_textP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_userdef_string_remove_type(cpp_ttype) -->
    <elf-symbol name='_Z30cpp_userdef_string_remove_type9cpp_ttype' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_classify_diagnostic(diagnostic_context*, int, diagnostic_t, unsigned int) -->
    <elf-symbol name='_Z30diagnostic_classify_diagnosticP18diagnostic_contexti12diagnostic_tj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_set_info_translated(diagnostic_info*, char const*, __va_list_tag (*) [1], unsigned int, diagnostic_t) -->
    <elf-symbol name='_Z30diagnostic_set_info_translatedP15diagnostic_infoPKcPA1_13__va_list_tagj12diagnostic_t' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ggc_internal_cleared_alloc_stat(unsigned long) -->
    <elf-symbol name='_Z31ggc_internal_cleared_alloc_statm' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_unwind_toward_expansion(line_maps*, unsigned int, line_map const**) -->
    <elf-symbol name='_Z31linemap_unwind_toward_expansionP9line_mapsjPPK8line_map' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_set_line_maximum_length(pretty_print_info*, int) -->
    <elf-symbol name='_Z31pp_base_set_line_maximum_lengthP17pretty_print_infoi' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_interpret_string_notranslate(cpp_reader*, cpp_string const*, unsigned long, cpp_string*, cpp_ttype) -->
    <elf-symbol name='_Z32cpp_interpret_string_notranslateP10cpp_readerPK10cpp_stringmPS1_9cpp_ttype' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_stop_forcing_token_locations(cpp_reader*) -->
    <elf-symbol name='_Z32cpp_stop_forcing_token_locationsP10cpp_reader' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- diagnostic_report_current_module(diagnostic_context*, unsigned int) -->
    <elf-symbol name='_Z32diagnostic_report_current_moduleP18diagnostic_contextj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_location_in_system_header_p(line_maps*, unsigned int) -->
    <elf-symbol name='_Z35linemap_location_in_system_header_pP9line_mapsj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_position_for_line_and_column(line_map*, unsigned int, unsigned int) -->
    <elf-symbol name='_Z36linemap_position_for_line_and_columnP8line_mapjj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_tracks_macro_expansion_locs_p(line_maps*) -->
    <elf-symbol name='_Z37linemap_tracks_macro_expansion_locs_pP9line_maps' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_location_from_macro_expansion_p(line_maps*, unsigned int) -->
    <elf-symbol name='_Z39linemap_location_from_macro_expansion_pP9line_mapsj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_base_remaining_character_count_for_line(pretty_print_info*) -->
    <elf-symbol name='_Z42pp_base_remaining_character_count_for_lineP17pretty_print_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- error(char const*, ...) -->
    <elf-symbol name='_Z5errorPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- sorry(char const*, ...) -->
    <elf-symbol name='_Z5sorryPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- inform(unsigned int, char const*, ...) -->
    <elf-symbol name='_Z6informjPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- notice(char const*, ...) -->
    <elf-symbol name='_Z6noticePKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- error_n(unsigned int, int, char const*, char const*, ...) -->
    <elf-symbol name='_Z7error_njiPKcS0_z' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fnotice(_IO_FILE*, char const*, ...) -->
    <elf-symbol name='_Z7fnoticeP8_IO_FILEPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ht_load(ht*, ht_identifier**, unsigned int, unsigned int, bool) -->
    <elf-symbol name='_Z7ht_loadP2htPP13ht_identifierjjb' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pedwarn(unsigned int, int, char const*, ...) -->
    <elf-symbol name='_Z7pedwarnjiPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- warning(int, char const*, ...) -->
    <elf-symbol name='_Z7warningiPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_ideq(cpp_token const*, char const*) -->
    <elf-symbol name='_Z8cpp_ideqPK9cpp_tokenPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- do_tlink(char**, char**) -->
    <elf-symbol name='_Z8do_tlinkPPcS0_' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- error_at(unsigned int, char const*, ...) -->
    <elf-symbol name='_Z8error_atjPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ggc_free(void*) -->
    <elf-symbol name='_Z8ggc_freePv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ht_purge(ht*, int (*)(cpp_reader*, ht_identifier*, void const*), void const*) -->
    <elf-symbol name='_Z8ht_purgeP2htPFiP10cpp_readerP13ht_identifierPKvES6_' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- inform_n(unsigned int, int, char const*, char const*, ...) -->
    <elf-symbol name='_Z8inform_njiPKcS0_z' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- verbatim(char const*, ...) -->
    <elf-symbol name='_Z8verbatimPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_errno(cpp_reader*, int, char const*) -->
    <elf-symbol name='_Z9cpp_errnoP10cpp_readeriPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_error(cpp_reader*, int, char const*, ...) -->
    <elf-symbol name='_Z9cpp_errorP10cpp_readeriPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_undef(cpp_reader*, char const*) -->
    <elf-symbol name='_Z9cpp_undefP10cpp_readerPKc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_free(deps*) -->
    <elf-symbol name='_Z9deps_freeP4deps' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_init() -->
    <elf-symbol name='_Z9deps_initv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- deps_save(deps*, _IO_FILE*) -->
    <elf-symbol name='_Z9deps_saveP4depsP8_IO_FILE' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dump_file(char const*, _IO_FILE*) -->
    <elf-symbol name='_Z9dump_filePKcP8_IO_FILE' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ht_create(unsigned int) -->
    <elf-symbol name='_Z9ht_createj' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ht_forall(ht*, int (*)(cpp_reader*, ht_identifier*, void const*), void const*) -->
    <elf-symbol name='_Z9ht_forallP2htPFiP10cpp_readerP13ht_identifierPKvES6_' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ht_lookup(ht*, unsigned char const*, unsigned long, ht_lookup_option) -->
    <elf-symbol name='_Z9ht_lookupP2htPKhm16ht_lookup_option' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- permerror(unsigned int, char const*, ...) -->
    <elf-symbol name='_Z9permerrorjPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pp_printf(pretty_print_info*, char const*, ...) -->
    <elf-symbol name='_Z9pp_printfP17pretty_print_infoPKcz' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __libc_csu_fini -->
    <elf-symbol name='__libc_csu_fini' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __libc_csu_init -->
    <elf-symbol name='__libc_csu_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_aligned_alloc -->
    <elf-symbol name='_cpp_aligned_alloc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_append_extend_buff -->
    <elf-symbol name='_cpp_append_extend_buff' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_arguments_ok -->
    <elf-symbol name='_cpp_arguments_ok' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_backup_tokens_direct -->
    <elf-symbol name='_cpp_backup_tokens_direct' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_builtin_macro_text -->
    <elf-symbol name='_cpp_builtin_macro_text' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_clean_line -->
    <elf-symbol name='_cpp_clean_line' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_cleanup_files -->
    <elf-symbol name='_cpp_cleanup_files' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_compare_file_date -->
    <elf-symbol name='_cpp_compare_file_date' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_convert_input -->
    <elf-symbol name='_cpp_convert_input' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_copy_replacement_text -->
    <elf-symbol name='_cpp_copy_replacement_text' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_create_definition -->
    <elf-symbol name='_cpp_create_definition' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_create_trad_definition -->
    <elf-symbol name='_cpp_create_trad_definition' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_default_encoding -->
    <elf-symbol name='_cpp_default_encoding' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_define_builtin -->
    <elf-symbol name='_cpp_define_builtin' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_destroy_hashtable -->
    <elf-symbol name='_cpp_destroy_hashtable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_destroy_iconv -->
    <elf-symbol name='_cpp_destroy_iconv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_do__Pragma -->
    <elf-symbol name='_cpp_do__Pragma' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_do_file_change -->
    <elf-symbol name='_cpp_do_file_change' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_equiv_tokens -->
    <elf-symbol name='_cpp_equiv_tokens' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_expand_op_stack -->
    <elf-symbol name='_cpp_expand_op_stack' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_expansions_different_trad -->
    <elf-symbol name='_cpp_expansions_different_trad' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_extend_buff -->
    <elf-symbol name='_cpp_extend_buff' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_fake_include -->
    <elf-symbol name='_cpp_fake_include' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_find_failed -->
    <elf-symbol name='_cpp_find_failed' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_find_file -->
    <elf-symbol name='_cpp_find_file' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_free_buff -->
    <elf-symbol name='_cpp_free_buff' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_free_definition -->
    <elf-symbol name='_cpp_free_definition' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_get_buff -->
    <elf-symbol name='_cpp_get_buff' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_get_file_name -->
    <elf-symbol name='_cpp_get_file_name' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_get_file_stat -->
    <elf-symbol name='_cpp_get_file_stat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_get_fresh_line -->
    <elf-symbol name='_cpp_get_fresh_line' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_handle_directive -->
    <elf-symbol name='_cpp_handle_directive' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_init_directives -->
    <elf-symbol name='_cpp_init_directives' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_init_files -->
    <elf-symbol name='_cpp_init_files' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_init_hashtable -->
    <elf-symbol name='_cpp_init_hashtable' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_init_internal_pragmas -->
    <elf-symbol name='_cpp_init_internal_pragmas' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_init_lexer -->
    <elf-symbol name='_cpp_init_lexer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_init_tokenrun -->
    <elf-symbol name='_cpp_init_tokenrun' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_interpret_identifier -->
    <elf-symbol name='_cpp_interpret_identifier' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_lex_direct -->
    <elf-symbol name='_cpp_lex_direct' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_lex_identifier -->
    <elf-symbol name='_cpp_lex_identifier' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_lex_token -->
    <elf-symbol name='_cpp_lex_token' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_mark_file_once_only -->
    <elf-symbol name='_cpp_mark_file_once_only' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_overlay_buffer -->
    <elf-symbol name='_cpp_overlay_buffer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_parse_expr -->
    <elf-symbol name='_cpp_parse_expr' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_pop_buffer -->
    <elf-symbol name='_cpp_pop_buffer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_pop_context -->
    <elf-symbol name='_cpp_pop_context' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_pop_file_buffer -->
    <elf-symbol name='_cpp_pop_file_buffer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_process_line_notes -->
    <elf-symbol name='_cpp_process_line_notes' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_push_text_context -->
    <elf-symbol name='_cpp_push_text_context' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_push_token_context -->
    <elf-symbol name='_cpp_push_token_context' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_read_file_entries -->
    <elf-symbol name='_cpp_read_file_entries' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_read_logical_line_trad -->
    <elf-symbol name='_cpp_read_logical_line_trad' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_release_buff -->
    <elf-symbol name='_cpp_release_buff' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_remaining_tokens_num_in_context -->
    <elf-symbol name='_cpp_remaining_tokens_num_in_context' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_remove_overlay -->
    <elf-symbol name='_cpp_remove_overlay' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_replacement_text_len -->
    <elf-symbol name='_cpp_replacement_text_len' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_report_missing_guards -->
    <elf-symbol name='_cpp_report_missing_guards' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_restore_pragma_names -->
    <elf-symbol name='_cpp_restore_pragma_names' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_save_file_entries -->
    <elf-symbol name='_cpp_save_file_entries' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_save_parameter -->
    <elf-symbol name='_cpp_save_parameter' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_save_pragma_names -->
    <elf-symbol name='_cpp_save_pragma_names' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_scan_out_logical_line -->
    <elf-symbol name='_cpp_scan_out_logical_line' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_skip_block_comment -->
    <elf-symbol name='_cpp_skip_block_comment' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_stack_file -->
    <elf-symbol name='_cpp_stack_file' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_stack_include -->
    <elf-symbol name='_cpp_stack_include' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_temp_token -->
    <elf-symbol name='_cpp_temp_token' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_test_assertion -->
    <elf-symbol name='_cpp_test_assertion' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_unaligned_alloc -->
    <elf-symbol name='_cpp_unaligned_alloc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_valid_ucn -->
    <elf-symbol name='_cpp_valid_ucn' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_warn_if_unused_macro -->
    <elf-symbol name='_cpp_warn_if_unused_macro' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _fini -->
    <elf-symbol name='_fini' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _init -->
    <elf-symbol name='_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _start -->
    <elf-symbol name='_start' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ada_demangle -->
    <elf-symbol name='ada_demangle' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- buildargv -->
    <elf-symbol name='buildargv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- choose_tmpdir -->
    <elf-symbol name='choose_tmpdir' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- concat -->
    <elf-symbol name='concat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- concat_copy -->
    <elf-symbol name='concat_copy' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- concat_copy2 -->
    <elf-symbol name='concat_copy2' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- concat_length -->
    <elf-symbol name='concat_length' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- countargv -->
    <elf-symbol name='countargv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle -->
    <elf-symbol name='cplus_demangle' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_fill_ctor -->
    <elf-symbol name='cplus_demangle_fill_ctor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_fill_dtor -->
    <elf-symbol name='cplus_demangle_fill_dtor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_fill_extended_operator -->
    <elf-symbol name='cplus_demangle_fill_extended_operator' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_fill_name -->
    <elf-symbol name='cplus_demangle_fill_name' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_init_info -->
    <elf-symbol name='cplus_demangle_init_info' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_mangled_name -->
    <elf-symbol name='cplus_demangle_mangled_name' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_name_to_style -->
    <elf-symbol name='cplus_demangle_name_to_style' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_opname -->
    <elf-symbol name='cplus_demangle_opname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_print -->
    <elf-symbol name='cplus_demangle_print' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_print_callback -->
    <elf-symbol name='cplus_demangle_print_callback' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_set_style -->
    <elf-symbol name='cplus_demangle_set_style' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_type -->
    <elf-symbol name='cplus_demangle_type' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_v3 -->
    <elf-symbol name='cplus_demangle_v3' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_v3_callback -->
    <elf-symbol name='cplus_demangle_v3_callback' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_mangle_opname -->
    <elf-symbol name='cplus_mangle_opname' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cpp_named_operator2name -->
    <elf-symbol name='cpp_named_operator2name' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dos_lbasename -->
    <elf-symbol name='dos_lbasename' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- dupargv -->
    <elf-symbol name='dupargv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- expandargv -->
    <elf-symbol name='expandargv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fdopen_unlocked -->
    <elf-symbol name='fdopen_unlocked' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- filename_cmp -->
    <elf-symbol name='filename_cmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- filename_ncmp -->
    <elf-symbol name='filename_ncmp' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- fopen_unlocked -->
    <elf-symbol name='fopen_unlocked' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- freeargv -->
    <elf-symbol name='freeargv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- freopen_unlocked -->
    <elf-symbol name='freopen_unlocked' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- getpwd -->
    <elf-symbol name='getpwd' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- hex_init -->
    <elf-symbol name='hex_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_clear_slot -->
    <elf-symbol name='htab_clear_slot' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_collisions -->
    <elf-symbol name='htab_collisions' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_create -->
    <elf-symbol name='htab_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_create_alloc -->
    <elf-symbol name='htab_create_alloc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_create_alloc_ex -->
    <elf-symbol name='htab_create_alloc_ex' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_create_typed_alloc -->
    <elf-symbol name='htab_create_typed_alloc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_delete -->
    <elf-symbol name='htab_delete' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_elements -->
    <elf-symbol name='htab_elements' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_empty -->
    <elf-symbol name='htab_empty' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_find -->
    <elf-symbol name='htab_find' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_find_slot -->
    <elf-symbol name='htab_find_slot' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_find_slot_with_hash -->
    <elf-symbol name='htab_find_slot_with_hash' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_find_with_hash -->
    <elf-symbol name='htab_find_with_hash' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_hash_string -->
    <elf-symbol name='htab_hash_string' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_remove_elt -->
    <elf-symbol name='htab_remove_elt' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_remove_elt_with_hash -->
    <elf-symbol name='htab_remove_elt_with_hash' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_set_functions_ex -->
    <elf-symbol name='htab_set_functions_ex' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_size -->
    <elf-symbol name='htab_size' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_traverse -->
    <elf-symbol name='htab_traverse' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_traverse_noresize -->
    <elf-symbol name='htab_traverse_noresize' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_try_create -->
    <elf-symbol name='htab_try_create' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- is_gnu_v3_mangled_ctor -->
    <elf-symbol name='is_gnu_v3_mangled_ctor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- is_gnu_v3_mangled_dtor -->
    <elf-symbol name='is_gnu_v3_mangled_dtor' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- iterative_hash -->
    <elf-symbol name='iterative_hash' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- java_demangle_v3 -->
    <elf-symbol name='java_demangle_v3' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- java_demangle_v3_callback -->
    <elf-symbol name='java_demangle_v3_callback' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lbasename -->
    <elf-symbol name='lbasename' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_add_macro_token -->
    <elf-symbol name='linemap_add_macro_token' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_enter_macro -->
    <elf-symbol name='linemap_enter_macro' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_get_expansion_filename -->
    <elf-symbol name='linemap_get_expansion_filename' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- linemap_get_expansion_line -->
    <elf-symbol name='linemap_get_expansion_line' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- main -->
    <elf-symbol name='main' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- make_temp_file -->
    <elf-symbol name='make_temp_file' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- md5_buffer -->
    <elf-symbol name='md5_buffer' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- md5_finish_ctx -->
    <elf-symbol name='md5_finish_ctx' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- md5_init_ctx -->
    <elf-symbol name='md5_init_ctx' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- md5_process_block -->
    <elf-symbol name='md5_process_block' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- md5_process_bytes -->
    <elf-symbol name='md5_process_bytes' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- md5_read_ctx -->
    <elf-symbol name='md5_read_ctx' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- md5_stream -->
    <elf-symbol name='md5_stream' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_free -->
    <elf-symbol name='pex_free' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_get_status -->
    <elf-symbol name='pex_get_status' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_get_times -->
    <elf-symbol name='pex_get_times' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_init -->
    <elf-symbol name='pex_init' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_init_common -->
    <elf-symbol name='pex_init_common' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_input_file -->
    <elf-symbol name='pex_input_file' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_input_pipe -->
    <elf-symbol name='pex_input_pipe' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_read_err -->
    <elf-symbol name='pex_read_err' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_read_output -->
    <elf-symbol name='pex_read_output' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_run -->
    <elf-symbol name='pex_run' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pex_run_in_environment -->
    <elf-symbol name='pex_run_in_environment' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- reconcat -->
    <elf-symbol name='reconcat' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- set_cplus_marker_for_demangling -->
    <elf-symbol name='set_cplus_marker_for_demangling' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- unix_lbasename -->
    <elf-symbol name='unix_lbasename' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- unlink_if_ordinary -->
    <elf-symbol name='unlink_if_ordinary' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- unlock_std_streams -->
    <elf-symbol name='unlock_std_streams' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- unlock_stream -->
    <elf-symbol name='unlock_stream' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- writeargv -->
    <elf-symbol name='writeargv' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- xcalloc -->
    <elf-symbol name='xcalloc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- xexit -->
    <elf-symbol name='xexit' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- xmalloc -->
    <elf-symbol name='xmalloc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- xmalloc_failed -->
    <elf-symbol name='xmalloc_failed' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- xmalloc_set_program_name -->
    <elf-symbol name='xmalloc_set_program_name' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- xmemdup -->
    <elf-symbol name='xmemdup' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- xrealloc -->
    <elf-symbol name='xrealloc' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- xstrdup -->
    <elf-symbol name='xstrdup' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- xstrerror -->
    <elf-symbol name='xstrerror' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
  </elf-function-symbols>
  <elf-variable-symbols>
    <!-- _IO_stdin_used -->
    <elf-symbol name='_IO_stdin_used' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- __environ@@GLIBC_2.2.5 -->
    <elf-symbol name='__environ@@GLIBC_2.2.5' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _cpp_trigraph_map -->
    <elf-symbol name='_cpp_trigraph_map' size='256' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _hex_value -->
    <elf-symbol name='_hex_value' size='256' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _sch_istable -->
    <elf-symbol name='_sch_istable' size='512' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _sch_tolower -->
    <elf-symbol name='_sch_tolower' size='256' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _sch_toupper -->
    <elf-symbol name='_sch_toupper' size='256' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- _xexit_cleanup -->
    <elf-symbol name='_xexit_cleanup' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- bug_report_url -->
    <elf-symbol name='bug_report_url' size='31' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- c_file_name -->
    <elf-symbol name='c_file_name' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- close_quote -->
    <elf-symbol name='close_quote' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_builtin_types -->
    <elf-symbol name='cplus_demangle_builtin_types' size='1056' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- cplus_demangle_operators -->
    <elf-symbol name='cplus_demangle_operators' size='1392' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- current_demangling_style -->
    <elf-symbol name='current_demangling_style' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- debug -->
    <elf-symbol name='debug' size='1' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- do_collecting -->
    <elf-symbol name='do_collecting' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- environ@@GLIBC_2.2.5 -->
    <elf-symbol name='environ@@GLIBC_2.2.5' size='8' type='object-type' binding='weak-binding' visibility='default-visibility' alias='__environ@@GLIBC_2.2.5' is-defined='yes'/>
    <!-- file_stack -->
    <elf-symbol name='file_stack' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- file_stack_obstack -->
    <elf-symbol name='file_stack_obstack' size='88' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- funcs -->
    <elf-symbol name='funcs' size='72' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- global_dc -->
    <elf-symbol name='global_dc' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- helpflag -->
    <elf-symbol name='helpflag' size='1' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_eq_pointer -->
    <elf-symbol name='htab_eq_pointer' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- htab_hash_pointer -->
    <elf-symbol name='htab_hash_pointer' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- identifier_to_locale_alloc -->
    <elf-symbol name='identifier_to_locale_alloc' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- identifier_to_locale_free -->
    <elf-symbol name='identifier_to_locale_free' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- input_location -->
    <elf-symbol name='input_location' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- lderrout -->
    <elf-symbol name='lderrout' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- ldout -->
    <elf-symbol name='ldout' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- libiberty_concat_ptr -->
    <elf-symbol name='libiberty_concat_ptr' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- libiberty_demanglers -->
    <elf-symbol name='libiberty_demanglers' size='264' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- line_table -->
    <elf-symbol name='line_table' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- locale_encoding -->
    <elf-symbol name='locale_encoding' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- locale_utf8 -->
    <elf-symbol name='locale_utf8' size='1' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- no_demangle -->
    <elf-symbol name='no_demangle' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- num_expanded_macros_counter -->
    <elf-symbol name='num_expanded_macros_counter' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- num_macro_tokens_counter -->
    <elf-symbol name='num_macro_tokens_counter' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- open_quote -->
    <elf-symbol name='open_quote' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- pkgversion_string -->
    <elf-symbol name='pkgversion_string' size='7' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- progname -->
    <elf-symbol name='progname' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- rtl_zone -->
    <elf-symbol name='rtl_zone' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- stderr@@GLIBC_2.2.5 -->
    <elf-symbol name='stderr@@GLIBC_2.2.5' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- stdin@@GLIBC_2.2.5 -->
    <elf-symbol name='stdin@@GLIBC_2.2.5' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- stdout@@GLIBC_2.2.5 -->
    <elf-symbol name='stdout@@GLIBC_2.2.5' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- symbol_stack -->
    <elf-symbol name='symbol_stack' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- symbol_stack_obstack -->
    <elf-symbol name='symbol_stack_obstack' size='88' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- temporary_firstobj -->
    <elf-symbol name='temporary_firstobj' size='8' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- temporary_obstack -->
    <elf-symbol name='temporary_obstack' size='88' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- tree_id_zone -->
    <elf-symbol name='tree_id_zone' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- tree_zone -->
    <elf-symbol name='tree_zone' size='4' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- version_string -->
    <elf-symbol name='version_string' size='6' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
    <!-- vflag -->
    <elf-symbol name='vflag' size='1' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
  </elf-variable-symbols>
  <abi-instr address-size='64' path='../.././gcc/collect2-aix.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
  </abi-instr>
  <abi-instr address-size='64' path='../.././gcc/collect2.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
    <!-- bool -->
    <type-decl name='bool' size-in-bits='8' id='type-id-1'/>
    <!-- char -->
    <type-decl name='char' size-in-bits='8' id='type-id-2'/>
    <!-- char[128] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='1024' id='type-id-3'>
      <!-- <anonymous range>[128] -->
      <subrange length='128' type-id='type-id-4' id='type-id-5'/>
    </array-type-def>
    <!-- char[1] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='8' id='type-id-6'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' type-id='type-id-4' id='type-id-7'/>
    </array-type-def>
    <!-- char[20] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='160' id='type-id-8'>
      <!-- <anonymous range>[20] -->
      <subrange length='20' type-id='type-id-4' id='type-id-9'/>
    </array-type-def>
    <!-- char[4] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='32' id='type-id-10'>
      <!-- <anonymous range>[4] -->
      <subrange length='4' type-id='type-id-4' id='type-id-11'/>
    </array-type-def>
    <!-- struct typedef __va_list_tag __va_list_tag -->
    <class-decl name='typedef __va_list_tag __va_list_tag' size-in-bits='192' is-struct='yes' visibility='default' id='type-id-12'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int typedef __va_list_tag __va_list_tag::gp_offset -->
        <var-decl name='gp_offset' type-id='type-id-13' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned int typedef __va_list_tag __va_list_tag::fp_offset -->
        <var-decl name='fp_offset' type-id='type-id-13' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void* typedef __va_list_tag __va_list_tag::overflow_arg_area -->
        <var-decl name='overflow_arg_area' type-id='type-id-14' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void* typedef __va_list_tag __va_list_tag::reg_save_area -->
        <var-decl name='reg_save_area' type-id='type-id-14' visibility='default'/>
      </data-member>
    </class-decl>
    <!-- const char*[60] -->
    <array-type-def dimensions='1' type-id='type-id-15' size-in-bits='3840' id='type-id-16'>
      <!-- <anonymous range>[60] -->
      <subrange length='60' type-id='type-id-4' id='type-id-17'/>
    </array-type-def>
    <!-- int -->
    <type-decl name='int' size-in-bits='32' id='type-id-18'/>
    <!-- int[12] -->
    <array-type-def dimensions='1' type-id='type-id-18' size-in-bits='384' id='type-id-19'>
      <!-- <anonymous range>[12] -->
      <subrange length='12' type-id='type-id-4' id='type-id-20'/>
    </array-type-def>
    <!-- long int -->
    <type-decl name='long int' size-in-bits='64' id='type-id-21'/>
    <!-- long int[3] -->
    <array-type-def dimensions='1' type-id='type-id-21' size-in-bits='192' id='type-id-22'>
      <!-- <anonymous range>[3] -->
      <subrange length='3' type-id='type-id-4' id='type-id-23'/>
    </array-type-def>
    <!-- signed char -->
    <type-decl name='signed char' size-in-bits='8' id='type-id-24'/>
    <!-- sizetype -->
    <type-decl name='sizetype' size-in-bits='64' id='type-id-4'/>
    <!-- typedef __va_list_tag __va_list_tag[1] -->
    <array-type-def dimensions='1' type-id='type-id-12' size-in-bits='192' id='type-id-25'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' type-id='type-id-4' id='type-id-7'/>
    </array-type-def>
    <!-- unnamed&#45;enum&#45;underlying&#45;type&#45;32 -->
    <type-decl name='unnamed-enum-underlying-type-32' is-anonymous='yes' size-in-bits='32' alignment-in-bits='32' id='type-id-26'/>
    <!-- unsigned char -->
    <type-decl name='unsigned char' size-in-bits='8' id='type-id-27'/>
    <!-- unsigned int -->
    <type-decl name='unsigned int' size-in-bits='32' id='type-id-13'/>
    <!-- unsigned long int -->
    <type-decl name='unsigned long int' size-in-bits='64' id='type-id-28'/>
    <!-- unsigned short int -->
    <type-decl name='unsigned short int' size-in-bits='16' id='type-id-29'/>
    <!-- variadic parameter type -->
    <type-decl name='variadic parameter type' id='type-id-30'/>
    <!-- void -->
    <type-decl name='void' id='type-id-31'/>
    <!-- typedef unsigned long int size_t -->
    <typedef-decl name='size_t' type-id='type-id-28' filepath='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/prev-gcc/include/stddef.h' line='213' column='1' id='type-id-32'/>
    <!-- struct pretty_print_info -->
    <class-decl name='pretty_print_info' size-in-bits='448' is-struct='yes' visibility='default' filepath='../.././gcc/pretty-print.h' line='159' column='1' id='type-id-33'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- output_buffer* pretty_print_info::buffer -->
        <var-decl name='buffer' type-id='type-id-34' visibility='default' filepath='../.././gcc/pretty-print.h' line='162' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* pretty_print_info::prefix -->
        <var-decl name='prefix' type-id='type-id-15' visibility='default' filepath='../.././gcc/pretty-print.h' line='165' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- pp_padding pretty_print_info::padding -->
        <var-decl name='padding' type-id='type-id-35' visibility='default' filepath='../.././gcc/pretty-print.h' line='168' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int pretty_print_info::maximum_length -->
        <var-decl name='maximum_length' type-id='type-id-18' visibility='default' filepath='../.././gcc/pretty-print.h' line='172' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int pretty_print_info::indent_skip -->
        <var-decl name='indent_skip' type-id='type-id-18' visibility='default' filepath='../.././gcc/pretty-print.h' line='175' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- pp_wrapping_mode_t pretty_print_info::wrapping -->
        <var-decl name='wrapping' type-id='type-id-36' visibility='default' filepath='../.././gcc/pretty-print.h' line='178' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- printer_fn pretty_print_info::format_decoder -->
        <var-decl name='format_decoder' type-id='type-id-37' visibility='default' filepath='../.././gcc/pretty-print.h' line='188' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- bool pretty_print_info::emitted_prefix -->
        <var-decl name='emitted_prefix' type-id='type-id-1' visibility='default' filepath='../.././gcc/pretty-print.h' line='191' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='392'>
        <!-- bool pretty_print_info::need_newline -->
        <var-decl name='need_newline' type-id='type-id-1' visibility='default' filepath='../.././gcc/pretty-print.h' line='194' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='400'>
        <!-- bool pretty_print_info::translate_identifiers -->
        <var-decl name='translate_identifiers' type-id='type-id-1' visibility='default' filepath='../.././gcc/pretty-print.h' line='198' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct diagnostic_context -->
    <class-decl name='diagnostic_context' size-in-bits='1536' is-struct='yes' visibility='default' filepath='../.././gcc/diagnostic.h' line='61' column='1' id='type-id-38'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- pretty_printer* diagnostic_context::printer -->
        <var-decl name='printer' type-id='type-id-39' visibility='default' filepath='../.././gcc/diagnostic.h' line='64' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int diagnostic_context::diagnostic_count[12] -->
        <var-decl name='diagnostic_count' type-id='type-id-19' visibility='default' filepath='../.././gcc/diagnostic.h' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- bool diagnostic_context::some_warnings_are_errors -->
        <var-decl name='some_warnings_are_errors' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='71' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='456'>
        <!-- bool diagnostic_context::warning_as_error_requested -->
        <var-decl name='warning_as_error_requested' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='74' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='480'>
        <!-- int diagnostic_context::n_opts -->
        <var-decl name='n_opts' type-id='type-id-18' visibility='default' filepath='../.././gcc/diagnostic.h' line='78' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- diagnostic_t* diagnostic_context::classify_diagnostic -->
        <var-decl name='classify_diagnostic' type-id='type-id-40' visibility='default' filepath='../.././gcc/diagnostic.h' line='86' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- diagnostic_classification_change_t* diagnostic_context::classification_history -->
        <var-decl name='classification_history' type-id='type-id-41' visibility='default' filepath='../.././gcc/diagnostic.h' line='93' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- int diagnostic_context::n_classification_history -->
        <var-decl name='n_classification_history' type-id='type-id-18' visibility='default' filepath='../.././gcc/diagnostic.h' line='96' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- int* diagnostic_context::push_list -->
        <var-decl name='push_list' type-id='type-id-42' visibility='default' filepath='../.././gcc/diagnostic.h' line='99' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- int diagnostic_context::n_push -->
        <var-decl name='n_push' type-id='type-id-18' visibility='default' filepath='../.././gcc/diagnostic.h' line='100' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='800'>
        <!-- bool diagnostic_context::show_option_requested -->
        <var-decl name='show_option_requested' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='808'>
        <!-- bool diagnostic_context::abort_on_error -->
        <var-decl name='abort_on_error' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='107' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='816'>
        <!-- bool diagnostic_context::show_column -->
        <var-decl name='show_column' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='110' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='824'>
        <!-- bool diagnostic_context::pedantic_errors -->
        <var-decl name='pedantic_errors' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='113' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- bool diagnostic_context::permissive -->
        <var-decl name='permissive' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='116' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='864'>
        <!-- int diagnostic_context::opt_permissive -->
        <var-decl name='opt_permissive' type-id='type-id-18' visibility='default' filepath='../.././gcc/diagnostic.h' line='120' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- bool diagnostic_context::fatal_errors -->
        <var-decl name='fatal_errors' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='123' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='904'>
        <!-- bool diagnostic_context::dc_inhibit_warnings -->
        <var-decl name='dc_inhibit_warnings' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='126' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='912'>
        <!-- bool diagnostic_context::dc_warn_system_headers -->
        <var-decl name='dc_warn_system_headers' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='129' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='928'>
        <!-- unsigned int diagnostic_context::max_errors -->
        <var-decl name='max_errors' type-id='type-id-13' visibility='default' filepath='../.././gcc/diagnostic.h' line='132' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- diagnostic_starter_fn diagnostic_context::begin_diagnostic -->
        <var-decl name='begin_diagnostic' type-id='type-id-43' visibility='default' filepath='../.././gcc/diagnostic.h' line='141' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- diagnostic_finalizer_fn diagnostic_context::end_diagnostic -->
        <var-decl name='end_diagnostic' type-id='type-id-44' visibility='default' filepath='../.././gcc/diagnostic.h' line='144' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- void (diagnostic_context*, const char*, va_list*)* diagnostic_context::internal_error -->
        <var-decl name='internal_error' type-id='type-id-45' visibility='default' filepath='../.././gcc/diagnostic.h' line='147' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- int (int, void*)* diagnostic_context::option_enabled -->
        <var-decl name='option_enabled' type-id='type-id-46' visibility='default' filepath='../.././gcc/diagnostic.h' line='151' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- void* diagnostic_context::option_state -->
        <var-decl name='option_state' type-id='type-id-14' visibility='default' filepath='../.././gcc/diagnostic.h' line='155' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1280'>
        <!-- char* (diagnostic_context*, int, typedef diagnostic_t, typedef diagnostic_t)* diagnostic_context::option_name -->
        <var-decl name='option_name' type-id='type-id-47' visibility='default' filepath='../.././gcc/diagnostic.h' line='163' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- void* diagnostic_context::x_data -->
        <var-decl name='x_data' type-id='type-id-14' visibility='default' filepath='../.././gcc/diagnostic.h' line='166' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- const line_map* diagnostic_context::last_module -->
        <var-decl name='last_module' type-id='type-id-48' visibility='default' filepath='../.././gcc/diagnostic.h' line='170' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- int diagnostic_context::lock -->
        <var-decl name='lock' type-id='type-id-18' visibility='default' filepath='../.././gcc/diagnostic.h' line='172' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1504'>
        <!-- bool diagnostic_context::inhibit_notes_p -->
        <var-decl name='inhibit_notes_p' type-id='type-id-1' visibility='default' filepath='../.././gcc/diagnostic.h' line='174' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef _IO_FILE FILE -->
    <typedef-decl name='FILE' type-id='type-id-49' filepath='/usr/include/stdio.h' line='49' column='1' id='type-id-50'/>
    <!-- struct _IO_FILE -->
    <class-decl name='_IO_FILE' size-in-bits='1728' is-struct='yes' visibility='default' filepath='/usr/include/libio.h' line='271' column='1' id='type-id-49'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int _IO_FILE::_flags -->
        <var-decl name='_flags' type-id='type-id-18' visibility='default' filepath='/usr/include/libio.h' line='272' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- char* _IO_FILE::_IO_read_ptr -->
        <var-decl name='_IO_read_ptr' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='277' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- char* _IO_FILE::_IO_read_end -->
        <var-decl name='_IO_read_end' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='278' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- char* _IO_FILE::_IO_read_base -->
        <var-decl name='_IO_read_base' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='279' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- char* _IO_FILE::_IO_write_base -->
        <var-decl name='_IO_write_base' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='280' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- char* _IO_FILE::_IO_write_ptr -->
        <var-decl name='_IO_write_ptr' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='281' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- char* _IO_FILE::_IO_write_end -->
        <var-decl name='_IO_write_end' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='282' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- char* _IO_FILE::_IO_buf_base -->
        <var-decl name='_IO_buf_base' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='283' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- char* _IO_FILE::_IO_buf_end -->
        <var-decl name='_IO_buf_end' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='284' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- char* _IO_FILE::_IO_save_base -->
        <var-decl name='_IO_save_base' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='286' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- char* _IO_FILE::_IO_backup_base -->
        <var-decl name='_IO_backup_base' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='287' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- char* _IO_FILE::_IO_save_end -->
        <var-decl name='_IO_save_end' type-id='type-id-51' visibility='default' filepath='/usr/include/libio.h' line='288' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- _IO_marker* _IO_FILE::_markers -->
        <var-decl name='_markers' type-id='type-id-52' visibility='default' filepath='/usr/include/libio.h' line='290' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- _IO_FILE* _IO_FILE::_chain -->
        <var-decl name='_chain' type-id='type-id-53' visibility='default' filepath='/usr/include/libio.h' line='292' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- int _IO_FILE::_fileno -->
        <var-decl name='_fileno' type-id='type-id-18' visibility='default' filepath='/usr/include/libio.h' line='294' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='928'>
        <!-- int _IO_FILE::_flags2 -->
        <var-decl name='_flags2' type-id='type-id-18' visibility='default' filepath='/usr/include/libio.h' line='298' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- __off_t _IO_FILE::_old_offset -->
        <var-decl name='_old_offset' type-id='type-id-54' visibility='default' filepath='/usr/include/libio.h' line='300' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- unsigned short int _IO_FILE::_cur_column -->
        <var-decl name='_cur_column' type-id='type-id-29' visibility='default' filepath='/usr/include/libio.h' line='304' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1040'>
        <!-- signed char _IO_FILE::_vtable_offset -->
        <var-decl name='_vtable_offset' type-id='type-id-24' visibility='default' filepath='/usr/include/libio.h' line='305' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1048'>
        <!-- char _IO_FILE::_shortbuf[1] -->
        <var-decl name='_shortbuf' type-id='type-id-6' visibility='default' filepath='/usr/include/libio.h' line='306' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- _IO_lock_t* _IO_FILE::_lock -->
        <var-decl name='_lock' type-id='type-id-55' visibility='default' filepath='/usr/include/libio.h' line='310' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- __off64_t _IO_FILE::_offset -->
        <var-decl name='_offset' type-id='type-id-56' visibility='default' filepath='/usr/include/libio.h' line='319' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- void* _IO_FILE::__pad1 -->
        <var-decl name='__pad1' type-id='type-id-14' visibility='default' filepath='/usr/include/libio.h' line='328' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1280'>
        <!-- void* _IO_FILE::__pad2 -->
        <var-decl name='__pad2' type-id='type-id-14' visibility='default' filepath='/usr/include/libio.h' line='329' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- void* _IO_FILE::__pad3 -->
        <var-decl name='__pad3' type-id='type-id-14' visibility='default' filepath='/usr/include/libio.h' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- void* _IO_FILE::__pad4 -->
        <var-decl name='__pad4' type-id='type-id-14' visibility='default' filepath='/usr/include/libio.h' line='331' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- size_t _IO_FILE::__pad5 -->
        <var-decl name='__pad5' type-id='type-id-32' visibility='default' filepath='/usr/include/libio.h' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- int _IO_FILE::_mode -->
        <var-decl name='_mode' type-id='type-id-18' visibility='default' filepath='/usr/include/libio.h' line='334' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1568'>
        <!-- char _IO_FILE::_unused2[20] -->
        <var-decl name='_unused2' type-id='type-id-8' visibility='default' filepath='/usr/include/libio.h' line='336' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct _IO_marker -->
    <class-decl name='_IO_marker' size-in-bits='192' is-struct='yes' visibility='default' filepath='/usr/include/libio.h' line='186' column='1' id='type-id-57'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- _IO_marker* _IO_marker::_next -->
        <var-decl name='_next' type-id='type-id-52' visibility='default' filepath='/usr/include/libio.h' line='187' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- _IO_FILE* _IO_marker::_sbuf -->
        <var-decl name='_sbuf' type-id='type-id-53' visibility='default' filepath='/usr/include/libio.h' line='188' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int _IO_marker::_pos -->
        <var-decl name='_pos' type-id='type-id-18' visibility='default' filepath='/usr/include/libio.h' line='192' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct obstack -->
    <class-decl name='obstack' size-in-bits='704' is-struct='yes' visibility='default' filepath='../.././libcpp/../include/obstack.h' line='164' column='1' id='type-id-58'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int obstack::chunk_size -->
        <var-decl name='chunk_size' type-id='type-id-21' visibility='default' filepath='../.././gcc/../include/obstack.h' line='166' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- _obstack_chunk* obstack::chunk -->
        <var-decl name='chunk' type-id='type-id-59' visibility='default' filepath='../.././gcc/../include/obstack.h' line='167' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- char* obstack::object_base -->
        <var-decl name='object_base' type-id='type-id-51' visibility='default' filepath='../.././gcc/../include/obstack.h' line='168' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- char* obstack::next_free -->
        <var-decl name='next_free' type-id='type-id-51' visibility='default' filepath='../.././gcc/../include/obstack.h' line='169' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- char* obstack::chunk_limit -->
        <var-decl name='chunk_limit' type-id='type-id-51' visibility='default' filepath='../.././gcc/../include/obstack.h' line='170' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- long int obstack::temp -->
        <var-decl name='temp' type-id='type-id-21' visibility='default' filepath='../.././gcc/../include/obstack.h' line='171' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- int obstack::alignment_mask -->
        <var-decl name='alignment_mask' type-id='type-id-18' visibility='default' filepath='../.././gcc/../include/obstack.h' line='172' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- _obstack_chunk* (void*, long int)* obstack::chunkfun -->
        <var-decl name='chunkfun' type-id='type-id-60' visibility='default' filepath='../.././gcc/../include/obstack.h' line='176' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- void (void*, _obstack_chunk*)* obstack::freefun -->
        <var-decl name='freefun' type-id='type-id-61' visibility='default' filepath='../.././gcc/../include/obstack.h' line='177' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- void* obstack::extra_arg -->
        <var-decl name='extra_arg' type-id='type-id-14' visibility='default' filepath='../.././gcc/../include/obstack.h' line='178' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int obstack::use_extra_arg -->
        <var-decl name='use_extra_arg' type-id='type-id-13' visibility='default' filepath='../.././gcc/../include/obstack.h' line='179' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1'>
        <!-- unsigned int obstack::maybe_empty_object -->
        <var-decl name='maybe_empty_object' type-id='type-id-13' visibility='default' filepath='../.././gcc/../include/obstack.h' line='180' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2'>
        <!-- unsigned int obstack::alloc_failed -->
        <var-decl name='alloc_failed' type-id='type-id-13' visibility='default' filepath='../.././gcc/../include/obstack.h' line='184' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct stat -->
    <class-decl name='stat' size-in-bits='1152' is-struct='yes' visibility='default' filepath='/usr/include/bits/stat.h' line='46' column='1' id='type-id-62'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- __dev_t stat::st_dev -->
        <var-decl name='st_dev' type-id='type-id-63' visibility='default' filepath='/usr/include/bits/stat.h' line='48' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- __ino_t stat::st_ino -->
        <var-decl name='st_ino' type-id='type-id-64' visibility='default' filepath='/usr/include/bits/stat.h' line='53' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- __nlink_t stat::st_nlink -->
        <var-decl name='st_nlink' type-id='type-id-65' visibility='default' filepath='/usr/include/bits/stat.h' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- __mode_t stat::st_mode -->
        <var-decl name='st_mode' type-id='type-id-66' visibility='default' filepath='/usr/include/bits/stat.h' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- __uid_t stat::st_uid -->
        <var-decl name='st_uid' type-id='type-id-67' visibility='default' filepath='/usr/include/bits/stat.h' line='64' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- __gid_t stat::st_gid -->
        <var-decl name='st_gid' type-id='type-id-68' visibility='default' filepath='/usr/include/bits/stat.h' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- int stat::__pad0 -->
        <var-decl name='__pad0' type-id='type-id-18' visibility='default' filepath='/usr/include/bits/stat.h' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- __dev_t stat::st_rdev -->
        <var-decl name='st_rdev' type-id='type-id-63' visibility='default' filepath='/usr/include/bits/stat.h' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- __off_t stat::st_size -->
        <var-decl name='st_size' type-id='type-id-54' visibility='default' filepath='/usr/include/bits/stat.h' line='74' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- __blksize_t stat::st_blksize -->
        <var-decl name='st_blksize' type-id='type-id-69' visibility='default' filepath='/usr/include/bits/stat.h' line='78' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- __blkcnt_t stat::st_blocks -->
        <var-decl name='st_blocks' type-id='type-id-70' visibility='default' filepath='/usr/include/bits/stat.h' line='80' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- timespec stat::st_atim -->
        <var-decl name='st_atim' type-id='type-id-71' visibility='default' filepath='/usr/include/bits/stat.h' line='91' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- timespec stat::st_mtim -->
        <var-decl name='st_mtim' type-id='type-id-71' visibility='default' filepath='/usr/include/bits/stat.h' line='92' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- timespec stat::st_ctim -->
        <var-decl name='st_ctim' type-id='type-id-71' visibility='default' filepath='/usr/include/bits/stat.h' line='93' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- long int stat::__unused[3] -->
        <var-decl name='__unused' type-id='type-id-22' visibility='default' filepath='/usr/include/bits/stat.h' line='106' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef long int __off_t -->
    <typedef-decl name='__off_t' type-id='type-id-21' filepath='/usr/include/bits/types.h' line='141' column='1' id='type-id-54'/>
    <!-- typedef void _IO_lock_t -->
    <typedef-decl name='_IO_lock_t' type-id='type-id-31' filepath='/usr/include/libio.h' line='180' column='1' id='type-id-72'/>
    <!-- typedef long int __off64_t -->
    <typedef-decl name='__off64_t' type-id='type-id-21' filepath='/usr/include/bits/types.h' line='142' column='1' id='type-id-56'/>
    <!-- struct diagnostic_info -->
    <class-decl name='diagnostic_info' size-in-bits='512' is-struct='yes' visibility='default' filepath='../.././gcc/diagnostic.h' line='31' column='1' id='type-id-73'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- text_info diagnostic_info::message -->
        <var-decl name='message' type-id='type-id-74' visibility='default' filepath='../.././gcc/diagnostic.h' line='33' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- location_t diagnostic_info::location -->
        <var-decl name='location' type-id='type-id-75' visibility='default' filepath='../.././gcc/diagnostic.h' line='34' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='352'>
        <!-- unsigned int diagnostic_info::override_column -->
        <var-decl name='override_column' type-id='type-id-13' visibility='default' filepath='../.././gcc/diagnostic.h' line='35' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- void* diagnostic_info::x_data -->
        <var-decl name='x_data' type-id='type-id-14' visibility='default' filepath='../.././gcc/diagnostic.h' line='37' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- diagnostic_t diagnostic_info::kind -->
        <var-decl name='kind' type-id='type-id-76' visibility='default' filepath='../.././gcc/diagnostic.h' line='39' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='480'>
        <!-- int diagnostic_info::option_index -->
        <var-decl name='option_index' type-id='type-id-18' visibility='default' filepath='../.././gcc/diagnostic.h' line='41' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct _obstack_chunk -->
    <class-decl name='_obstack_chunk' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././gcc/../include/obstack.h' line='157' column='1' id='type-id-77'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- char* _obstack_chunk::limit -->
        <var-decl name='limit' type-id='type-id-51' visibility='default' filepath='../.././gcc/../include/obstack.h' line='159' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- _obstack_chunk* _obstack_chunk::prev -->
        <var-decl name='prev' type-id='type-id-59' visibility='default' filepath='../.././gcc/../include/obstack.h' line='160' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- char _obstack_chunk::contents[4] -->
        <var-decl name='contents' type-id='type-id-10' visibility='default' filepath='../.././gcc/../include/obstack.h' line='161' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_hashnode -->
    <class-decl name='cpp_hashnode' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='676' column='1' id='type-id-78'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- ht_identifier cpp_hashnode::ident -->
        <var-decl name='ident' type-id='type-id-79' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='677' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int cpp_hashnode::is_directive -->
        <var-decl name='is_directive' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='678' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1'>
        <!-- unsigned int cpp_hashnode::directive_index -->
        <var-decl name='directive_index' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='679' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='136'>
        <!-- unsigned char cpp_hashnode::rid_code -->
        <var-decl name='rid_code' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='682' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='16'>
        <!-- node_type cpp_hashnode::type -->
        <var-decl name='type' type-id='type-id-80' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='683' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='22'>
        <!-- unsigned int cpp_hashnode::flags -->
        <var-decl name='flags' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='684' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- _cpp_hashnode_value cpp_hashnode::value -->
        <var-decl name='value' type-id='type-id-81' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='686' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef unsigned long int __dev_t -->
    <typedef-decl name='__dev_t' type-id='type-id-28' filepath='/usr/include/bits/types.h' line='134' column='1' id='type-id-63'/>
    <!-- typedef unsigned long int __ino_t -->
    <typedef-decl name='__ino_t' type-id='type-id-28' filepath='/usr/include/bits/types.h' line='137' column='1' id='type-id-64'/>
    <!-- typedef unsigned long int __nlink_t -->
    <typedef-decl name='__nlink_t' type-id='type-id-28' filepath='/usr/include/bits/types.h' line='140' column='1' id='type-id-65'/>
    <!-- typedef unsigned int __mode_t -->
    <typedef-decl name='__mode_t' type-id='type-id-13' filepath='/usr/include/bits/types.h' line='139' column='1' id='type-id-66'/>
    <!-- typedef unsigned int __uid_t -->
    <typedef-decl name='__uid_t' type-id='type-id-13' filepath='/usr/include/bits/types.h' line='135' column='1' id='type-id-67'/>
    <!-- typedef unsigned int __gid_t -->
    <typedef-decl name='__gid_t' type-id='type-id-13' filepath='/usr/include/bits/types.h' line='136' column='1' id='type-id-68'/>
    <!-- typedef long int __blksize_t -->
    <typedef-decl name='__blksize_t' type-id='type-id-21' filepath='/usr/include/bits/types.h' line='164' column='1' id='type-id-69'/>
    <!-- typedef long int __blkcnt_t -->
    <typedef-decl name='__blkcnt_t' type-id='type-id-21' filepath='/usr/include/bits/types.h' line='169' column='1' id='type-id-70'/>
    <!-- struct timespec -->
    <class-decl name='timespec' size-in-bits='128' is-struct='yes' visibility='default' filepath='/usr/include/time.h' line='120' column='1' id='type-id-71'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- __time_t timespec::tv_sec -->
        <var-decl name='tv_sec' type-id='type-id-82' visibility='default' filepath='/usr/include/time.h' line='122' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long int timespec::tv_nsec -->
        <var-decl name='tv_nsec' type-id='type-id-21' visibility='default' filepath='/usr/include/time.h' line='123' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef long int __time_t -->
    <typedef-decl name='__time_t' type-id='type-id-21' filepath='/usr/include/bits/types.h' line='149' column='1' id='type-id-82'/>
    <!-- typedef void (int)* __sighandler_t -->
    <typedef-decl name='__sighandler_t' type-id='type-id-83' filepath='/usr/include/signal.h' line='84' column='1' id='type-id-84'/>
    <!-- typedef __anonymous_struct__ output_buffer -->
    <typedef-decl name='output_buffer' type-id='type-id-85' filepath='../.././gcc/pretty-print.h' line='100' column='1' id='type-id-86'/>
    <!-- struct {obstack formatted_obstack; obstack chunk_obstack; obstack* obstack; chunk_info* cur_chunk_array; FILE* stream; int line_length; char digit_buffer[128];} -->
    <class-decl name='__anonymous_struct__' size-in-bits='2688' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-86' visibility='default' filepath='../.././gcc/pretty-print.h' line='76' column='1' id='type-id-85'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- obstack formatted_obstack -->
        <var-decl name='formatted_obstack' type-id='type-id-58' visibility='default' filepath='../.././gcc/pretty-print.h' line='78' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- obstack chunk_obstack -->
        <var-decl name='chunk_obstack' type-id='type-id-58' visibility='default' filepath='../.././gcc/pretty-print.h' line='82' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- obstack* obstack -->
        <var-decl name='obstack' type-id='type-id-87' visibility='default' filepath='../.././gcc/pretty-print.h' line='86' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- chunk_info* cur_chunk_array -->
        <var-decl name='cur_chunk_array' type-id='type-id-88' visibility='default' filepath='../.././gcc/pretty-print.h' line='89' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- FILE* stream -->
        <var-decl name='stream' type-id='type-id-89' visibility='default' filepath='../.././gcc/pretty-print.h' line='92' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1600'>
        <!-- int line_length -->
        <var-decl name='line_length' type-id='type-id-18' visibility='default' filepath='../.././gcc/pretty-print.h' line='95' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1632'>
        <!-- char digit_buffer[128] -->
        <var-decl name='digit_buffer' type-id='type-id-3' visibility='default' filepath='../.././gcc/pretty-print.h' line='99' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct chunk_info -->
    <class-decl name='chunk_info' size-in-bits='3904' is-struct='yes' visibility='default' filepath='../.././gcc/pretty-print.h' line='59' column='1' id='type-id-90'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- chunk_info* chunk_info::prev -->
        <var-decl name='prev' type-id='type-id-88' visibility='default' filepath='../.././gcc/pretty-print.h' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* chunk_info::args[60] -->
        <var-decl name='args' type-id='type-id-16' visibility='default' filepath='../.././gcc/pretty-print.h' line='70' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __anonymous_enum__ pp_padding -->
    <typedef-decl name='pp_padding' type-id='type-id-91' filepath='../.././gcc/pretty-print.h' line='108' column='1' id='type-id-35'/>
    <!-- enum __anonymous_enum__ -->
    <enum-decl name='__anonymous_enum__' is-anonymous='yes' linkage-name='10pp_padding' filepath='../.././gcc/pretty-print.h' line='106' column='1' id='type-id-91'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='pp_none' value='0'/>
      <enumerator name='pp_before' value='1'/>
      <enumerator name='pp_after' value='2'/>
    </enum-decl>
    <!-- typedef __anonymous_struct__1 pp_wrapping_mode_t -->
    <typedef-decl name='pp_wrapping_mode_t' type-id='type-id-92' filepath='../.././gcc/pretty-print.h' line='120' column='1' id='type-id-36'/>
    <!-- struct {diagnostic_prefixing_rule_t rule; int line_cutoff;} -->
    <class-decl name='__anonymous_struct__1' size-in-bits='64' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-36' visibility='default' filepath='../.././gcc/pretty-print.h' line='113' column='1' id='type-id-92'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- diagnostic_prefixing_rule_t rule -->
        <var-decl name='rule' type-id='type-id-93' visibility='default' filepath='../.././gcc/pretty-print.h' line='115' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- int line_cutoff -->
        <var-decl name='line_cutoff' type-id='type-id-18' visibility='default' filepath='../.././gcc/pretty-print.h' line='119' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __anonymous_enum__1 diagnostic_prefixing_rule_t -->
    <typedef-decl name='diagnostic_prefixing_rule_t' type-id='type-id-94' filepath='../.././gcc/pretty-print.h' line='52' column='1' id='type-id-93'/>
    <!-- enum __anonymous_enum__1 -->
    <enum-decl name='__anonymous_enum__1' is-anonymous='yes' linkage-name='27diagnostic_prefixing_rule_t' filepath='../.././gcc/pretty-print.h' line='48' column='1' id='type-id-94'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='DIAGNOSTICS_SHOW_PREFIX_ONCE' value='0'/>
      <enumerator name='DIAGNOSTICS_SHOW_PREFIX_NEVER' value='1'/>
      <enumerator name='DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE' value='2'/>
    </enum-decl>
    <!-- typedef bool (pretty_printer*, text_info*, const char*, int, bool, bool, bool)* printer_fn -->
    <typedef-decl name='printer_fn' type-id='type-id-95' filepath='../.././gcc/pretty-print.h' line='136' column='1' id='type-id-37'/>
    <!-- typedef pretty_print_info pretty_printer -->
    <typedef-decl name='pretty_printer' type-id='type-id-33' filepath='../.././gcc/pretty-print.h' line='135' column='1' id='type-id-96'/>
    <!-- typedef __anonymous_struct__2 text_info -->
    <typedef-decl name='text_info' type-id='type-id-97' filepath='../.././gcc/pretty-print.h' line='40' column='1' id='type-id-74'/>
    <!-- struct {const char* format_spec; va_list* args_ptr; int err_no; location_t* locus; void** x_data;} -->
    <class-decl name='__anonymous_struct__2' size-in-bits='320' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-74' visibility='default' filepath='../.././gcc/pretty-print.h' line='34' column='1' id='type-id-97'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* format_spec -->
        <var-decl name='format_spec' type-id='type-id-15' visibility='default' filepath='../.././gcc/pretty-print.h' line='35' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- va_list* args_ptr -->
        <var-decl name='args_ptr' type-id='type-id-98' visibility='default' filepath='../.././gcc/pretty-print.h' line='36' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int err_no -->
        <var-decl name='err_no' type-id='type-id-18' visibility='default' filepath='../.././gcc/pretty-print.h' line='37' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- location_t* locus -->
        <var-decl name='locus' type-id='type-id-99' visibility='default' filepath='../.././gcc/pretty-print.h' line='38' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- void** x_data -->
        <var-decl name='x_data' type-id='type-id-100' visibility='default' filepath='../.././gcc/pretty-print.h' line='39' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __gnuc_va_list va_list -->
    <typedef-decl name='va_list' type-id='type-id-101' filepath='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/prev-gcc/include/stdarg.h' line='102' column='1' id='type-id-102'/>
    <!-- typedef typedef __va_list_tag __va_list_tag[1] __gnuc_va_list -->
    <typedef-decl name='__gnuc_va_list' type-id='type-id-25' filepath='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/prev-gcc/include/stdarg.h' line='40' column='1' id='type-id-101'/>
    <!-- typedef source_location location_t -->
    <typedef-decl name='location_t' type-id='type-id-103' filepath='../.././gcc/input.h' line='44' column='1' id='type-id-75'/>
    <!-- struct line_map -->
    <class-decl name='line_map' size-in-bits='320' is-struct='yes' visibility='default' filepath='../.././libcpp/include/line-map.h' line='204' column='1' id='type-id-104'>
      <member-type access='public'>
        <!-- union line_map::map_u -->
        <union-decl name='map_u' size-in-bits='256' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='210' column='1' id='type-id-105'>
          <data-member access='public'>
            <!-- line_map_ordinary line_map::map_u::ordinary -->
            <var-decl name='ordinary' type-id='type-id-106' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='211' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- line_map_macro line_map::map_u::macro -->
            <var-decl name='macro' type-id='type-id-107' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='212' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- source_location line_map::start_location -->
        <var-decl name='start_location' type-id='type-id-103' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='205' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- lc_reason line_map::reason -->
        <var-decl name='reason' type-id='type-id-108' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='208' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- line_map::map_u line_map::d -->
        <var-decl name='d' type-id='type-id-105' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='213' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef unsigned int source_location -->
    <typedef-decl name='source_location' type-id='type-id-13' filepath='../.././gcc/../libcpp/include/line-map.h' line='51' column='1' id='type-id-103'/>
    <!-- typedef __anonymous_enum__2 diagnostic_t -->
    <typedef-decl name='diagnostic_t' type-id='type-id-109' filepath='../.././gcc/diagnostic-core.h' line='40' column='1' id='type-id-76'/>
    <!-- enum __anonymous_enum__2 -->
    <enum-decl name='__anonymous_enum__2' is-anonymous='yes' linkage-name='12diagnostic_t' filepath='../.././gcc/diagnostic-core.h' line='32' column='1' id='type-id-109'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='DK_UNSPECIFIED' value='0'/>
      <enumerator name='DK_IGNORED' value='1'/>
      <enumerator name='DK_FATAL' value='2'/>
      <enumerator name='DK_ICE' value='3'/>
      <enumerator name='DK_ERROR' value='4'/>
      <enumerator name='DK_SORRY' value='5'/>
      <enumerator name='DK_WARNING' value='6'/>
      <enumerator name='DK_ANACHRONISM' value='7'/>
      <enumerator name='DK_NOTE' value='8'/>
      <enumerator name='DK_DEBUG' value='9'/>
      <enumerator name='DK_PEDWARN' value='10'/>
      <enumerator name='DK_PERMERROR' value='11'/>
      <enumerator name='DK_LAST_DIAGNOSTIC_KIND' value='12'/>
      <enumerator name='DK_POP' value='13'/>
    </enum-decl>
    <!-- typedef diagnostic_classification_change_t diagnostic_classification_change_t -->
    <typedef-decl name='diagnostic_classification_change_t' type-id='type-id-110' filepath='../.././gcc/diagnostic.h' line='52' column='1' id='type-id-111'/>
    <!-- struct diagnostic_classification_change_t -->
    <class-decl name='diagnostic_classification_change_t' size-in-bits='96' is-struct='yes' visibility='default' filepath='../.././gcc/diagnostic.h' line='47' column='1' id='type-id-110'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- location_t diagnostic_classification_change_t::location -->
        <var-decl name='location' type-id='type-id-75' visibility='default' filepath='../.././gcc/diagnostic.h' line='49' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- int diagnostic_classification_change_t::option -->
        <var-decl name='option' type-id='type-id-18' visibility='default' filepath='../.././gcc/diagnostic.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- diagnostic_t diagnostic_classification_change_t::kind -->
        <var-decl name='kind' type-id='type-id-76' visibility='default' filepath='../.././gcc/diagnostic.h' line='51' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef void (diagnostic_context*, diagnostic_info*)* diagnostic_starter_fn -->
    <typedef-decl name='diagnostic_starter_fn' type-id='type-id-112' filepath='../.././gcc/diagnostic.h' line='55' column='1' id='type-id-43'/>
    <!-- typedef diagnostic_context diagnostic_context -->
    <typedef-decl name='diagnostic_context' type-id='type-id-38' filepath='../.././gcc/coretypes.h' line='74' column='1' id='type-id-113'/>
    <!-- typedef diagnostic_info diagnostic_info -->
    <typedef-decl name='diagnostic_info' type-id='type-id-73' filepath='../.././gcc/diagnostic.h' line='42' column='1' id='type-id-114'/>
    <!-- typedef diagnostic_starter_fn diagnostic_finalizer_fn -->
    <typedef-decl name='diagnostic_finalizer_fn' type-id='type-id-43' filepath='../.././gcc/diagnostic.h' line='57' column='1' id='type-id-44'/>
    <!-- struct line_map_ordinary -->
    <class-decl name='line_map_ordinary' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='71' column='1' id='type-id-106'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* line_map_ordinary::to_file -->
        <var-decl name='to_file' type-id='type-id-15' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='72' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- linenum_type line_map_ordinary::to_line -->
        <var-decl name='to_line' type-id='type-id-115' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='73' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- int line_map_ordinary::included_from -->
        <var-decl name='included_from' type-id='type-id-18' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='78' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char line_map_ordinary::sysp -->
        <var-decl name='sysp' type-id='type-id-27' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='84' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8'>
        <!-- unsigned int line_map_ordinary::column_bits -->
        <var-decl name='column_bits' type-id='type-id-13' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='87' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef unsigned int linenum_type -->
    <typedef-decl name='linenum_type' type-id='type-id-13' filepath='../.././gcc/../libcpp/include/line-map.h' line='48' column='1' id='type-id-115'/>
    <!-- struct line_map_macro -->
    <class-decl name='line_map_macro' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='105' column='1' id='type-id-107'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_hashnode* line_map_macro::macro -->
        <var-decl name='macro' type-id='type-id-116' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='110' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int line_map_macro::n_tokens -->
        <var-decl name='n_tokens' type-id='type-id-13' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='113' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- source_location* line_map_macro::macro_locations -->
        <var-decl name='macro_locations' type-id='type-id-117' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='168' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- source_location line_map_macro::expansion -->
        <var-decl name='expansion' type-id='type-id-103' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='175' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum lc_reason -->
    <enum-decl name='lc_reason' filepath='../.././gcc/../libcpp/include/line-map.h' line='37' column='1' id='type-id-108'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='LC_ENTER' value='0'/>
      <enumerator name='LC_LEAVE' value='1'/>
      <enumerator name='LC_RENAME' value='2'/>
      <enumerator name='LC_RENAME_VERBATIM' value='3'/>
      <enumerator name='LC_ENTER_MACRO' value='4'/>
    </enum-decl>
    <!-- FILE* -->
    <pointer-type-def type-id='type-id-50' size-in-bits='64' id='type-id-89'/>
    <!-- _IO_FILE* -->
    <pointer-type-def type-id='type-id-49' size-in-bits='64' id='type-id-53'/>
    <!-- _IO_lock_t* -->
    <pointer-type-def type-id='type-id-72' size-in-bits='64' id='type-id-55'/>
    <!-- _IO_marker* -->
    <pointer-type-def type-id='type-id-57' size-in-bits='64' id='type-id-52'/>
    <!-- _obstack_chunk* -->
    <pointer-type-def type-id='type-id-77' size-in-bits='64' id='type-id-59'/>
    <!-- _obstack_chunk* (void*, long int)* -->
    <pointer-type-def type-id='type-id-118' size-in-bits='64' id='type-id-60'/>
    <!-- bool (pretty_printer*, text_info*, const char*, int, bool, bool, bool)* -->
    <pointer-type-def type-id='type-id-119' size-in-bits='64' id='type-id-95'/>
    <!-- char* -->
    <pointer-type-def type-id='type-id-2' size-in-bits='64' id='type-id-51'/>
    <!-- char* (diagnostic_context*, int, typedef diagnostic_t, typedef diagnostic_t)* -->
    <pointer-type-def type-id='type-id-120' size-in-bits='64' id='type-id-47'/>
    <!-- char* const -->
    <qualified-type-def type-id='type-id-51' const='yes' id='type-id-121'/>
    <!-- char* const* -->
    <pointer-type-def type-id='type-id-121' size-in-bits='64' id='type-id-122'/>
    <!-- char** -->
    <pointer-type-def type-id='type-id-51' size-in-bits='64' id='type-id-123'/>
    <!-- char*** -->
    <pointer-type-def type-id='type-id-123' size-in-bits='64' id='type-id-124'/>
    <!-- chunk_info* -->
    <pointer-type-def type-id='type-id-90' size-in-bits='64' id='type-id-88'/>
    <!-- const char -->
    <qualified-type-def type-id='type-id-2' const='yes' id='type-id-125'/>
    <!-- const char* -->
    <pointer-type-def type-id='type-id-125' size-in-bits='64' id='type-id-15'/>
    <!-- const line_map -->
    <qualified-type-def type-id='type-id-104' const='yes' id='type-id-126'/>
    <!-- const line_map* -->
    <pointer-type-def type-id='type-id-126' size-in-bits='64' id='type-id-48'/>
    <!-- cpp_hashnode* -->
    <pointer-type-def type-id='type-id-78' size-in-bits='64' id='type-id-116'/>
    <!-- diagnostic_classification_change_t* -->
    <pointer-type-def type-id='type-id-111' size-in-bits='64' id='type-id-41'/>
    <!-- diagnostic_context* -->
    <pointer-type-def type-id='type-id-113' size-in-bits='64' id='type-id-127'/>
    <!-- diagnostic_info* -->
    <pointer-type-def type-id='type-id-114' size-in-bits='64' id='type-id-128'/>
    <!-- diagnostic_t* -->
    <pointer-type-def type-id='type-id-76' size-in-bits='64' id='type-id-40'/>
    <!-- int (int, void*)* -->
    <pointer-type-def type-id='type-id-129' size-in-bits='64' id='type-id-46'/>
    <!-- int* -->
    <pointer-type-def type-id='type-id-18' size-in-bits='64' id='type-id-42'/>
    <!-- location_t* -->
    <pointer-type-def type-id='type-id-75' size-in-bits='64' id='type-id-99'/>
    <!-- obstack* -->
    <pointer-type-def type-id='type-id-58' size-in-bits='64' id='type-id-87'/>
    <!-- output_buffer* -->
    <pointer-type-def type-id='type-id-86' size-in-bits='64' id='type-id-34'/>
    <!-- pex_obj* -->
    <pointer-type-def type-id='type-id-130' size-in-bits='64' id='type-id-131'/>
    <!-- pretty_printer* -->
    <pointer-type-def type-id='type-id-96' size-in-bits='64' id='type-id-39'/>
    <!-- source_location* -->
    <pointer-type-def type-id='type-id-103' size-in-bits='64' id='type-id-117'/>
    <!-- stat* -->
    <pointer-type-def type-id='type-id-62' size-in-bits='64' id='type-id-132'/>
    <!-- text_info* -->
    <pointer-type-def type-id='type-id-74' size-in-bits='64' id='type-id-133'/>
    <!-- typedef __va_list_tag __va_list_tag* -->
    <pointer-type-def type-id='type-id-12' size-in-bits='64' id='type-id-134'/>
    <!-- va_list* -->
    <pointer-type-def type-id='type-id-102' size-in-bits='64' id='type-id-98'/>
    <!-- void ()* -->
    <pointer-type-def type-id='type-id-135' size-in-bits='64' id='type-id-136'/>
    <!-- void (diagnostic_context*, const char*, va_list*)* -->
    <pointer-type-def type-id='type-id-137' size-in-bits='64' id='type-id-45'/>
    <!-- void (diagnostic_context*, diagnostic_info*)* -->
    <pointer-type-def type-id='type-id-138' size-in-bits='64' id='type-id-112'/>
    <!-- void (int)* -->
    <pointer-type-def type-id='type-id-139' size-in-bits='64' id='type-id-83'/>
    <!-- void (void*)* -->
    <pointer-type-def type-id='type-id-140' size-in-bits='64' id='type-id-141'/>
    <!-- void (void*, _obstack_chunk*)* -->
    <pointer-type-def type-id='type-id-142' size-in-bits='64' id='type-id-61'/>
    <!-- void* -->
    <pointer-type-def type-id='type-id-31' size-in-bits='64' id='type-id-14'/>
    <!-- void* (long int)* -->
    <pointer-type-def type-id='type-id-143' size-in-bits='64' id='type-id-144'/>
    <!-- void** -->
    <pointer-type-def type-id='type-id-14' size-in-bits='64' id='type-id-100'/>
    <!-- int strcoll(const char*, const char*) -->
    <function-decl name='strcoll' filepath='/usr/include/string.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- char* strerror(int) -->
    <function-decl name='strerror' filepath='/usr/include/string.h' line='413' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* strtok(char*, const char*) -->
    <function-decl name='strtok' filepath='/usr/include/string.h' line='348' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- size_t strxfrm(char*, const char*, size_t) -->
    <function-decl name='strxfrm' filepath='/usr/include/string.h' line='153' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- void notice(const char*, ...) -->
    <function-decl name='notice' mangled-name='_Z6noticePKcz' filepath='../.././gcc/collect2.c' line='423' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z6noticePKcz'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='cmsgid' filepath='../.././gcc/collect2.c' line='423' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void notice_translated(const char*, ...) -->
    <function-decl name='notice_translated' mangled-name='_Z17notice_translatedPKcz' filepath='../.././gcc/collect2.c' line='434' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17notice_translatedPKcz'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='cmsgid' filepath='../.././gcc/collect2.c' line='423' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int file_exists(const char*) -->
    <function-decl name='file_exists' mangled-name='_Z11file_existsPKc' filepath='../.././gcc/collect2.c' line='475' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z11file_existsPKc'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././gcc/collect2.c' line='475' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void dump_file(const char*, FILE*) -->
    <function-decl name='dump_file' mangled-name='_Z9dump_filePKcP8_IO_FILE' filepath='../.././gcc/collect2.c' line='513' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9dump_filePKcP8_IO_FILE'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././gcc/collect2.c' line='513' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='to' filepath='../.././gcc/collect2.c' line='513' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int collect_wait(const char*, pex_obj*) -->
    <function-decl name='collect_wait' mangled-name='_Z12collect_waitPKcP7pex_obj' filepath='../.././gcc/collect2.c' line='1958' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12collect_waitPKcP7pex_obj'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='prog' filepath='../.././gcc/collect2.c' line='1958' column='1'/>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131' name='pex' filepath='../.././gcc/collect2.c' line='1958' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- pex_obj* collect_execute(const char*, char**, const char*, const char*, int) -->
    <function-decl name='collect_execute' mangled-name='_Z15collect_executePKcPPcS0_S0_i' filepath='../.././gcc/collect2.c' line='2004' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15collect_executePKcPPcS0_S0_i'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='prog' filepath='../.././gcc/collect2.c' line='2004' column='1'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123' name='argv' filepath='../.././gcc/collect2.c' line='2004' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='outname' filepath='../.././gcc/collect2.c' line='2004' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='errname' filepath='../.././gcc/collect2.c' line='2005' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='flags' filepath='../.././gcc/collect2.c' line='2005' column='1'/>
      <!-- pex_obj* -->
      <return type-id='type-id-131'/>
    </function-decl>
    <!-- int main(int, char**) -->
    <function-decl name='main' mangled-name='main' filepath='../.././gcc/collect2.c' line='1016' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='main'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='argc' filepath='../.././gcc/collect2.c' line='1016' column='1'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123' name='argv' filepath='../.././gcc/collect2.c' line='1016' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- const char* ldout -->
    <var-decl name='ldout' type-id='type-id-15' mangled-name='ldout' visibility='default' filepath='../.././gcc/collect2.c' line='208' column='1' elf-symbol-id='ldout'/>
    <!-- const char* lderrout -->
    <var-decl name='lderrout' type-id='type-id-15' mangled-name='lderrout' visibility='default' filepath='../.././gcc/collect2.c' line='209' column='1' elf-symbol-id='lderrout'/>
    <!-- const char* c_file_name -->
    <var-decl name='c_file_name' type-id='type-id-15' mangled-name='c_file_name' visibility='default' filepath='../.././gcc/collect2.c' line='216' column='1' elf-symbol-id='c_file_name'/>
    <!-- obstack temporary_obstack -->
    <var-decl name='temporary_obstack' type-id='type-id-58' mangled-name='temporary_obstack' visibility='default' filepath='../.././gcc/collect2.c' line='229' column='1' elf-symbol-id='temporary_obstack'/>
    <!-- char* temporary_firstobj -->
    <var-decl name='temporary_firstobj' type-id='type-id-51' mangled-name='temporary_firstobj' visibility='default' filepath='../.././gcc/collect2.c' line='230' column='1' elf-symbol-id='temporary_firstobj'/>
    <!-- bool vflag -->
    <var-decl name='vflag' type-id='type-id-1' mangled-name='vflag' visibility='default' filepath='../.././gcc/collect2.c' line='179' column='1' elf-symbol-id='vflag'/>
    <!-- bool debug -->
    <var-decl name='debug' type-id='type-id-1' mangled-name='debug' visibility='default' filepath='../.././gcc/collect2.c' line='197' column='1' elf-symbol-id='debug'/>
    <!-- int do_collecting -->
    <var-decl name='do_collecting' type-id='type-id-18' mangled-name='do_collecting' visibility='default' filepath='../.././gcc/collect2.c' line='147' column='1' elf-symbol-id='do_collecting'/>
    <!-- int no_demangle -->
    <var-decl name='no_demangle' type-id='type-id-18' mangled-name='no_demangle' visibility='default' filepath='../.././gcc/collect2.c' line='161' column='1' elf-symbol-id='no_demangle'/>
    <!-- bool helpflag -->
    <var-decl name='helpflag' type-id='type-id-1' mangled-name='helpflag' visibility='default' filepath='../.././gcc/collect2.c' line='198' column='1' elf-symbol-id='helpflag'/>
    <!-- int fprintf(FILE*, const char*, ...) -->
    <function-decl name='fprintf' filepath='/usr/include/stdio.h' line='355' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void _obstack_newchunk(obstack*, int) -->
    <function-decl name='_obstack_newchunk' filepath='../.././gcc/../include/obstack.h' line='191' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'obstack*' -->
      <parameter type-id='type-id-87'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- size_t strlen(const char*) -->
    <function-decl name='strlen' filepath='/usr/include/string.h' line='399' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- void* xmalloc(size_t) -->
    <function-decl name='xmalloc' filepath='../.././gcc/../include/libiberty.h' line='301' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- char* xstrdup(const char*) -->
    <function-decl name='xstrdup' filepath='../.././gcc/../include/libiberty.h' line='316' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* strncpy(char*, const char*, size_t) -->
    <function-decl name='strncpy' filepath='/usr/include/string.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- void free(void*) -->
    <function-decl name='free' filepath='/usr/include/malloc.h' line='66' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void* xcalloc(size_t, size_t) -->
    <function-decl name='xcalloc' filepath='../.././gcc/../include/libiberty.h' line='312' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- char* strcpy(char*, const char*) -->
    <function-decl name='strcpy' filepath='/usr/include/string.h' line='128' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- int strcmp(const char*, const char*) -->
    <function-decl name='strcmp' filepath='/usr/include/string.h' line='143' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- long int strtol(const char*, char**, int) -->
    <function-decl name='strtol' filepath='/usr/include/stdlib.h' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- long int -->
      <return type-id='type-id-21'/>
    </function-decl>
    <!-- FILE* fopen_unlocked(const char*, const char*) -->
    <function-decl name='fopen_unlocked' filepath='../.././gcc/../include/libiberty.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
    <!-- size_t fread_unlocked(void*, size_t, size_t, FILE*) -->
    <function-decl name='fread_unlocked' filepath='/usr/include/stdio.h' line='732' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- int fclose(FILE*) -->
    <function-decl name='fclose' filepath='/usr/include/stdio.h' line='236' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int memcmp(void*, void*, size_t) -->
    <function-decl name='memcmp' filepath='/usr/include/string.h' line='68' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int __xstat(int, const char*, stat*) -->
    <function-decl name='__xstat' filepath='/usr/include/sys/stat.h' line='403' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'stat*' -->
      <parameter type-id='type-id-132'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int access(const char*, int) -->
    <function-decl name='access' filepath='/usr/include/unistd.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- char* gettext(const char*) -->
    <function-decl name='gettext' filepath='/usr/include/libintl.h' line='40' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- int vfprintf(FILE*, const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-decl name='vfprintf' filepath='/usr/include/stdio.h' line='370' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='type-id-134'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- const char* lbasename(const char*) -->
    <function-decl name='lbasename' filepath='../.././gcc/../include/libiberty.h' line='121' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- int filename_ncmp(const char*, const char*, size_t) -->
    <function-decl name='filename_ncmp' filepath='../.././gcc/../include/filenames.h' line='84' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- char* concat(const char*, ...) -->
    <function-decl name='concat' filepath='../.././gcc/../include/libiberty.h' line='142' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- int unlink_if_ordinary(const char*) -->
    <function-decl name='unlink_if_ordinary' filepath='../.././gcc/../include/libiberty.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././gcc/collect2.c' line='475' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- __sighandler_t signal(int, __sighandler_t) -->
    <function-decl name='signal' filepath='/usr/include/signal.h' line='101' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'typedef __sighandler_t' -->
      <parameter type-id='type-id-84'/>
      <!-- typedef __sighandler_t -->
      <return type-id='type-id-84'/>
    </function-decl>
    <!-- int raise(int) -->
    <function-decl name='raise' filepath='/usr/include/signal.h' line='138' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int __uflow(_IO_FILE*) -->
    <function-decl name='__uflow' filepath='/usr/include/libio.h' line='417' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '_IO_FILE*' -->
      <parameter type-id='type-id-53'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void obstack_free(obstack*, void*) -->
    <function-decl name='obstack_free' filepath='../.././gcc/../include/obstack.h' line='210' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'obstack*' -->
      <parameter type-id='type-id-87'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int __overflow(_IO_FILE*, int) -->
    <function-decl name='__overflow' filepath='/usr/include/libio.h' line='418' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type '_IO_FILE*' -->
      <parameter type-id='type-id-53'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int fputs_unlocked(const char*, FILE*) -->
    <function-decl name='fputs_unlocked' filepath='/usr/include/stdio.h' line='721' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int fflush_unlocked(FILE*) -->
    <function-decl name='fflush_unlocked' filepath='/usr/include/stdio.h' line='251' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- char* strsignal(int) -->
    <function-decl name='strsignal' filepath='/usr/include/string.h' line='566' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- void exit(int) -->
    <function-decl name='exit' filepath='/usr/include/stdlib.h' line='544' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int pex_get_status(pex_obj*, int, int*) -->
    <function-decl name='pex_get_status' filepath='../.././gcc/../include/libiberty.h' line='552' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void pex_free(pex_obj*) -->
    <function-decl name='pex_free' filepath='../.././gcc/../include/libiberty.h' line='573' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int unlink(const char*) -->
    <function-decl name='unlink' filepath='/usr/include/unistd.h' line='845' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././gcc/collect2.c' line='475' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int strncmp(const char*, const char*, size_t) -->
    <function-decl name='strncmp' filepath='/usr/include/string.h' line='146' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- pex_obj* pex_init(int, const char*, const char*) -->
    <function-decl name='pex_init' filepath='../.././gcc/../include/libiberty.h' line='401' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- pex_obj* -->
      <return type-id='type-id-131'/>
    </function-decl>
    <!-- const char* pex_run(pex_obj*, int, const char*, char* const*, const char*, const char*, int*) -->
    <function-decl name='pex_run' filepath='../.././gcc/../include/libiberty.h' line='496' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'char* const*' -->
      <parameter type-id='type-id-122'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- int* __errno_location() -->
    <function-decl name='__errno_location' filepath='/usr/include/bits/errno.h' line='47' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- int* -->
      <return type-id='type-id-42'/>
    </function-decl>
    <!-- FILE* pex_read_output(pex_obj*, int) -->
    <function-decl name='pex_read_output' filepath='../.././gcc/../include/libiberty.h' line='538' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
    <!-- char* fgets_unlocked(char*, int, FILE*) -->
    <function-decl name='fgets_unlocked' filepath='/usr/include/stdio.h' line='644' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* make_temp_file(const char*) -->
    <function-decl name='make_temp_file' filepath='../.././gcc/../include/libiberty.h' line='233' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- int writeargv(char**, FILE*) -->
    <function-decl name='writeargv' filepath='../.././gcc/../include/libiberty.h' line='92' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- char* getenv(const char*) -->
    <function-decl name='getenv' filepath='/usr/include/stdlib.h' line='567' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- void xmalloc_set_program_name(const char*) -->
    <function-decl name='xmalloc_set_program_name' filepath='../.././gcc/../include/libiberty.h' line='292' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void expandargv(int*, char***) -->
    <function-decl name='expandargv' filepath='../.././gcc/../include/libiberty.h' line='88' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- parameter of type 'char***' -->
      <parameter type-id='type-id-124'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int atexit(void ()*) -->
    <function-decl name='atexit' filepath='/usr/include/stdlib.h' line='518' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void ()*' -->
      <parameter type-id='type-id-136'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void unlock_std_streams() -->
    <function-decl name='unlock_std_streams' filepath='../.././gcc/../include/libiberty.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int _obstack_begin(obstack*, int, int, void* (long int)*, void (void*)*) -->
    <function-decl name='_obstack_begin' filepath='../.././gcc/../include/obstack.h' line='193' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'obstack*' -->
      <parameter type-id='type-id-87'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'void* (long int)*' -->
      <parameter type-id='type-id-144'/>
      <!-- parameter of type 'void (void*)*' -->
      <parameter type-id='type-id-141'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int printf(const char*, ...) -->
    <function-decl name='printf' filepath='/usr/include/stdio.h' line='361' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- char* ngettext(const char*, const char*, unsigned long int) -->
    <function-decl name='ngettext' filepath='/usr/include/libintl.h' line='62' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'unsigned long int' -->
      <parameter type-id='type-id-28'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- struct ht_identifier -->
    <class-decl name='ht_identifier' size-in-bits='128' is-struct='yes' visibility='default' filepath='../.././libcpp/include/symtab.h' line='32' column='1' id='type-id-79'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const unsigned char* ht_identifier::str -->
        <var-decl name='str' type-id='type-id-145' visibility='default' filepath='../.././libcpp/include/symtab.h' line='33' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int ht_identifier::len -->
        <var-decl name='len' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='34' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned int ht_identifier::hash_value -->
        <var-decl name='hash_value' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='35' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct pex_obj -->
    <class-decl name='pex_obj' size-in-bits='1152' is-struct='yes' visibility='default' filepath='../.././libiberty/pex-common.h' line='54' column='1' id='type-id-130'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int pex_obj::flags -->
        <var-decl name='flags' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* pex_obj::pname -->
        <var-decl name='pname' type-id='type-id-15' visibility='default' filepath='../.././libiberty/pex-common.h' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char* pex_obj::tempbase -->
        <var-decl name='tempbase' type-id='type-id-15' visibility='default' filepath='../.././libiberty/pex-common.h' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int pex_obj::next_input -->
        <var-decl name='next_input' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- char* pex_obj::next_input_name -->
        <var-decl name='next_input_name' type-id='type-id-51' visibility='default' filepath='../.././libiberty/pex-common.h' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int pex_obj::next_input_name_allocated -->
        <var-decl name='next_input_name_allocated' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='352'>
        <!-- int pex_obj::stderr_pipe -->
        <var-decl name='stderr_pipe' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- int pex_obj::count -->
        <var-decl name='count' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='71' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- pid_t* pex_obj::children -->
        <var-decl name='children' type-id='type-id-146' visibility='default' filepath='../.././libiberty/pex-common.h' line='73' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- int* pex_obj::status -->
        <var-decl name='status' type-id='type-id-42' visibility='default' filepath='../.././libiberty/pex-common.h' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- pex_time* pex_obj::time -->
        <var-decl name='time' type-id='type-id-147' visibility='default' filepath='../.././libiberty/pex-common.h' line='77' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- int pex_obj::number_waited -->
        <var-decl name='number_waited' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='79' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- FILE* pex_obj::input_file -->
        <var-decl name='input_file' type-id='type-id-89' visibility='default' filepath='../.././libiberty/pex-common.h' line='81' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- FILE* pex_obj::read_output -->
        <var-decl name='read_output' type-id='type-id-89' visibility='default' filepath='../.././libiberty/pex-common.h' line='83' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- FILE* pex_obj::read_err -->
        <var-decl name='read_err' type-id='type-id-89' visibility='default' filepath='../.././libiberty/pex-common.h' line='85' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- int pex_obj::remove_count -->
        <var-decl name='remove_count' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='87' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- char** pex_obj::remove -->
        <var-decl name='remove' type-id='type-id-123' visibility='default' filepath='../.././libiberty/pex-common.h' line='90' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- const pex_funcs* pex_obj::funcs -->
        <var-decl name='funcs' type-id='type-id-148' visibility='default' filepath='../.././libiberty/pex-common.h' line='92' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- void* pex_obj::sysdep -->
        <var-decl name='sysdep' type-id='type-id-14' visibility='default' filepath='../.././libiberty/pex-common.h' line='94' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum node_type -->
    <enum-decl name='node_type' filepath='../.././libcpp/include/cpplib.h' line='614' column='1' id='type-id-80'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='NT_VOID' value='0'/>
      <enumerator name='NT_MACRO' value='1'/>
      <enumerator name='NT_ASSERTION' value='2'/>
    </enum-decl>
    <!-- _obstack_chunk* (void*, long int) -->
    <function-type size-in-bits='64' id='type-id-118'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-21'/>
      <!-- _obstack_chunk* -->
      <return type-id='type-id-59'/>
    </function-type>
    <!-- bool (pretty_printer*, text_info*, const char*, int, bool, bool, bool) -->
    <function-type size-in-bits='64' id='type-id-119'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- parameter of type 'text_info*' -->
      <parameter type-id='type-id-133'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-type>
    <!-- char* (diagnostic_context*, int, diagnostic_t, diagnostic_t) -->
    <function-type size-in-bits='64' id='type-id-120'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'typedef diagnostic_t' -->
      <parameter type-id='type-id-76'/>
      <!-- parameter of type 'typedef diagnostic_t' -->
      <parameter type-id='type-id-76'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-type>
    <!-- int (int, void*) -->
    <function-type size-in-bits='64' id='type-id-129'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- void () -->
    <function-type size-in-bits='64' id='type-id-135'>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (diagnostic_context*, const char*, va_list*) -->
    <function-type size-in-bits='64' id='type-id-137'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'va_list*' -->
      <parameter type-id='type-id-98'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (diagnostic_context*, diagnostic_info*) -->
    <function-type size-in-bits='64' id='type-id-138'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127'/>
      <!-- parameter of type 'diagnostic_info*' -->
      <parameter type-id='type-id-128'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (int) -->
    <function-type size-in-bits='64' id='type-id-139'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (void*) -->
    <function-type size-in-bits='64' id='type-id-140'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (void*, _obstack_chunk*) -->
    <function-type size-in-bits='64' id='type-id-142'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type '_obstack_chunk*' -->
      <parameter type-id='type-id-59'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void* (long int) -->
    <function-type size-in-bits='64' id='type-id-143'>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-21'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- union _cpp_hashnode_value -->
    <union-decl name='_cpp_hashnode_value' size-in-bits='64' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='665' column='1' id='type-id-81'>
      <data-member access='public'>
        <!-- cpp_macro* _cpp_hashnode_value::macro -->
        <var-decl name='macro' type-id='type-id-149' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='667' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- answer* _cpp_hashnode_value::answers -->
        <var-decl name='answers' type-id='type-id-150' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='669' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- cpp_builtin_type _cpp_hashnode_value::builtin -->
        <var-decl name='builtin' type-id='type-id-151' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='671' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- unsigned short int _cpp_hashnode_value::arg_index -->
        <var-decl name='arg_index' type-id='type-id-29' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='673' column='1'/>
      </data-member>
    </union-decl>
    <!-- answer* -->
    <pointer-type-def type-id='type-id-152' size-in-bits='64' id='type-id-150'/>
    <!-- const pex_funcs* -->
    <pointer-type-def type-id='type-id-153' size-in-bits='64' id='type-id-148'/>
    <!-- const unsigned char* -->
    <pointer-type-def type-id='type-id-154' size-in-bits='64' id='type-id-145'/>
    <!-- cpp_macro* -->
    <pointer-type-def type-id='type-id-155' size-in-bits='64' id='type-id-149'/>
    <!-- enum cpp_builtin_type -->
    <enum-decl name='cpp_builtin_type' filepath='../.././libcpp/include/cpplib.h' line='623' column='1' id='type-id-151'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='BT_SPECLINE' value='0'/>
      <enumerator name='BT_DATE' value='1'/>
      <enumerator name='BT_FILE' value='2'/>
      <enumerator name='BT_BASE_FILE' value='3'/>
      <enumerator name='BT_INCLUDE_LEVEL' value='4'/>
      <enumerator name='BT_TIME' value='5'/>
      <enumerator name='BT_STDC' value='6'/>
      <enumerator name='BT_PRAGMA' value='7'/>
      <enumerator name='BT_TIMESTAMP' value='8'/>
      <enumerator name='BT_COUNTER' value='9'/>
      <enumerator name='BT_FIRST_USER' value='10'/>
      <enumerator name='BT_LAST_USER' value='41'/>
    </enum-decl>
    <!-- pex_time* -->
    <pointer-type-def type-id='type-id-156' size-in-bits='64' id='type-id-147'/>
    <!-- pid_t* -->
    <pointer-type-def type-id='type-id-157' size-in-bits='64' id='type-id-146'/>
    <!-- struct answer -->
    <class-decl name='answer' size-in-bits='320' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='28' column='1' id='type-id-152'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- answer* answer::next -->
        <var-decl name='next' type-id='type-id-150' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='29' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int answer::count -->
        <var-decl name='count' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='30' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- cpp_token answer::first[1] -->
        <var-decl name='first' type-id='type-id-158' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='31' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct pex_time -->
    <class-decl name='pex_time' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='559' column='1' id='type-id-156'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned long int pex_time::user_seconds -->
        <var-decl name='user_seconds' type-id='type-id-28' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='561' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned long int pex_time::user_microseconds -->
        <var-decl name='user_microseconds' type-id='type-id-28' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='562' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned long int pex_time::system_seconds -->
        <var-decl name='system_seconds' type-id='type-id-28' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='563' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned long int pex_time::system_microseconds -->
        <var-decl name='system_microseconds' type-id='type-id-28' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='564' column='1'/>
      </data-member>
    </class-decl>
    <!-- const pex_funcs -->
    <qualified-type-def type-id='type-id-159' const='yes' id='type-id-153'/>
    <!-- const unsigned char -->
    <qualified-type-def type-id='type-id-27' const='yes' id='type-id-154'/>
    <!-- typedef cpp_macro cpp_macro -->
    <typedef-decl name='cpp_macro' type-id='type-id-160' filepath='../.././libcpp/include/cpplib.h' line='37' column='1' id='type-id-155'/>
    <!-- typedef __pid_t pid_t -->
    <typedef-decl name='pid_t' type-id='type-id-161' filepath='/usr/include/sys/types.h' line='99' column='1' id='type-id-157'/>
    <!-- struct cpp_macro -->
    <class-decl name='cpp_macro' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='36' column='1' id='type-id-160'>
      <member-type access='public'>
        <!-- union cpp_macro::cpp_macro_u -->
        <union-decl name='cpp_macro_u' size-in-bits='64' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='47' column='1' id='type-id-162'>
          <data-member access='public'>
            <!-- cpp_token* cpp_macro::cpp_macro_u::tokens -->
            <var-decl name='tokens' type-id='type-id-163' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='49' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- const unsigned char* cpp_macro::cpp_macro_u::text -->
            <var-decl name='text' type-id='type-id-145' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='50' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_hashnode** cpp_macro::params -->
        <var-decl name='params' type-id='type-id-164' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_macro::cpp_macro_u cpp_macro::exp -->
        <var-decl name='exp' type-id='type-id-162' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='51' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- source_location cpp_macro::line -->
        <var-decl name='line' type-id='type-id-103' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='54' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- unsigned int cpp_macro::count -->
        <var-decl name='count' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned short int cpp_macro::paramc -->
        <var-decl name='paramc' type-id='type-id-29' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='16'>
        <!-- unsigned int cpp_macro::fun_like -->
        <var-decl name='fun_like' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='17'>
        <!-- unsigned int cpp_macro::variadic -->
        <var-decl name='variadic' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='18'>
        <!-- unsigned int cpp_macro::syshdr -->
        <var-decl name='syshdr' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='19'>
        <!-- unsigned int cpp_macro::used -->
        <var-decl name='used' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='72' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='20'>
        <!-- unsigned int cpp_macro::traditional -->
        <var-decl name='traditional' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='21'>
        <!-- unsigned int cpp_macro::extra_tokens -->
        <var-decl name='extra_tokens' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='80' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct pex_funcs -->
    <class-decl name='pex_funcs' size-in-bits='576' is-struct='yes' visibility='default' filepath='../.././libiberty/pex-common.h' line='99' column='1' id='type-id-159'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int (pex_obj*, const char*, int)* pex_funcs::open_read -->
        <var-decl name='open_read' type-id='type-id-165' visibility='default' filepath='../.././libiberty/pex-common.h' line='103' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int (pex_obj*, const char*, int)* pex_funcs::open_write -->
        <var-decl name='open_write' type-id='type-id-165' visibility='default' filepath='../.././libiberty/pex-common.h' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- typedef pid_t (pex_obj*, int, const char*, char* const*, char* const*, int, int, int, int, const char**, int*)* pex_funcs::exec_child -->
        <var-decl name='exec_child' type-id='type-id-166' visibility='default' filepath='../.././libiberty/pex-common.h' line='117' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int (pex_obj*, int)* pex_funcs::close -->
        <var-decl name='close' type-id='type-id-167' visibility='default' filepath='../.././libiberty/pex-common.h' line='124' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- typedef pid_t (pex_obj*, typedef pid_t, int*, pex_time*, int, const char**, int*)* pex_funcs::wait -->
        <var-decl name='wait' type-id='type-id-168' visibility='default' filepath='../.././libiberty/pex-common.h' line='129' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int (pex_obj*, int*, int)* pex_funcs::pipe -->
        <var-decl name='pipe' type-id='type-id-169' visibility='default' filepath='../.././libiberty/pex-common.h' line='135' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- FILE* (pex_obj*, int, int)* pex_funcs::fdopenr -->
        <var-decl name='fdopenr' type-id='type-id-170' visibility='default' filepath='../.././libiberty/pex-common.h' line='139' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- FILE* (pex_obj*, int, int)* pex_funcs::fdopenw -->
        <var-decl name='fdopenw' type-id='type-id-170' visibility='default' filepath='../.././libiberty/pex-common.h' line='144' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- void (pex_obj*)* pex_funcs::cleanup -->
        <var-decl name='cleanup' type-id='type-id-171' visibility='default' filepath='../.././libiberty/pex-common.h' line='147' column='1'/>
      </data-member>
    </class-decl>
    <!-- cpp_token[1] -->
    <array-type-def dimensions='1' type-id='type-id-172' size-in-bits='192' id='type-id-158'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' type-id='type-id-4' id='type-id-7'/>
    </array-type-def>
    <!-- typedef int __pid_t -->
    <typedef-decl name='__pid_t' type-id='type-id-18' filepath='/usr/include/bits/types.h' line='143' column='1' id='type-id-161'/>
    <!-- FILE* (pex_obj*, int, int)* -->
    <pointer-type-def type-id='type-id-173' size-in-bits='64' id='type-id-170'/>
    <!-- struct cpp_token -->
    <class-decl name='cpp_token' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='223' column='1' id='type-id-172'>
      <member-type access='public'>
        <!-- union cpp_token::cpp_token_u -->
        <union-decl name='cpp_token_u' size-in-bits='128' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='228' column='1' id='type-id-174'>
          <data-member access='public'>
            <!-- cpp_identifier cpp_token::cpp_token_u::node -->
            <var-decl name='node' type-id='type-id-175' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='231' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- cpp_token* cpp_token::cpp_token_u::source -->
            <var-decl name='source' type-id='type-id-163' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='234' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- cpp_string cpp_token::cpp_token_u::str -->
            <var-decl name='str' type-id='type-id-176' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='237' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- cpp_macro_arg cpp_token::cpp_token_u::macro_arg -->
            <var-decl name='macro_arg' type-id='type-id-177' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='240' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- unsigned int cpp_token::cpp_token_u::token_no -->
            <var-decl name='token_no' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='244' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- unsigned int cpp_token::cpp_token_u::pragma -->
            <var-decl name='pragma' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='247' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- source_location cpp_token::src_loc -->
        <var-decl name='src_loc' type-id='type-id-103' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='224' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_ttype cpp_token::type -->
        <var-decl name='type' type-id='type-id-178' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='225' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='48'>
        <!-- unsigned short int cpp_token::flags -->
        <var-decl name='flags' type-id='type-id-29' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='226' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_token::cpp_token_u cpp_token::val -->
        <var-decl name='val' type-id='type-id-174' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='248' column='1'/>
      </data-member>
    </class-decl>
    <!-- cpp_hashnode** -->
    <pointer-type-def type-id='type-id-116' size-in-bits='64' id='type-id-164'/>
    <!-- cpp_token* -->
    <pointer-type-def type-id='type-id-172' size-in-bits='64' id='type-id-163'/>
    <!-- int (pex_obj*, const char*, int)* -->
    <pointer-type-def type-id='type-id-179' size-in-bits='64' id='type-id-165'/>
    <!-- int (pex_obj*, int)* -->
    <pointer-type-def type-id='type-id-180' size-in-bits='64' id='type-id-167'/>
    <!-- int (pex_obj*, int*, int)* -->
    <pointer-type-def type-id='type-id-181' size-in-bits='64' id='type-id-169'/>
    <!-- typedef pid_t (pex_obj*, int, const char*, char* const*, char* const*, int, int, int, int, const char**, int*)* -->
    <pointer-type-def type-id='type-id-182' size-in-bits='64' id='type-id-166'/>
    <!-- typedef pid_t (pex_obj*, typedef pid_t, int*, pex_time*, int, const char**, int*)* -->
    <pointer-type-def type-id='type-id-183' size-in-bits='64' id='type-id-168'/>
    <!-- void (pex_obj*)* -->
    <pointer-type-def type-id='type-id-184' size-in-bits='64' id='type-id-171'/>
    <!-- struct cpp_identifier -->
    <class-decl name='cpp_identifier' size-in-bits='64' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='212' column='1' id='type-id-175'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_hashnode* cpp_identifier::node -->
        <var-decl name='node' type-id='type-id-116' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='218' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_macro_arg -->
    <class-decl name='cpp_macro_arg' size-in-bits='32' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='206' column='1' id='type-id-177'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int cpp_macro_arg::arg_no -->
        <var-decl name='arg_no' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='208' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_string -->
    <class-decl name='cpp_string' size-in-bits='128' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='173' column='1' id='type-id-176'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int cpp_string::len -->
        <var-decl name='len' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='174' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const unsigned char* cpp_string::text -->
        <var-decl name='text' type-id='type-id-145' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='175' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum cpp_ttype -->
    <enum-decl name='cpp_ttype' filepath='../.././libcpp/include/cpplib.h' line='153' column='1' id='type-id-178'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='CPP_EQ' value='0'/>
      <enumerator name='CPP_NOT' value='1'/>
      <enumerator name='CPP_GREATER' value='2'/>
      <enumerator name='CPP_LESS' value='3'/>
      <enumerator name='CPP_PLUS' value='4'/>
      <enumerator name='CPP_MINUS' value='5'/>
      <enumerator name='CPP_MULT' value='6'/>
      <enumerator name='CPP_DIV' value='7'/>
      <enumerator name='CPP_MOD' value='8'/>
      <enumerator name='CPP_AND' value='9'/>
      <enumerator name='CPP_OR' value='10'/>
      <enumerator name='CPP_XOR' value='11'/>
      <enumerator name='CPP_RSHIFT' value='12'/>
      <enumerator name='CPP_LSHIFT' value='13'/>
      <enumerator name='CPP_COMPL' value='14'/>
      <enumerator name='CPP_AND_AND' value='15'/>
      <enumerator name='CPP_OR_OR' value='16'/>
      <enumerator name='CPP_QUERY' value='17'/>
      <enumerator name='CPP_COLON' value='18'/>
      <enumerator name='CPP_COMMA' value='19'/>
      <enumerator name='CPP_OPEN_PAREN' value='20'/>
      <enumerator name='CPP_CLOSE_PAREN' value='21'/>
      <enumerator name='CPP_EOF' value='22'/>
      <enumerator name='CPP_EQ_EQ' value='23'/>
      <enumerator name='CPP_NOT_EQ' value='24'/>
      <enumerator name='CPP_GREATER_EQ' value='25'/>
      <enumerator name='CPP_LESS_EQ' value='26'/>
      <enumerator name='CPP_PLUS_EQ' value='27'/>
      <enumerator name='CPP_MINUS_EQ' value='28'/>
      <enumerator name='CPP_MULT_EQ' value='29'/>
      <enumerator name='CPP_DIV_EQ' value='30'/>
      <enumerator name='CPP_MOD_EQ' value='31'/>
      <enumerator name='CPP_AND_EQ' value='32'/>
      <enumerator name='CPP_OR_EQ' value='33'/>
      <enumerator name='CPP_XOR_EQ' value='34'/>
      <enumerator name='CPP_RSHIFT_EQ' value='35'/>
      <enumerator name='CPP_LSHIFT_EQ' value='36'/>
      <enumerator name='CPP_HASH' value='37'/>
      <enumerator name='CPP_PASTE' value='38'/>
      <enumerator name='CPP_OPEN_SQUARE' value='39'/>
      <enumerator name='CPP_CLOSE_SQUARE' value='40'/>
      <enumerator name='CPP_OPEN_BRACE' value='41'/>
      <enumerator name='CPP_CLOSE_BRACE' value='42'/>
      <enumerator name='CPP_SEMICOLON' value='43'/>
      <enumerator name='CPP_ELLIPSIS' value='44'/>
      <enumerator name='CPP_PLUS_PLUS' value='45'/>
      <enumerator name='CPP_MINUS_MINUS' value='46'/>
      <enumerator name='CPP_DEREF' value='47'/>
      <enumerator name='CPP_DOT' value='48'/>
      <enumerator name='CPP_SCOPE' value='49'/>
      <enumerator name='CPP_DEREF_STAR' value='50'/>
      <enumerator name='CPP_DOT_STAR' value='51'/>
      <enumerator name='CPP_ATSIGN' value='52'/>
      <enumerator name='CPP_NAME' value='53'/>
      <enumerator name='CPP_AT_NAME' value='54'/>
      <enumerator name='CPP_NUMBER' value='55'/>
      <enumerator name='CPP_CHAR' value='56'/>
      <enumerator name='CPP_WCHAR' value='57'/>
      <enumerator name='CPP_CHAR16' value='58'/>
      <enumerator name='CPP_CHAR32' value='59'/>
      <enumerator name='CPP_OTHER' value='60'/>
      <enumerator name='CPP_STRING' value='61'/>
      <enumerator name='CPP_WSTRING' value='62'/>
      <enumerator name='CPP_STRING16' value='63'/>
      <enumerator name='CPP_STRING32' value='64'/>
      <enumerator name='CPP_UTF8STRING' value='65'/>
      <enumerator name='CPP_OBJC_STRING' value='66'/>
      <enumerator name='CPP_HEADER_NAME' value='67'/>
      <enumerator name='CPP_CHAR_USERDEF' value='68'/>
      <enumerator name='CPP_WCHAR_USERDEF' value='69'/>
      <enumerator name='CPP_CHAR16_USERDEF' value='70'/>
      <enumerator name='CPP_CHAR32_USERDEF' value='71'/>
      <enumerator name='CPP_STRING_USERDEF' value='72'/>
      <enumerator name='CPP_WSTRING_USERDEF' value='73'/>
      <enumerator name='CPP_STRING16_USERDEF' value='74'/>
      <enumerator name='CPP_STRING32_USERDEF' value='75'/>
      <enumerator name='CPP_UTF8STRING_USERDEF' value='76'/>
      <enumerator name='CPP_COMMENT' value='77'/>
      <enumerator name='CPP_MACRO_ARG' value='78'/>
      <enumerator name='CPP_PRAGMA' value='79'/>
      <enumerator name='CPP_PRAGMA_EOL' value='80'/>
      <enumerator name='CPP_PADDING' value='81'/>
      <enumerator name='N_TTYPES' value='82'/>
      <enumerator name='CPP_LAST_EQ' value='13'/>
      <enumerator name='CPP_FIRST_DIGRAPH' value='37'/>
      <enumerator name='CPP_LAST_PUNCTUATOR' value='52'/>
      <enumerator name='CPP_LAST_CPP_OP' value='26'/>
    </enum-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././gcc/diagnostic.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
    <!-- struct line_maps -->
    <class-decl name='line_maps' size-in-bits='704' is-struct='yes' visibility='default' filepath='../.././libcpp/include/line-map.h' line='263' column='1' id='type-id-185'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- maps_info line_maps::info_ordinary -->
        <var-decl name='info_ordinary' type-id='type-id-186' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='265' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- maps_info line_maps::info_macro -->
        <var-decl name='info_macro' type-id='type-id-186' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='267' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- unsigned int line_maps::depth -->
        <var-decl name='depth' type-id='type-id-13' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='270' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='416'>
        <!-- bool line_maps::trace_includes -->
        <var-decl name='trace_includes' type-id='type-id-1' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='273' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- source_location line_maps::highest_location -->
        <var-decl name='highest_location' type-id='type-id-103' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='276' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='480'>
        <!-- source_location line_maps::highest_line -->
        <var-decl name='highest_line' type-id='type-id-103' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='279' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- unsigned int line_maps::max_column_hint -->
        <var-decl name='max_column_hint' type-id='type-id-13' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='283' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- line_map_realloc line_maps::reallocator -->
        <var-decl name='reallocator' type-id='type-id-187' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='287' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- line_map_round_alloc_size_func line_maps::round_alloc_size -->
        <var-decl name='round_alloc_size' type-id='type-id-188' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='291' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct maps_info -->
    <class-decl name='maps_info' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='244' column='1' id='type-id-186'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- line_map* maps_info::maps -->
        <var-decl name='maps' type-id='type-id-189' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='250' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int maps_info::allocated -->
        <var-decl name='allocated' type-id='type-id-13' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='253' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned int maps_info::used -->
        <var-decl name='used' type-id='type-id-13' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='257' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned int maps_info::cache -->
        <var-decl name='cache' type-id='type-id-13' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='259' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef void* (void*, typedef size_t)* line_map_realloc -->
    <typedef-decl name='line_map_realloc' type-id='type-id-190' filepath='../.././gcc/../libcpp/include/line-map.h' line='54' column='1' id='type-id-187'/>
    <!-- typedef typedef size_t (typedef size_t)* line_map_round_alloc_size_func -->
    <typedef-decl name='line_map_round_alloc_size_func' type-id='type-id-191' filepath='../.././gcc/../libcpp/include/line-map.h' line='58' column='1' id='type-id-188'/>
    <!-- enum location_resolution_kind -->
    <enum-decl name='location_resolution_kind' filepath='../.././gcc/../libcpp/include/line-map.h' line='604' column='1' id='type-id-192'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='LRK_MACRO_EXPANSION_POINT' value='0'/>
      <enumerator name='LRK_SPELLING_LOCATION' value='1'/>
      <enumerator name='LRK_MACRO_DEFINITION_LOCATION' value='2'/>
    </enum-decl>
    <!-- typedef __anonymous_struct__1 expanded_location -->
    <typedef-decl name='expanded_location' type-id='type-id-193' filepath='../.././gcc/../libcpp/include/line-map.h' line='599' column='1' id='type-id-194'/>
    <!-- struct {const char* file; int line; int column; bool sysp;} -->
    <class-decl name='__anonymous_struct__1' size-in-bits='192' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-194' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='588' column='1' id='type-id-193'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* file -->
        <var-decl name='file' type-id='type-id-15' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='590' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int line -->
        <var-decl name='line' type-id='type-id-18' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='593' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- int column -->
        <var-decl name='column' type-id='type-id-18' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='595' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- bool sysp -->
        <var-decl name='sysp' type-id='type-id-1' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='598' column='1'/>
      </data-member>
    </class-decl>
    <!-- const line_map** -->
    <pointer-type-def type-id='type-id-48' size-in-bits='64' id='type-id-195'/>
    <!-- line_map* -->
    <pointer-type-def type-id='type-id-104' size-in-bits='64' id='type-id-189'/>
    <!-- line_maps* -->
    <pointer-type-def type-id='type-id-185' size-in-bits='64' id='type-id-196'/>
    <!-- typedef size_t (typedef size_t)* -->
    <pointer-type-def type-id='type-id-197' size-in-bits='64' id='type-id-191'/>
    <!-- void* (void*, typedef size_t)* -->
    <pointer-type-def type-id='type-id-198' size-in-bits='64' id='type-id-190'/>
    <!-- void default_diagnostic_finalizer(diagnostic_context*, diagnostic_info*) -->
    <function-decl name='default_diagnostic_finalizer' mangled-name='_Z28default_diagnostic_finalizerP18diagnostic_contextP15diagnostic_info' filepath='../.././gcc/diagnostic.c' line='313' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z28default_diagnostic_finalizerP18diagnostic_contextP15diagnostic_info'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127'/>
      <!-- parameter of type 'diagnostic_info*' -->
      <parameter type-id='type-id-128'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- char* file_name_as_prefix(const char*) -->
    <function-decl name='file_name_as_prefix' mangled-name='_Z19file_name_as_prefixPKc' filepath='../.././gcc/diagnostic.c' line='74' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19file_name_as_prefixPKc'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- void diagnostic_initialize(diagnostic_context*, int) -->
    <function-decl name='diagnostic_initialize' mangled-name='_Z21diagnostic_initializeP18diagnostic_contexti' filepath='../.././gcc/diagnostic.c' line='83' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z21diagnostic_initializeP18diagnostic_contexti'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void diagnostic_finish(diagnostic_context*) -->
    <function-decl name='diagnostic_finish' mangled-name='_Z17diagnostic_finishP18diagnostic_context' filepath='../.././gcc/diagnostic.c' line='128' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17diagnostic_finishP18diagnostic_context'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127' name='context' filepath='../.././gcc/diagnostic.c' line='128' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void diagnostic_set_info_translated(diagnostic_info*, const char*, va_list*, location_t, diagnostic_t) -->
    <function-decl name='diagnostic_set_info_translated' mangled-name='_Z30diagnostic_set_info_translatedP15diagnostic_infoPKcPA1_13__va_list_tagj12diagnostic_t' filepath='../.././gcc/diagnostic.c' line='150' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z30diagnostic_set_info_translatedP15diagnostic_infoPKcPA1_13__va_list_tagj12diagnostic_t'>
      <!-- parameter of type 'diagnostic_info*' -->
      <parameter type-id='type-id-128' name='diagnostic' filepath='../.././gcc/diagnostic.c' line='150' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='msg' filepath='../.././gcc/diagnostic.c' line='150' column='1'/>
      <!-- parameter of type 'va_list*' -->
      <parameter type-id='type-id-98' name='args' filepath='../.././gcc/diagnostic.c' line='151' column='1'/>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='location' filepath='../.././gcc/diagnostic.c' line='151' column='1'/>
      <!-- parameter of type 'typedef diagnostic_t' -->
      <parameter type-id='type-id-76' name='kind' filepath='../.././gcc/diagnostic.c' line='152' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void diagnostic_set_info(diagnostic_info*, const char*, va_list*, location_t, diagnostic_t) -->
    <function-decl name='diagnostic_set_info' mangled-name='_Z19diagnostic_set_infoP15diagnostic_infoPKcPA1_13__va_list_tagj12diagnostic_t' filepath='../.././gcc/diagnostic.c' line='166' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19diagnostic_set_infoP15diagnostic_infoPKcPA1_13__va_list_tagj12diagnostic_t'>
      <!-- parameter of type 'diagnostic_info*' -->
      <parameter type-id='type-id-128' name='diagnostic' filepath='../.././gcc/diagnostic.c' line='150' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='msg' filepath='../.././gcc/diagnostic.c' line='150' column='1'/>
      <!-- parameter of type 'va_list*' -->
      <parameter type-id='type-id-98' name='args' filepath='../.././gcc/diagnostic.c' line='151' column='1'/>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='location' filepath='../.././gcc/diagnostic.c' line='151' column='1'/>
      <!-- parameter of type 'typedef diagnostic_t' -->
      <parameter type-id='type-id-76' name='kind' filepath='../.././gcc/diagnostic.c' line='152' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void diagnostic_report_current_module(diagnostic_context*, location_t) -->
    <function-decl name='diagnostic_report_current_module' mangled-name='_Z32diagnostic_report_current_moduleP18diagnostic_contextj' filepath='../.././gcc/diagnostic.c' line='258' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z32diagnostic_report_current_moduleP18diagnostic_contextj'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127' name='context' filepath='../.././gcc/diagnostic.c' line='258' column='1'/>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='where' filepath='../.././gcc/diagnostic.c' line='258' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- diagnostic_t diagnostic_classify_diagnostic(diagnostic_context*, int, diagnostic_t, location_t) -->
    <function-decl name='diagnostic_classify_diagnostic' mangled-name='_Z30diagnostic_classify_diagnosticP18diagnostic_contexti12diagnostic_tj' filepath='../.././gcc/diagnostic.c' line='323' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z30diagnostic_classify_diagnosticP18diagnostic_contexti12diagnostic_tj'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127' name='context' filepath='../.././gcc/diagnostic.c' line='323' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='option_index' filepath='../.././gcc/diagnostic.c' line='324' column='1'/>
      <!-- parameter of type 'typedef diagnostic_t' -->
      <parameter type-id='type-id-76' name='new_kind' filepath='../.././gcc/diagnostic.c' line='325' column='1'/>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='where' filepath='../.././gcc/diagnostic.c' line='326' column='1'/>
      <!-- typedef diagnostic_t -->
      <return type-id='type-id-76'/>
    </function-decl>
    <!-- void diagnostic_push_diagnostics(diagnostic_context*, location_t) -->
    <function-decl name='diagnostic_push_diagnostics' mangled-name='_Z27diagnostic_push_diagnosticsP18diagnostic_contextj' filepath='../.././gcc/diagnostic.c' line='367' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z27diagnostic_push_diagnosticsP18diagnostic_contextj'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127' name='context' filepath='../.././gcc/diagnostic.c' line='258' column='1'/>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='where' filepath='../.././gcc/diagnostic.c' line='258' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void diagnostic_pop_diagnostics(diagnostic_context*, location_t) -->
    <function-decl name='diagnostic_pop_diagnostics' mangled-name='_Z26diagnostic_pop_diagnosticsP18diagnostic_contextj' filepath='../.././gcc/diagnostic.c' line='376' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z26diagnostic_pop_diagnosticsP18diagnostic_contextj'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127' name='context' filepath='../.././gcc/diagnostic.c' line='258' column='1'/>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='where' filepath='../.././gcc/diagnostic.c' line='258' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const char* trim_filename(const char*) -->
    <function-decl name='trim_filename' mangled-name='_Z13trim_filenamePKc' filepath='../.././gcc/diagnostic.c' line='567' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z13trim_filenamePKc'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- void verbatim(const char*, ...) -->
    <function-decl name='verbatim' mangled-name='_Z8verbatimPKcz' filepath='../.././gcc/diagnostic.c' line='597' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z8verbatimPKcz'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='cmsgid' filepath='../.././gcc/collect2.c' line='423' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- bool seen_error() -->
    <function-decl name='seen_error' mangled-name='_Z10seen_errorv' filepath='../.././gcc/diagnostic.c' line='811' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z10seen_errorv'>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- void fnotice(FILE*, const char*, ...) -->
    <function-decl name='fnotice' mangled-name='_Z7fnoticeP8_IO_FILEPKcz' filepath='../.././gcc/diagnostic.c' line='857' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z7fnoticeP8_IO_FILEPKcz'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='file' filepath='../.././gcc/diagnostic.c' line='857' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='cmsgid' filepath='../.././gcc/diagnostic.c' line='857' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void fancy_abort(const char*, int, const char*) -->
    <function-decl name='fancy_abort' mangled-name='_Z11fancy_abortPKciS0_' filepath='../.././gcc/diagnostic.c' line='897' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z11fancy_abortPKciS0_'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- bool diagnostic_report_diagnostic(diagnostic_context*, diagnostic_info*) -->
    <function-decl name='diagnostic_report_diagnostic' mangled-name='_Z28diagnostic_report_diagnosticP18diagnostic_contextP15diagnostic_info' filepath='../.././gcc/diagnostic.c' line='404' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z28diagnostic_report_diagnosticP18diagnostic_contextP15diagnostic_info'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127' name='context' filepath='../.././gcc/diagnostic.c' line='404' column='1'/>
      <!-- parameter of type 'diagnostic_info*' -->
      <parameter type-id='type-id-128' name='diagnostic' filepath='../.././gcc/diagnostic.c' line='405' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- void sorry(const char*, ...) -->
    <function-decl name='sorry' mangled-name='_Z5sorryPKcz' filepath='../.././gcc/diagnostic.c' line='797' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z5sorryPKcz'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='cmsgid' filepath='../.././gcc/collect2.c' line='423' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void error_at(location_t, const char*, ...) -->
    <function-decl name='error_at' mangled-name='_Z8error_atjPKcz' filepath='../.././gcc/diagnostic.c' line='782' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z8error_atjPKcz'>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='loc' filepath='../.././gcc/diagnostic.c' line='782' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='gmsgid' filepath='../.././gcc/diagnostic.c' line='782' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void error_n(location_t, int, const char*, const char*, ...) -->
    <function-decl name='error_n' mangled-name='_Z7error_njiPKcS0_z' filepath='../.././gcc/diagnostic.c' line='766' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z7error_njiPKcS0_z'>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='location' filepath='../.././gcc/diagnostic.c' line='766' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='n' filepath='../.././gcc/diagnostic.c' line='766' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='singular_gmsgid' filepath='../.././gcc/diagnostic.c' line='766' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='plural_gmsgid' filepath='../.././gcc/diagnostic.c' line='767' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void error(const char*, ...) -->
    <function-decl name='error' mangled-name='_Z5errorPKcz' filepath='../.././gcc/diagnostic.c' line='752' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z5errorPKcz'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='cmsgid' filepath='../.././gcc/collect2.c' line='423' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- bool permerror(location_t, const char*, ...) -->
    <function-decl name='permerror' mangled-name='_Z9permerrorjPKcz' filepath='../.././gcc/diagnostic.c' line='736' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9permerrorjPKcz'>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='location' filepath='../.././gcc/diagnostic.c' line='736' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='gmsgid' filepath='../.././gcc/diagnostic.c' line='736' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool pedwarn(location_t, int, const char*, ...) -->
    <function-decl name='pedwarn' mangled-name='_Z7pedwarnjiPKcz' filepath='../.././gcc/diagnostic.c' line='716' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z7pedwarnjiPKcz'>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='location' filepath='../.././gcc/diagnostic.c' line='716' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='opt' filepath='../.././gcc/diagnostic.c' line='716' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='gmsgid' filepath='../.././gcc/diagnostic.c' line='716' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool warning_at(location_t, int, const char*, ...) -->
    <function-decl name='warning_at' mangled-name='_Z10warning_atjiPKcz' filepath='../.././gcc/diagnostic.c' line='690' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z10warning_atjiPKcz'>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='location' filepath='../.././gcc/diagnostic.c' line='716' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='opt' filepath='../.././gcc/diagnostic.c' line='716' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='gmsgid' filepath='../.././gcc/diagnostic.c' line='716' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool warning(int, const char*, ...) -->
    <function-decl name='warning' mangled-name='_Z7warningiPKcz' filepath='../.././gcc/diagnostic.c' line='672' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z7warningiPKcz'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='opt' filepath='../.././gcc/diagnostic.c' line='672' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='gmsgid' filepath='../.././gcc/diagnostic.c' line='672' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- void inform_n(location_t, int, const char*, const char*, ...) -->
    <function-decl name='inform_n' mangled-name='_Z8inform_njiPKcS0_z' filepath='../.././gcc/diagnostic.c' line='654' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z8inform_njiPKcS0_z'>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='location' filepath='../.././gcc/diagnostic.c' line='766' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='n' filepath='../.././gcc/diagnostic.c' line='766' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='singular_gmsgid' filepath='../.././gcc/diagnostic.c' line='766' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='plural_gmsgid' filepath='../.././gcc/diagnostic.c' line='767' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void inform(location_t, const char*, ...) -->
    <function-decl name='inform' mangled-name='_Z6informjPKcz' filepath='../.././gcc/diagnostic.c' line='640' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z6informjPKcz'>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='loc' filepath='../.././gcc/diagnostic.c' line='782' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='gmsgid' filepath='../.././gcc/diagnostic.c' line='782' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- bool emit_diagnostic(diagnostic_t, location_t, int, const char*, ...) -->
    <function-decl name='emit_diagnostic' mangled-name='_Z15emit_diagnostic12diagnostic_tjiPKcz' filepath='../.././gcc/diagnostic.c' line='614' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15emit_diagnostic12diagnostic_tjiPKcz'>
      <!-- parameter of type 'typedef diagnostic_t' -->
      <parameter type-id='type-id-76' name='kind' filepath='../.././gcc/diagnostic.c' line='614' column='1'/>
      <!-- parameter of type 'typedef location_t' -->
      <parameter type-id='type-id-75' name='location' filepath='../.././gcc/diagnostic.c' line='614' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='opt' filepath='../.././gcc/diagnostic.c' line='614' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='gmsgid' filepath='../.././gcc/diagnostic.c' line='615' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- void internal_error(const char*, ...) -->
    <function-decl name='internal_error' mangled-name='_Z14internal_errorPKcz' filepath='../.././gcc/diagnostic.c' line='838' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14internal_errorPKcz'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='cmsgid' filepath='../.././gcc/collect2.c' line='423' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void fatal_error(const char*, ...) -->
    <function-decl name='fatal_error' mangled-name='_Z11fatal_errorPKcz' filepath='../.././gcc/diagnostic.c' line='820' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z11fatal_errorPKcz'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='cmsgid' filepath='../.././gcc/collect2.c' line='423' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- char* diagnostic_build_prefix(diagnostic_context*, diagnostic_info*) -->
    <function-decl name='diagnostic_build_prefix' mangled-name='_Z23diagnostic_build_prefixP18diagnostic_contextP15diagnostic_info' filepath='../.././gcc/diagnostic.c' line='176' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z23diagnostic_build_prefixP18diagnostic_contextP15diagnostic_info'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127' name='context' filepath='../.././gcc/diagnostic.c' line='176' column='1'/>
      <!-- parameter of type 'diagnostic_info*' -->
      <parameter type-id='type-id-128' name='diagnostic' filepath='../.././gcc/diagnostic.c' line='177' column='1'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- void default_diagnostic_starter(diagnostic_context*, diagnostic_info*) -->
    <function-decl name='default_diagnostic_starter' mangled-name='_Z26default_diagnostic_starterP18diagnostic_contextP15diagnostic_info' filepath='../.././gcc/diagnostic.c' line='304' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z26default_diagnostic_starterP18diagnostic_contextP15diagnostic_info'>
      <!-- parameter of type 'diagnostic_context*' -->
      <parameter type-id='type-id-127'/>
      <!-- parameter of type 'diagnostic_info*' -->
      <parameter type-id='type-id-128'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const char* progname -->
    <var-decl name='progname' type-id='type-id-15' mangled-name='progname' visibility='default' filepath='../.././gcc/diagnostic.c' line='50' column='1' elf-symbol-id='progname'/>
    <!-- diagnostic_context* global_dc -->
    <var-decl name='global_dc' type-id='type-id-127' mangled-name='global_dc' visibility='default' filepath='../.././gcc/diagnostic.c' line='54' column='1' elf-symbol-id='global_dc'/>
    <!-- int vasprintf(char**, const char*, typedef __va_list_tag __va_list_tag*) -->
    <function-decl name='vasprintf' filepath='/usr/include/stdio.h' line='398' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef __va_list_tag __va_list_tag*' -->
      <parameter type-id='type-id-134'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void abort() -->
    <function-decl name='abort' filepath='/usr/include/stdlib.h' line='514' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- unsigned long int concat_length(const char*, ...) -->
    <function-decl name='concat_length' filepath='../.././gcc/../include/libiberty.h' line='157' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- unsigned long int -->
      <return type-id='type-id-28'/>
    </function-decl>
    <!-- char* concat_copy2(const char*, ...) -->
    <function-decl name='concat_copy2' filepath='../.././gcc/../include/libiberty.h' line='171' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- size_t (size_t) -->
    <function-type size-in-bits='64' id='type-id-197'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-type>
    <!-- void* (void*, size_t) -->
    <function-type size-in-bits='64' id='type-id-198'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../.././gcc/ggc-none.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
    <!-- enum gt_types_enum -->
    <enum-decl name='gt_types_enum' filepath='./gtype-desc.h' line='23' column='1' id='type-id-199'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='gt_ggc_e_24lazy_hex_fp_value_struct' value='0'/>
      <enumerator name='gt_ggc_e_15c_inline_static' value='1'/>
      <enumerator name='gt_ggc_e_24VEC_c_goto_bindings_p_gc' value='2'/>
      <enumerator name='gt_ggc_e_26VEC_c_goto_bindings_p_base' value='3'/>
      <enumerator name='gt_ggc_e_15c_goto_bindings' value='4'/>
      <enumerator name='gt_ggc_e_7c_scope' value='5'/>
      <enumerator name='gt_ggc_e_9c_binding' value='6'/>
      <enumerator name='gt_ggc_e_12c_label_vars' value='7'/>
      <enumerator name='gt_ggc_e_15c_spot_bindings' value='8'/>
      <enumerator name='gt_ggc_e_8c_parser' value='9'/>
      <enumerator name='gt_ggc_e_7c_token' value='10'/>
      <enumerator name='gt_ggc_e_20VEC_ivarref_entry_gc' value='11'/>
      <enumerator name='gt_ggc_e_22VEC_ivarref_entry_base' value='12'/>
      <enumerator name='gt_ggc_e_13ivarref_entry' value='13'/>
      <enumerator name='gt_ggc_e_22VEC_prot_list_entry_gc' value='14'/>
      <enumerator name='gt_ggc_e_24VEC_prot_list_entry_base' value='15'/>
      <enumerator name='gt_ggc_e_15prot_list_entry' value='16'/>
      <enumerator name='gt_ggc_e_19VEC_msgref_entry_gc' value='17'/>
      <enumerator name='gt_ggc_e_21VEC_msgref_entry_base' value='18'/>
      <enumerator name='gt_ggc_e_12msgref_entry' value='19'/>
      <enumerator name='gt_ggc_e_23VEC_ident_data_tuple_gc' value='20'/>
      <enumerator name='gt_ggc_e_25VEC_ident_data_tuple_base' value='21'/>
      <enumerator name='gt_ggc_e_16ident_data_tuple' value='22'/>
      <enumerator name='gt_ggc_e_17string_descriptor' value='23'/>
      <enumerator name='gt_ggc_e_9imp_entry' value='24'/>
      <enumerator name='gt_ggc_e_16hashed_attribute' value='25'/>
      <enumerator name='gt_ggc_e_12hashed_entry' value='26'/>
      <enumerator name='gt_ggc_e_16objc_map_private' value='27'/>
      <enumerator name='gt_ggc_e_14builtin_record' value='28'/>
      <enumerator name='gt_ggc_e_14string_or_tree' value='29'/>
      <enumerator name='gt_ggc_e_11cpool_entry' value='30'/>
      <enumerator name='gt_ggc_e_19VEC_method_entry_gc' value='31'/>
      <enumerator name='gt_ggc_e_21VEC_method_entry_base' value='32'/>
      <enumerator name='gt_ggc_e_14method_entry_d' value='33'/>
      <enumerator name='gt_ggc_e_13lang_decl_var' value='34'/>
      <enumerator name='gt_ggc_e_14type_assertion' value='35'/>
      <enumerator name='gt_ggc_e_14lang_decl_func' value='36'/>
      <enumerator name='gt_ggc_e_18treetreehash_entry' value='37'/>
      <enumerator name='gt_ggc_e_5CPool' value='38'/>
      <enumerator name='gt_ggc_e_3JCF' value='39'/>
      <enumerator name='gt_ggc_e_16gfc_powdecl_list' value='40'/>
      <enumerator name='gt_ggc_e_16gfc_st_parameter' value='41'/>
      <enumerator name='gt_ggc_e_22gfc_st_parameter_field' value='42'/>
      <enumerator name='gt_ggc_e_19gfc_intrinsic_map_t' value='43'/>
      <enumerator name='gt_ggc_e_17module_htab_entry' value='44'/>
      <enumerator name='gt_ggc_e_13binding_level' value='45'/>
      <enumerator name='gt_ggc_e_23VEC_pending_noexcept_gc' value='46'/>
      <enumerator name='gt_ggc_e_25VEC_pending_noexcept_base' value='47'/>
      <enumerator name='gt_ggc_e_16pending_noexcept' value='48'/>
      <enumerator name='gt_ggc_e_9opt_stack' value='49'/>
      <enumerator name='gt_ggc_e_27VEC_pending_redefinition_gc' value='50'/>
      <enumerator name='gt_ggc_e_29VEC_pending_redefinition_base' value='51'/>
      <enumerator name='gt_ggc_e_22pending_redefinition_d' value='52'/>
      <enumerator name='gt_ggc_e_19VEC_pending_weak_gc' value='53'/>
      <enumerator name='gt_ggc_e_21VEC_pending_weak_base' value='54'/>
      <enumerator name='gt_ggc_e_14pending_weak_d' value='55'/>
      <enumerator name='gt_ggc_e_11align_stack' value='56'/>
      <enumerator name='gt_ggc_e_18VEC_tree_gc_vec_gc' value='57'/>
      <enumerator name='gt_ggc_e_20VEC_tree_gc_vec_base' value='58'/>
      <enumerator name='gt_ggc_e_19VEC_const_char_p_gc' value='59'/>
      <enumerator name='gt_ggc_e_21VEC_const_char_p_base' value='60'/>
      <enumerator name='gt_ggc_e_21pending_abstract_type' value='61'/>
      <enumerator name='gt_ggc_e_15VEC_tree_int_gc' value='62'/>
      <enumerator name='gt_ggc_e_17VEC_tree_int_base' value='63'/>
      <enumerator name='gt_ggc_e_8tree_int' value='64'/>
      <enumerator name='gt_ggc_e_9cp_parser' value='65'/>
      <enumerator name='gt_ggc_e_17cp_parser_context' value='66'/>
      <enumerator name='gt_ggc_e_34VEC_cp_unparsed_functions_entry_gc' value='67'/>
      <enumerator name='gt_ggc_e_36VEC_cp_unparsed_functions_entry_base' value='68'/>
      <enumerator name='gt_ggc_e_29cp_unparsed_functions_entry_d' value='69'/>
      <enumerator name='gt_ggc_e_27VEC_cp_default_arg_entry_gc' value='70'/>
      <enumerator name='gt_ggc_e_29VEC_cp_default_arg_entry_base' value='71'/>
      <enumerator name='gt_ggc_e_22cp_default_arg_entry_d' value='72'/>
      <enumerator name='gt_ggc_e_8cp_lexer' value='73'/>
      <enumerator name='gt_ggc_e_15VEC_cp_token_gc' value='74'/>
      <enumerator name='gt_ggc_e_17VEC_cp_token_base' value='75'/>
      <enumerator name='gt_ggc_e_8cp_token' value='76'/>
      <enumerator name='gt_ggc_e_14cp_token_value' value='77'/>
      <enumerator name='gt_ggc_e_10tree_check' value='78'/>
      <enumerator name='gt_ggc_e_14constexpr_call' value='79'/>
      <enumerator name='gt_ggc_e_16constexpr_fundef' value='80'/>
      <enumerator name='gt_ggc_e_22VEC_deferred_access_gc' value='81'/>
      <enumerator name='gt_ggc_e_24VEC_deferred_access_base' value='82'/>
      <enumerator name='gt_ggc_e_15deferred_access' value='83'/>
      <enumerator name='gt_ggc_e_10spec_entry' value='84'/>
      <enumerator name='gt_ggc_e_16pending_template' value='85'/>
      <enumerator name='gt_ggc_e_21VEC_incomplete_var_gc' value='86'/>
      <enumerator name='gt_ggc_e_23VEC_incomplete_var_base' value='87'/>
      <enumerator name='gt_ggc_e_16incomplete_var_d' value='88'/>
      <enumerator name='gt_ggc_e_21named_label_use_entry' value='89'/>
      <enumerator name='gt_ggc_e_28VEC_deferred_access_check_gc' value='90'/>
      <enumerator name='gt_ggc_e_30VEC_deferred_access_check_base' value='91'/>
      <enumerator name='gt_ggc_e_21deferred_access_check' value='92'/>
      <enumerator name='gt_ggc_e_20operator_name_info_t' value='93'/>
      <enumerator name='gt_ggc_e_11lang_decl_u' value='94'/>
      <enumerator name='gt_ggc_e_14lang_decl_parm' value='95'/>
      <enumerator name='gt_ggc_e_12lang_decl_ns' value='96'/>
      <enumerator name='gt_ggc_e_12lang_decl_fn' value='97'/>
      <enumerator name='gt_ggc_e_12lang_decl_u3' value='98'/>
      <enumerator name='gt_ggc_e_12lang_decl_u5' value='99'/>
      <enumerator name='gt_ggc_e_13lang_decl_min' value='100'/>
      <enumerator name='gt_ggc_e_12lang_decl_u2' value='101'/>
      <enumerator name='gt_ggc_e_14lang_decl_base' value='102'/>
      <enumerator name='gt_ggc_e_11lang_type_u' value='103'/>
      <enumerator name='gt_ggc_e_16lang_type_ptrmem' value='104'/>
      <enumerator name='gt_ggc_e_15lang_type_class' value='105'/>
      <enumerator name='gt_ggc_e_18sorted_fields_type' value='106'/>
      <enumerator name='gt_ggc_e_16lang_type_header' value='107'/>
      <enumerator name='gt_ggc_e_18VEC_tree_pair_s_gc' value='108'/>
      <enumerator name='gt_ggc_e_20VEC_tree_pair_s_base' value='109'/>
      <enumerator name='gt_ggc_e_11tree_pair_s' value='110'/>
      <enumerator name='gt_ggc_e_17named_label_entry' value='111'/>
      <enumerator name='gt_ggc_e_19c_language_function' value='112'/>
      <enumerator name='gt_ggc_e_11stmt_tree_s' value='113'/>
      <enumerator name='gt_ggc_e_20tree_userdef_literal' value='114'/>
      <enumerator name='gt_ggc_e_18tree_template_info' value='115'/>
      <enumerator name='gt_ggc_e_32VEC_qualified_typedef_usage_t_gc' value='116'/>
      <enumerator name='gt_ggc_e_34VEC_qualified_typedef_usage_t_base' value='117'/>
      <enumerator name='gt_ggc_e_25qualified_typedef_usage_s' value='118'/>
      <enumerator name='gt_ggc_e_16tree_lambda_expr' value='119'/>
      <enumerator name='gt_ggc_e_15tree_trait_expr' value='120'/>
      <enumerator name='gt_ggc_e_25tree_argument_pack_select' value='121'/>
      <enumerator name='gt_ggc_e_18tree_static_assert' value='122'/>
      <enumerator name='gt_ggc_e_22tree_deferred_noexcept' value='123'/>
      <enumerator name='gt_ggc_e_16tree_default_arg' value='124'/>
      <enumerator name='gt_ggc_e_14cp_token_cache' value='125'/>
      <enumerator name='gt_ggc_e_13tree_baselink' value='126'/>
      <enumerator name='gt_ggc_e_13tree_overload' value='127'/>
      <enumerator name='gt_ggc_e_10ptrmem_cst' value='128'/>
      <enumerator name='gt_ggc_e_21template_parm_index_s' value='129'/>
      <enumerator name='gt_ggc_e_15lang_identifier' value='130'/>
      <enumerator name='gt_ggc_e_19c_common_identifier' value='131'/>
      <enumerator name='gt_ggc_e_11saved_scope' value='132'/>
      <enumerator name='gt_ggc_e_16cxx_int_tree_map' value='133'/>
      <enumerator name='gt_ggc_e_23VEC_cp_label_binding_gc' value='134'/>
      <enumerator name='gt_ggc_e_25VEC_cp_label_binding_base' value='135'/>
      <enumerator name='gt_ggc_e_16cp_label_binding' value='136'/>
      <enumerator name='gt_ggc_e_23VEC_cp_class_binding_gc' value='137'/>
      <enumerator name='gt_ggc_e_25VEC_cp_class_binding_base' value='138'/>
      <enumerator name='gt_ggc_e_16cp_class_binding' value='139'/>
      <enumerator name='gt_ggc_e_24VEC_cxx_saved_binding_gc' value='140'/>
      <enumerator name='gt_ggc_e_26VEC_cxx_saved_binding_base' value='141'/>
      <enumerator name='gt_ggc_e_17cxx_saved_binding' value='142'/>
      <enumerator name='gt_ggc_e_16cp_binding_level' value='143'/>
      <enumerator name='gt_ggc_e_11cxx_binding' value='144'/>
      <enumerator name='gt_ggc_e_15binding_entry_s' value='145'/>
      <enumerator name='gt_ggc_e_15binding_table_s' value='146'/>
      <enumerator name='gt_ggc_e_11tinst_level' value='147'/>
      <enumerator name='gt_ggc_e_7globals' value='148'/>
      <enumerator name='gt_ggc_e_14VEC_tinfo_s_gc' value='149'/>
      <enumerator name='gt_ggc_e_16VEC_tinfo_s_base' value='150'/>
      <enumerator name='gt_ggc_e_7tinfo_s' value='151'/>
      <enumerator name='gt_ggc_e_18gnat_binding_level' value='152'/>
      <enumerator name='gt_ggc_e_16VEC_loop_info_gc' value='153'/>
      <enumerator name='gt_ggc_e_18VEC_loop_info_base' value='154'/>
      <enumerator name='gt_ggc_e_11loop_info_d' value='155'/>
      <enumerator name='gt_ggc_e_23VEC_range_check_info_gc' value='156'/>
      <enumerator name='gt_ggc_e_25VEC_range_check_info_base' value='157'/>
      <enumerator name='gt_ggc_e_18range_check_info_d' value='158'/>
      <enumerator name='gt_ggc_e_9elab_info' value='159'/>
      <enumerator name='gt_ggc_e_10stmt_group' value='160'/>
      <enumerator name='gt_ggc_e_16VEC_parm_attr_gc' value='161'/>
      <enumerator name='gt_ggc_e_18VEC_parm_attr_base' value='162'/>
      <enumerator name='gt_ggc_e_11parm_attr_d' value='163'/>
      <enumerator name='gt_ggc_e_23VEC_inline_summary_t_gc' value='164'/>
      <enumerator name='gt_ggc_e_25VEC_inline_summary_t_base' value='165'/>
      <enumerator name='gt_ggc_e_22VEC_size_time_entry_gc' value='166'/>
      <enumerator name='gt_ggc_e_24VEC_size_time_entry_base' value='167'/>
      <enumerator name='gt_ggc_e_15size_time_entry' value='168'/>
      <enumerator name='gt_ggc_e_9predicate' value='169'/>
      <enumerator name='gt_ggc_e_16VEC_condition_gc' value='170'/>
      <enumerator name='gt_ggc_e_18VEC_condition_base' value='171'/>
      <enumerator name='gt_ggc_e_9condition' value='172'/>
      <enumerator name='gt_ggc_e_18lto_tree_ref_table' value='173'/>
      <enumerator name='gt_ggc_e_17lto_in_decl_state' value='174'/>
      <enumerator name='gt_ggc_e_22VEC_ipa_edge_args_t_gc' value='175'/>
      <enumerator name='gt_ggc_e_24VEC_ipa_edge_args_t_base' value='176'/>
      <enumerator name='gt_ggc_e_22VEC_ipa_jump_func_t_gc' value='177'/>
      <enumerator name='gt_ggc_e_24VEC_ipa_jump_func_t_base' value='178'/>
      <enumerator name='gt_ggc_e_15jump_func_value' value='179'/>
      <enumerator name='gt_ggc_e_18ipa_member_ptr_cst' value='180'/>
      <enumerator name='gt_ggc_e_20ipa_ancestor_jf_data' value='181'/>
      <enumerator name='gt_ggc_e_21ipa_pass_through_data' value='182'/>
      <enumerator name='gt_ggc_e_19ipa_known_type_data' value='183'/>
      <enumerator name='gt_ggc_e_20lto_symtab_entry_def' value='184'/>
      <enumerator name='gt_ggc_e_20ssa_operand_memory_d' value='185'/>
      <enumerator name='gt_ggc_e_13scev_info_str' value='186'/>
      <enumerator name='gt_ggc_e_24VEC_mem_addr_template_gc' value='187'/>
      <enumerator name='gt_ggc_e_26VEC_mem_addr_template_base' value='188'/>
      <enumerator name='gt_ggc_e_17mem_addr_template' value='189'/>
      <enumerator name='gt_ggc_e_12ssa_operands' value='190'/>
      <enumerator name='gt_ggc_e_15tm_restart_node' value='191'/>
      <enumerator name='gt_ggc_e_26gimple_type_leader_entry_s' value='192'/>
      <enumerator name='gt_ggc_e_28gimple_statement_transaction' value='193'/>
      <enumerator name='gt_ggc_e_33gimple_statement_omp_atomic_store' value='194'/>
      <enumerator name='gt_ggc_e_32gimple_statement_omp_atomic_load' value='195'/>
      <enumerator name='gt_ggc_e_27gimple_statement_omp_single' value='196'/>
      <enumerator name='gt_ggc_e_29gimple_statement_omp_continue' value='197'/>
      <enumerator name='gt_ggc_e_29gimple_statement_omp_sections' value='198'/>
      <enumerator name='gt_ggc_e_25gimple_statement_omp_task' value='199'/>
      <enumerator name='gt_ggc_e_29gimple_statement_omp_parallel' value='200'/>
      <enumerator name='gt_ggc_e_24gimple_statement_omp_for' value='201'/>
      <enumerator name='gt_ggc_e_19gimple_omp_for_iter' value='202'/>
      <enumerator name='gt_ggc_e_29gimple_statement_omp_critical' value='203'/>
      <enumerator name='gt_ggc_e_20gimple_statement_asm' value='204'/>
      <enumerator name='gt_ggc_e_20gimple_statement_wce' value='205'/>
      <enumerator name='gt_ggc_e_20gimple_statement_try' value='206'/>
      <enumerator name='gt_ggc_e_24gimple_statement_eh_ctrl' value='207'/>
      <enumerator name='gt_ggc_e_20gimple_statement_phi' value='208'/>
      <enumerator name='gt_ggc_e_23gimple_statement_eh_mnt' value='209'/>
      <enumerator name='gt_ggc_e_24gimple_statement_eh_else' value='210'/>
      <enumerator name='gt_ggc_e_26gimple_statement_eh_filter' value='211'/>
      <enumerator name='gt_ggc_e_22gimple_statement_catch' value='212'/>
      <enumerator name='gt_ggc_e_21gimple_statement_bind' value='213'/>
      <enumerator name='gt_ggc_e_20gimple_statement_omp' value='214'/>
      <enumerator name='gt_ggc_e_21gimple_statement_call' value='215'/>
      <enumerator name='gt_ggc_e_11pt_solution' value='216'/>
      <enumerator name='gt_ggc_e_32gimple_statement_with_memory_ops' value='217'/>
      <enumerator name='gt_ggc_e_37gimple_statement_with_memory_ops_base' value='218'/>
      <enumerator name='gt_ggc_e_25gimple_statement_with_ops' value='219'/>
      <enumerator name='gt_ggc_e_30gimple_statement_with_ops_base' value='220'/>
      <enumerator name='gt_ggc_e_21gimple_statement_base' value='221'/>
      <enumerator name='gt_ggc_e_17gimple_seq_node_d' value='222'/>
      <enumerator name='gt_ggc_e_9type_hash' value='223'/>
      <enumerator name='gt_ggc_e_16string_pool_data' value='224'/>
      <enumerator name='gt_ggc_e_18initial_value_pair' value='225'/>
      <enumerator name='gt_ggc_e_23temp_slot_address_entry' value='226'/>
      <enumerator name='gt_ggc_e_11eh_status_u' value='227'/>
      <enumerator name='gt_ggc_e_15throw_stmt_node' value='228'/>
      <enumerator name='gt_ggc_e_21VEC_eh_landing_pad_gc' value='229'/>
      <enumerator name='gt_ggc_e_23VEC_eh_landing_pad_base' value='230'/>
      <enumerator name='gt_ggc_e_16VEC_eh_region_gc' value='231'/>
      <enumerator name='gt_ggc_e_18VEC_eh_region_base' value='232'/>
      <enumerator name='gt_ggc_e_11eh_region_u' value='233'/>
      <enumerator name='gt_ggc_e_26eh_region_u_must_not_throw' value='234'/>
      <enumerator name='gt_ggc_e_19eh_region_u_allowed' value='235'/>
      <enumerator name='gt_ggc_e_15eh_region_u_try' value='236'/>
      <enumerator name='gt_ggc_e_10eh_catch_d' value='237'/>
      <enumerator name='gt_ggc_e_16eh_landing_pad_d' value='238'/>
      <enumerator name='gt_ggc_e_11eh_region_d' value='239'/>
      <enumerator name='gt_ggc_e_22cached_dw_loc_list_def' value='240'/>
      <enumerator name='gt_ggc_e_17call_arg_loc_node' value='241'/>
      <enumerator name='gt_ggc_e_16var_loc_list_def' value='242'/>
      <enumerator name='gt_ggc_e_12var_loc_node' value='243'/>
      <enumerator name='gt_ggc_e_20VEC_die_arg_entry_gc' value='244'/>
      <enumerator name='gt_ggc_e_22VEC_die_arg_entry_base' value='245'/>
      <enumerator name='gt_ggc_e_20die_arg_entry_struct' value='246'/>
      <enumerator name='gt_ggc_e_16limbo_die_struct' value='247'/>
      <enumerator name='gt_ggc_e_20VEC_macinfo_entry_gc' value='248'/>
      <enumerator name='gt_ggc_e_22VEC_macinfo_entry_base' value='249'/>
      <enumerator name='gt_ggc_e_14macinfo_struct' value='250'/>
      <enumerator name='gt_ggc_e_20VEC_pubname_entry_gc' value='251'/>
      <enumerator name='gt_ggc_e_22VEC_pubname_entry_base' value='252'/>
      <enumerator name='gt_ggc_e_23die_symbol_or_type_node' value='253'/>
      <enumerator name='gt_ggc_e_19VEC_dw_attr_node_gc' value='254'/>
      <enumerator name='gt_ggc_e_21VEC_dw_attr_node_base' value='255'/>
      <enumerator name='gt_ggc_e_27VEC_dw_line_info_table_p_gc' value='256'/>
      <enumerator name='gt_ggc_e_29VEC_dw_line_info_table_p_base' value='257'/>
      <enumerator name='gt_ggc_e_25dw_line_info_table_struct' value='258'/>
      <enumerator name='gt_ggc_e_25VEC_dw_line_info_entry_gc' value='259'/>
      <enumerator name='gt_ggc_e_27VEC_dw_line_info_entry_base' value='260'/>
      <enumerator name='gt_ggc_e_18comdat_type_struct' value='261'/>
      <enumerator name='gt_ggc_e_25dw_ranges_by_label_struct' value='262'/>
      <enumerator name='gt_ggc_e_16dw_ranges_struct' value='263'/>
      <enumerator name='gt_ggc_e_14pubname_struct' value='264'/>
      <enumerator name='gt_ggc_e_19dw_line_info_struct' value='265'/>
      <enumerator name='gt_ggc_e_14dw_attr_struct' value='266'/>
      <enumerator name='gt_ggc_e_25VEC_deferred_locations_gc' value='267'/>
      <enumerator name='gt_ggc_e_27VEC_deferred_locations_base' value='268'/>
      <enumerator name='gt_ggc_e_25deferred_locations_struct' value='269'/>
      <enumerator name='gt_ggc_e_17VEC_dw_fde_ref_gc' value='270'/>
      <enumerator name='gt_ggc_e_19VEC_dw_fde_ref_base' value='271'/>
      <enumerator name='gt_ggc_e_24reg_saved_in_data_struct' value='272'/>
      <enumerator name='gt_ggc_e_17dw_cfi_row_struct' value='273'/>
      <enumerator name='gt_ggc_e_19dw_val_struct_union' value='274'/>
      <enumerator name='gt_ggc_e_22dw_val_vms_delta_union' value='275'/>
      <enumerator name='gt_ggc_e_15dwarf_file_data' value='276'/>
      <enumerator name='gt_ggc_e_20indirect_string_node' value='277'/>
      <enumerator name='gt_ggc_e_16dw_val_die_union' value='278'/>
      <enumerator name='gt_ggc_e_13dw_vec_struct' value='279'/>
      <enumerator name='gt_ggc_e_7cfa_loc' value='280'/>
      <enumerator name='gt_ggc_e_17VEC_dw_cfi_ref_gc' value='281'/>
      <enumerator name='gt_ggc_e_19VEC_dw_cfi_ref_base' value='282'/>
      <enumerator name='gt_ggc_e_19dw_cfi_oprnd_struct' value='283'/>
      <enumerator name='gt_ggc_e_18dw_loc_list_struct' value='284'/>
      <enumerator name='gt_ggc_e_19dw_loc_descr_struct' value='285'/>
      <enumerator name='gt_ggc_e_13dw_cfi_struct' value='286'/>
      <enumerator name='gt_ggc_e_13dw_val_struct' value='287'/>
      <enumerator name='gt_ggc_e_8typeinfo' value='288'/>
      <enumerator name='gt_ggc_e_14inline_summary' value='289'/>
      <enumerator name='gt_ggc_e_13ipa_edge_args' value='290'/>
      <enumerator name='gt_ggc_e_13ipa_jump_func' value='291'/>
      <enumerator name='gt_ggc_e_22VEC_alias_set_entry_gc' value='292'/>
      <enumerator name='gt_ggc_e_24VEC_alias_set_entry_base' value='293'/>
      <enumerator name='gt_ggc_e_17alias_set_entry_d' value='294'/>
      <enumerator name='gt_ggc_e_24constant_descriptor_tree' value='295'/>
      <enumerator name='gt_ggc_e_15cgraph_asm_node' value='296'/>
      <enumerator name='gt_ggc_e_25cgraph_indirect_call_info' value='297'/>
      <enumerator name='gt_ggc_e_11cgraph_edge' value='298'/>
      <enumerator name='gt_ggc_e_17cgraph_clone_info' value='299'/>
      <enumerator name='gt_ggc_e_24VEC_ipa_replace_map_p_gc' value='300'/>
      <enumerator name='gt_ggc_e_26VEC_ipa_replace_map_p_base' value='301'/>
      <enumerator name='gt_ggc_e_15ipa_replace_map' value='302'/>
      <enumerator name='gt_ggc_e_15cgraph_rtl_info' value='303'/>
      <enumerator name='gt_ggc_e_18cgraph_global_info' value='304'/>
      <enumerator name='gt_ggc_e_17cgraph_local_info' value='305'/>
      <enumerator name='gt_ggc_e_17cgraph_thunk_info' value='306'/>
      <enumerator name='gt_ggc_e_18lto_file_decl_data' value='307'/>
      <enumerator name='gt_ggc_e_12ipa_ref_list' value='308'/>
      <enumerator name='gt_ggc_e_16VEC_ipa_ref_t_gc' value='309'/>
      <enumerator name='gt_ggc_e_18VEC_ipa_ref_t_base' value='310'/>
      <enumerator name='gt_ggc_e_7ipa_ref' value='311'/>
      <enumerator name='gt_ggc_e_13ipa_ref_ptr_u' value='312'/>
      <enumerator name='gt_ggc_e_12varpool_node' value='313'/>
      <enumerator name='gt_ggc_e_11cgraph_node' value='314'/>
      <enumerator name='gt_ggc_e_18VEC_basic_block_gc' value='315'/>
      <enumerator name='gt_ggc_e_20VEC_basic_block_base' value='316'/>
      <enumerator name='gt_ggc_e_24basic_block_il_dependent' value='317'/>
      <enumerator name='gt_ggc_e_14gimple_bb_info' value='318'/>
      <enumerator name='gt_ggc_e_11rtl_bb_info' value='319'/>
      <enumerator name='gt_ggc_e_11VEC_edge_gc' value='320'/>
      <enumerator name='gt_ggc_e_13VEC_edge_base' value='321'/>
      <enumerator name='gt_ggc_e_14edge_def_insns' value='322'/>
      <enumerator name='gt_ggc_e_13VEC_loop_p_gc' value='323'/>
      <enumerator name='gt_ggc_e_15VEC_loop_p_base' value='324'/>
      <enumerator name='gt_ggc_e_4loop' value='325'/>
      <enumerator name='gt_ggc_e_9loop_exit' value='326'/>
      <enumerator name='gt_ggc_e_13nb_iter_bound' value='327'/>
      <enumerator name='gt_ggc_e_12lpt_decision' value='328'/>
      <enumerator name='gt_ggc_e_16noswitch_section' value='329'/>
      <enumerator name='gt_ggc_e_15unnamed_section' value='330'/>
      <enumerator name='gt_ggc_e_13named_section' value='331'/>
      <enumerator name='gt_ggc_e_14section_common' value='332'/>
      <enumerator name='gt_ggc_e_24types_used_by_vars_entry' value='333'/>
      <enumerator name='gt_ggc_e_17language_function' value='334'/>
      <enumerator name='gt_ggc_e_5loops' value='335'/>
      <enumerator name='gt_ggc_e_18control_flow_graph' value='336'/>
      <enumerator name='gt_ggc_e_9eh_status' value='337'/>
      <enumerator name='gt_ggc_e_11stack_usage' value='338'/>
      <enumerator name='gt_ggc_e_8rtl_data' value='339'/>
      <enumerator name='gt_ggc_e_20initial_value_struct' value='340'/>
      <enumerator name='gt_ggc_e_11frame_space' value='341'/>
      <enumerator name='gt_ggc_e_20function_subsections' value='342'/>
      <enumerator name='gt_ggc_e_13incoming_args' value='343'/>
      <enumerator name='gt_ggc_e_13varasm_status' value='344'/>
      <enumerator name='gt_ggc_e_17rtx_constant_pool' value='345'/>
      <enumerator name='gt_ggc_e_18VEC_temp_slot_p_gc' value='346'/>
      <enumerator name='gt_ggc_e_20VEC_temp_slot_p_base' value='347'/>
      <enumerator name='gt_ggc_e_13dw_fde_struct' value='348'/>
      <enumerator name='gt_ggc_e_9temp_slot' value='349'/>
      <enumerator name='gt_ggc_e_9gimple_df' value='350'/>
      <enumerator name='gt_ggc_e_6rtl_eh' value='351'/>
      <enumerator name='gt_ggc_e_23VEC_call_site_record_gc' value='352'/>
      <enumerator name='gt_ggc_e_25VEC_call_site_record_base' value='353'/>
      <enumerator name='gt_ggc_e_18call_site_record_d' value='354'/>
      <enumerator name='gt_ggc_e_11expr_status' value='355'/>
      <enumerator name='gt_ggc_e_11emit_status' value='356'/>
      <enumerator name='gt_ggc_e_14sequence_stack' value='357'/>
      <enumerator name='gt_ggc_e_15target_libfuncs' value='358'/>
      <enumerator name='gt_ggc_e_13libfunc_entry' value='359'/>
      <enumerator name='gt_ggc_e_19builtin_info_type_d' value='360'/>
      <enumerator name='gt_ggc_e_12tree_vec_map' value='361'/>
      <enumerator name='gt_ggc_e_17tree_priority_map' value='362'/>
      <enumerator name='gt_ggc_e_12tree_int_map' value='363'/>
      <enumerator name='gt_ggc_e_13tree_decl_map' value='364'/>
      <enumerator name='gt_ggc_e_8tree_map' value='365'/>
      <enumerator name='gt_ggc_e_13tree_map_base' value='366'/>
      <enumerator name='gt_ggc_e_14lang_tree_node' value='367'/>
      <enumerator name='gt_ggc_e_18tree_target_option' value='368'/>
      <enumerator name='gt_ggc_e_24tree_optimization_option' value='369'/>
      <enumerator name='gt_ggc_e_19tree_statement_list' value='370'/>
      <enumerator name='gt_ggc_e_24tree_statement_list_node' value='371'/>
      <enumerator name='gt_ggc_e_14tree_type_decl' value='372'/>
      <enumerator name='gt_ggc_e_26tree_translation_unit_decl' value='373'/>
      <enumerator name='gt_ggc_e_18tree_function_decl' value='374'/>
      <enumerator name='gt_ggc_e_20tree_decl_non_common' value='375'/>
      <enumerator name='gt_ggc_e_13tree_var_decl' value='376'/>
      <enumerator name='gt_ggc_e_18tree_decl_with_vis' value='377'/>
      <enumerator name='gt_ggc_e_14tree_parm_decl' value='378'/>
      <enumerator name='gt_ggc_e_15tree_const_decl' value='379'/>
      <enumerator name='gt_ggc_e_16tree_result_decl' value='380'/>
      <enumerator name='gt_ggc_e_9var_ann_d' value='381'/>
      <enumerator name='gt_ggc_e_15tree_label_decl' value='382'/>
      <enumerator name='gt_ggc_e_15tree_field_decl' value='383'/>
      <enumerator name='gt_ggc_e_18tree_decl_with_rtl' value='384'/>
      <enumerator name='gt_ggc_e_16tree_decl_common' value='385'/>
      <enumerator name='gt_ggc_e_9lang_decl' value='386'/>
      <enumerator name='gt_ggc_e_17tree_decl_minimal' value='387'/>
      <enumerator name='gt_ggc_e_10tree_binfo' value='388'/>
      <enumerator name='gt_ggc_e_20tree_type_non_common' value='389'/>
      <enumerator name='gt_ggc_e_28tree_type_with_lang_specific' value='390'/>
      <enumerator name='gt_ggc_e_9lang_type' value='391'/>
      <enumerator name='gt_ggc_e_16tree_type_common' value='392'/>
      <enumerator name='gt_ggc_e_16tree_type_symtab' value='393'/>
      <enumerator name='gt_ggc_e_10die_struct' value='394'/>
      <enumerator name='gt_ggc_e_10tree_block' value='395'/>
      <enumerator name='gt_ggc_e_15tree_omp_clause' value='396'/>
      <enumerator name='gt_ggc_e_9phi_arg_d' value='397'/>
      <enumerator name='gt_ggc_e_13tree_ssa_name' value='398'/>
      <enumerator name='gt_ggc_e_17ssa_use_operand_d' value='399'/>
      <enumerator name='gt_ggc_e_12ptr_info_def' value='400'/>
      <enumerator name='gt_ggc_e_8tree_exp' value='401'/>
      <enumerator name='gt_ggc_e_17tree_exp_subunion' value='402'/>
      <enumerator name='gt_ggc_e_16tree_constructor' value='403'/>
      <enumerator name='gt_ggc_e_22VEC_constructor_elt_gc' value='404'/>
      <enumerator name='gt_ggc_e_24VEC_constructor_elt_base' value='405'/>
      <enumerator name='gt_ggc_e_17constructor_elt_d' value='406'/>
      <enumerator name='gt_ggc_e_8tree_vec' value='407'/>
      <enumerator name='gt_ggc_e_9tree_list' value='408'/>
      <enumerator name='gt_ggc_e_15tree_identifier' value='409'/>
      <enumerator name='gt_ggc_e_11tree_vector' value='410'/>
      <enumerator name='gt_ggc_e_12tree_complex' value='411'/>
      <enumerator name='gt_ggc_e_11tree_string' value='412'/>
      <enumerator name='gt_ggc_e_14tree_fixed_cst' value='413'/>
      <enumerator name='gt_ggc_e_13tree_real_cst' value='414'/>
      <enumerator name='gt_ggc_e_12tree_int_cst' value='415'/>
      <enumerator name='gt_ggc_e_11tree_common' value='416'/>
      <enumerator name='gt_ggc_e_10tree_typed' value='417'/>
      <enumerator name='gt_ggc_e_9tree_base' value='418'/>
      <enumerator name='gt_ggc_e_17VEC_alias_pair_gc' value='419'/>
      <enumerator name='gt_ggc_e_19VEC_alias_pair_base' value='420'/>
      <enumerator name='gt_ggc_e_10alias_pair' value='421'/>
      <enumerator name='gt_ggc_e_10target_rtl' value='422'/>
      <enumerator name='gt_ggc_e_8function' value='423'/>
      <enumerator name='gt_ggc_e_16rtx_def_subunion' value='424'/>
      <enumerator name='gt_ggc_e_27rtx_def_debug_parameter_ref' value='425'/>
      <enumerator name='gt_ggc_e_19rtx_def_entry_value' value='426'/>
      <enumerator name='gt_ggc_e_26rtx_def_debug_implicit_ptr' value='427'/>
      <enumerator name='gt_ggc_e_20rtx_def_var_location' value='428'/>
      <enumerator name='gt_ggc_e_11rtx_def_fma' value='429'/>
      <enumerator name='gt_ggc_e_19rtx_def_us_truncate' value='430'/>
      <enumerator name='gt_ggc_e_19rtx_def_ss_truncate' value='431'/>
      <enumerator name='gt_ggc_e_16rtx_def_us_minus' value='432'/>
      <enumerator name='gt_ggc_e_17rtx_def_us_ashift' value='433'/>
      <enumerator name='gt_ggc_e_17rtx_def_ss_ashift' value='434'/>
      <enumerator name='gt_ggc_e_14rtx_def_ss_abs' value='435'/>
      <enumerator name='gt_ggc_e_14rtx_def_us_neg' value='436'/>
      <enumerator name='gt_ggc_e_14rtx_def_ss_neg' value='437'/>
      <enumerator name='gt_ggc_e_16rtx_def_ss_minus' value='438'/>
      <enumerator name='gt_ggc_e_15rtx_def_us_plus' value='439'/>
      <enumerator name='gt_ggc_e_15rtx_def_ss_plus' value='440'/>
      <enumerator name='gt_ggc_e_21rtx_def_vec_duplicate' value='441'/>
      <enumerator name='gt_ggc_e_18rtx_def_vec_concat' value='442'/>
      <enumerator name='gt_ggc_e_18rtx_def_vec_select' value='443'/>
      <enumerator name='gt_ggc_e_17rtx_def_vec_merge' value='444'/>
      <enumerator name='gt_ggc_e_14rtx_def_lo_sum' value='445'/>
      <enumerator name='gt_ggc_e_12rtx_def_high' value='446'/>
      <enumerator name='gt_ggc_e_20rtx_def_zero_extract' value='447'/>
      <enumerator name='gt_ggc_e_20rtx_def_sign_extract' value='448'/>
      <enumerator name='gt_ggc_e_14rtx_def_parity' value='449'/>
      <enumerator name='gt_ggc_e_16rtx_def_popcount' value='450'/>
      <enumerator name='gt_ggc_e_11rtx_def_ctz' value='451'/>
      <enumerator name='gt_ggc_e_11rtx_def_clz' value='452'/>
      <enumerator name='gt_ggc_e_13rtx_def_clrsb' value='453'/>
      <enumerator name='gt_ggc_e_11rtx_def_ffs' value='454'/>
      <enumerator name='gt_ggc_e_13rtx_def_bswap' value='455'/>
      <enumerator name='gt_ggc_e_12rtx_def_sqrt' value='456'/>
      <enumerator name='gt_ggc_e_11rtx_def_abs' value='457'/>
      <enumerator name='gt_ggc_e_26rtx_def_unsigned_sat_fract' value='458'/>
      <enumerator name='gt_ggc_e_17rtx_def_sat_fract' value='459'/>
      <enumerator name='gt_ggc_e_30rtx_def_unsigned_fract_convert' value='460'/>
      <enumerator name='gt_ggc_e_21rtx_def_fract_convert' value='461'/>
      <enumerator name='gt_ggc_e_20rtx_def_unsigned_fix' value='462'/>
      <enumerator name='gt_ggc_e_22rtx_def_unsigned_float' value='463'/>
      <enumerator name='gt_ggc_e_11rtx_def_fix' value='464'/>
      <enumerator name='gt_ggc_e_13rtx_def_float' value='465'/>
      <enumerator name='gt_ggc_e_22rtx_def_float_truncate' value='466'/>
      <enumerator name='gt_ggc_e_20rtx_def_float_extend' value='467'/>
      <enumerator name='gt_ggc_e_16rtx_def_truncate' value='468'/>
      <enumerator name='gt_ggc_e_19rtx_def_zero_extend' value='469'/>
      <enumerator name='gt_ggc_e_19rtx_def_sign_extend' value='470'/>
      <enumerator name='gt_ggc_e_12rtx_def_ltgt' value='471'/>
      <enumerator name='gt_ggc_e_12rtx_def_unlt' value='472'/>
      <enumerator name='gt_ggc_e_12rtx_def_unle' value='473'/>
      <enumerator name='gt_ggc_e_12rtx_def_ungt' value='474'/>
      <enumerator name='gt_ggc_e_12rtx_def_unge' value='475'/>
      <enumerator name='gt_ggc_e_12rtx_def_uneq' value='476'/>
      <enumerator name='gt_ggc_e_15rtx_def_ordered' value='477'/>
      <enumerator name='gt_ggc_e_17rtx_def_unordered' value='478'/>
      <enumerator name='gt_ggc_e_11rtx_def_ltu' value='479'/>
      <enumerator name='gt_ggc_e_11rtx_def_leu' value='480'/>
      <enumerator name='gt_ggc_e_11rtx_def_gtu' value='481'/>
      <enumerator name='gt_ggc_e_11rtx_def_geu' value='482'/>
      <enumerator name='gt_ggc_e_10rtx_def_lt' value='483'/>
      <enumerator name='gt_ggc_e_10rtx_def_le' value='484'/>
      <enumerator name='gt_ggc_e_10rtx_def_gt' value='485'/>
      <enumerator name='gt_ggc_e_10rtx_def_ge' value='486'/>
      <enumerator name='gt_ggc_e_10rtx_def_eq' value='487'/>
      <enumerator name='gt_ggc_e_10rtx_def_ne' value='488'/>
      <enumerator name='gt_ggc_e_19rtx_def_post_modify' value='489'/>
      <enumerator name='gt_ggc_e_18rtx_def_pre_modify' value='490'/>
      <enumerator name='gt_ggc_e_16rtx_def_post_inc' value='491'/>
      <enumerator name='gt_ggc_e_16rtx_def_post_dec' value='492'/>
      <enumerator name='gt_ggc_e_15rtx_def_pre_inc' value='493'/>
      <enumerator name='gt_ggc_e_15rtx_def_pre_dec' value='494'/>
      <enumerator name='gt_ggc_e_12rtx_def_umax' value='495'/>
      <enumerator name='gt_ggc_e_12rtx_def_umin' value='496'/>
      <enumerator name='gt_ggc_e_12rtx_def_smax' value='497'/>
      <enumerator name='gt_ggc_e_12rtx_def_smin' value='498'/>
      <enumerator name='gt_ggc_e_16rtx_def_rotatert' value='499'/>
      <enumerator name='gt_ggc_e_16rtx_def_lshiftrt' value='500'/>
      <enumerator name='gt_ggc_e_16rtx_def_ashiftrt' value='501'/>
      <enumerator name='gt_ggc_e_14rtx_def_rotate' value='502'/>
      <enumerator name='gt_ggc_e_14rtx_def_ashift' value='503'/>
      <enumerator name='gt_ggc_e_11rtx_def_not' value='504'/>
      <enumerator name='gt_ggc_e_11rtx_def_xor' value='505'/>
      <enumerator name='gt_ggc_e_11rtx_def_ior' value='506'/>
      <enumerator name='gt_ggc_e_11rtx_def_and' value='507'/>
      <enumerator name='gt_ggc_e_12rtx_def_umod' value='508'/>
      <enumerator name='gt_ggc_e_12rtx_def_udiv' value='509'/>
      <enumerator name='gt_ggc_e_11rtx_def_mod' value='510'/>
      <enumerator name='gt_ggc_e_14rtx_def_us_div' value='511'/>
      <enumerator name='gt_ggc_e_14rtx_def_ss_div' value='512'/>
      <enumerator name='gt_ggc_e_11rtx_def_div' value='513'/>
      <enumerator name='gt_ggc_e_15rtx_def_us_mult' value='514'/>
      <enumerator name='gt_ggc_e_15rtx_def_ss_mult' value='515'/>
      <enumerator name='gt_ggc_e_12rtx_def_mult' value='516'/>
      <enumerator name='gt_ggc_e_11rtx_def_neg' value='517'/>
      <enumerator name='gt_ggc_e_13rtx_def_minus' value='518'/>
      <enumerator name='gt_ggc_e_12rtx_def_plus' value='519'/>
      <enumerator name='gt_ggc_e_15rtx_def_compare' value='520'/>
      <enumerator name='gt_ggc_e_20rtx_def_if_then_else' value='521'/>
      <enumerator name='gt_ggc_e_11rtx_def_cc0' value='522'/>
      <enumerator name='gt_ggc_e_18rtx_def_symbol_ref' value='523'/>
      <enumerator name='gt_ggc_e_12fake_union_1' value='524'/>
      <enumerator name='gt_ggc_e_17rtx_def_label_ref' value='525'/>
      <enumerator name='gt_ggc_e_11rtx_def_mem' value='526'/>
      <enumerator name='gt_ggc_e_15rtx_def_concatn' value='527'/>
      <enumerator name='gt_ggc_e_14rtx_def_concat' value='528'/>
      <enumerator name='gt_ggc_e_23rtx_def_strict_low_part' value='529'/>
      <enumerator name='gt_ggc_e_14rtx_def_subreg' value='530'/>
      <enumerator name='gt_ggc_e_15rtx_def_scratch' value='531'/>
      <enumerator name='gt_ggc_e_11rtx_def_reg' value='532'/>
      <enumerator name='gt_ggc_e_10rtx_def_pc' value='533'/>
      <enumerator name='gt_ggc_e_13rtx_def_const' value='534'/>
      <enumerator name='gt_ggc_e_20rtx_def_const_string' value='535'/>
      <enumerator name='gt_ggc_e_20rtx_def_const_vector' value='536'/>
      <enumerator name='gt_ggc_e_20rtx_def_const_double' value='537'/>
      <enumerator name='gt_ggc_e_19rtx_def_const_fixed' value='538'/>
      <enumerator name='gt_ggc_e_17rtx_def_const_int' value='539'/>
      <enumerator name='gt_ggc_e_15rtx_def_trap_if' value='540'/>
      <enumerator name='gt_ggc_e_17rtx_def_eh_return' value='541'/>
      <enumerator name='gt_ggc_e_21rtx_def_simple_return' value='542'/>
      <enumerator name='gt_ggc_e_14rtx_def_return' value='543'/>
      <enumerator name='gt_ggc_e_12rtx_def_call' value='544'/>
      <enumerator name='gt_ggc_e_15rtx_def_clobber' value='545'/>
      <enumerator name='gt_ggc_e_11rtx_def_use' value='546'/>
      <enumerator name='gt_ggc_e_11rtx_def_set' value='547'/>
      <enumerator name='gt_ggc_e_16rtx_def_prefetch' value='548'/>
      <enumerator name='gt_ggc_e_21rtx_def_addr_diff_vec' value='549'/>
      <enumerator name='gt_ggc_e_16rtx_def_addr_vec' value='550'/>
      <enumerator name='gt_ggc_e_23rtx_def_unspec_volatile' value='551'/>
      <enumerator name='gt_ggc_e_14rtx_def_unspec' value='552'/>
      <enumerator name='gt_ggc_e_20rtx_def_asm_operands' value='553'/>
      <enumerator name='gt_ggc_e_17rtx_def_asm_input' value='554'/>
      <enumerator name='gt_ggc_e_16rtx_def_parallel' value='555'/>
      <enumerator name='gt_ggc_e_17rtx_def_cond_exec' value='556'/>
      <enumerator name='gt_ggc_e_12rtx_def_note' value='557'/>
      <enumerator name='gt_ggc_e_18rtx_def_code_label' value='558'/>
      <enumerator name='gt_ggc_e_15rtx_def_barrier' value='559'/>
      <enumerator name='gt_ggc_e_17rtx_def_call_insn' value='560'/>
      <enumerator name='gt_ggc_e_17rtx_def_jump_insn' value='561'/>
      <enumerator name='gt_ggc_e_12rtx_def_insn' value='562'/>
      <enumerator name='gt_ggc_e_18rtx_def_debug_insn' value='563'/>
      <enumerator name='gt_ggc_e_15rtx_def_address' value='564'/>
      <enumerator name='gt_ggc_e_16rtx_def_sequence' value='565'/>
      <enumerator name='gt_ggc_e_17rtx_def_insn_list' value='566'/>
      <enumerator name='gt_ggc_e_17rtx_def_expr_list' value='567'/>
      <enumerator name='gt_ggc_e_18rtx_def_debug_expr' value='568'/>
      <enumerator name='gt_ggc_e_13rtx_def_value' value='569'/>
      <enumerator name='gt_ggc_e_15rtx_def_UnKnown' value='570'/>
      <enumerator name='gt_ggc_e_23rtx_def_symbol_subunion' value='571'/>
      <enumerator name='gt_ggc_e_21rtx_def_note_subunion' value='572'/>
      <enumerator name='gt_ggc_e_23constant_descriptor_rtx' value='573'/>
      <enumerator name='gt_ggc_e_11fixed_value' value='574'/>
      <enumerator name='gt_ggc_e_10real_value' value='575'/>
      <enumerator name='gt_ggc_e_12block_symbol' value='576'/>
      <enumerator name='gt_ggc_e_12object_block' value='577'/>
      <enumerator name='gt_ggc_e_9reg_attrs' value='578'/>
      <enumerator name='gt_ggc_e_9mem_attrs' value='579'/>
      <enumerator name='gt_ggc_e_13coverage_data' value='580'/>
      <enumerator name='gt_ggc_e_14bitmap_obstack' value='581'/>
      <enumerator name='gt_ggc_e_18bitmap_element_def' value='582'/>
      <enumerator name='gt_ggc_e_12splay_tree_s' value='583'/>
      <enumerator name='gt_ggc_e_17splay_tree_node_s' value='584'/>
      <enumerator name='gt_ggc_e_4htab' value='585'/>
      <enumerator name='gt_ggc_e_16machine_function' value='586'/>
      <enumerator name='gt_ggc_e_17stack_local_entry' value='587'/>
      <enumerator name='gt_ggc_e_19machine_frame_state' value='588'/>
      <enumerator name='gt_ggc_e_10VEC_rtx_gc' value='589'/>
      <enumerator name='gt_ggc_e_12VEC_rtx_base' value='590'/>
      <enumerator name='gt_ggc_e_13VEC_gimple_gc' value='591'/>
      <enumerator name='gt_ggc_e_15VEC_gimple_base' value='592'/>
      <enumerator name='gt_ggc_e_11VEC_tree_gc' value='593'/>
      <enumerator name='gt_ggc_e_13VEC_tree_none' value='594'/>
      <enumerator name='gt_ggc_e_13VEC_tree_base' value='595'/>
      <enumerator name='gt_ggc_e_12VEC_uchar_gc' value='596'/>
      <enumerator name='gt_ggc_e_14VEC_uchar_base' value='597'/>
      <enumerator name='gt_ggc_e_10vec_prefix' value='598'/>
      <enumerator name='gt_ggc_e_15basic_block_def' value='599'/>
      <enumerator name='gt_ggc_e_8edge_def' value='600'/>
      <enumerator name='gt_ggc_e_12gimple_seq_d' value='601'/>
      <enumerator name='gt_ggc_e_15cl_optimization' value='602'/>
      <enumerator name='gt_ggc_e_16cl_target_option' value='603'/>
      <enumerator name='gt_ggc_e_7section' value='604'/>
      <enumerator name='gt_ggc_e_18gimple_statement_d' value='605'/>
      <enumerator name='gt_ggc_e_9rtvec_def' value='606'/>
      <enumerator name='gt_ggc_e_7rtx_def' value='607'/>
      <enumerator name='gt_ggc_e_15bitmap_head_def' value='608'/>
      <enumerator name='gt_ggc_e_11cpp_macro_u' value='609'/>
      <enumerator name='gt_ggc_e_13ht_identifier' value='610'/>
      <enumerator name='gt_ggc_e_19_cpp_hashnode_value' value='611'/>
      <enumerator name='gt_ggc_e_11cpp_token_u' value='612'/>
      <enumerator name='gt_ggc_e_14cpp_identifier' value='613'/>
      <enumerator name='gt_ggc_e_13cpp_macro_arg' value='614'/>
      <enumerator name='gt_ggc_e_6answer' value='615'/>
      <enumerator name='gt_ggc_e_9cpp_macro' value='616'/>
      <enumerator name='gt_ggc_e_10cpp_string' value='617'/>
      <enumerator name='gt_ggc_e_9cpp_token' value='618'/>
      <enumerator name='gt_ggc_e_9line_maps' value='619'/>
      <enumerator name='gt_ggc_e_9maps_info' value='620'/>
      <enumerator name='gt_ggc_e_8line_map' value='621'/>
      <enumerator name='gt_ggc_e_5map_u' value='622'/>
      <enumerator name='gt_ggc_e_14line_map_macro' value='623'/>
      <enumerator name='gt_ggc_e_9tree_node' value='624'/>
      <enumerator name='gt_ggc_e_12cpp_hashnode' value='625'/>
      <enumerator name='gt_ggc_e_17line_map_ordinary' value='626'/>
      <enumerator name='gt_e_II17splay_tree_node_s' value='627'/>
      <enumerator name='gt_e_SP9tree_node17splay_tree_node_s' value='628'/>
      <enumerator name='gt_e_P9tree_nodeP9tree_node17splay_tree_node_s' value='629'/>
      <enumerator name='gt_e_P17string_descriptor4htab' value='630'/>
      <enumerator name='gt_e_P14type_assertion4htab' value='631'/>
      <enumerator name='gt_e_P18treetreehash_entry4htab' value='632'/>
      <enumerator name='gt_e_P17module_htab_entry4htab' value='633'/>
      <enumerator name='gt_e_P21pending_abstract_type4htab' value='634'/>
      <enumerator name='gt_e_P14constexpr_call4htab' value='635'/>
      <enumerator name='gt_e_P16constexpr_fundef4htab' value='636'/>
      <enumerator name='gt_e_P10spec_entry4htab' value='637'/>
      <enumerator name='gt_e_P16cxx_int_tree_map4htab' value='638'/>
      <enumerator name='gt_e_P17named_label_entry4htab' value='639'/>
      <enumerator name='gt_e_P17lto_in_decl_state4htab' value='640'/>
      <enumerator name='gt_e_P20lto_symtab_entry_def4htab' value='641'/>
      <enumerator name='gt_e_P9tree_nodeP9tree_node12splay_tree_s' value='642'/>
      <enumerator name='gt_e_P12varpool_node4htab' value='643'/>
      <enumerator name='gt_e_P13scev_info_str4htab' value='644'/>
      <enumerator name='gt_e_P15tm_restart_node4htab' value='645'/>
      <enumerator name='gt_e_P12tree_int_map4htab' value='646'/>
      <enumerator name='gt_e_P8tree_map4htab' value='647'/>
      <enumerator name='gt_e_P23constant_descriptor_rtx4htab' value='648'/>
      <enumerator name='gt_e_P24constant_descriptor_tree4htab' value='649'/>
      <enumerator name='gt_e_P12object_block4htab' value='650'/>
      <enumerator name='gt_e_P7section4htab' value='651'/>
      <enumerator name='gt_e_P17tree_priority_map4htab' value='652'/>
      <enumerator name='gt_e_P12tree_vec_map4htab' value='653'/>
      <enumerator name='gt_e_P13tree_decl_map4htab' value='654'/>
      <enumerator name='gt_e_P9type_hash4htab' value='655'/>
      <enumerator name='gt_e_P23temp_slot_address_entry4htab' value='656'/>
      <enumerator name='gt_e_P15throw_stmt_node4htab' value='657'/>
      <enumerator name='gt_e_P9reg_attrs4htab' value='658'/>
      <enumerator name='gt_e_P9mem_attrs4htab' value='659'/>
      <enumerator name='gt_e_P7rtx_def4htab' value='660'/>
      <enumerator name='gt_e_P22cached_dw_loc_list_def4htab' value='661'/>
      <enumerator name='gt_e_P16var_loc_list_def4htab' value='662'/>
      <enumerator name='gt_e_P10die_struct4htab' value='663'/>
      <enumerator name='gt_e_P15dwarf_file_data4htab' value='664'/>
      <enumerator name='gt_e_P20indirect_string_node4htab' value='665'/>
      <enumerator name='gt_e_SP9tree_node12splay_tree_s' value='666'/>
      <enumerator name='gt_e_P11cgraph_node4htab' value='667'/>
      <enumerator name='gt_e_II12splay_tree_s' value='668'/>
      <enumerator name='gt_e_P11cgraph_edge4htab' value='669'/>
      <enumerator name='gt_e_P9loop_exit4htab' value='670'/>
      <enumerator name='gt_e_P24types_used_by_vars_entry4htab' value='671'/>
      <enumerator name='gt_e_P9tree_node4htab' value='672'/>
      <enumerator name='gt_e_P13libfunc_entry4htab' value='673'/>
      <enumerator name='gt_types_enum_last' value='674'/>
    </enum-decl>
    <!-- struct alloc_zone -->
    <class-decl name='alloc_zone' size-in-bits='32' is-struct='yes' visibility='default' filepath='../.././gcc/ggc-none.c' line='75' column='1' id='type-id-200'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int alloc_zone::dummy -->
        <var-decl name='dummy' type-id='type-id-18' visibility='default' filepath='../.././gcc/ggc-none.c' line='77' column='1'/>
      </data-member>
    </class-decl>
    <!-- void* ggc_alloc_typed_stat(gt_types_enum, size_t) -->
    <function-decl name='ggc_alloc_typed_stat' mangled-name='_Z20ggc_alloc_typed_stat13gt_types_enumm' filepath='../.././gcc/ggc-none.c' line='36' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z20ggc_alloc_typed_stat13gt_types_enumm'>
      <!-- parameter of type 'enum gt_types_enum' -->
      <parameter type-id='type-id-199' name='gte' filepath='../.././gcc/ggc-none.c' line='36' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='size' filepath='../.././gcc/ggc-none.c' line='36' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- size_t ggc_round_alloc_size(size_t) -->
    <function-decl name='ggc_round_alloc_size' mangled-name='_Z20ggc_round_alloc_sizem' filepath='../.././gcc/ggc-none.c' line='46' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z20ggc_round_alloc_sizem'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- void* ggc_internal_alloc_stat(size_t) -->
    <function-decl name='ggc_internal_alloc_stat' mangled-name='_Z23ggc_internal_alloc_statm' filepath='../.././gcc/ggc-none.c' line='52' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z23ggc_internal_alloc_statm'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* ggc_internal_cleared_alloc_stat(size_t) -->
    <function-decl name='ggc_internal_cleared_alloc_stat' mangled-name='_Z31ggc_internal_cleared_alloc_statm' filepath='../.././gcc/ggc-none.c' line='58' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z31ggc_internal_cleared_alloc_statm'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* ggc_realloc_stat(void*, size_t) -->
    <function-decl name='ggc_realloc_stat' mangled-name='_Z16ggc_realloc_statPvm' filepath='../.././gcc/ggc-none.c' line='64' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16ggc_realloc_statPvm'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void ggc_free(void*) -->
    <function-decl name='ggc_free' mangled-name='_Z8ggc_freePv' filepath='../.././gcc/ggc-none.c' line='70' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z8ggc_freePv'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- alloc_zone rtl_zone -->
    <var-decl name='rtl_zone' type-id='type-id-200' mangled-name='rtl_zone' visibility='default' filepath='../.././gcc/ggc-none.c' line='80' column='1' elf-symbol-id='rtl_zone'/>
    <!-- alloc_zone tree_zone -->
    <var-decl name='tree_zone' type-id='type-id-200' mangled-name='tree_zone' visibility='default' filepath='../.././gcc/ggc-none.c' line='81' column='1' elf-symbol-id='tree_zone'/>
    <!-- alloc_zone tree_id_zone -->
    <var-decl name='tree_id_zone' type-id='type-id-200' mangled-name='tree_id_zone' visibility='default' filepath='../.././gcc/ggc-none.c' line='82' column='1' elf-symbol-id='tree_id_zone'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././gcc/input.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
    <!-- struct linemap_stats -->
    <class-decl name='linemap_stats' size-in-bits='704' is-struct='yes' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='685' column='1' id='type-id-201'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int linemap_stats::num_ordinary_maps_allocated -->
        <var-decl name='num_ordinary_maps_allocated' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='687' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- long int linemap_stats::num_ordinary_maps_used -->
        <var-decl name='num_ordinary_maps_used' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='688' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- long int linemap_stats::ordinary_maps_allocated_size -->
        <var-decl name='ordinary_maps_allocated_size' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='689' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- long int linemap_stats::ordinary_maps_used_size -->
        <var-decl name='ordinary_maps_used_size' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='690' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- long int linemap_stats::num_expanded_macros -->
        <var-decl name='num_expanded_macros' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='691' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- long int linemap_stats::num_macro_tokens -->
        <var-decl name='num_macro_tokens' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='692' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- long int linemap_stats::num_macro_maps_used -->
        <var-decl name='num_macro_maps_used' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='693' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- long int linemap_stats::macro_maps_allocated_size -->
        <var-decl name='macro_maps_allocated_size' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='694' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- long int linemap_stats::macro_maps_used_size -->
        <var-decl name='macro_maps_used_size' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='695' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- long int linemap_stats::macro_maps_locations_size -->
        <var-decl name='macro_maps_locations_size' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='696' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- long int linemap_stats::duplicated_macro_maps_locations_size -->
        <var-decl name='duplicated_macro_maps_locations_size' type-id='type-id-21' visibility='default' filepath='../.././gcc/../libcpp/include/line-map.h' line='697' column='1'/>
      </data-member>
    </class-decl>
    <!-- linemap_stats* -->
    <pointer-type-def type-id='type-id-201' size-in-bits='64' id='type-id-202'/>
    <!-- expanded_location expand_location(source_location) -->
    <function-decl name='expand_location' mangled-name='_Z15expand_locationj' filepath='../.././gcc/input.c' line='38' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15expand_locationj'>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef expanded_location -->
      <return type-id='type-id-194'/>
    </function-decl>
    <!-- void dump_line_table_statistics() -->
    <function-decl name='dump_line_table_statistics' mangled-name='_Z26dump_line_table_statisticsv' filepath='../.././gcc/input.c' line='83' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z26dump_line_table_statisticsv'>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- line_maps* line_table -->
    <var-decl name='line_table' type-id='type-id-196' mangled-name='line_table' visibility='default' filepath='../.././gcc/input.c' line='31' column='1' elf-symbol-id='line_table'/>
    <!-- location_t input_location -->
    <var-decl name='input_location' type-id='type-id-75' mangled-name='input_location' visibility='default' filepath='../.././gcc/input.c' line='29' column='1' elf-symbol-id='input_location'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././gcc/intl.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
    <!-- wchar_t -->
    <type-decl name='wchar_t' size-in-bits='32' id='type-id-203'/>
    <!-- typedef int nl_item -->
    <typedef-decl name='nl_item' type-id='type-id-18' filepath='/usr/include/nl_types.h' line='37' column='1' id='type-id-204'/>
    <!-- const wchar_t -->
    <qualified-type-def type-id='type-id-203' const='yes' id='type-id-205'/>
    <!-- const wchar_t* -->
    <pointer-type-def type-id='type-id-205' size-in-bits='64' id='type-id-206'/>
    <!-- wchar_t* -->
    <pointer-type-def type-id='type-id-203' size-in-bits='64' id='type-id-207'/>
    <!-- void gcc_init_libintl() -->
    <function-decl name='gcc_init_libintl' mangled-name='_Z16gcc_init_libintlv' filepath='../.././gcc/intl.c' line='50' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16gcc_init_libintlv'>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- size_t gcc_gettext_width(const char*) -->
    <function-decl name='gcc_gettext_width' mangled-name='_Z17gcc_gettext_widthPKc' filepath='../.././gcc/intl.c' line='99' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17gcc_gettext_widthPKc'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- char* get_spaces(const char*) -->
    <function-decl name='get_spaces' mangled-name='_Z10get_spacesPKc' filepath='../.././gcc/intl.c' line='141' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z10get_spacesPKc'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- const char* open_quote -->
    <var-decl name='open_quote' type-id='type-id-15' mangled-name='open_quote' visibility='default' filepath='../.././gcc/intl.c' line='31' column='1' elf-symbol-id='open_quote'/>
    <!-- const char* close_quote -->
    <var-decl name='close_quote' type-id='type-id-15' mangled-name='close_quote' visibility='default' filepath='../.././gcc/intl.c' line='34' column='1' elf-symbol-id='close_quote'/>
    <!-- const char* locale_encoding -->
    <var-decl name='locale_encoding' type-id='type-id-15' mangled-name='locale_encoding' visibility='default' filepath='../.././gcc/intl.c' line='37' column='1' elf-symbol-id='locale_encoding'/>
    <!-- bool locale_utf8 -->
    <var-decl name='locale_utf8' type-id='type-id-1' mangled-name='locale_utf8' visibility='default' filepath='../.././gcc/intl.c' line='40' column='1' elf-symbol-id='locale_utf8'/>
    <!-- char* setlocale(int, const char*) -->
    <function-decl name='setlocale' filepath='/usr/include/locale.h' line='125' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* bindtextdomain(const char*, const char*) -->
    <function-decl name='bindtextdomain' filepath='/usr/include/libintl.h' line='87' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* textdomain(const char*) -->
    <function-decl name='textdomain' filepath='/usr/include/libintl.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* nl_langinfo(nl_item) -->
    <function-decl name='nl_langinfo' filepath='/usr/include/langinfo.h' line='584' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef nl_item' -->
      <parameter type-id='type-id-204'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- int strcasecmp(const char*, const char*) -->
    <function-decl name='strcasecmp' filepath='/usr/include/string.h' line='536' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- size_t mbstowcs(wchar_t*, const char*, size_t) -->
    <function-decl name='mbstowcs' filepath='/usr/include/stdlib.h' line='871' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'wchar_t*' -->
      <parameter type-id='type-id-207'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- int wcswidth(const wchar_t*, size_t) -->
    <function-decl name='wcswidth' filepath='/usr/include/wchar.h' line='441' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const wchar_t*' -->
      <parameter type-id='type-id-206'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void* memset(void*, int, size_t) -->
    <function-decl name='memset' filepath='/usr/include/string.h' line='65' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././gcc/pretty-print.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
    <!-- typedef void* iconv_t -->
    <typedef-decl name='iconv_t' type-id='type-id-14' filepath='/usr/include/iconv.h' line='30' column='1' id='type-id-208'/>
    <!-- const pretty_printer -->
    <qualified-type-def type-id='type-id-96' const='yes' id='type-id-209'/>
    <!-- const pretty_printer* -->
    <pointer-type-def type-id='type-id-209' size-in-bits='64' id='type-id-210'/>
    <!-- size_t* -->
    <pointer-type-def type-id='type-id-32' size-in-bits='64' id='type-id-211'/>
    <!-- void* (typedef size_t)* -->
    <pointer-type-def type-id='type-id-212' size-in-bits='64' id='type-id-213'/>
    <!-- void pp_base_set_line_maximum_length(pretty_printer*, int) -->
    <function-decl name='pp_base_set_line_maximum_length' mangled-name='_Z31pp_base_set_line_maximum_lengthP17pretty_print_infoi' filepath='../.././gcc/pretty-print.c' line='587' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z31pp_base_set_line_maximum_lengthP17pretty_print_infoi'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39' name='pp' filepath='../.././gcc/pretty-print.c' line='587' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='length' filepath='../.././gcc/pretty-print.c' line='587' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_clear_output_area(pretty_printer*) -->
    <function-decl name='pp_base_clear_output_area' mangled-name='_Z25pp_base_clear_output_areaP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='595' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z25pp_base_clear_output_areaP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_set_prefix(pretty_printer*, const char*) -->
    <function-decl name='pp_base_set_prefix' mangled-name='_Z18pp_base_set_prefixP17pretty_print_infoPKc' filepath='../.././gcc/pretty-print.c' line='603' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18pp_base_set_prefixP17pretty_print_infoPKc'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_destroy_prefix(pretty_printer*) -->
    <function-decl name='pp_base_destroy_prefix' mangled-name='_Z22pp_base_destroy_prefixP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='613' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z22pp_base_destroy_prefixP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_construct(pretty_printer*, const char*, int) -->
    <function-decl name='pp_construct' mangled-name='_Z12pp_constructP17pretty_print_infoPKci' filepath='../.././gcc/pretty-print.c' line='657' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12pp_constructP17pretty_print_infoPKci'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const char* pp_base_formatted_text(pretty_printer*) -->
    <function-decl name='pp_base_formatted_text' mangled-name='_Z22pp_base_formatted_textP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='693' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z22pp_base_formatted_textP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39' name='pp' filepath='../.././gcc/pretty-print.c' line='693' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- void pp_write_text_to_stream(pretty_printer*) -->
    <function-decl name='pp_write_text_to_stream' mangled-name='_Z23pp_write_text_to_streamP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='95' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z23pp_write_text_to_streamP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_flush(pretty_printer*) -->
    <function-decl name='pp_base_flush' mangled-name='_Z13pp_base_flushP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='574' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z13pp_base_flushP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const char* pp_base_last_position_in_text(const pretty_printer*) -->
    <function-decl name='pp_base_last_position_in_text' mangled-name='_Z29pp_base_last_position_in_textPK17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='702' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z29pp_base_last_position_in_textPK17pretty_print_info'>
      <!-- parameter of type 'const pretty_printer*' -->
      <parameter type-id='type-id-210' name='pp' filepath='../.././gcc/pretty-print.c' line='702' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- int pp_base_remaining_character_count_for_line(pretty_printer*) -->
    <function-decl name='pp_base_remaining_character_count_for_line' mangled-name='_Z42pp_base_remaining_character_count_for_lineP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='715' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z42pp_base_remaining_character_count_for_lineP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39' name='pp' filepath='../.././gcc/pretty-print.c' line='715' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void pp_base_newline(pretty_printer*) -->
    <function-decl name='pp_base_newline' mangled-name='_Z15pp_base_newlineP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='759' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15pp_base_newlineP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_character(pretty_printer*, int) -->
    <function-decl name='pp_base_character' mangled-name='_Z17pp_base_characterP17pretty_print_infoi' filepath='../.././gcc/pretty-print.c' line='767' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17pp_base_characterP17pretty_print_infoi'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39' name='pp' filepath='../.././gcc/pretty-print.c' line='587' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='length' filepath='../.././gcc/pretty-print.c' line='587' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_indent(pretty_printer*) -->
    <function-decl name='pp_base_indent' mangled-name='_Z14pp_base_indentP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='158' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14pp_base_indentP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_emit_prefix(pretty_printer*) -->
    <function-decl name='pp_base_emit_prefix' mangled-name='_Z19pp_base_emit_prefixP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='624' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19pp_base_emit_prefixP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_append_text(pretty_printer*, const char*, const char*) -->
    <function-decl name='pp_base_append_text' mangled-name='_Z19pp_base_append_textP17pretty_print_infoPKcS2_' filepath='../.././gcc/pretty-print.c' line='677' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19pp_base_append_textP17pretty_print_infoPKcS2_'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39' name='pp' filepath='../.././gcc/pretty-print.c' line='677' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='start' filepath='../.././gcc/pretty-print.c' line='677' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='end' filepath='../.././gcc/pretty-print.c' line='677' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_string(pretty_printer*, const char*) -->
    <function-decl name='pp_base_string' mangled-name='_Z14pp_base_stringP17pretty_print_infoPKc' filepath='../.././gcc/pretty-print.c' line='783' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14pp_base_stringP17pretty_print_infoPKc'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_output_formatted_text(pretty_printer*) -->
    <function-decl name='pp_base_output_formatted_text' mangled-name='_Z29pp_base_output_formatted_textP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='535' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z29pp_base_output_formatted_textP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_format(pretty_printer*, text_info*) -->
    <function-decl name='pp_base_format' mangled-name='_Z14pp_base_formatP17pretty_print_infoP9text_info' filepath='../.././gcc/pretty-print.c' line='204' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14pp_base_formatP17pretty_print_infoP9text_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- parameter of type 'text_info*' -->
      <parameter type-id='type-id-133'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_printf(pretty_printer*, const char*, ...) -->
    <function-decl name='pp_printf' mangled-name='_Z9pp_printfP17pretty_print_infoPKcz' filepath='../.././gcc/pretty-print.c' line='723' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9pp_printfP17pretty_print_infoPKcz'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_format_verbatim(pretty_printer*, text_info*) -->
    <function-decl name='pp_base_format_verbatim' mangled-name='_Z23pp_base_format_verbatimP17pretty_print_infoP9text_info' filepath='../.././gcc/pretty-print.c' line='559' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z23pp_base_format_verbatimP17pretty_print_infoP9text_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- parameter of type 'text_info*' -->
      <parameter type-id='type-id-133'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_verbatim(pretty_printer*, const char*, ...) -->
    <function-decl name='pp_verbatim' mangled-name='_Z11pp_verbatimP17pretty_print_infoPKcz' filepath='../.././gcc/pretty-print.c' line='741' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z11pp_verbatimP17pretty_print_infoPKcz'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void pp_base_maybe_space(pretty_printer*) -->
    <function-decl name='pp_base_maybe_space' mangled-name='_Z19pp_base_maybe_spaceP17pretty_print_info' filepath='../.././gcc/pretty-print.c' line='791' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19pp_base_maybe_spaceP17pretty_print_info'>
      <!-- parameter of type 'pretty_printer*' -->
      <parameter type-id='type-id-39'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const char* identifier_to_locale(const char*) -->
    <function-decl name='identifier_to_locale' mangled-name='_Z20identifier_to_localePKc' filepath='../.././gcc/pretty-print.c' line='873' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z20identifier_to_localePKc'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- void* (typedef size_t)* identifier_to_locale_alloc -->
    <var-decl name='identifier_to_locale_alloc' type-id='type-id-213' mangled-name='identifier_to_locale_alloc' visibility='default' filepath='../.././gcc/pretty-print.c' line='859' column='1' elf-symbol-id='identifier_to_locale_alloc'/>
    <!-- void (void*)* identifier_to_locale_free -->
    <var-decl name='identifier_to_locale_free' type-id='type-id-141' mangled-name='identifier_to_locale_free' visibility='default' filepath='../.././gcc/pretty-print.c' line='860' column='1' elf-symbol-id='identifier_to_locale_free'/>
    <!-- char* xstrerror(int) -->
    <function-decl name='xstrerror' filepath='../.././gcc/../include/libiberty.h' line='259' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- unsigned long int strtoul(const char*, char**, int) -->
    <function-decl name='strtoul' filepath='/usr/include/stdlib.h' line='188' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- unsigned long int -->
      <return type-id='type-id-28'/>
    </function-decl>
    <!-- int sprintf(char*, const char*, ...) -->
    <function-decl name='sprintf' filepath='/usr/include/stdio.h' line='363' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- size_t iconv(iconv_t, char**, size_t*, char**, size_t*) -->
    <function-decl name='iconv' filepath='/usr/include/iconv.h' line='43' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef iconv_t' -->
      <parameter type-id='type-id-208'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123'/>
      <!-- parameter of type 'size_t*' -->
      <parameter type-id='type-id-211'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123'/>
      <!-- parameter of type 'size_t*' -->
      <parameter type-id='type-id-211'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- int iconv_close(iconv_t) -->
    <function-decl name='iconv_close' filepath='/usr/include/iconv.h' line='52' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef iconv_t' -->
      <parameter type-id='type-id-208'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- iconv_t iconv_open(const char*, const char*) -->
    <function-decl name='iconv_open' filepath='/usr/include/iconv.h' line='38' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef iconv_t -->
      <return type-id='type-id-208'/>
    </function-decl>
    <!-- void* (size_t) -->
    <function-type size-in-bits='64' id='type-id-212'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../.././gcc/tlink.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
    <!-- struct symbol_stack_entry -->
    <class-decl name='symbol_stack_entry' size-in-bits='128' is-struct='yes' visibility='default' filepath='../.././gcc/tlink.c' line='188' column='1' id='type-id-214'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- symbol* symbol_stack_entry::value -->
        <var-decl name='value' type-id='type-id-215' visibility='default' filepath='../.././gcc/tlink.c' line='190' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- symbol_stack_entry* symbol_stack_entry::next -->
        <var-decl name='next' type-id='type-id-216' visibility='default' filepath='../.././gcc/tlink.c' line='191' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef symbol_hash_entry symbol -->
    <typedef-decl name='symbol' type-id='type-id-217' filepath='../.././gcc/tlink.c' line='60' column='1' id='type-id-218'/>
    <!-- struct symbol_hash_entry -->
    <class-decl name='symbol_hash_entry' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././gcc/tlink.c' line='53' column='1' id='type-id-217'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* symbol_hash_entry::key -->
        <var-decl name='key' type-id='type-id-15' visibility='default' filepath='../.././gcc/tlink.c' line='55' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- file_hash_entry* symbol_hash_entry::file -->
        <var-decl name='file' type-id='type-id-219' visibility='default' filepath='../.././gcc/tlink.c' line='56' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int symbol_hash_entry::chosen -->
        <var-decl name='chosen' type-id='type-id-18' visibility='default' filepath='../.././gcc/tlink.c' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int symbol_hash_entry::tweaking -->
        <var-decl name='tweaking' type-id='type-id-18' visibility='default' filepath='../.././gcc/tlink.c' line='58' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int symbol_hash_entry::tweaked -->
        <var-decl name='tweaked' type-id='type-id-18' visibility='default' filepath='../.././gcc/tlink.c' line='59' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct file_hash_entry -->
    <class-decl name='file_hash_entry' size-in-bits='320' is-struct='yes' visibility='default' filepath='../.././gcc/tlink.c' line='62' column='1' id='type-id-220'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* file_hash_entry::key -->
        <var-decl name='key' type-id='type-id-15' visibility='default' filepath='../.././gcc/tlink.c' line='64' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* file_hash_entry::args -->
        <var-decl name='args' type-id='type-id-15' visibility='default' filepath='../.././gcc/tlink.c' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char* file_hash_entry::dir -->
        <var-decl name='dir' type-id='type-id-15' visibility='default' filepath='../.././gcc/tlink.c' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- const char* file_hash_entry::main -->
        <var-decl name='main' type-id='type-id-15' visibility='default' filepath='../.././gcc/tlink.c' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int file_hash_entry::tweaking -->
        <var-decl name='tweaking' type-id='type-id-18' visibility='default' filepath='../.././gcc/tlink.c' line='68' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct file_stack_entry -->
    <class-decl name='file_stack_entry' size-in-bits='128' is-struct='yes' visibility='default' filepath='../.././gcc/tlink.c' line='196' column='1' id='type-id-221'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- file* file_stack_entry::value -->
        <var-decl name='value' type-id='type-id-222' visibility='default' filepath='../.././gcc/tlink.c' line='198' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- file_stack_entry* file_stack_entry::next -->
        <var-decl name='next' type-id='type-id-223' visibility='default' filepath='../.././gcc/tlink.c' line='199' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef file_hash_entry file -->
    <typedef-decl name='file' type-id='type-id-220' filepath='../.././gcc/tlink.c' line='69' column='1' id='type-id-224'/>
    <!-- typedef unsigned int hashval_t -->
    <typedef-decl name='hashval_t' type-id='type-id-13' filepath='../.././gcc/../include/hashtab.h' line='47' column='1' id='type-id-225'/>
    <!-- typedef htab* htab_t -->
    <typedef-decl name='htab_t' type-id='type-id-226' filepath='../.././gcc/../include/hashtab.h' line='144' column='1' id='type-id-227'/>
    <!-- typedef typedef hashval_t (void*)* htab_hash -->
    <typedef-decl name='htab_hash' type-id='type-id-228' filepath='../.././gcc/../include/hashtab.h' line='52' column='1' id='type-id-229'/>
    <!-- typedef int (void*, void*)* htab_eq -->
    <typedef-decl name='htab_eq' type-id='type-id-230' filepath='../.././gcc/../include/hashtab.h' line='59' column='1' id='type-id-231'/>
    <!-- typedef void (void*)* htab_del -->
    <typedef-decl name='htab_del' type-id='type-id-141' filepath='../.././gcc/../include/hashtab.h' line='63' column='1' id='type-id-232'/>
    <!-- typedef void* (typedef size_t, typedef size_t)* htab_alloc -->
    <typedef-decl name='htab_alloc' type-id='type-id-233' filepath='../.././gcc/../include/hashtab.h' line='75' column='1' id='type-id-234'/>
    <!-- typedef void (void*)* htab_free -->
    <typedef-decl name='htab_free' type-id='type-id-141' filepath='../.././gcc/../include/hashtab.h' line='78' column='1' id='type-id-235'/>
    <!-- typedef void* (void*, typedef size_t, typedef size_t)* htab_alloc_with_arg -->
    <typedef-decl name='htab_alloc_with_arg' type-id='type-id-236' filepath='../.././gcc/../include/hashtab.h' line='82' column='1' id='type-id-237'/>
    <!-- typedef void (void*, void*)* htab_free_with_arg -->
    <typedef-decl name='htab_free_with_arg' type-id='type-id-238' filepath='../.././gcc/../include/hashtab.h' line='83' column='1' id='type-id-239'/>
    <!-- enum insert_option -->
    <enum-decl name='insert_option' filepath='../.././gcc/../include/hashtab.h' line='147' column='1' id='type-id-240'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='NO_INSERT' value='0'/>
      <enumerator name='INSERT' value='1'/>
    </enum-decl>
    <!-- struct htab -->
    <class-decl name='htab' size-in-bits='896' is-struct='yes' visibility='default' filepath='../.././libcpp/../include/hashtab.h' line='100' column='1' id='type-id-241'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- htab_hash htab::hash_f -->
        <var-decl name='hash_f' type-id='type-id-229' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='102' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- htab_eq htab::eq_f -->
        <var-decl name='eq_f' type-id='type-id-231' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='105' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- htab_del htab::del_f -->
        <var-decl name='del_f' type-id='type-id-232' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='108' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void** htab::entries -->
        <var-decl name='entries' type-id='type-id-100' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='111' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- size_t htab::size -->
        <var-decl name='size' type-id='type-id-32' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='114' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- size_t htab::n_elements -->
        <var-decl name='n_elements' type-id='type-id-32' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='117' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- size_t htab::n_deleted -->
        <var-decl name='n_deleted' type-id='type-id-32' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='120' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- unsigned int htab::searches -->
        <var-decl name='searches' type-id='type-id-13' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='124' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='480'>
        <!-- unsigned int htab::collisions -->
        <var-decl name='collisions' type-id='type-id-13' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='128' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- htab_alloc htab::alloc_f -->
        <var-decl name='alloc_f' type-id='type-id-234' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='131' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- htab_free htab::free_f -->
        <var-decl name='free_f' type-id='type-id-235' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='132' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- void* htab::alloc_arg -->
        <var-decl name='alloc_arg' type-id='type-id-14' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='135' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- htab_alloc_with_arg htab::alloc_with_arg_f -->
        <var-decl name='alloc_with_arg_f' type-id='type-id-237' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='136' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- htab_free_with_arg htab::free_with_arg_f -->
        <var-decl name='free_with_arg_f' type-id='type-id-239' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='137' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- unsigned int htab::size_prime_index -->
        <var-decl name='size_prime_index' type-id='type-id-13' visibility='default' filepath='../.././gcc/../include/hashtab.h' line='141' column='1'/>
      </data-member>
    </class-decl>
    <!-- file* -->
    <pointer-type-def type-id='type-id-224' size-in-bits='64' id='type-id-222'/>
    <!-- file_hash_entry* -->
    <pointer-type-def type-id='type-id-220' size-in-bits='64' id='type-id-219'/>
    <!-- file_stack_entry* -->
    <pointer-type-def type-id='type-id-221' size-in-bits='64' id='type-id-223'/>
    <!-- htab* -->
    <pointer-type-def type-id='type-id-241' size-in-bits='64' id='type-id-226'/>
    <!-- int (void*, void*)* -->
    <pointer-type-def type-id='type-id-242' size-in-bits='64' id='type-id-230'/>
    <!-- symbol* -->
    <pointer-type-def type-id='type-id-218' size-in-bits='64' id='type-id-215'/>
    <!-- symbol_stack_entry* -->
    <pointer-type-def type-id='type-id-214' size-in-bits='64' id='type-id-216'/>
    <!-- typedef hashval_t (void*)* -->
    <pointer-type-def type-id='type-id-243' size-in-bits='64' id='type-id-228'/>
    <!-- void (void*, void*)* -->
    <pointer-type-def type-id='type-id-244' size-in-bits='64' id='type-id-238'/>
    <!-- void* (typedef size_t, typedef size_t)* -->
    <pointer-type-def type-id='type-id-245' size-in-bits='64' id='type-id-233'/>
    <!-- void* (void*, typedef size_t, typedef size_t)* -->
    <pointer-type-def type-id='type-id-246' size-in-bits='64' id='type-id-236'/>
    <!-- void do_tlink(char**, char**) -->
    <function-decl name='do_tlink' mangled-name='_Z8do_tlinkPPcS0_' filepath='../.././gcc/tlink.c' line='821' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z8do_tlinkPPcS0_'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- obstack symbol_stack_obstack -->
    <var-decl name='symbol_stack_obstack' type-id='type-id-58' mangled-name='symbol_stack_obstack' visibility='default' filepath='../.././gcc/tlink.c' line='193' column='1' elf-symbol-id='symbol_stack_obstack'/>
    <!-- symbol_stack_entry* symbol_stack -->
    <var-decl name='symbol_stack' type-id='type-id-216' mangled-name='symbol_stack' visibility='default' filepath='../.././gcc/tlink.c' line='194' column='1' elf-symbol-id='symbol_stack'/>
    <!-- obstack file_stack_obstack -->
    <var-decl name='file_stack_obstack' type-id='type-id-58' mangled-name='file_stack_obstack' visibility='default' filepath='../.././gcc/tlink.c' line='201' column='1' elf-symbol-id='file_stack_obstack'/>
    <!-- file_stack_entry* file_stack -->
    <var-decl name='file_stack' type-id='type-id-223' mangled-name='file_stack' visibility='default' filepath='../.././gcc/tlink.c' line='202' column='1' elf-symbol-id='file_stack'/>
    <!-- hashval_t htab_hash_string(void*) -->
    <function-decl name='htab_hash_string' filepath='../.././gcc/../include/hashtab.h' line='198' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- typedef hashval_t -->
      <return type-id='type-id-225'/>
    </function-decl>
    <!-- void** htab_find_slot_with_hash(htab_t, void*, hashval_t, insert_option) -->
    <function-decl name='htab_find_slot_with_hash' filepath='../.././gcc/../include/hashtab.h' line='178' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef hashval_t' -->
      <parameter type-id='type-id-225'/>
      <!-- parameter of type 'enum insert_option' -->
      <parameter type-id='type-id-240'/>
      <!-- void** -->
      <return type-id='type-id-100'/>
    </function-decl>
    <!-- int fscanf(FILE*, const char*, ...) -->
    <function-decl name='fscanf' filepath='/usr/include/stdio.h' line='429' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int remove(const char*) -->
    <function-decl name='remove' filepath='/usr/include/stdio.h' line='177' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././gcc/collect2.c' line='475' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int rename(const char*, const char*) -->
    <function-decl name='rename' filepath='/usr/include/stdio.h' line='179' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int chdir(const char*) -->
    <function-decl name='chdir' filepath='/usr/include/unistd.h' line='494' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././gcc/collect2.c' line='475' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int putenv(char*) -->
    <function-decl name='putenv' filepath='/usr/include/stdlib.h' line='579' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- htab_t htab_create(size_t, htab_hash, htab_eq, htab_del) -->
    <function-decl name='htab_create' filepath='../.././gcc/../include/hashtab.h' line='164' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef htab_hash' -->
      <parameter type-id='type-id-229'/>
      <!-- parameter of type 'typedef htab_eq' -->
      <parameter type-id='type-id-231'/>
      <!-- parameter of type 'typedef htab_del' -->
      <parameter type-id='type-id-232'/>
      <!-- typedef htab_t -->
      <return type-id='type-id-227'/>
    </function-decl>
    <!-- char* getpwd() -->
    <function-decl name='getpwd' filepath='../.././gcc/../include/libiberty.h' line='199' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* cplus_demangle(const char*, int) -->
    <function-decl name='cplus_demangle' filepath='../.././gcc/../include/demangle.h' line='130' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- int (void*, void*) -->
    <function-type size-in-bits='64' id='type-id-242'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- hashval_t (void*) -->
    <function-type size-in-bits='64' id='type-id-243'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- typedef hashval_t -->
      <return type-id='type-id-225'/>
    </function-type>
    <!-- void (void*, void*) -->
    <function-type size-in-bits='64' id='type-id-244'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void* (size_t, size_t) -->
    <function-type size-in-bits='64' id='type-id-245'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-type>
    <!-- void* (void*, size_t, size_t) -->
    <function-type size-in-bits='64' id='type-id-246'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../.././gcc/vec.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
    <!-- void* vec_gc_p_reserve(void*, int) -->
    <function-decl name='vec_gc_p_reserve' mangled-name='_Z16vec_gc_p_reservePvi' filepath='../.././gcc/vec.c' line='257' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16vec_gc_p_reservePvi'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_gc_p_reserve_exact(void*, int) -->
    <function-decl name='vec_gc_p_reserve_exact' mangled-name='_Z22vec_gc_p_reserve_exactPvi' filepath='../.././gcc/vec.c' line='271' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z22vec_gc_p_reserve_exactPvi'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_gc_o_reserve(void*, int, size_t, size_t) -->
    <function-decl name='vec_gc_o_reserve' mangled-name='_Z16vec_gc_o_reservePvimm' filepath='../.././gcc/vec.c' line='284' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16vec_gc_o_reservePvimm'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='vec' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='reserve' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='vec_offset' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='elt_size' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_gc_o_reserve_exact(void*, int, size_t, size_t) -->
    <function-decl name='vec_gc_o_reserve_exact' mangled-name='_Z22vec_gc_o_reserve_exactPvimm' filepath='../.././gcc/vec.c' line='296' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z22vec_gc_o_reserve_exactPvimm'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='vec' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='reserve' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='vec_offset' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='elt_size' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_heap_p_reserve(void*, int) -->
    <function-decl name='vec_heap_p_reserve' mangled-name='_Z18vec_heap_p_reservePvi' filepath='../.././gcc/vec.c' line='340' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18vec_heap_p_reservePvi'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_heap_p_reserve_exact(void*, int) -->
    <function-decl name='vec_heap_p_reserve_exact' mangled-name='_Z24vec_heap_p_reserve_exactPvi' filepath='../.././gcc/vec.c' line='351' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z24vec_heap_p_reserve_exactPvi'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_heap_o_reserve(void*, int, size_t, size_t) -->
    <function-decl name='vec_heap_o_reserve' mangled-name='_Z18vec_heap_o_reservePvimm' filepath='../.././gcc/vec.c' line='362' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18vec_heap_o_reservePvimm'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='vec' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='reserve' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='vec_offset' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='elt_size' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_heap_o_reserve_exact(void*, int, size_t, size_t) -->
    <function-decl name='vec_heap_o_reserve_exact' mangled-name='_Z24vec_heap_o_reserve_exactPvimm' filepath='../.././gcc/vec.c' line='372' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z24vec_heap_o_reserve_exactPvimm'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='vec' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='reserve' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='vec_offset' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='elt_size' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_stack_p_reserve_exact_1(int, void*) -->
    <function-decl name='vec_stack_p_reserve_exact_1' mangled-name='_Z27vec_stack_p_reserve_exact_1iPv' filepath='../.././gcc/vec.c' line='400' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z27vec_stack_p_reserve_exact_1iPv'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='alloc' filepath='../.././gcc/vec.c' line='400' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='space' filepath='../.././gcc/vec.c' line='400' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_stack_p_reserve(void*, int) -->
    <function-decl name='vec_stack_p_reserve' mangled-name='_Z19vec_stack_p_reservePvi' filepath='../.././gcc/vec.c' line='459' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19vec_stack_p_reservePvi'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_stack_p_reserve_exact(void*, int) -->
    <function-decl name='vec_stack_p_reserve_exact' mangled-name='_Z25vec_stack_p_reserve_exactPvi' filepath='../.././gcc/vec.c' line='470' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z25vec_stack_p_reserve_exactPvi'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_stack_o_reserve(void*, int, size_t, size_t) -->
    <function-decl name='vec_stack_o_reserve' mangled-name='_Z19vec_stack_o_reservePvimm' filepath='../.././gcc/vec.c' line='481' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19vec_stack_o_reservePvimm'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='vec' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='reserve' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='vec_offset' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='elt_size' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* vec_stack_o_reserve_exact(void*, int, size_t, size_t) -->
    <function-decl name='vec_stack_o_reserve_exact' mangled-name='_Z25vec_stack_o_reserve_exactPvimm' filepath='../.././gcc/vec.c' line='491' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z25vec_stack_o_reserve_exactPvimm'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='vec' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='reserve' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='vec_offset' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='elt_size' filepath='../.././gcc/vec.c' line='284' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void vec_stack_free(void*) -->
    <function-decl name='vec_stack_free' mangled-name='_Z14vec_stack_freePv' filepath='../.././gcc/vec.c' line='502' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14vec_stack_freePv'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void dump_vec_loc_statistics() -->
    <function-decl name='dump_vec_loc_statistics' mangled-name='_Z23dump_vec_loc_statisticsv' filepath='../.././gcc/vec.c' line='563' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z23dump_vec_loc_statisticsv'>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void* xrealloc(void*, size_t) -->
    <function-decl name='xrealloc' filepath='../.././gcc/../include/libiberty.h' line='307' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././gcc/version.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/gcc' language='LANG_C_plus_plus'>
    <!-- char[31] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='248' id='type-id-247'>
      <!-- <anonymous range>[31] -->
      <subrange length='31' type-id='type-id-4' id='type-id-248'/>
    </array-type-def>
    <!-- char[6] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='48' id='type-id-249'>
      <!-- <anonymous range>[6] -->
      <subrange length='6' type-id='type-id-4' id='type-id-250'/>
    </array-type-def>
    <!-- char[7] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='56' id='type-id-251'>
      <!-- <anonymous range>[7] -->
      <subrange length='7' type-id='type-id-4' id='type-id-252'/>
    </array-type-def>
    <!-- const char[31] -->
    <array-type-def dimensions='1' type-id='type-id-125' size-in-bits='248' id='type-id-253'>
      <!-- <anonymous range>[31] -->
      <subrange length='31' type-id='type-id-4' id='type-id-248'/>
    </array-type-def>
    <!-- const char[6] -->
    <array-type-def dimensions='1' type-id='type-id-125' size-in-bits='48' id='type-id-254'>
      <!-- <anonymous range>[6] -->
      <subrange length='6' type-id='type-id-4' id='type-id-250'/>
    </array-type-def>
    <!-- const char[7] -->
    <array-type-def dimensions='1' type-id='type-id-125' size-in-bits='56' id='type-id-255'>
      <!-- <anonymous range>[7] -->
      <subrange length='7' type-id='type-id-4' id='type-id-252'/>
    </array-type-def>
    <!-- const char version_string[6] -->
    <var-decl name='version_string' type-id='type-id-254' mangled-name='version_string' visibility='default' filepath='../.././gcc/version.c' line='35' column='1' elf-symbol-id='version_string'/>
    <!-- const char pkgversion_string[7] -->
    <var-decl name='pkgversion_string' type-id='type-id-255' mangled-name='pkgversion_string' visibility='default' filepath='../.././gcc/version.c' line='36' column='1' elf-symbol-id='pkgversion_string'/>
    <!-- const char bug_report_url[31] -->
    <var-decl name='bug_report_url' type-id='type-id-253' mangled-name='bug_report_url' visibility='default' filepath='../.././gcc/version.c' line='29' column='1' elf-symbol-id='bug_report_url'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/charset.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- const uchar** -->
    <pointer-type-def type-id='type-id-256' size-in-bits='64' id='type-id-257'/>
    <!-- void cpp_init_iconv(cpp_reader*) -->
    <function-decl name='cpp_init_iconv' mangled-name='_Z14cpp_init_iconvP10cpp_reader' filepath='../.././libcpp/charset.c' line='700' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14cpp_init_iconvP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_destroy_iconv(cpp_reader*) -->
    <function-decl name='_cpp_destroy_iconv' mangled-name='_cpp_destroy_iconv' filepath='../.././libcpp/charset.c' line='740' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_destroy_iconv'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- cppchar_t cpp_host_to_exec_charset(cpp_reader*, cppchar_t) -->
    <function-decl name='cpp_host_to_exec_charset' mangled-name='_Z24cpp_host_to_exec_charsetP10cpp_readerj' filepath='../.././libcpp/charset.c' line='770' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z24cpp_host_to_exec_charsetP10cpp_readerj'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/charset.c' line='770' column='1'/>
      <!-- parameter of type 'typedef cppchar_t' -->
      <parameter type-id='type-id-259' name='c' filepath='../.././libcpp/charset.c' line='770' column='1'/>
      <!-- typedef cppchar_t -->
      <return type-id='type-id-259'/>
    </function-decl>
    <!-- cppchar_t _cpp_valid_ucn(cpp_reader*, const uchar**, const uchar*, int, normalize_state*) -->
    <function-decl name='_cpp_valid_ucn' mangled-name='_cpp_valid_ucn' filepath='../.././libcpp/charset.c' line='983' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_valid_ucn'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/charset.c' line='983' column='1'/>
      <!-- parameter of type 'const uchar**' -->
      <parameter type-id='type-id-257' name='pstr' filepath='../.././libcpp/charset.c' line='983' column='1'/>
      <!-- parameter of type 'const uchar*' -->
      <parameter type-id='type-id-256' name='limit' filepath='../.././libcpp/charset.c' line='984' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='identifier_pos' filepath='../.././libcpp/charset.c' line='984' column='1'/>
      <!-- parameter of type 'normalize_state*' -->
      <parameter type-id='type-id-260' name='nst' filepath='../.././libcpp/charset.c' line='985' column='1'/>
      <!-- typedef cppchar_t -->
      <return type-id='type-id-259'/>
    </function-decl>
    <!-- bool cpp_interpret_string(cpp_reader*, const cpp_string*, size_t, cpp_string*, cpp_ttype) -->
    <function-decl name='cpp_interpret_string' mangled-name='_Z20cpp_interpret_stringP10cpp_readerPK10cpp_stringmPS1_9cpp_ttype' filepath='../.././libcpp/charset.c' line='1371' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z20cpp_interpret_stringP10cpp_readerPK10cpp_stringmPS1_9cpp_ttype'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const cpp_string*' -->
      <parameter type-id='type-id-261'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'cpp_string*' -->
      <parameter type-id='type-id-262'/>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_interpret_string_notranslate(cpp_reader*, const cpp_string*, size_t, cpp_string*, cpp_ttype) -->
    <function-decl name='cpp_interpret_string_notranslate' mangled-name='_Z32cpp_interpret_string_notranslateP10cpp_readerPK10cpp_stringmPS1_9cpp_ttype' filepath='../.././libcpp/charset.c' line='1452' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z32cpp_interpret_string_notranslateP10cpp_readerPK10cpp_stringmPS1_9cpp_ttype'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const cpp_string*' -->
      <parameter type-id='type-id-261'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'cpp_string*' -->
      <parameter type-id='type-id-262'/>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- cppchar_t cpp_interpret_charconst(cpp_reader*, const cpp_token*, unsigned int*, int*) -->
    <function-decl name='cpp_interpret_charconst' mangled-name='_Z23cpp_interpret_charconstP10cpp_readerPK9cpp_tokenPjPi' filepath='../.././libcpp/charset.c' line='1602' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z23cpp_interpret_charconstP10cpp_readerPK9cpp_tokenPjPi'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-264'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- typedef cppchar_t -->
      <return type-id='type-id-259'/>
    </function-decl>
    <!-- cpp_hashnode* _cpp_interpret_identifier(cpp_reader*, const uchar*, size_t) -->
    <function-decl name='_cpp_interpret_identifier' mangled-name='_cpp_interpret_identifier' filepath='../.././libcpp/charset.c' line='1634' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_interpret_identifier'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/charset.c' line='1634' column='1'/>
      <!-- parameter of type 'const uchar*' -->
      <parameter type-id='type-id-256' name='id' filepath='../.././libcpp/charset.c' line='1634' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libcpp/charset.c' line='1634' column='1'/>
      <!-- cpp_hashnode* -->
      <return type-id='type-id-116'/>
    </function-decl>
    <!-- uchar* _cpp_convert_input(cpp_reader*, const char*, uchar*, size_t, size_t, const unsigned char**, off_t*) -->
    <function-decl name='_cpp_convert_input' mangled-name='_cpp_convert_input' filepath='../.././libcpp/charset.c' line='1698' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_convert_input'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/charset.c' line='1698' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='input_charset' filepath='../.././libcpp/charset.c' line='1698' column='1'/>
      <!-- parameter of type 'uchar*' -->
      <parameter type-id='type-id-265' name='input' filepath='../.././libcpp/charset.c' line='1699' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='size' filepath='../.././libcpp/charset.c' line='1699' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libcpp/charset.c' line='1699' column='1'/>
      <!-- parameter of type 'const unsigned char**' -->
      <parameter type-id='type-id-266' name='buffer_start' filepath='../.././libcpp/charset.c' line='1700' column='1'/>
      <!-- parameter of type 'off_t*' -->
      <parameter type-id='type-id-267' name='st_size' filepath='../.././libcpp/charset.c' line='1700' column='1'/>
      <!-- uchar* -->
      <return type-id='type-id-265'/>
    </function-decl>
    <!-- const char* _cpp_default_encoding() -->
    <function-decl name='_cpp_default_encoding' mangled-name='_cpp_default_encoding' filepath='../.././libcpp/charset.c' line='1767' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_default_encoding'>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const cpp_string* -->
    <pointer-type-def type-id='type-id-268' size-in-bits='64' id='type-id-261'/>
    <!-- const cpp_token* -->
    <pointer-type-def type-id='type-id-269' size-in-bits='64' id='type-id-263'/>
    <!-- const uchar* -->
    <pointer-type-def type-id='type-id-270' size-in-bits='64' id='type-id-256'/>
    <!-- const unsigned char** -->
    <pointer-type-def type-id='type-id-145' size-in-bits='64' id='type-id-266'/>
    <!-- cpp_reader* -->
    <pointer-type-def type-id='type-id-271' size-in-bits='64' id='type-id-258'/>
    <!-- cpp_string* -->
    <pointer-type-def type-id='type-id-272' size-in-bits='64' id='type-id-262'/>
    <!-- normalize_state* -->
    <pointer-type-def type-id='type-id-273' size-in-bits='64' id='type-id-260'/>
    <!-- off_t* -->
    <pointer-type-def type-id='type-id-274' size-in-bits='64' id='type-id-267'/>
    <!-- typedef unsigned int cppchar_t -->
    <typedef-decl name='cppchar_t' type-id='type-id-13' filepath='../.././libcpp/include/cpplib.h' line='269' column='1' id='type-id-259'/>
    <!-- uchar* -->
    <pointer-type-def type-id='type-id-275' size-in-bits='64' id='type-id-265'/>
    <!-- unsigned int* -->
    <pointer-type-def type-id='type-id-13' size-in-bits='64' id='type-id-264'/>
    <!-- struct normalize_state -->
    <class-decl name='normalize_state' size-in-bits='96' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='706' column='1' id='type-id-273'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cppchar_t normalize_state::previous -->
        <var-decl name='previous' type-id='type-id-259' visibility='default' filepath='../.././libcpp/internal.h' line='709' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned char normalize_state::prev_class -->
        <var-decl name='prev_class' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='711' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_normalize_level normalize_state::level -->
        <var-decl name='level' type-id='type-id-276' visibility='default' filepath='../.././libcpp/internal.h' line='713' column='1'/>
      </data-member>
    </class-decl>
    <!-- const cpp_string -->
    <qualified-type-def type-id='type-id-272' const='yes' id='type-id-268'/>
    <!-- const cpp_token -->
    <qualified-type-def type-id='type-id-277' const='yes' id='type-id-269'/>
    <!-- const uchar -->
    <qualified-type-def type-id='type-id-275' const='yes' id='type-id-270'/>
    <!-- typedef cpp_reader cpp_reader -->
    <typedef-decl name='cpp_reader' type-id='type-id-278' filepath='../.././libcpp/include/cpplib.h' line='31' column='1' id='type-id-271'/>
    <!-- typedef cpp_string cpp_string -->
    <typedef-decl name='cpp_string' type-id='type-id-176' filepath='../.././libcpp/include/cpplib.h' line='35' column='1' id='type-id-272'/>
    <!-- typedef __off_t off_t -->
    <typedef-decl name='off_t' type-id='type-id-54' filepath='/usr/include/stdio.h' line='91' column='1' id='type-id-274'/>
    <!-- typedef unsigned char uchar -->
    <typedef-decl name='uchar' type-id='type-id-27' filepath='../.././libcpp/include/cpp-id-data.h' line='22' column='1' id='type-id-275'/>
    <!-- struct cpp_reader -->
    <class-decl name='cpp_reader' size-in-bits='10560' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='380' column='1' id='type-id-278'>
      <member-type access='public'>
        <!-- struct {unsigned char* base; unsigned char* limit; unsigned char* cur; source_location first_line;} -->
        <class-decl name='__anonymous_struct__' size-in-bits='256' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='528' column='1' id='type-id-279'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- unsigned char* base -->
            <var-decl name='base' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='529' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- unsigned char* limit -->
            <var-decl name='limit' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='530' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- unsigned char* cur -->
            <var-decl name='cur' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='531' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- source_location first_line -->
            <var-decl name='first_line' type-id='type-id-103' visibility='default' filepath='../.././libcpp/internal.h' line='532' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_buffer* cpp_reader::buffer -->
        <var-decl name='buffer' type-id='type-id-281' visibility='default' filepath='../.././libcpp/internal.h' line='383' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_buffer* cpp_reader::overlaid_buffer -->
        <var-decl name='overlaid_buffer' type-id='type-id-281' visibility='default' filepath='../.././libcpp/internal.h' line='386' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- lexer_state cpp_reader::state -->
        <var-decl name='state' type-id='type-id-282' visibility='default' filepath='../.././libcpp/internal.h' line='389' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- line_maps* cpp_reader::line_table -->
        <var-decl name='line_table' type-id='type-id-196' visibility='default' filepath='../.././libcpp/internal.h' line='392' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- source_location cpp_reader::directive_line -->
        <var-decl name='directive_line' type-id='type-id-103' visibility='default' filepath='../.././libcpp/internal.h' line='395' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- _cpp_buff* cpp_reader::a_buff -->
        <var-decl name='a_buff' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='398' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- _cpp_buff* cpp_reader::u_buff -->
        <var-decl name='u_buff' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='399' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- _cpp_buff* cpp_reader::free_buffs -->
        <var-decl name='free_buffs' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='400' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- cpp_context cpp_reader::base_context -->
        <var-decl name='base_context' type-id='type-id-284' visibility='default' filepath='../.././libcpp/internal.h' line='403' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- cpp_context* cpp_reader::context -->
        <var-decl name='context' type-id='type-id-285' visibility='default' filepath='../.././libcpp/internal.h' line='404' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- const directive* cpp_reader::directive -->
        <var-decl name='directive' type-id='type-id-286' visibility='default' filepath='../.././libcpp/internal.h' line='407' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- cpp_token cpp_reader::directive_result -->
        <var-decl name='directive_result' type-id='type-id-277' visibility='default' filepath='../.././libcpp/internal.h' line='410' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- source_location cpp_reader::invocation_location -->
        <var-decl name='invocation_location' type-id='type-id-103' visibility='default' filepath='../.././libcpp/internal.h' line='414' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1440'>
        <!-- bool cpp_reader::set_invocation_location -->
        <var-decl name='set_invocation_location' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='418' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- cpp_dir* cpp_reader::quote_include -->
        <var-decl name='quote_include' type-id='type-id-287' visibility='default' filepath='../.././libcpp/internal.h' line='421' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- cpp_dir* cpp_reader::bracket_include -->
        <var-decl name='bracket_include' type-id='type-id-287' visibility='default' filepath='../.././libcpp/internal.h' line='422' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1600'>
        <!-- cpp_dir cpp_reader::no_search_path -->
        <var-decl name='no_search_path' type-id='type-id-288' visibility='default' filepath='../.././libcpp/internal.h' line='423' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2112'>
        <!-- _cpp_file* cpp_reader::all_files -->
        <var-decl name='all_files' type-id='type-id-289' visibility='default' filepath='../.././libcpp/internal.h' line='426' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2176'>
        <!-- _cpp_file* cpp_reader::main_file -->
        <var-decl name='main_file' type-id='type-id-289' visibility='default' filepath='../.././libcpp/internal.h' line='428' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2240'>
        <!-- htab* cpp_reader::file_hash -->
        <var-decl name='file_hash' type-id='type-id-226' visibility='default' filepath='../.././libcpp/internal.h' line='431' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2304'>
        <!-- htab* cpp_reader::dir_hash -->
        <var-decl name='dir_hash' type-id='type-id-226' visibility='default' filepath='../.././libcpp/internal.h' line='432' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2368'>
        <!-- file_hash_entry_pool* cpp_reader::file_hash_entries -->
        <var-decl name='file_hash_entries' type-id='type-id-290' visibility='default' filepath='../.././libcpp/internal.h' line='433' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2432'>
        <!-- htab* cpp_reader::nonexistent_file_hash -->
        <var-decl name='nonexistent_file_hash' type-id='type-id-226' visibility='default' filepath='../.././libcpp/internal.h' line='436' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2496'>
        <!-- obstack cpp_reader::nonexistent_file_ob -->
        <var-decl name='nonexistent_file_ob' type-id='type-id-58' visibility='default' filepath='../.././libcpp/internal.h' line='437' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3200'>
        <!-- bool cpp_reader::quote_ignores_source_dir -->
        <var-decl name='quote_ignores_source_dir' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='441' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3208'>
        <!-- bool cpp_reader::seen_once_only -->
        <var-decl name='seen_once_only' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='445' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3264'>
        <!-- const cpp_hashnode* cpp_reader::mi_cmacro -->
        <var-decl name='mi_cmacro' type-id='type-id-291' visibility='default' filepath='../.././libcpp/internal.h' line='448' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3328'>
        <!-- const cpp_hashnode* cpp_reader::mi_ind_cmacro -->
        <var-decl name='mi_ind_cmacro' type-id='type-id-291' visibility='default' filepath='../.././libcpp/internal.h' line='449' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3392'>
        <!-- bool cpp_reader::mi_valid -->
        <var-decl name='mi_valid' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='450' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3456'>
        <!-- cpp_token* cpp_reader::cur_token -->
        <var-decl name='cur_token' type-id='type-id-163' visibility='default' filepath='../.././libcpp/internal.h' line='453' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3520'>
        <!-- tokenrun cpp_reader::base_run -->
        <var-decl name='base_run' type-id='type-id-292' visibility='default' filepath='../.././libcpp/internal.h' line='454' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3776'>
        <!-- tokenrun* cpp_reader::cur_run -->
        <var-decl name='cur_run' type-id='type-id-293' visibility='default' filepath='../.././libcpp/internal.h' line='454' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3840'>
        <!-- unsigned int cpp_reader::lookaheads -->
        <var-decl name='lookaheads' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='455' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3872'>
        <!-- unsigned int cpp_reader::keep_tokens -->
        <var-decl name='keep_tokens' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='458' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3904'>
        <!-- unsigned char* cpp_reader::macro_buffer -->
        <var-decl name='macro_buffer' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='461' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3968'>
        <!-- unsigned int cpp_reader::macro_buffer_len -->
        <var-decl name='macro_buffer_len' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='462' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4032'>
        <!-- cset_converter cpp_reader::narrow_cset_desc -->
        <var-decl name='narrow_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='466' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4224'>
        <!-- cset_converter cpp_reader::utf8_cset_desc -->
        <var-decl name='utf8_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='470' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4416'>
        <!-- cset_converter cpp_reader::char16_cset_desc -->
        <var-decl name='char16_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4608'>
        <!-- cset_converter cpp_reader::char32_cset_desc -->
        <var-decl name='char32_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='478' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4800'>
        <!-- cset_converter cpp_reader::wide_cset_desc -->
        <var-decl name='wide_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='482' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4992'>
        <!-- const unsigned char* cpp_reader::date -->
        <var-decl name='date' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='485' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5056'>
        <!-- const unsigned char* cpp_reader::time -->
        <var-decl name='time' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='486' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5120'>
        <!-- cpp_token cpp_reader::avoid_paste -->
        <var-decl name='avoid_paste' type-id='type-id-277' visibility='default' filepath='../.././libcpp/internal.h' line='489' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5312'>
        <!-- cpp_token cpp_reader::eof -->
        <var-decl name='eof' type-id='type-id-277' visibility='default' filepath='../.././libcpp/internal.h' line='490' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5504'>
        <!-- deps* cpp_reader::deps -->
        <var-decl name='deps' type-id='type-id-295' visibility='default' filepath='../.././libcpp/internal.h' line='493' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5568'>
        <!-- obstack cpp_reader::hash_ob -->
        <var-decl name='hash_ob' type-id='type-id-58' visibility='default' filepath='../.././libcpp/internal.h' line='497' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6272'>
        <!-- obstack cpp_reader::buffer_ob -->
        <var-decl name='buffer_ob' type-id='type-id-58' visibility='default' filepath='../.././libcpp/internal.h' line='501' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6976'>
        <!-- pragma_entry* cpp_reader::pragmas -->
        <var-decl name='pragmas' type-id='type-id-296' visibility='default' filepath='../.././libcpp/internal.h' line='505' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7040'>
        <!-- cpp_callbacks cpp_reader::cb -->
        <var-decl name='cb' type-id='type-id-297' visibility='default' filepath='../.././libcpp/internal.h' line='508' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8192'>
        <!-- ht* cpp_reader::hash_table -->
        <var-decl name='hash_table' type-id='type-id-298' visibility='default' filepath='../.././libcpp/internal.h' line='511' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8256'>
        <!-- op* cpp_reader::op_stack -->
        <var-decl name='op_stack' type-id='type-id-299' visibility='default' filepath='../.././libcpp/internal.h' line='514' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8320'>
        <!-- op* cpp_reader::op_limit -->
        <var-decl name='op_limit' type-id='type-id-299' visibility='default' filepath='../.././libcpp/internal.h' line='514' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8384'>
        <!-- cpp_options cpp_reader::opts -->
        <var-decl name='opts' type-id='type-id-300' visibility='default' filepath='../.././libcpp/internal.h' line='517' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9408'>
        <!-- spec_nodes cpp_reader::spec_nodes -->
        <var-decl name='spec_nodes' type-id='type-id-301' visibility='default' filepath='../.././libcpp/internal.h' line='521' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9664'>
        <!-- bool cpp_reader::our_hashtable -->
        <var-decl name='our_hashtable' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='524' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9728'>
        <!-- struct {unsigned char* base; unsigned char* limit; unsigned char* cur; source_location first_line;} cpp_reader::out -->
        <var-decl name='out' type-id='type-id-279' visibility='default' filepath='../.././libcpp/internal.h' line='533' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9984'>
        <!-- const unsigned char* cpp_reader::saved_cur -->
        <var-decl name='saved_cur' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='536' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10048'>
        <!-- const unsigned char* cpp_reader::saved_rlimit -->
        <var-decl name='saved_rlimit' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='536' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10112'>
        <!-- const unsigned char* cpp_reader::saved_line_base -->
        <var-decl name='saved_line_base' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='536' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10176'>
        <!-- cpp_savedstate* cpp_reader::savedstate -->
        <var-decl name='savedstate' type-id='type-id-302' visibility='default' filepath='../.././libcpp/internal.h' line='540' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10240'>
        <!-- unsigned int cpp_reader::counter -->
        <var-decl name='counter' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='543' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10304'>
        <!-- cpp_comment_table cpp_reader::comments -->
        <var-decl name='comments' type-id='type-id-303' visibility='default' filepath='../.././libcpp/internal.h' line='546' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10432'>
        <!-- def_pragma_macro* cpp_reader::pushed_macros -->
        <var-decl name='pushed_macros' type-id='type-id-304' visibility='default' filepath='../.././libcpp/internal.h' line='549' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10496'>
        <!-- source_location* cpp_reader::forced_token_location_p -->
        <var-decl name='forced_token_location_p' type-id='type-id-117' visibility='default' filepath='../.././libcpp/internal.h' line='553' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum cpp_normalize_level -->
    <enum-decl name='cpp_normalize_level' filepath='../.././libcpp/include/cpplib.h' line='276' column='1' id='type-id-276'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='normalized_KC' value='0'/>
      <enumerator name='normalized_C' value='1'/>
      <enumerator name='normalized_identifier_C' value='2'/>
      <enumerator name='normalized_none' value='3'/>
    </enum-decl>
    <!-- typedef cpp_token cpp_token -->
    <typedef-decl name='cpp_token' type-id='type-id-172' filepath='../.././libcpp/include/cpplib.h' line='34' column='1' id='type-id-277'/>
    <!-- _cpp_buff* -->
    <pointer-type-def type-id='type-id-305' size-in-bits='64' id='type-id-283'/>
    <!-- _cpp_file* -->
    <pointer-type-def type-id='type-id-306' size-in-bits='64' id='type-id-289'/>
    <!-- struct cpp_callbacks -->
    <class-decl name='cpp_callbacks' size-in-bits='1152' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='499' column='1' id='type-id-297'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void (cpp_reader*, const cpp_token*, int)* cpp_callbacks::line_change -->
        <var-decl name='line_change' type-id='type-id-307' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='502' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void (cpp_reader*, const line_map*)* cpp_callbacks::file_change -->
        <var-decl name='file_change' type-id='type-id-308' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='508' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void (cpp_reader*, const char*)* cpp_callbacks::dir_change -->
        <var-decl name='dir_change' type-id='type-id-309' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='510' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void (cpp_reader*, typedef source_location, const unsigned char*, const char*, int, const cpp_token**)* cpp_callbacks::include -->
        <var-decl name='include' type-id='type-id-310' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='512' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::define -->
        <var-decl name='define' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='513' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::undef -->
        <var-decl name='undef' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='514' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- void (cpp_reader*, typedef source_location, const cpp_string*)* cpp_callbacks::ident -->
        <var-decl name='ident' type-id='type-id-312' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='515' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- void (cpp_reader*, typedef source_location)* cpp_callbacks::def_pragma -->
        <var-decl name='def_pragma' type-id='type-id-313' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='516' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- int (cpp_reader*, const char*, int)* cpp_callbacks::valid_pch -->
        <var-decl name='valid_pch' type-id='type-id-314' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='517' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- void (cpp_reader*, const char*, int, const char*)* cpp_callbacks::read_pch -->
        <var-decl name='read_pch' type-id='type-id-315' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='518' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- missing_header_cb cpp_callbacks::missing_header -->
        <var-decl name='missing_header' type-id='type-id-316' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='519' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- cpp_hashnode* (cpp_reader*, const cpp_token*)* cpp_callbacks::macro_to_expand -->
        <var-decl name='macro_to_expand' type-id='type-id-317' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='523' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- bool (cpp_reader*, int, int, typedef source_location, unsigned int, const char*, va_list*)* cpp_callbacks::error -->
        <var-decl name='error' type-id='type-id-318' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='529' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::used_define -->
        <var-decl name='used_define' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='533' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::used_undef -->
        <var-decl name='used_undef' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='534' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- void (cpp_reader*)* cpp_callbacks::before_define -->
        <var-decl name='before_define' type-id='type-id-319' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='537' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::used -->
        <var-decl name='used' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='540' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- bool (cpp_reader*, cpp_hashnode*)* cpp_callbacks::user_builtin_macro -->
        <var-decl name='user_builtin_macro' type-id='type-id-320' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='543' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_context -->
    <class-decl name='cpp_context' size-in-bits='448' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='177' column='1' id='type-id-284'>
      <member-type access='public'>
        <!-- union {struct {utoken first; utoken last;} iso; struct {const unsigned char* cur; const unsigned char* rlimit;} trad;} -->
        <union-decl name='__anonymous_union__' size-in-bits='128' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='183' column='1' id='type-id-321'>
          <member-type access='public'>
            <!-- struct {utoken first; utoken last;} -->
            <class-decl name='__anonymous_struct__' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='188' column='1' id='type-id-322'>
              <data-member access='public' layout-offset-in-bits='0'>
                <!-- utoken first -->
                <var-decl name='first' type-id='type-id-323' visibility='default' filepath='../.././libcpp/internal.h' line='189' column='1'/>
              </data-member>
              <data-member access='public' layout-offset-in-bits='64'>
                <!-- utoken last -->
                <var-decl name='last' type-id='type-id-323' visibility='default' filepath='../.././libcpp/internal.h' line='190' column='1'/>
              </data-member>
            </class-decl>
          </member-type>
          <member-type access='public'>
            <!-- struct {const unsigned char* cur; const unsigned char* rlimit;} -->
            <class-decl name='__anonymous_struct__1' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='195' column='1' id='type-id-324'>
              <data-member access='public' layout-offset-in-bits='0'>
                <!-- const unsigned char* cur -->
                <var-decl name='cur' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='196' column='1'/>
              </data-member>
              <data-member access='public' layout-offset-in-bits='64'>
                <!-- const unsigned char* rlimit -->
                <var-decl name='rlimit' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='197' column='1'/>
              </data-member>
            </class-decl>
          </member-type>
          <data-member access='public'>
            <!-- struct {utoken first; utoken last;} iso -->
            <var-decl name='iso' type-id='type-id-322' visibility='default' filepath='../.././libcpp/internal.h' line='191' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- struct {const unsigned char* cur; const unsigned char* rlimit;} trad -->
            <var-decl name='trad' type-id='type-id-324' visibility='default' filepath='../.././libcpp/internal.h' line='198' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <member-type access='public'>
        <!-- union {macro_context* mc; cpp_hashnode* macro;} -->
        <union-decl name='__anonymous_union__1' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='216' column='1' id='type-id-325'>
          <data-member access='public'>
            <!-- macro_context* mc -->
            <var-decl name='mc' type-id='type-id-326' visibility='default' filepath='../.././libcpp/internal.h' line='217' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- cpp_hashnode* macro -->
            <var-decl name='macro' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='218' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_context* cpp_context::next -->
        <var-decl name='next' type-id='type-id-285' visibility='default' filepath='../.././libcpp/internal.h' line='180' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_context* cpp_context::prev -->
        <var-decl name='prev' type-id='type-id-285' visibility='default' filepath='../.././libcpp/internal.h' line='180' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- union {struct {utoken first; utoken last;} iso; struct {const unsigned char* cur; const unsigned char* rlimit;} trad;} cpp_context::u -->
        <var-decl name='u' type-id='type-id-321' visibility='default' filepath='../.././libcpp/internal.h' line='199' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- _cpp_buff* cpp_context::buff -->
        <var-decl name='buff' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='203' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- union {macro_context* mc; cpp_hashnode* macro;} cpp_context::c -->
        <var-decl name='c' type-id='type-id-325' visibility='default' filepath='../.././libcpp/internal.h' line='219' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- context_tokens_kind cpp_context::tokens_kind -->
        <var-decl name='tokens_kind' type-id='type-id-327' visibility='default' filepath='../.././libcpp/internal.h' line='222' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_dir -->
    <class-decl name='cpp_dir' size-in-bits='512' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='553' column='1' id='type-id-288'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_dir* cpp_dir::next -->
        <var-decl name='next' type-id='type-id-287' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='556' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- char* cpp_dir::name -->
        <var-decl name='name' type-id='type-id-51' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='559' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned int cpp_dir::len -->
        <var-decl name='len' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='560' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- unsigned char cpp_dir::sysp -->
        <var-decl name='sysp' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='564' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='168'>
        <!-- bool cpp_dir::user_supplied_p -->
        <var-decl name='user_supplied_p' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='567' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- char* cpp_dir::canonical_name -->
        <var-decl name='canonical_name' type-id='type-id-51' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='571' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- const char** cpp_dir::name_map -->
        <var-decl name='name_map' type-id='type-id-328' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='575' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- char* (const char*, cpp_dir*)* cpp_dir::construct -->
        <var-decl name='construct' type-id='type-id-329' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='581' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- ino_t cpp_dir::ino -->
        <var-decl name='ino' type-id='type-id-330' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='585' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- dev_t cpp_dir::dev -->
        <var-decl name='dev' type-id='type-id-331' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='586' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_options -->
    <class-decl name='cpp_options' size-in-bits='1024' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='290' column='1' id='type-id-300'>
      <member-type access='public'>
        <!-- struct {cpp_deps_style style; bool missing_files; bool phony_targets; bool ignore_main_file; bool need_preprocessor_output;} -->
        <class-decl name='__anonymous_struct__' size-in-bits='64' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='451' column='1' id='type-id-332'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- cpp_deps_style style -->
            <var-decl name='style' type-id='type-id-333' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='453' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='32'>
            <!-- bool missing_files -->
            <var-decl name='missing_files' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='456' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='40'>
            <!-- bool phony_targets -->
            <var-decl name='phony_targets' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='460' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='48'>
            <!-- bool ignore_main_file -->
            <var-decl name='ignore_main_file' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='463' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='56'>
            <!-- bool need_preprocessor_output -->
            <var-decl name='need_preprocessor_output' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='467' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int cpp_options::tabstop -->
        <var-decl name='tabstop' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='293' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- c_lang cpp_options::lang -->
        <var-decl name='lang' type-id='type-id-334' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='296' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned char cpp_options::cplusplus -->
        <var-decl name='cplusplus' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='299' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='72'>
        <!-- unsigned char cpp_options::cplusplus_comments -->
        <var-decl name='cplusplus_comments' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='302' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='80'>
        <!-- unsigned char cpp_options::objc -->
        <var-decl name='objc' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='307' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='88'>
        <!-- unsigned char cpp_options::discard_comments -->
        <var-decl name='discard_comments' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='310' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned char cpp_options::discard_comments_in_macro_exp -->
        <var-decl name='discard_comments_in_macro_exp' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='314' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='104'>
        <!-- unsigned char cpp_options::trigraphs -->
        <var-decl name='trigraphs' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='317' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='112'>
        <!-- unsigned char cpp_options::digraphs -->
        <var-decl name='digraphs' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='320' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='120'>
        <!-- unsigned char cpp_options::extended_numbers -->
        <var-decl name='extended_numbers' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='323' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char cpp_options::uliterals -->
        <var-decl name='uliterals' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='326' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='136'>
        <!-- unsigned char cpp_options::rliterals -->
        <var-decl name='rliterals' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='144'>
        <!-- unsigned char cpp_options::print_include_names -->
        <var-decl name='print_include_names' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='333' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='152'>
        <!-- unsigned char cpp_options::cpp_warn_deprecated -->
        <var-decl name='cpp_warn_deprecated' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='336' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- unsigned char cpp_options::warn_comments -->
        <var-decl name='warn_comments' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='339' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='168'>
        <!-- unsigned char cpp_options::warn_missing_include_dirs -->
        <var-decl name='warn_missing_include_dirs' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='343' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='176'>
        <!-- unsigned char cpp_options::warn_trigraphs -->
        <var-decl name='warn_trigraphs' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='346' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='184'>
        <!-- unsigned char cpp_options::warn_multichar -->
        <var-decl name='warn_multichar' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='349' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned char cpp_options::cpp_warn_traditional -->
        <var-decl name='cpp_warn_traditional' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='353' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='200'>
        <!-- unsigned char cpp_options::cpp_warn_long_long -->
        <var-decl name='cpp_warn_long_long' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='356' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='208'>
        <!-- unsigned char cpp_options::warn_endif_labels -->
        <var-decl name='warn_endif_labels' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='359' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='216'>
        <!-- unsigned char cpp_options::warn_num_sign_change -->
        <var-decl name='warn_num_sign_change' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='363' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- unsigned char cpp_options::warn_variadic_macros -->
        <var-decl name='warn_variadic_macros' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='367' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='232'>
        <!-- unsigned char cpp_options::warn_builtin_macro_redefined -->
        <var-decl name='warn_builtin_macro_redefined' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='371' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='240'>
        <!-- unsigned char cpp_options::remap -->
        <var-decl name='remap' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='375' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='248'>
        <!-- unsigned char cpp_options::dollars_in_ident -->
        <var-decl name='dollars_in_ident' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='378' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- unsigned char cpp_options::extended_identifiers -->
        <var-decl name='extended_identifiers' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='381' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='264'>
        <!-- unsigned char cpp_options::warn_dollars -->
        <var-decl name='warn_dollars' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='385' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='272'>
        <!-- unsigned char cpp_options::warn_undef -->
        <var-decl name='warn_undef' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='388' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='280'>
        <!-- unsigned char cpp_options::warn_unused_macros -->
        <var-decl name='warn_unused_macros' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='391' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- unsigned char cpp_options::c99 -->
        <var-decl name='c99' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='394' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='296'>
        <!-- unsigned char cpp_options::std -->
        <var-decl name='std' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='397' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='304'>
        <!-- unsigned char cpp_options::cpp_pedantic -->
        <var-decl name='cpp_pedantic' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='400' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='312'>
        <!-- unsigned char cpp_options::preprocessed -->
        <var-decl name='preprocessed' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='404' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- unsigned char cpp_options::debug -->
        <var-decl name='debug' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='408' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='328'>
        <!-- unsigned char cpp_options::track_macro_expansion -->
        <var-decl name='track_macro_expansion' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='416' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='336'>
        <!-- unsigned char cpp_options::operator_names -->
        <var-decl name='operator_names' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='419' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='344'>
        <!-- unsigned char cpp_options::warn_cxx_operator_names -->
        <var-decl name='warn_cxx_operator_names' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='422' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='352'>
        <!-- unsigned char cpp_options::traditional -->
        <var-decl name='traditional' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='425' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='360'>
        <!-- unsigned char cpp_options::user_literals -->
        <var-decl name='user_literals' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='428' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- const char* cpp_options::narrow_charset -->
        <var-decl name='narrow_charset' type-id='type-id-15' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='431' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- const char* cpp_options::wide_charset -->
        <var-decl name='wide_charset' type-id='type-id-15' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='434' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- const char* cpp_options::input_charset -->
        <var-decl name='input_charset' type-id='type-id-15' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='437' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- cpp_normalize_level cpp_options::warn_normalize -->
        <var-decl name='warn_normalize' type-id='type-id-276' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='441' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='608'>
        <!-- bool cpp_options::warn_invalid_pch -->
        <var-decl name='warn_invalid_pch' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='444' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='616'>
        <!-- bool cpp_options::restore_pch_deps -->
        <var-decl name='restore_pch_deps' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='447' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- struct {cpp_deps_style style; bool missing_files; bool phony_targets; bool ignore_main_file; bool need_preprocessor_output;} cpp_options::deps -->
        <var-decl name='deps' type-id='type-id-332' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='468' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- size_t cpp_options::precision -->
        <var-decl name='precision' type-id='type-id-32' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- size_t cpp_options::char_precision -->
        <var-decl name='char_precision' type-id='type-id-32' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- size_t cpp_options::int_precision -->
        <var-decl name='int_precision' type-id='type-id-32' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- size_t cpp_options::wchar_precision -->
        <var-decl name='wchar_precision' type-id='type-id-32' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- bool cpp_options::unsigned_char -->
        <var-decl name='unsigned_char' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='477' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='968'>
        <!-- bool cpp_options::unsigned_wchar -->
        <var-decl name='unsigned_wchar' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='477' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='976'>
        <!-- bool cpp_options::bytes_big_endian -->
        <var-decl name='bytes_big_endian' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='481' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='984'>
        <!-- unsigned char cpp_options::stdc_0_in_system_headers -->
        <var-decl name='stdc_0_in_system_headers' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='484' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='992'>
        <!-- bool cpp_options::directives_only -->
        <var-decl name='directives_only' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='487' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cset_converter -->
    <class-decl name='cset_converter' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='47' column='1' id='type-id-294'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- convert_f cset_converter::func -->
        <var-decl name='func' type-id='type-id-335' visibility='default' filepath='../.././libcpp/internal.h' line='49' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- iconv_t cset_converter::cd -->
        <var-decl name='cd' type-id='type-id-208' visibility='default' filepath='../.././libcpp/internal.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int cset_converter::width -->
        <var-decl name='width' type-id='type-id-18' visibility='default' filepath='../.././libcpp/internal.h' line='51' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct lexer_state -->
    <class-decl name='lexer_state' size-in-bits='160' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='225' column='1' id='type-id-282'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned char lexer_state::in_directive -->
        <var-decl name='in_directive' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='228' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8'>
        <!-- unsigned char lexer_state::directive_wants_padding -->
        <var-decl name='directive_wants_padding' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='233' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='16'>
        <!-- unsigned char lexer_state::skipping -->
        <var-decl name='skipping' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='236' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='24'>
        <!-- unsigned char lexer_state::angled_headers -->
        <var-decl name='angled_headers' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='239' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned char lexer_state::in_expression -->
        <var-decl name='in_expression' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='242' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='40'>
        <!-- unsigned char lexer_state::save_comments -->
        <var-decl name='save_comments' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='246' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='48'>
        <!-- unsigned char lexer_state::va_args_ok -->
        <var-decl name='va_args_ok' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='249' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='56'>
        <!-- unsigned char lexer_state::poisoned_ok -->
        <var-decl name='poisoned_ok' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='252' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned char lexer_state::prevent_expansion -->
        <var-decl name='prevent_expansion' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='255' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='72'>
        <!-- unsigned char lexer_state::parsing_args -->
        <var-decl name='parsing_args' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='258' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='80'>
        <!-- unsigned char lexer_state::discarding_output -->
        <var-decl name='discarding_output' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='262' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned int lexer_state::skip_eval -->
        <var-decl name='skip_eval' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='265' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char lexer_state::in_deferred_pragma -->
        <var-decl name='in_deferred_pragma' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='268' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='136'>
        <!-- unsigned char lexer_state::pragma_allow_expansion -->
        <var-decl name='pragma_allow_expansion' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='271' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct spec_nodes -->
    <class-decl name='spec_nodes' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='275' column='1' id='type-id-301'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_hashnode* spec_nodes::n_defined -->
        <var-decl name='n_defined' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='277' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_hashnode* spec_nodes::n_true -->
        <var-decl name='n_true' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='278' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- cpp_hashnode* spec_nodes::n_false -->
        <var-decl name='n_false' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='279' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- cpp_hashnode* spec_nodes::n__VA_ARGS__ -->
        <var-decl name='n__VA_ARGS__' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='280' column='1'/>
      </data-member>
    </class-decl>
    <!-- const cpp_hashnode* -->
    <pointer-type-def type-id='type-id-336' size-in-bits='64' id='type-id-291'/>
    <!-- const directive* -->
    <pointer-type-def type-id='type-id-337' size-in-bits='64' id='type-id-286'/>
    <!-- cpp_buffer* -->
    <pointer-type-def type-id='type-id-338' size-in-bits='64' id='type-id-281'/>
    <!-- cpp_context* -->
    <pointer-type-def type-id='type-id-284' size-in-bits='64' id='type-id-285'/>
    <!-- cpp_dir* -->
    <pointer-type-def type-id='type-id-288' size-in-bits='64' id='type-id-287'/>
    <!-- cpp_savedstate* -->
    <pointer-type-def type-id='type-id-339' size-in-bits='64' id='type-id-302'/>
    <!-- def_pragma_macro* -->
    <pointer-type-def type-id='type-id-340' size-in-bits='64' id='type-id-304'/>
    <!-- deps* -->
    <pointer-type-def type-id='type-id-341' size-in-bits='64' id='type-id-295'/>
    <!-- file_hash_entry_pool* -->
    <pointer-type-def type-id='type-id-342' size-in-bits='64' id='type-id-290'/>
    <!-- ht* -->
    <pointer-type-def type-id='type-id-343' size-in-bits='64' id='type-id-298'/>
    <!-- op* -->
    <pointer-type-def type-id='type-id-344' size-in-bits='64' id='type-id-299'/>
    <!-- pragma_entry* -->
    <pointer-type-def type-id='type-id-345' size-in-bits='64' id='type-id-296'/>
    <!-- tokenrun* -->
    <pointer-type-def type-id='type-id-346' size-in-bits='64' id='type-id-293'/>
    <!-- typedef __anonymous_struct__1 cpp_comment_table -->
    <typedef-decl name='cpp_comment_table' type-id='type-id-347' filepath='../.././libcpp/include/cpplib.h' line='981' column='1' id='type-id-303'/>
    <!-- typedef tokenrun tokenrun -->
    <typedef-decl name='tokenrun' type-id='type-id-346' filepath='../.././libcpp/internal.h' line='129' column='1' id='type-id-292'/>
    <!-- unsigned char* -->
    <pointer-type-def type-id='type-id-27' size-in-bits='64' id='type-id-280'/>
    <!-- bool (cpp_reader*, cpp_hashnode*)* -->
    <pointer-type-def type-id='type-id-348' size-in-bits='64' id='type-id-320'/>
    <!-- bool (cpp_reader*, int, int, typedef source_location, unsigned int, const char*, va_list*)* -->
    <pointer-type-def type-id='type-id-349' size-in-bits='64' id='type-id-318'/>
    <!-- char* (const char*, cpp_dir*)* -->
    <pointer-type-def type-id='type-id-350' size-in-bits='64' id='type-id-329'/>
    <!-- struct _cpp_buff -->
    <class-decl name='_cpp_buff' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='101' column='1' id='type-id-305'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- _cpp_buff* _cpp_buff::next -->
        <var-decl name='next' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='103' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned char* _cpp_buff::base -->
        <var-decl name='base' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char* _cpp_buff::cur -->
        <var-decl name='cur' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned char* _cpp_buff::limit -->
        <var-decl name='limit' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='104' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct _cpp_file -->
    <class-decl name='_cpp_file' size-in-bits='1856' is-struct='yes' visibility='default' filepath='../.././libcpp/files.c' line='56' column='1' id='type-id-306'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* _cpp_file::name -->
        <var-decl name='name' type-id='type-id-15' visibility='default' filepath='../.././libcpp/files.c' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* _cpp_file::path -->
        <var-decl name='path' type-id='type-id-15' visibility='default' filepath='../.././libcpp/files.c' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char* _cpp_file::pchname -->
        <var-decl name='pchname' type-id='type-id-15' visibility='default' filepath='../.././libcpp/files.c' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- const char* _cpp_file::dir_name -->
        <var-decl name='dir_name' type-id='type-id-15' visibility='default' filepath='../.././libcpp/files.c' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- _cpp_file* _cpp_file::next_file -->
        <var-decl name='next_file' type-id='type-id-289' visibility='default' filepath='../.././libcpp/files.c' line='72' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- const uchar* _cpp_file::buffer -->
        <var-decl name='buffer' type-id='type-id-256' visibility='default' filepath='../.././libcpp/files.c' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- const uchar* _cpp_file::buffer_start -->
        <var-decl name='buffer_start' type-id='type-id-256' visibility='default' filepath='../.././libcpp/files.c' line='79' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- const cpp_hashnode* _cpp_file::cmacro -->
        <var-decl name='cmacro' type-id='type-id-291' visibility='default' filepath='../.././libcpp/files.c' line='82' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- cpp_dir* _cpp_file::dir -->
        <var-decl name='dir' type-id='type-id-287' visibility='default' filepath='../.././libcpp/files.c' line='87' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- stat _cpp_file::st -->
        <var-decl name='st' type-id='type-id-62' visibility='default' filepath='../.././libcpp/files.c' line='90' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1728'>
        <!-- int _cpp_file::fd -->
        <var-decl name='fd' type-id='type-id-18' visibility='default' filepath='../.././libcpp/files.c' line='93' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1760'>
        <!-- int _cpp_file::err_no -->
        <var-decl name='err_no' type-id='type-id-18' visibility='default' filepath='../.././libcpp/files.c' line='97' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1792'>
        <!-- unsigned short int _cpp_file::stack_count -->
        <var-decl name='stack_count' type-id='type-id-29' visibility='default' filepath='../.././libcpp/files.c' line='100' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1808'>
        <!-- bool _cpp_file::once_only -->
        <var-decl name='once_only' type-id='type-id-1' visibility='default' filepath='../.././libcpp/files.c' line='103' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1816'>
        <!-- bool _cpp_file::dont_read -->
        <var-decl name='dont_read' type-id='type-id-1' visibility='default' filepath='../.././libcpp/files.c' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1824'>
        <!-- bool _cpp_file::main_file -->
        <var-decl name='main_file' type-id='type-id-1' visibility='default' filepath='../.././libcpp/files.c' line='109' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1832'>
        <!-- bool _cpp_file::buffer_valid -->
        <var-decl name='buffer_valid' type-id='type-id-1' visibility='default' filepath='../.././libcpp/files.c' line='112' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_buffer -->
    <class-decl name='cpp_buffer' size-in-bits='1536' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='297' column='1' id='type-id-338'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const unsigned char* cpp_buffer::cur -->
        <var-decl name='cur' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='299' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const unsigned char* cpp_buffer::line_base -->
        <var-decl name='line_base' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='300' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const unsigned char* cpp_buffer::next_line -->
        <var-decl name='next_line' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='301' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- const unsigned char* cpp_buffer::buf -->
        <var-decl name='buf' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='303' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- const unsigned char* cpp_buffer::rlimit -->
        <var-decl name='rlimit' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='304' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- _cpp_line_note* cpp_buffer::notes -->
        <var-decl name='notes' type-id='type-id-351' visibility='default' filepath='../.././libcpp/internal.h' line='306' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- unsigned int cpp_buffer::cur_note -->
        <var-decl name='cur_note' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='307' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='416'>
        <!-- unsigned int cpp_buffer::notes_used -->
        <var-decl name='notes_used' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='308' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- unsigned int cpp_buffer::notes_cap -->
        <var-decl name='notes_cap' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='309' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- cpp_buffer* cpp_buffer::prev -->
        <var-decl name='prev' type-id='type-id-281' visibility='default' filepath='../.././libcpp/internal.h' line='311' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- _cpp_file* cpp_buffer::file -->
        <var-decl name='file' type-id='type-id-289' visibility='default' filepath='../.././libcpp/internal.h' line='315' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- const unsigned char* cpp_buffer::timestamp -->
        <var-decl name='timestamp' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='319' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- if_stack* cpp_buffer::if_stack -->
        <var-decl name='if_stack' type-id='type-id-352' visibility='default' filepath='../.././libcpp/internal.h' line='323' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- bool cpp_buffer::need_line -->
        <var-decl name='need_line' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='326' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8'>
        <!-- unsigned int cpp_buffer::warned_cplusplus_comments -->
        <var-decl name='warned_cplusplus_comments' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9'>
        <!-- unsigned int cpp_buffer::from_stage3 -->
        <var-decl name='from_stage3' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='337' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10'>
        <!-- unsigned int cpp_buffer::return_at_eof -->
        <var-decl name='return_at_eof' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='342' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='784'>
        <!-- unsigned char cpp_buffer::sysp -->
        <var-decl name='sysp' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='346' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- cpp_dir cpp_buffer::dir -->
        <var-decl name='dir' type-id='type-id-288' visibility='default' filepath='../.././libcpp/internal.h' line='350' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- cset_converter cpp_buffer::input_cset_desc -->
        <var-decl name='input_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='354' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_savedstate -->
    <class-decl name='cpp_savedstate' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-339'/>
    <!-- struct def_pragma_macro -->
    <class-decl name='def_pragma_macro' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='358' column='1' id='type-id-340'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- def_pragma_macro* def_pragma_macro::next -->
        <var-decl name='next' type-id='type-id-304' visibility='default' filepath='../.././libcpp/internal.h' line='360' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- char* def_pragma_macro::name -->
        <var-decl name='name' type-id='type-id-51' visibility='default' filepath='../.././libcpp/internal.h' line='362' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char* def_pragma_macro::definition -->
        <var-decl name='definition' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='364' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- source_location def_pragma_macro::line -->
        <var-decl name='line' type-id='type-id-103' visibility='default' filepath='../.././libcpp/internal.h' line='367' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int def_pragma_macro::syshdr -->
        <var-decl name='syshdr' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='369' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1'>
        <!-- unsigned int def_pragma_macro::used -->
        <var-decl name='used' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='371' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2'>
        <!-- unsigned int def_pragma_macro::is_undef -->
        <var-decl name='is_undef' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='374' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct deps -->
    <class-decl name='deps' size-in-bits='448' is-struct='yes' visibility='default' filepath='../.././libcpp/mkdeps.c' line='30' column='1' id='type-id-341'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char** deps::targetv -->
        <var-decl name='targetv' type-id='type-id-328' visibility='default' filepath='../.././libcpp/mkdeps.c' line='32' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int deps::ntargets -->
        <var-decl name='ntargets' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='33' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned int deps::targets_size -->
        <var-decl name='targets_size' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='34' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char** deps::depv -->
        <var-decl name='depv' type-id='type-id-328' visibility='default' filepath='../.././libcpp/mkdeps.c' line='36' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned int deps::ndeps -->
        <var-decl name='ndeps' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='37' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- unsigned int deps::deps_size -->
        <var-decl name='deps_size' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='38' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- const char** deps::vpathv -->
        <var-decl name='vpathv' type-id='type-id-328' visibility='default' filepath='../.././libcpp/mkdeps.c' line='40' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- size_t* deps::vpathlv -->
        <var-decl name='vpathlv' type-id='type-id-211' visibility='default' filepath='../.././libcpp/mkdeps.c' line='41' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- unsigned int deps::nvpaths -->
        <var-decl name='nvpaths' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='416'>
        <!-- unsigned int deps::vpaths_size -->
        <var-decl name='vpaths_size' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='43' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct file_hash_entry_pool -->
    <class-decl name='file_hash_entry_pool' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-342'/>
    <!-- struct ht -->
    <class-decl name='ht' size-in-bits='1152' is-struct='yes' visibility='default' filepath='../.././libcpp/include/symtab.h' line='47' column='1' id='type-id-343'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- obstack ht::stack -->
        <var-decl name='stack' type-id='type-id-58' visibility='default' filepath='../.././libcpp/include/symtab.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- hashnode* ht::entries -->
        <var-decl name='entries' type-id='type-id-353' visibility='default' filepath='../.././libcpp/include/symtab.h' line='52' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- typedef hashnode (hash_table*)* ht::alloc_node -->
        <var-decl name='alloc_node' type-id='type-id-354' visibility='default' filepath='../.././libcpp/include/symtab.h' line='54' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- void* (typedef size_t)* ht::alloc_subobject -->
        <var-decl name='alloc_subobject' type-id='type-id-213' visibility='default' filepath='../.././libcpp/include/symtab.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- unsigned int ht::nslots -->
        <var-decl name='nslots' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='928'>
        <!-- unsigned int ht::nelements -->
        <var-decl name='nelements' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- cpp_reader* ht::pfile -->
        <var-decl name='pfile' type-id='type-id-258' visibility='default' filepath='../.././libcpp/include/symtab.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- unsigned int ht::searches -->
        <var-decl name='searches' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1056'>
        <!-- unsigned int ht::collisions -->
        <var-decl name='collisions' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- bool ht::entries_owned -->
        <var-decl name='entries_owned' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/symtab.h' line='70' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct op -->
    <class-decl name='op' size-in-bits='320' is-struct='yes' visibility='default' filepath='../.././libcpp/expr.c' line='30' column='1' id='type-id-344'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const cpp_token* op::token -->
        <var-decl name='token' type-id='type-id-263' visibility='default' filepath='../.././libcpp/expr.c' line='32' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_num op::value -->
        <var-decl name='value' type-id='type-id-355' visibility='default' filepath='../.././libcpp/expr.c' line='33' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- source_location op::loc -->
        <var-decl name='loc' type-id='type-id-103' visibility='default' filepath='../.././libcpp/expr.c' line='34' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- cpp_ttype op::op -->
        <var-decl name='op' type-id='type-id-178' visibility='default' filepath='../.././libcpp/expr.c' line='35' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct pragma_entry -->
    <class-decl name='pragma_entry' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-345'/>
    <!-- struct tokenrun -->
    <class-decl name='tokenrun' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='130' column='1' id='type-id-346'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- tokenrun* tokenrun::next -->
        <var-decl name='next' type-id='type-id-293' visibility='default' filepath='../.././libcpp/internal.h' line='132' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- tokenrun* tokenrun::prev -->
        <var-decl name='prev' type-id='type-id-293' visibility='default' filepath='../.././libcpp/internal.h' line='132' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- cpp_token* tokenrun::base -->
        <var-decl name='base' type-id='type-id-163' visibility='default' filepath='../.././libcpp/internal.h' line='133' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- cpp_token* tokenrun::limit -->
        <var-decl name='limit' type-id='type-id-163' visibility='default' filepath='../.././libcpp/internal.h' line='133' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {cpp_comment* entries; int count; int allocated;} -->
    <class-decl name='__anonymous_struct__1' size-in-bits='128' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-303' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='972' column='1' id='type-id-347'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_comment* entries -->
        <var-decl name='entries' type-id='type-id-356' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='974' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int count -->
        <var-decl name='count' type-id='type-id-18' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='977' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- int allocated -->
        <var-decl name='allocated' type-id='type-id-18' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='980' column='1'/>
      </data-member>
    </class-decl>
    <!-- const char** -->
    <pointer-type-def type-id='type-id-15' size-in-bits='64' id='type-id-328'/>
    <!-- const cpp_hashnode -->
    <qualified-type-def type-id='type-id-357' const='yes' id='type-id-336'/>
    <!-- const directive -->
    <qualified-type-def type-id='type-id-358' const='yes' id='type-id-337'/>
    <!-- cpp_hashnode* (cpp_reader*, const cpp_token*)* -->
    <pointer-type-def type-id='type-id-359' size-in-bits='64' id='type-id-317'/>
    <!-- enum c_lang -->
    <enum-decl name='c_lang' filepath='../.././libcpp/include/cpplib.h' line='168' column='1' id='type-id-334'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='CLK_GNUC89' value='0'/>
      <enumerator name='CLK_GNUC99' value='1'/>
      <enumerator name='CLK_GNUC11' value='2'/>
      <enumerator name='CLK_STDC89' value='3'/>
      <enumerator name='CLK_STDC94' value='4'/>
      <enumerator name='CLK_STDC99' value='5'/>
      <enumerator name='CLK_STDC11' value='6'/>
      <enumerator name='CLK_GNUCXX' value='7'/>
      <enumerator name='CLK_CXX98' value='8'/>
      <enumerator name='CLK_GNUCXX11' value='9'/>
      <enumerator name='CLK_CXX11' value='10'/>
      <enumerator name='CLK_ASM' value='11'/>
    </enum-decl>
    <!-- enum context_tokens_kind -->
    <enum-decl name='context_tokens_kind' filepath='../.././libcpp/internal.h' line='161' column='1' id='type-id-327'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='TOKENS_KIND_INDIRECT' value='0'/>
      <enumerator name='TOKENS_KIND_DIRECT' value='1'/>
      <enumerator name='TOKENS_KIND_EXTENDED' value='2'/>
    </enum-decl>
    <!-- enum cpp_deps_style -->
    <enum-decl name='cpp_deps_style' filepath='../.././libcpp/include/cpplib.h' line='273' column='1' id='type-id-333'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='DEPS_NONE' value='0'/>
      <enumerator name='DEPS_USER' value='1'/>
      <enumerator name='DEPS_SYSTEM' value='2'/>
    </enum-decl>
    <!-- int (cpp_reader*, const char*, int)* -->
    <pointer-type-def type-id='type-id-360' size-in-bits='64' id='type-id-314'/>
    <!-- macro_context* -->
    <pointer-type-def type-id='type-id-361' size-in-bits='64' id='type-id-326'/>
    <!-- typedef bool (typedef iconv_t, const unsigned char*, typedef size_t, _cpp_strbuf*)* convert_f -->
    <typedef-decl name='convert_f' type-id='type-id-362' filepath='../.././libcpp/internal.h' line='45' column='1' id='type-id-335'/>
    <!-- typedef __dev_t dev_t -->
    <typedef-decl name='dev_t' type-id='type-id-63' filepath='/usr/include/sys/types.h' line='61' column='1' id='type-id-331'/>
    <!-- typedef __ino_t ino_t -->
    <typedef-decl name='ino_t' type-id='type-id-64' filepath='/usr/include/sys/types.h' line='49' column='1' id='type-id-330'/>
    <!-- typedef const char* (cpp_reader*, const char*, cpp_dir**)* missing_header_cb -->
    <typedef-decl name='missing_header_cb' type-id='type-id-363' filepath='../.././libcpp/include/cpplib.h' line='496' column='1' id='type-id-316'/>
    <!-- union utoken -->
    <union-decl name='utoken' size-in-bits='64' visibility='default' filepath='../.././libcpp/internal.h' line='122' column='1' id='type-id-323'>
      <data-member access='public'>
        <!-- const cpp_token* utoken::token -->
        <var-decl name='token' type-id='type-id-263' visibility='default' filepath='../.././libcpp/internal.h' line='124' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- const cpp_token** utoken::ptoken -->
        <var-decl name='ptoken' type-id='type-id-364' visibility='default' filepath='../.././libcpp/internal.h' line='125' column='1'/>
      </data-member>
    </union-decl>
    <!-- void (cpp_reader*)* -->
    <pointer-type-def type-id='type-id-365' size-in-bits='64' id='type-id-319'/>
    <!-- void (cpp_reader*, const char*)* -->
    <pointer-type-def type-id='type-id-366' size-in-bits='64' id='type-id-309'/>
    <!-- void (cpp_reader*, const char*, int, const char*)* -->
    <pointer-type-def type-id='type-id-367' size-in-bits='64' id='type-id-315'/>
    <!-- void (cpp_reader*, const cpp_token*, int)* -->
    <pointer-type-def type-id='type-id-368' size-in-bits='64' id='type-id-307'/>
    <!-- void (cpp_reader*, const line_map*)* -->
    <pointer-type-def type-id='type-id-369' size-in-bits='64' id='type-id-308'/>
    <!-- void (cpp_reader*, typedef source_location)* -->
    <pointer-type-def type-id='type-id-370' size-in-bits='64' id='type-id-313'/>
    <!-- void (cpp_reader*, typedef source_location, const cpp_string*)* -->
    <pointer-type-def type-id='type-id-371' size-in-bits='64' id='type-id-312'/>
    <!-- void (cpp_reader*, typedef source_location, const unsigned char*, const char*, int, const cpp_token**)* -->
    <pointer-type-def type-id='type-id-372' size-in-bits='64' id='type-id-310'/>
    <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* -->
    <pointer-type-def type-id='type-id-373' size-in-bits='64' id='type-id-311'/>
    <!-- _cpp_line_note* -->
    <pointer-type-def type-id='type-id-374' size-in-bits='64' id='type-id-351'/>
    <!-- bool (typedef iconv_t, const unsigned char*, typedef size_t, _cpp_strbuf*)* -->
    <pointer-type-def type-id='type-id-375' size-in-bits='64' id='type-id-362'/>
    <!-- struct directive -->
    <class-decl name='directive' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-358'/>
    <!-- const char* (cpp_reader*, const char*, cpp_dir**)* -->
    <pointer-type-def type-id='type-id-376' size-in-bits='64' id='type-id-363'/>
    <!-- const cpp_token** -->
    <pointer-type-def type-id='type-id-263' size-in-bits='64' id='type-id-364'/>
    <!-- cpp_comment* -->
    <pointer-type-def type-id='type-id-377' size-in-bits='64' id='type-id-356'/>
    <!-- hashnode* -->
    <pointer-type-def type-id='type-id-378' size-in-bits='64' id='type-id-353'/>
    <!-- if_stack* -->
    <pointer-type-def type-id='type-id-379' size-in-bits='64' id='type-id-352'/>
    <!-- typedef cpp_hashnode cpp_hashnode -->
    <typedef-decl name='cpp_hashnode' type-id='type-id-78' filepath='../.././libcpp/include/cpplib.h' line='36' column='1' id='type-id-357'/>
    <!-- typedef cpp_num cpp_num -->
    <typedef-decl name='cpp_num' type-id='type-id-380' filepath='../.././libcpp/include/cpplib.h' line='800' column='1' id='type-id-355'/>
    <!-- typedef hashnode (hash_table*)* -->
    <pointer-type-def type-id='type-id-381' size-in-bits='64' id='type-id-354'/>
    <!-- typedef __anonymous_struct__ macro_context -->
    <typedef-decl name='macro_context' type-id='type-id-382' filepath='../.././libcpp/internal.h' line='158' column='1' id='type-id-361'/>
    <!-- struct cpp_num -->
    <class-decl name='cpp_num' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='801' column='1' id='type-id-380'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_num_part cpp_num::high -->
        <var-decl name='high' type-id='type-id-383' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='803' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_num_part cpp_num::low -->
        <var-decl name='low' type-id='type-id-383' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='804' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- bool cpp_num::unsignedp -->
        <var-decl name='unsignedp' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='805' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='136'>
        <!-- bool cpp_num::overflow -->
        <var-decl name='overflow' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='806' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct if_stack -->
    <class-decl name='if_stack' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-379'/>
    <!-- struct {cpp_hashnode* macro_node; source_location* virt_locs; source_location* cur_virt_loc;} -->
    <class-decl name='__anonymous_struct__' size-in-bits='192' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-361' visibility='default' filepath='../.././libcpp/internal.h' line='146' column='1' id='type-id-382'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_hashnode* macro_node -->
        <var-decl name='macro_node' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='148' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- source_location* virt_locs -->
        <var-decl name='virt_locs' type-id='type-id-117' visibility='default' filepath='../.././libcpp/internal.h' line='153' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- source_location* cur_virt_loc -->
        <var-decl name='cur_virt_loc' type-id='type-id-117' visibility='default' filepath='../.././libcpp/internal.h' line='157' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef _cpp_line_note _cpp_line_note -->
    <typedef-decl name='_cpp_line_note' type-id='type-id-384' filepath='../.././libcpp/internal.h' line='283' column='1' id='type-id-374'/>
    <!-- typedef __anonymous_struct__2 cpp_comment -->
    <typedef-decl name='cpp_comment' type-id='type-id-385' filepath='../.././libcpp/include/cpplib.h' line='967' column='1' id='type-id-377'/>
    <!-- typedef ht_identifier* hashnode -->
    <typedef-decl name='hashnode' type-id='type-id-386' filepath='../.././libcpp/include/symtab.h' line='42' column='1' id='type-id-378'/>
    <!-- struct _cpp_line_note -->
    <class-decl name='_cpp_line_note' size-in-bits='128' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='284' column='1' id='type-id-384'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const unsigned char* _cpp_line_note::pos -->
        <var-decl name='pos' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='287' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int _cpp_line_note::type -->
        <var-decl name='type' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='293' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {char* comment; source_location sloc;} -->
    <class-decl name='__anonymous_struct__2' size-in-bits='128' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-377' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='961' column='1' id='type-id-385'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- char* comment -->
        <var-decl name='comment' type-id='type-id-51' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='963' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- source_location sloc -->
        <var-decl name='sloc' type-id='type-id-103' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='966' column='1'/>
      </data-member>
    </class-decl>
    <!-- ht_identifier* -->
    <pointer-type-def type-id='type-id-79' size-in-bits='64' id='type-id-386'/>
    <!-- typedef unsigned long int cpp_num_part -->
    <typedef-decl name='cpp_num_part' type-id='type-id-28' filepath='../.././libcpp/include/cpplib.h' line='799' column='1' id='type-id-383'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/directives.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- typedef void (cpp_reader*)* pragma_cb -->
    <typedef-decl name='pragma_cb' type-id='type-id-319' filepath='../.././libcpp/directives.c' line='43' column='1' id='type-id-387'/>
    <!-- typedef cpp_options cpp_options -->
    <typedef-decl name='cpp_options' type-id='type-id-300' filepath='../.././libcpp/include/cpplib.h' line='33' column='1' id='type-id-388'/>
    <!-- typedef cpp_callbacks cpp_callbacks -->
    <typedef-decl name='cpp_callbacks' type-id='type-id-297' filepath='../.././libcpp/include/cpplib.h' line='38' column='1' id='type-id-389'/>
    <!-- enum include_type -->
    <enum-decl name='include_type' filepath='../.././libcpp/internal.h' line='120' column='1' id='type-id-390'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='IT_INCLUDE' value='0'/>
      <enumerator name='IT_INCLUDE_NEXT' value='1'/>
      <enumerator name='IT_IMPORT' value='2'/>
      <enumerator name='IT_CMDLINE' value='3'/>
    </enum-decl>
    <!-- typedef int (cpp_reader*, cpp_hashnode*, void*)* cpp_cb -->
    <typedef-decl name='cpp_cb' type-id='type-id-391' filepath='../.././libcpp/include/cpplib.h' line='994' column='1' id='type-id-392'/>
    <!-- cpp_callbacks* -->
    <pointer-type-def type-id='type-id-389' size-in-bits='64' id='type-id-393'/>
    <!-- cpp_options* -->
    <pointer-type-def type-id='type-id-388' size-in-bits='64' id='type-id-394'/>
    <!-- cpp_string* -->
    <pointer-type-def type-id='type-id-272' size-in-bits='64' id='type-id-262'/>
    <!-- int (cpp_reader*, cpp_hashnode*, void*)* -->
    <pointer-type-def type-id='type-id-395' size-in-bits='64' id='type-id-391'/>
    <!-- unsigned int* -->
    <pointer-type-def type-id='type-id-13' size-in-bits='64' id='type-id-264'/>
    <!-- void cpp_undef_all(cpp_reader*) -->
    <function-decl name='cpp_undef_all' mangled-name='_Z13cpp_undef_allP10cpp_reader' filepath='../.././libcpp/directives.c' line='639' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z13cpp_undef_allP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_do_file_change(cpp_reader*, lc_reason, const char*, linenum_type, unsigned int) -->
    <function-decl name='_cpp_do_file_change' mangled-name='_cpp_do_file_change' filepath='../.././libcpp/directives.c' line='1034' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_do_file_change'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='1034' column='1'/>
      <!-- parameter of type 'enum lc_reason' -->
      <parameter type-id='type-id-108' name='reason' filepath='../.././libcpp/directives.c' line='1034' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='to_file' filepath='../.././libcpp/directives.c' line='1035' column='1'/>
      <!-- parameter of type 'typedef linenum_type' -->
      <parameter type-id='type-id-115' name='file_line' filepath='../.././libcpp/directives.c' line='1035' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='sysp' filepath='../.././libcpp/directives.c' line='1036' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_register_pragma(cpp_reader*, const char*, const char*, pragma_cb, bool) -->
    <function-decl name='cpp_register_pragma' mangled-name='_Z19cpp_register_pragmaP10cpp_readerPKcS2_PFvS0_Eb' filepath='../.././libcpp/directives.c' line='1214' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19cpp_register_pragmaP10cpp_readerPKcS2_PFvS0_Eb'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='1214' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='space' filepath='../.././libcpp/directives.c' line='1214' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././libcpp/directives.c' line='1214' column='1'/>
      <!-- parameter of type 'typedef pragma_cb' -->
      <parameter type-id='type-id-387' name='handler' filepath='../.././libcpp/directives.c' line='1215' column='1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1' name='allow_expansion' filepath='../.././libcpp/directives.c' line='1215' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_register_deferred_pragma(cpp_reader*, const char*, const char*, unsigned int, bool, bool) -->
    <function-decl name='cpp_register_deferred_pragma' mangled-name='_Z28cpp_register_deferred_pragmaP10cpp_readerPKcS2_jbb' filepath='../.././libcpp/directives.c' line='1237' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z28cpp_register_deferred_pragmaP10cpp_readerPKcS2_jbb'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='1237' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='space' filepath='../.././libcpp/directives.c' line='1237' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././libcpp/directives.c' line='1238' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='ident' filepath='../.././libcpp/directives.c' line='1238' column='1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1' name='allow_expansion' filepath='../.././libcpp/directives.c' line='1239' column='1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1' name='allow_name_expansion' filepath='../.././libcpp/directives.c' line='1239' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_init_internal_pragmas(cpp_reader*) -->
    <function-decl name='_cpp_init_internal_pragmas' mangled-name='_cpp_init_internal_pragmas' filepath='../.././libcpp/directives.c' line='1254' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_init_internal_pragmas'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- char** _cpp_save_pragma_names(cpp_reader*) -->
    <function-decl name='_cpp_save_pragma_names' mangled-name='_cpp_save_pragma_names' filepath='../.././libcpp/directives.c' line='1304' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_save_pragma_names'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='1304' column='1'/>
      <!-- char** -->
      <return type-id='type-id-123'/>
    </function-decl>
    <!-- void _cpp_restore_pragma_names(cpp_reader*, char**) -->
    <function-decl name='_cpp_restore_pragma_names' mangled-name='_cpp_restore_pragma_names' filepath='../.././libcpp/directives.c' line='1333' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_restore_pragma_names'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='1333' column='1'/>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123' name='saved' filepath='../.././libcpp/directives.c' line='1333' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int _cpp_test_assertion(cpp_reader*, unsigned int*) -->
    <function-decl name='_cpp_test_assertion' mangled-name='_cpp_test_assertion' filepath='../.././libcpp/directives.c' line='2225' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_test_assertion'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='2225' column='1'/>
      <!-- parameter of type 'unsigned int*' -->
      <parameter type-id='type-id-264' name='value' filepath='../.././libcpp/directives.c' line='2225' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- cpp_options* cpp_get_options(cpp_reader*) -->
    <function-decl name='cpp_get_options' mangled-name='_Z15cpp_get_optionsP10cpp_reader' filepath='../.././libcpp/directives.c' line='2492' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15cpp_get_optionsP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='2492' column='1'/>
      <!-- cpp_options* -->
      <return type-id='type-id-394'/>
    </function-decl>
    <!-- cpp_callbacks* cpp_get_callbacks(cpp_reader*) -->
    <function-decl name='cpp_get_callbacks' mangled-name='_Z17cpp_get_callbacksP10cpp_reader' filepath='../.././libcpp/directives.c' line='2499' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17cpp_get_callbacksP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='2499' column='1'/>
      <!-- cpp_callbacks* -->
      <return type-id='type-id-393'/>
    </function-decl>
    <!-- void cpp_set_callbacks(cpp_reader*, cpp_callbacks*) -->
    <function-decl name='cpp_set_callbacks' mangled-name='_Z17cpp_set_callbacksP10cpp_readerP13cpp_callbacks' filepath='../.././libcpp/directives.c' line='2506' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17cpp_set_callbacksP10cpp_readerP13cpp_callbacks'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='2506' column='1'/>
      <!-- parameter of type 'cpp_callbacks*' -->
      <parameter type-id='type-id-393' name='cb' filepath='../.././libcpp/directives.c' line='2506' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- deps* cpp_get_deps(cpp_reader*) -->
    <function-decl name='cpp_get_deps' mangled-name='_Z12cpp_get_depsP10cpp_reader' filepath='../.././libcpp/directives.c' line='2513' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12cpp_get_depsP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='2513' column='1'/>
      <!-- deps* -->
      <return type-id='type-id-295'/>
    </function-decl>
    <!-- cpp_buffer* cpp_push_buffer(cpp_reader*, const uchar*, size_t, int) -->
    <function-decl name='cpp_push_buffer' mangled-name='_Z15cpp_push_bufferP10cpp_readerPKhmi' filepath='../.././libcpp/directives.c' line='2524' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15cpp_push_bufferP10cpp_readerPKhmi'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='2524' column='1'/>
      <!-- parameter of type 'const uchar*' -->
      <parameter type-id='type-id-256' name='buffer' filepath='../.././libcpp/directives.c' line='2524' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libcpp/directives.c' line='2524' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='from_stage3' filepath='../.././libcpp/directives.c' line='2525' column='1'/>
      <!-- cpp_buffer* -->
      <return type-id='type-id-281'/>
    </function-decl>
    <!-- void cpp_unassert(cpp_reader*, const char*) -->
    <function-decl name='cpp_unassert' mangled-name='_Z12cpp_unassertP10cpp_readerPKc' filepath='../.././libcpp/directives.c' line='2462' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12cpp_unassertP10cpp_readerPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_assert(cpp_reader*, const char*) -->
    <function-decl name='cpp_assert' mangled-name='_Z10cpp_assertP10cpp_readerPKc' filepath='../.././libcpp/directives.c' line='2455' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z10cpp_assertP10cpp_readerPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_undef(cpp_reader*, const char*) -->
    <function-decl name='cpp_undef' mangled-name='_Z9cpp_undefP10cpp_readerPKc' filepath='../.././libcpp/directives.c' line='2391' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9cpp_undefP10cpp_readerPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_define_builtin(cpp_reader*, const char*) -->
    <function-decl name='_cpp_define_builtin' mangled-name='_cpp_define_builtin' filepath='../.././libcpp/directives.c' line='2380' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_define_builtin'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_define(cpp_reader*, const char*) -->
    <function-decl name='cpp_define' mangled-name='_Z10cpp_defineP10cpp_readerPKc' filepath='../.././libcpp/directives.c' line='2331' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z10cpp_defineP10cpp_readerPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_define_formatted(cpp_reader*, const char*, ...) -->
    <function-decl name='cpp_define_formatted' mangled-name='_Z20cpp_define_formattedP10cpp_readerPKcz' filepath='../.././libcpp/directives.c' line='2364' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z20cpp_define_formattedP10cpp_readerPKcz'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/directives.c' line='2364' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='fmt' filepath='../.././libcpp/directives.c' line='2364' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_init_directives(cpp_reader*) -->
    <function-decl name='_cpp_init_directives' mangled-name='_cpp_init_directives' filepath='../.././libcpp/directives.c' line='2580' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_init_directives'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- bool _cpp_parse_expr(cpp_reader*, bool) -->
    <function-decl name='_cpp_parse_expr' mangled-name='_cpp_parse_expr' filepath='../.././libcpp/internal.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_parse_expr'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- void _cpp_overlay_buffer(cpp_reader*, const unsigned char*, size_t) -->
    <function-decl name='_cpp_overlay_buffer' filepath='../.././libcpp/internal.h' line='690' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void* xmemdup(void*, size_t, size_t) -->
    <function-decl name='xmemdup' filepath='../.././libcpp/../include/libiberty.h' line='324' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- bool _cpp_stack_include(cpp_reader*, const char*, int, include_type) -->
    <function-decl name='_cpp_stack_include' mangled-name='_cpp_stack_include' filepath='../.././libcpp/internal.h' line='629' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_stack_include'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'enum include_type' -->
      <parameter type-id='type-id-390'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- int _cpp_compare_file_date(cpp_reader*, const char*, int) -->
    <function-decl name='_cpp_compare_file_date' mangled-name='_cpp_compare_file_date' filepath='../.././libcpp/internal.h' line='631' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_compare_file_date'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- cpp_hashnode* _cpp_lex_identifier(cpp_reader*, const char*) -->
    <function-decl name='_cpp_lex_identifier' mangled-name='_cpp_lex_identifier' filepath='../.././libcpp/internal.h' line='655' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_lex_identifier'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- cpp_hashnode* -->
      <return type-id='type-id-116'/>
    </function-decl>
    <!-- void _cpp_mark_file_once_only(cpp_reader*, _cpp_file*) -->
    <function-decl name='_cpp_mark_file_once_only' mangled-name='_cpp_mark_file_once_only' filepath='../.././libcpp/internal.h' line='626' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_mark_file_once_only'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type '_cpp_file*' -->
      <parameter type-id='type-id-289'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_fake_include(cpp_reader*, const char*) -->
    <function-decl name='_cpp_fake_include' mangled-name='_cpp_fake_include' filepath='../.././libcpp/internal.h' line='627' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_fake_include'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_pop_file_buffer(cpp_reader*, _cpp_file*) -->
    <function-decl name='_cpp_pop_file_buffer' mangled-name='_cpp_pop_file_buffer' filepath='../.././libcpp/internal.h' line='635' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_pop_file_buffer'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type '_cpp_file*' -->
      <parameter type-id='type-id-289'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- size_t strcspn(const char*, const char*) -->
    <function-decl name='strcspn' filepath='/usr/include/string.h' line='284' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- int (cpp_reader*, cpp_hashnode*, void*) -->
    <function-type size-in-bits='64' id='type-id-395'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='node'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='v'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/errors.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- bool cpp_error(cpp_reader*, int, const char*, ...) -->
    <function-decl name='cpp_error' mangled-name='_Z9cpp_errorP10cpp_readeriPKcz' filepath='../.././libcpp/errors.c' line='72' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9cpp_errorP10cpp_readeriPKcz'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_warning(cpp_reader*, int, const char*, ...) -->
    <function-decl name='cpp_warning' mangled-name='_Z11cpp_warningP10cpp_readeriPKcz' filepath='../.././libcpp/errors.c' line='88' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z11cpp_warningP10cpp_readeriPKcz'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_pedwarning(cpp_reader*, int, const char*, ...) -->
    <function-decl name='cpp_pedwarning' mangled-name='_Z14cpp_pedwarningP10cpp_readeriPKcz' filepath='../.././libcpp/errors.c' line='104' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14cpp_pedwarningP10cpp_readeriPKcz'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_warning_syshdr(cpp_reader*, int, const char*, ...) -->
    <function-decl name='cpp_warning_syshdr' mangled-name='_Z18cpp_warning_syshdrP10cpp_readeriPKcz' filepath='../.././libcpp/errors.c' line='121' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18cpp_warning_syshdrP10cpp_readeriPKcz'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_error_with_line(cpp_reader*, int, source_location, unsigned int, const char*, ...) -->
    <function-decl name='cpp_error_with_line' mangled-name='_Z19cpp_error_with_lineP10cpp_readerijjPKcz' filepath='../.././libcpp/errors.c' line='154' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19cpp_error_with_lineP10cpp_readerijjPKcz'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_warning_with_line(cpp_reader*, int, source_location, unsigned int, const char*, ...) -->
    <function-decl name='cpp_warning_with_line' mangled-name='_Z21cpp_warning_with_lineP10cpp_readerijjPKcz' filepath='../.././libcpp/errors.c' line='173' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z21cpp_warning_with_lineP10cpp_readerijjPKcz'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_pedwarning_with_line(cpp_reader*, int, source_location, unsigned int, const char*, ...) -->
    <function-decl name='cpp_pedwarning_with_line' mangled-name='_Z24cpp_pedwarning_with_lineP10cpp_readerijjPKcz' filepath='../.././libcpp/errors.c' line='192' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z24cpp_pedwarning_with_lineP10cpp_readerijjPKcz'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_warning_with_line_syshdr(cpp_reader*, int, source_location, unsigned int, const char*, ...) -->
    <function-decl name='cpp_warning_with_line_syshdr' mangled-name='_Z28cpp_warning_with_line_syshdrP10cpp_readerijjPKcz' filepath='../.././libcpp/errors.c' line='212' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z28cpp_warning_with_line_syshdrP10cpp_readerijjPKcz'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <parameter is-variadic='yes'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_errno(cpp_reader*, int, const char*) -->
    <function-decl name='cpp_errno' mangled-name='_Z9cpp_errnoP10cpp_readeriPKc' filepath='../.././libcpp/errors.c' line='232' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9cpp_errnoP10cpp_readeriPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- char* dgettext(const char*, const char*) -->
    <function-decl name='dgettext' filepath='/usr/include/libintl.h' line='45' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/expr.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- typedef cpp_num cpp_num -->
    <typedef-decl name='cpp_num' type-id='type-id-380' filepath='../.././libcpp/include/cpplib.h' line='800' column='1' id='type-id-355'/>
    <!-- struct cpp_num -->
    <class-decl name='cpp_num' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='801' column='1' id='type-id-380'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_num_part cpp_num::high -->
        <var-decl name='high' type-id='type-id-383' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='803' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_num_part cpp_num::low -->
        <var-decl name='low' type-id='type-id-383' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='804' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- bool cpp_num::unsignedp -->
        <var-decl name='unsignedp' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='805' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='136'>
        <!-- bool cpp_num::overflow -->
        <var-decl name='overflow' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='806' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef unsigned long int cpp_num_part -->
    <typedef-decl name='cpp_num_part' type-id='type-id-28' filepath='../.././libcpp/include/cpplib.h' line='799' column='1' id='type-id-383'/>
    <!-- typedef unsigned int cppchar_t -->
    <typedef-decl name='cppchar_t' type-id='type-id-13' filepath='../.././libcpp/include/cpplib.h' line='269' column='1' id='type-id-259'/>
    <!-- unsigned int cpp_interpret_float_suffix(const char*, size_t) -->
    <function-decl name='cpp_interpret_float_suffix' mangled-name='_Z26cpp_interpret_float_suffixPKcm' filepath='../.././libcpp/expr.c' line='190' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z26cpp_interpret_float_suffixPKcm'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='s' filepath='../.././libcpp/expr.c' line='190' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libcpp/expr.c' line='190' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-13'/>
    </function-decl>
    <!-- unsigned int cpp_interpret_int_suffix(const char*, size_t) -->
    <function-decl name='cpp_interpret_int_suffix' mangled-name='_Z24cpp_interpret_int_suffixPKcm' filepath='../.././libcpp/expr.c' line='231' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z24cpp_interpret_int_suffixPKcm'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='s' filepath='../.././libcpp/expr.c' line='190' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libcpp/expr.c' line='190' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-13'/>
    </function-decl>
    <!-- cpp_ttype cpp_userdef_string_remove_type(cpp_ttype) -->
    <function-decl name='cpp_userdef_string_remove_type' mangled-name='_Z30cpp_userdef_string_remove_type9cpp_ttype' filepath='../.././libcpp/expr.c' line='240' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z30cpp_userdef_string_remove_type9cpp_ttype'>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178' name='type' filepath='../.././libcpp/expr.c' line='240' column='1'/>
      <!-- enum cpp_ttype -->
      <return type-id='type-id-178'/>
    </function-decl>
    <!-- cpp_ttype cpp_userdef_string_add_type(cpp_ttype) -->
    <function-decl name='cpp_userdef_string_add_type' mangled-name='_Z27cpp_userdef_string_add_type9cpp_ttype' filepath='../.././libcpp/expr.c' line='260' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z27cpp_userdef_string_add_type9cpp_ttype'>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178' name='type' filepath='../.././libcpp/expr.c' line='240' column='1'/>
      <!-- enum cpp_ttype -->
      <return type-id='type-id-178'/>
    </function-decl>
    <!-- cpp_ttype cpp_userdef_char_remove_type(cpp_ttype) -->
    <function-decl name='cpp_userdef_char_remove_type' mangled-name='_Z28cpp_userdef_char_remove_type9cpp_ttype' filepath='../.././libcpp/expr.c' line='280' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z28cpp_userdef_char_remove_type9cpp_ttype'>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178' name='type' filepath='../.././libcpp/expr.c' line='240' column='1'/>
      <!-- enum cpp_ttype -->
      <return type-id='type-id-178'/>
    </function-decl>
    <!-- cpp_ttype cpp_userdef_char_add_type(cpp_ttype) -->
    <function-decl name='cpp_userdef_char_add_type' mangled-name='_Z25cpp_userdef_char_add_type9cpp_ttype' filepath='../.././libcpp/expr.c' line='298' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z25cpp_userdef_char_add_type9cpp_ttype'>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178' name='type' filepath='../.././libcpp/expr.c' line='240' column='1'/>
      <!-- enum cpp_ttype -->
      <return type-id='type-id-178'/>
    </function-decl>
    <!-- bool cpp_userdef_string_p(cpp_ttype) -->
    <function-decl name='cpp_userdef_string_p' mangled-name='_Z20cpp_userdef_string_p9cpp_ttype' filepath='../.././libcpp/expr.c' line='314' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z20cpp_userdef_string_p9cpp_ttype'>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178' name='type' filepath='../.././libcpp/expr.c' line='314' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_userdef_char_p(cpp_ttype) -->
    <function-decl name='cpp_userdef_char_p' mangled-name='_Z18cpp_userdef_char_p9cpp_ttype' filepath='../.././libcpp/expr.c' line='328' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18cpp_userdef_char_p9cpp_ttype'>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178' name='type' filepath='../.././libcpp/expr.c' line='314' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- const char* cpp_get_userdef_suffix(const cpp_token*) -->
    <function-decl name='cpp_get_userdef_suffix' mangled-name='_Z22cpp_get_userdef_suffixPK9cpp_token' filepath='../.././libcpp/expr.c' line='341' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z22cpp_get_userdef_suffixPK9cpp_token'>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263' name='tok' filepath='../.././libcpp/expr.c' line='341' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- unsigned int cpp_classify_number(cpp_reader*, const cpp_token*, const char**) -->
    <function-decl name='cpp_classify_number' mangled-name='_Z19cpp_classify_numberP10cpp_readerPK9cpp_tokenPPKc' filepath='../.././libcpp/expr.c' line='364' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19cpp_classify_numberP10cpp_readerPK9cpp_tokenPPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/expr.c' line='364' column='1'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263' name='token' filepath='../.././libcpp/expr.c' line='364' column='1'/>
      <!-- parameter of type 'const char**' -->
      <parameter type-id='type-id-328' name='ud_suffix' filepath='../.././libcpp/expr.c' line='365' column='1'/>
      <!-- unsigned int -->
      <return type-id='type-id-13'/>
    </function-decl>
    <!-- cpp_num cpp_interpret_integer(cpp_reader*, const cpp_token*, unsigned int) -->
    <function-decl name='cpp_interpret_integer' mangled-name='_Z21cpp_interpret_integerP10cpp_readerPK9cpp_tokenj' filepath='../.././libcpp/expr.c' line='635' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z21cpp_interpret_integerP10cpp_readerPK9cpp_tokenj'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/expr.c' line='635' column='1'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263' name='token' filepath='../.././libcpp/expr.c' line='635' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='type' filepath='../.././libcpp/expr.c' line='636' column='1'/>
      <!-- typedef cpp_num -->
      <return type-id='type-id-355'/>
    </function-decl>
    <!-- op* _cpp_expand_op_stack(cpp_reader*) -->
    <function-decl name='_cpp_expand_op_stack' mangled-name='_cpp_expand_op_stack' filepath='../.././libcpp/expr.c' line='1396' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_expand_op_stack'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/expr.c' line='1396' column='1'/>
      <!-- op* -->
      <return type-id='type-id-299'/>
    </function-decl>
    <!-- cpp_num cpp_num_sign_extend(cpp_num, size_t) -->
    <function-decl name='cpp_num_sign_extend' mangled-name='_Z19cpp_num_sign_extend7cpp_numm' filepath='../.././libcpp/expr.c' line='1464' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19cpp_num_sign_extend7cpp_numm'>
      <!-- parameter of type 'typedef cpp_num' -->
      <parameter type-id='type-id-355' name='num' filepath='../.././libcpp/expr.c' line='1464' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='precision' filepath='../.././libcpp/expr.c' line='1464' column='1'/>
      <!-- typedef cpp_num -->
      <return type-id='type-id-355'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/files.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- char[256] -->
    <array-type-def dimensions='1' type-id='type-id-2' size-in-bits='2048' id='type-id-396'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' type-id='type-id-4' id='type-id-397'/>
    </array-type-def>
    <!-- typedef __ssize_t ssize_t -->
    <typedef-decl name='ssize_t' type-id='type-id-398' filepath='/usr/include/stdio.h' line='103' column='1' id='type-id-399'/>
    <!-- typedef long int __ssize_t -->
    <typedef-decl name='__ssize_t' type-id='type-id-21' filepath='/usr/include/bits/types.h' line='180' column='1' id='type-id-398'/>
    <!-- typedef __off_t off_t -->
    <typedef-decl name='off_t' type-id='type-id-54' filepath='/usr/include/stdio.h' line='91' column='1' id='type-id-274'/>
    <!-- typedef __dirstream DIR -->
    <typedef-decl name='DIR' type-id='type-id-400' filepath='/usr/include/dirent.h' line='128' column='1' id='type-id-401'/>
    <!-- struct dirent -->
    <class-decl name='dirent' size-in-bits='2240' is-struct='yes' visibility='default' filepath='/usr/include/bits/dirent.h' line='23' column='1' id='type-id-402'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- __ino_t dirent::d_ino -->
        <var-decl name='d_ino' type-id='type-id-64' visibility='default' filepath='/usr/include/bits/dirent.h' line='26' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- __off_t dirent::d_off -->
        <var-decl name='d_off' type-id='type-id-54' visibility='default' filepath='/usr/include/bits/dirent.h' line='27' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned short int dirent::d_reclen -->
        <var-decl name='d_reclen' type-id='type-id-29' visibility='default' filepath='/usr/include/bits/dirent.h' line='32' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='144'>
        <!-- unsigned char dirent::d_type -->
        <var-decl name='d_type' type-id='type-id-27' visibility='default' filepath='/usr/include/bits/dirent.h' line='33' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='152'>
        <!-- char dirent::d_name[256] -->
        <var-decl name='d_name' type-id='type-id-396' visibility='default' filepath='/usr/include/bits/dirent.h' line='34' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef int (void*, void*)* __compar_fn_t -->
    <typedef-decl name='__compar_fn_t' type-id='type-id-230' filepath='/usr/include/stdlib.h' line='742' column='1' id='type-id-403'/>
    <!-- typedef int (void**, void*)* htab_trav -->
    <typedef-decl name='htab_trav' type-id='type-id-404' filepath='../.././libcpp/../include/hashtab.h' line='69' column='1' id='type-id-405'/>
    <!-- DIR* -->
    <pointer-type-def type-id='type-id-401' size-in-bits='64' id='type-id-406'/>
    <!-- const unsigned char** -->
    <pointer-type-def type-id='type-id-145' size-in-bits='64' id='type-id-266'/>
    <!-- dirent* -->
    <pointer-type-def type-id='type-id-402' size-in-bits='64' id='type-id-407'/>
    <!-- int (void**, void*)* -->
    <pointer-type-def type-id='type-id-408' size-in-bits='64' id='type-id-404'/>
    <!-- off_t* -->
    <pointer-type-def type-id='type-id-274' size-in-bits='64' id='type-id-267'/>
    <!-- bool _cpp_find_failed(_cpp_file*) -->
    <function-decl name='_cpp_find_failed' mangled-name='_cpp_find_failed' filepath='../.././libcpp/files.c' line='432' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_find_failed'>
      <!-- parameter of type '_cpp_file*' -->
      <parameter type-id='type-id-289' name='file' filepath='../.././libcpp/files.c' line='432' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- _cpp_file* _cpp_find_file(cpp_reader*, const char*, cpp_dir*, bool, int) -->
    <function-decl name='_cpp_find_file' mangled-name='_cpp_find_file' filepath='../.././libcpp/files.c' line='452' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_find_file'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/files.c' line='452' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='fname' filepath='../.././libcpp/files.c' line='452' column='1'/>
      <!-- parameter of type 'cpp_dir*' -->
      <parameter type-id='type-id-287' name='start_dir' filepath='../.././libcpp/files.c' line='452' column='1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1' name='fake' filepath='../.././libcpp/files.c' line='452' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='angle_brackets' filepath='../.././libcpp/files.c' line='452' column='1'/>
      <!-- _cpp_file* -->
      <return type-id='type-id-289'/>
    </function-decl>
    <!-- bool _cpp_stack_file(cpp_reader*, _cpp_file*, bool) -->
    <function-decl name='_cpp_stack_file' mangled-name='_cpp_stack_file' filepath='../.././libcpp/files.c' line='796' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_stack_file'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/files.c' line='796' column='1'/>
      <!-- parameter of type '_cpp_file*' -->
      <parameter type-id='type-id-289' name='file' filepath='../.././libcpp/files.c' line='796' column='1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1' name='import' filepath='../.././libcpp/files.c' line='796' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_included(cpp_reader*, const char*) -->
    <function-decl name='cpp_included' mangled-name='_Z12cpp_includedP10cpp_readerPKc' filepath='../.././libcpp/files.c' line='1097' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12cpp_includedP10cpp_readerPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/files.c' line='1097' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='fname' filepath='../.././libcpp/files.c' line='1097' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool cpp_included_before(cpp_reader*, const char*, source_location) -->
    <function-decl name='cpp_included_before' mangled-name='_Z19cpp_included_beforeP10cpp_readerPKcj' filepath='../.././libcpp/files.c' line='1114' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19cpp_included_beforeP10cpp_readerPKcj'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/files.c' line='1114' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='fname' filepath='../.././libcpp/files.c' line='1114' column='1'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103' name='location' filepath='../.././libcpp/files.c' line='1115' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- void _cpp_init_files(cpp_reader*) -->
    <function-decl name='_cpp_init_files' mangled-name='_cpp_init_files' filepath='../.././libcpp/files.c' line='1170' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_init_files'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_cleanup_files(cpp_reader*) -->
    <function-decl name='_cpp_cleanup_files' mangled-name='_cpp_cleanup_files' filepath='../.././libcpp/files.c' line='1187' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_cleanup_files'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_clear_file_cache(cpp_reader*) -->
    <function-decl name='cpp_clear_file_cache' mangled-name='_Z20cpp_clear_file_cacheP10cpp_reader' filepath='../.././libcpp/files.c' line='1200' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z20cpp_clear_file_cacheP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_make_system_header(cpp_reader*, int, int) -->
    <function-decl name='cpp_make_system_header' mangled-name='_Z22cpp_make_system_headerP10cpp_readerii' filepath='../.././libcpp/files.c' line='1219' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z22cpp_make_system_headerP10cpp_readerii'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_change_file(cpp_reader*, lc_reason, const char*) -->
    <function-decl name='cpp_change_file' mangled-name='_Z15cpp_change_fileP10cpp_reader9lc_reasonPKc' filepath='../.././libcpp/files.c' line='1236' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15cpp_change_fileP10cpp_reader9lc_reasonPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/files.c' line='1236' column='1'/>
      <!-- parameter of type 'enum lc_reason' -->
      <parameter type-id='type-id-108' name='reason' filepath='../.././libcpp/files.c' line='1236' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='new_name' filepath='../.././libcpp/files.c' line='1237' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_report_missing_guards(cpp_reader*) -->
    <function-decl name='_cpp_report_missing_guards' mangled-name='_cpp_report_missing_guards' filepath='../.././libcpp/files.c' line='1289' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_report_missing_guards'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- bool cpp_push_include(cpp_reader*, const char*) -->
    <function-decl name='cpp_push_include' mangled-name='_Z16cpp_push_includeP10cpp_readerPKc' filepath='../.././libcpp/files.c' line='1346' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16cpp_push_includeP10cpp_readerPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/files.c' line='1097' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='fname' filepath='../.././libcpp/files.c' line='1097' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- void cpp_set_include_chains(cpp_reader*, cpp_dir*, cpp_dir*, int) -->
    <function-decl name='cpp_set_include_chains' mangled-name='_Z22cpp_set_include_chainsP10cpp_readerP7cpp_dirS2_i' filepath='../.././libcpp/files.c' line='1393' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z22cpp_set_include_chainsP10cpp_readerP7cpp_dirS2_i'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/files.c' line='1393' column='1'/>
      <!-- parameter of type 'cpp_dir*' -->
      <parameter type-id='type-id-287' name='quote' filepath='../.././libcpp/files.c' line='1393' column='1'/>
      <!-- parameter of type 'cpp_dir*' -->
      <parameter type-id='type-id-287' name='bracket' filepath='../.././libcpp/files.c' line='1393' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='quote_ignores_source_dir' filepath='../.././libcpp/files.c' line='1394' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const char* cpp_get_path(_cpp_file*) -->
    <function-decl name='cpp_get_path' mangled-name='_Z12cpp_get_pathP9_cpp_file' filepath='../.././libcpp/files.c' line='1603' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12cpp_get_pathP9_cpp_file'>
      <!-- parameter of type '_cpp_file*' -->
      <parameter type-id='type-id-289'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- cpp_dir* cpp_get_dir(_cpp_file*) -->
    <function-decl name='cpp_get_dir' mangled-name='_Z11cpp_get_dirP9_cpp_file' filepath='../.././libcpp/files.c' line='1611' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z11cpp_get_dirP9_cpp_file'>
      <!-- parameter of type '_cpp_file*' -->
      <parameter type-id='type-id-289' name='f' filepath='../.././libcpp/files.c' line='1611' column='1'/>
      <!-- cpp_dir* -->
      <return type-id='type-id-287'/>
    </function-decl>
    <!-- cpp_buffer* cpp_get_buffer(cpp_reader*) -->
    <function-decl name='cpp_get_buffer' mangled-name='_Z14cpp_get_bufferP10cpp_reader' filepath='../.././libcpp/files.c' line='1620' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14cpp_get_bufferP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- cpp_buffer* -->
      <return type-id='type-id-281'/>
    </function-decl>
    <!-- _cpp_file* cpp_get_file(cpp_buffer*) -->
    <function-decl name='cpp_get_file' mangled-name='_Z12cpp_get_fileP10cpp_buffer' filepath='../.././libcpp/files.c' line='1628' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12cpp_get_fileP10cpp_buffer'>
      <!-- parameter of type 'cpp_buffer*' -->
      <parameter type-id='type-id-281'/>
      <!-- _cpp_file* -->
      <return type-id='type-id-289'/>
    </function-decl>
    <!-- cpp_buffer* cpp_get_prev(cpp_buffer*) -->
    <function-decl name='cpp_get_prev' mangled-name='_Z12cpp_get_prevP10cpp_buffer' filepath='../.././libcpp/files.c' line='1637' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12cpp_get_prevP10cpp_buffer'>
      <!-- parameter of type 'cpp_buffer*' -->
      <parameter type-id='type-id-281' name='b' filepath='../.././libcpp/files.c' line='1637' column='1'/>
      <!-- cpp_buffer* -->
      <return type-id='type-id-281'/>
    </function-decl>
    <!-- bool _cpp_save_file_entries(cpp_reader*, FILE*) -->
    <function-decl name='_cpp_save_file_entries' mangled-name='_cpp_save_file_entries' filepath='../.././libcpp/files.c' line='1684' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_save_file_entries'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/files.c' line='1684' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='fp' filepath='../.././libcpp/files.c' line='1684' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool _cpp_read_file_entries(cpp_reader*, FILE*) -->
    <function-decl name='_cpp_read_file_entries' mangled-name='_cpp_read_file_entries' filepath='../.././libcpp/files.c' line='1751' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_read_file_entries'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/files.c' line='1684' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='fp' filepath='../.././libcpp/files.c' line='1684' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- int __fxstat(int, int, stat*) -->
    <function-decl name='__fxstat' filepath='/usr/include/sys/stat.h' line='401' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'stat*' -->
      <parameter type-id='type-id-132'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int close(int) -->
    <function-decl name='close' filepath='/usr/include/unistd.h' line='350' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int open(const char*, int, ...) -->
    <function-decl name='open' filepath='/usr/include/fcntl.h' line='131' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int ungetc(int, FILE*) -->
    <function-decl name='ungetc' filepath='/usr/include/stdio.h' line='697' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void* md5_buffer(const char*, size_t, void*) -->
    <function-decl name='md5_buffer' filepath='../.././libcpp/../include/md5.h' line='148' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- ssize_t read(int, void*, size_t) -->
    <function-decl name='read' filepath='/usr/include/unistd.h' line='357' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- typedef ssize_t -->
      <return type-id='type-id-399'/>
    </function-decl>
    <!-- unsigned char* _cpp_convert_input(cpp_reader*, const char*, unsigned char*, size_t, size_t, const unsigned char**, off_t*) -->
    <function-decl name='_cpp_convert_input' filepath='../.././libcpp/internal.h' line='727' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'unsigned char*' -->
      <parameter type-id='type-id-280'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'const unsigned char**' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'off_t*' -->
      <parameter type-id='type-id-267'/>
      <!-- unsigned char* -->
      <return type-id='type-id-280'/>
    </function-decl>
    <!-- DIR* opendir(const char*) -->
    <function-decl name='opendir' filepath='/usr/include/dirent.h' line='135' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- DIR* -->
      <return type-id='type-id-406'/>
    </function-decl>
    <!-- dirent* readdir(DIR*) -->
    <function-decl name='readdir' filepath='/usr/include/dirent.h' line='163' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'DIR*' -->
      <parameter type-id='type-id-406'/>
      <!-- dirent* -->
      <return type-id='type-id-407'/>
    </function-decl>
    <!-- int closedir(DIR*) -->
    <function-decl name='closedir' filepath='/usr/include/dirent.h' line='150' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'DIR*' -->
      <parameter type-id='type-id-406'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void* htab_find_with_hash(htab_t, void*, hashval_t) -->
    <function-decl name='htab_find_with_hash' filepath='../.././libcpp/../include/hashtab.h' line='177' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef hashval_t' -->
      <parameter type-id='type-id-225'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* bsearch(void*, void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='bsearch' filepath='/usr/include/stdlib.h' line='755' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-403'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- htab_t htab_create_alloc(size_t, htab_hash, htab_eq, htab_del, htab_alloc, htab_free) -->
    <function-decl name='htab_create_alloc' filepath='../.././libcpp/../include/hashtab.h' line='151' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef htab_hash' -->
      <parameter type-id='type-id-229'/>
      <!-- parameter of type 'typedef htab_eq' -->
      <parameter type-id='type-id-231'/>
      <!-- parameter of type 'typedef htab_del' -->
      <parameter type-id='type-id-232'/>
      <!-- parameter of type 'typedef htab_alloc' -->
      <parameter type-id='type-id-234'/>
      <!-- parameter of type 'typedef htab_free' -->
      <parameter type-id='type-id-235'/>
      <!-- typedef htab_t -->
      <return type-id='type-id-227'/>
    </function-decl>
    <!-- void htab_delete(htab_t) -->
    <function-decl name='htab_delete' filepath='../.././libcpp/../include/hashtab.h' line='172' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void qsort(void*, size_t, size_t, __compar_fn_t) -->
    <function-decl name='qsort' filepath='/usr/include/stdlib.h' line='761' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef __compar_fn_t' -->
      <parameter type-id='type-id-403'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- size_t htab_elements(htab_t) -->
    <function-decl name='htab_elements' filepath='../.././libcpp/../include/hashtab.h' line='188' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- void htab_traverse(htab_t, htab_trav, void*) -->
    <function-decl name='htab_traverse' filepath='../.././libcpp/../include/hashtab.h' line='184' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227'/>
      <!-- parameter of type 'typedef htab_trav' -->
      <parameter type-id='type-id-405'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- FILE* fdopen_unlocked(int, const char*) -->
    <function-decl name='fdopen_unlocked' filepath='../.././libcpp/../include/libiberty.h' line='69' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
    <!-- int md5_stream(FILE*, void*) -->
    <function-decl name='md5_stream' filepath='../.././libcpp/../include/md5.h' line='142' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- size_t fwrite_unlocked(void*, size_t, size_t, FILE*) -->
    <function-decl name='fwrite_unlocked' filepath='/usr/include/stdio.h' line='734' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- struct __dirstream -->
    <class-decl name='__dirstream' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-400'/>
    <!-- int (void**, void*) -->
    <function-type size-in-bits='64' id='type-id-408'>
      <!-- parameter of type 'void**' -->
      <parameter type-id='type-id-100'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/identifiers.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- typedef int (cpp_reader*, typedef hashnode, void*)* ht_cb -->
    <typedef-decl name='ht_cb' type-id='type-id-409' filepath='../.././libcpp/include/symtab.h' line='90' column='1' id='type-id-410'/>
    <!-- int (cpp_reader*, typedef hashnode, void*)* -->
    <pointer-type-def type-id='type-id-411' size-in-bits='64' id='type-id-409'/>
    <!-- void _cpp_destroy_hashtable(cpp_reader*) -->
    <function-decl name='_cpp_destroy_hashtable' mangled-name='_cpp_destroy_hashtable' filepath='../.././libcpp/identifiers.c' line='80' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_destroy_hashtable'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- cpp_hashnode* cpp_lookup(cpp_reader*, const unsigned char*, unsigned int) -->
    <function-decl name='cpp_lookup' mangled-name='_Z10cpp_lookupP10cpp_readerPKhj' filepath='../.././libcpp/identifiers.c' line='92' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z10cpp_lookupP10cpp_readerPKhj'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13'/>
      <!-- cpp_hashnode* -->
      <return type-id='type-id-116'/>
    </function-decl>
    <!-- void _cpp_init_hashtable(cpp_reader*, hash_table*) -->
    <function-decl name='_cpp_init_hashtable' mangled-name='_cpp_init_hashtable' filepath='../.././libcpp/identifiers.c' line='48' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_init_hashtable'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/identifiers.c' line='48' column='1'/>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412' name='table' filepath='../.././libcpp/identifiers.c' line='48' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int cpp_defined(cpp_reader*, const unsigned char*, int) -->
    <function-decl name='cpp_defined' mangled-name='_Z11cpp_definedP10cpp_readerPKhi' filepath='../.././libcpp/identifiers.c' line='100' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z11cpp_definedP10cpp_readerPKhi'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/identifiers.c' line='100' column='1'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145' name='str' filepath='../.././libcpp/identifiers.c' line='100' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='len' filepath='../.././libcpp/identifiers.c' line='100' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void cpp_forall_identifiers(cpp_reader*, cpp_cb, void*) -->
    <function-decl name='cpp_forall_identifiers' mangled-name='_Z22cpp_forall_identifiersP10cpp_readerPFiS0_P12cpp_hashnodePvES3_' filepath='../.././libcpp/identifiers.c' line='118' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z22cpp_forall_identifiersP10cpp_readerPFiS0_P12cpp_hashnodePvES3_'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'typedef cpp_cb' -->
      <parameter type-id='type-id-392'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int (cpp_reader*, hashnode, void*) -->
    <function-type size-in-bits='64' id='type-id-411'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'typedef hashnode' -->
      <parameter type-id='type-id-378'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- hash_table* -->
    <pointer-type-def type-id='type-id-413' size-in-bits='64' id='type-id-412'/>
    <!-- typedef ht hash_table -->
    <typedef-decl name='hash_table' type-id='type-id-343' filepath='../.././libcpp/include/symtab.h' line='41' column='1' id='type-id-413'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/init.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- const unsigned char[256] -->
    <array-type-def dimensions='1' type-id='type-id-154' size-in-bits='2048' id='type-id-414'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' type-id='type-id-4' id='type-id-397'/>
    </array-type-def>
    <!-- unsigned char[256] -->
    <array-type-def dimensions='1' type-id='type-id-27' size-in-bits='2048' id='type-id-415'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' type-id='type-id-4' id='type-id-397'/>
    </array-type-def>
    <!-- void cpp_set_lang(cpp_reader*, c_lang) -->
    <function-decl name='cpp_set_lang' mangled-name='_Z12cpp_set_langP10cpp_reader6c_lang' filepath='../.././libcpp/init.c' line='108' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12cpp_set_langP10cpp_reader6c_lang'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/init.c' line='108' column='1'/>
      <!-- parameter of type 'enum c_lang' -->
      <parameter type-id='type-id-334' name='lang' filepath='../.././libcpp/init.c' line='108' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- cpp_reader* cpp_create_reader(c_lang, hash_table*, line_maps*) -->
    <function-decl name='cpp_create_reader' mangled-name='_Z17cpp_create_reader6c_langP2htP9line_maps' filepath='../.././libcpp/init.c' line='152' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17cpp_create_reader6c_langP2htP9line_maps'>
      <!-- parameter of type 'enum c_lang' -->
      <parameter type-id='type-id-334' name='lang' filepath='../.././libcpp/init.c' line='152' column='1'/>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412' name='table' filepath='../.././libcpp/init.c' line='152' column='1'/>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='line_table' filepath='../.././libcpp/init.c' line='153' column='1'/>
      <!-- cpp_reader* -->
      <return type-id='type-id-258'/>
    </function-decl>
    <!-- void cpp_set_line_map(cpp_reader*, line_maps*) -->
    <function-decl name='cpp_set_line_map' mangled-name='_Z16cpp_set_line_mapP10cpp_readerP9line_maps' filepath='../.././libcpp/init.c' line='252' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16cpp_set_line_mapP10cpp_readerP9line_maps'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/init.c' line='252' column='1'/>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='line_table' filepath='../.././libcpp/init.c' line='252' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_destroy(cpp_reader*) -->
    <function-decl name='cpp_destroy' mangled-name='_Z11cpp_destroyP10cpp_reader' filepath='../.././libcpp/init.c' line='260' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z11cpp_destroyP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_init_special_builtins(cpp_reader*) -->
    <function-decl name='cpp_init_special_builtins' mangled-name='_Z25cpp_init_special_builtinsP10cpp_reader' filepath='../.././libcpp/init.c' line='429' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z25cpp_init_special_builtinsP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_init_builtins(cpp_reader*, int) -->
    <function-decl name='cpp_init_builtins' mangled-name='_Z17cpp_init_builtinsP10cpp_readeri' filepath='../.././libcpp/init.c' line='456' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17cpp_init_builtinsP10cpp_readeri'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_post_options(cpp_reader*) -->
    <function-decl name='cpp_post_options' mangled-name='_Z16cpp_post_optionsP10cpp_reader' filepath='../.././libcpp/init.c' line='555' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16cpp_post_optionsP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const char* cpp_read_main_file(cpp_reader*, const char*) -->
    <function-decl name='cpp_read_main_file' mangled-name='_Z18cpp_read_main_fileP10cpp_readerPKc' filepath='../.././libcpp/init.c' line='577' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18cpp_read_main_fileP10cpp_readerPKc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/init.c' line='577' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='fname' filepath='../.././libcpp/init.c' line='577' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- void cpp_finish(cpp_reader*, FILE*) -->
    <function-decl name='cpp_finish' mangled-name='_Z10cpp_finishP10cpp_readerP8_IO_FILE' filepath='../.././libcpp/init.c' line='693' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z10cpp_finishP10cpp_readerP8_IO_FILE'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/lex.c' line='2649' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='fp' filepath='../.././libcpp/lex.c' line='2649' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- unsigned char _cpp_trigraph_map[256] -->
    <var-decl name='_cpp_trigraph_map' type-id='type-id-415' mangled-name='_cpp_trigraph_map' visibility='default' filepath='../.././libcpp/init.c' line='60' column='1' elf-symbol-id='_cpp_trigraph_map'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/lex.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- struct normalize_state -->
    <class-decl name='normalize_state' size-in-bits='96' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='706' column='1' id='type-id-273'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cppchar_t normalize_state::previous -->
        <var-decl name='previous' type-id='type-id-259' visibility='default' filepath='../.././libcpp/internal.h' line='709' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned char normalize_state::prev_class -->
        <var-decl name='prev_class' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='711' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_normalize_level normalize_state::level -->
        <var-decl name='level' type-id='type-id-276' visibility='default' filepath='../.././libcpp/internal.h' line='713' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef cpp_context cpp_context -->
    <typedef-decl name='cpp_context' type-id='type-id-284' filepath='../.././libcpp/internal.h' line='176' column='1' id='type-id-416'/>
    <!-- enum cpp_token_fld_kind -->
    <enum-decl name='cpp_token_fld_kind' filepath='../.././libcpp/include/cpplib.h' line='195' column='1' id='type-id-417'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='CPP_TOKEN_FLD_NODE' value='0'/>
      <enumerator name='CPP_TOKEN_FLD_SOURCE' value='1'/>
      <enumerator name='CPP_TOKEN_FLD_STR' value='2'/>
      <enumerator name='CPP_TOKEN_FLD_ARG_NO' value='3'/>
      <enumerator name='CPP_TOKEN_FLD_TOKEN_NO' value='4'/>
      <enumerator name='CPP_TOKEN_FLD_PRAGMA' value='5'/>
      <enumerator name='CPP_TOKEN_FLD_NONE' value='6'/>
    </enum-decl>
    <!-- cpp_comment_table* -->
    <pointer-type-def type-id='type-id-303' size-in-bits='64' id='type-id-418'/>
    <!-- normalize_state* -->
    <pointer-type-def type-id='type-id-273' size-in-bits='64' id='type-id-260'/>
    <!-- int cpp_ideq(const cpp_token*, const char*) -->
    <function-decl name='cpp_ideq' mangled-name='_Z8cpp_ideqPK9cpp_tokenPKc' filepath='../.././libcpp/lex.c' line='74' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z8cpp_ideqPK9cpp_tokenPKc'>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263' name='token' filepath='../.././libcpp/lex.c' line='74' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='string' filepath='../.././libcpp/lex.c' line='74' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void _cpp_init_lexer() -->
    <function-decl name='_cpp_init_lexer' mangled-name='_cpp_init_lexer' filepath='../.././libcpp/lex.c' line='645' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_init_lexer'>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- cpp_comment_table* cpp_get_comments(cpp_reader*) -->
    <function-decl name='cpp_get_comments' mangled-name='_Z16cpp_get_commentsP10cpp_reader' filepath='../.././libcpp/lex.c' line='1627' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16cpp_get_commentsP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/lex.c' line='1627' column='1'/>
      <!-- cpp_comment_table* -->
      <return type-id='type-id-418'/>
    </function-decl>
    <!-- void _cpp_init_tokenrun(tokenrun*, unsigned int) -->
    <function-decl name='_cpp_init_tokenrun' mangled-name='_cpp_init_tokenrun' filepath='../.././libcpp/lex.c' line='1721' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_init_tokenrun'>
      <!-- parameter of type 'tokenrun*' -->
      <parameter type-id='type-id-293' name='run' filepath='../.././libcpp/lex.c' line='1721' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='count' filepath='../.././libcpp/lex.c' line='1721' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int _cpp_remaining_tokens_num_in_context(cpp_context*) -->
    <function-decl name='_cpp_remaining_tokens_num_in_context' mangled-name='_cpp_remaining_tokens_num_in_context' filepath='../.././libcpp/lex.c' line='1745' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_remaining_tokens_num_in_context'>
      <!-- parameter of type 'cpp_context*' -->
      <parameter type-id='type-id-285' name='context' filepath='../.././libcpp/lex.c' line='1745' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- unsigned int cpp_token_len(const cpp_token*) -->
    <function-decl name='cpp_token_len' mangled-name='_Z13cpp_token_lenPK9cpp_token' filepath='../.././libcpp/lex.c' line='2355' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z13cpp_token_lenPK9cpp_token'>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263'/>
      <!-- unsigned int -->
      <return type-id='type-id-13'/>
    </function-decl>
    <!-- unsigned char* cpp_spell_token(cpp_reader*, const cpp_token*, unsigned char*, bool) -->
    <function-decl name='cpp_spell_token' mangled-name='_Z15cpp_spell_tokenP10cpp_readerPK9cpp_tokenPhb' filepath='../.././libcpp/lex.c' line='2418' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15cpp_spell_tokenP10cpp_readerPK9cpp_tokenPhb'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263'/>
      <!-- parameter of type 'unsigned char*' -->
      <parameter type-id='type-id-280'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1'/>
      <!-- unsigned char* -->
      <return type-id='type-id-280'/>
    </function-decl>
    <!-- const char* cpp_type2name(cpp_ttype, unsigned char) -->
    <function-decl name='cpp_type2name' mangled-name='_Z13cpp_type2name9cpp_ttypeh' filepath='../.././libcpp/lex.c' line='2496' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z13cpp_type2name9cpp_ttypeh'>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178' name='type' filepath='../.././libcpp/lex.c' line='2496' column='1'/>
      <!-- parameter of type 'unsigned char' -->
      <parameter type-id='type-id-27' name='flags' filepath='../.././libcpp/lex.c' line='2496' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- void cpp_output_token(const cpp_token*, FILE*) -->
    <function-decl name='cpp_output_token' mangled-name='_Z16cpp_output_tokenPK9cpp_tokenP8_IO_FILE' filepath='../.././libcpp/lex.c' line='2510' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16cpp_output_tokenPK9cpp_tokenP8_IO_FILE'>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263' name='token' filepath='../.././libcpp/lex.c' line='2510' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='fp' filepath='../.././libcpp/lex.c' line='2510' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int cpp_avoid_paste(cpp_reader*, const cpp_token*, const cpp_token*) -->
    <function-decl name='cpp_avoid_paste' mangled-name='_Z15cpp_avoid_pasteP10cpp_readerPK9cpp_tokenS3_' filepath='../.././libcpp/lex.c' line='2592' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15cpp_avoid_pasteP10cpp_readerPK9cpp_tokenS3_'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/lex.c' line='2592' column='1'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263' name='token1' filepath='../.././libcpp/lex.c' line='2592' column='1'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263' name='token2' filepath='../.././libcpp/lex.c' line='2593' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void cpp_output_line(cpp_reader*, FILE*) -->
    <function-decl name='cpp_output_line' mangled-name='_Z15cpp_output_lineP10cpp_readerP8_IO_FILE' filepath='../.././libcpp/lex.c' line='2649' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15cpp_output_lineP10cpp_readerP8_IO_FILE'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/lex.c' line='2649' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='fp' filepath='../.././libcpp/lex.c' line='2649' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- unsigned char* cpp_output_line_to_string(cpp_reader*, const unsigned char*) -->
    <function-decl name='cpp_output_line_to_string' mangled-name='_Z25cpp_output_line_to_stringP10cpp_readerPKh' filepath='../.././libcpp/lex.c' line='2669' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z25cpp_output_line_to_stringP10cpp_readerPKh'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- unsigned char* -->
      <return type-id='type-id-280'/>
    </function-decl>
    <!-- unsigned char* cpp_token_as_text(cpp_reader*, const cpp_token*) -->
    <function-decl name='cpp_token_as_text' mangled-name='_Z17cpp_token_as_textP10cpp_readerPK9cpp_token' filepath='../.././libcpp/lex.c' line='2481' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17cpp_token_as_textP10cpp_readerPK9cpp_token'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263'/>
      <!-- unsigned char* -->
      <return type-id='type-id-280'/>
    </function-decl>
    <!-- const cpp_token* cpp_peek_token(cpp_reader*, int) -->
    <function-decl name='cpp_peek_token' mangled-name='_Z14cpp_peek_tokenP10cpp_readeri' filepath='../.././libcpp/lex.c' line='1772' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14cpp_peek_tokenP10cpp_readeri'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- const cpp_token* -->
      <return type-id='type-id-263'/>
    </function-decl>
    <!-- cpp_token_fld_kind cpp_token_val_index(cpp_token*) -->
    <function-decl name='cpp_token_val_index' mangled-name='_Z19cpp_token_val_indexP9cpp_token' filepath='../.././libcpp/lex.c' line='2879' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19cpp_token_val_indexP9cpp_token'>
      <!-- parameter of type 'cpp_token*' -->
      <parameter type-id='type-id-163' name='tok' filepath='../.././libcpp/lex.c' line='2879' column='1'/>
      <!-- enum cpp_token_fld_kind -->
      <return type-id='type-id-417'/>
    </function-decl>
    <!-- void cpp_force_token_locations(cpp_reader*, source_location*) -->
    <function-decl name='cpp_force_token_locations' mangled-name='_Z25cpp_force_token_locationsP10cpp_readerPj' filepath='../.././libcpp/lex.c' line='2910' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z25cpp_force_token_locationsP10cpp_readerPj'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='r' filepath='../.././libcpp/lex.c' line='2910' column='1'/>
      <!-- parameter of type 'source_location*' -->
      <parameter type-id='type-id-117' name='p' filepath='../.././libcpp/lex.c' line='2910' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void cpp_stop_forcing_token_locations(cpp_reader*) -->
    <function-decl name='cpp_stop_forcing_token_locations' mangled-name='_Z32cpp_stop_forcing_token_locationsP10cpp_reader' filepath='../.././libcpp/lex.c' line='2918' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z32cpp_stop_forcing_token_locationsP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- cppchar_t _cpp_valid_ucn(cpp_reader*, const unsigned char**, const unsigned char*, int, normalize_state*) -->
    <function-decl name='_cpp_valid_ucn' filepath='../.././libcpp/internal.h' line='723' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const unsigned char**' -->
      <parameter type-id='type-id-266'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'normalize_state*' -->
      <parameter type-id='type-id-260'/>
      <!-- typedef cppchar_t -->
      <return type-id='type-id-259'/>
    </function-decl>
    <!-- cpp_hashnode* _cpp_interpret_identifier(cpp_reader*, const unsigned char*, size_t) -->
    <function-decl name='_cpp_interpret_identifier' filepath='../.././libcpp/internal.h' line='731' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- cpp_hashnode* -->
      <return type-id='type-id-116'/>
    </function-decl>
    <!-- void* memmove(void*, void*, size_t) -->
    <function-decl name='memmove' filepath='/usr/include/string.h' line='49' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- const char* cpp_named_operator2name(cpp_ttype) -->
    <function-decl name='cpp_named_operator2name' mangled-name='cpp_named_operator2name' filepath='../.././libcpp/internal.h' line='661' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cpp_named_operator2name'>
      <!-- parameter of type 'enum cpp_ttype' -->
      <parameter type-id='type-id-178'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/line-map.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- cpp_token[1] -->
    <array-type-def dimensions='1' type-id='type-id-172' size-in-bits='192' id='type-id-158'>
      <!-- <anonymous range>[1] -->
      <subrange length='1' type-id='type-id-4' id='type-id-7'/>
    </array-type-def>
    <!-- struct cpp_token -->
    <class-decl name='cpp_token' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='223' column='1' id='type-id-172'>
      <member-type access='public'>
        <!-- union cpp_token::cpp_token_u -->
        <union-decl name='cpp_token_u' size-in-bits='128' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='228' column='1' id='type-id-174'>
          <data-member access='public'>
            <!-- cpp_identifier cpp_token::cpp_token_u::node -->
            <var-decl name='node' type-id='type-id-175' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='231' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- cpp_token* cpp_token::cpp_token_u::source -->
            <var-decl name='source' type-id='type-id-163' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='234' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- cpp_string cpp_token::cpp_token_u::str -->
            <var-decl name='str' type-id='type-id-176' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='237' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- cpp_macro_arg cpp_token::cpp_token_u::macro_arg -->
            <var-decl name='macro_arg' type-id='type-id-177' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='240' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- unsigned int cpp_token::cpp_token_u::token_no -->
            <var-decl name='token_no' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='244' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- unsigned int cpp_token::cpp_token_u::pragma -->
            <var-decl name='pragma' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='247' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- source_location cpp_token::src_loc -->
        <var-decl name='src_loc' type-id='type-id-103' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='224' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_ttype cpp_token::type -->
        <var-decl name='type' type-id='type-id-178' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='225' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='48'>
        <!-- unsigned short int cpp_token::flags -->
        <var-decl name='flags' type-id='type-id-29' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='226' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_token::cpp_token_u cpp_token::val -->
        <var-decl name='val' type-id='type-id-174' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='248' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct ht_identifier -->
    <class-decl name='ht_identifier' size-in-bits='128' is-struct='yes' visibility='default' filepath='../.././libcpp/include/symtab.h' line='32' column='1' id='type-id-79'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const unsigned char* ht_identifier::str -->
        <var-decl name='str' type-id='type-id-145' visibility='default' filepath='../.././libcpp/include/symtab.h' line='33' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int ht_identifier::len -->
        <var-decl name='len' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='34' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned int ht_identifier::hash_value -->
        <var-decl name='hash_value' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='35' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum node_type -->
    <enum-decl name='node_type' filepath='../.././libcpp/include/cpplib.h' line='614' column='1' id='type-id-80'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='NT_VOID' value='0'/>
      <enumerator name='NT_MACRO' value='1'/>
      <enumerator name='NT_ASSERTION' value='2'/>
    </enum-decl>
    <!-- union _cpp_hashnode_value -->
    <union-decl name='_cpp_hashnode_value' size-in-bits='64' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='665' column='1' id='type-id-81'>
      <data-member access='public'>
        <!-- cpp_macro* _cpp_hashnode_value::macro -->
        <var-decl name='macro' type-id='type-id-149' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='667' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- answer* _cpp_hashnode_value::answers -->
        <var-decl name='answers' type-id='type-id-150' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='669' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- cpp_builtin_type _cpp_hashnode_value::builtin -->
        <var-decl name='builtin' type-id='type-id-151' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='671' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- unsigned short int _cpp_hashnode_value::arg_index -->
        <var-decl name='arg_index' type-id='type-id-29' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='673' column='1'/>
      </data-member>
    </union-decl>
    <!-- typedef cpp_macro cpp_macro -->
    <typedef-decl name='cpp_macro' type-id='type-id-160' filepath='../.././libcpp/include/cpplib.h' line='37' column='1' id='type-id-155'/>
    <!-- typedef cpp_token cpp_token -->
    <typedef-decl name='cpp_token' type-id='type-id-172' filepath='../.././libcpp/include/cpplib.h' line='34' column='1' id='type-id-277'/>
    <!-- struct cpp_identifier -->
    <class-decl name='cpp_identifier' size-in-bits='64' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='212' column='1' id='type-id-175'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_hashnode* cpp_identifier::node -->
        <var-decl name='node' type-id='type-id-116' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='218' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef cpp_hashnode cpp_hashnode -->
    <typedef-decl name='cpp_hashnode' type-id='type-id-78' filepath='../.././libcpp/include/cpplib.h' line='36' column='1' id='type-id-357'/>
    <!-- struct cpp_macro_arg -->
    <class-decl name='cpp_macro_arg' size-in-bits='32' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='206' column='1' id='type-id-177'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int cpp_macro_arg::arg_no -->
        <var-decl name='arg_no' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='208' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_macro -->
    <class-decl name='cpp_macro' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='36' column='1' id='type-id-160'>
      <member-type access='public'>
        <!-- union cpp_macro::cpp_macro_u -->
        <union-decl name='cpp_macro_u' size-in-bits='64' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='47' column='1' id='type-id-162'>
          <data-member access='public'>
            <!-- cpp_token* cpp_macro::cpp_macro_u::tokens -->
            <var-decl name='tokens' type-id='type-id-163' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='49' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- const unsigned char* cpp_macro::cpp_macro_u::text -->
            <var-decl name='text' type-id='type-id-145' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='50' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_hashnode** cpp_macro::params -->
        <var-decl name='params' type-id='type-id-164' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_macro::cpp_macro_u cpp_macro::exp -->
        <var-decl name='exp' type-id='type-id-162' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='51' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- source_location cpp_macro::line -->
        <var-decl name='line' type-id='type-id-103' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='54' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- unsigned int cpp_macro::count -->
        <var-decl name='count' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned short int cpp_macro::paramc -->
        <var-decl name='paramc' type-id='type-id-29' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='16'>
        <!-- unsigned int cpp_macro::fun_like -->
        <var-decl name='fun_like' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='17'>
        <!-- unsigned int cpp_macro::variadic -->
        <var-decl name='variadic' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='18'>
        <!-- unsigned int cpp_macro::syshdr -->
        <var-decl name='syshdr' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='19'>
        <!-- unsigned int cpp_macro::used -->
        <var-decl name='used' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='72' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='20'>
        <!-- unsigned int cpp_macro::traditional -->
        <var-decl name='traditional' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='21'>
        <!-- unsigned int cpp_macro::extra_tokens -->
        <var-decl name='extra_tokens' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='80' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum cpp_ttype -->
    <enum-decl name='cpp_ttype' filepath='../.././libcpp/include/cpplib.h' line='153' column='1' id='type-id-178'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='CPP_EQ' value='0'/>
      <enumerator name='CPP_NOT' value='1'/>
      <enumerator name='CPP_GREATER' value='2'/>
      <enumerator name='CPP_LESS' value='3'/>
      <enumerator name='CPP_PLUS' value='4'/>
      <enumerator name='CPP_MINUS' value='5'/>
      <enumerator name='CPP_MULT' value='6'/>
      <enumerator name='CPP_DIV' value='7'/>
      <enumerator name='CPP_MOD' value='8'/>
      <enumerator name='CPP_AND' value='9'/>
      <enumerator name='CPP_OR' value='10'/>
      <enumerator name='CPP_XOR' value='11'/>
      <enumerator name='CPP_RSHIFT' value='12'/>
      <enumerator name='CPP_LSHIFT' value='13'/>
      <enumerator name='CPP_COMPL' value='14'/>
      <enumerator name='CPP_AND_AND' value='15'/>
      <enumerator name='CPP_OR_OR' value='16'/>
      <enumerator name='CPP_QUERY' value='17'/>
      <enumerator name='CPP_COLON' value='18'/>
      <enumerator name='CPP_COMMA' value='19'/>
      <enumerator name='CPP_OPEN_PAREN' value='20'/>
      <enumerator name='CPP_CLOSE_PAREN' value='21'/>
      <enumerator name='CPP_EOF' value='22'/>
      <enumerator name='CPP_EQ_EQ' value='23'/>
      <enumerator name='CPP_NOT_EQ' value='24'/>
      <enumerator name='CPP_GREATER_EQ' value='25'/>
      <enumerator name='CPP_LESS_EQ' value='26'/>
      <enumerator name='CPP_PLUS_EQ' value='27'/>
      <enumerator name='CPP_MINUS_EQ' value='28'/>
      <enumerator name='CPP_MULT_EQ' value='29'/>
      <enumerator name='CPP_DIV_EQ' value='30'/>
      <enumerator name='CPP_MOD_EQ' value='31'/>
      <enumerator name='CPP_AND_EQ' value='32'/>
      <enumerator name='CPP_OR_EQ' value='33'/>
      <enumerator name='CPP_XOR_EQ' value='34'/>
      <enumerator name='CPP_RSHIFT_EQ' value='35'/>
      <enumerator name='CPP_LSHIFT_EQ' value='36'/>
      <enumerator name='CPP_HASH' value='37'/>
      <enumerator name='CPP_PASTE' value='38'/>
      <enumerator name='CPP_OPEN_SQUARE' value='39'/>
      <enumerator name='CPP_CLOSE_SQUARE' value='40'/>
      <enumerator name='CPP_OPEN_BRACE' value='41'/>
      <enumerator name='CPP_CLOSE_BRACE' value='42'/>
      <enumerator name='CPP_SEMICOLON' value='43'/>
      <enumerator name='CPP_ELLIPSIS' value='44'/>
      <enumerator name='CPP_PLUS_PLUS' value='45'/>
      <enumerator name='CPP_MINUS_MINUS' value='46'/>
      <enumerator name='CPP_DEREF' value='47'/>
      <enumerator name='CPP_DOT' value='48'/>
      <enumerator name='CPP_SCOPE' value='49'/>
      <enumerator name='CPP_DEREF_STAR' value='50'/>
      <enumerator name='CPP_DOT_STAR' value='51'/>
      <enumerator name='CPP_ATSIGN' value='52'/>
      <enumerator name='CPP_NAME' value='53'/>
      <enumerator name='CPP_AT_NAME' value='54'/>
      <enumerator name='CPP_NUMBER' value='55'/>
      <enumerator name='CPP_CHAR' value='56'/>
      <enumerator name='CPP_WCHAR' value='57'/>
      <enumerator name='CPP_CHAR16' value='58'/>
      <enumerator name='CPP_CHAR32' value='59'/>
      <enumerator name='CPP_OTHER' value='60'/>
      <enumerator name='CPP_STRING' value='61'/>
      <enumerator name='CPP_WSTRING' value='62'/>
      <enumerator name='CPP_STRING16' value='63'/>
      <enumerator name='CPP_STRING32' value='64'/>
      <enumerator name='CPP_UTF8STRING' value='65'/>
      <enumerator name='CPP_OBJC_STRING' value='66'/>
      <enumerator name='CPP_HEADER_NAME' value='67'/>
      <enumerator name='CPP_CHAR_USERDEF' value='68'/>
      <enumerator name='CPP_WCHAR_USERDEF' value='69'/>
      <enumerator name='CPP_CHAR16_USERDEF' value='70'/>
      <enumerator name='CPP_CHAR32_USERDEF' value='71'/>
      <enumerator name='CPP_STRING_USERDEF' value='72'/>
      <enumerator name='CPP_WSTRING_USERDEF' value='73'/>
      <enumerator name='CPP_STRING16_USERDEF' value='74'/>
      <enumerator name='CPP_STRING32_USERDEF' value='75'/>
      <enumerator name='CPP_UTF8STRING_USERDEF' value='76'/>
      <enumerator name='CPP_COMMENT' value='77'/>
      <enumerator name='CPP_MACRO_ARG' value='78'/>
      <enumerator name='CPP_PRAGMA' value='79'/>
      <enumerator name='CPP_PRAGMA_EOL' value='80'/>
      <enumerator name='CPP_PADDING' value='81'/>
      <enumerator name='N_TTYPES' value='82'/>
      <enumerator name='CPP_LAST_EQ' value='13'/>
      <enumerator name='CPP_FIRST_DIGRAPH' value='37'/>
      <enumerator name='CPP_LAST_PUNCTUATOR' value='52'/>
      <enumerator name='CPP_LAST_CPP_OP' value='26'/>
    </enum-decl>
    <!-- struct answer -->
    <class-decl name='answer' size-in-bits='320' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='28' column='1' id='type-id-152'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- answer* answer::next -->
        <var-decl name='next' type-id='type-id-150' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='29' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int answer::count -->
        <var-decl name='count' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='30' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- cpp_token answer::first[1] -->
        <var-decl name='first' type-id='type-id-158' visibility='default' filepath='../.././libcpp/include/cpp-id-data.h' line='31' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum cpp_builtin_type -->
    <enum-decl name='cpp_builtin_type' filepath='../.././libcpp/include/cpplib.h' line='623' column='1' id='type-id-151'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='BT_SPECLINE' value='0'/>
      <enumerator name='BT_DATE' value='1'/>
      <enumerator name='BT_FILE' value='2'/>
      <enumerator name='BT_BASE_FILE' value='3'/>
      <enumerator name='BT_INCLUDE_LEVEL' value='4'/>
      <enumerator name='BT_TIME' value='5'/>
      <enumerator name='BT_STDC' value='6'/>
      <enumerator name='BT_PRAGMA' value='7'/>
      <enumerator name='BT_TIMESTAMP' value='8'/>
      <enumerator name='BT_COUNTER' value='9'/>
      <enumerator name='BT_FIRST_USER' value='10'/>
      <enumerator name='BT_LAST_USER' value='41'/>
    </enum-decl>
    <!-- struct cpp_string -->
    <class-decl name='cpp_string' size-in-bits='128' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='173' column='1' id='type-id-176'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int cpp_string::len -->
        <var-decl name='len' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='174' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const unsigned char* cpp_string::text -->
        <var-decl name='text' type-id='type-id-145' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='175' column='1'/>
      </data-member>
    </class-decl>
    <!-- answer* -->
    <pointer-type-def type-id='type-id-152' size-in-bits='64' id='type-id-150'/>
    <!-- const unsigned char -->
    <qualified-type-def type-id='type-id-27' const='yes' id='type-id-154'/>
    <!-- const unsigned char* -->
    <pointer-type-def type-id='type-id-154' size-in-bits='64' id='type-id-145'/>
    <!-- cpp_hashnode** -->
    <pointer-type-def type-id='type-id-116' size-in-bits='64' id='type-id-164'/>
    <!-- cpp_macro* -->
    <pointer-type-def type-id='type-id-155' size-in-bits='64' id='type-id-149'/>
    <!-- cpp_token* -->
    <pointer-type-def type-id='type-id-172' size-in-bits='64' id='type-id-163'/>
    <!-- void linemap_init(line_maps*) -->
    <function-decl name='linemap_init' mangled-name='_Z12linemap_initP9line_maps' filepath='../.././libcpp/line-map.c' line='56' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12linemap_initP9line_maps'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='56' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void linemap_check_files_exited(line_maps*) -->
    <function-decl name='linemap_check_files_exited' mangled-name='_Z26linemap_check_files_exitedP9line_maps' filepath='../.././libcpp/line-map.c' line='66' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z26linemap_check_files_exitedP9line_maps'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='56' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const line_map* linemap_add(line_maps*, lc_reason, unsigned int, const char*, linenum_type) -->
    <function-decl name='linemap_add' mangled-name='_Z11linemap_addP9line_maps9lc_reasonjPKcj' filepath='../.././libcpp/line-map.c' line='163' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z11linemap_addP9line_maps9lc_reasonjPKcj'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='163' column='1'/>
      <!-- parameter of type 'enum lc_reason' -->
      <parameter type-id='type-id-108' name='reason' filepath='../.././libcpp/line-map.c' line='163' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='sysp' filepath='../.././libcpp/line-map.c' line='164' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='to_file' filepath='../.././libcpp/line-map.c' line='164' column='1'/>
      <!-- parameter of type 'typedef linenum_type' -->
      <parameter type-id='type-id-115' name='to_line' filepath='../.././libcpp/line-map.c' line='164' column='1'/>
      <!-- const line_map* -->
      <return type-id='type-id-48'/>
    </function-decl>
    <!-- bool linemap_tracks_macro_expansion_locs_p(line_maps*) -->
    <function-decl name='linemap_tracks_macro_expansion_locs_p' mangled-name='_Z37linemap_tracks_macro_expansion_locs_pP9line_maps' filepath='../.././libcpp/line-map.c' line='276' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z37linemap_tracks_macro_expansion_locs_pP9line_maps'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='276' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- const line_map* linemap_enter_macro(line_maps*, cpp_hashnode*, source_location, unsigned int) -->
    <function-decl name='linemap_enter_macro' mangled-name='linemap_enter_macro' filepath='../.././libcpp/line-map.c' line='305' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='linemap_enter_macro'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='305' column='1'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='macro_node' filepath='../.././libcpp/line-map.c' line='305' column='1'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103' name='expansion' filepath='../.././libcpp/line-map.c' line='306' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='num_tokens' filepath='../.././libcpp/line-map.c' line='306' column='1'/>
      <!-- const line_map* -->
      <return type-id='type-id-48'/>
    </function-decl>
    <!-- source_location linemap_add_macro_token(const line_map*, unsigned int, source_location, source_location) -->
    <function-decl name='linemap_add_macro_token' mangled-name='linemap_add_macro_token' filepath='../.././libcpp/line-map.c' line='363' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='linemap_add_macro_token'>
      <!-- parameter of type 'const line_map*' -->
      <parameter type-id='type-id-48' name='map' filepath='../.././libcpp/line-map.c' line='363' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='token_no' filepath='../.././libcpp/line-map.c' line='364' column='1'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103' name='orig_loc' filepath='../.././libcpp/line-map.c' line='365' column='1'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103' name='orig_parm_replacement_loc' filepath='../.././libcpp/line-map.c' line='366' column='1'/>
      <!-- typedef source_location -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- source_location linemap_line_start(line_maps*, linenum_type, unsigned int) -->
    <function-decl name='linemap_line_start' mangled-name='_Z18linemap_line_startP9line_mapsjj' filepath='../.././libcpp/line-map.c' line='387' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18linemap_line_startP9line_mapsjj'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='387' column='1'/>
      <!-- parameter of type 'typedef linenum_type' -->
      <parameter type-id='type-id-115' name='to_line' filepath='../.././libcpp/line-map.c' line='387' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='max_column_hint' filepath='../.././libcpp/line-map.c' line='388' column='1'/>
      <!-- typedef source_location -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- source_location linemap_position_for_column(line_maps*, unsigned int) -->
    <function-decl name='linemap_position_for_column' mangled-name='_Z27linemap_position_for_columnP9line_mapsj' filepath='../.././libcpp/line-map.c' line='465' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z27linemap_position_for_columnP9line_mapsj'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='465' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='to_column' filepath='../.././libcpp/line-map.c' line='465' column='1'/>
      <!-- typedef source_location -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- source_location linemap_position_for_line_and_column(line_map*, linenum_type, unsigned int) -->
    <function-decl name='linemap_position_for_line_and_column' mangled-name='_Z36linemap_position_for_line_and_columnP8line_mapjj' filepath='../.././libcpp/line-map.c' line='495' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z36linemap_position_for_line_and_columnP8line_mapjj'>
      <!-- parameter of type 'line_map*' -->
      <parameter type-id='type-id-189' name='map' filepath='../.././libcpp/line-map.c' line='495' column='1'/>
      <!-- parameter of type 'typedef linenum_type' -->
      <parameter type-id='type-id-115' name='line' filepath='../.././libcpp/line-map.c' line='496' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='column' filepath='../.././libcpp/line-map.c' line='497' column='1'/>
      <!-- typedef source_location -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- const line_map* linemap_lookup(line_maps*, source_location) -->
    <function-decl name='linemap_lookup' mangled-name='_Z14linemap_lookupP9line_mapsj' filepath='../.././libcpp/line-map.c' line='511' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14linemap_lookupP9line_mapsj'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='511' column='1'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103' name='line' filepath='../.././libcpp/line-map.c' line='511' column='1'/>
      <!-- const line_map* -->
      <return type-id='type-id-48'/>
    </function-decl>
    <!-- bool linemap_macro_expansion_map_p(const line_map*) -->
    <function-decl name='linemap_macro_expansion_map_p' mangled-name='_Z29linemap_macro_expansion_map_pPK8line_map' filepath='../.././libcpp/line-map.c' line='611' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z29linemap_macro_expansion_map_pPK8line_map'>
      <!-- parameter of type 'const line_map*' -->
      <parameter type-id='type-id-48' name='map' filepath='../.././libcpp/line-map.c' line='611' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- int linemap_get_expansion_line(line_maps*, source_location) -->
    <function-decl name='linemap_get_expansion_line' mangled-name='linemap_get_expansion_line' filepath='../.././libcpp/line-map.c' line='695' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='linemap_get_expansion_line'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- const char* linemap_get_expansion_filename(line_maps*, source_location) -->
    <function-decl name='linemap_get_expansion_filename' mangled-name='linemap_get_expansion_filename' filepath='../.././libcpp/line-map.c' line='719' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='linemap_get_expansion_filename'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='719' column='1'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103' name='location' filepath='../.././libcpp/line-map.c' line='720' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* linemap_map_get_macro_name(const line_map*) -->
    <function-decl name='linemap_map_get_macro_name' mangled-name='_Z26linemap_map_get_macro_namePK8line_map' filepath='../.././libcpp/line-map.c' line='736' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z26linemap_map_get_macro_namePK8line_map'>
      <!-- parameter of type 'const line_map*' -->
      <parameter type-id='type-id-48' name='macro_map' filepath='../.././libcpp/line-map.c' line='736' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- bool linemap_location_from_macro_expansion_p(line_maps*, source_location) -->
    <function-decl name='linemap_location_from_macro_expansion_p' mangled-name='_Z39linemap_location_from_macro_expansion_pP9line_mapsj' filepath='../.././libcpp/line-map.c' line='772' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z39linemap_location_from_macro_expansion_pP9line_mapsj'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='772' column='1'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103' name='location' filepath='../.././libcpp/line-map.c' line='773' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- source_location linemap_resolve_location(line_maps*, source_location, location_resolution_kind, const line_map**) -->
    <function-decl name='linemap_resolve_location' mangled-name='_Z24linemap_resolve_locationP9line_mapsj24location_resolution_kindPPK8line_map' filepath='../.././libcpp/line-map.c' line='1048' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z24linemap_resolve_locationP9line_mapsj24location_resolution_kindPPK8line_map'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'enum location_resolution_kind' -->
      <parameter type-id='type-id-192'/>
      <!-- parameter of type 'const line_map**' -->
      <parameter type-id='type-id-195'/>
      <!-- typedef source_location -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- int linemap_compare_locations(line_maps*, source_location, source_location) -->
    <function-decl name='linemap_compare_locations' mangled-name='_Z25linemap_compare_locationsP9line_mapsjj' filepath='../.././libcpp/line-map.c' line='847' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z25linemap_compare_locationsP9line_mapsjj'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int linemap_location_in_system_header_p(line_maps*, source_location) -->
    <function-decl name='linemap_location_in_system_header_p' mangled-name='_Z35linemap_location_in_system_header_pP9line_mapsj' filepath='../.././libcpp/line-map.c' line='753' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z35linemap_location_in_system_header_pP9line_mapsj'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- source_location linemap_unwind_toward_expansion(line_maps*, source_location, const line_map**) -->
    <function-decl name='linemap_unwind_toward_expansion' mangled-name='_Z31linemap_unwind_toward_expansionP9line_mapsjPPK8line_map' filepath='../.././libcpp/line-map.c' line='1093' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z31linemap_unwind_toward_expansionP9line_mapsjPPK8line_map'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='1093' column='1'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103' name='loc' filepath='../.././libcpp/line-map.c' line='1094' column='1'/>
      <!-- parameter of type 'const line_map**' -->
      <parameter type-id='type-id-195' name='map' filepath='../.././libcpp/line-map.c' line='1095' column='1'/>
      <!-- typedef source_location -->
      <return type-id='type-id-103'/>
    </function-decl>
    <!-- expanded_location linemap_expand_location(line_maps*, const line_map*, source_location) -->
    <function-decl name='linemap_expand_location' mangled-name='_Z23linemap_expand_locationP9line_mapsPK8line_mapj' filepath='../.././libcpp/line-map.c' line='1120' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z23linemap_expand_locationP9line_mapsPK8line_mapj'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196'/>
      <!-- parameter of type 'const line_map*' -->
      <parameter type-id='type-id-48'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- typedef expanded_location -->
      <return type-id='type-id-194'/>
    </function-decl>
    <!-- void linemap_dump(FILE*, line_maps*, unsigned int, bool) -->
    <function-decl name='linemap_dump' mangled-name='_Z12linemap_dumpP8_IO_FILEP9line_mapsjb' filepath='../.././libcpp/line-map.c' line='1162' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12linemap_dumpP8_IO_FILEP9line_mapsjb'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='stream' filepath='../.././libcpp/line-map.c' line='1162' column='1'/>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='1162' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='ix' filepath='../.././libcpp/line-map.c' line='1162' column='1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1' name='is_macro' filepath='../.././libcpp/line-map.c' line='1162' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void linemap_dump_location(line_maps*, source_location, FILE*) -->
    <function-decl name='linemap_dump_location' mangled-name='_Z21linemap_dump_locationP9line_mapsjP8_IO_FILE' filepath='../.././libcpp/line-map.c' line='1211' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z21linemap_dump_locationP9line_mapsjP8_IO_FILE'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='1211' column='1'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103' name='loc' filepath='../.././libcpp/line-map.c' line='1212' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='stream' filepath='../.././libcpp/line-map.c' line='1213' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void linemap_get_statistics(line_maps*, linemap_stats*) -->
    <function-decl name='linemap_get_statistics' mangled-name='_Z22linemap_get_statisticsP9line_mapsP13linemap_stats' filepath='../.././libcpp/line-map.c' line='1254' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z22linemap_get_statisticsP9line_mapsP13linemap_stats'>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196'/>
      <!-- parameter of type 'linemap_stats*' -->
      <parameter type-id='type-id-202'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void line_table_dump(FILE*, line_maps*, unsigned int, unsigned int) -->
    <function-decl name='line_table_dump' mangled-name='_Z15line_table_dumpP8_IO_FILEP9line_mapsjj' filepath='../.././libcpp/line-map.c' line='1315' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15line_table_dumpP8_IO_FILEP9line_mapsjj'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='stream' filepath='../.././libcpp/line-map.c' line='1315' column='1'/>
      <!-- parameter of type 'line_maps*' -->
      <parameter type-id='type-id-196' name='set' filepath='../.././libcpp/line-map.c' line='1315' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='num_ordinary' filepath='../.././libcpp/line-map.c' line='1315' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='num_macro' filepath='../.././libcpp/line-map.c' line='1316' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int filename_cmp(const char*, const char*) -->
    <function-decl name='filename_cmp' filepath='../.././libcpp/../include/filenames.h' line='81' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/macro.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- struct _cpp_file -->
    <class-decl name='_cpp_file' size-in-bits='1856' is-struct='yes' visibility='default' filepath='../.././libcpp/files.c' line='56' column='1' id='type-id-306'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* _cpp_file::name -->
        <var-decl name='name' type-id='type-id-15' visibility='default' filepath='../.././libcpp/files.c' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* _cpp_file::path -->
        <var-decl name='path' type-id='type-id-15' visibility='default' filepath='../.././libcpp/files.c' line='62' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char* _cpp_file::pchname -->
        <var-decl name='pchname' type-id='type-id-15' visibility='default' filepath='../.././libcpp/files.c' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- const char* _cpp_file::dir_name -->
        <var-decl name='dir_name' type-id='type-id-15' visibility='default' filepath='../.././libcpp/files.c' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- _cpp_file* _cpp_file::next_file -->
        <var-decl name='next_file' type-id='type-id-289' visibility='default' filepath='../.././libcpp/files.c' line='72' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- const uchar* _cpp_file::buffer -->
        <var-decl name='buffer' type-id='type-id-256' visibility='default' filepath='../.././libcpp/files.c' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- const uchar* _cpp_file::buffer_start -->
        <var-decl name='buffer_start' type-id='type-id-256' visibility='default' filepath='../.././libcpp/files.c' line='79' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- const cpp_hashnode* _cpp_file::cmacro -->
        <var-decl name='cmacro' type-id='type-id-291' visibility='default' filepath='../.././libcpp/files.c' line='82' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- cpp_dir* _cpp_file::dir -->
        <var-decl name='dir' type-id='type-id-287' visibility='default' filepath='../.././libcpp/files.c' line='87' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- stat _cpp_file::st -->
        <var-decl name='st' type-id='type-id-62' visibility='default' filepath='../.././libcpp/files.c' line='90' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1728'>
        <!-- int _cpp_file::fd -->
        <var-decl name='fd' type-id='type-id-18' visibility='default' filepath='../.././libcpp/files.c' line='93' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1760'>
        <!-- int _cpp_file::err_no -->
        <var-decl name='err_no' type-id='type-id-18' visibility='default' filepath='../.././libcpp/files.c' line='97' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1792'>
        <!-- unsigned short int _cpp_file::stack_count -->
        <var-decl name='stack_count' type-id='type-id-29' visibility='default' filepath='../.././libcpp/files.c' line='100' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1808'>
        <!-- bool _cpp_file::once_only -->
        <var-decl name='once_only' type-id='type-id-1' visibility='default' filepath='../.././libcpp/files.c' line='103' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1816'>
        <!-- bool _cpp_file::dont_read -->
        <var-decl name='dont_read' type-id='type-id-1' visibility='default' filepath='../.././libcpp/files.c' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1824'>
        <!-- bool _cpp_file::main_file -->
        <var-decl name='main_file' type-id='type-id-1' visibility='default' filepath='../.././libcpp/files.c' line='109' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1832'>
        <!-- bool _cpp_file::buffer_valid -->
        <var-decl name='buffer_valid' type-id='type-id-1' visibility='default' filepath='../.././libcpp/files.c' line='112' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_reader -->
    <class-decl name='cpp_reader' size-in-bits='10560' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='380' column='1' id='type-id-278'>
      <member-type access='public'>
        <!-- struct {unsigned char* base; unsigned char* limit; unsigned char* cur; source_location first_line;} -->
        <class-decl name='__anonymous_struct__' size-in-bits='256' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='528' column='1' id='type-id-279'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- unsigned char* base -->
            <var-decl name='base' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='529' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='64'>
            <!-- unsigned char* limit -->
            <var-decl name='limit' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='530' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='128'>
            <!-- unsigned char* cur -->
            <var-decl name='cur' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='531' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='192'>
            <!-- source_location first_line -->
            <var-decl name='first_line' type-id='type-id-103' visibility='default' filepath='../.././libcpp/internal.h' line='532' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_buffer* cpp_reader::buffer -->
        <var-decl name='buffer' type-id='type-id-281' visibility='default' filepath='../.././libcpp/internal.h' line='383' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_buffer* cpp_reader::overlaid_buffer -->
        <var-decl name='overlaid_buffer' type-id='type-id-281' visibility='default' filepath='../.././libcpp/internal.h' line='386' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- lexer_state cpp_reader::state -->
        <var-decl name='state' type-id='type-id-282' visibility='default' filepath='../.././libcpp/internal.h' line='389' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- line_maps* cpp_reader::line_table -->
        <var-decl name='line_table' type-id='type-id-196' visibility='default' filepath='../.././libcpp/internal.h' line='392' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- source_location cpp_reader::directive_line -->
        <var-decl name='directive_line' type-id='type-id-103' visibility='default' filepath='../.././libcpp/internal.h' line='395' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- _cpp_buff* cpp_reader::a_buff -->
        <var-decl name='a_buff' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='398' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- _cpp_buff* cpp_reader::u_buff -->
        <var-decl name='u_buff' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='399' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- _cpp_buff* cpp_reader::free_buffs -->
        <var-decl name='free_buffs' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='400' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- cpp_context cpp_reader::base_context -->
        <var-decl name='base_context' type-id='type-id-284' visibility='default' filepath='../.././libcpp/internal.h' line='403' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- cpp_context* cpp_reader::context -->
        <var-decl name='context' type-id='type-id-285' visibility='default' filepath='../.././libcpp/internal.h' line='404' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1152'>
        <!-- const directive* cpp_reader::directive -->
        <var-decl name='directive' type-id='type-id-286' visibility='default' filepath='../.././libcpp/internal.h' line='407' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1216'>
        <!-- cpp_token cpp_reader::directive_result -->
        <var-decl name='directive_result' type-id='type-id-277' visibility='default' filepath='../.././libcpp/internal.h' line='410' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1408'>
        <!-- source_location cpp_reader::invocation_location -->
        <var-decl name='invocation_location' type-id='type-id-103' visibility='default' filepath='../.././libcpp/internal.h' line='414' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1440'>
        <!-- bool cpp_reader::set_invocation_location -->
        <var-decl name='set_invocation_location' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='418' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1472'>
        <!-- cpp_dir* cpp_reader::quote_include -->
        <var-decl name='quote_include' type-id='type-id-287' visibility='default' filepath='../.././libcpp/internal.h' line='421' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1536'>
        <!-- cpp_dir* cpp_reader::bracket_include -->
        <var-decl name='bracket_include' type-id='type-id-287' visibility='default' filepath='../.././libcpp/internal.h' line='422' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1600'>
        <!-- cpp_dir cpp_reader::no_search_path -->
        <var-decl name='no_search_path' type-id='type-id-288' visibility='default' filepath='../.././libcpp/internal.h' line='423' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2112'>
        <!-- _cpp_file* cpp_reader::all_files -->
        <var-decl name='all_files' type-id='type-id-289' visibility='default' filepath='../.././libcpp/internal.h' line='426' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2176'>
        <!-- _cpp_file* cpp_reader::main_file -->
        <var-decl name='main_file' type-id='type-id-289' visibility='default' filepath='../.././libcpp/internal.h' line='428' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2240'>
        <!-- htab* cpp_reader::file_hash -->
        <var-decl name='file_hash' type-id='type-id-226' visibility='default' filepath='../.././libcpp/internal.h' line='431' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2304'>
        <!-- htab* cpp_reader::dir_hash -->
        <var-decl name='dir_hash' type-id='type-id-226' visibility='default' filepath='../.././libcpp/internal.h' line='432' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2368'>
        <!-- file_hash_entry_pool* cpp_reader::file_hash_entries -->
        <var-decl name='file_hash_entries' type-id='type-id-290' visibility='default' filepath='../.././libcpp/internal.h' line='433' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2432'>
        <!-- htab* cpp_reader::nonexistent_file_hash -->
        <var-decl name='nonexistent_file_hash' type-id='type-id-226' visibility='default' filepath='../.././libcpp/internal.h' line='436' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2496'>
        <!-- obstack cpp_reader::nonexistent_file_ob -->
        <var-decl name='nonexistent_file_ob' type-id='type-id-58' visibility='default' filepath='../.././libcpp/internal.h' line='437' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3200'>
        <!-- bool cpp_reader::quote_ignores_source_dir -->
        <var-decl name='quote_ignores_source_dir' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='441' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3208'>
        <!-- bool cpp_reader::seen_once_only -->
        <var-decl name='seen_once_only' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='445' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3264'>
        <!-- const cpp_hashnode* cpp_reader::mi_cmacro -->
        <var-decl name='mi_cmacro' type-id='type-id-291' visibility='default' filepath='../.././libcpp/internal.h' line='448' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3328'>
        <!-- const cpp_hashnode* cpp_reader::mi_ind_cmacro -->
        <var-decl name='mi_ind_cmacro' type-id='type-id-291' visibility='default' filepath='../.././libcpp/internal.h' line='449' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3392'>
        <!-- bool cpp_reader::mi_valid -->
        <var-decl name='mi_valid' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='450' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3456'>
        <!-- cpp_token* cpp_reader::cur_token -->
        <var-decl name='cur_token' type-id='type-id-163' visibility='default' filepath='../.././libcpp/internal.h' line='453' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3520'>
        <!-- tokenrun cpp_reader::base_run -->
        <var-decl name='base_run' type-id='type-id-292' visibility='default' filepath='../.././libcpp/internal.h' line='454' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3776'>
        <!-- tokenrun* cpp_reader::cur_run -->
        <var-decl name='cur_run' type-id='type-id-293' visibility='default' filepath='../.././libcpp/internal.h' line='454' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3840'>
        <!-- unsigned int cpp_reader::lookaheads -->
        <var-decl name='lookaheads' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='455' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3872'>
        <!-- unsigned int cpp_reader::keep_tokens -->
        <var-decl name='keep_tokens' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='458' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3904'>
        <!-- unsigned char* cpp_reader::macro_buffer -->
        <var-decl name='macro_buffer' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='461' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='3968'>
        <!-- unsigned int cpp_reader::macro_buffer_len -->
        <var-decl name='macro_buffer_len' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='462' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4032'>
        <!-- cset_converter cpp_reader::narrow_cset_desc -->
        <var-decl name='narrow_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='466' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4224'>
        <!-- cset_converter cpp_reader::utf8_cset_desc -->
        <var-decl name='utf8_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='470' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4416'>
        <!-- cset_converter cpp_reader::char16_cset_desc -->
        <var-decl name='char16_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4608'>
        <!-- cset_converter cpp_reader::char32_cset_desc -->
        <var-decl name='char32_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='478' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4800'>
        <!-- cset_converter cpp_reader::wide_cset_desc -->
        <var-decl name='wide_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='482' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='4992'>
        <!-- const unsigned char* cpp_reader::date -->
        <var-decl name='date' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='485' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5056'>
        <!-- const unsigned char* cpp_reader::time -->
        <var-decl name='time' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='486' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5120'>
        <!-- cpp_token cpp_reader::avoid_paste -->
        <var-decl name='avoid_paste' type-id='type-id-277' visibility='default' filepath='../.././libcpp/internal.h' line='489' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5312'>
        <!-- cpp_token cpp_reader::eof -->
        <var-decl name='eof' type-id='type-id-277' visibility='default' filepath='../.././libcpp/internal.h' line='490' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5504'>
        <!-- deps* cpp_reader::deps -->
        <var-decl name='deps' type-id='type-id-295' visibility='default' filepath='../.././libcpp/internal.h' line='493' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='5568'>
        <!-- obstack cpp_reader::hash_ob -->
        <var-decl name='hash_ob' type-id='type-id-58' visibility='default' filepath='../.././libcpp/internal.h' line='497' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6272'>
        <!-- obstack cpp_reader::buffer_ob -->
        <var-decl name='buffer_ob' type-id='type-id-58' visibility='default' filepath='../.././libcpp/internal.h' line='501' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='6976'>
        <!-- pragma_entry* cpp_reader::pragmas -->
        <var-decl name='pragmas' type-id='type-id-296' visibility='default' filepath='../.././libcpp/internal.h' line='505' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7040'>
        <!-- cpp_callbacks cpp_reader::cb -->
        <var-decl name='cb' type-id='type-id-297' visibility='default' filepath='../.././libcpp/internal.h' line='508' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8192'>
        <!-- ht* cpp_reader::hash_table -->
        <var-decl name='hash_table' type-id='type-id-298' visibility='default' filepath='../.././libcpp/internal.h' line='511' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8256'>
        <!-- op* cpp_reader::op_stack -->
        <var-decl name='op_stack' type-id='type-id-299' visibility='default' filepath='../.././libcpp/internal.h' line='514' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8320'>
        <!-- op* cpp_reader::op_limit -->
        <var-decl name='op_limit' type-id='type-id-299' visibility='default' filepath='../.././libcpp/internal.h' line='514' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8384'>
        <!-- cpp_options cpp_reader::opts -->
        <var-decl name='opts' type-id='type-id-300' visibility='default' filepath='../.././libcpp/internal.h' line='517' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9408'>
        <!-- spec_nodes cpp_reader::spec_nodes -->
        <var-decl name='spec_nodes' type-id='type-id-301' visibility='default' filepath='../.././libcpp/internal.h' line='521' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9664'>
        <!-- bool cpp_reader::our_hashtable -->
        <var-decl name='our_hashtable' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='524' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9728'>
        <!-- struct {unsigned char* base; unsigned char* limit; unsigned char* cur; source_location first_line;} cpp_reader::out -->
        <var-decl name='out' type-id='type-id-279' visibility='default' filepath='../.././libcpp/internal.h' line='533' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9984'>
        <!-- const unsigned char* cpp_reader::saved_cur -->
        <var-decl name='saved_cur' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='536' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10048'>
        <!-- const unsigned char* cpp_reader::saved_rlimit -->
        <var-decl name='saved_rlimit' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='536' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10112'>
        <!-- const unsigned char* cpp_reader::saved_line_base -->
        <var-decl name='saved_line_base' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='536' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10176'>
        <!-- cpp_savedstate* cpp_reader::savedstate -->
        <var-decl name='savedstate' type-id='type-id-302' visibility='default' filepath='../.././libcpp/internal.h' line='540' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10240'>
        <!-- unsigned int cpp_reader::counter -->
        <var-decl name='counter' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='543' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10304'>
        <!-- cpp_comment_table cpp_reader::comments -->
        <var-decl name='comments' type-id='type-id-303' visibility='default' filepath='../.././libcpp/internal.h' line='546' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10432'>
        <!-- def_pragma_macro* cpp_reader::pushed_macros -->
        <var-decl name='pushed_macros' type-id='type-id-304' visibility='default' filepath='../.././libcpp/internal.h' line='549' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10496'>
        <!-- source_location* cpp_reader::forced_token_location_p -->
        <var-decl name='forced_token_location_p' type-id='type-id-117' visibility='default' filepath='../.././libcpp/internal.h' line='553' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct deps -->
    <class-decl name='deps' size-in-bits='448' is-struct='yes' visibility='default' filepath='../.././libcpp/mkdeps.c' line='30' column='1' id='type-id-341'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char** deps::targetv -->
        <var-decl name='targetv' type-id='type-id-328' visibility='default' filepath='../.././libcpp/mkdeps.c' line='32' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int deps::ntargets -->
        <var-decl name='ntargets' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='33' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned int deps::targets_size -->
        <var-decl name='targets_size' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='34' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char** deps::depv -->
        <var-decl name='depv' type-id='type-id-328' visibility='default' filepath='../.././libcpp/mkdeps.c' line='36' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned int deps::ndeps -->
        <var-decl name='ndeps' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='37' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- unsigned int deps::deps_size -->
        <var-decl name='deps_size' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='38' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- const char** deps::vpathv -->
        <var-decl name='vpathv' type-id='type-id-328' visibility='default' filepath='../.././libcpp/mkdeps.c' line='40' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- size_t* deps::vpathlv -->
        <var-decl name='vpathlv' type-id='type-id-211' visibility='default' filepath='../.././libcpp/mkdeps.c' line='41' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- unsigned int deps::nvpaths -->
        <var-decl name='nvpaths' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='416'>
        <!-- unsigned int deps::vpaths_size -->
        <var-decl name='vpaths_size' type-id='type-id-13' visibility='default' filepath='../.././libcpp/mkdeps.c' line='43' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef cpp_buffer cpp_buffer -->
    <typedef-decl name='cpp_buffer' type-id='type-id-338' filepath='../.././libcpp/include/cpplib.h' line='32' column='1' id='type-id-419'/>
    <!-- typedef _cpp_line_note _cpp_line_note -->
    <typedef-decl name='_cpp_line_note' type-id='type-id-384' filepath='../.././libcpp/internal.h' line='283' column='1' id='type-id-374'/>
    <!-- struct _cpp_line_note -->
    <class-decl name='_cpp_line_note' size-in-bits='128' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='284' column='1' id='type-id-384'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const unsigned char* _cpp_line_note::pos -->
        <var-decl name='pos' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='287' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned int _cpp_line_note::type -->
        <var-decl name='type' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='293' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_dir -->
    <class-decl name='cpp_dir' size-in-bits='512' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='553' column='1' id='type-id-288'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_dir* cpp_dir::next -->
        <var-decl name='next' type-id='type-id-287' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='556' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- char* cpp_dir::name -->
        <var-decl name='name' type-id='type-id-51' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='559' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned int cpp_dir::len -->
        <var-decl name='len' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='560' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- unsigned char cpp_dir::sysp -->
        <var-decl name='sysp' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='564' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='168'>
        <!-- bool cpp_dir::user_supplied_p -->
        <var-decl name='user_supplied_p' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='567' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- char* cpp_dir::canonical_name -->
        <var-decl name='canonical_name' type-id='type-id-51' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='571' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- const char** cpp_dir::name_map -->
        <var-decl name='name_map' type-id='type-id-328' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='575' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- char* (const char*, cpp_dir*)* cpp_dir::construct -->
        <var-decl name='construct' type-id='type-id-329' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='581' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- ino_t cpp_dir::ino -->
        <var-decl name='ino' type-id='type-id-330' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='585' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- dev_t cpp_dir::dev -->
        <var-decl name='dev' type-id='type-id-331' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='586' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __ino_t ino_t -->
    <typedef-decl name='ino_t' type-id='type-id-64' filepath='/usr/include/sys/types.h' line='49' column='1' id='type-id-330'/>
    <!-- typedef __dev_t dev_t -->
    <typedef-decl name='dev_t' type-id='type-id-63' filepath='/usr/include/sys/types.h' line='61' column='1' id='type-id-331'/>
    <!-- struct cset_converter -->
    <class-decl name='cset_converter' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='47' column='1' id='type-id-294'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- convert_f cset_converter::func -->
        <var-decl name='func' type-id='type-id-335' visibility='default' filepath='../.././libcpp/internal.h' line='49' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- iconv_t cset_converter::cd -->
        <var-decl name='cd' type-id='type-id-208' visibility='default' filepath='../.././libcpp/internal.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int cset_converter::width -->
        <var-decl name='width' type-id='type-id-18' visibility='default' filepath='../.././libcpp/internal.h' line='51' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef bool (typedef iconv_t, const unsigned char*, typedef size_t, _cpp_strbuf*)* convert_f -->
    <typedef-decl name='convert_f' type-id='type-id-362' filepath='../.././libcpp/internal.h' line='45' column='1' id='type-id-335'/>
    <!-- struct lexer_state -->
    <class-decl name='lexer_state' size-in-bits='160' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='225' column='1' id='type-id-282'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned char lexer_state::in_directive -->
        <var-decl name='in_directive' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='228' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8'>
        <!-- unsigned char lexer_state::directive_wants_padding -->
        <var-decl name='directive_wants_padding' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='233' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='16'>
        <!-- unsigned char lexer_state::skipping -->
        <var-decl name='skipping' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='236' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='24'>
        <!-- unsigned char lexer_state::angled_headers -->
        <var-decl name='angled_headers' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='239' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- unsigned char lexer_state::in_expression -->
        <var-decl name='in_expression' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='242' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='40'>
        <!-- unsigned char lexer_state::save_comments -->
        <var-decl name='save_comments' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='246' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='48'>
        <!-- unsigned char lexer_state::va_args_ok -->
        <var-decl name='va_args_ok' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='249' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='56'>
        <!-- unsigned char lexer_state::poisoned_ok -->
        <var-decl name='poisoned_ok' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='252' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned char lexer_state::prevent_expansion -->
        <var-decl name='prevent_expansion' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='255' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='72'>
        <!-- unsigned char lexer_state::parsing_args -->
        <var-decl name='parsing_args' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='258' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='80'>
        <!-- unsigned char lexer_state::discarding_output -->
        <var-decl name='discarding_output' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='262' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned int lexer_state::skip_eval -->
        <var-decl name='skip_eval' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='265' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char lexer_state::in_deferred_pragma -->
        <var-decl name='in_deferred_pragma' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='268' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='136'>
        <!-- unsigned char lexer_state::pragma_allow_expansion -->
        <var-decl name='pragma_allow_expansion' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='271' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct ht -->
    <class-decl name='ht' size-in-bits='1152' is-struct='yes' visibility='default' filepath='../.././libcpp/include/symtab.h' line='47' column='1' id='type-id-343'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- obstack ht::stack -->
        <var-decl name='stack' type-id='type-id-58' visibility='default' filepath='../.././libcpp/include/symtab.h' line='50' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- hashnode* ht::entries -->
        <var-decl name='entries' type-id='type-id-353' visibility='default' filepath='../.././libcpp/include/symtab.h' line='52' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- typedef hashnode (hash_table*)* ht::alloc_node -->
        <var-decl name='alloc_node' type-id='type-id-354' visibility='default' filepath='../.././libcpp/include/symtab.h' line='54' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- void* (typedef size_t)* ht::alloc_subobject -->
        <var-decl name='alloc_subobject' type-id='type-id-213' visibility='default' filepath='../.././libcpp/include/symtab.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- unsigned int ht::nslots -->
        <var-decl name='nslots' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='928'>
        <!-- unsigned int ht::nelements -->
        <var-decl name='nelements' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='60' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- cpp_reader* ht::pfile -->
        <var-decl name='pfile' type-id='type-id-258' visibility='default' filepath='../.././libcpp/include/symtab.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- unsigned int ht::searches -->
        <var-decl name='searches' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='66' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1056'>
        <!-- unsigned int ht::collisions -->
        <var-decl name='collisions' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/symtab.h' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- bool ht::entries_owned -->
        <var-decl name='entries_owned' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/symtab.h' line='70' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef _cpp_buff _cpp_buff -->
    <typedef-decl name='_cpp_buff' type-id='type-id-305' filepath='../.././libcpp/internal.h' line='100' column='1' id='type-id-420'/>
    <!-- struct _cpp_buff -->
    <class-decl name='_cpp_buff' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='101' column='1' id='type-id-305'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- _cpp_buff* _cpp_buff::next -->
        <var-decl name='next' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='103' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned char* _cpp_buff::base -->
        <var-decl name='base' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char* _cpp_buff::cur -->
        <var-decl name='cur' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned char* _cpp_buff::limit -->
        <var-decl name='limit' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='104' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct tokenrun -->
    <class-decl name='tokenrun' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='130' column='1' id='type-id-346'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- tokenrun* tokenrun::next -->
        <var-decl name='next' type-id='type-id-293' visibility='default' filepath='../.././libcpp/internal.h' line='132' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- tokenrun* tokenrun::prev -->
        <var-decl name='prev' type-id='type-id-293' visibility='default' filepath='../.././libcpp/internal.h' line='132' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- cpp_token* tokenrun::base -->
        <var-decl name='base' type-id='type-id-163' visibility='default' filepath='../.././libcpp/internal.h' line='133' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- cpp_token* tokenrun::limit -->
        <var-decl name='limit' type-id='type-id-163' visibility='default' filepath='../.././libcpp/internal.h' line='133' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_options -->
    <class-decl name='cpp_options' size-in-bits='1024' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='290' column='1' id='type-id-300'>
      <member-type access='public'>
        <!-- struct {cpp_deps_style style; bool missing_files; bool phony_targets; bool ignore_main_file; bool need_preprocessor_output;} -->
        <class-decl name='__anonymous_struct__' size-in-bits='64' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='451' column='1' id='type-id-332'>
          <data-member access='public' layout-offset-in-bits='0'>
            <!-- cpp_deps_style style -->
            <var-decl name='style' type-id='type-id-333' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='453' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='32'>
            <!-- bool missing_files -->
            <var-decl name='missing_files' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='456' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='40'>
            <!-- bool phony_targets -->
            <var-decl name='phony_targets' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='460' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='48'>
            <!-- bool ignore_main_file -->
            <var-decl name='ignore_main_file' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='463' column='1'/>
          </data-member>
          <data-member access='public' layout-offset-in-bits='56'>
            <!-- bool need_preprocessor_output -->
            <var-decl name='need_preprocessor_output' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='467' column='1'/>
          </data-member>
        </class-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int cpp_options::tabstop -->
        <var-decl name='tabstop' type-id='type-id-13' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='293' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- c_lang cpp_options::lang -->
        <var-decl name='lang' type-id='type-id-334' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='296' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned char cpp_options::cplusplus -->
        <var-decl name='cplusplus' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='299' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='72'>
        <!-- unsigned char cpp_options::cplusplus_comments -->
        <var-decl name='cplusplus_comments' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='302' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='80'>
        <!-- unsigned char cpp_options::objc -->
        <var-decl name='objc' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='307' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='88'>
        <!-- unsigned char cpp_options::discard_comments -->
        <var-decl name='discard_comments' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='310' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- unsigned char cpp_options::discard_comments_in_macro_exp -->
        <var-decl name='discard_comments_in_macro_exp' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='314' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='104'>
        <!-- unsigned char cpp_options::trigraphs -->
        <var-decl name='trigraphs' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='317' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='112'>
        <!-- unsigned char cpp_options::digraphs -->
        <var-decl name='digraphs' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='320' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='120'>
        <!-- unsigned char cpp_options::extended_numbers -->
        <var-decl name='extended_numbers' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='323' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char cpp_options::uliterals -->
        <var-decl name='uliterals' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='326' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='136'>
        <!-- unsigned char cpp_options::rliterals -->
        <var-decl name='rliterals' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='330' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='144'>
        <!-- unsigned char cpp_options::print_include_names -->
        <var-decl name='print_include_names' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='333' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='152'>
        <!-- unsigned char cpp_options::cpp_warn_deprecated -->
        <var-decl name='cpp_warn_deprecated' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='336' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- unsigned char cpp_options::warn_comments -->
        <var-decl name='warn_comments' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='339' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='168'>
        <!-- unsigned char cpp_options::warn_missing_include_dirs -->
        <var-decl name='warn_missing_include_dirs' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='343' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='176'>
        <!-- unsigned char cpp_options::warn_trigraphs -->
        <var-decl name='warn_trigraphs' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='346' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='184'>
        <!-- unsigned char cpp_options::warn_multichar -->
        <var-decl name='warn_multichar' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='349' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned char cpp_options::cpp_warn_traditional -->
        <var-decl name='cpp_warn_traditional' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='353' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='200'>
        <!-- unsigned char cpp_options::cpp_warn_long_long -->
        <var-decl name='cpp_warn_long_long' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='356' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='208'>
        <!-- unsigned char cpp_options::warn_endif_labels -->
        <var-decl name='warn_endif_labels' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='359' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='216'>
        <!-- unsigned char cpp_options::warn_num_sign_change -->
        <var-decl name='warn_num_sign_change' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='363' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- unsigned char cpp_options::warn_variadic_macros -->
        <var-decl name='warn_variadic_macros' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='367' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='232'>
        <!-- unsigned char cpp_options::warn_builtin_macro_redefined -->
        <var-decl name='warn_builtin_macro_redefined' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='371' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='240'>
        <!-- unsigned char cpp_options::remap -->
        <var-decl name='remap' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='375' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='248'>
        <!-- unsigned char cpp_options::dollars_in_ident -->
        <var-decl name='dollars_in_ident' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='378' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- unsigned char cpp_options::extended_identifiers -->
        <var-decl name='extended_identifiers' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='381' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='264'>
        <!-- unsigned char cpp_options::warn_dollars -->
        <var-decl name='warn_dollars' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='385' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='272'>
        <!-- unsigned char cpp_options::warn_undef -->
        <var-decl name='warn_undef' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='388' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='280'>
        <!-- unsigned char cpp_options::warn_unused_macros -->
        <var-decl name='warn_unused_macros' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='391' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- unsigned char cpp_options::c99 -->
        <var-decl name='c99' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='394' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='296'>
        <!-- unsigned char cpp_options::std -->
        <var-decl name='std' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='397' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='304'>
        <!-- unsigned char cpp_options::cpp_pedantic -->
        <var-decl name='cpp_pedantic' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='400' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='312'>
        <!-- unsigned char cpp_options::preprocessed -->
        <var-decl name='preprocessed' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='404' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- unsigned char cpp_options::debug -->
        <var-decl name='debug' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='408' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='328'>
        <!-- unsigned char cpp_options::track_macro_expansion -->
        <var-decl name='track_macro_expansion' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='416' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='336'>
        <!-- unsigned char cpp_options::operator_names -->
        <var-decl name='operator_names' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='419' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='344'>
        <!-- unsigned char cpp_options::warn_cxx_operator_names -->
        <var-decl name='warn_cxx_operator_names' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='422' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='352'>
        <!-- unsigned char cpp_options::traditional -->
        <var-decl name='traditional' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='425' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='360'>
        <!-- unsigned char cpp_options::user_literals -->
        <var-decl name='user_literals' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='428' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- const char* cpp_options::narrow_charset -->
        <var-decl name='narrow_charset' type-id='type-id-15' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='431' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- const char* cpp_options::wide_charset -->
        <var-decl name='wide_charset' type-id='type-id-15' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='434' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- const char* cpp_options::input_charset -->
        <var-decl name='input_charset' type-id='type-id-15' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='437' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- cpp_normalize_level cpp_options::warn_normalize -->
        <var-decl name='warn_normalize' type-id='type-id-276' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='441' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='608'>
        <!-- bool cpp_options::warn_invalid_pch -->
        <var-decl name='warn_invalid_pch' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='444' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='616'>
        <!-- bool cpp_options::restore_pch_deps -->
        <var-decl name='restore_pch_deps' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='447' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- struct {cpp_deps_style style; bool missing_files; bool phony_targets; bool ignore_main_file; bool need_preprocessor_output;} cpp_options::deps -->
        <var-decl name='deps' type-id='type-id-332' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='468' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- size_t cpp_options::precision -->
        <var-decl name='precision' type-id='type-id-32' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- size_t cpp_options::char_precision -->
        <var-decl name='char_precision' type-id='type-id-32' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- size_t cpp_options::int_precision -->
        <var-decl name='int_precision' type-id='type-id-32' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- size_t cpp_options::wchar_precision -->
        <var-decl name='wchar_precision' type-id='type-id-32' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='474' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- bool cpp_options::unsigned_char -->
        <var-decl name='unsigned_char' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='477' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='968'>
        <!-- bool cpp_options::unsigned_wchar -->
        <var-decl name='unsigned_wchar' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='477' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='976'>
        <!-- bool cpp_options::bytes_big_endian -->
        <var-decl name='bytes_big_endian' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='481' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='984'>
        <!-- unsigned char cpp_options::stdc_0_in_system_headers -->
        <var-decl name='stdc_0_in_system_headers' type-id='type-id-27' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='484' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='992'>
        <!-- bool cpp_options::directives_only -->
        <var-decl name='directives_only' type-id='type-id-1' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='487' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct op -->
    <class-decl name='op' size-in-bits='320' is-struct='yes' visibility='default' filepath='../.././libcpp/expr.c' line='30' column='1' id='type-id-344'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const cpp_token* op::token -->
        <var-decl name='token' type-id='type-id-263' visibility='default' filepath='../.././libcpp/expr.c' line='32' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_num op::value -->
        <var-decl name='value' type-id='type-id-355' visibility='default' filepath='../.././libcpp/expr.c' line='33' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- source_location op::loc -->
        <var-decl name='loc' type-id='type-id-103' visibility='default' filepath='../.././libcpp/expr.c' line='34' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='288'>
        <!-- cpp_ttype op::op -->
        <var-decl name='op' type-id='type-id-178' visibility='default' filepath='../.././libcpp/expr.c' line='35' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_context -->
    <class-decl name='cpp_context' size-in-bits='448' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='177' column='1' id='type-id-284'>
      <member-type access='public'>
        <!-- union {struct {utoken first; utoken last;} iso; struct {const unsigned char* cur; const unsigned char* rlimit;} trad;} -->
        <union-decl name='__anonymous_union__' size-in-bits='128' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='183' column='1' id='type-id-321'>
          <member-type access='public'>
            <!-- struct {utoken first; utoken last;} -->
            <class-decl name='__anonymous_struct__' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='188' column='1' id='type-id-322'>
              <data-member access='public' layout-offset-in-bits='0'>
                <!-- utoken first -->
                <var-decl name='first' type-id='type-id-323' visibility='default' filepath='../.././libcpp/internal.h' line='189' column='1'/>
              </data-member>
              <data-member access='public' layout-offset-in-bits='64'>
                <!-- utoken last -->
                <var-decl name='last' type-id='type-id-323' visibility='default' filepath='../.././libcpp/internal.h' line='190' column='1'/>
              </data-member>
            </class-decl>
          </member-type>
          <member-type access='public'>
            <!-- struct {const unsigned char* cur; const unsigned char* rlimit;} -->
            <class-decl name='__anonymous_struct__1' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='195' column='1' id='type-id-324'>
              <data-member access='public' layout-offset-in-bits='0'>
                <!-- const unsigned char* cur -->
                <var-decl name='cur' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='196' column='1'/>
              </data-member>
              <data-member access='public' layout-offset-in-bits='64'>
                <!-- const unsigned char* rlimit -->
                <var-decl name='rlimit' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='197' column='1'/>
              </data-member>
            </class-decl>
          </member-type>
          <data-member access='public'>
            <!-- struct {utoken first; utoken last;} iso -->
            <var-decl name='iso' type-id='type-id-322' visibility='default' filepath='../.././libcpp/internal.h' line='191' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- struct {const unsigned char* cur; const unsigned char* rlimit;} trad -->
            <var-decl name='trad' type-id='type-id-324' visibility='default' filepath='../.././libcpp/internal.h' line='198' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <member-type access='public'>
        <!-- union {macro_context* mc; cpp_hashnode* macro;} -->
        <union-decl name='__anonymous_union__1' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='../.././libcpp/internal.h' line='216' column='1' id='type-id-325'>
          <data-member access='public'>
            <!-- macro_context* mc -->
            <var-decl name='mc' type-id='type-id-326' visibility='default' filepath='../.././libcpp/internal.h' line='217' column='1'/>
          </data-member>
          <data-member access='public'>
            <!-- cpp_hashnode* macro -->
            <var-decl name='macro' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='218' column='1'/>
          </data-member>
        </union-decl>
      </member-type>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_context* cpp_context::next -->
        <var-decl name='next' type-id='type-id-285' visibility='default' filepath='../.././libcpp/internal.h' line='180' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_context* cpp_context::prev -->
        <var-decl name='prev' type-id='type-id-285' visibility='default' filepath='../.././libcpp/internal.h' line='180' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- union {struct {utoken first; utoken last;} iso; struct {const unsigned char* cur; const unsigned char* rlimit;} trad;} cpp_context::u -->
        <var-decl name='u' type-id='type-id-321' visibility='default' filepath='../.././libcpp/internal.h' line='199' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- _cpp_buff* cpp_context::buff -->
        <var-decl name='buff' type-id='type-id-283' visibility='default' filepath='../.././libcpp/internal.h' line='203' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- union {macro_context* mc; cpp_hashnode* macro;} cpp_context::c -->
        <var-decl name='c' type-id='type-id-325' visibility='default' filepath='../.././libcpp/internal.h' line='219' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- context_tokens_kind cpp_context::tokens_kind -->
        <var-decl name='tokens_kind' type-id='type-id-327' visibility='default' filepath='../.././libcpp/internal.h' line='222' column='1'/>
      </data-member>
    </class-decl>
    <!-- union utoken -->
    <union-decl name='utoken' size-in-bits='64' visibility='default' filepath='../.././libcpp/internal.h' line='122' column='1' id='type-id-323'>
      <data-member access='public'>
        <!-- const cpp_token* utoken::token -->
        <var-decl name='token' type-id='type-id-263' visibility='default' filepath='../.././libcpp/internal.h' line='124' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- const cpp_token** utoken::ptoken -->
        <var-decl name='ptoken' type-id='type-id-364' visibility='default' filepath='../.././libcpp/internal.h' line='125' column='1'/>
      </data-member>
    </union-decl>
    <!-- typedef __anonymous_struct__ macro_context -->
    <typedef-decl name='macro_context' type-id='type-id-382' filepath='../.././libcpp/internal.h' line='158' column='1' id='type-id-361'/>
    <!-- struct {cpp_hashnode* macro_node; source_location* virt_locs; source_location* cur_virt_loc;} -->
    <class-decl name='__anonymous_struct__' size-in-bits='192' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-361' visibility='default' filepath='../.././libcpp/internal.h' line='146' column='1' id='type-id-382'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_hashnode* macro_node -->
        <var-decl name='macro_node' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='148' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- source_location* virt_locs -->
        <var-decl name='virt_locs' type-id='type-id-117' visibility='default' filepath='../.././libcpp/internal.h' line='153' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- source_location* cur_virt_loc -->
        <var-decl name='cur_virt_loc' type-id='type-id-117' visibility='default' filepath='../.././libcpp/internal.h' line='157' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct cpp_callbacks -->
    <class-decl name='cpp_callbacks' size-in-bits='1152' is-struct='yes' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='499' column='1' id='type-id-297'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- void (cpp_reader*, const cpp_token*, int)* cpp_callbacks::line_change -->
        <var-decl name='line_change' type-id='type-id-307' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='502' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- void (cpp_reader*, const line_map*)* cpp_callbacks::file_change -->
        <var-decl name='file_change' type-id='type-id-308' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='508' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- void (cpp_reader*, const char*)* cpp_callbacks::dir_change -->
        <var-decl name='dir_change' type-id='type-id-309' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='510' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- void (cpp_reader*, typedef source_location, const unsigned char*, const char*, int, const cpp_token**)* cpp_callbacks::include -->
        <var-decl name='include' type-id='type-id-310' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='512' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::define -->
        <var-decl name='define' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='513' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::undef -->
        <var-decl name='undef' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='514' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- void (cpp_reader*, typedef source_location, const cpp_string*)* cpp_callbacks::ident -->
        <var-decl name='ident' type-id='type-id-312' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='515' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- void (cpp_reader*, typedef source_location)* cpp_callbacks::def_pragma -->
        <var-decl name='def_pragma' type-id='type-id-313' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='516' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- int (cpp_reader*, const char*, int)* cpp_callbacks::valid_pch -->
        <var-decl name='valid_pch' type-id='type-id-314' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='517' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- void (cpp_reader*, const char*, int, const char*)* cpp_callbacks::read_pch -->
        <var-decl name='read_pch' type-id='type-id-315' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='518' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- missing_header_cb cpp_callbacks::missing_header -->
        <var-decl name='missing_header' type-id='type-id-316' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='519' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- cpp_hashnode* (cpp_reader*, const cpp_token*)* cpp_callbacks::macro_to_expand -->
        <var-decl name='macro_to_expand' type-id='type-id-317' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='523' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- bool (cpp_reader*, int, int, typedef source_location, unsigned int, const char*, va_list*)* cpp_callbacks::error -->
        <var-decl name='error' type-id='type-id-318' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='529' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::used_define -->
        <var-decl name='used_define' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='533' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::used_undef -->
        <var-decl name='used_undef' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='534' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- void (cpp_reader*)* cpp_callbacks::before_define -->
        <var-decl name='before_define' type-id='type-id-319' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='537' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* cpp_callbacks::used -->
        <var-decl name='used' type-id='type-id-311' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='540' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- bool (cpp_reader*, cpp_hashnode*)* cpp_callbacks::user_builtin_macro -->
        <var-decl name='user_builtin_macro' type-id='type-id-320' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='543' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum context_tokens_kind -->
    <enum-decl name='context_tokens_kind' filepath='../.././libcpp/internal.h' line='161' column='1' id='type-id-327'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='TOKENS_KIND_INDIRECT' value='0'/>
      <enumerator name='TOKENS_KIND_DIRECT' value='1'/>
      <enumerator name='TOKENS_KIND_EXTENDED' value='2'/>
    </enum-decl>
    <!-- struct cpp_buffer -->
    <class-decl name='cpp_buffer' size-in-bits='1536' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='297' column='1' id='type-id-338'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const unsigned char* cpp_buffer::cur -->
        <var-decl name='cur' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='299' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const unsigned char* cpp_buffer::line_base -->
        <var-decl name='line_base' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='300' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const unsigned char* cpp_buffer::next_line -->
        <var-decl name='next_line' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='301' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- const unsigned char* cpp_buffer::buf -->
        <var-decl name='buf' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='303' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- const unsigned char* cpp_buffer::rlimit -->
        <var-decl name='rlimit' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='304' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- _cpp_line_note* cpp_buffer::notes -->
        <var-decl name='notes' type-id='type-id-351' visibility='default' filepath='../.././libcpp/internal.h' line='306' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- unsigned int cpp_buffer::cur_note -->
        <var-decl name='cur_note' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='307' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='416'>
        <!-- unsigned int cpp_buffer::notes_used -->
        <var-decl name='notes_used' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='308' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- unsigned int cpp_buffer::notes_cap -->
        <var-decl name='notes_cap' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='309' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- cpp_buffer* cpp_buffer::prev -->
        <var-decl name='prev' type-id='type-id-281' visibility='default' filepath='../.././libcpp/internal.h' line='311' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- _cpp_file* cpp_buffer::file -->
        <var-decl name='file' type-id='type-id-289' visibility='default' filepath='../.././libcpp/internal.h' line='315' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- const unsigned char* cpp_buffer::timestamp -->
        <var-decl name='timestamp' type-id='type-id-145' visibility='default' filepath='../.././libcpp/internal.h' line='319' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- if_stack* cpp_buffer::if_stack -->
        <var-decl name='if_stack' type-id='type-id-352' visibility='default' filepath='../.././libcpp/internal.h' line='323' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- bool cpp_buffer::need_line -->
        <var-decl name='need_line' type-id='type-id-1' visibility='default' filepath='../.././libcpp/internal.h' line='326' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8'>
        <!-- unsigned int cpp_buffer::warned_cplusplus_comments -->
        <var-decl name='warned_cplusplus_comments' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='332' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='9'>
        <!-- unsigned int cpp_buffer::from_stage3 -->
        <var-decl name='from_stage3' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='337' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='10'>
        <!-- unsigned int cpp_buffer::return_at_eof -->
        <var-decl name='return_at_eof' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='342' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='784'>
        <!-- unsigned char cpp_buffer::sysp -->
        <var-decl name='sysp' type-id='type-id-27' visibility='default' filepath='../.././libcpp/internal.h' line='346' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- cpp_dir cpp_buffer::dir -->
        <var-decl name='dir' type-id='type-id-288' visibility='default' filepath='../.././libcpp/internal.h' line='350' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1344'>
        <!-- cset_converter cpp_buffer::input_cset_desc -->
        <var-decl name='input_cset_desc' type-id='type-id-294' visibility='default' filepath='../.././libcpp/internal.h' line='354' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef tokenrun tokenrun -->
    <typedef-decl name='tokenrun' type-id='type-id-346' filepath='../.././libcpp/internal.h' line='129' column='1' id='type-id-292'/>
    <!-- typedef cpp_reader cpp_reader -->
    <typedef-decl name='cpp_reader' type-id='type-id-278' filepath='../.././libcpp/include/cpplib.h' line='31' column='1' id='type-id-271'/>
    <!-- typedef cpp_string cpp_string -->
    <typedef-decl name='cpp_string' type-id='type-id-176' filepath='../.././libcpp/include/cpplib.h' line='35' column='1' id='type-id-272'/>
    <!-- typedef const char* (cpp_reader*, const char*, cpp_dir**)* missing_header_cb -->
    <typedef-decl name='missing_header_cb' type-id='type-id-363' filepath='../.././libcpp/include/cpplib.h' line='496' column='1' id='type-id-316'/>
    <!-- typedef cpp_dir cpp_dir -->
    <typedef-decl name='cpp_dir' type-id='type-id-288' filepath='../.././libcpp/include/cpplib.h' line='39' column='1' id='type-id-421'/>
    <!-- typedef ht_identifier* hashnode -->
    <typedef-decl name='hashnode' type-id='type-id-386' filepath='../.././libcpp/include/symtab.h' line='42' column='1' id='type-id-378'/>
    <!-- typedef ht hash_table -->
    <typedef-decl name='hash_table' type-id='type-id-343' filepath='../.././libcpp/include/symtab.h' line='41' column='1' id='type-id-413'/>
    <!-- enum cpp_deps_style -->
    <enum-decl name='cpp_deps_style' filepath='../.././libcpp/include/cpplib.h' line='273' column='1' id='type-id-333'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='DEPS_NONE' value='0'/>
      <enumerator name='DEPS_USER' value='1'/>
      <enumerator name='DEPS_SYSTEM' value='2'/>
    </enum-decl>
    <!-- enum c_lang -->
    <enum-decl name='c_lang' filepath='../.././libcpp/include/cpplib.h' line='168' column='1' id='type-id-334'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='CLK_GNUC89' value='0'/>
      <enumerator name='CLK_GNUC99' value='1'/>
      <enumerator name='CLK_GNUC11' value='2'/>
      <enumerator name='CLK_STDC89' value='3'/>
      <enumerator name='CLK_STDC94' value='4'/>
      <enumerator name='CLK_STDC99' value='5'/>
      <enumerator name='CLK_STDC11' value='6'/>
      <enumerator name='CLK_GNUCXX' value='7'/>
      <enumerator name='CLK_CXX98' value='8'/>
      <enumerator name='CLK_GNUCXX11' value='9'/>
      <enumerator name='CLK_CXX11' value='10'/>
      <enumerator name='CLK_ASM' value='11'/>
    </enum-decl>
    <!-- enum cpp_normalize_level -->
    <enum-decl name='cpp_normalize_level' filepath='../.././libcpp/include/cpplib.h' line='276' column='1' id='type-id-276'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='normalized_KC' value='0'/>
      <enumerator name='normalized_C' value='1'/>
      <enumerator name='normalized_identifier_C' value='2'/>
      <enumerator name='normalized_none' value='3'/>
    </enum-decl>
    <!-- struct spec_nodes -->
    <class-decl name='spec_nodes' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='275' column='1' id='type-id-301'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_hashnode* spec_nodes::n_defined -->
        <var-decl name='n_defined' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='277' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- cpp_hashnode* spec_nodes::n_true -->
        <var-decl name='n_true' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='278' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- cpp_hashnode* spec_nodes::n_false -->
        <var-decl name='n_false' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='279' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- cpp_hashnode* spec_nodes::n__VA_ARGS__ -->
        <var-decl name='n__VA_ARGS__' type-id='type-id-116' visibility='default' filepath='../.././libcpp/internal.h' line='280' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __anonymous_struct__1 cpp_comment_table -->
    <typedef-decl name='cpp_comment_table' type-id='type-id-347' filepath='../.././libcpp/include/cpplib.h' line='981' column='1' id='type-id-303'/>
    <!-- struct {cpp_comment* entries; int count; int allocated;} -->
    <class-decl name='__anonymous_struct__1' size-in-bits='128' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-303' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='972' column='1' id='type-id-347'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- cpp_comment* entries -->
        <var-decl name='entries' type-id='type-id-356' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='974' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int count -->
        <var-decl name='count' type-id='type-id-18' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='977' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- int allocated -->
        <var-decl name='allocated' type-id='type-id-18' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='980' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __anonymous_struct__2 cpp_comment -->
    <typedef-decl name='cpp_comment' type-id='type-id-385' filepath='../.././libcpp/include/cpplib.h' line='967' column='1' id='type-id-377'/>
    <!-- struct {char* comment; source_location sloc;} -->
    <class-decl name='__anonymous_struct__2' size-in-bits='128' is-struct='yes' is-anonymous='yes' naming-typedef-id='type-id-377' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='961' column='1' id='type-id-385'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- char* comment -->
        <var-decl name='comment' type-id='type-id-51' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='963' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- source_location sloc -->
        <var-decl name='sloc' type-id='type-id-103' visibility='default' filepath='../.././libcpp/include/cpplib.h' line='966' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct def_pragma_macro -->
    <class-decl name='def_pragma_macro' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libcpp/internal.h' line='358' column='1' id='type-id-340'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- def_pragma_macro* def_pragma_macro::next -->
        <var-decl name='next' type-id='type-id-304' visibility='default' filepath='../.././libcpp/internal.h' line='360' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- char* def_pragma_macro::name -->
        <var-decl name='name' type-id='type-id-51' visibility='default' filepath='../.././libcpp/internal.h' line='362' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned char* def_pragma_macro::definition -->
        <var-decl name='definition' type-id='type-id-280' visibility='default' filepath='../.././libcpp/internal.h' line='364' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- source_location def_pragma_macro::line -->
        <var-decl name='line' type-id='type-id-103' visibility='default' filepath='../.././libcpp/internal.h' line='367' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int def_pragma_macro::syshdr -->
        <var-decl name='syshdr' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='369' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1'>
        <!-- unsigned int def_pragma_macro::used -->
        <var-decl name='used' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='371' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='2'>
        <!-- unsigned int def_pragma_macro::is_undef -->
        <var-decl name='is_undef' type-id='type-id-13' visibility='default' filepath='../.././libcpp/internal.h' line='374' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef unsigned char uchar -->
    <typedef-decl name='uchar' type-id='type-id-27' filepath='../.././libcpp/include/cpp-id-data.h' line='22' column='1' id='type-id-275'/>
    <!-- typedef __time_t time_t -->
    <typedef-decl name='time_t' type-id='type-id-82' filepath='/usr/include/time.h' line='76' column='1' id='type-id-422'/>
    <!-- struct tm -->
    <class-decl name='tm' size-in-bits='448' is-struct='yes' visibility='default' filepath='/usr/include/time.h' line='133' column='1' id='type-id-423'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int tm::tm_sec -->
        <var-decl name='tm_sec' type-id='type-id-18' visibility='default' filepath='/usr/include/time.h' line='135' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- int tm::tm_min -->
        <var-decl name='tm_min' type-id='type-id-18' visibility='default' filepath='/usr/include/time.h' line='136' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int tm::tm_hour -->
        <var-decl name='tm_hour' type-id='type-id-18' visibility='default' filepath='/usr/include/time.h' line='137' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- int tm::tm_mday -->
        <var-decl name='tm_mday' type-id='type-id-18' visibility='default' filepath='/usr/include/time.h' line='138' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int tm::tm_mon -->
        <var-decl name='tm_mon' type-id='type-id-18' visibility='default' filepath='/usr/include/time.h' line='139' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int tm::tm_year -->
        <var-decl name='tm_year' type-id='type-id-18' visibility='default' filepath='/usr/include/time.h' line='140' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int tm::tm_wday -->
        <var-decl name='tm_wday' type-id='type-id-18' visibility='default' filepath='/usr/include/time.h' line='141' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- int tm::tm_yday -->
        <var-decl name='tm_yday' type-id='type-id-18' visibility='default' filepath='/usr/include/time.h' line='142' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- int tm::tm_isdst -->
        <var-decl name='tm_isdst' type-id='type-id-18' visibility='default' filepath='/usr/include/time.h' line='143' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- long int tm::tm_gmtoff -->
        <var-decl name='tm_gmtoff' type-id='type-id-21' visibility='default' filepath='/usr/include/time.h' line='146' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- const char* tm::tm_zone -->
        <var-decl name='tm_zone' type-id='type-id-15' visibility='default' filepath='/usr/include/time.h' line='147' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef _cpp_file _cpp_file -->
    <typedef-decl name='_cpp_file' type-id='type-id-306' filepath='../.././libcpp/internal.h' line='622' column='1' id='type-id-424'/>
    <!-- _cpp_buff* -->
    <pointer-type-def type-id='type-id-305' size-in-bits='64' id='type-id-283'/>
    <!-- _cpp_buff** -->
    <pointer-type-def type-id='type-id-283' size-in-bits='64' id='type-id-425'/>
    <!-- _cpp_file* -->
    <pointer-type-def type-id='type-id-306' size-in-bits='64' id='type-id-289'/>
    <!-- _cpp_line_note* -->
    <pointer-type-def type-id='type-id-374' size-in-bits='64' id='type-id-351'/>
    <!-- _cpp_strbuf* -->
    <pointer-type-def type-id='type-id-426' size-in-bits='64' id='type-id-427'/>
    <!-- bool (cpp_reader*, cpp_hashnode*)* -->
    <pointer-type-def type-id='type-id-348' size-in-bits='64' id='type-id-320'/>
    <!-- bool (cpp_reader*, int, int, typedef source_location, unsigned int, const char*, va_list*)* -->
    <pointer-type-def type-id='type-id-349' size-in-bits='64' id='type-id-318'/>
    <!-- bool (typedef iconv_t, const unsigned char*, typedef size_t, _cpp_strbuf*)* -->
    <pointer-type-def type-id='type-id-375' size-in-bits='64' id='type-id-362'/>
    <!-- char* (const char*, cpp_dir*)* -->
    <pointer-type-def type-id='type-id-350' size-in-bits='64' id='type-id-329'/>
    <!-- const char* (cpp_reader*, const char*, cpp_dir**)* -->
    <pointer-type-def type-id='type-id-376' size-in-bits='64' id='type-id-363'/>
    <!-- const char** -->
    <pointer-type-def type-id='type-id-15' size-in-bits='64' id='type-id-328'/>
    <!-- const cpp_hashnode -->
    <qualified-type-def type-id='type-id-357' const='yes' id='type-id-336'/>
    <!-- const cpp_hashnode* -->
    <pointer-type-def type-id='type-id-336' size-in-bits='64' id='type-id-291'/>
    <!-- const cpp_macro -->
    <qualified-type-def type-id='type-id-155' const='yes' id='type-id-428'/>
    <!-- const cpp_macro* -->
    <pointer-type-def type-id='type-id-428' size-in-bits='64' id='type-id-429'/>
    <!-- const cpp_string -->
    <qualified-type-def type-id='type-id-272' const='yes' id='type-id-268'/>
    <!-- const cpp_string* -->
    <pointer-type-def type-id='type-id-268' size-in-bits='64' id='type-id-261'/>
    <!-- const cpp_token -->
    <qualified-type-def type-id='type-id-277' const='yes' id='type-id-269'/>
    <!-- const cpp_token* -->
    <pointer-type-def type-id='type-id-269' size-in-bits='64' id='type-id-263'/>
    <!-- const cpp_token** -->
    <pointer-type-def type-id='type-id-263' size-in-bits='64' id='type-id-364'/>
    <!-- const directive -->
    <qualified-type-def type-id='type-id-358' const='yes' id='type-id-337'/>
    <!-- const directive* -->
    <pointer-type-def type-id='type-id-337' size-in-bits='64' id='type-id-286'/>
    <!-- const time_t -->
    <qualified-type-def type-id='type-id-422' const='yes' id='type-id-430'/>
    <!-- const time_t* -->
    <pointer-type-def type-id='type-id-430' size-in-bits='64' id='type-id-431'/>
    <!-- const tm -->
    <qualified-type-def type-id='type-id-423' const='yes' id='type-id-432'/>
    <!-- const tm* -->
    <pointer-type-def type-id='type-id-432' size-in-bits='64' id='type-id-433'/>
    <!-- const uchar -->
    <qualified-type-def type-id='type-id-275' const='yes' id='type-id-270'/>
    <!-- const uchar* -->
    <pointer-type-def type-id='type-id-270' size-in-bits='64' id='type-id-256'/>
    <!-- cpp_buffer* -->
    <pointer-type-def type-id='type-id-338' size-in-bits='64' id='type-id-281'/>
    <!-- cpp_comment* -->
    <pointer-type-def type-id='type-id-377' size-in-bits='64' id='type-id-356'/>
    <!-- cpp_context* -->
    <pointer-type-def type-id='type-id-284' size-in-bits='64' id='type-id-285'/>
    <!-- cpp_dir* -->
    <pointer-type-def type-id='type-id-288' size-in-bits='64' id='type-id-287'/>
    <!-- cpp_dir** -->
    <pointer-type-def type-id='type-id-287' size-in-bits='64' id='type-id-434'/>
    <!-- cpp_hashnode* (cpp_reader*, const cpp_token*)* -->
    <pointer-type-def type-id='type-id-359' size-in-bits='64' id='type-id-317'/>
    <!-- cpp_reader* -->
    <pointer-type-def type-id='type-id-271' size-in-bits='64' id='type-id-258'/>
    <!-- cpp_savedstate* -->
    <pointer-type-def type-id='type-id-339' size-in-bits='64' id='type-id-302'/>
    <!-- def_pragma_macro* -->
    <pointer-type-def type-id='type-id-340' size-in-bits='64' id='type-id-304'/>
    <!-- deps* -->
    <pointer-type-def type-id='type-id-341' size-in-bits='64' id='type-id-295'/>
    <!-- file_hash_entry_pool* -->
    <pointer-type-def type-id='type-id-342' size-in-bits='64' id='type-id-290'/>
    <!-- hash_table* -->
    <pointer-type-def type-id='type-id-413' size-in-bits='64' id='type-id-412'/>
    <!-- hashnode* -->
    <pointer-type-def type-id='type-id-378' size-in-bits='64' id='type-id-353'/>
    <!-- ht* -->
    <pointer-type-def type-id='type-id-343' size-in-bits='64' id='type-id-298'/>
    <!-- ht_identifier* -->
    <pointer-type-def type-id='type-id-79' size-in-bits='64' id='type-id-386'/>
    <!-- if_stack* -->
    <pointer-type-def type-id='type-id-379' size-in-bits='64' id='type-id-352'/>
    <!-- int (cpp_reader*, const char*, int)* -->
    <pointer-type-def type-id='type-id-360' size-in-bits='64' id='type-id-314'/>
    <!-- macro_context* -->
    <pointer-type-def type-id='type-id-361' size-in-bits='64' id='type-id-326'/>
    <!-- op* -->
    <pointer-type-def type-id='type-id-344' size-in-bits='64' id='type-id-299'/>
    <!-- pragma_entry* -->
    <pointer-type-def type-id='type-id-345' size-in-bits='64' id='type-id-296'/>
    <!-- time_t* -->
    <pointer-type-def type-id='type-id-422' size-in-bits='64' id='type-id-435'/>
    <!-- tm* -->
    <pointer-type-def type-id='type-id-423' size-in-bits='64' id='type-id-436'/>
    <!-- tokenrun* -->
    <pointer-type-def type-id='type-id-346' size-in-bits='64' id='type-id-293'/>
    <!-- typedef hashnode (hash_table*)* -->
    <pointer-type-def type-id='type-id-381' size-in-bits='64' id='type-id-354'/>
    <!-- uchar* -->
    <pointer-type-def type-id='type-id-275' size-in-bits='64' id='type-id-265'/>
    <!-- unsigned char* -->
    <pointer-type-def type-id='type-id-27' size-in-bits='64' id='type-id-280'/>
    <!-- void (cpp_reader*)* -->
    <pointer-type-def type-id='type-id-365' size-in-bits='64' id='type-id-319'/>
    <!-- void (cpp_reader*, const char*)* -->
    <pointer-type-def type-id='type-id-366' size-in-bits='64' id='type-id-309'/>
    <!-- void (cpp_reader*, const char*, int, const char*)* -->
    <pointer-type-def type-id='type-id-367' size-in-bits='64' id='type-id-315'/>
    <!-- void (cpp_reader*, const cpp_token*, int)* -->
    <pointer-type-def type-id='type-id-368' size-in-bits='64' id='type-id-307'/>
    <!-- void (cpp_reader*, const line_map*)* -->
    <pointer-type-def type-id='type-id-369' size-in-bits='64' id='type-id-308'/>
    <!-- void (cpp_reader*, typedef source_location)* -->
    <pointer-type-def type-id='type-id-370' size-in-bits='64' id='type-id-313'/>
    <!-- void (cpp_reader*, typedef source_location, const cpp_string*)* -->
    <pointer-type-def type-id='type-id-371' size-in-bits='64' id='type-id-312'/>
    <!-- void (cpp_reader*, typedef source_location, const unsigned char*, const char*, int, const cpp_token**)* -->
    <pointer-type-def type-id='type-id-372' size-in-bits='64' id='type-id-310'/>
    <!-- void (cpp_reader*, typedef source_location, cpp_hashnode*)* -->
    <pointer-type-def type-id='type-id-373' size-in-bits='64' id='type-id-311'/>
    <!-- int _cpp_warn_if_unused_macro(cpp_reader*, cpp_hashnode*, void*) -->
    <function-decl name='_cpp_warn_if_unused_macro' mangled-name='_cpp_warn_if_unused_macro' filepath='../.././libcpp/macro.c' line='178' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_warn_if_unused_macro'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='178' column='1'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='node' filepath='../.././libcpp/macro.c' line='178' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='v' filepath='../.././libcpp/macro.c' line='179' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- const uchar* _cpp_builtin_macro_text(cpp_reader*, cpp_hashnode*) -->
    <function-decl name='_cpp_builtin_macro_text' mangled-name='_cpp_builtin_macro_text' filepath='../.././libcpp/macro.c' line='218' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_builtin_macro_text'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='218' column='1'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='node' filepath='../.././libcpp/macro.c' line='218' column='1'/>
      <!-- const uchar* -->
      <return type-id='type-id-256'/>
    </function-decl>
    <!-- uchar* cpp_quote_string(uchar*, const uchar*, unsigned int) -->
    <function-decl name='cpp_quote_string' mangled-name='_Z16cpp_quote_stringPhPKhj' filepath='../.././libcpp/macro.c' line='434' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z16cpp_quote_stringPhPKhj'>
      <!-- parameter of type 'uchar*' -->
      <parameter type-id='type-id-265' name='dest' filepath='../.././libcpp/macro.c' line='434' column='1'/>
      <!-- parameter of type 'const uchar*' -->
      <parameter type-id='type-id-256' name='src' filepath='../.././libcpp/macro.c' line='434' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='len' filepath='../.././libcpp/macro.c' line='434' column='1'/>
      <!-- uchar* -->
      <return type-id='type-id-265'/>
    </function-decl>
    <!-- bool _cpp_arguments_ok(cpp_reader*, cpp_macro*, const cpp_hashnode*, unsigned int) -->
    <function-decl name='_cpp_arguments_ok' mangled-name='_cpp_arguments_ok' filepath='../.././libcpp/macro.c' line='663' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_arguments_ok'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='663' column='1'/>
      <!-- parameter of type 'cpp_macro*' -->
      <parameter type-id='type-id-149' name='macro' filepath='../.././libcpp/macro.c' line='663' column='1'/>
      <!-- parameter of type 'const cpp_hashnode*' -->
      <parameter type-id='type-id-291' name='node' filepath='../.././libcpp/macro.c' line='663' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='argc' filepath='../.././libcpp/macro.c' line='663' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- void _cpp_push_token_context(cpp_reader*, cpp_hashnode*, const cpp_token*, unsigned int) -->
    <function-decl name='_cpp_push_token_context' mangled-name='_cpp_push_token_context' filepath='../.././libcpp/macro.c' line='1787' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_push_token_context'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='1787' column='1'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='macro' filepath='../.././libcpp/macro.c' line='1787' column='1'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263' name='first' filepath='../.././libcpp/macro.c' line='1788' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='count' filepath='../.././libcpp/macro.c' line='1788' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_push_text_context(cpp_reader*, cpp_hashnode*, const uchar*, size_t) -->
    <function-decl name='_cpp_push_text_context' mangled-name='_cpp_push_text_context' filepath='../.././libcpp/macro.c' line='1830' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_push_text_context'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='1830' column='1'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='macro' filepath='../.././libcpp/macro.c' line='1830' column='1'/>
      <!-- parameter of type 'const uchar*' -->
      <parameter type-id='type-id-256' name='start' filepath='../.././libcpp/macro.c' line='1831' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libcpp/macro.c' line='1831' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_pop_context(cpp_reader*) -->
    <function-decl name='_cpp_pop_context' mangled-name='_cpp_pop_context' filepath='../.././libcpp/macro.c' line='2092' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_pop_context'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int cpp_sys_macro_p(cpp_reader*) -->
    <function-decl name='cpp_sys_macro_p' mangled-name='_Z15cpp_sys_macro_pP10cpp_reader' filepath='../.././libcpp/macro.c' line='2437' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15cpp_sys_macro_pP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='2437' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void _cpp_backup_tokens_direct(cpp_reader*, unsigned int) -->
    <function-decl name='_cpp_backup_tokens_direct' mangled-name='_cpp_backup_tokens_direct' filepath='../.././libcpp/macro.c' line='2469' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_backup_tokens_direct'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='2469' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='count' filepath='../.././libcpp/macro.c' line='2469' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_backup_tokens(cpp_reader*, unsigned int) -->
    <function-decl name='_cpp_backup_tokens' mangled-name='_Z18_cpp_backup_tokensP10cpp_readerj' filepath='../.././libcpp/macro.c' line='2488' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18_cpp_backup_tokensP10cpp_readerj'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='2469' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='count' filepath='../.././libcpp/macro.c' line='2469' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const cpp_token* cpp_get_token_with_location(cpp_reader*, source_location*) -->
    <function-decl name='cpp_get_token_with_location' mangled-name='_Z27cpp_get_token_with_locationP10cpp_readerPj' filepath='../.././libcpp/macro.c' line='2424' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z27cpp_get_token_with_locationP10cpp_readerPj'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='2424' column='1'/>
      <!-- parameter of type 'source_location*' -->
      <parameter type-id='type-id-117' name='loc' filepath='../.././libcpp/macro.c' line='2424' column='1'/>
      <!-- const cpp_token* -->
      <return type-id='type-id-263'/>
    </function-decl>
    <!-- const cpp_token* cpp_get_token(cpp_reader*) -->
    <function-decl name='cpp_get_token' mangled-name='_Z13cpp_get_tokenP10cpp_reader' filepath='../.././libcpp/macro.c' line='2380' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z13cpp_get_tokenP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='2380' column='1'/>
      <!-- const cpp_token* -->
      <return type-id='type-id-263'/>
    </function-decl>
    <!-- void cpp_scan_nooutput(cpp_reader*) -->
    <function-decl name='cpp_scan_nooutput' mangled-name='_Z17cpp_scan_nooutputP10cpp_reader' filepath='../.././libcpp/macro.c' line='2447' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z17cpp_scan_nooutputP10cpp_reader'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_free_definition(cpp_hashnode*) -->
    <function-decl name='_cpp_free_definition' mangled-name='_cpp_free_definition' filepath='../.././libcpp/macro.c' line='2579' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_free_definition'>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='h' filepath='../.././libcpp/macro.c' line='2579' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- bool _cpp_save_parameter(cpp_reader*, cpp_macro*, cpp_hashnode*) -->
    <function-decl name='_cpp_save_parameter' mangled-name='_cpp_save_parameter' filepath='../.././libcpp/macro.c' line='2590' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_save_parameter'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='2590' column='1'/>
      <!-- parameter of type 'cpp_macro*' -->
      <parameter type-id='type-id-149' name='macro' filepath='../.././libcpp/macro.c' line='2590' column='1'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='node' filepath='../.././libcpp/macro.c' line='2590' column='1'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool _cpp_create_definition(cpp_reader*, cpp_hashnode*) -->
    <function-decl name='_cpp_create_definition' mangled-name='_cpp_create_definition' filepath='../.././libcpp/macro.c' line='2938' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_create_definition'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- const unsigned char* cpp_macro_definition(cpp_reader*, cpp_hashnode*) -->
    <function-decl name='cpp_macro_definition' mangled-name='_Z20cpp_macro_definitionP10cpp_readerP12cpp_hashnode' filepath='../.././libcpp/macro.c' line='3080' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z20cpp_macro_definitionP10cpp_readerP12cpp_hashnode'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='3080' column='1'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='node' filepath='../.././libcpp/macro.c' line='3080' column='1'/>
      <!-- const unsigned char* -->
      <return type-id='type-id-145'/>
    </function-decl>
    <!-- unsigned int num_expanded_macros_counter -->
    <var-decl name='num_expanded_macros_counter' type-id='type-id-13' mangled-name='num_expanded_macros_counter' visibility='default' filepath='../.././libcpp/macro.c' line='170' column='1' elf-symbol-id='num_expanded_macros_counter'/>
    <!-- unsigned int num_macro_tokens_counter -->
    <var-decl name='num_macro_tokens_counter' type-id='type-id-13' mangled-name='num_macro_tokens_counter' visibility='default' filepath='../.././libcpp/macro.c' line='173' column='1' elf-symbol-id='num_macro_tokens_counter'/>
    <!-- cpp_token* _cpp_temp_token(cpp_reader*) -->
    <function-decl name='_cpp_temp_token' mangled-name='_cpp_temp_token' filepath='../.././libcpp/internal.h' line='650' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_temp_token'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- cpp_token* -->
      <return type-id='type-id-163'/>
    </function-decl>
    <!-- void _cpp_extend_buff(cpp_reader*, _cpp_buff**, size_t) -->
    <function-decl name='_cpp_extend_buff' mangled-name='_cpp_extend_buff' filepath='../.././libcpp/internal.h' line='109' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_extend_buff'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type '_cpp_buff**' -->
      <parameter type-id='type-id-425'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- cpp_token* _cpp_lex_direct(cpp_reader*) -->
    <function-decl name='_cpp_lex_direct' mangled-name='_cpp_lex_direct' filepath='../.././libcpp/internal.h' line='652' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_lex_direct'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- cpp_token* -->
      <return type-id='type-id-163'/>
    </function-decl>
    <!-- time_t time(time_t*) -->
    <function-decl name='time' filepath='/usr/include/time.h' line='186' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'time_t*' -->
      <parameter type-id='type-id-435'/>
      <!-- typedef time_t -->
      <return type-id='type-id-422'/>
    </function-decl>
    <!-- tm* localtime(const time_t*) -->
    <function-decl name='localtime' filepath='/usr/include/time.h' line='237' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const time_t*' -->
      <parameter type-id='type-id-431'/>
      <!-- tm* -->
      <return type-id='type-id-436'/>
    </function-decl>
    <!-- unsigned char* _cpp_unaligned_alloc(cpp_reader*, size_t) -->
    <function-decl name='_cpp_unaligned_alloc' mangled-name='_cpp_unaligned_alloc' filepath='../.././libcpp/internal.h' line='113' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_unaligned_alloc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- unsigned char* -->
      <return type-id='type-id-280'/>
    </function-decl>
    <!-- const char* _cpp_get_file_name(_cpp_file*) -->
    <function-decl name='_cpp_get_file_name' mangled-name='_cpp_get_file_name' filepath='../.././libcpp/internal.h' line='638' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_get_file_name'>
      <!-- parameter of type '_cpp_file*' -->
      <parameter type-id='type-id-289'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- char* asctime(const tm*) -->
    <function-decl name='asctime' filepath='/usr/include/time.h' line='255' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const tm*' -->
      <parameter type-id='type-id-433'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- stat* _cpp_get_file_stat(_cpp_file*) -->
    <function-decl name='_cpp_get_file_stat' mangled-name='_cpp_get_file_stat' filepath='../.././libcpp/internal.h' line='639' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_get_file_stat'>
      <!-- parameter of type '_cpp_file*' -->
      <parameter type-id='type-id-289'/>
      <!-- stat* -->
      <return type-id='type-id-132'/>
    </function-decl>
    <!-- void _cpp_clean_line(cpp_reader*) -->
    <function-decl name='_cpp_clean_line' mangled-name='_cpp_clean_line' filepath='../.././libcpp/internal.h' line='647' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_clean_line'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_pop_buffer(cpp_reader*) -->
    <function-decl name='_cpp_pop_buffer' mangled-name='_cpp_pop_buffer' filepath='../.././libcpp/internal.h' line='674' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_pop_buffer'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int _cpp_do__Pragma(cpp_reader*) -->
    <function-decl name='_cpp_do__Pragma' mangled-name='_cpp_do__Pragma' filepath='../.././libcpp/internal.h' line='669' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_do__Pragma'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='2437' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void _cpp_free_buff(_cpp_buff*) -->
    <function-decl name='_cpp_free_buff' mangled-name='_cpp_free_buff' filepath='../.././libcpp/internal.h' line='111' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_free_buff'>
      <!-- parameter of type '_cpp_buff*' -->
      <parameter type-id='type-id-283'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- _cpp_buff* _cpp_get_buff(cpp_reader*, size_t) -->
    <function-decl name='_cpp_get_buff' mangled-name='_cpp_get_buff' filepath='../.././libcpp/internal.h' line='107' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_get_buff'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- _cpp_buff* -->
      <return type-id='type-id-283'/>
    </function-decl>
    <!-- _cpp_buff* _cpp_append_extend_buff(cpp_reader*, _cpp_buff*, size_t) -->
    <function-decl name='_cpp_append_extend_buff' mangled-name='_cpp_append_extend_buff' filepath='../.././libcpp/internal.h' line='110' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_append_extend_buff'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type '_cpp_buff*' -->
      <parameter type-id='type-id-283'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- _cpp_buff* -->
      <return type-id='type-id-283'/>
    </function-decl>
    <!-- void _cpp_release_buff(cpp_reader*, _cpp_buff*) -->
    <function-decl name='_cpp_release_buff' mangled-name='_cpp_release_buff' filepath='../.././libcpp/internal.h' line='108' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_release_buff'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type '_cpp_buff*' -->
      <parameter type-id='type-id-283'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const cpp_token* _cpp_lex_token(cpp_reader*) -->
    <function-decl name='_cpp_lex_token' mangled-name='_cpp_lex_token' filepath='../.././libcpp/internal.h' line='651' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_lex_token'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='2380' column='1'/>
      <!-- const cpp_token* -->
      <return type-id='type-id-263'/>
    </function-decl>
    <!-- bool _cpp_read_logical_line_trad(cpp_reader*) -->
    <function-decl name='_cpp_read_logical_line_trad' mangled-name='_cpp_read_logical_line_trad' filepath='../.././libcpp/internal.h' line='689' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_read_logical_line_trad'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- int _cpp_equiv_tokens(const cpp_token*, const cpp_token*) -->
    <function-decl name='_cpp_equiv_tokens' mangled-name='_cpp_equiv_tokens' filepath='../.././libcpp/internal.h' line='653' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_equiv_tokens'>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- bool _cpp_expansions_different_trad(const cpp_macro*, const cpp_macro*) -->
    <function-decl name='_cpp_expansions_different_trad' mangled-name='_cpp_expansions_different_trad' filepath='../.././libcpp/internal.h' line='694' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_expansions_different_trad'>
      <!-- parameter of type 'const cpp_macro*' -->
      <parameter type-id='type-id-429'/>
      <!-- parameter of type 'const cpp_macro*' -->
      <parameter type-id='type-id-429'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- bool _cpp_create_trad_definition(cpp_reader*, cpp_macro*) -->
    <function-decl name='_cpp_create_trad_definition' mangled-name='_cpp_create_trad_definition' filepath='../.././libcpp/internal.h' line='693' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_create_trad_definition'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'cpp_macro*' -->
      <parameter type-id='type-id-149'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- unsigned char* _cpp_aligned_alloc(cpp_reader*, size_t) -->
    <function-decl name='_cpp_aligned_alloc' mangled-name='_cpp_aligned_alloc' filepath='../.././libcpp/internal.h' line='112' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_aligned_alloc'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- unsigned char* -->
      <return type-id='type-id-280'/>
    </function-decl>
    <!-- size_t _cpp_replacement_text_len(const cpp_macro*) -->
    <function-decl name='_cpp_replacement_text_len' mangled-name='_cpp_replacement_text_len' filepath='../.././libcpp/internal.h' line='698' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_replacement_text_len'>
      <!-- parameter of type 'const cpp_macro*' -->
      <parameter type-id='type-id-429'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- unsigned char* _cpp_copy_replacement_text(const cpp_macro*, unsigned char*) -->
    <function-decl name='_cpp_copy_replacement_text' filepath='../.././libcpp/internal.h' line='696' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const cpp_macro*' -->
      <parameter type-id='type-id-429'/>
      <!-- parameter of type 'unsigned char*' -->
      <parameter type-id='type-id-280'/>
      <!-- unsigned char* -->
      <return type-id='type-id-280'/>
    </function-decl>
    <!-- struct _cpp_strbuf -->
    <class-decl name='_cpp_strbuf' is-struct='yes' visibility='default' is-declaration-only='yes' id='type-id-426'/>
    <!-- bool (cpp_reader*, cpp_hashnode*) -->
    <function-type size-in-bits='64' id='type-id-348'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-type>
    <!-- bool (cpp_reader*, int, int, source_location, unsigned int, const char*, va_list*) -->
    <function-type size-in-bits='64' id='type-id-349'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'va_list*' -->
      <parameter type-id='type-id-98'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-type>
    <!-- bool (iconv_t, const unsigned char*, size_t, _cpp_strbuf*) -->
    <function-type size-in-bits='64' id='type-id-375'>
      <!-- parameter of type 'typedef iconv_t' -->
      <parameter type-id='type-id-208'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type '_cpp_strbuf*' -->
      <parameter type-id='type-id-427'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-type>
    <!-- char* (const char*, cpp_dir*) -->
    <function-type size-in-bits='64' id='type-id-350'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'cpp_dir*' -->
      <parameter type-id='type-id-287'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-type>
    <!-- const char* (cpp_reader*, const char*, cpp_dir**) -->
    <function-type size-in-bits='64' id='type-id-376'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'cpp_dir**' -->
      <parameter type-id='type-id-434'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-type>
    <!-- cpp_hashnode* (cpp_reader*, const cpp_token*) -->
    <function-type size-in-bits='64' id='type-id-359'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263'/>
      <!-- cpp_hashnode* -->
      <return type-id='type-id-116'/>
    </function-type>
    <!-- int (cpp_reader*, const char*, int) -->
    <function-type size-in-bits='64' id='type-id-360'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- hashnode (hash_table*) -->
    <function-type size-in-bits='64' id='type-id-381'>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412'/>
      <!-- typedef hashnode -->
      <return type-id='type-id-378'/>
    </function-type>
    <!-- void (cpp_reader*) -->
    <function-type size-in-bits='64' id='type-id-365'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (cpp_reader*, const char*) -->
    <function-type size-in-bits='64' id='type-id-366'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (cpp_reader*, const char*, int, const char*) -->
    <function-type size-in-bits='64' id='type-id-367'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (cpp_reader*, const cpp_token*, int) -->
    <function-type size-in-bits='64' id='type-id-368'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const cpp_token*' -->
      <parameter type-id='type-id-263'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (cpp_reader*, const line_map*) -->
    <function-type size-in-bits='64' id='type-id-369'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'const line_map*' -->
      <parameter type-id='type-id-48'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (cpp_reader*, source_location) -->
    <function-type size-in-bits='64' id='type-id-370'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (cpp_reader*, source_location, const cpp_string*) -->
    <function-type size-in-bits='64' id='type-id-371'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'const cpp_string*' -->
      <parameter type-id='type-id-261'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (cpp_reader*, source_location, const unsigned char*, const char*, int, const cpp_token**) -->
    <function-type size-in-bits='64' id='type-id-372'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const cpp_token**' -->
      <parameter type-id='type-id-364'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
    <!-- void (cpp_reader*, source_location, cpp_hashnode*) -->
    <function-type size-in-bits='64' id='type-id-373'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'typedef source_location' -->
      <parameter type-id='type-id-103'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/mkdeps.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- const deps -->
    <qualified-type-def type-id='type-id-341' const='yes' id='type-id-437'/>
    <!-- const deps* -->
    <pointer-type-def type-id='type-id-437' size-in-bits='64' id='type-id-438'/>
    <!-- deps* deps_init() -->
    <function-decl name='deps_init' mangled-name='_Z9deps_initv' filepath='../.././libcpp/mkdeps.c' line='168' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9deps_initv'>
      <!-- deps* -->
      <return type-id='type-id-295'/>
    </function-decl>
    <!-- void deps_free(deps*) -->
    <function-decl name='deps_free' mangled-name='_Z9deps_freeP4deps' filepath='../.././libcpp/mkdeps.c' line='174' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9deps_freeP4deps'>
      <!-- parameter of type 'deps*' -->
      <parameter type-id='type-id-295' name='d' filepath='../.././libcpp/mkdeps.c' line='174' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void deps_add_target(deps*, const char*, int) -->
    <function-decl name='deps_add_target' mangled-name='_Z15deps_add_targetP4depsPKci' filepath='../.././libcpp/mkdeps.c' line='206' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z15deps_add_targetP4depsPKci'>
      <!-- parameter of type 'deps*' -->
      <parameter type-id='type-id-295' name='d' filepath='../.././libcpp/mkdeps.c' line='206' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='t' filepath='../.././libcpp/mkdeps.c' line='206' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='quote' filepath='../.././libcpp/mkdeps.c' line='206' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void deps_add_default_target(deps*, const char*) -->
    <function-decl name='deps_add_default_target' mangled-name='_Z23deps_add_default_targetP4depsPKc' filepath='../.././libcpp/mkdeps.c' line='227' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z23deps_add_default_targetP4depsPKc'>
      <!-- parameter of type 'deps*' -->
      <parameter type-id='type-id-295'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void deps_add_dep(deps*, const char*) -->
    <function-decl name='deps_add_dep' mangled-name='_Z12deps_add_depP4depsPKc' filepath='../.././libcpp/mkdeps.c' line='257' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12deps_add_depP4depsPKc'>
      <!-- parameter of type 'deps*' -->
      <parameter type-id='type-id-295'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void deps_add_vpath(deps*, const char*) -->
    <function-decl name='deps_add_vpath' mangled-name='_Z14deps_add_vpathP4depsPKc' filepath='../.././libcpp/mkdeps.c' line='270' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z14deps_add_vpathP4depsPKc'>
      <!-- parameter of type 'deps*' -->
      <parameter type-id='type-id-295'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void deps_write(const deps*, FILE*, unsigned int) -->
    <function-decl name='deps_write' mangled-name='_Z10deps_writePK4depsP8_IO_FILEj' filepath='../.././libcpp/mkdeps.c' line='299' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z10deps_writePK4depsP8_IO_FILEj'>
      <!-- parameter of type 'const deps*' -->
      <parameter type-id='type-id-438' name='d' filepath='../.././libcpp/mkdeps.c' line='299' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='fp' filepath='../.././libcpp/mkdeps.c' line='299' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='colmax' filepath='../.././libcpp/mkdeps.c' line='299' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void deps_phony_targets(const deps*, FILE*) -->
    <function-decl name='deps_phony_targets' mangled-name='_Z18deps_phony_targetsPK4depsP8_IO_FILE' filepath='../.././libcpp/mkdeps.c' line='350' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18deps_phony_targetsPK4depsP8_IO_FILE'>
      <!-- parameter of type 'const deps*' -->
      <parameter type-id='type-id-438' name='d' filepath='../.././libcpp/mkdeps.c' line='350' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='fp' filepath='../.././libcpp/mkdeps.c' line='350' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int deps_save(deps*, FILE*) -->
    <function-decl name='deps_save' mangled-name='_Z9deps_saveP4depsP8_IO_FILE' filepath='../.././libcpp/mkdeps.c' line='368' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9deps_saveP4depsP8_IO_FILE'>
      <!-- parameter of type 'deps*' -->
      <parameter type-id='type-id-295' name='deps' filepath='../.././libcpp/mkdeps.c' line='368' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='f' filepath='../.././libcpp/mkdeps.c' line='368' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int deps_restore(deps*, FILE*, const char*) -->
    <function-decl name='deps_restore' mangled-name='_Z12deps_restoreP4depsP8_IO_FILEPKc' filepath='../.././libcpp/mkdeps.c' line='397' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z12deps_restoreP4depsP8_IO_FILEPKc'>
      <!-- parameter of type 'deps*' -->
      <parameter type-id='type-id-295' name='deps' filepath='../.././libcpp/mkdeps.c' line='397' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='fd' filepath='../.././libcpp/mkdeps.c' line='397' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='self' filepath='../.././libcpp/mkdeps.c' line='397' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/symtab.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- hash_table* ht_create(unsigned int) -->
    <function-decl name='ht_create' mangled-name='_Z9ht_createj' filepath='../.././libcpp/symtab.c' line='57' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9ht_createj'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13'/>
      <!-- hash_table* -->
      <return type-id='type-id-412'/>
    </function-decl>
    <!-- void ht_destroy(hash_table*) -->
    <function-decl name='ht_destroy' mangled-name='_Z10ht_destroyP2ht' filepath='../.././libcpp/symtab.c' line='80' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z10ht_destroyP2ht'>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- hashnode ht_lookup_with_hash(hash_table*, const unsigned char*, size_t, unsigned int, ht_lookup_option) -->
    <function-decl name='ht_lookup_with_hash' mangled-name='_Z19ht_lookup_with_hashP2htPKhmj16ht_lookup_option' filepath='../.././libcpp/symtab.c' line='102' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z19ht_lookup_with_hashP2htPKhmj16ht_lookup_option'>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13'/>
      <!-- parameter of type 'enum ht_lookup_option' -->
      <parameter type-id='type-id-439'/>
      <!-- typedef hashnode -->
      <return type-id='type-id-378'/>
    </function-decl>
    <!-- hashnode ht_lookup(hash_table*, const unsigned char*, size_t, ht_lookup_option) -->
    <function-decl name='ht_lookup' mangled-name='_Z9ht_lookupP2htPKhm16ht_lookup_option' filepath='../.././libcpp/symtab.c' line='94' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9ht_lookupP2htPKhm16ht_lookup_option'>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'enum ht_lookup_option' -->
      <parameter type-id='type-id-439'/>
      <!-- typedef hashnode -->
      <return type-id='type-id-378'/>
    </function-decl>
    <!-- void ht_forall(hash_table*, ht_cb, void*) -->
    <function-decl name='ht_forall' mangled-name='_Z9ht_forallP2htPFiP10cpp_readerP13ht_identifierPKvES6_' filepath='../.././libcpp/symtab.c' line='227' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z9ht_forallP2htPFiP10cpp_readerP13ht_identifierPKvES6_'>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412'/>
      <!-- parameter of type 'typedef ht_cb' -->
      <parameter type-id='type-id-410'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void ht_purge(hash_table*, ht_cb, void*) -->
    <function-decl name='ht_purge' mangled-name='_Z8ht_purgeP2htPFiP10cpp_readerP13ht_identifierPKvES6_' filepath='../.././libcpp/symtab.c' line='245' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z8ht_purgeP2htPFiP10cpp_readerP13ht_identifierPKvES6_'>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412'/>
      <!-- parameter of type 'typedef ht_cb' -->
      <parameter type-id='type-id-410'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void ht_load(hash_table*, hashnode*, unsigned int, unsigned int, bool) -->
    <function-decl name='ht_load' mangled-name='_Z7ht_loadP2htPP13ht_identifierjjb' filepath='../.././libcpp/symtab.c' line='262' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z7ht_loadP2htPP13ht_identifierjjb'>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412' name='ht' filepath='../.././libcpp/symtab.c' line='262' column='1'/>
      <!-- parameter of type 'hashnode*' -->
      <parameter type-id='type-id-353' name='entries' filepath='../.././libcpp/symtab.c' line='262' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='nslots' filepath='../.././libcpp/symtab.c' line='263' column='1'/>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13' name='nelements' filepath='../.././libcpp/symtab.c' line='263' column='1'/>
      <!-- parameter of type 'bool' -->
      <parameter type-id='type-id-1' name='own' filepath='../.././libcpp/symtab.c' line='264' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void ht_dump_statistics(hash_table*) -->
    <function-decl name='ht_dump_statistics' mangled-name='_Z18ht_dump_statisticsP2ht' filepath='../.././libcpp/symtab.c' line='277' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_Z18ht_dump_statisticsP2ht'>
      <!-- parameter of type 'hash_table*' -->
      <parameter type-id='type-id-412'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int _obstack_memory_used(obstack*) -->
    <function-decl name='_obstack_memory_used' filepath='../.././libcpp/../include/obstack.h' line='198' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'obstack*' -->
      <parameter type-id='type-id-87'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- enum ht_lookup_option -->
    <enum-decl name='ht_lookup_option' filepath='../.././libcpp/include/symtab.h' line='44' column='1' id='type-id-439'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='HT_NO_INSERT' value='0'/>
      <enumerator name='HT_ALLOC' value='1'/>
    </enum-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libcpp/traditional.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libcpp' language='LANG_C_plus_plus'>
    <!-- enum ht_lookup_option -->
    <enum-decl name='ht_lookup_option' filepath='../.././libcpp/include/symtab.h' line='44' column='1' id='type-id-439'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='HT_NO_INSERT' value='0'/>
      <enumerator name='HT_ALLOC' value='1'/>
    </enum-decl>
    <!-- void _cpp_overlay_buffer(cpp_reader*, const uchar*, size_t) -->
    <function-decl name='_cpp_overlay_buffer' mangled-name='_cpp_overlay_buffer' filepath='../.././libcpp/traditional.c' line='267' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_overlay_buffer'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/traditional.c' line='267' column='1'/>
      <!-- parameter of type 'const uchar*' -->
      <parameter type-id='type-id-256' name='start' filepath='../.././libcpp/traditional.c' line='267' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libcpp/traditional.c' line='267' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void _cpp_remove_overlay(cpp_reader*) -->
    <function-decl name='_cpp_remove_overlay' mangled-name='_cpp_remove_overlay' filepath='../.././libcpp/traditional.c' line='284' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_remove_overlay'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- bool _cpp_scan_out_logical_line(cpp_reader*, cpp_macro*) -->
    <function-decl name='_cpp_scan_out_logical_line' mangled-name='_cpp_scan_out_logical_line' filepath='../.././libcpp/traditional.c' line='344' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_scan_out_logical_line'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'cpp_macro*' -->
      <parameter type-id='type-id-149'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- uchar* _cpp_copy_replacement_text(const cpp_macro*, uchar*) -->
    <function-decl name='_cpp_copy_replacement_text' mangled-name='_cpp_copy_replacement_text' filepath='../.././libcpp/traditional.c' line='790' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_copy_replacement_text'>
      <!-- parameter of type 'const cpp_macro*' -->
      <parameter type-id='type-id-429' name='macro' filepath='../.././libcpp/traditional.c' line='790' column='1'/>
      <!-- parameter of type 'uchar*' -->
      <parameter type-id='type-id-265' name='dest' filepath='../.././libcpp/traditional.c' line='790' column='1'/>
      <!-- uchar* -->
      <return type-id='type-id-265'/>
    </function-decl>
    <!-- void _cpp_push_text_context(cpp_reader*, cpp_hashnode*, const unsigned char*, size_t) -->
    <function-decl name='_cpp_push_text_context' filepath='../.././libcpp/internal.h' line='605' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116'/>
      <!-- parameter of type 'const unsigned char*' -->
      <parameter type-id='type-id-145'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const unsigned char* _cpp_builtin_macro_text(cpp_reader*, cpp_hashnode*) -->
    <function-decl name='_cpp_builtin_macro_text' filepath='../.././libcpp/internal.h' line='610' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258' name='pfile' filepath='../.././libcpp/macro.c' line='3080' column='1'/>
      <!-- parameter of type 'cpp_hashnode*' -->
      <parameter type-id='type-id-116' name='node' filepath='../.././libcpp/macro.c' line='3080' column='1'/>
      <!-- const unsigned char* -->
      <return type-id='type-id-145'/>
    </function-decl>
    <!-- bool _cpp_skip_block_comment(cpp_reader*) -->
    <function-decl name='_cpp_skip_block_comment' mangled-name='_cpp_skip_block_comment' filepath='../.././libcpp/internal.h' line='649' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_skip_block_comment'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
    <!-- int _cpp_handle_directive(cpp_reader*, int) -->
    <function-decl name='_cpp_handle_directive' mangled-name='_cpp_handle_directive' filepath='../.././libcpp/internal.h' line='665' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_handle_directive'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void _cpp_process_line_notes(cpp_reader*, int) -->
    <function-decl name='_cpp_process_line_notes' mangled-name='_cpp_process_line_notes' filepath='../.././libcpp/internal.h' line='646' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_process_line_notes'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- bool _cpp_get_fresh_line(cpp_reader*) -->
    <function-decl name='_cpp_get_fresh_line' mangled-name='_cpp_get_fresh_line' filepath='../.././libcpp/internal.h' line='648' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='_cpp_get_fresh_line'>
      <!-- parameter of type 'cpp_reader*' -->
      <parameter type-id='type-id-258'/>
      <!-- bool -->
      <return type-id='type-id-1'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/argv.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- void freeargv(char**) -->
    <function-decl name='freeargv' mangled-name='freeargv' filepath='../.././libiberty/argv.c' line='108' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='freeargv'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123' name='vector' filepath='../.././libiberty/argv.c' line='108' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- char** dupargv(char**) -->
    <function-decl name='dupargv' mangled-name='dupargv' filepath='../.././libiberty/argv.c' line='65' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='dupargv'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123' name='argv' filepath='../.././libiberty/argv.c' line='65' column='1'/>
      <!-- char** -->
      <return type-id='type-id-123'/>
    </function-decl>
    <!-- char** buildargv(const char*) -->
    <function-decl name='buildargv' mangled-name='buildargv' filepath='../.././libiberty/argv.c' line='180' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='buildargv'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='input' filepath='../.././libiberty/argv.c' line='180' column='1'/>
      <!-- char** -->
      <return type-id='type-id-123'/>
    </function-decl>
    <!-- int countargv(char**) -->
    <function-decl name='countargv' mangled-name='countargv' filepath='../.././libiberty/argv.c' line='507' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='countargv'>
      <!-- parameter of type 'char**' -->
      <parameter type-id='type-id-123' name='argv' filepath='../.././libiberty/argv.c' line='507' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- void* malloc(size_t) -->
    <function-decl name='malloc' filepath='/usr/include/stdlib.h' line='471' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- char* __strdup(const char*) -->
    <function-decl name='__strdup' filepath='/usr/include/bits/string2.h' line='1303' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- int fputc(int, FILE*) -->
    <function-decl name='fputc' filepath='/usr/include/stdio.h' line='577' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- FILE* fopen(const char*, const char*) -->
    <function-decl name='fopen' filepath='/usr/include/stdio.h' line='271' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
    <!-- int fseek(FILE*, long int, int) -->
    <function-decl name='fseek' filepath='/usr/include/stdio.h' line='744' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- parameter of type 'long int' -->
      <parameter type-id='type-id-21'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- long int ftell(FILE*) -->
    <function-decl name='ftell' filepath='/usr/include/stdio.h' line='749' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- long int -->
      <return type-id='type-id-21'/>
    </function-decl>
    <!-- void xexit(int) -->
    <function-decl name='xexit' mangled-name='xexit' filepath='../.././libiberty/../include/libiberty.h' line='288' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='xexit'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/concat.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- char* concat_copy(char*, const char*, ...) -->
    <function-decl name='concat_copy' mangled-name='concat_copy' filepath='../.././libiberty/concat.c' line='117' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='concat_copy'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51' name='dst' filepath='../.././libiberty/concat.c' line='117' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='first' filepath='../.././libiberty/concat.c' line='117' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* reconcat(char*, const char*, ...) -->
    <function-decl name='reconcat' mangled-name='reconcat' filepath='../.././libiberty/concat.c' line='191' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='reconcat'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51' name='optr' filepath='../.././libiberty/concat.c' line='191' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='first' filepath='../.././libiberty/concat.c' line='191' column='1'/>
      <parameter is-variadic='yes'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* libiberty_concat_ptr -->
    <var-decl name='libiberty_concat_ptr' type-id='type-id-51' mangled-name='libiberty_concat_ptr' visibility='default' filepath='../.././libiberty/concat.c' line='134' column='1' elf-symbol-id='libiberty_concat_ptr'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/cp-demangle.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- const demangle_builtin_type_info[33] -->
    <array-type-def dimensions='1' type-id='type-id-440' size-in-bits='8448' id='type-id-441'>
      <!-- <anonymous range>[33] -->
      <subrange length='33' type-id='type-id-4' id='type-id-442'/>
    </array-type-def>
    <!-- const demangle_operator_info[58] -->
    <array-type-def dimensions='1' type-id='type-id-443' size-in-bits='11136' id='type-id-444'>
      <!-- <anonymous range>[58] -->
      <subrange length='58' type-id='type-id-4' id='type-id-445'/>
    </array-type-def>
    <!-- demangle_builtin_type_info[33] -->
    <array-type-def dimensions='1' type-id='type-id-446' size-in-bits='8448' id='type-id-447'>
      <!-- <anonymous range>[33] -->
      <subrange length='33' type-id='type-id-4' id='type-id-442'/>
    </array-type-def>
    <!-- demangle_operator_info[58] -->
    <array-type-def dimensions='1' type-id='type-id-448' size-in-bits='11136' id='type-id-449'>
      <!-- <anonymous range>[58] -->
      <subrange length='58' type-id='type-id-4' id='type-id-445'/>
    </array-type-def>
    <!-- short int -->
    <type-decl name='short int' size-in-bits='16' id='type-id-450'/>
    <!-- struct demangle_component -->
    <class-decl name='demangle_component' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='434' column='1' id='type-id-451'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- demangle_component_type demangle_component::type -->
        <var-decl name='type' type-id='type-id-452' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='437' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- union {struct {const char* s; int len;} s_name; struct {const demangle_operator_info* op;} s_operator; struct {int args; demangle_component* name;} s_extended_operator; struct {demangle_component* length; short int accum; short int sat;} s_fixed; struct {gnu_v3_ctor_kinds kind; demangle_component* name;} s_ctor; struct {gnu_v3_dtor_kinds kind; demangle_component* name;} s_dtor; struct {const demangle_builtin_type_info* type;} s_builtin; struct {const char* string; int len;} s_string; struct {long int number;} s_number; struct {int character;} s_character; struct {demangle_component* left; demangle_component* right;} s_binary; struct {demangle_component* sub; int num;} s_unary_num;} demangle_component::u -->
        <var-decl name='u' type-id='type-id-453' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='541' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum demangle_component_type -->
    <enum-decl name='demangle_component_type' filepath='../.././libiberty/../include/demangle.h' line='215' column='1' id='type-id-452'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='DEMANGLE_COMPONENT_NAME' value='0'/>
      <enumerator name='DEMANGLE_COMPONENT_QUAL_NAME' value='1'/>
      <enumerator name='DEMANGLE_COMPONENT_LOCAL_NAME' value='2'/>
      <enumerator name='DEMANGLE_COMPONENT_TYPED_NAME' value='3'/>
      <enumerator name='DEMANGLE_COMPONENT_TEMPLATE' value='4'/>
      <enumerator name='DEMANGLE_COMPONENT_TEMPLATE_PARAM' value='5'/>
      <enumerator name='DEMANGLE_COMPONENT_FUNCTION_PARAM' value='6'/>
      <enumerator name='DEMANGLE_COMPONENT_CTOR' value='7'/>
      <enumerator name='DEMANGLE_COMPONENT_DTOR' value='8'/>
      <enumerator name='DEMANGLE_COMPONENT_VTABLE' value='9'/>
      <enumerator name='DEMANGLE_COMPONENT_VTT' value='10'/>
      <enumerator name='DEMANGLE_COMPONENT_CONSTRUCTION_VTABLE' value='11'/>
      <enumerator name='DEMANGLE_COMPONENT_TYPEINFO' value='12'/>
      <enumerator name='DEMANGLE_COMPONENT_TYPEINFO_NAME' value='13'/>
      <enumerator name='DEMANGLE_COMPONENT_TYPEINFO_FN' value='14'/>
      <enumerator name='DEMANGLE_COMPONENT_THUNK' value='15'/>
      <enumerator name='DEMANGLE_COMPONENT_VIRTUAL_THUNK' value='16'/>
      <enumerator name='DEMANGLE_COMPONENT_COVARIANT_THUNK' value='17'/>
      <enumerator name='DEMANGLE_COMPONENT_JAVA_CLASS' value='18'/>
      <enumerator name='DEMANGLE_COMPONENT_GUARD' value='19'/>
      <enumerator name='DEMANGLE_COMPONENT_REFTEMP' value='20'/>
      <enumerator name='DEMANGLE_COMPONENT_HIDDEN_ALIAS' value='21'/>
      <enumerator name='DEMANGLE_COMPONENT_SUB_STD' value='22'/>
      <enumerator name='DEMANGLE_COMPONENT_RESTRICT' value='23'/>
      <enumerator name='DEMANGLE_COMPONENT_VOLATILE' value='24'/>
      <enumerator name='DEMANGLE_COMPONENT_CONST' value='25'/>
      <enumerator name='DEMANGLE_COMPONENT_RESTRICT_THIS' value='26'/>
      <enumerator name='DEMANGLE_COMPONENT_VOLATILE_THIS' value='27'/>
      <enumerator name='DEMANGLE_COMPONENT_CONST_THIS' value='28'/>
      <enumerator name='DEMANGLE_COMPONENT_VENDOR_TYPE_QUAL' value='29'/>
      <enumerator name='DEMANGLE_COMPONENT_POINTER' value='30'/>
      <enumerator name='DEMANGLE_COMPONENT_REFERENCE' value='31'/>
      <enumerator name='DEMANGLE_COMPONENT_RVALUE_REFERENCE' value='32'/>
      <enumerator name='DEMANGLE_COMPONENT_COMPLEX' value='33'/>
      <enumerator name='DEMANGLE_COMPONENT_IMAGINARY' value='34'/>
      <enumerator name='DEMANGLE_COMPONENT_BUILTIN_TYPE' value='35'/>
      <enumerator name='DEMANGLE_COMPONENT_VENDOR_TYPE' value='36'/>
      <enumerator name='DEMANGLE_COMPONENT_FUNCTION_TYPE' value='37'/>
      <enumerator name='DEMANGLE_COMPONENT_ARRAY_TYPE' value='38'/>
      <enumerator name='DEMANGLE_COMPONENT_PTRMEM_TYPE' value='39'/>
      <enumerator name='DEMANGLE_COMPONENT_FIXED_TYPE' value='40'/>
      <enumerator name='DEMANGLE_COMPONENT_VECTOR_TYPE' value='41'/>
      <enumerator name='DEMANGLE_COMPONENT_ARGLIST' value='42'/>
      <enumerator name='DEMANGLE_COMPONENT_TEMPLATE_ARGLIST' value='43'/>
      <enumerator name='DEMANGLE_COMPONENT_INITIALIZER_LIST' value='44'/>
      <enumerator name='DEMANGLE_COMPONENT_OPERATOR' value='45'/>
      <enumerator name='DEMANGLE_COMPONENT_EXTENDED_OPERATOR' value='46'/>
      <enumerator name='DEMANGLE_COMPONENT_CAST' value='47'/>
      <enumerator name='DEMANGLE_COMPONENT_NULLARY' value='48'/>
      <enumerator name='DEMANGLE_COMPONENT_UNARY' value='49'/>
      <enumerator name='DEMANGLE_COMPONENT_BINARY' value='50'/>
      <enumerator name='DEMANGLE_COMPONENT_BINARY_ARGS' value='51'/>
      <enumerator name='DEMANGLE_COMPONENT_TRINARY' value='52'/>
      <enumerator name='DEMANGLE_COMPONENT_TRINARY_ARG1' value='53'/>
      <enumerator name='DEMANGLE_COMPONENT_TRINARY_ARG2' value='54'/>
      <enumerator name='DEMANGLE_COMPONENT_LITERAL' value='55'/>
      <enumerator name='DEMANGLE_COMPONENT_LITERAL_NEG' value='56'/>
      <enumerator name='DEMANGLE_COMPONENT_JAVA_RESOURCE' value='57'/>
      <enumerator name='DEMANGLE_COMPONENT_COMPOUND_NAME' value='58'/>
      <enumerator name='DEMANGLE_COMPONENT_CHARACTER' value='59'/>
      <enumerator name='DEMANGLE_COMPONENT_NUMBER' value='60'/>
      <enumerator name='DEMANGLE_COMPONENT_DECLTYPE' value='61'/>
      <enumerator name='DEMANGLE_COMPONENT_GLOBAL_CONSTRUCTORS' value='62'/>
      <enumerator name='DEMANGLE_COMPONENT_GLOBAL_DESTRUCTORS' value='63'/>
      <enumerator name='DEMANGLE_COMPONENT_LAMBDA' value='64'/>
      <enumerator name='DEMANGLE_COMPONENT_DEFAULT_ARG' value='65'/>
      <enumerator name='DEMANGLE_COMPONENT_UNNAMED_TYPE' value='66'/>
      <enumerator name='DEMANGLE_COMPONENT_TRANSACTION_CLONE' value='67'/>
      <enumerator name='DEMANGLE_COMPONENT_NONTRANSACTION_CLONE' value='68'/>
      <enumerator name='DEMANGLE_COMPONENT_PACK_EXPANSION' value='69'/>
      <enumerator name='DEMANGLE_COMPONENT_CLONE' value='70'/>
    </enum-decl>
    <!-- union {struct {const char* s; int len;} s_name; struct {const demangle_operator_info* op;} s_operator; struct {int args; demangle_component* name;} s_extended_operator; struct {demangle_component* length; short int accum; short int sat;} s_fixed; struct {gnu_v3_ctor_kinds kind; demangle_component* name;} s_ctor; struct {gnu_v3_dtor_kinds kind; demangle_component* name;} s_dtor; struct {const demangle_builtin_type_info* type;} s_builtin; struct {const char* string; int len;} s_string; struct {long int number;} s_number; struct {int character;} s_character; struct {demangle_component* left; demangle_component* right;} s_binary; struct {demangle_component* sub; int num;} s_unary_num;} -->
    <union-decl name='__anonymous_union__' size-in-bits='128' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='439' column='1' id='type-id-453'>
      <data-member access='public'>
        <!-- struct {const char* s; int len;} s_name -->
        <var-decl name='s_name' type-id='type-id-454' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='448' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {const demangle_operator_info* op;} s_operator -->
        <var-decl name='s_operator' type-id='type-id-455' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='455' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {int args; demangle_component* name;} s_extended_operator -->
        <var-decl name='s_extended_operator' type-id='type-id-456' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='464' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {demangle_component* length; short int accum; short int sat;} s_fixed -->
        <var-decl name='s_fixed' type-id='type-id-457' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='475' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {gnu_v3_ctor_kinds kind; demangle_component* name;} s_ctor -->
        <var-decl name='s_ctor' type-id='type-id-458' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='484' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {gnu_v3_dtor_kinds kind; demangle_component* name;} s_dtor -->
        <var-decl name='s_dtor' type-id='type-id-459' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='493' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {const demangle_builtin_type_info* type;} s_builtin -->
        <var-decl name='s_builtin' type-id='type-id-460' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='500' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {const char* string; int len;} s_string -->
        <var-decl name='s_string' type-id='type-id-461' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='509' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {long int number;} s_number -->
        <var-decl name='s_number' type-id='type-id-462' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='516' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {int character;} s_character -->
        <var-decl name='s_character' type-id='type-id-463' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='522' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {demangle_component* left; demangle_component* right;} s_binary -->
        <var-decl name='s_binary' type-id='type-id-464' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='531' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {demangle_component* sub; int num;} s_unary_num -->
        <var-decl name='s_unary_num' type-id='type-id-465' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='539' column='1'/>
      </data-member>
    </union-decl>
    <!-- struct {const char* s; int len;} -->
    <class-decl name='__anonymous_struct__' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='442' column='1' id='type-id-454'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* s -->
        <var-decl name='s' type-id='type-id-15' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='446' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='447' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {const demangle_operator_info* op;} -->
    <class-decl name='__anonymous_struct__1' size-in-bits='64' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='451' column='1' id='type-id-455'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const demangle_operator_info* op -->
        <var-decl name='op' type-id='type-id-466' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='454' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct demangle_operator_info -->
    <class-decl name='demangle_operator_info' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='37' column='1' id='type-id-448'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* demangle_operator_info::code -->
        <var-decl name='code' type-id='type-id-15' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='40' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* demangle_operator_info::name -->
        <var-decl name='name' type-id='type-id-15' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='42' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int demangle_operator_info::len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='44' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='160'>
        <!-- int demangle_operator_info::args -->
        <var-decl name='args' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='46' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {int args; demangle_component* name;} -->
    <class-decl name='__anonymous_struct__2' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='458' column='1' id='type-id-456'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int args -->
        <var-decl name='args' type-id='type-id-18' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='461' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- demangle_component* name -->
        <var-decl name='name' type-id='type-id-467' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='463' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {demangle_component* length; short int accum; short int sat;} -->
    <class-decl name='__anonymous_struct__3' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='467' column='1' id='type-id-457'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- demangle_component* length -->
        <var-decl name='length' type-id='type-id-467' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='470' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- short int accum -->
        <var-decl name='accum' type-id='type-id-450' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='472' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='80'>
        <!-- short int sat -->
        <var-decl name='sat' type-id='type-id-450' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='474' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {gnu_v3_ctor_kinds kind; demangle_component* name;} -->
    <class-decl name='__anonymous_struct__4' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='478' column='1' id='type-id-458'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- gnu_v3_ctor_kinds kind -->
        <var-decl name='kind' type-id='type-id-468' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='481' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- demangle_component* name -->
        <var-decl name='name' type-id='type-id-467' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='483' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum gnu_v3_ctor_kinds -->
    <enum-decl name='gnu_v3_ctor_kinds' filepath='../.././libiberty/../include/demangle.h' line='172' column='1' id='type-id-468'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='gnu_v3_complete_object_ctor' value='1'/>
      <enumerator name='gnu_v3_base_object_ctor' value='2'/>
      <enumerator name='gnu_v3_complete_object_allocating_ctor' value='3'/>
      <enumerator name='gnu_v3_object_ctor_group' value='4'/>
    </enum-decl>
    <!-- struct {gnu_v3_dtor_kinds kind; demangle_component* name;} -->
    <class-decl name='__anonymous_struct__5' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='487' column='1' id='type-id-459'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- gnu_v3_dtor_kinds kind -->
        <var-decl name='kind' type-id='type-id-469' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='490' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- demangle_component* name -->
        <var-decl name='name' type-id='type-id-467' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='492' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum gnu_v3_dtor_kinds -->
    <enum-decl name='gnu_v3_dtor_kinds' filepath='../.././libiberty/../include/demangle.h' line='187' column='1' id='type-id-469'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='gnu_v3_deleting_dtor' value='1'/>
      <enumerator name='gnu_v3_complete_object_dtor' value='2'/>
      <enumerator name='gnu_v3_base_object_dtor' value='3'/>
      <enumerator name='gnu_v3_object_dtor_group' value='4'/>
    </enum-decl>
    <!-- struct {const demangle_builtin_type_info* type;} -->
    <class-decl name='__anonymous_struct__6' size-in-bits='64' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='496' column='1' id='type-id-460'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const demangle_builtin_type_info* type -->
        <var-decl name='type' type-id='type-id-470' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='499' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct demangle_builtin_type_info -->
    <class-decl name='demangle_builtin_type_info' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='77' column='1' id='type-id-446'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* demangle_builtin_type_info::name -->
        <var-decl name='name' type-id='type-id-15' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='80' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int demangle_builtin_type_info::len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='82' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char* demangle_builtin_type_info::java_name -->
        <var-decl name='java_name' type-id='type-id-15' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='84' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int demangle_builtin_type_info::java_len -->
        <var-decl name='java_len' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='86' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- d_builtin_type_print demangle_builtin_type_info::print -->
        <var-decl name='print' type-id='type-id-471' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='88' column='1'/>
      </data-member>
    </class-decl>
    <!-- enum d_builtin_type_print -->
    <enum-decl name='d_builtin_type_print' filepath='../.././libiberty/cp-demangle.h' line='51' column='1' id='type-id-471'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='D_PRINT_DEFAULT' value='0'/>
      <enumerator name='D_PRINT_INT' value='1'/>
      <enumerator name='D_PRINT_UNSIGNED' value='2'/>
      <enumerator name='D_PRINT_LONG' value='3'/>
      <enumerator name='D_PRINT_UNSIGNED_LONG' value='4'/>
      <enumerator name='D_PRINT_LONG_LONG' value='5'/>
      <enumerator name='D_PRINT_UNSIGNED_LONG_LONG' value='6'/>
      <enumerator name='D_PRINT_BOOL' value='7'/>
      <enumerator name='D_PRINT_FLOAT' value='8'/>
      <enumerator name='D_PRINT_VOID' value='9'/>
    </enum-decl>
    <!-- struct {const char* string; int len;} -->
    <class-decl name='__anonymous_struct__7' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='503' column='1' id='type-id-461'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* string -->
        <var-decl name='string' type-id='type-id-15' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='506' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int len -->
        <var-decl name='len' type-id='type-id-18' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='508' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {long int number;} -->
    <class-decl name='__anonymous_struct__8' size-in-bits='64' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='512' column='1' id='type-id-462'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- long int number -->
        <var-decl name='number' type-id='type-id-21' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='515' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {int character;} -->
    <class-decl name='__anonymous_struct__9' size-in-bits='32' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='519' column='1' id='type-id-463'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int character -->
        <var-decl name='character' type-id='type-id-18' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='521' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {demangle_component* left; demangle_component* right;} -->
    <class-decl name='__anonymous_struct__10' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='525' column='1' id='type-id-464'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- demangle_component* left -->
        <var-decl name='left' type-id='type-id-467' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='528' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- demangle_component* right -->
        <var-decl name='right' type-id='type-id-467' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='530' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {demangle_component* sub; int num;} -->
    <class-decl name='__anonymous_struct__11' size-in-bits='128' is-struct='yes' is-anonymous='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='533' column='1' id='type-id-465'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- demangle_component* sub -->
        <var-decl name='sub' type-id='type-id-467' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='536' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int num -->
        <var-decl name='num' type-id='type-id-18' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='538' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct d_info -->
    <class-decl name='d_info' size-in-bits='704' is-struct='yes' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='93' column='1' id='type-id-472'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* d_info::s -->
        <var-decl name='s' type-id='type-id-15' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='96' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* d_info::send -->
        <var-decl name='send' type-id='type-id-15' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='98' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- int d_info::options -->
        <var-decl name='options' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='100' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- const char* d_info::n -->
        <var-decl name='n' type-id='type-id-15' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='102' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- demangle_component* d_info::comps -->
        <var-decl name='comps' type-id='type-id-467' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='104' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int d_info::next_comp -->
        <var-decl name='next_comp' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='352'>
        <!-- int d_info::num_comps -->
        <var-decl name='num_comps' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='108' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- demangle_component** d_info::subs -->
        <var-decl name='subs' type-id='type-id-473' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='110' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- int d_info::next_sub -->
        <var-decl name='next_sub' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='112' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='480'>
        <!-- int d_info::num_subs -->
        <var-decl name='num_subs' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='114' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- int d_info::did_subs -->
        <var-decl name='did_subs' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='118' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- demangle_component* d_info::last_name -->
        <var-decl name='last_name' type-id='type-id-467' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='120' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- int d_info::expansion -->
        <var-decl name='expansion' type-id='type-id-18' visibility='default' filepath='../.././libiberty/cp-demangle.h' line='124' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef void (const char*, typedef size_t, void*)* demangle_callbackref -->
    <typedef-decl name='demangle_callbackref' type-id='type-id-474' filepath='../.././libiberty/../include/demangle.h' line='150' column='1' id='type-id-475'/>
    <!-- const demangle_builtin_type_info -->
    <qualified-type-def type-id='type-id-446' const='yes' id='type-id-440'/>
    <!-- const demangle_builtin_type_info* -->
    <pointer-type-def type-id='type-id-440' size-in-bits='64' id='type-id-470'/>
    <!-- const demangle_component -->
    <qualified-type-def type-id='type-id-451' const='yes' id='type-id-476'/>
    <!-- const demangle_component* -->
    <pointer-type-def type-id='type-id-476' size-in-bits='64' id='type-id-477'/>
    <!-- const demangle_operator_info -->
    <qualified-type-def type-id='type-id-448' const='yes' id='type-id-443'/>
    <!-- const demangle_operator_info* -->
    <pointer-type-def type-id='type-id-443' size-in-bits='64' id='type-id-466'/>
    <!-- d_info* -->
    <pointer-type-def type-id='type-id-472' size-in-bits='64' id='type-id-478'/>
    <!-- demangle_component* -->
    <pointer-type-def type-id='type-id-451' size-in-bits='64' id='type-id-467'/>
    <!-- demangle_component** -->
    <pointer-type-def type-id='type-id-467' size-in-bits='64' id='type-id-473'/>
    <!-- void (const char*, typedef size_t, void*)* -->
    <pointer-type-def type-id='type-id-479' size-in-bits='64' id='type-id-474'/>
    <!-- int cplus_demangle_fill_name(demangle_component*, const char*, int) -->
    <function-decl name='cplus_demangle_fill_name' mangled-name='cplus_demangle_fill_name' filepath='../.././libiberty/cp-demangle.c' line='711' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_fill_name'>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='type-id-467' name='p' filepath='../.././libiberty/cp-demangle.c' line='711' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='s' filepath='../.././libiberty/cp-demangle.c' line='711' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='len' filepath='../.././libiberty/cp-demangle.c' line='711' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int cplus_demangle_fill_extended_operator(demangle_component*, int, demangle_component*) -->
    <function-decl name='cplus_demangle_fill_extended_operator' mangled-name='cplus_demangle_fill_extended_operator' filepath='../.././libiberty/cp-demangle.c' line='725' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_fill_extended_operator'>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='type-id-467' name='p' filepath='../.././libiberty/cp-demangle.c' line='725' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='args' filepath='../.././libiberty/cp-demangle.c' line='725' column='1'/>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='type-id-467' name='name' filepath='../.././libiberty/cp-demangle.c' line='726' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int cplus_demangle_fill_ctor(demangle_component*, gnu_v3_ctor_kinds, demangle_component*) -->
    <function-decl name='cplus_demangle_fill_ctor' mangled-name='cplus_demangle_fill_ctor' filepath='../.././libiberty/cp-demangle.c' line='740' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_fill_ctor'>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='type-id-467' name='p' filepath='../.././libiberty/cp-demangle.c' line='740' column='1'/>
      <!-- parameter of type 'enum gnu_v3_ctor_kinds' -->
      <parameter type-id='type-id-468' name='kind' filepath='../.././libiberty/cp-demangle.c' line='741' column='1'/>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='type-id-467' name='name' filepath='../.././libiberty/cp-demangle.c' line='742' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int cplus_demangle_fill_dtor(demangle_component*, gnu_v3_dtor_kinds, demangle_component*) -->
    <function-decl name='cplus_demangle_fill_dtor' mangled-name='cplus_demangle_fill_dtor' filepath='../.././libiberty/cp-demangle.c' line='759' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_fill_dtor'>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='type-id-467' name='p' filepath='../.././libiberty/cp-demangle.c' line='759' column='1'/>
      <!-- parameter of type 'enum gnu_v3_dtor_kinds' -->
      <parameter type-id='type-id-469' name='kind' filepath='../.././libiberty/cp-demangle.c' line='760' column='1'/>
      <!-- parameter of type 'demangle_component*' -->
      <parameter type-id='type-id-467' name='name' filepath='../.././libiberty/cp-demangle.c' line='761' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- demangle_component* cplus_demangle_type(d_info*) -->
    <function-decl name='cplus_demangle_type' mangled-name='cplus_demangle_type' filepath='../.././libiberty/cp-demangle.c' line='2092' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_type'>
      <!-- parameter of type 'd_info*' -->
      <parameter type-id='type-id-478' name='di' filepath='../.././libiberty/cp-demangle.c' line='2092' column='1'/>
      <!-- demangle_component* -->
      <return type-id='type-id-467'/>
    </function-decl>
    <!-- demangle_component* cplus_demangle_mangled_name(d_info*, int) -->
    <function-decl name='cplus_demangle_mangled_name' mangled-name='cplus_demangle_mangled_name' filepath='../.././libiberty/cp-demangle.c' line='1063' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_mangled_name'>
      <!-- parameter of type 'd_info*' -->
      <parameter type-id='type-id-478' name='di' filepath='../.././libiberty/cp-demangle.c' line='1063' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='top_level' filepath='../.././libiberty/cp-demangle.c' line='1063' column='1'/>
      <!-- demangle_component* -->
      <return type-id='type-id-467'/>
    </function-decl>
    <!-- int cplus_demangle_print_callback(int, const demangle_component*, demangle_callbackref, void*) -->
    <function-decl name='cplus_demangle_print_callback' mangled-name='cplus_demangle_print_callback' filepath='../.././libiberty/cp-demangle.c' line='3603' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_print_callback'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='options' filepath='../.././libiberty/cp-demangle.c' line='3603' column='1'/>
      <!-- parameter of type 'const demangle_component*' -->
      <parameter type-id='type-id-477' name='dc' filepath='../.././libiberty/cp-demangle.c' line='3604' column='1'/>
      <!-- parameter of type 'typedef demangle_callbackref' -->
      <parameter type-id='type-id-475' name='callback' filepath='../.././libiberty/cp-demangle.c' line='3605' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='opaque' filepath='../.././libiberty/cp-demangle.c' line='3605' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- char* cplus_demangle_print(int, const demangle_component*, int, size_t*) -->
    <function-decl name='cplus_demangle_print' mangled-name='cplus_demangle_print' filepath='../.././libiberty/cp-demangle.c' line='3628' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_print'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='options' filepath='../.././libiberty/cp-demangle.c' line='3628' column='1'/>
      <!-- parameter of type 'const demangle_component*' -->
      <parameter type-id='type-id-477' name='dc' filepath='../.././libiberty/cp-demangle.c' line='3628' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='estimate' filepath='../.././libiberty/cp-demangle.c' line='3629' column='1'/>
      <!-- parameter of type 'size_t*' -->
      <parameter type-id='type-id-211' name='palc' filepath='../.././libiberty/cp-demangle.c' line='3629' column='1'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- void cplus_demangle_init_info(const char*, int, size_t, d_info*) -->
    <function-decl name='cplus_demangle_init_info' mangled-name='cplus_demangle_init_info' filepath='../.././libiberty/cp-demangle.c' line='5131' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_init_info'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='mangled' filepath='../.././libiberty/cp-demangle.c' line='5131' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='options' filepath='../.././libiberty/cp-demangle.c' line='5131' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libiberty/cp-demangle.c' line='5131' column='1'/>
      <!-- parameter of type 'd_info*' -->
      <parameter type-id='type-id-478' name='di' filepath='../.././libiberty/cp-demangle.c' line='5132' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- int cplus_demangle_v3_callback(const char*, int, demangle_callbackref, void*) -->
    <function-decl name='cplus_demangle_v3_callback' mangled-name='cplus_demangle_v3_callback' filepath='../.././libiberty/cp-demangle.c' line='5422' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_v3_callback'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='mangled' filepath='../.././libiberty/cp-demangle.c' line='5422' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='options' filepath='../.././libiberty/cp-demangle.c' line='5422' column='1'/>
      <!-- parameter of type 'typedef demangle_callbackref' -->
      <parameter type-id='type-id-475' name='callback' filepath='../.././libiberty/cp-demangle.c' line='5423' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='opaque' filepath='../.././libiberty/cp-demangle.c' line='5423' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int java_demangle_v3_callback(const char*, demangle_callbackref, void*) -->
    <function-decl name='java_demangle_v3_callback' mangled-name='java_demangle_v3_callback' filepath='../.././libiberty/cp-demangle.c' line='5443' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='java_demangle_v3_callback'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='mangled' filepath='../.././libiberty/cp-demangle.c' line='5443' column='1'/>
      <!-- parameter of type 'typedef demangle_callbackref' -->
      <parameter type-id='type-id-475' name='callback' filepath='../.././libiberty/cp-demangle.c' line='5444' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='opaque' filepath='../.././libiberty/cp-demangle.c' line='5444' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- gnu_v3_ctor_kinds is_gnu_v3_mangled_ctor(const char*) -->
    <function-decl name='is_gnu_v3_mangled_ctor' mangled-name='is_gnu_v3_mangled_ctor' filepath='../.././libiberty/cp-demangle.c' line='5530' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='is_gnu_v3_mangled_ctor'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././libiberty/cp-demangle.c' line='5530' column='1'/>
      <!-- enum gnu_v3_ctor_kinds -->
      <return type-id='type-id-468'/>
    </function-decl>
    <!-- gnu_v3_dtor_kinds is_gnu_v3_mangled_dtor(const char*) -->
    <function-decl name='is_gnu_v3_mangled_dtor' mangled-name='is_gnu_v3_mangled_dtor' filepath='../.././libiberty/cp-demangle.c' line='5545' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='is_gnu_v3_mangled_dtor'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././libiberty/cp-demangle.c' line='5545' column='1'/>
      <!-- enum gnu_v3_dtor_kinds -->
      <return type-id='type-id-469'/>
    </function-decl>
    <!-- const demangle_operator_info cplus_demangle_operators[58] -->
    <var-decl name='cplus_demangle_operators' type-id='type-id-444' mangled-name='cplus_demangle_operators' visibility='default' filepath='../.././libiberty/cp-demangle.c' line='1576' column='1' elf-symbol-id='cplus_demangle_operators'/>
    <!-- const demangle_builtin_type_info cplus_demangle_builtin_types[33] -->
    <var-decl name='cplus_demangle_builtin_types' type-id='type-id-441' mangled-name='cplus_demangle_builtin_types' visibility='default' filepath='../.././libiberty/cp-demangle.c' line='2050' column='1' elf-symbol-id='cplus_demangle_builtin_types'/>
    <!-- void* realloc(void*, size_t) -->
    <function-decl name='realloc' filepath='/usr/include/stdlib.h' line='485' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void (const char*, size_t, void*) -->
    <function-type size-in-bits='64' id='type-id-479'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/cplus-dem.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- const demangler_engine[11] -->
    <array-type-def dimensions='1' type-id='type-id-480' size-in-bits='2112' id='type-id-481'>
      <!-- <anonymous range>[11] -->
      <subrange length='11' type-id='type-id-4' id='type-id-482'/>
    </array-type-def>
    <!-- demangler_engine[11] -->
    <array-type-def dimensions='1' type-id='type-id-483' size-in-bits='2112' id='type-id-484'>
      <!-- <anonymous range>[11] -->
      <subrange length='11' type-id='type-id-4' id='type-id-482'/>
    </array-type-def>
    <!-- enum demangling_styles -->
    <enum-decl name='demangling_styles' filepath='../.././libiberty/../include/demangle.h' line='78' column='1' id='type-id-485'>
      <underlying-type type-id='type-id-26'/>
      <enumerator name='no_demangling' value='-1'/>
      <enumerator name='unknown_demangling' value='0'/>
      <enumerator name='auto_demangling' value='256'/>
      <enumerator name='gnu_demangling' value='512'/>
      <enumerator name='lucid_demangling' value='1024'/>
      <enumerator name='arm_demangling' value='2048'/>
      <enumerator name='hp_demangling' value='4096'/>
      <enumerator name='edg_demangling' value='8192'/>
      <enumerator name='gnu_v3_demangling' value='16384'/>
      <enumerator name='java_demangling' value='4'/>
      <enumerator name='gnat_demangling' value='32768'/>
    </enum-decl>
    <!-- struct demangler_engine -->
    <class-decl name='demangler_engine' size-in-bits='192' is-struct='yes' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='122' column='1' id='type-id-483'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- const char* const demangler_engine::demangling_style_name -->
        <var-decl name='demangling_style_name' type-id='type-id-486' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='124' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const demangling_styles demangler_engine::demangling_style -->
        <var-decl name='demangling_style' type-id='type-id-487' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='125' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char* const demangler_engine::demangling_style_doc -->
        <var-decl name='demangling_style_doc' type-id='type-id-486' visibility='default' filepath='../.././libiberty/../include/demangle.h' line='126' column='1'/>
      </data-member>
    </class-decl>
    <!-- const char* const -->
    <qualified-type-def type-id='type-id-15' const='yes' id='type-id-486'/>
    <!-- const demangler_engine -->
    <qualified-type-def type-id='type-id-483' const='yes' id='type-id-480'/>
    <!-- const demangling_styles -->
    <qualified-type-def type-id='type-id-485' const='yes' id='type-id-487'/>
    <!-- void set_cplus_marker_for_demangling(int) -->
    <function-decl name='set_cplus_marker_for_demangling' mangled-name='set_cplus_marker_for_demangling' filepath='../.././libiberty/cplus-dem.c' line='100' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='set_cplus_marker_for_demangling'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='ch' filepath='../.././libiberty/cplus-dem.c' line='100' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const char* cplus_mangle_opname(const char*, int) -->
    <function-decl name='cplus_mangle_opname' mangled-name='cplus_mangle_opname' filepath='../.././libiberty/cplus-dem.c' line='765' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_mangle_opname'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='opname' filepath='../.././libiberty/cplus-dem.c' line='765' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='options' filepath='../.././libiberty/cplus-dem.c' line='765' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- demangling_styles cplus_demangle_set_style(demangling_styles) -->
    <function-decl name='cplus_demangle_set_style' mangled-name='cplus_demangle_set_style' filepath='../.././libiberty/cplus-dem.c' line='785' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_set_style'>
      <!-- parameter of type 'enum demangling_styles' -->
      <parameter type-id='type-id-485' name='style' filepath='../.././libiberty/cplus-dem.c' line='785' column='1'/>
      <!-- enum demangling_styles -->
      <return type-id='type-id-485'/>
    </function-decl>
    <!-- demangling_styles cplus_demangle_name_to_style(const char*) -->
    <function-decl name='cplus_demangle_name_to_style' mangled-name='cplus_demangle_name_to_style' filepath='../.././libiberty/cplus-dem.c' line='802' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_name_to_style'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././libiberty/cplus-dem.c' line='802' column='1'/>
      <!-- enum demangling_styles -->
      <return type-id='type-id-485'/>
    </function-decl>
    <!-- char* ada_demangle(const char*, int) -->
    <function-decl name='ada_demangle' mangled-name='ada_demangle' filepath='../.././libiberty/cplus-dem.c' line='881' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='ada_demangle'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='mangled' filepath='../.././libiberty/cplus-dem.c' line='881' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='option' filepath='../.././libiberty/cplus-dem.c' line='881' column='1'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- int cplus_demangle_opname(const char*, char*, int) -->
    <function-decl name='cplus_demangle_opname' mangled-name='cplus_demangle_opname' filepath='../.././libiberty/cplus-dem.c' line='632' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_opname'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='opname' filepath='../.././libiberty/cplus-dem.c' line='632' column='1'/>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51' name='result' filepath='../.././libiberty/cplus-dem.c' line='632' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='options' filepath='../.././libiberty/cplus-dem.c' line='632' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- demangling_styles current_demangling_style -->
    <var-decl name='current_demangling_style' type-id='type-id-485' mangled-name='current_demangling_style' visibility='default' filepath='../.././libiberty/cplus-dem.c' line='93' column='1' elf-symbol-id='current_demangling_style'/>
    <!-- const demangler_engine libiberty_demanglers[11] -->
    <var-decl name='libiberty_demanglers' type-id='type-id-481' mangled-name='libiberty_demanglers' visibility='default' filepath='../.././libiberty/cplus-dem.c' line='246' column='1' elf-symbol-id='libiberty_demanglers'/>
    <!-- char* cplus_demangle_v3(const char*, int) -->
    <function-decl name='cplus_demangle_v3' mangled-name='cplus_demangle_v3' filepath='../.././libiberty/../include/demangle.h' line='160' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='cplus_demangle_v3'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* java_demangle_v3(const char*) -->
    <function-decl name='java_demangle_v3' mangled-name='java_demangle_v3' filepath='../.././libiberty/../include/demangle.h' line='167' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='java_demangle_v3'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- char* strstr(const char*, const char*) -->
    <function-decl name='strstr' filepath='/usr/include/string.h' line='342' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/filename_cmp.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/fopen_unlocked.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- void unlock_stream(FILE*) -->
    <function-decl name='unlock_stream' mangled-name='unlock_stream' filepath='../.././libiberty/fopen_unlocked.c' line='94' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='unlock_stream'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='fp' filepath='../.././libiberty/fopen_unlocked.c' line='94' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- FILE* freopen_unlocked(const char*, const char*, FILE*) -->
    <function-decl name='freopen_unlocked' mangled-name='freopen_unlocked' filepath='../.././libiberty/fopen_unlocked.c' line='124' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='freopen_unlocked'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='path' filepath='../.././libiberty/fopen_unlocked.c' line='124' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='mode' filepath='../.././libiberty/fopen_unlocked.c' line='124' column='1'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89' name='stream' filepath='../.././libiberty/fopen_unlocked.c' line='124' column='1'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
    <!-- int __fsetlocking(FILE*, int) -->
    <function-decl name='__fsetlocking' filepath='/usr/include/stdio_ext.h' line='83' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- FILE* fdopen(int, const char*) -->
    <function-decl name='fdopen' filepath='/usr/include/stdio.h' line='305' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
    <!-- FILE* freopen(const char*, const char*, FILE*) -->
    <function-decl name='freopen' filepath='/usr/include/stdio.h' line='277' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/getpwd.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- char* getcwd(char*, size_t) -->
    <function-decl name='getcwd' filepath='/usr/include/unistd.h' line='508' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/hashtab.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- double -->
    <type-decl name='double' size-in-bits='64' id='type-id-488'/>
    <!-- size_t htab_size(htab_t) -->
    <function-decl name='htab_size' mangled-name='htab_size' filepath='../.././libiberty/hashtab.c' line='224' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_size'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='224' column='1'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- htab_t htab_create_alloc_ex(size_t, htab_hash, htab_eq, htab_del, void*, htab_alloc_with_arg, htab_free_with_arg) -->
    <function-decl name='htab_create_alloc_ex' mangled-name='htab_create_alloc_ex' filepath='../.././libiberty/hashtab.c' line='302' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_create_alloc_ex'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='size' filepath='../.././libiberty/hashtab.c' line='302' column='1'/>
      <!-- parameter of type 'typedef htab_hash' -->
      <parameter type-id='type-id-229' name='hash_f' filepath='../.././libiberty/hashtab.c' line='302' column='1'/>
      <!-- parameter of type 'typedef htab_eq' -->
      <parameter type-id='type-id-231' name='eq_f' filepath='../.././libiberty/hashtab.c' line='302' column='1'/>
      <!-- parameter of type 'typedef htab_del' -->
      <parameter type-id='type-id-232' name='del_f' filepath='../.././libiberty/hashtab.c' line='303' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='alloc_arg' filepath='../.././libiberty/hashtab.c' line='303' column='1'/>
      <!-- parameter of type 'typedef htab_alloc_with_arg' -->
      <parameter type-id='type-id-237' name='alloc_f' filepath='../.././libiberty/hashtab.c' line='304' column='1'/>
      <!-- parameter of type 'typedef htab_free_with_arg' -->
      <parameter type-id='type-id-239' name='free_f' filepath='../.././libiberty/hashtab.c' line='305' column='1'/>
      <!-- typedef htab_t -->
      <return type-id='type-id-227'/>
    </function-decl>
    <!-- htab_t htab_create_typed_alloc(size_t, htab_hash, htab_eq, htab_del, htab_alloc, htab_alloc, htab_free) -->
    <function-decl name='htab_create_typed_alloc' mangled-name='htab_create_typed_alloc' filepath='../.././libiberty/hashtab.c' line='356' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_create_typed_alloc'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='size' filepath='../.././libiberty/hashtab.c' line='356' column='1'/>
      <!-- parameter of type 'typedef htab_hash' -->
      <parameter type-id='type-id-229' name='hash_f' filepath='../.././libiberty/hashtab.c' line='356' column='1'/>
      <!-- parameter of type 'typedef htab_eq' -->
      <parameter type-id='type-id-231' name='eq_f' filepath='../.././libiberty/hashtab.c' line='356' column='1'/>
      <!-- parameter of type 'typedef htab_del' -->
      <parameter type-id='type-id-232' name='del_f' filepath='../.././libiberty/hashtab.c' line='357' column='1'/>
      <!-- parameter of type 'typedef htab_alloc' -->
      <parameter type-id='type-id-234' name='alloc_tab_f' filepath='../.././libiberty/hashtab.c' line='357' column='1'/>
      <!-- parameter of type 'typedef htab_alloc' -->
      <parameter type-id='type-id-234' name='alloc_f' filepath='../.././libiberty/hashtab.c' line='358' column='1'/>
      <!-- parameter of type 'typedef htab_free' -->
      <parameter type-id='type-id-235' name='free_f' filepath='../.././libiberty/hashtab.c' line='358' column='1'/>
      <!-- typedef htab_t -->
      <return type-id='type-id-227'/>
    </function-decl>
    <!-- void htab_set_functions_ex(htab_t, htab_hash, htab_eq, htab_del, void*, htab_alloc_with_arg, htab_free_with_arg) -->
    <function-decl name='htab_set_functions_ex' mangled-name='htab_set_functions_ex' filepath='../.././libiberty/hashtab.c' line='390' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_set_functions_ex'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='390' column='1'/>
      <!-- parameter of type 'typedef htab_hash' -->
      <parameter type-id='type-id-229' name='hash_f' filepath='../.././libiberty/hashtab.c' line='390' column='1'/>
      <!-- parameter of type 'typedef htab_eq' -->
      <parameter type-id='type-id-231' name='eq_f' filepath='../.././libiberty/hashtab.c' line='390' column='1'/>
      <!-- parameter of type 'typedef htab_del' -->
      <parameter type-id='type-id-232' name='del_f' filepath='../.././libiberty/hashtab.c' line='391' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='alloc_arg' filepath='../.././libiberty/hashtab.c' line='391' column='1'/>
      <!-- parameter of type 'typedef htab_alloc_with_arg' -->
      <parameter type-id='type-id-237' name='alloc_f' filepath='../.././libiberty/hashtab.c' line='392' column='1'/>
      <!-- parameter of type 'typedef htab_free_with_arg' -->
      <parameter type-id='type-id-239' name='free_f' filepath='../.././libiberty/hashtab.c' line='392' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- htab_t htab_try_create(size_t, htab_hash, htab_eq, htab_del) -->
    <function-decl name='htab_try_create' mangled-name='htab_try_create' filepath='../.././libiberty/hashtab.c' line='412' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_try_create'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='size' filepath='../.././libiberty/hashtab.c' line='412' column='1'/>
      <!-- parameter of type 'typedef htab_hash' -->
      <parameter type-id='type-id-229' name='hash_f' filepath='../.././libiberty/hashtab.c' line='412' column='1'/>
      <!-- parameter of type 'typedef htab_eq' -->
      <parameter type-id='type-id-231' name='eq_f' filepath='../.././libiberty/hashtab.c' line='412' column='1'/>
      <!-- parameter of type 'typedef htab_del' -->
      <parameter type-id='type-id-232' name='del_f' filepath='../.././libiberty/hashtab.c' line='412' column='1'/>
      <!-- typedef htab_t -->
      <return type-id='type-id-227'/>
    </function-decl>
    <!-- void htab_empty(htab_t) -->
    <function-decl name='htab_empty' mangled-name='htab_empty' filepath='../.././libiberty/hashtab.c' line='447' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_empty'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='447' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void* htab_find(htab_t, void*) -->
    <function-decl name='htab_find' mangled-name='htab_find' filepath='../.././libiberty/hashtab.c' line='628' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_find'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='628' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='element' filepath='../.././libiberty/hashtab.c' line='628' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void** htab_find_slot(htab_t, void*, insert_option) -->
    <function-decl name='htab_find_slot' mangled-name='htab_find_slot' filepath='../.././libiberty/hashtab.c' line='710' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_find_slot'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='710' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='element' filepath='../.././libiberty/hashtab.c' line='710' column='1'/>
      <!-- parameter of type 'enum insert_option' -->
      <parameter type-id='type-id-240' name='insert' filepath='../.././libiberty/hashtab.c' line='710' column='1'/>
      <!-- void** -->
      <return type-id='type-id-100'/>
    </function-decl>
    <!-- void htab_remove_elt_with_hash(htab_t, void*, hashval_t) -->
    <function-decl name='htab_remove_elt_with_hash' mangled-name='htab_remove_elt_with_hash' filepath='../.././libiberty/hashtab.c' line='732' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_remove_elt_with_hash'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='732' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='element' filepath='../.././libiberty/hashtab.c' line='732' column='1'/>
      <!-- parameter of type 'typedef hashval_t' -->
      <parameter type-id='type-id-225' name='hash' filepath='../.././libiberty/hashtab.c' line='732' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void htab_remove_elt(htab_t, void*) -->
    <function-decl name='htab_remove_elt' mangled-name='htab_remove_elt' filepath='../.././libiberty/hashtab.c' line='721' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_remove_elt'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='721' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='element' filepath='../.././libiberty/hashtab.c' line='721' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void htab_clear_slot(htab_t, void**) -->
    <function-decl name='htab_clear_slot' mangled-name='htab_clear_slot' filepath='../.././libiberty/hashtab.c' line='752' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_clear_slot'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='752' column='1'/>
      <!-- parameter of type 'void**' -->
      <parameter type-id='type-id-100' name='slot' filepath='../.././libiberty/hashtab.c' line='752' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void htab_traverse_noresize(htab_t, htab_trav, void*) -->
    <function-decl name='htab_traverse_noresize' mangled-name='htab_traverse_noresize' filepath='../.././libiberty/hashtab.c' line='771' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_traverse_noresize'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='771' column='1'/>
      <!-- parameter of type 'typedef htab_trav' -->
      <parameter type-id='type-id-405' name='callback' filepath='../.././libiberty/hashtab.c' line='771' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='info' filepath='../.././libiberty/hashtab.c' line='771' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- double htab_collisions(htab_t) -->
    <function-decl name='htab_collisions' mangled-name='htab_collisions' filepath='../.././libiberty/hashtab.c' line='807' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='htab_collisions'>
      <!-- parameter of type 'typedef htab_t' -->
      <parameter type-id='type-id-227' name='htab' filepath='../.././libiberty/hashtab.c' line='807' column='1'/>
      <!-- double -->
      <return type-id='type-id-488'/>
    </function-decl>
    <!-- hashval_t iterative_hash(void*, size_t, hashval_t) -->
    <function-decl name='iterative_hash' mangled-name='iterative_hash' filepath='../.././libiberty/hashtab.c' line='931' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='iterative_hash'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='k_in' filepath='../.././libiberty/hashtab.c' line='931' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='length' filepath='../.././libiberty/hashtab.c' line='932' column='1'/>
      <!-- parameter of type 'typedef hashval_t' -->
      <parameter type-id='type-id-225' name='initval' filepath='../.././libiberty/hashtab.c' line='933' column='1'/>
      <!-- typedef hashval_t -->
      <return type-id='type-id-225'/>
    </function-decl>
    <!-- htab_hash htab_hash_pointer -->
    <var-decl name='htab_hash_pointer' type-id='type-id-229' mangled-name='htab_hash_pointer' visibility='default' filepath='../.././libiberty/hashtab.c' line='82' column='1' elf-symbol-id='htab_hash_pointer'/>
    <!-- htab_eq htab_eq_pointer -->
    <var-decl name='htab_eq_pointer' type-id='type-id-231' mangled-name='htab_eq_pointer' visibility='default' filepath='../.././libiberty/hashtab.c' line='83' column='1' elf-symbol-id='htab_eq_pointer'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/hex.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- void hex_init() -->
    <function-decl name='hex_init' mangled-name='hex_init' filepath='../.././libiberty/hex.c' line='159' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='hex_init'>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- const unsigned char _hex_value[256] -->
    <var-decl name='_hex_value' type-id='type-id-414' mangled-name='_hex_value' visibility='default' filepath='../.././libiberty/hex.c' line='75' column='1' elf-symbol-id='_hex_value'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/lbasename.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- const char* unix_lbasename(const char*) -->
    <function-decl name='unix_lbasename' mangled-name='unix_lbasename' filepath='../.././libiberty/lbasename.c' line='49' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='unix_lbasename'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././libiberty/lbasename.c' line='49' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- const char* dos_lbasename(const char*) -->
    <function-decl name='dos_lbasename' mangled-name='dos_lbasename' filepath='../.././libiberty/lbasename.c' line='61' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='dos_lbasename'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='name' filepath='../.././libiberty/lbasename.c' line='61' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/make-temp-file.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- char* choose_tmpdir() -->
    <function-decl name='choose_tmpdir' mangled-name='choose_tmpdir' filepath='../.././libiberty/make-temp-file.c' line='106' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='choose_tmpdir'>
      <!-- char* -->
      <return type-id='type-id-51'/>
    </function-decl>
    <!-- int mkstemps(char*, int) -->
    <function-decl name='mkstemps' filepath='/usr/include/stdlib.h' line='642' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'char*' -->
      <parameter type-id='type-id-51'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/md5.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- md5_uint32[2] -->
    <array-type-def dimensions='1' type-id='type-id-489' size-in-bits='64' id='type-id-490'>
      <!-- <anonymous range>[2] -->
      <subrange length='2' type-id='type-id-4' id='type-id-491'/>
    </array-type-def>
    <!-- struct md5_ctx -->
    <class-decl name='md5_ctx' size-in-bits='1248' is-struct='yes' visibility='default' filepath='../.././libiberty/../include/md5.h' line='85' column='1' id='type-id-492'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- md5_uint32 md5_ctx::A -->
        <var-decl name='A' type-id='type-id-489' visibility='default' filepath='../.././libiberty/../include/md5.h' line='87' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='32'>
        <!-- md5_uint32 md5_ctx::B -->
        <var-decl name='B' type-id='type-id-489' visibility='default' filepath='../.././libiberty/../include/md5.h' line='88' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- md5_uint32 md5_ctx::C -->
        <var-decl name='C' type-id='type-id-489' visibility='default' filepath='../.././libiberty/../include/md5.h' line='89' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='96'>
        <!-- md5_uint32 md5_ctx::D -->
        <var-decl name='D' type-id='type-id-489' visibility='default' filepath='../.././libiberty/../include/md5.h' line='90' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- md5_uint32 md5_ctx::total[2] -->
        <var-decl name='total' type-id='type-id-490' visibility='default' filepath='../.././libiberty/../include/md5.h' line='92' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- md5_uint32 md5_ctx::buflen -->
        <var-decl name='buflen' type-id='type-id-489' visibility='default' filepath='../.././libiberty/../include/md5.h' line='93' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='224'>
        <!-- char md5_ctx::buffer[128] -->
        <var-decl name='buffer' type-id='type-id-3' visibility='default' filepath='../.././libiberty/../include/md5.h' line='94' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef uint32_t md5_uint32 -->
    <typedef-decl name='md5_uint32' type-id='type-id-493' filepath='../.././libiberty/../include/md5.h' line='46' column='1' id='type-id-489'/>
    <!-- typedef unsigned int uint32_t -->
    <typedef-decl name='uint32_t' type-id='type-id-13' filepath='/usr/include/stdint.h' line='52' column='1' id='type-id-493'/>
    <!-- const md5_ctx -->
    <qualified-type-def type-id='type-id-492' const='yes' id='type-id-494'/>
    <!-- const md5_ctx* -->
    <pointer-type-def type-id='type-id-494' size-in-bits='64' id='type-id-495'/>
    <!-- md5_ctx* -->
    <pointer-type-def type-id='type-id-492' size-in-bits='64' id='type-id-496'/>
    <!-- void md5_init_ctx(md5_ctx*) -->
    <function-decl name='md5_init_ctx' mangled-name='md5_init_ctx' filepath='../.././libiberty/md5.c' line='65' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='md5_init_ctx'>
      <!-- parameter of type 'md5_ctx*' -->
      <parameter type-id='type-id-496' name='ctx' filepath='../.././libiberty/md5.c' line='65' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void* md5_read_ctx(const md5_ctx*, void*) -->
    <function-decl name='md5_read_ctx' mangled-name='md5_read_ctx' filepath='../.././libiberty/md5.c' line='82' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='md5_read_ctx'>
      <!-- parameter of type 'const md5_ctx*' -->
      <parameter type-id='type-id-495' name='ctx' filepath='../.././libiberty/md5.c' line='82' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='resbuf' filepath='../.././libiberty/md5.c' line='82' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void md5_process_block(void*, size_t, md5_ctx*) -->
    <function-decl name='md5_process_block' mangled-name='md5_process_block' filepath='../.././libiberty/md5.c' line='281' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='md5_process_block'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='buffer' filepath='../.././libiberty/md5.c' line='281' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libiberty/md5.c' line='281' column='1'/>
      <!-- parameter of type 'md5_ctx*' -->
      <parameter type-id='type-id-496' name='ctx' filepath='../.././libiberty/md5.c' line='281' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void md5_process_bytes(void*, size_t, md5_ctx*) -->
    <function-decl name='md5_process_bytes' mangled-name='md5_process_bytes' filepath='../.././libiberty/md5.c' line='206' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='md5_process_bytes'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='buffer' filepath='../.././libiberty/md5.c' line='206' column='1'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='len' filepath='../.././libiberty/md5.c' line='206' column='1'/>
      <!-- parameter of type 'md5_ctx*' -->
      <parameter type-id='type-id-496' name='ctx' filepath='../.././libiberty/md5.c' line='206' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void* md5_finish_ctx(md5_ctx*, void*) -->
    <function-decl name='md5_finish_ctx' mangled-name='md5_finish_ctx' filepath='../.././libiberty/md5.c' line='102' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='md5_finish_ctx'>
      <!-- parameter of type 'md5_ctx*' -->
      <parameter type-id='type-id-496' name='ctx' filepath='../.././libiberty/md5.c' line='102' column='1'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14' name='resbuf' filepath='../.././libiberty/md5.c' line='102' column='1'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- size_t fread(void*, size_t, size_t, FILE*) -->
    <function-decl name='fread' filepath='/usr/include/stdio.h' line='704' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- typedef size_t -->
      <return type-id='type-id-32'/>
    </function-decl>
    <!-- int ferror(FILE*) -->
    <function-decl name='ferror' filepath='/usr/include/stdio.h' line='825' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'FILE*' -->
      <parameter type-id='type-id-89'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/pex-common.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- struct pex_obj -->
    <class-decl name='pex_obj' size-in-bits='1152' is-struct='yes' visibility='default' filepath='../.././libiberty/pex-common.h' line='54' column='1' id='type-id-130'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int pex_obj::flags -->
        <var-decl name='flags' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='57' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- const char* pex_obj::pname -->
        <var-decl name='pname' type-id='type-id-15' visibility='default' filepath='../.././libiberty/pex-common.h' line='59' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- const char* pex_obj::tempbase -->
        <var-decl name='tempbase' type-id='type-id-15' visibility='default' filepath='../.././libiberty/pex-common.h' line='61' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int pex_obj::next_input -->
        <var-decl name='next_input' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='63' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- char* pex_obj::next_input_name -->
        <var-decl name='next_input_name' type-id='type-id-51' visibility='default' filepath='../.././libiberty/pex-common.h' line='65' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int pex_obj::next_input_name_allocated -->
        <var-decl name='next_input_name_allocated' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='67' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='352'>
        <!-- int pex_obj::stderr_pipe -->
        <var-decl name='stderr_pipe' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='69' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- int pex_obj::count -->
        <var-decl name='count' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='71' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- pid_t* pex_obj::children -->
        <var-decl name='children' type-id='type-id-146' visibility='default' filepath='../.././libiberty/pex-common.h' line='73' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- int* pex_obj::status -->
        <var-decl name='status' type-id='type-id-42' visibility='default' filepath='../.././libiberty/pex-common.h' line='75' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- pex_time* pex_obj::time -->
        <var-decl name='time' type-id='type-id-147' visibility='default' filepath='../.././libiberty/pex-common.h' line='77' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- int pex_obj::number_waited -->
        <var-decl name='number_waited' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='79' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- FILE* pex_obj::input_file -->
        <var-decl name='input_file' type-id='type-id-89' visibility='default' filepath='../.././libiberty/pex-common.h' line='81' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- FILE* pex_obj::read_output -->
        <var-decl name='read_output' type-id='type-id-89' visibility='default' filepath='../.././libiberty/pex-common.h' line='83' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- FILE* pex_obj::read_err -->
        <var-decl name='read_err' type-id='type-id-89' visibility='default' filepath='../.././libiberty/pex-common.h' line='85' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- int pex_obj::remove_count -->
        <var-decl name='remove_count' type-id='type-id-18' visibility='default' filepath='../.././libiberty/pex-common.h' line='87' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- char** pex_obj::remove -->
        <var-decl name='remove' type-id='type-id-123' visibility='default' filepath='../.././libiberty/pex-common.h' line='90' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- const pex_funcs* pex_obj::funcs -->
        <var-decl name='funcs' type-id='type-id-148' visibility='default' filepath='../.././libiberty/pex-common.h' line='92' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- void* pex_obj::sysdep -->
        <var-decl name='sysdep' type-id='type-id-14' visibility='default' filepath='../.././libiberty/pex-common.h' line='94' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef __pid_t pid_t -->
    <typedef-decl name='pid_t' type-id='type-id-161' filepath='/usr/include/sys/types.h' line='99' column='1' id='type-id-157'/>
    <!-- typedef int __pid_t -->
    <typedef-decl name='__pid_t' type-id='type-id-18' filepath='/usr/include/bits/types.h' line='143' column='1' id='type-id-161'/>
    <!-- struct pex_time -->
    <class-decl name='pex_time' size-in-bits='256' is-struct='yes' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='559' column='1' id='type-id-156'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned long int pex_time::user_seconds -->
        <var-decl name='user_seconds' type-id='type-id-28' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='561' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- unsigned long int pex_time::user_microseconds -->
        <var-decl name='user_microseconds' type-id='type-id-28' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='562' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- unsigned long int pex_time::system_seconds -->
        <var-decl name='system_seconds' type-id='type-id-28' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='563' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- unsigned long int pex_time::system_microseconds -->
        <var-decl name='system_microseconds' type-id='type-id-28' visibility='default' filepath='../.././libiberty/../include/libiberty.h' line='564' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct pex_funcs -->
    <class-decl name='pex_funcs' size-in-bits='576' is-struct='yes' visibility='default' filepath='../.././libiberty/pex-common.h' line='99' column='1' id='type-id-159'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- int (pex_obj*, const char*, int)* pex_funcs::open_read -->
        <var-decl name='open_read' type-id='type-id-165' visibility='default' filepath='../.././libiberty/pex-common.h' line='103' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- int (pex_obj*, const char*, int)* pex_funcs::open_write -->
        <var-decl name='open_write' type-id='type-id-165' visibility='default' filepath='../.././libiberty/pex-common.h' line='106' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- typedef pid_t (pex_obj*, int, const char*, char* const*, char* const*, int, int, int, int, const char**, int*)* pex_funcs::exec_child -->
        <var-decl name='exec_child' type-id='type-id-166' visibility='default' filepath='../.././libiberty/pex-common.h' line='117' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <!-- int (pex_obj*, int)* pex_funcs::close -->
        <var-decl name='close' type-id='type-id-167' visibility='default' filepath='../.././libiberty/pex-common.h' line='124' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- typedef pid_t (pex_obj*, typedef pid_t, int*, pex_time*, int, const char**, int*)* pex_funcs::wait -->
        <var-decl name='wait' type-id='type-id-168' visibility='default' filepath='../.././libiberty/pex-common.h' line='129' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- int (pex_obj*, int*, int)* pex_funcs::pipe -->
        <var-decl name='pipe' type-id='type-id-169' visibility='default' filepath='../.././libiberty/pex-common.h' line='135' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- FILE* (pex_obj*, int, int)* pex_funcs::fdopenr -->
        <var-decl name='fdopenr' type-id='type-id-170' visibility='default' filepath='../.././libiberty/pex-common.h' line='139' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- FILE* (pex_obj*, int, int)* pex_funcs::fdopenw -->
        <var-decl name='fdopenw' type-id='type-id-170' visibility='default' filepath='../.././libiberty/pex-common.h' line='144' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- void (pex_obj*)* pex_funcs::cleanup -->
        <var-decl name='cleanup' type-id='type-id-171' visibility='default' filepath='../.././libiberty/pex-common.h' line='147' column='1'/>
      </data-member>
    </class-decl>
    <!-- FILE* (pex_obj*, int, int)* -->
    <pointer-type-def type-id='type-id-173' size-in-bits='64' id='type-id-170'/>
    <!-- const pex_funcs -->
    <qualified-type-def type-id='type-id-159' const='yes' id='type-id-153'/>
    <!-- const pex_funcs* -->
    <pointer-type-def type-id='type-id-153' size-in-bits='64' id='type-id-148'/>
    <!-- int (pex_obj*, const char*, int)* -->
    <pointer-type-def type-id='type-id-179' size-in-bits='64' id='type-id-165'/>
    <!-- int (pex_obj*, int)* -->
    <pointer-type-def type-id='type-id-180' size-in-bits='64' id='type-id-167'/>
    <!-- int (pex_obj*, int*, int)* -->
    <pointer-type-def type-id='type-id-181' size-in-bits='64' id='type-id-169'/>
    <!-- pex_time* -->
    <pointer-type-def type-id='type-id-156' size-in-bits='64' id='type-id-147'/>
    <!-- pid_t* -->
    <pointer-type-def type-id='type-id-157' size-in-bits='64' id='type-id-146'/>
    <!-- typedef pid_t (pex_obj*, int, const char*, char* const*, char* const*, int, int, int, int, const char**, int*)* -->
    <pointer-type-def type-id='type-id-182' size-in-bits='64' id='type-id-166'/>
    <!-- typedef pid_t (pex_obj*, typedef pid_t, int*, pex_time*, int, const char**, int*)* -->
    <pointer-type-def type-id='type-id-183' size-in-bits='64' id='type-id-168'/>
    <!-- void (pex_obj*)* -->
    <pointer-type-def type-id='type-id-184' size-in-bits='64' id='type-id-171'/>
    <!-- pex_obj* pex_init_common(int, const char*, const char*, const pex_funcs*) -->
    <function-decl name='pex_init_common' mangled-name='pex_init_common' filepath='../.././libiberty/pex-common.c' line='53' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='pex_init_common'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='flags' filepath='../.././libiberty/pex-common.c' line='53' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='pname' filepath='../.././libiberty/pex-common.c' line='53' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='tempbase' filepath='../.././libiberty/pex-common.c' line='53' column='1'/>
      <!-- parameter of type 'const pex_funcs*' -->
      <parameter type-id='type-id-148' name='funcs' filepath='../.././libiberty/pex-common.c' line='54' column='1'/>
      <!-- pex_obj* -->
      <return type-id='type-id-131'/>
    </function-decl>
    <!-- const char* pex_run_in_environment(pex_obj*, int, const char*, char* const*, char* const*, const char*, const char*, int*) -->
    <function-decl name='pex_run_in_environment' mangled-name='pex_run_in_environment' filepath='../.././libiberty/pex-common.c' line='152' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='pex_run_in_environment'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131' name='obj' filepath='../.././libiberty/pex-common.c' line='152' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='flags' filepath='../.././libiberty/pex-common.c' line='152' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='executable' filepath='../.././libiberty/pex-common.c' line='152' column='1'/>
      <!-- parameter of type 'char* const*' -->
      <parameter type-id='type-id-122' name='argv' filepath='../.././libiberty/pex-common.c' line='153' column='1'/>
      <!-- parameter of type 'char* const*' -->
      <parameter type-id='type-id-122' name='env' filepath='../.././libiberty/pex-common.c' line='153' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='orig_outname' filepath='../.././libiberty/pex-common.c' line='154' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='errname' filepath='../.././libiberty/pex-common.c' line='154' column='1'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42' name='err' filepath='../.././libiberty/pex-common.c' line='155' column='1'/>
      <!-- const char* -->
      <return type-id='type-id-15'/>
    </function-decl>
    <!-- FILE* pex_input_file(pex_obj*, int, const char*) -->
    <function-decl name='pex_input_file' mangled-name='pex_input_file' filepath='../.././libiberty/pex-common.c' line='379' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='pex_input_file'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131' name='obj' filepath='../.././libiberty/pex-common.c' line='379' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='flags' filepath='../.././libiberty/pex-common.c' line='379' column='1'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15' name='in_name' filepath='../.././libiberty/pex-common.c' line='379' column='1'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
    <!-- FILE* pex_input_pipe(pex_obj*, int) -->
    <function-decl name='pex_input_pipe' mangled-name='pex_input_pipe' filepath='../.././libiberty/pex-common.c' line='415' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='pex_input_pipe'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131' name='obj' filepath='../.././libiberty/pex-common.c' line='415' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='binary' filepath='../.././libiberty/pex-common.c' line='415' column='1'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
    <!-- FILE* pex_read_err(pex_obj*, int) -->
    <function-decl name='pex_read_err' mangled-name='pex_read_err' filepath='../.././libiberty/pex-common.c' line='500' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='pex_read_err'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131' name='obj' filepath='../.././libiberty/pex-common.c' line='500' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='binary' filepath='../.././libiberty/pex-common.c' line='500' column='1'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-decl>
    <!-- int pex_get_times(pex_obj*, int, pex_time*) -->
    <function-decl name='pex_get_times' mangled-name='pex_get_times' filepath='../.././libiberty/pex-common.c' line='570' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='pex_get_times'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131' name='obj' filepath='../.././libiberty/pex-common.c' line='570' column='1'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18' name='count' filepath='../.././libiberty/pex-common.c' line='570' column='1'/>
      <!-- parameter of type 'pex_time*' -->
      <parameter type-id='type-id-147' name='vector' filepath='../.././libiberty/pex-common.c' line='570' column='1'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- FILE* (pex_obj*, int, int) -->
    <function-type size-in-bits='64' id='type-id-173'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- FILE* -->
      <return type-id='type-id-89'/>
    </function-type>
    <!-- int (pex_obj*, const char*, int) -->
    <function-type size-in-bits='64' id='type-id-179'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- int (pex_obj*, int) -->
    <function-type size-in-bits='64' id='type-id-180'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- int (pex_obj*, int*, int) -->
    <function-type size-in-bits='64' id='type-id-181'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-type>
    <!-- pid_t (pex_obj*, int, const char*, char* const*, char* const*, int, int, int, int, const char**, int*) -->
    <function-type size-in-bits='64' id='type-id-182'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'char* const*' -->
      <parameter type-id='type-id-122'/>
      <!-- parameter of type 'char* const*' -->
      <parameter type-id='type-id-122'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char**' -->
      <parameter type-id='type-id-328'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- typedef pid_t -->
      <return type-id='type-id-157'/>
    </function-type>
    <!-- pid_t (pex_obj*, pid_t, int*, pex_time*, int, const char**, int*) -->
    <function-type size-in-bits='64' id='type-id-183'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- parameter of type 'typedef pid_t' -->
      <parameter type-id='type-id-157'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- parameter of type 'pex_time*' -->
      <parameter type-id='type-id-147'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char**' -->
      <parameter type-id='type-id-328'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- typedef pid_t -->
      <return type-id='type-id-157'/>
    </function-type>
    <!-- void (pex_obj*) -->
    <function-type size-in-bits='64' id='type-id-184'>
      <!-- parameter of type 'pex_obj*' -->
      <parameter type-id='type-id-131'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-type>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/pex-unix.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- typedef __anonymous_union__ __WAIT_STATUS -->
    <typedef-decl name='__WAIT_STATUS' type-id='type-id-497' filepath='/usr/include/stdlib.h' line='72' column='1' id='type-id-498'/>
    <!-- union {wait* __uptr; int* __iptr;} -->
    <union-decl name='__anonymous_union__' size-in-bits='64' is-anonymous='yes' visibility='default' filepath='/usr/include/stdlib.h' line='68' column='1' id='type-id-497'>
      <data-member access='public'>
        <!-- wait* __uptr -->
        <var-decl name='__uptr' type-id='type-id-499' visibility='default' filepath='/usr/include/stdlib.h' line='70' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- int* __iptr -->
        <var-decl name='__iptr' type-id='type-id-42' visibility='default' filepath='/usr/include/stdlib.h' line='71' column='1'/>
      </data-member>
    </union-decl>
    <!-- union wait -->
    <union-decl name='wait' size-in-bits='32' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='67' column='1' id='type-id-500'>
      <data-member access='public'>
        <!-- int wait::w_status -->
        <var-decl name='w_status' type-id='type-id-18' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='69' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {unsigned int __w_termsig; unsigned int __w_coredump; unsigned int __w_retcode;} wait::__wait_terminated -->
        <var-decl name='__wait_terminated' type-id='type-id-501' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='84' column='1'/>
      </data-member>
      <data-member access='public'>
        <!-- struct {unsigned int __w_stopval; unsigned int __w_stopsig;} wait::__wait_stopped -->
        <var-decl name='__wait_stopped' type-id='type-id-502' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='97' column='1'/>
      </data-member>
    </union-decl>
    <!-- struct {unsigned int __w_termsig; unsigned int __w_coredump; unsigned int __w_retcode;} -->
    <class-decl name='__anonymous_struct__' size-in-bits='32' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='70' column='1' id='type-id-501'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int __w_termsig -->
        <var-decl name='__w_termsig' type-id='type-id-13' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='73' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='7'>
        <!-- unsigned int __w_coredump -->
        <var-decl name='__w_coredump' type-id='type-id-13' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='74' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8'>
        <!-- unsigned int __w_retcode -->
        <var-decl name='__w_retcode' type-id='type-id-13' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='75' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct {unsigned int __w_stopval; unsigned int __w_stopsig;} -->
    <class-decl name='__anonymous_struct__1' size-in-bits='32' is-struct='yes' is-anonymous='yes' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='85' column='1' id='type-id-502'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- unsigned int __w_stopval -->
        <var-decl name='__w_stopval' type-id='type-id-13' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='88' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='8'>
        <!-- unsigned int __w_stopsig -->
        <var-decl name='__w_stopsig' type-id='type-id-13' visibility='default' filepath='/usr/include/bits/waitstatus.h' line='89' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct rusage -->
    <class-decl name='rusage' size-in-bits='1152' is-struct='yes' visibility='default' filepath='/usr/include/bits/resource.h' line='178' column='1' id='type-id-503'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- timeval rusage::ru_utime -->
        <var-decl name='ru_utime' type-id='type-id-504' visibility='default' filepath='/usr/include/bits/resource.h' line='181' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <!-- timeval rusage::ru_stime -->
        <var-decl name='ru_stime' type-id='type-id-504' visibility='default' filepath='/usr/include/bits/resource.h' line='183' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <!-- long int rusage::ru_maxrss -->
        <var-decl name='ru_maxrss' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='185' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='320'>
        <!-- long int rusage::ru_ixrss -->
        <var-decl name='ru_ixrss' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='188' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='384'>
        <!-- long int rusage::ru_idrss -->
        <var-decl name='ru_idrss' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='190' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='448'>
        <!-- long int rusage::ru_isrss -->
        <var-decl name='ru_isrss' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='192' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='512'>
        <!-- long int rusage::ru_minflt -->
        <var-decl name='ru_minflt' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='195' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <!-- long int rusage::ru_majflt -->
        <var-decl name='ru_majflt' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='197' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='640'>
        <!-- long int rusage::ru_nswap -->
        <var-decl name='ru_nswap' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='199' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='704'>
        <!-- long int rusage::ru_inblock -->
        <var-decl name='ru_inblock' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='202' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='768'>
        <!-- long int rusage::ru_oublock -->
        <var-decl name='ru_oublock' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='204' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='832'>
        <!-- long int rusage::ru_msgsnd -->
        <var-decl name='ru_msgsnd' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='206' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='896'>
        <!-- long int rusage::ru_msgrcv -->
        <var-decl name='ru_msgrcv' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='208' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='960'>
        <!-- long int rusage::ru_nsignals -->
        <var-decl name='ru_nsignals' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='210' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1024'>
        <!-- long int rusage::ru_nvcsw -->
        <var-decl name='ru_nvcsw' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='214' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='1088'>
        <!-- long int rusage::ru_nivcsw -->
        <var-decl name='ru_nivcsw' type-id='type-id-21' visibility='default' filepath='/usr/include/bits/resource.h' line='217' column='1'/>
      </data-member>
    </class-decl>
    <!-- struct timeval -->
    <class-decl name='timeval' size-in-bits='128' is-struct='yes' visibility='default' filepath='/usr/include/bits/time.h' line='75' column='1' id='type-id-504'>
      <data-member access='public' layout-offset-in-bits='0'>
        <!-- __time_t timeval::tv_sec -->
        <var-decl name='tv_sec' type-id='type-id-82' visibility='default' filepath='/usr/include/bits/time.h' line='77' column='1'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <!-- __suseconds_t timeval::tv_usec -->
        <var-decl name='tv_usec' type-id='type-id-505' visibility='default' filepath='/usr/include/bits/time.h' line='78' column='1'/>
      </data-member>
    </class-decl>
    <!-- typedef long int __suseconds_t -->
    <typedef-decl name='__suseconds_t' type-id='type-id-21' filepath='/usr/include/bits/types.h' line='151' column='1' id='type-id-505'/>
    <!-- rusage* -->
    <pointer-type-def type-id='type-id-503' size-in-bits='64' id='type-id-506'/>
    <!-- wait* -->
    <pointer-type-def type-id='type-id-500' size-in-bits='64' id='type-id-499'/>
    <!-- const pex_funcs funcs -->
    <var-decl name='funcs' type-id='type-id-153' mangled-name='funcs' visibility='default' filepath='../.././libiberty/pex-unix.c' line='317' column='1' elf-symbol-id='funcs'/>
    <!-- int fcntl(int, int, ...) -->
    <function-decl name='fcntl' filepath='/usr/include/fcntl.h' line='122' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <parameter is-variadic='yes'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int pipe(int*) -->
    <function-decl name='pipe' filepath='/usr/include/unistd.h' line='414' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- __pid_t wait4(__pid_t, __WAIT_STATUS, int, rusage*) -->
    <function-decl name='wait4' filepath='/usr/include/sys/wait.h' line='175' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef __pid_t' -->
      <parameter type-id='type-id-161'/>
      <!-- parameter of type 'typedef __WAIT_STATUS' -->
      <parameter type-id='type-id-498'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'rusage*' -->
      <parameter type-id='type-id-506'/>
      <!-- typedef __pid_t -->
      <return type-id='type-id-161'/>
    </function-decl>
    <!-- __pid_t waitpid(__pid_t, int*, int) -->
    <function-decl name='waitpid' filepath='/usr/include/sys/wait.h' line='139' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef __pid_t' -->
      <parameter type-id='type-id-161'/>
      <!-- parameter of type 'int*' -->
      <parameter type-id='type-id-42'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- typedef __pid_t -->
      <return type-id='type-id-161'/>
    </function-decl>
    <!-- int kill(__pid_t, int) -->
    <function-decl name='kill' filepath='/usr/include/signal.h' line='126' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef __pid_t' -->
      <parameter type-id='type-id-161'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- ssize_t write(int, void*, size_t) -->
    <function-decl name='write' filepath='/usr/include/unistd.h' line='363' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'void*' -->
      <parameter type-id='type-id-14'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- typedef ssize_t -->
      <return type-id='type-id-399'/>
    </function-decl>
    <!-- void _exit(int) -->
    <function-decl name='_exit' filepath='/usr/include/unistd.h' line='600' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- unsigned int sleep(unsigned int) -->
    <function-decl name='sleep' filepath='/usr/include/unistd.h' line='441' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'unsigned int' -->
      <parameter type-id='type-id-13'/>
      <!-- unsigned int -->
      <return type-id='type-id-13'/>
    </function-decl>
    <!-- __pid_t vfork() -->
    <function-decl name='vfork' filepath='/usr/include/unistd.h' line='783' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- typedef __pid_t -->
      <return type-id='type-id-161'/>
    </function-decl>
    <!-- int dup2(int, int) -->
    <function-decl name='dup2' filepath='/usr/include/unistd.h' line='531' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int execvp(const char*, char* const*) -->
    <function-decl name='execvp' filepath='/usr/include/unistd.h' line='575' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'char* const*' -->
      <parameter type-id='type-id-122'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
    <!-- int execv(const char*, char* const*) -->
    <function-decl name='execv' filepath='/usr/include/unistd.h' line='560' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'char* const*' -->
      <parameter type-id='type-id-122'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/safe-ctype.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- const unsigned short int[256] -->
    <array-type-def dimensions='1' type-id='type-id-507' size-in-bits='4096' id='type-id-508'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' type-id='type-id-4' id='type-id-397'/>
    </array-type-def>
    <!-- unsigned short int[256] -->
    <array-type-def dimensions='1' type-id='type-id-29' size-in-bits='4096' id='type-id-509'>
      <!-- <anonymous range>[256] -->
      <subrange length='256' type-id='type-id-4' id='type-id-397'/>
    </array-type-def>
    <!-- const unsigned short int -->
    <qualified-type-def type-id='type-id-29' const='yes' id='type-id-507'/>
    <!-- const unsigned short int _sch_istable[256] -->
    <var-decl name='_sch_istable' type-id='type-id-508' mangled-name='_sch_istable' visibility='default' filepath='../.././libiberty/safe-ctype.c' line='159' column='1' elf-symbol-id='_sch_istable'/>
    <!-- const unsigned char _sch_toupper[256] -->
    <var-decl name='_sch_toupper' type-id='type-id-414' mangled-name='_sch_toupper' visibility='default' filepath='../.././libiberty/safe-ctype.c' line='220' column='1' elf-symbol-id='_sch_toupper'/>
    <!-- const unsigned char _sch_tolower[256] -->
    <var-decl name='_sch_tolower' type-id='type-id-414' mangled-name='_sch_tolower' visibility='default' filepath='../.././libiberty/safe-ctype.c' line='191' column='1' elf-symbol-id='_sch_tolower'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/unlink-if-ordinary.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- int __lxstat(int, const char*, stat*) -->
    <function-decl name='__lxstat' filepath='/usr/include/sys/stat.h' line='405' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'int' -->
      <parameter type-id='type-id-18'/>
      <!-- parameter of type 'const char*' -->
      <parameter type-id='type-id-15'/>
      <!-- parameter of type 'stat*' -->
      <parameter type-id='type-id-132'/>
      <!-- int -->
      <return type-id='type-id-18'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/xexit.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- void ()* _xexit_cleanup -->
    <var-decl name='_xexit_cleanup' type-id='type-id-136' mangled-name='_xexit_cleanup' visibility='default' filepath='../.././libiberty/xexit.c' line='44' column='1' elf-symbol-id='_xexit_cleanup'/>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/xmalloc.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
    <!-- typedef __intptr_t intptr_t -->
    <typedef-decl name='intptr_t' type-id='type-id-510' filepath='/usr/include/unistd.h' line='268' column='1' id='type-id-511'/>
    <!-- typedef long int __intptr_t -->
    <typedef-decl name='__intptr_t' type-id='type-id-21' filepath='/usr/include/bits/types.h' line='189' column='1' id='type-id-510'/>
    <!-- void xmalloc_failed(size_t) -->
    <function-decl name='xmalloc_failed' mangled-name='xmalloc_failed' filepath='../.././libiberty/xmalloc.c' line='117' column='1' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='xmalloc_failed'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32' name='size' filepath='../.././libiberty/xmalloc.c' line='117' column='1'/>
      <!-- void -->
      <return type-id='type-id-31'/>
    </function-decl>
    <!-- void* sbrk(intptr_t) -->
    <function-decl name='sbrk' filepath='/usr/include/unistd.h' line='1053' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef intptr_t' -->
      <parameter type-id='type-id-511'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
    <!-- void* calloc(size_t, size_t) -->
    <function-decl name='calloc' filepath='/usr/include/stdlib.h' line='473' column='1' visibility='default' binding='global' size-in-bits='64'>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- parameter of type 'typedef size_t' -->
      <parameter type-id='type-id-32'/>
      <!-- void* -->
      <return type-id='type-id-14'/>
    </function-decl>
  </abi-instr>
  <abi-instr address-size='64' path='../.././libiberty/xmemdup.c' comp-dir-path='/tmp/legendre/spack-stage/spack-stage-wfh0ig/gcc-4.7.4/host-x86_64-unknown-linux-gnu/libiberty' language='LANG_C89'>
  </abi-instr>
</abi-corpus>
