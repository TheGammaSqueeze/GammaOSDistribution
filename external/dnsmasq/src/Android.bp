package {
    default_applicable_licenses: ["external_dnsmasq_src_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
// See: http://go/android-license-faq
license {
    name: "external_dnsmasq_src_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-BSD",
        "SPDX-license-identifier-GPL",
        "SPDX-license-identifier-GPL-2.0",
        "SPDX-license-identifier-LGPL",
        "SPDX-license-identifier-MIT",
        "legacy_unencumbered",
    ],
    license_text: [
        "NOTICE",
    ],
}

cc_binary {
    name: "dnsmasq",
    srcs: [
        "cache.c",
        "dhcp.c",
        "dnsmasq.c",
        "forward.c",
        "helper.c",
        "lease.c",
        "log.c",
        "netlink.c",
        "network.c",
        "option.c",
        "rfc1035.c",
        "rfc2131.c",
        "util.c",
    ],

    cflags: [
        "-O2",
        "-g",
        "-W",
        "-Wall",
        "-D__ANDROID__",
        "-DIPV6",
        "-DNO_SCRIPT",
        "-D_BSD_SOURCE",
        "-Wno-unused-variable",
        "-Wno-unused-parameter",
        "-Werror",
    ],
    system_shared_libs: ["libc"],
    shared_libs: [
        "libcutils",
        "liblog",
    ],
}
