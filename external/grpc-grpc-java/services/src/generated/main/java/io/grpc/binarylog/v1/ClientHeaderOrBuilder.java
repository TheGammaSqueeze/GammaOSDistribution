// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/binlog/v1/binarylog.proto

package io.grpc.binarylog.v1;

public interface ClientHeaderOrBuilder extends
    // @@protoc_insertion_point(interface_extends:grpc.binarylog.v1.ClientHeader)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This contains only the metadata from the application.
   * </pre>
   *
   * <code>.grpc.binarylog.v1.Metadata metadata = 1;</code>
   */
  boolean hasMetadata();
  /**
   * <pre>
   * This contains only the metadata from the application.
   * </pre>
   *
   * <code>.grpc.binarylog.v1.Metadata metadata = 1;</code>
   */
  io.grpc.binarylog.v1.Metadata getMetadata();
  /**
   * <pre>
   * This contains only the metadata from the application.
   * </pre>
   *
   * <code>.grpc.binarylog.v1.Metadata metadata = 1;</code>
   */
  io.grpc.binarylog.v1.MetadataOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * The name of the RPC method, which looks something like:
   * /&lt;service&gt;/&lt;method&gt;
   * Note the leading "/" character.
   * </pre>
   *
   * <code>string method_name = 2;</code>
   */
  java.lang.String getMethodName();
  /**
   * <pre>
   * The name of the RPC method, which looks something like:
   * /&lt;service&gt;/&lt;method&gt;
   * Note the leading "/" character.
   * </pre>
   *
   * <code>string method_name = 2;</code>
   */
  com.google.protobuf.ByteString
      getMethodNameBytes();

  /**
   * <pre>
   * A single process may be used to run multiple virtual
   * servers with different identities.
   * The authority is the name of such a server identitiy.
   * It is typically a portion of the URI in the form of
   * &lt;host&gt; or &lt;host&gt;:&lt;port&gt; .
   * </pre>
   *
   * <code>string authority = 3;</code>
   */
  java.lang.String getAuthority();
  /**
   * <pre>
   * A single process may be used to run multiple virtual
   * servers with different identities.
   * The authority is the name of such a server identitiy.
   * It is typically a portion of the URI in the form of
   * &lt;host&gt; or &lt;host&gt;:&lt;port&gt; .
   * </pre>
   *
   * <code>string authority = 3;</code>
   */
  com.google.protobuf.ByteString
      getAuthorityBytes();

  /**
   * <pre>
   * the RPC timeout
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4;</code>
   */
  boolean hasTimeout();
  /**
   * <pre>
   * the RPC timeout
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4;</code>
   */
  com.google.protobuf.Duration getTimeout();
  /**
   * <pre>
   * the RPC timeout
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4;</code>
   */
  com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();
}
