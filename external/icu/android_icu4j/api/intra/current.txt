// Signature format: 2.0
package com.android.i18n.system {

  public class AppSpecializationHooks {
    method public static void handleCompatChangesBeforeBindingApplication();
  }

  public final class ZygoteHooks {
    method public static void onBeginPreload();
    method public static void onEndPreload();
  }

}

package com.android.i18n.timezone {

  public final class ZoneInfoData {
    method @NonNull public com.android.i18n.timezone.ZoneInfoData createCopyWithRawOffset(int);
    method @NonNull public static com.android.i18n.timezone.ZoneInfoData createFromSerializationFields(@NonNull String, @NonNull java.io.ObjectInputStream.GetField) throws java.io.IOException;
    method @NonNull public static com.android.i18n.timezone.ZoneInfoData createInstance(@NonNull String, @NonNull long[], @NonNull byte[], @NonNull int[], @NonNull boolean[]);
    method @NonNull public String getID();
    method @Nullable public Integer getLatestDstSavingsMillis(long);
    method public int getOffset(long);
    method public int getOffsetsByUtcTime(long, @NonNull int[]);
    method public int getRawOffset();
    method @Nullable public long[] getTransitions();
    method public boolean hasSameRules(@NonNull com.android.i18n.timezone.ZoneInfoData);
    method public boolean isInDaylightTime(long);
    method public void writeToSerializationFields(@NonNull java.io.ObjectOutputStream.PutField);
    field @NonNull public static final java.io.ObjectStreamField[] ZONEINFO_SERIALIZED_FIELDS;
  }

  public final class ZoneInfoDb {
    method @NonNull public String[] getAvailableIDs();
    method @NonNull public String[] getAvailableIDs(int);
    method @NonNull public static com.android.i18n.timezone.ZoneInfoDb getInstance();
    method @Nullable public com.android.i18n.timezone.ZoneInfoData makeZoneInfoData(@NonNull String);
  }

}

package com.android.icu.charset {

  public class CharsetFactory {
    method public static java.nio.charset.Charset create(String);
    method public static String[] getAvailableCharsetNames();
  }

}

package com.android.icu.text {

  public class CompatibleDecimalFormatFactory {
    method public static android.icu.text.DecimalFormat create(String, android.icu.text.DecimalFormatSymbols);
  }

  public class ExtendedDateFormatSymbols {
    method public android.icu.text.DateFormatSymbols getDateFormatSymbols();
    method public static com.android.icu.text.ExtendedDateFormatSymbols getInstance(android.icu.util.ULocale);
    method public String[] getNarrowQuarters(int);
  }

  public class ExtendedDecimalFormatSymbols {
    method public static com.android.icu.text.ExtendedDecimalFormatSymbols getInstance(android.icu.util.ULocale, android.icu.text.NumberingSystem);
    method public String getLocalizedPatternSeparator();
  }

  public class ExtendedIDNA {
    method public static StringBuffer convertIDNToASCII(String, int) throws android.icu.text.StringPrepParseException;
    method public static StringBuffer convertIDNToUnicode(String, int) throws android.icu.text.StringPrepParseException;
  }

  public class ExtendedTimeZoneNames {
    method @NonNull public static com.android.icu.text.ExtendedTimeZoneNames getInstance(@NonNull android.icu.util.ULocale);
    method @NonNull public android.icu.text.TimeZoneNames getTimeZoneNames();
    method @Nullable public com.android.icu.text.ExtendedTimeZoneNames.Match matchName(@NonNull CharSequence, int, @NonNull String);
  }

  public static final class ExtendedTimeZoneNames.Match {
    method public int getMatchLength();
    method @NonNull public String getTzId();
    method public boolean isDst();
  }

  public final class TimeZoneNamesNative {
    method public static String[][] getFilledZoneStrings(@NonNull java.util.Locale, @NonNull String[]);
  }

}

package com.android.icu.util {

  public class CaseMapperNative {
    method public static String toLowerCase(String, java.util.Locale);
    method public static String toUpperCase(String, java.util.Locale);
  }

  public class ExtendedCalendar {
    method public String getDateTimePattern(int, int);
    method public static com.android.icu.util.ExtendedCalendar getInstance(android.icu.util.ULocale);
  }

  public class ExtendedTimeZone {
    method public static void clearDefaultTimeZone();
    method public java.time.zone.ZoneRules createZoneRules();
    method public static com.android.icu.util.ExtendedTimeZone getInstance(String);
    method public android.icu.util.TimeZone getTimeZone();
  }

  public final class LocaleNative {
    method public static String getDisplayCountry(java.util.Locale, java.util.Locale);
    method public static String getDisplayLanguage(java.util.Locale, java.util.Locale);
    method public static String getDisplayScript(java.util.Locale, java.util.Locale);
    method public static String getDisplayVariant(java.util.Locale, java.util.Locale);
    method public static void setDefault(String);
  }

}

package com.android.icu.util.regex {

  public class MatcherNative {
    method public static com.android.icu.util.regex.MatcherNative create(com.android.icu.util.regex.PatternNative);
    method public boolean find(int, int[]);
    method public boolean findNext(int[]);
    method public int getMatchedGroupIndex(String);
    method public int groupCount();
    method public boolean hitEnd();
    method public boolean lookingAt(int[]);
    method public boolean matches(int[]);
    method public boolean requireEnd();
    method public void setInput(String, int, int);
    method public void useAnchoringBounds(boolean);
    method public void useTransparentBounds(boolean);
  }

  public class PatternNative {
    method public static com.android.icu.util.regex.PatternNative create(String, int);
  }

}

