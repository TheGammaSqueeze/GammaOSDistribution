// This file is generated by cargo2android.py --config cargo2android.json.
// Do not modify this file as changes will be overridden on upgrade.

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "external_crosvm_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-BSD
    default_applicable_licenses: ["external_crosvm_license"],
}

rust_library {
    name: "libsys_util",
    defaults: ["crosvm_defaults"],
    host_supported: true,
    crate_name: "sys_util",
    srcs: ["src/lib.rs"],
    edition: "2018",
    rustlibs: [
        "libdata_model",
        "liblibc",
        "libserde",
        "libserde_json",
        "libsync_rust",
        "libtempfile",
        "libthiserror",
    ],
    proc_macros: ["libpoll_token_derive"],
    shared_libs: ["libcap"],  // specified in src/capabilities.rs
    target: {
        android: {
            rustlibs: [
                "libandroid_log_sys",
            ],
        },
        linux_bionic_arm64: {
            // For ARM architecture, we use aarch64-linux-android for BOTH
            // device and host targets. As a result, host targets are also
            // built with target_os = "android". Therefore, sys_util/src/android
            // is used and thus this android module is required.
            // This seems incorrect, but is inevitable because rustc doesn't
            // yet support a Linux-based target using Bionic as libc. We can't
            // use aarch64-unknown-linux-gnu because it's using glibc which
            // we don't support for cross-host builds.
            rustlibs: [
                "libandroid_log_sys",
            ],
        },
    },
}
