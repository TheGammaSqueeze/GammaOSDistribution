// This file is generated by cargo2android.py --config cargo2android.json.
// Do not modify this file as changes will be overridden on upgrade.

package {
    default_applicable_licenses: ["external_rust_crates_futures-util_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
//
// large-scale-change included anything that looked like it might be a license
// text as a license_text. e.g. LICENSE, NOTICE, COPYING etc.
//
// Please consider removing redundant or irrelevant files from 'license_text:'.
// See: http://go/android-license-faq
license {
    name: "external_rust_crates_futures-util_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
        "SPDX-license-identifier-MIT",
    ],
    license_text: [
        "LICENSE-APACHE",
        "LICENSE-MIT",
    ],
}

rust_defaults {
    name: "futures-util_defaults",
    crate_name: "futures_util",
    srcs: ["src/lib.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    edition: "2018",
    features: [
        "alloc",
        "async-await",
        "async-await-macro",
        "channel",
        "default",
        "futures-channel",
        "futures-io",
        "futures-macro",
        "futures-sink",
        "io",
        "memchr",
        "proc-macro-hack",
        "proc-macro-nested",
        "sink",
        "slab",
        "std",
    ],
    rustlibs: [
        "libfutures_channel",
        "libfutures_core",
        "libfutures_io",
        "libfutures_sink",
        "libfutures_task",
        "libmemchr",
        "libpin_project_lite",
        "libpin_utils",
        "libproc_macro_nested",
        "libslab",
        "libtokio",
    ],
    proc_macros: [
        "libfutures_macro",
        "libproc_macro_hack",
    ],
}

rust_test_host {
    name: "futures-util_host_test_src_lib",
    defaults: ["futures-util_defaults"],
    test_options: {
        unit_test: true,
    },
}

rust_test {
    name: "futures-util_device_test_src_lib",
    defaults: ["futures-util_defaults"],
}

rust_library {
    name: "libfutures_util",
    host_supported: true,
    crate_name: "futures_util",
    srcs: ["src/lib.rs"],
    edition: "2018",
    features: [
        "alloc",
        "async-await",
        "async-await-macro",
        "channel",
        "default",
        "futures-channel",
        "futures-io",
        "futures-macro",
        "futures-sink",
        "io",
        "memchr",
        "proc-macro-hack",
        "proc-macro-nested",
        "sink",
        "slab",
        "std",
    ],
    rustlibs: [
        "libfutures_channel",
        "libfutures_core",
        "libfutures_io",
        "libfutures_sink",
        "libfutures_task",
        "libmemchr",
        "libpin_project_lite",
        "libpin_utils",
        "libproc_macro_nested",
        "libslab",
    ],
    proc_macros: [
        "libfutures_macro",
        "libproc_macro_hack",
    ],
    apex_available: [
        "//apex_available:platform",
        "com.android.virt",
    ],
}

// dependent_library ["feature_list"]
//   autocfg-1.0.1
//   byteorder-1.4.3 "default,std"
//   bytes-0.4.12
//   cfg-if-0.1.10
//   cfg-if-1.0.0
//   crossbeam-deque-0.7.3
//   crossbeam-epoch-0.8.2 "default,lazy_static,std"
//   crossbeam-queue-0.2.3 "default,std"
//   crossbeam-utils-0.7.2 "default,lazy_static,std"
//   fnv-1.0.7 "default,std"
//   futures-0.1.31 "default,use_std,with-deprecated"
//   futures-channel-0.3.14 "alloc,std"
//   futures-core-0.3.14 "alloc,std"
//   futures-io-0.3.14 "std"
//   futures-macro-0.3.13
//   futures-sink-0.3.14
//   futures-task-0.3.14 "alloc,std"
//   iovec-0.1.4
//   lazy_static-1.4.0
//   libc-0.2.94 "default,std"
//   lock_api-0.3.4
//   log-0.4.14
//   maybe-uninit-2.0.0
//   memchr-2.3.4 "default,std"
//   memoffset-0.5.6 "default"
//   mio-0.6.23 "default,with-deprecated"
//   mio-uds-0.6.8
//   net2-0.2.37 "default,duration"
//   num_cpus-1.13.0
//   parking_lot-0.9.0 "default"
//   parking_lot_core-0.6.2
//   pin-project-lite-0.2.6
//   pin-utils-0.1.0
//   proc-macro-hack-0.5.19
//   proc-macro-nested-0.1.7
//   proc-macro2-1.0.26 "default,proc-macro"
//   quote-1.0.9 "default,proc-macro"
//   rustc_version-0.2.3
//   scopeguard-1.1.0
//   semver-0.9.0 "default"
//   semver-parser-0.7.0
//   slab-0.4.3 "default,std"
//   smallvec-0.6.14 "default,std"
//   syn-1.0.70 "clone-impls,default,derive,full,parsing,printing,proc-macro,quote"
//   tokio-0.1.22 "bytes,codec,default,fs,io,mio,num_cpus,reactor,rt-full,sync,tcp,timer,tokio-codec,tokio-current-thread,tokio-executor,tokio-fs,tokio-io,tokio-reactor,tokio-sync,tokio-tcp,tokio-threadpool,tokio-timer,tokio-udp,tokio-uds,udp,uds"
//   tokio-codec-0.1.2
//   tokio-current-thread-0.1.7
//   tokio-executor-0.1.10
//   tokio-fs-0.1.7
//   tokio-io-0.1.13
//   tokio-reactor-0.1.12
//   tokio-sync-0.1.8
//   tokio-tcp-0.1.4
//   tokio-threadpool-0.1.18
//   tokio-timer-0.2.13
//   tokio-udp-0.1.6
//   tokio-uds-0.2.7
//   unicode-xid-0.2.1 "default"
