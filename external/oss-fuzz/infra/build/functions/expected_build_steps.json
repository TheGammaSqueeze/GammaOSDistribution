[
  {
    "args": [
      "clone",
      "https://github.com/google/oss-fuzz.git"
    ],
    "name": "gcr.io/cloud-builders/git"
  },
  {
    "name": "gcr.io/cloud-builders/docker",
    "args": [
      "build",
      "-t",
      "gcr.io/oss-fuzz/test-project",
      "."
    ],
    "dir": "oss-fuzz/projects/test-project"
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "srcmap > /workspace/srcmap.json && cat /workspace/srcmap.json"
    ],
    "env": [
      "OSSFUZZ_REVISION=$REVISION_ID",
      "FUZZING_LANGUAGE=c++"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/msan-libs-builder",
    "args": [
      "bash",
      "-c",
      "cp -r /msan /workspace"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "env": [
      "FUZZING_ENGINE=libfuzzer",
      "SANITIZER=address",
      "OUT=/workspace/out/address",
      "MSAN_LIBS_PATH=/workspace/msan",
      "ARCHITECTURE=x86_64",
      "FUZZING_LANGUAGE=c++"
    ],
    "args": [
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/address && compile || (echo \"********************************************************************************\nFailed to build.\nTo reproduce, run:\npython infra/helper.py build_image test-project\npython infra/helper.py build_fuzzers --sanitizer address --engine libfuzzer --architecture x86_64 test-project\n********************************************************************************\" && false)"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "FUZZING_ENGINE=libfuzzer",
      "SANITIZER=address",
      "OUT=/workspace/out/address",
      "MSAN_LIBS_PATH=/workspace/msan",
      "ARCHITECTURE=x86_64",
      "FUZZING_LANGUAGE=c++"
    ],
    "args": [
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\nBuild checks failed.\nTo reproduce, run:\npython infra/helper.py build_image test-project\npython infra/helper.py build_fuzzers --sanitizer address --engine libfuzzer --architecture x86_64 test-project\npython infra/helper.py check_build --sanitizer address --engine libfuzzer --architecture x86_64 test-project\n********************************************************************************\" && false)"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "FUZZING_ENGINE=libfuzzer",
      "SANITIZER=address",
      "OUT=/workspace/out/address",
      "MSAN_LIBS_PATH=/workspace/msan",
      "ARCHITECTURE=x86_64",
      "FUZZING_LANGUAGE=c++"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/address && zip -r test-project-address-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/address/test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.address",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "env": [
      "FUZZING_ENGINE=afl",
      "SANITIZER=address",
      "OUT=/workspace/out/address",
      "MSAN_LIBS_PATH=/workspace/msan",
      "ARCHITECTURE=x86_64",
      "FUZZING_LANGUAGE=c++"
    ],
    "args": [
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/address && compile || (echo \"********************************************************************************\nFailed to build.\nTo reproduce, run:\npython infra/helper.py build_image test-project\npython infra/helper.py build_fuzzers --sanitizer address --engine afl --architecture x86_64 test-project\n********************************************************************************\" && false)"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "FUZZING_ENGINE=afl",
      "SANITIZER=address",
      "OUT=/workspace/out/address",
      "MSAN_LIBS_PATH=/workspace/msan",
      "ARCHITECTURE=x86_64",
      "FUZZING_LANGUAGE=c++"
    ],
    "args": [
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\nBuild checks failed.\nTo reproduce, run:\npython infra/helper.py build_image test-project\npython infra/helper.py build_fuzzers --sanitizer address --engine afl --architecture x86_64 test-project\npython infra/helper.py check_build --sanitizer address --engine afl --architecture x86_64 test-project\n********************************************************************************\" && false)"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "FUZZING_ENGINE=afl",
      "SANITIZER=address",
      "OUT=/workspace/out/address",
      "MSAN_LIBS_PATH=/workspace/msan",
      "ARCHITECTURE=x86_64",
      "FUZZING_LANGUAGE=c++"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/address && zip -r test-project-address-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/address/test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.address",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "env": [
      "FUZZING_ENGINE=honggfuzz",
      "SANITIZER=address",
      "OUT=/workspace/out/address",
      "MSAN_LIBS_PATH=/workspace/msan",
      "ARCHITECTURE=x86_64",
      "FUZZING_LANGUAGE=c++"
    ],
    "args": [
      "bash",
      "-c",
      "rm -r /out && cd /src && cd /src && mkdir -p /workspace/out/address && compile || (echo \"********************************************************************************\nFailed to build.\nTo reproduce, run:\npython infra/helper.py build_image test-project\npython infra/helper.py build_fuzzers --sanitizer address --engine honggfuzz --architecture x86_64 test-project\n********************************************************************************\" && false)"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "FUZZING_ENGINE=honggfuzz",
      "SANITIZER=address",
      "OUT=/workspace/out/address",
      "MSAN_LIBS_PATH=/workspace/msan",
      "ARCHITECTURE=x86_64",
      "FUZZING_LANGUAGE=c++"
    ],
    "args": [
      "bash",
      "-c",
      "test_all.py || (echo \"********************************************************************************\nBuild checks failed.\nTo reproduce, run:\npython infra/helper.py build_image test-project\npython infra/helper.py build_fuzzers --sanitizer address --engine honggfuzz --architecture x86_64 test-project\npython infra/helper.py check_build --sanitizer address --engine honggfuzz --architecture x86_64 test-project\n********************************************************************************\" && false)"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/base-runner",
    "env": [
      "FUZZING_ENGINE=honggfuzz",
      "SANITIZER=address",
      "OUT=/workspace/out/address",
      "MSAN_LIBS_PATH=/workspace/msan",
      "ARCHITECTURE=x86_64",
      "FUZZING_LANGUAGE=c++"
    ],
    "args": [
      "bash",
      "-c",
      "targets_list > /workspace/targets.list.address"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "cd /workspace/out/address && zip -r test-project-address-202001010000.zip *"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/srcmap.json",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/out/address/test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz-base/uploader",
    "args": [
      "/workspace/targets.list.address",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/cloud-builders/curl",
    "args": [
      "-H",
      "Content-Type: text/plain",
      "-X",
      "PUT",
      "-d",
      "test-project-address-202001010000.zip",
      "test_url"
    ]
  },
  {
    "name": "gcr.io/oss-fuzz/test-project",
    "args": [
      "bash",
      "-c",
      "rm -r /workspace/out/address"
    ]
  }
]
