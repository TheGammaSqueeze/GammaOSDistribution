package vendor.qti.hardware.soter@1.0;

interface ISoter {
	generateAttkKeyPair(int8_t copyNum) generates (int32_t error);
	verifyAttkKeyPair() generates (int32_t error);
	exportAttkPublicKey() generates (int32_t error, vec<int8_t> pubKeyData, int32_t pubKeyDataLength);
	getDeviceId() generates (int32_t error, vec<int8_t> deviceId, int32_t deviceIdLength);
	generateAskKeyPair(int32_t uid) generates (int32_t error);
	exportAskPublicKey(int32_t uid) generates (int32_t error, vec<int8_t> data, int32_t dataLength);
	removeAllUidKey(int32_t uid) generates (int32_t error);
	hasAskAlready(int32_t uid) generates (int32_t error);
	generateAuthKeyPair(int32_t uid, string name) generates (int32_t error);
	exportAuthKeyPublicKey(int32_t uid, string name) generates (int32_t error, vec<int8_t> data, int32_t dataLength);
	removeAuthKey(int32_t uid, string name) generates (int32_t error);
	hasAuthKey(int32_t uid, string name) generates (int32_t error);
	initSign(int32_t uid, string name, string challenge) generates (int32_t error, int64_t session);
	finishSign(int64_t session) generates (int32_t error, vec<int8_t> data, int32_t dataLength);
};
