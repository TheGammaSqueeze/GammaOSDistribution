/******************************************************************************
 *
 *  Copyright 2020 NXP
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 ******************************************************************************/
package vendor.nxp.nxpnfclegacy@1.0;

enum NxpNfcHalEseState  : uint64_t {
    HAL_NFC_ESE_IDLE_MODE = 0,
    HAL_NFC_ESE_WIRED_MODE
};

enum NfcHciInitStatus : uint8_t {
  NFC_HCI_INIT_COMPLETE = 0x00,
  NFC_HCI_INIT_START = 0x01
};

struct NxpNciCfgInfo {
  bool  isGetcfg;
  uint8_t[4] total_duration;
  uint8_t total_duration_len;
  uint8_t[48] atr_req_gen_bytes;
  uint8_t atr_req_gen_bytes_len;
  uint8_t[48] atr_res_gen_bytes;
  uint8_t atr_res_gen_bytes_len;
  uint8_t[3] pmid_wt;
  uint8_t pmid_wt_len;
};

struct NxpNfcScrResetEmvcoCmd{
  uint64_t len;
  uint8_t[10] cmd;
};

struct NxpNfcHalConfig {
  uint8_t ese_listen_tech_mask;
  uint8_t default_nfcee_disc_timeout;
  uint8_t default_nfcee_timeout;
  uint8_t ese_wired_prt_mask;
  uint8_t uicc_wired_prt_mask;
  uint8_t wired_mode_rf_field_enable;
  uint8_t aid_block_route;
  uint8_t esePowerDhControl;
  uint8_t tagOpTimeout;
  uint8_t loaderServiceVersion;
  uint8_t defaultNfceeDiscTimeout;
  uint8_t dualUiccEnable;
  uint8_t ceRouteStrictDisable;
  uint32_t osDownloadTimeoutValue;
  uint8_t defaultAidRoute;
  uint8_t defaultAidPwrState;
  uint8_t defaultRoutePwrState;
  uint8_t defaultOffHostPwrState;
  uint8_t jcopDlAtBootEnable;
  uint8_t defaultNfceeTimeout;
  uint8_t nxpNfcChip;
  uint8_t coreScrnOffAutonomousEnable;
  uint8_t p61LsDefaultInterface;
  uint8_t p61JcopDefaultInterface;
  uint8_t agcDebugEnable;
  uint8_t felicaCltPowerState;
  uint32_t cmdRspTimeoutValue;
  uint8_t checkDefaultProtoSeId;
  uint8_t nfccPassiveListenTimeout;
  uint32_t nfccStandbyTimeout;
  uint32_t wmMaxWtxCount;
  uint32_t nfccRfFieldEventTimeout;
  uint8_t allowWiredInMifareDesfireClt;
  uint8_t dwpIntfResetEnable;
  uint8_t nxpLogHalLoglevel;
  uint8_t nxpLogExtnsLogLevel;
  uint8_t nxpLogTmlLogLevel;
  uint8_t nxpLogFwDnldLogLevel;
  uint8_t nxpLogNcixLogLevel;
  uint8_t nxpLogNcirLogLevel;
  uint8_t scrCfgFormat;
  uint8_t etsiReaderEnable;
  uint8_t techAbfRoute;
  uint8_t techAbfPwrState;
  uint8_t wTagSupport;
  uint8_t t4tNfceePwrState;
  NxpNfcScrResetEmvcoCmd scrResetEmvco;
 };

 struct NxpNciExtnCmd{
  uint16_t cmd_len;
  uint8_t[256] p_cmd;
};

struct NxpNciExtnResp{
  uint32_t status;
  uint16_t rsp_len;
  uint8_t[256] p_rsp;
};