/* Copyright (c) 2017, The Linux Foundation. All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are
* met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above
*       copyright notice, this list of conditions and the following
*       disclaimer in the documentation and/or other materials provided
*       with the distribution.
*     * Neither the name of The Linux Foundation nor the names of its
*       contributors may be used to endorse or promote products derived
*       from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
* ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
* BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
* OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
* IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*/

package vendor.qti.hardware.wifi.supplicant@1.0;


import android.hardware.wifi.supplicant@1.0::ISupplicantNetwork;
import android.hardware.wifi.supplicant@1.0::ISupplicantStaNetworkCallback;
import android.hardware.wifi.supplicant@1.0::ISupplicantStaNetwork;
import android.hardware.wifi.supplicant@1.0::types;


/**
 * Vendor StaNetwork Interface extend to wifi.Supplicant@1.0 ISupplicantStaNetwork
 */
interface ISupplicantVendorStaNetwork extends ISupplicantStaNetwork {
  /** Possble mask of values for VendorKeyMgmt param. */
  enum VendorKeyMgmtMask : uint32_t {
    FILS_SHA256 = 1 << 18,
    FILS_SHA384 = 1 << 19,
  };

  /** Possble mask of values for VendorAuthAlg param. */
  enum VendorAuthAlgMask : uint32_t {
    FILS_SK = 1 << 5,
  };

  /**
   * Enable EAP ERP for this network.
   *
   * @param enable true to set, false otherwise.
   * @return status Status of the operation.
   *         Possible status codes:
   *         |SupplicantStatusCode.SUCCESS|,
   *         |SupplicantStatusCode.FAILURE_UNKNOWN|,
   *         |SupplicantStatusCode.FAILURE_NETWORK_INVALID|
   */
  setEapErp(bool enable) generates (SupplicantStatus status);

  /**
   * Configure Sim number for eap-proxy
   */
  setSimNumber(uint32_t sim_num) generates (SupplicantStatus status);
};
