/* Copyright (c) 2018, The Linux Foundation. All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are
* met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above
*       copyright notice, this list of conditions and the following
*       disclaimer in the documentation and/or other materials provided
*       with the distribution.
*     * Neither the name of The Linux Foundation nor the names of its
*       contributors may be used to endorse or promote products derived
*       from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
* ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
* BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
* OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
* IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*/

package vendor.qti.hardware.wifi.supplicant@2.0;

import android.hardware.wifi.supplicant@1.0::types;

/* Vendor P2P Iface Callback interface */

interface ISupplicantVendorP2PIfaceCallback {

  /* Possible set of values for Information Element Type */

   enum InfoElementType :uint8_t {
        WSC_VENDOR,
        MIRRORLINK
   };

  /**
   * Used to indicate that a P2P device has been found.
   *
   * @param srcAddress MAC address of the device found. This must either
   *        be the P2P device address or the P2P interface address.
   * @param p2pDeviceAddress P2P device address.
   * @param primaryDeviceType Type of device. Refer to section B.1 of Wifi P2P
   *        Technical specification v1.2.
   * @param deviceName Name of the device.
   * @param configMethods Mask of WPS configuration methods supported by the
   *        device.
   * @param deviceCapabilities Refer to section 4.1.4 of Wifi P2P Technical
   *        specification v1.2.
   * @param groupCapabilites Refer to section 4.1.4 of Wifi P2P Technical
   *        specification v1.2.
   * @param wfdDeviceInfo WFD device info as described in section 5.1.2 of WFD
   *        technical specification v1.0.0.
   */
  oneway onR2DeviceFound(
      MacAddress srcAddress, MacAddress p2pDeviceAddress,
      uint8_t[8] primaryDeviceType, string deviceName,
      bitfield<WpsConfigMethods> configMethods, uint8_t deviceCapabilities,
      bitfield<P2pGroupCapabilityMask> groupCapabilities, uint8_t[6] wfdDeviceInfo,uint8_t[2] wfdR2DeviceInfo);

  /**
   * Used to indicate that a P2P device with some addition IEs has been found.
   *
   * @param info Vendor Extension Info as described in Section 12 of WSC
   *        specification version 2.0.4
   * @param type Vendor Extension Attribute for identification
   *
   */
  oneway onVendorExtensionFound(vec<uint8_t> info, bitfield<InfoElementType> type);
};
