/* Copyright (c) 2018, The Linux Foundation. All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are
* met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above
*       copyright notice, this list of conditions and the following
*       disclaimer in the documentation and/or other materials provided
*       with the distribution.
*     * Neither the name of The Linux Foundation nor the names of its
*       contributors may be used to endorse or promote products derived
*       from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
* ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
* BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
* OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
* IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*/

package vendor.qti.hardware.wifi.supplicant@2.0;


import vendor.qti.hardware.wifi.supplicant@2.0::ISupplicantVendorIface;
import android.hardware.wifi.supplicant@1.0::types;
import vendor.qti.hardware.wifi.supplicant@2.0::ISupplicantVendorP2PIfaceCallback;

/* Vendor P2PIface HAL interface*/

interface ISupplicantVendorP2PIface extends @2.0::ISupplicantVendorIface{

  /**
   * Register for P2P vendorcallbacks from this interface.
   *
   * These callbacks are invoked for events that are specific to this interface.
   * Registration of multiple vendor callback objects is supported. These objects
   * must be automatically deleted when the corresponding client process is dead or
   * if this interface is removed.
   *
   * @param callback An instance of the |ISupplicantVendorP2PIfaceCallback| HIDL
   *        interface object.
   * @return status Status of the operation.
   *         Possible status codes:
   *         |SupplicantStatusCode.SUCCESS|,
   *         |SupplicantStatusCode.FAILURE_UNKNOWN|,
   *         |SupplicantStatusCode.FAILURE_IFACE_INVALID|
   */
  registerVendorCallback(ISupplicantVendorP2PIfaceCallback callback)
      generates (SupplicantStatus status);

/*
   * Set Wifi Display device info.
   *
   * @param info WFDR2 device info as described in section 5.1.12 of WFD technical
   *        specification v2.0.0.
   * @return status Status of the operation.
   *         Possible status codes:
   *         |SupplicantStatusCode.SUCCESS|,
   *         |SupplicantStatusCode.FAILURE_UNKNOWN|,
   *         |SupplicantStatusCode.FAILURE_IFACE_INVALID|
   */
  setWfdR2DeviceInfo(uint8_t[4] info) generates (SupplicantStatus status);

/*
   * Set Vendor extension attributes in WSC IE
   *
   * @param info WFDR2 device info as described in section 12 of WSC technical
   *        specification v2.0.4
   * @return status Status of the operation.
   *         Possible status codes:
   *         |SupplicantStatusCode.SUCCESS|,
   *         |SupplicantStatusCode.FAILURE_UNKNOWN|,
   *         |SupplicantStatusCode.FAILURE_IFACE_INVALID|
   */
  setVendorInfoElement(vec<uint8_t> ie, bitfield<InfoElementType> type)
                generates (SupplicantStatus status);
};
